SELECT 'Running test stateless/02343_aggregation_pipeline.sql from pid=1726' 
CREATE TABLE test_01193_18429.table_9_715 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT sum(x) FROM replicated_with_sampling SAMPLE 1/2;
SELECT formatReadableTimeDelta(NULL, NULL);
SELECT space(-3::Int32), length(space(-3::Int32));
INSERT INTO test_uvxkjt6e.t (a) VALUES
WITH test1 AS (SELECT number-1 as n FROM numbers(42)) SELECT max(n+1)+1 z FROM test1 join test1 x using n having z - 1 = (select min(n-1)+41 from test1) + 2;
SELECT 'xn--9t4b11yi5a.com' AS ascii, idnaDecode(ascii) AS unicode, idnaEncode(unicode) AS original, tryIdnaEncode(unicode) AS original_try;
CREATE TABLE test_63614527485F735E603B236C3F3E462927443D4068506D3E7E4E6030754B49324C31286366287A30(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_1_937 VALUES 
SELECT _shard_num AS shard_num, sum(1) as rows FROM remote('127.{1,2}', system, one) GROUP BY shard_num ORDER BY shard_num;
INSERT INTO test_01193_18429.table_7_185 VALUES 
SELECT toTypeName(sumCount(v)), sumCount(v) FROM ( SELECT v FROM ( SELECT '9007199254740992'::Nullable(UInt64) AS v UNION ALL SELECT '1'::Nullable(UInt64) AS v UNION ALL SELECT '1'::Nullable(UInt64) AS v ) ORDER BY v );
CREATE TABLE test_01193_18429.table_10_670 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_315A46612C4C3F2E73274C693C5136757B2F2856404E3A767D4D7D2F4A434D3C6F402E59797A5D51(x UInt8) Engine=Memory;
DROP TABLE mv_source;
INSERT INTO concurrent_mutate_mt_4 VALUES
CREATE TABLE test_66275436596558642D4A63513B2769276422625C52223B3744565259693167717E5E4561692A4525(x UInt8) Engine=Memory;
CREATE TABLE test_01600.derived2 (`id2` UInt64, `d2` UInt64, `value2` UInt64) ENGINE = MergeTree PARTITION BY d2 ORDER BY (id2, d2) SETTINGS index_granularity = 40648, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 11646, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 232734814, index_granularity_bytes = 11098476, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 74477, primary_key_compress_block_size = 15220
CREATE OR REPLACE FUNCTION 02101_test_function AS x -> x + 2;
CREATE TABLE test_01193_18429.table_4_44 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select array, d1, a1, a2, a3, a4, a5, a6, joined from aliases_test array join a2 as joined;
SELECT COUNT() FROM bloom_filter_array_types_test WHERE has(date, toDate('1970-01-02'));
SELECT dictGetUInt64('01280_db.ssd_dict', 'a', tuple('1', toInt32(3)));
ALTER TABLE minmax_idx ADD INDEX idx2 u64 + i32 TYPE minmax GRANULARITY 10;
SELECT 'clickhouse' AS s1, 'mouse' AS s2, levenshteinDistance(s1, s2);
CREATE TABLE test_4458505731776E2B52792B48684A596445713B3067213B5B347171277B37454C6727473F26522364(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS test_table_string;
SELECT multiIf((number % 2) = 0, toUInt32(1), (number % 3) = 0, toUInt8(2), toFloat64(3)) FROM system.numbers LIMIT 10;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (6 < 80 AND 70 > 0 ? 6 : 0)), throwIf(last != (6 < 80 AND 70 > 0 ? least(80 - 1, 6 + 70 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(80) LIMIT 6, 70);
CREATE TABLE test_574758386C577D43672847222458667B4244252744297760284D612445787B4373546E6232413C50(x UInt8) Engine=Memory;
SELECT normalizeQuery(replace(query, currentDatabase(), 'default')) FROM system.query_log WHERE initial_query_id = 'hddnpznjmt foo' AND type != 'QueryStart' ORDER BY event_time_microseconds
CREATE TABLE test_01193_18429.table_1_302 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select sumMap(sMap), sumMapMerge(aMap) from test_smt;
SELECT hasColumnInTable(NULL, NULL);
CREATE DATABASE IF NOT EXISTS test_9d01u42t 
SELECT substring(cast('abcdefgh' AS FixedString(8)), materialize(2), -2);
SELECT toInt64(1), bitPositionsToArray(toInt64(1));
CREATE TABLE shard_0.to (`x` UInt32) ENGINE = ReplicatedMergeTree(concat('/clickhouse/tables/to_', currentDatabase()), '0') ORDER BY x SETTINGS old_parts_lifetime = 1, max_cleanup_delay_period = 1, cleanup_delay_period = 1, index_granularity = 55138, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 119, merge_max_block_size = 7311, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 9234099017, index_granularity_bytes = 3630046, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 28067, primary_key_compress_block_size = 22551
CREATE DATABASE IF NOT EXISTS test_q0zk7m4c 
drop table t22;
SELECT toDayOfMonth(toDateTime(1412106600), 'Asia/Tokyo');
SELECT isZeroOrNull(NULL);
CREATE TABLE test_217E7A376C447E66625A402552222475226F204C2866392F554C236C4C7A477824414524604B6678(x UInt8) Engine=Memory;
SELECT 81,toFixedString('Hello', 10), bin(bitShiftLeft(toFixedString('Hello', 10), 81));
CREATE DATABASE IF NOT EXISTS test_5wdh94f5 
SELECT 'Running test stateless/01601_custom_tld.gen.sql from pid=1715' 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), N != toInt32(-1) as r FORMAT CSV;
CREATE TABLE IF NOT EXISTS left_table (`id` UInt64, `val_left` String) ENGINE = ReplacingMergeTree ORDER BY id SETTINGS index_granularity = 9961, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 31, merge_max_block_size = 19087, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 28226842, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 93570, primary_key_compress_block_size = 43248
CREATE TABLE test_01193_18429.table_5_817 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT DISTINCT s FROM remote('127.0.0.{1,2}', currentDatabase(), data) ORDER BY x + y, s;
CREATE TABLE test_202262576F39683E746E393E575539512D6E6342585B5866383A5B4D485272416B2F2B65642A2940(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_5_385 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT toFloat64(0.999999999999999999) as x, toDecimal128(x, 18), toDecimal128(-x, 18);
SELECT CASE WHEN (number % 2) = 0 THEN toFloat32(1) WHEN (number % 3) = 0 THEN toUInt8(2) ELSE toUInt32(3) END FROM system.numbers LIMIT 10;
SELECT CAST(bitShiftLeft(toUInt64(1), 35) AS DateTime64(3, 'Asia/Istanbul'));
CREATE TABLE table3 (`column3` String) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 42343, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 16845, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 3189745394, index_granularity_bytes = 14994632, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 89723, primary_key_compress_block_size = 9097
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (91 < 9 AND 35 > 0 ? 91 : 0)), throwIf(last != (91 < 9 AND 35 > 0 ? least(9 - 1, 91 + 35 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(9) LIMIT 91, 35);
SELECT quantilesExactWeighted(1, 0.001, 0.01, 0.05, 0.9, 0.2, 0.3, 0.6, 0.5, 0.4, 0.7, 0.8, 0.1, 0.95, 0.99, 0.999, 0, 0.5, 0.3, 0.4)(x, 1) FROM (SELECT number AS x FROM system.numbers LIMIT 1001);
CREATE TABLE test_01193_18429.table_3_436 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO r6 SELECT 92 % 10 = 6 ? 92 - 1 : 92
SELECT -34e+2_1;
SELECT * FROM system.dictionaries FORMAT Null
CREATE DATABASE IF NOT EXISTS test_wlzbfu9z 
SELECT `id`, `event_date`, `priority`, `description` FROM `test_i8bpsqth`.`report`
CREATE DATABASE IF NOT EXISTS test_ztlamrp4 
CREATE TABLE test_7D57357050796A3434555B4C644375725845446B65407D7853724170253A702E683E4C7A5A2A7055(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_6_817 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt16(1), toInt16(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toFloat64(3), toFloat64(3)] END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_3_701 VALUES 
CREATE DATABASE IF NOT EXISTS test_srx54bjp 
CREATE TABLE test_3C2F206E5B3F4E676053357447597D7C532F2A66762744656A51644D576C406D296A5B3669624E57(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_3_209 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE table2 AS numbers(5);
SELECT 'Running test stateless/01114_mysql_database_engine_segfault.sql from pid=1705' 
CREATE TABLE test_01193_18429.table_9_120 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'Running test stateless/01935_parametrized_query_parametric_aggregate_function.sh from pid=1722' 
SELECT multiIf((number % 2) = 0, [toUInt16(1), toUInt16(2)], (number % 3) = 0, [toFloat64(2), toFloat64(3)], [toInt32(3), toInt32(3)]) FROM system.numbers LIMIT 10;
DROP USER IF EXISTS without_on_cluster_02250_ON_CLUSTER_grant_test_caxo4wnv;
CREATE TABLE t_json_3 (`id` UInt64, `data` JSON) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01825_3/t_json_3', 'r1') ORDER BY tuple() SETTINGS index_granularity = 62670, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 23381, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10105898323, index_granularity_bytes = 4558422, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 88536, primary_key_compress_block_size = 74741
SELECT age('day', materialize(toDate('2015-08-18', 'UTC')), materialize(toDate32('2015-08-19', 'UTC')), 'UTC');
DROP DATABASE IF EXISTS test_cos1h49k 
SELECT toFloat32(NULL);
DROP DATABASE IF EXISTS test_7kssh40k
SELECT intDivOrZero(toInt32(number), -1) FROM numbers(1, 10);
select x'0' == '\0';
SELECT 'Running test stateless/02810_fix_remove_dedundant_distinct_view.sql from pid=1724' 
CREATE TABLE test_01193_18429.table_5_932 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select trim(TRAILING 'x' FROM 'xxfooxx');
CREATE TABLE data_02716_2 (`v` UInt64) ENGINE = MergeTree ORDER BY v SETTINGS index_granularity = 23447, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 14, merge_max_block_size = 446, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 8062105759, index_granularity_bytes = 4141921, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 20142, primary_key_compress_block_size = 65104
SELECT sumMapWithOverflow(statusMap.goal_id, statusMap.revenue) FROM sum_map_decimal;
CREATE TABLE test_7145662B4C372B42412F30574B673443443C7B77332823575B3F4D506238554C4E3A273D6D2A3749(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_10_416 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DICTIONARY test_dictionary ( id UInt64, value Date32 ) PRIMARY KEY id SOURCE(CLICKHOUSE(TABLE 'test_table')) LAYOUT(DIRECT());
CREATE TABLE test_3D6D6938457C215B5F6F60684329376B4C5A622C4F3F593F68407E7423453A75376C61247D733535(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_nigmtpec 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (38 < 9 AND 21 > 0 ? 38 : 0)), throwIf(last != (38 < 9 AND 21 > 0 ? least(9 - 1, 38 + 21 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(9) LIMIT 38, 21);
SELECT CASE WHEN 1 THEN [col2, col3] WHEN (col1 % 3) = 0 THEN [col4, 'bar'] ELSE [col6, 'bar'] END FROM multi_if_check;
CREATE TABLE test_02908_r3_189 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_189', 'r3') ORDER BY tuple()
CREATE TABLE test_01193_18429.table_10_103 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
system sync replica projection_broken_parts_2;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 41540, 500 settings ignore_materialized_views_with_dropped_target_table=1
SYSTEM SYNC REPLICA adaptive_granularity_alter1;
SET max_threads = 20;
CREATE DATABASE IF NOT EXISTS test_ed0m4ysv 
SELECT 'Running test stateless/02865_tcp_proxy_query_packet_validation.sh from pid=1718' 
SELECT tumble(toDateTime('2020-01-09 12:00:01', 'US/Samoa'), INTERVAL '1' MONTH, 'US/Samoa');
CREATE TABLE test_01193_18429.table_5_293 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO replica_01108_4 SELECT * FROM system.numbers LIMIT 4 * 10, 10
SELECT has(b, toDecimal64(0.4, 4)) FROM decimal;
SELECT '49' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:e000::')))
DROP TABLE IF EXISTS test_kna0pcoi.`.inner.wv`
INSERT INTO test_01193_18429.table_2_65 VALUES 
SELECT na.t FROM na FULL JOIN nb USING (x);
SELECT 'Running test stateless/00807_regexp_quote_meta.sql from pid=1720' 
ALTER table test_xy UPDATE y = transform(x, (select groupArray(x) from (select x, y from updates order by x) t1), (select groupArray(y) from (select x, y from updates order by x) t2), y) WHERE 1;
INSERT INTO r7 SELECT 30 % 10 = 7 ? 30 - 1 : 30
select (date '2001-10-01' - 7) x, toTypeName(x);
CREATE TABLE test_01193_18429.table_5_914 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE DATABASE IF NOT EXISTS test_ulvwq9p9 
DROP TABLE IF EXISTS numbers500k;
CREATE TABLE test_332C353E5F234A572D5E355B276A4A2A7023444B39482622633E444C61573542632C7C636F586961(x UInt8) Engine=Memory;
DROP TABLE t2_distr;
CREATE MATERIALIZED VIEW `01851_merge_tree_mv` ENGINE = Memory AS SELECT n2, n3 FROM `01851_merge_tree`;
SELECT space(u16), length(space(u16)) FROM defaults;
SELECT extractTextFromHTML('Hello<script >World</script> goodbye');
INSERT INTO test_02908_r1_179 SELECT rand64() FROM numbers(5);
CREATE TABLE test_786E2B7B7C474E32543A6F7168286B7D703C7A6F635E3524372C6D6E5B385524493E34635937537E(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_2_308 VALUES 
DROP TABLE bf_ngrambf_map_values_test;
CREATE TABLE test_01193_18429.table_3_2 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP TABLE null_subcolumns;
CREATE DATABASE IF NOT EXISTS test_vjtsh5bi 
INSERT INTO test_01193_18429.table_1_487 VALUES 
OPTIMIZE TABLE data_vertical FINAL;
CREATE TABLE test_01193_18429.table_7_183 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT * FROM bloom_filter_idx WHERE multiSearchAny(s, ['data', 'base'])
SELECT t1_id, t1.value, t2_id, t2.value, t3_id, t3.value FROM test_table_join_1 AS t1 RIGHT JOIN test_table_join_2 AS t2 ON (t1.id AS t1_id) = (t2.id AS t2_id) LEFT JOIN test_table_join_3 AS t3 ON t2_id = (t3.id AS t3_id);
INSERT INTO src_4 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 23
DROP TABLE IF EXISTS 02416_test_memory;
DROP DATABASE IF EXISTS test_b34zztuf 
SELECT multiIf((number % 2) = 0, toUInt16(1), (number % 3) = 0, toUInt8(2), toUInt64(3)) FROM system.numbers LIMIT 10;
select 3 = positionUTF8(materialize('ÃÂ°ÃÂ±ÃÂ²'), 'ÃÂ²') from system.numbers limit 10;
select * from distr_table order by x settings additional_table_filters={'distr_table' : 'length(y) < 3'};
CREATE TABLE test_203647656359536D703A345D29762376776F737D462E343B41257E4A596261472F22286F36377D5E(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_9_579 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), toInt16(-1) != N as r FORMAT CSV;
SELECT toInt16(0) AS x, toDecimal128(1, 0) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
INSERT INTO test_01193_18429.table_3_497 VALUES 
CREATE TABLE constraint_on_low_cardinality_nullable_type ( `id` LowCardinality(Nullable(UInt64)), CONSTRAINT `c0` CHECK `id` = 3 ) ENGINE = TinyLog;
DROP TABLE IF EXISTS HASH_TEST_INSERT;
SELECT age('second', toDateTime64('2023-03-01 19:18:36.999003', 6, 'UTC'), toDateTime64('2023-03-01 19:18:41.999002', 6, 'UTC'));
SELECT 'Running test stateless/01720_join_implicit_cast.gen.sql from pid=1720' 
CREATE DATABASE IF NOT EXISTS test_qzp6dx7n 
CREATE TABLE test_376B71284C795F7A244247427B513A2C2E5E3F607C79443942782E2B3C332A273633332F3A496F6E(x UInt8) Engine=Memory;
SELECT 'R3, R4, R5: (x == 3) AND (x <= 2) AND (x >= 2)';
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 35615, 500 settings ignore_materialized_views_with_dropped_target_table=1
INSERT INTO mt VALUES /* (-14, 1) */ 
ALTER TABLE table_with_compact_parts RENAME COLUMN value1 to renamed_value1;
SELECT s, replaceAll(s, '_', 'o') AS a, REGEXP_REPLACE(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['_.', '.']) AS s);
CREATE TABLE test_01193_18429.table_5_660 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE DATABASE IF NOT EXISTS test_jun6cymn 
select accurateCastOrDefault('2001:db8::1x', 'IPv6');
INSERT INTO test_01193_18429.table_8_776 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN toUInt16(1) WHEN (number % 3) = 0 THEN toUInt16(2) ELSE toFloat32(3) END FROM system.numbers LIMIT 10;
SELECT multiIf((number % 2) = 0, toUInt32(1), (number % 3) = 0, toUInt8(2), toUInt32(3)) FROM system.numbers LIMIT 10;
SELECT normalizeQuery('SELECT 1 AS xyz1');
SELECT 'Running test stateless/01944_insert_partition_by.sql from pid=1724' 
INSERT INTO test_02908_r1_214 SELECT rand64() FROM numbers(5);
SELECT argMax(number, now()) FROM (Select number as number from numbers(10, 10000)) settings max_threads=1, max_block_size=20000;
CREATE DATABASE IF NOT EXISTS test_6gycarte 
select X.*, s.* from X inner join (select * from X) as s on X.x_b = s.x_b order by X.id, X.x_a, X.x_b, s.id, s.x_a, s.x_b;
desc format(CSV, '"[null, 1]"\n"[null]"');
CREATE TABLE test_01193_18429.table_4_852 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
insert into test_array_joins (id,arr_1, arr_2, arr_3, arr_4) SELECT number,array(randomPrintableASCII(3)),array(randomPrintableASCII(3)),array(randomPrintableASCII(3)),array(randomPrintableASCII(3)) from numbers(1000);
CREATE DATABASE IF NOT EXISTS test_9b0tnhsz 
CREATE DATABASE IF NOT EXISTS test_6a26v5p2 
select case 1::Nullable(Int32) when 1 then 123 else 0 end;
SELECT xxHash64(toUInt32(3)) = toUInt64(13361037350151369407);
SELECT sum(-8000000000000000000) FROM remote('127.0.0.{1,2,3,4,5,6,7,8,9,10,11}', system.one);
DROP DATABASE IF EXISTS test_nepsv6hn 
SELECT 'Running test stateless/02810_row_binary_with_defaults.sql from pid=1724' 
INSERT INTO test_01193_18429.table_7_84 VALUES 
DROP DICTIONARY IF EXISTS test_dictionary_load_factor;
SELECT count() FROM system.mutations WHERE database = 'test_mfmr17m6' AND table = 'kill_mutation' and is_done = 0
CREATE TABLE test_01193_18429.table_10_121 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select '-- ';
SELECT count() FROM t_cnf_fuzz WHERE (c3 AND c5 AND c7 AND (NOT c1) AND c4) OR (c5 AND (NOT c6)) OR (c8 AND (NOT c4) AND (NOT c9) AND c7) OR ((NOT c5) AND (NOT c1) AND c3) OR (c6 AND (NOT c0)) OR ((NOT c3) AND (NOT c1)) OR ((NOT c3) AND c7) OR ((NOT c9) AND c7 AND c0 AND (NOT c7)) OR (c9) OR ((NOT c2) AND c4) SETTINGS convert_query_to_cnf = 1
INSERT INTO test_01193_18429.table_9_693 VALUES 
ALTER TABLE src DROP PARTITION ID 'all';
SELECT multiIf(1, ['foo', 'bar'], (col1 % 3) = 0, ['foo', 'bar'], [col6, 'bar']) FROM multi_if_check;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (47 < 22 AND 65 > 0 ? 47 : 0)), throwIf(last != (47 < 22 AND 65 > 0 ? least(22 - 1, 47 + 65 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(22) LIMIT 47, 65);
kill mutation where database=currentDatabase() and table='rmt' and mutation_id='0000000002'
select 1 = position('abc', materialize('ab')) from system.numbers limit 10;
SELECT round(quantileDD(0.02, 0.99)(number), 2) FROM numbers(500);
INSERT INTO persons_00825 VALUES 
SELECT arrayEnumerateUniq([NULL], [NULL], [NULL]);
insert into function file('02906.orc', 'ORC') select number::Int64 as int64_column, number::String as string_column, number::Float64 as float64_column, cast(if(number % 10 = 0, tuple(null, null, null), tuple(number::String, number::Float64, number::Int64)) as Tuple(a Nullable(String), b Nullable(Float64), c Nullable(Int64))) as tuple_column, cast(if(number % 10 = 0, array(tuple(null, null, null)), array(tuple(number::String, number::Float64, number::Int64))) as Array(Tuple(a Nullable(String), b Nullable(Float64), c Nullable(Int64)))) as array_tuple_column, cast(if(number % 10 = 0, map(number::String, tuple(null, null, null)), map(number::String, tuple(number::String, number::Float64, number::Int64))) as Map(String, Tuple(a Nullable(String), b Nullable(Float64), c Nullable(Int64)))) as map_tuple_column from numbers(100);
DROP TABLE IF EXISTS t_async_insert_table_function;
CREATE TABLE test_01193_18429.table_9_65 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE INDEX idx_tab3_2 ON tab3 (col3,col4);
CREATE INDEX idx_tab3_5 ON tab3 (col0 DESC,col1);
set format_custom_escaping_rule='CSV', format_custom_field_delimiter='<field_delimiter>', format_custom_row_before_delimiter='<row_before_delimiter>', format_custom_row_after_delimiter='<row_after_delimiter>', format_custom_row_between_delimiter='<row_between_delimiter>', format_custom_result_before_delimiter='<result_before_delimiter>', format_custom_result_after_delimiter='<result_after_delimiter>';
DROP TABLE IF EXISTS test_distributed_2;
CREATE TABLE test_01193_18429.table_6_849 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
ALTER TABLE partslost_0 DROP INDEX idx;
INSERT INTO test_01193_18429.table_6_157 VALUES 
INSERT INTO test_01193_18429.table_7_619 VALUES 
CREATE DICTIONARY flat_dictionary (`id` UInt64, `value_en` String, `value_ru` String) PRIMARY KEY id SOURCE(CLICKHOUSE(HOST 'localhost' PORT 9000 USER 'default' PASSWORD '[HIDDEN]' TABLE 'dictionary_source_view')) LIFETIME(MIN 1 MAX 1000) LAYOUT(FLAT())
CREATE DATABASE IF NOT EXISTS test_bhpa11uc 
INSERT INTO mt VALUES /* (44, 2) */ 
INSERT INTO xxxx_null SELECT '2021-11-11 00:00:00';
SELECT cond_non_constant_nullable ? then_constant : constant_null AS res FROM nullable_00431;
WITH tuple(3,4,5) AS x SELECT x.1::Int32;
CREATE TABLE test_01193_18429.table_7_518 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT quantilesIfArray(0.5, 0.9)([1, NULL], [1, 0]) AS `x` FROM numbers(3)
create table data_01555 (key Int) Engine=Null();
SELECT age('day', toDateTime('2015-08-18 00:00:00', 'UTC'), toDate32('2015-08-19', 'UTC'), 'UTC');
SELECT replicate([NULL],[NULL]);
select multiMatchAny(materialize('123'), materialize(['1']));
SELECT toDecimal32OrNull(NULL);
insert into test_rows_wide_part select 1,arrayJoin(range(10000));
CREATE TABLE test_65423F48542A2842466C52595B64594F6174482060484022372642607E51557B6F342A5C4960475A(x UInt8) Engine=Memory;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 29792, 500 settings ignore_materialized_views_with_dropped_target_table=1
DROP TABLE test54378;
SELECT DISTINCT toTypeName(o) FROM t_json_10;
INSERT INTO rollup_having VALUES 
CREATE TABLE test_01193_18429.table_2_461 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_4_984 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_76407B5D6F3358717573375B2C7344363D403B56554C544B3B74577279547D3A2A4E614757283C60(x UInt8) Engine=Memory;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (54 < 2 AND 95 > 0 ? 54 : 0)), throwIf(last != (54 < 2 AND 95 > 0 ? least(2 - 1, 54 + 95 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(2) LIMIT 54, 95);
CREATE DATABASE IF NOT EXISTS test_dqvgv3bv 
insert into t1 select number % 4, toString(number) from numbers(1000, 1000);
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), N < toInt16(-1) as r FORMAT CSV;
SELECT 'Running test stateless/00818_join_bug_4271.sql from pid=1722' 
CREATE DATABASE IF NOT EXISTS test_tl5q829k 
SELECT t1.time as talias FROM t1 JOIN t2 ON talias = t2.time_alias;
drop table graphite;
CREATE TABLE test_6A7C6A37492E663529784054454D67257540393F4B2D493067554C48707838397A7C28476C2D494D(x UInt8) Engine=Memory;
SELECT * FROM system.numbers_mt WHERE number = 1000000 LIMIT 1 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (15 < 30 AND 28 > 0 ? 15 : 0)), throwIf(last != (15 < 30 AND 28 > 0 ? least(30 - 1, 15 + 28 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(30) LIMIT 15, 28);
SELECT SUM(toUInt64(value1)) > 1725 FROM concurrent_mutate_mt_1
create table test_02312 (x Tuple(a UInt32, b UInt32)) engine=File(ORC);
select hex(sipHash64Keyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0)));
select arrayPopBack(['a', 'b', 'c']);
CREATE TABLE null_subcolumns (`id` UInt32, `n` Nullable(String)) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 63780, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 19567, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1933759272, index_granularity_bytes = 22966834, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 12796, primary_key_compress_block_size = 41114
SELECT materialize('aÃÂb') LIKE 'a_b';
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 6772, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT count() FROM lc_nullable WHERE has(u64, NULL);
WITH toDate('2021-04-14') AS date_value, toDate32('2021-04-14') AS date_32_value, toDateTime('2021-04-14 11:22:33') AS date_time_value, toDateTime64('2021-04-14 11:22:33', 3) AS date_time_64_value SELECT dateName('weekday', date_value), dateName('weekday', date_32_value), dateName('weekday', date_time_value), dateName('weekday', date_time_64_value);
INSERT INTO test_01193_18429.table_1_350 VALUES 
ALTER TABLE minmax_idx ADD INDEX idx (i64, u64 * i64) TYPE minmax GRANULARITY 1 SETTINGS mutations_sync = 2;
WITH map('1', 2, '3', 4) AS m SELECT m['3'];
SELECT L2SquaredNorm([3., 4., 5.]);
CREATE TABLE test_562674753775274E3F5C262D41406A406D637329383C77644029635061787A763345766A3B787B5F(x UInt8) Engine=Memory;
CREATE INDEX idx_tab4_5 ON tab4 (col1,col0 DESC);
create table data_01513 (key String) engine=MergeTree() order by key;
SELECT countDigits(toInt8(127)), countDigits(toInt8(-128)), countDigits(toUInt8(255)), countDigits(toInt16(32767)), countDigits(toInt16(-32768)), countDigits(toUInt16(65535)), countDigits(toInt32(2147483647)), countDigits(toInt32(-2147483648)), countDigits(toUInt32(4294967295)), countDigits(toInt64(9223372036854775807)), countDigits(toInt64(-9223372036854775808)), countDigits(toUInt64(18446744073709551615));
SELECT toDateTime('2000-01-01 00:00:00', 'Asia/Istanbul') AS x, toDate('2000-01-02') AS y, x > y ? x : y AS z;
SELECT 'Running test stateless/01393_benchmark_secure_port.sh from pid=1724' 
CREATE WINDOW VIEW test_01048.wv ENGINE Memory AS SELECT count(a) AS count FROM test_01048.mt GROUP BY plus(a, b) as _type, tumble(timestamp, INTERVAL '1' SECOND) AS wid;
DROP TABLE IF EXISTS t10;
CREATE TABLE test1_00550 ( id String ) ENGINE = StripeLog;
drop table if exists test_dist
GRANT SELECT ON system.one TO session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_plaintext_password_no_profiles_no_roles;
CREATE TABLE test_6D3E4E69547E3E3A78247B223B624B477D35787746502026524446794721532A57715656505A687A(x UInt8) Engine=Memory;
CREATE TABLE test_4A73383A50565B3645494B5C325F6D4B5D5A2B25386C3A24725423342C5944744C2F27262544602C(x UInt8) Engine=Memory;
SELECT toUInt32(0) AS x, toInt8(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
INSERT INTO test_01193_18429.table_8_61 VALUES 
SELECT * FROM t2 INNER JOIN rdb ON rdb.key == t2.k ORDER BY rdb.key;
INSERT INTO 02763_merge_log_2 VALUES 
INSERT INTO dst_1 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 16
EXPLAIN SYNTAX SELECT INTERVAL '-1 SECOND 2 MINUTE -3 MONTH 1 YEAR';
SELECT first_value_respect_nullsMerge(t) FROM (Select first_value_respect_nullsState(number) as t FROM numbers(0));
INSERT INTO test_01193_18429.table_10_764 VALUES 
select 3 = position('abcdefgh', materialize('cdefg')) from system.numbers limit 129;
select 0 = multiSearchAnyCaseInsensitiveUTF8(materialize('ÃÂÃÂ¹ÃÂ°ÃÂ´ÃÂ·ÃÂ§ÃÂ¼ÃÂÃÂÃÂ¨ÃÂ¹ÃÂÃÂÃÂÃÂÃÂÃÂ¸ÃÂ³ÃÂÃÂ¨'), ['ÃÂÃÂ¢ÃÂ¥ÃÂµÃÂÃÂ ÃÂÃÂÃÂÃÂ£ÃÂÃÂ³ÃÂ°ÃÂ´ÃÂÃÂÃÂ§ÃÂ', 'ÃÂ¶ÃÂ¿ÃÂ¡ÃÂÃÂÃÂ©ÃÂÃÂ»ÃÂÃÂ»ÃÂ¸ÃÂ¾ÃÂºÃÂÃÂ»ÃÂ¦ÃÂÃÂ²ÃÂÃÂ', 'ÃÂÃÂ ÃÂÃÂÃÂ ÃÂÃÂ¥', 'ÃÂºÃÂ³ÃÂ¢ÃÂÃÂ°ÃÂ¨ÃÂÃÂ°ÃÂÃÂ¥ÃÂ§ÃÂÃÂÃÂ¼ÃÂ¡ÃÂÃÂ¼', 'ÃÂÃÂ¼ÃÂ¸ÃÂÃÂ¹', 'ÃÂ¶ÃÂÃÂ ÃÂ±ÃÂ¤ÃÂ©ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ¾ÃÂÃÂÃÂÃÂ½ÃÂÃÂÃÂ½ÃÂÃÂÃÂÃÂ·ÃÂ¹ÃÂÃÂºÃÂÃÂ', 'ÃÂ³ÃÂ¸ÃÂÃÂ´ÃÂ°ÃÂ´ÃÂºÃÂ±ÃÂ¶ÃÂ¥ÃÂÃÂÃÂÃÂ»ÃÂÃÂÃÂÃÂ¨ÃÂ°ÃÂ¹', 'ÃÂ´ÃÂ²ÃÂÃÂÃÂ¹ÃÂÃÂÃÂ³ÃÂÃÂÃÂ¢ÃÂ·ÃÂ', 'ÃÂ¢ÃÂÃÂºÃÂ¼ÃÂ°ÃÂÃÂÃÂ¤', 'ÃÂ¨ÃÂµÃÂ°']) from system.numbers limit 10;
SELECT length(haystack), length(matches), arrayReduce('sum', arrayMap((x) -> length(x), matches)) FROM ( SELECT repeat('abcdefghijklmnopqrstuvwxyz', number * 10) AS haystack, extractGroups(haystack, '(\\w)') AS matches FROM numbers(3) );
select makeDate(cast(-1980.1 as Float32), 9);
INSERT INTO vec2 VALUES 
CREATE DATABASE IF NOT EXISTS test_x1wdl4to 
CREATE DATABASE IF NOT EXISTS test_12je0knr 
SELECT dictGet('02176_test_complex_key_dictionary', 'value', tuple(toUInt64(0), '0'));
SELECT uniqHLL12([NULL],[NULL]);
select max(primary) from primary;
CREATE INDEX idx_tab2_1 ON tab2 (col1 DESC,col4 DESC);
SELECT CASE WHEN (number % 2) = 0 THEN toUInt8(1) WHEN (number % 3) = 0 THEN toInt32(2) ELSE toInt64(3) END FROM system.numbers LIMIT 10;
SELECT number, anyIf('Hello', arrayJoin([1, NULL, 0]) = 0) FROM numbers(2) GROUP BY number ORDER BY number;
SELECT multiIf((number % 2) = 0, toInt64(1), (number % 3) = 0, toInt64(2), toInt32(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_5_601 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_516E7A5E654A6523466C4063362E753166685124285124492227564A4E5E536036393D4667713347(x UInt8) Engine=Memory;
select exp2(1) = 2;
SELECT dictGet('hashed_dictionary', 'value', toUInt64(1));
INSERT INTO test_01193_18429.table_7_771 VALUES 
CREATE TABLE test_01193_18429.table_8_957 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP DATABASE IF EXISTS test_2nx0xawr 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (2 < 39 AND 66 > 0 ? 2 : 0)), throwIf(last != (2 < 39 AND 66 > 0 ? least(39 - 1, 2 + 66 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(39) LIMIT 2, 66);
CREATE TABLE test_01193_18429.table_9_254 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_50725F545647606C4464557B597645326C62515B4C47653E5B774B205A384A266836327B56532557(x UInt8) Engine=Memory;
INSERT INTO r9 SELECT 62
DROP TABLE IF EXISTS capnp_nullable
SELECT '--- TinyLog ---';
CREATE DATABASE IF NOT EXISTS test_dghky1rz 
INSERT INTO test_01193_18429.table_6_631 VALUES 
SELECT addWeeks(NULL);
INSERT INTO r6 SELECT 61
SELECT 'Running test stateless/02706_kolmogorov_smirnov_test_scipy.sh from pid=1718' 
SELECT 'Running test stateless/01927_query_views_log_matview_exceptions.sh from pid=1714' 
select '==';
CREATE TABLE test_4225287C3854704B57697544652E5E4D4130626C546E6062705531757069257132695E6B77655D4A(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_jtzzj7au 
CREATE DATABASE IF NOT EXISTS test_94bmxy6u 
SELECT 'Running test stateless/00060_date_lut.sql from pid=1720' 
INSERT INTO dst_6 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 40
SELECT arrayEnumerateDenseRanked([], []);
SELECT 'Running test stateless/01299_alter_merge_tree.sql from pid=1720' 
ALTER TABLE concurrent_alter_column ADD COLUMN c347 DOUBLE;
SET system_events_show_zero_values = 1;
SELECT 'Running test stateless/00804_test_custom_compression_codecs.sql from pid=1726' 
SELECT t1.a, t1.val, t2.a, t2.val FROM t1 FULL JOIN t2 ON t1.a IS NOT DISTINCT FROM t2.a AND t1.b < 2 OR t1.a == t2.a ORDER BY t1.val NULLS FIRST, t2.val NULLS FIRST ;
CREATE DATABASE IF NOT EXISTS test_kzm1ncg6 
INSERT INTO test_01193_18429.table_10_267 VALUES 
ALTER TABLE concurrent_alter_detach_1 MODIFY COLUMN value1 UInt32 SETTINGS replication_alter_partitions_sync=0
select MAKEDATE(1980, 1, 1);
SELECT parseDateTimeBestEffortUS(NULL, NULL, NULL);
CREATE DATABASE IF NOT EXISTS test_5zcz7m8o 
create table tab_00386 (a Int8, b String, c Tuple(Int8), d Tuple(Tuple(Int8)), e Tuple(Int8, String), f Tuple(Tuple(Int8, String))) engine = MergeTree order by (c) partition by a
SELECT count() FROM merge(currentDatabase(), '^numbers\\d+$') WHERE _table = 'numbers2';
CREATE TABLE test_01193_18429.table_1_126 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT * FROM file;
DROP DATABASE IF EXISTS test_hgv5khkn 
SELECT max(n*n * 2), max(2 * n*n), max(n*n / 2), max(1 / n*n) FROM (SELECT number n FROM numbers(10));
select count() from tst final where val>0;
INSERT INTO src_14 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 92
DROP DATABASE IF EXISTS test_den4xc99 
CREATE TABLE test_59274F4077664F6876623A3F6A59366738314B65202F22692E334D5840447229377C2A2D604D752C(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_10_518 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
with (select number from numbers(10) intersect select 5) as a select a except select 1;
CREATE TABLE test_02908_r3_209 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_209', 'r3') ORDER BY tuple()
DROP TABLE t_mutations_nondeterministic SYNC;
select * from 02681_undrop_no_uuid_on_cluster order by id;
SELECT arrayShuffle(materialize([[1,2,3,4],[-1,-2,-3,-4],[10,20,30,40],[100,200,300,400,500,600,700,800,900],[2,4,8,16,32,64]]), 0xbad_cafe);
insert into merge_tree values 
CREATE TABLE test_01193_18429.table_10_453 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_5949792A234A6C56645375742F7E51434B2A532F36225E4428675664755F21342F38394730504C34(x UInt8) Engine=Memory;
CREATE TABLE test_5542262328273D313F2242626F552A2C6932305C3B254F68537A38504A2D715B673439237039714E(x UInt8) Engine=Memory;
ALTER TABLE concurrent_alter_add_drop_2 ADD COLUMN value1 UInt32 DEFAULT 42 SETTINGS replication_alter_partitions_sync=0
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (27 < 89 AND 46 > 0 ? 27 : 0)), throwIf(last != (27 < 89 AND 46 > 0 ? least(89 - 1, 27 + 46 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(89) LIMIT 27, 46);
CREATE TABLE test_292C46292F2A584460515F45607731732B7645356C3E365940254E432B5B7D21204A7E433674284C(x UInt8) Engine=Memory;
SELECT * FROM (SELECT 1 AS a, 'x' AS b) join (SELECT 1 as a, 'y' as b) using a;
select hasAll([Null], [Null]);
SELECT count() FROM t_cnf_fuzz WHERE (c4 AND c1) OR (c9 AND (NOT c9) AND c5) OR (c4) OR (c6 AND c9) OR (c6 AND c2 AND c7 AND c3) OR (c8) SETTINGS convert_query_to_cnf = 1
WITH 'test_distributed_2' AS `_table`, 'test_8g7ngcfb' AS `_database` SELECT `date`, `value` FROM `test_8g7ngcfb`.`test_local_2` WHERE `_table` = 'test_local_1'
SELECT arrayReverseSort(number % 2 ? emptyArrayUInt64() : range(number)) FROM system.numbers LIMIT 10;
SELECT '-- query_cache_nondeterministic_function_handling = throw';
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c4) AND (NOT c7) AND (NOT c4)) OR (c6 AND (NOT c5)) OR ((NOT c8) AND c0) OR ((NOT c0) AND (NOT c7) AND (NOT c4)) OR (c0 AND c5 AND c7) OR (c5 AND (NOT c8) AND c8 AND c5 AND c9) SETTINGS convert_query_to_cnf = 1
INSERT INTO mt VALUES /* (-37, 2) */ 
INSERT INTO FUNCTION remote('127.0.0.{1,2}', currentDatabase(), y, '[HIDDEN]', rand()) SELECT * FROM numbers(10)
CREATE TABLE select_final (`t` DateTime, `x` Int32, `string` String) ENGINE = ReplacingMergeTree PARTITION BY toYYYYMM(t) ORDER BY (x, t) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 7608, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 88262, primary_key_compress_block_size = 42167
CREATE TABLE segfault_table (`id` UInt16 CODEC(Delta(2))) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 49424, min_bytes_for_wide_part = 8555350, ratio_of_defaults_for_sparse_serialization = 0.867119312286377, replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 15544, prefer_fetch_merged_part_size_threshold = 6652114613, vertical_merge_algorithm_min_rows_to_activate = 288006, vertical_merge_algorithm_min_columns_to_activate = 15, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 21209269, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 28422, primary_key_compress_block_size = 83119
SELECT throwIf((SELECT sum(nm) FROM mv) != 53) FORMAT Null;
CREATE TABLE test_6142513B49757B6B67312F767D507D4A4A752F5E66745455516A407054787B52615926423957246D(x UInt8) Engine=Memory;
CREATE TABLE da_memory_efficient_shard (`A` Int64, `B` Int64) ENGINE = MergeTree PARTITION BY B % 2 ORDER BY A SETTINGS index_granularity = 7746, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 16405, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 706307, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 6310547, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 54939, primary_key_compress_block_size = 30450
INSERT INTO r9 SELECT 63
CREATE TABLE test_7D3163404B6E757060244C2B2E26744856732C526B26796C703A723A3D597573665F643947556C56(x UInt8) Engine=Memory;
CREATE TABLE test_206E7B7B577E3C7C224A4C4C744864255232404B43725F71457D5A4A296E666F742821364C2D2931(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_qbb0exr1 
INSERT INTO TABLE `table` FORMAT Values 
INSERT INTO r5 SELECT 59 % 10 = 5 ? 59 - 1 : 59
SELECT COUNT(*) FROM (SELECT auth_id, auth_type, client_version_major, client_version_minor, client_version_patch, interface FROM system.session_log WHERE user = '02833_HTTP_WITH_SESSION_ID_USER_25955' AND type = 'LoginSuccess' INTERSECT SELECT auth_id, auth_type, client_version_major, client_version_minor, client_version_patch, interface FROM system.session_log WHERE user = '02833_HTTP_WITH_SESSION_ID_USER_25955' AND type = 'Logout')
INSERT INTO test_01193_18429.table_5_449 VALUES 
CREATE TABLE test_01193_18429.table_1_586 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO t_sparse_s3 SELECT 10, number % 2, '' FROM numbers(24576);
select 12 as offset, 'Hello' as s, subString(bin(s), offset), bin(bitSlice(s, offset));
CREATE TABLE test_01193_18429.table_10_648 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_59bf0eef 
CREATE TABLE m ( `a` String, `f` UInt8 DEFAULT 0 ) ENGINE = Merge(currentDatabase(), '^(t1|t2)$');
CREATE TABLE test_3B447751243D52514E7E683166784A6C7227797A23524A732F403948722A785C7D47707E7C5F3D74(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_t89kb4qo 
CREATE TABLE test_366469384B5D4F724F46792E6D2535713C24427072466F35545D6E505F5F23635047723F43516571(x UInt8) Engine=Memory;
SELECT obj.key_0.key_1.key_3.key_4, obj.key_0.key_1.key_3.key_5, obj.key_0.key_1.key_3.key_6, obj.key_0.key_1.key_3.key_7 FROM t_json_12 ORDER BY obj.id
SELECT toTypeName(LAST_VALUEIfState(number, isNull(number)) RESPECT NULLS) from (SELECT if(number > 8, NULL, number) as number FROM numbers(10));
SELECT intDivOrZero(NULL, NULL);
SELECT * FROM table_with_complex_default;
DROP TABLE IF EXISTS delta_codec_for_alter;
select s.*, j.* from (select * from X) as s full join (select * from Y) as j on s.id = j.id order by s.id, s.x_a, s.x_b, j.id, j.y_a, j.y_b;
CREATE TABLE test_722E654423376B4A6D20565C4C603F4C7A777A4127204B28365E7C7254364E70497648536E387834(x UInt8) Engine=Memory;
CREATE TABLE test_new_col (`_csv` String, `csv_as_array` Array(String) ALIAS splitByChar(';', _csv), `csv_col1` String DEFAULT csv_as_array[1], `csv_col2` String DEFAULT csv_as_array[2]) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 15853, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 6547, prefer_fetch_merged_part_size_threshold = 1564331960, vertical_merge_algorithm_min_rows_to_activate = 202463, vertical_merge_algorithm_min_columns_to_activate = 77, min_merge_bytes_to_use_direct_io = 7084020347, index_granularity_bytes = 12525091, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 70858, primary_key_compress_block_size = 38343
select count() from system.query_log where type = 'QueryFinish' and not is_initial_query and startsWith(query, 'DESC') and initial_query_id = ( select distinct query_id from system.query_log where log_comment = '127.2 db.name identifier' and current_database = currentDatabase() );
CREATE TABLE IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_10 (id Int32, str String) Engine=Memory;
CREATE TABLE test_01193_18429.table_3_611 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO r2 SELECT 16
CREATE TABLE test_01193_18429.table_10_452 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select makeDate(1980, 10, 17);
INSERT INTO dst_r2 VALUES 
SELECT toDecimal32(1, 3) * toDecimal128(1, 2) x, toTypeName(x);
SELECT 'Running test stateless/01710_projection_aggregate_functions_null_for_empty.sql from pid=1713' 
SELECT 'Running test stateless/02026_storage_filelog_largefile.sh from pid=1705' 
CREATE TABLE test_01193_18429.table_3_371 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT (tuple(log_date) = tuple('2021-01-01'), log_date) FROM test_tuple_filter__fuzz_2 ORDER BY log_date;
INSERT INTO test_01193_18429.table_2_175 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toUInt64(3), toUInt64(3)] END FROM system.numbers LIMIT 10;
SELECT throwIf((SELECT sum(nm) FROM mv) != 93) FORMAT Null;
CREATE DATABASE IF NOT EXISTS test_gkn6fgtl 
select count() from ttt;
select arrayReduce('simpleLinearRegression', [0], [0]);
CREATE TABLE test_01193_18429.table_10_843 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_5C61625F4020513E7439745B29725F3E65315F73392A2D3E495F34672D53427331767C2C2A596A6B(x UInt8) Engine=Memory;
select -15 as offset, 15 as length, 'Hello' as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
SELECT hex(sipHash128('foo', 'foo', 'foo'));
select null as offset, null as s, subString(bin(s), offset), bin(bitSlice(s, offset));
SELECT 693960 AS u, toInt32(u) AS s, fromDaysSinceYearZero32(u), fromDaysSinceYearZero32(materialize(u)), fromDaysSinceYearZero32(s), fromDaysSinceYearZero32(materialize(s));
INSERT INTO test_01193_18429.table_10_431 VALUES 
SELECT * FROM tokenbf_v1_hasany_test WHERE hasAny(array, ['this is a test']) SETTINGS force_data_skipping_indices='idx_array_tokenbf_v1';
CREATE TABLE test_2D407420372A7D3D5B71632A68386479355A32737E2D4C33257625323E5F59744C4C613A62484936(x UInt8) Engine=Memory;
CREATE TABLE test_2A2B6D49403233304320635970613D637E7978223D5D72532B62445F2C3341736C6A602A593E386A(x UInt8) Engine=Memory;
CREATE TABLE test_272E555E696C2A4037285C267B4E75257450225E743A47575C6C2A237D7C695849453E7629617446(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_5_845 VALUES 
CREATE TABLE test_3B2D5D45424A72784A7B434D652A216C5C6041325F412F633462615F4B2753772A6B2734796D4E4B(x UInt8) Engine=Memory;
CREATE TABLE test_59562E4A54736437705D626146555059254F5833617B7A20656B63295D304E7A48233A783F726126(x UInt8) Engine=Memory;
SELECT t FROM sparse_tuple ORDER BY id LIMIT 5;
SELECT toDateTime('2017-10-30 08:18:19') + INTERVAL 1 DAY + INTERVAL 1 MONTH - INTERVAL 1 YEAR;
SELECT 'Running test stateless/02962_arrow_dictionary_indexes_types.sh from pid=1715' 
CREATE TABLE test_682E232B757026324E5A4E4651703770327577545E66445235292C3973642F5C46453F514A244B51(x UInt8) Engine=Memory;
SELECT cityHash64(toDecimal64(number, 9)) from numbers(297, 2);
SELECT 'Combine EXCEPT, REPLACE, APPLY transformers';
SELECT `__table1`.`key` AS `key`, `__table1`.`value` AS `value`, `__table3`.`key` AS `r.key`, `__table3`.`value` AS `r.value` FROM (SELECT `__table2`.`key` AS `key`, `__table2`.`value` AS `value` FROM `test_49nwqtsw`.`num_1` AS `__table2`) AS `__table1` GLOBAL ALL INNER JOIN `_data_10780835919418948342_5077079156270912524` AS `__table3` ON `__table1`.`key` = `__table3`.`key` ORDER BY `__table1`.`key` ASC LIMIT _CAST(10000, 'UInt64'), _CAST(10, 'UInt64') SETTINGS allow_experimental_analyzer = 1, parallel_replicas_prefer_local_join = 0, send_logs_level = 'trace', allow_experimental_parallel_reading_from_replicas = 2, max_parallel_replicas = 2, parallel_replicas_for_non_replicated_merge_tree = 1, cluster_for_parallel_replicas = 'test_cluster_one_shard_three_replicas_localhost', join_algorithm = 'full_sorting_merge'
INSERT INTO test_02908_r1_251 SELECT rand64() FROM numbers(5);
select t1.a, t3.a from t1 join t3 on t1.a = t3.a;
ALTER TABLE concurrent_alter_column ADD COLUMN c483 DOUBLE;
SELECT simpleJSONExtractBool(NULL, NULL);
DROP TABLE bloom_filter_idx3
select v, variantElement(v, 'Map(String, UInt64)') from format(TSV, 'v Variant(String, Map(String, UInt64))', '\\N\nstring\n{''a'' : 42, ''b'' : 43, ''c'' : null}\n{''c'' : 44, ''d'' : [1,2,3]}\n{''c'' : 44') format TSV;
alter table src update A = 10 where 1 settings mutations_sync=2
INSERT INTO test_01193_18429.table_6_973 VALUES 
DROP TABLE test_hjqqp1i2.t_00751
EXPLAIN SYNTAX SELECT number > 5 ? 'censor.net' : 'google' as value, value FROM system.numbers LIMIT 10;
SELECT decodeURLComponent(fragment('http://127.0.0.1/?query=hello%20world+foo%2Bbar'));
SELECT domainRFC('[2001::db}81]:80') FORMAT CSV;
DROP DATABASE IF EXISTS test_6y6k3czw 
CREATE TABLE test_243E7A76504839445F5660524D5E714B29565842685056343B6177407B7B74457044444C6C3D226C(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02015_division_by_nullable.sql from pid=1724' 
SELECT multiIf((number % 2) = 0, toUInt32(1), (number % 3) = 0, toInt64(2), toInt32(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_41437E71634D72283060273165262D6974323C4A38674976764F4D344741336D4131663C67265C7C(x UInt8) Engine=Memory;
select e in (select a, b from tab_00386) from tab_00386
EXPLAIN QUERY TREE run_passes = 1 SELECT sum(a), avg(a) from fuse_tbl;
CREATE TABLE test_01193_18429.table_3_418 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_3_28 VALUES 
INSERT INTO dst_1 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 52
INSERT INTO r5 SELECT 45 % 10 = 5 ? 45 - 1 : 45
CREATE TABLE test_6C735A6A6B3E31754A464665606E2D7B46454C495C3E5E58742151614D5F44547E36392666293874(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00386_has_column_in_table.sql from pid=1718' 
CREATE TABLE test_497761685E705C6E53632B706B492042343E2C2F5137296A3F2E47565C5642602C706F6D5D742C67(x UInt8) Engine=Memory;
INSERT INTO r7 SELECT 72 % 10 = 7 ? 72 - 1 : 72
SELECT count() from tab_02473 PREWHERE b > 0 AND b <= 70 AND c > 46 AND c <= 76 WHERE a == 0;
alter table many_mutations delete where y = 580 * 2 settings mutations_sync = 0;
INSERT INTO test_01193_18429.table_9_835 VALUES 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), toInt32(-1) < N as r FORMAT CSV;
SELECT str_to_map(NULL);
ALTER TABLE src_7 REPLACE PARTITION 4 FROM src_4
DROP DATABASE IF EXISTS test_df9t2zj2 
INSERT INTO test_01193_18429.table_6_790 VALUES 
drop table if exists tsv;
INSERT INTO landing (time, pk1, pk2, pk4, pk3) VALUES 
DROP DATABASE IF EXISTS test_mh9pu20s 
SELECT '50' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:c000::')))
alter table data_01900_2 update s = 'bar_70' where 1;
SELECT toDecimal32(-12345.6789, 4) AS x, ceil(x), ceil(x, 1), ceil(x, 2), ceil(x, 3), ceil(x, 4), ceil(x, 5);
INSERT INTO capnp_nullable VALUES 
INSERT INTO test_01193_18429.table_2_624 VALUES 
alter table src update A = 22 where 1 settings mutations_sync=2
INSERT INTO test_01193_18429.table_6_321 VALUES 
DROP DATABASE IF EXISTS test_6xez1lj2 
SELECT x FROM merge_32_64 WHERE x IN (4294967290);
DESC TABLE mt_00168_buffer;
SELECT h3EdgeLengthM(4);
CREATE DATABASE IF NOT EXISTS test_c8sm0yui 
CREATE TABLE test_01193_18429.table_6_676 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DATABASE IF NOT EXISTS test_31eguzej 
SELECT medianExact(NULL, NULL);
SELECT dateDiff('day', materialize(toDate('2015-08-18', 'UTC')), toDate32('2015-08-19', 'UTC'), 'UTC');
SELECT 1 AS k, count() GROUP BY k WITH TOTALS SETTINGS allow_experimental_analyzer = 1
INSERT INTO test_01193_18429.table_10_265 VALUES 
CREATE TABLE test_01193_18429.table_6_565 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT x + 1 FROM tab where plus(x, 1::LowCardinality(UInt8)) <= 2 order by x;
SELECT x, 0 AND x, 1 AND x, x AND x, toNullable(0) AND x, toNullable(1) AND x, 0.0 AND x, 0.1 AND x, x AND 1 AND x, 0 AND x AND 1 AND x FROM (SELECT number % 2 ? number % 3 : NULL AS x FROM system.numbers LIMIT 10);
CREATE TABLE test_47623F716E4A36437E543266503E2435242D32767A363C35784B2B634C5B302F6E53307255355777(x UInt8) Engine=Memory;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 38345, 500 settings ignore_materialized_views_with_dropped_target_table=1
ALTER TABLE concurrent_alter_add_drop_3 DROP COLUMN value4 SETTINGS replication_alter_partitions_sync=0
insert into function file(data_02313.avro) select map(concat('key_', toString(number)), number) as m from numbers(3) settings engine_file_truncate_on_insert=1;
INSERT INTO r6 SELECT 66 % 10 = 6 ? 66 - 1 : 66
DROP TABLE IF EXISTS formats_test
CREATE TABLE test_01193_18429.table_7_666 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_02908_r2_209 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_209', 'r2') ORDER BY tuple()
create database if not exists test_3eb2h3zx_repl_01111_10 engine=Replicated('/test/01111/01111_create_drop_replicated_db_stress_test_3eb2h3zx', '0', '1')
SELECT 'ALL LEFT';
INSERT INTO test_01193_18429.table_10_970 VALUES 
SELECT arrayAvg([1.2::Decimal(60, 30), 3.45::Decimal(61, 29)]);
SELECT multiIf((number % 2) = 0, [toFloat64(1), toFloat64(2)], (number % 3) = 0, [toInt16(2), toInt16(3)], [toUInt8(3), toUInt8(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_6F63474D355A6C693A547D2B53787E5456525C245934427528342040774546452C3D462220702A38(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_10_490 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'VALUE FROM RAM BUFFER';
CREATE TABLE test_01193_18429.table_6_418 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT sparkbar(11,4,11)(event_date,cnt) FROM spark_bar_test;
DROP TABLE IF EXISTS 02266_auto_add_nullable;
SELECT CASE WHEN (col1 % 2) = 0 THEN col2 WHEN (col1 % 3) = 0 THEN toFixedString('bar', 16) ELSE col4 END FROM multi_if_check;
CREATE DATABASE IF NOT EXISTS test_2mqx1n6y 
select exp2(2) = 4;
BACKUP TABLE data TO S3('http://localhost:11111/test/s3_plain/backups/ordinary_test_ay2rtedd', 'test', '[HIDDEN]')
SELECT CASE WHEN 1 THEN col2 WHEN 1 THEN toFixedString('bar', 16) ELSE toFixedString(col4, 16) END FROM multi_if_check;
SELECT multiIf((col1 % 2) = 0, 'foo', (col1 % 3) = 0, toFixedString('bar', 16), toFixedString('baz', 16)) FROM multi_if_check;
create table test_02149 engine=File('Parquet', 'test_02149/data.Parquet')
SELECT date, value FROM distributed_00952;
SELECT toTypeName(x) FROM (SELECT 'hello' AS x UNION ALL SELECT toLowCardinality('hello'));
INSERT INTO test_01193_18429.table_8_784 VALUES 
select toMonday(x1) from t1;
DROP DATABASE IF EXISTS test_wef1s29k 
SELECT now() + INTERVAL 1::UInt128 SECOND - now();
SELECT cast(1 AS Enum8( 'hello' = 1, 'world' = 2));
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (109 < 9 AND 72 > 0 ? 109 : 0)), throwIf(last != (109 < 9 AND 72 > 0 ? least(9 - 1, 109 + 72 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(9) LIMIT 109, 72);
SELECT COUNT() FROM bloom_filter_null_types_test WHERE f64 = 1 SETTINGS max_rows_to_read = 6;
select 1 = isValidUTF8(toFixedString('\xe2\x82\xa1', 3)) from system.numbers limit 10;
CREATE TABLE test_01193_18429.table_6_776 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select if(cast(cast(0, 'UInt8'), 'UInt8'), y, 42) from test;
CREATE TABLE test_02908_r2_88 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_88', 'r2') ORDER BY tuple()
SELECT array([NULL], [NULL], [NULL]);
SELECT toDecimal64OrZero ('x123', 4);
CREATE TABLE test_01193_18429.table_3_910 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
alter table many_mutations delete where y = 853 * 2 settings mutations_sync = 0;
DROP TABLE IF EXISTS replicated_summing_merge_tree_with_list_of_columns_to_sum;
SELECT (SELECT [1]);
SELECT 'Running test stateless/02968_url_args.sql from pid=1715' 
CREATE TABLE test_01193_18429.table_1_145 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SHOW TABLES LIKE 'tes%';
SHOW CREATE TABLE replicated_table_for_alter1;
SELECT toDate('2017-01-01') + INTERVAL 0 MONTH AS x;
DROP DATABASE IF EXISTS test_sxu8zskm 
DROP TABLE wikistat2;
CREATE TABLE test_2C4B6165374652615A625A5D424A713F6A2A50446853245F793368525B614735294E2656317B2C5D(x UInt8) Engine=Memory;
ALTER TABLE 02416_rocksdb DELETE WHERE key >= 4;
SELECT * FROM 02186_range_dictionary;
SELECT pointInPolygon((39.840202, 21.451471), [(39.78317, 21.39802),(39.78285, 21.39808),(39.77692, 21.3971),(39.77752, 21.39324),(39.77769, 21.39243),(39.77792, 21.39179),(39.78089, 21.38707),(39.78351, 21.38492),(39.7841, 21.38405),(39.78439, 21.38333),(39.78558, 21.37686),(39.78697, 21.37699),(39.78625, 21.38452),(39.78422, 21.39642),(39.78406, 21.39682),(39.78317, 21.39802)]);
DROP TABLE IF EXISTS 01914_db.table_1;
SELECT polygonAreaSpherical(NULL);
INSERT INTO r5 SELECT 65 % 10 = 5 ? 65 - 1 : 65
SELECT '115' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ffff:ffff:ffff:e000')))
DROP DATABASE IF EXISTS test_0nw299gm 
SELECT CASE WHEN (number % 2) = 0 THEN toFloat32(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toUInt16(3) END FROM system.numbers LIMIT 10;
select mapValues(a) from table_map;
CREATE TABLE test_01193_18429.table_7_94 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT name, found_rate FROM system.dictionaries WHERE database = currentDatabase() AND name = 'complex_key_hashed_dictionary_01862';
CREATE TABLE test_01193_18429.table_1_301 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select toUnixTimestamp(makeDate32(2023, 5, 10), 'Pacific/Auckland');
select 0 = multiSearchAny(materialize('abc'), ['abcd']) from system.numbers limit 10;
INSERT INTO r1 SELECT 17
CREATE DATABASE IF NOT EXISTS test_thx2tz5o 
SELECT 42 AS foo ORDER BY foo LIMIT 2 
CREATE TABLE test_01193_18429.table_8_100 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
insert into children (id, childName) values 
SYSTEM SYNC REPLICA src_11 STRICT
DROP TABLE IF EXISTS product_fp64_fp64;
SELECT has(col1, 'a') FROM test1_00395;
ALTER TABLE test MATERIALIZE PROJECTION d_order;
INSERT INTO zero_rows_per_granule1 (p, k, v1, v2) VALUES 
DROP DATABASE IF EXISTS test_2nyiix39 
CREATE TABLE test_01193_18429.table_4_967 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_5_369 VALUES 
DROP DATABASE IF EXISTS test_3ww7f1o0 
CREATE TABLE test_6F663170444D533762742F664961705D5C613945387C586C377D47775F6B5E2B3E573A7E6A496048(x UInt8) Engine=Memory;
CREATE TABLE test_4D292E703E40557643446D652B273365276B414345292639363E25353E5E7B3571223F664F537171(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00649_quantile_tdigest_negative.sql from pid=1714' 
CREATE TABLE test_01193_18429.table_7_142 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/02022_bzip2_truncated.sh from pid=1715' 
SELECT h3GetUnidirectionalEdge(NULL, NULL);
SELECT 'Running test stateless/02905_structure_to_schema_bad_names.sh from pid=1713' 
select sipHash128ReferenceKeyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25)) == sipHash128Reference(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25));
CREATE TABLE test_01193_18429.table_3_174 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP TABLE IF EXISTS constraint_test_transitivity;
INSERT INTO src_5 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 72
CREATE TABLE test_01193_18429.table_3_376 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP TABLE IF EXISTS ttl;
CREATE INDEX idx_tab2_4 ON tab2 (col0 DESC,col4);
drop database if exists test_1164_memory;
EXPLAIN SYNTAX select uniqTheta(x) from (select number % 2 as x from numbers(10));
SELECT lgamma(-1);
SELECT range(cast('100', 'Int8')) == range(0, cast('100', 'Int8')) and range(0, cast('100', 'Int8')) == range(0, cast('100', 'Int8'), 1) and range(0, cast('100', 'Int8')) == range(0, cast('100', 'Int8'), cast('1', 'Int8'));
DROP DATABASE IF EXISTS test_84chlof6 
SELECT 'Running test stateless/02818_parameterized_view_with_cte_multiple_usage.sql from pid=1724' 
SELECT count() FROM t_cnf_fuzz WHERE (c6 AND c7 AND c7 AND c0) OR ((NOT c1) AND (NOT c9) AND c8 AND (NOT c0)) OR (c3 AND (NOT c3) AND (NOT c2) AND c0) OR ((NOT c8) AND c4) OR (c5 AND c4 AND c1 AND (NOT c3) AND c9) OR (c1) OR ((NOT c2) AND c5 AND (NOT c2)) OR ((NOT c8) AND (NOT c8) AND (NOT c4) AND c1 AND (NOT c1)) OR (c9 AND (NOT c5)) OR (c8) SETTINGS convert_query_to_cnf = 1
set insert_deduplication_token = '';
CREATE TABLE test_44383D2628652462603E2D253F6F51655E4454362C794136674C4C70592E3764624A595676446221(x UInt8) Engine=Memory;
DROP TABLE constrained2;
EXPLAIN PLAN SELECT * FROM test_order_by ORDER BY toDate(timestamp), timestamp LIMIT 10;
CREATE TABLE test_236843612F5875297E5B3D636065604F6B4C2442656D5259666B356F3C654E6D617764386556643D(x UInt8) Engine=Memory;
CREATE TABLE test_456F7B3D2B78596E4A74374C492B575E583B2744744855543429523A7651322131635957717E587A(x UInt8) Engine=Memory;
SELECT 7, 4, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (7 < 13 AND 4 > 0 ? 7 : 0)), throwIf(last != (7 < 13 AND 4 > 0 ? least(13 - 1, 7 + 4 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 7, 4);
CREATE TABLE test_02908_r3_179 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_179', 'r3') ORDER BY tuple()
INSERT INTO dst_6 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 43
DROP TABLE IF EXISTS t64;
CREATE TABLE test_5C694560656120546779584D6F2A48306B674B52716A503B3A3B663049284B613D554C4272227832(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_2_462 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/00697_in_subquery_shard.sql from pid=1722' 
EXPLAIN SYNTAX SELECT 1 != NOT 1;
CREATE TABLE test_7029434A624D732072715668682A2D7C3E4C4B626A6161613348715E73646138565A346C2F745553(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_erm33524 
select concat(toFixedString('a', 1), toFixedString('b', 1), toFixedString('c', 1)) == 'abc' from system.numbers limit 5;
SELECT dictGetStringOrDefault(NULL, NULL, NULL);
SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l RIGHT JOIN r USING (lc) ORDER BY x, r.lc, l.lc;
CREATE TABLE test_6924374A7C7E386C7653252C2D3C744260406D4551633A5A3C5963434B7267395420343E207B733A(x UInt8) Engine=Memory;
CREATE TABLE test (`c_id` String, `p_id` String, `d` String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test/test_table', '1') ORDER BY (c_id, p_id) SETTINGS index_granularity = 3476, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 7806, prefer_fetch_merged_part_size_threshold = 467327474, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 929855293, index_granularity_bytes = 2222223, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 33394, primary_key_compress_block_size = 73096
SELECT arrayExists(`x` -> (`x` IN ((SELECT '2') AS `_subquery213`)), [2]) FROM `system`.`one` GROUP BY arrayExists(`x` -> (`x` IN ((SELECT '2') AS `_subquery214`)), [2])
SELECT fromUnixTimestampInJodaSyntax(1669804872, 'aaa', 'UTC');
SELECT CASE WHEN (number % 2) = 0 THEN toFloat64(1) WHEN (number % 3) = 0 THEN toInt8(2) ELSE toInt16(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_425E5E594C232B35474529223A75673F3D5B57696A4D7C5D31433D5F7656737467743A4044484268(x UInt8) Engine=Memory;
SELECT toInt8OrZero(NULL, NULL);
SELECT 'Running test stateless/01513_defaults_on_defaults_no_column.sql from pid=1715' 
SELECT arrayShuffle(['storage','tiger','imposter','terminal','uniform','sensation'], 0xbad_cafe);
SELECT '*** Should show 2: ***';
SELECT if(number % 2, [[9223372036854775806]], [[2, 65537, -9223372036854775808]]) AS res FROM numbers(2);
SELECT 'Running test stateless/01352_generate_random_overflow.sql from pid=1714' 
INSERT INTO test_02908_r1_19 SELECT rand64() FROM numbers(5);
CREATE TABLE test_603F2828256732784A225F2661482F5A4B6B32385E333F6E55487B344C20675B66202565785A797A(x UInt8) Engine=Memory;
ALTER TABLE buf ADD COLUMN s String;
DROP DATABASE IF EXISTS test_lebtgy0l 
CREATE TABLE m1 (`id` UInt64, `s` String) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 1, ratio_of_defaults_for_sparse_serialization = 1., min_bytes_for_wide_part = 1073741824, replace_long_file_name_to_hash = true, max_file_name_length = 70, merge_max_block_size = 2837, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 86, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 19618240, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 15387, primary_key_compress_block_size = 73750
INSERT INTO test_01193_18429.table_7_957 VALUES 
INSERT INTO bloom_filter_array_types_test SELECT groupArray(number) AS order_key, groupArray(toInt8(number)) AS i8, groupArray(toInt16(number)) AS i16, groupArray(toInt32(number)) AS i32, groupArray(toInt64(number)) AS i64, groupArray(toUInt8(number)) AS u8, groupArray(toUInt16(number)) AS u16, groupArray(toUInt32(number)) AS u32, groupArray(toUInt64(number)) AS u64, groupArray(toFloat32(number)) AS f32, groupArray(toFloat64(number)) AS f64, groupArray(toDate(number, 'Asia/Istanbul')) AS date, groupArray(toDateTime(number, 'Asia/Istanbul')) AS date_time, groupArray(toString(number)) AS str, groupArray(toFixedString(toString(number), 5)) AS fixed_string FROM (SELECT number FROM system.numbers WHERE number >= 5 LIMIT 15);
select * from cluster(test_cluster_two_shards, currentDatabase(), dist_01223) order by key;
select 100 = length(format(concat((select arrayStringConcat(arrayMap(x ->'}', range(100)))), (select arrayStringConcat(arrayMap(x ->'{', range(100))))), ''));
CREATE TABLE test_686D205D66407A70673E477B5F3548303B7C7E245B78487C20367A35645643494339244C3E4F6575(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_ulqotcvg 
INSERT INTO ztest VALUES 
CREATE DATABASE IF NOT EXISTS test_tihzhggw 
select minMap([toInt32(number % 10), number % 10 + 1], [number, 1]) as m, toTypeName(m) from numbers(1, 100);
CREATE TABLE test_01193_18429.table_5_960 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (2 < 28 AND 76 > 0 ? 2 : 0)), throwIf(last != (2 < 28 AND 76 > 0 ? least(28 - 1, 2 + 76 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(28) LIMIT 2, 76);
CREATE TABLE test_01193_18429.table_4_264 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_4_499 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO ttttttt VALUES 
select 'self right nullable';
CREATE TABLE test_01193_18429.table_6_244 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Running test stateless/00383_utf8_validation.sql from pid=1718' 
SELECT dateDiff('minute', toDateTime64('1927-01-01 00:00:00', 3, 'UTC'), toDate32('1927-01-02', 'UTC'), 'UTC');
DROP TABLE IF EXISTS t_json_2;
SELECT throwIf((SELECT (count(), sum(n)) FROM merge(currentDatabase(), '') WHERE type=3) != (1 + 1, 1 + 2)) FORMAT Null
SELECT 'Running test stateless/02155_csv_with_strings_with_slash.sh from pid=1724' 
INSERT INTO test_01193_18429.table_8_672 VALUES 
CREATE TABLE test_01193_18429.table_1_940 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
alter table cc detach part 'all_1_1_0';
select toTypeName(arrayMap(x ->map(1, x), []));
SELECT sipHash64([], []);
CREATE TABLE test_4052537B6051576A3239623B7C3A2244665B47324162772129476920262D4236283A4B4570467647(x UInt8) Engine=Memory;
explain estimate select DISTINCT _partition_id from weird_partitions_02245 where d >= '2022-01-01 00:00:00' and d1 >= '2021-12-31 00:00:00' and d1 < '2020-01-01 00:00:00';
DROP TABLE IF EXISTS mt_00168;
SET max_block_size = 1000000;
SELECT throwIf((SELECT (count(), sum(n)) FROM merge(currentDatabase(), '') WHERE type=4) != (toUInt8(6/2 + 1), (select sum(number) from numbers(1, 6) where number % 2 or number=6))) FORMAT Null
ALTER TABLE concurrent_alter_column ADD COLUMN c296 DOUBLE;
SELECT CASE WHEN (number % 2) = 0 THEN toFloat32(1) WHEN (number % 3) = 0 THEN toInt32(2) ELSE toInt16(3) END FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_vggycgsc 
SELECT 'multiple matches';
CREATE TABLE table2 (`id` Int64, `v` UInt64) ENGINE = MergeTree PARTITION BY (toInt32(id / 2) % 3, id % 200) ORDER BY id SETTINGS index_granularity = 32958, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 3687, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 11033009, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 72330, primary_key_compress_block_size = 46222
INSERT INTO test_01193_18429.table_2_829 VALUES 
OPTIMIZE TABLE alter_00394;
INSERT INTO r2 SELECT 94
CREATE TABLE test_4B677D4C6040345E7971635B55733D2E37386D7449633C4A6A316C72615A59512C744B7B7A7C2142(x UInt8) Engine=Memory;
SELECT CASE WHEN 1 THEN [col2, col3] WHEN 1 THEN [col4, col5] ELSE ['foo', 'bar'] END FROM multi_if_check;
SELECT 'Running test stateless/02416_json_tuple_to_array_schema_inference.sql from pid=1718' 
SELECT count(*) FROM t_1 WHERE order_0 IN (SELECT toUInt64(rand64()%1000) FROM system.numbers limit 100) AND _part_offset != order_0;
SELECT 'Running test stateless/02703_max_local_read_bandwidth.sh from pid=1715' 
alter table many_mutations delete where y = 167 * 2 settings mutations_sync = 0;
INSERT INTO test_01193_18429.table_6_678 VALUES 
CREATE DATABASE IF NOT EXISTS test_pnsyhagz 
alter table many_mutations delete where y = 150 * 2 settings mutations_sync = 0;
SELECT wkt([(0., 0.), (10., 0.), (10., 10.), (0., 10.)]);
SELECT multiIf((col1 % 2) = 0, col2, (col1 % 3) = 0, 'bar', 'baz') FROM multi_if_check;
SELECT 47
INSERT INTO dictionary_non_nullable_source_table VALUES 
INSERT INTO test_01193_18429.table_5_948 VALUES 
CREATE TABLE test_765B736F546524636879332D6A49362E485D2453446871433A596F5C6640437C3E23602F284C7446(x UInt8) Engine=Memory;
SELECT arrayAvg(NULL, NULL);
CREATE TABLE test_6B456C3E754E7522422650674C713D6A4161266F2E764848502B7B59277C2555364E5E2956452F3D(x UInt8) Engine=Memory;
DROP TABLE test_table_join_2;
SELECT * FROM orc
CREATE DICTIONARY test_dictionary_sparse_hashed_load_factor ( key UInt64, value UInt16 ) PRIMARY KEY key SOURCE(CLICKHOUSE(TABLE test_table)) LAYOUT(sparse_hashed(MAX_LOAD_FACTOR 0.98)) LIFETIME(0);
SYSTEM SYNC REPLICA replicated_truncate2;
SELECT s, replaceAll(s, '_', 'o') AS a, REGEXP_REPLACE(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['.', '.__']) AS s);
CREATE TABLE test_01193_18429.table_7_644 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
set force_optimize_skip_unused_shards_nesting=1;
INSERT INTO checkouts SELECT number+2 as id, '2001-01-01 11:10:02' from numbers(1);
SELECT * FROM file('/var/lib/clickhouse/user_files/02661_read_from_archive_test_5hkep204_tzst_archive{1,2}.tzst :: 02661_read_from_archive_test_5hkep204_tzst_data{1,3}.csv') ORDER BY 1, 2
select transform(1, [1,2], [9,1]);
DROP DICTIONARY dictdb_01076.dict_datarace;
CREATE TABLE test_74296F757B432A5C4C4E2F433F5232765D7559337C4744333F3A73663C626D65434C23334B413E72(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_7_718 VALUES 
SELECT 1 + x FROM tab where plus(1, x) <= toDateTime('2022-02-02') + 2 order by x;
ALTER TABLE replica2 ATTACH PART 'all_1_1_0' SETTINGS insert_keeper_fault_injection_probability=0;
CREATE TABLE test_01193_18429.table_5_929 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT count() FROM signed_integer_test_table WHERE toInt64(val) == 0;
select 0 = isValidUTF8(toFixedString('\xf5\xff\xff\xff', 4)) from system.numbers limit 10;
ALTER TABLE alter_default MODIFY COLUMN value UInt8 DEFAULT 10;
SELECT * FROM test_compression_keyword;
select toTime(toDateTime(0, 'America/Los_Angeles'), 'America/Los_Angeles');
CREATE TABLE test_01193_18429.table_7_959 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_xxn7ceqf 
INSERT INTO test_01193_18429.table_9_270 VALUES 
SELECT count() FROM t_cnf_fuzz WHERE (c0) OR ((NOT c5) AND c3) OR ((NOT c4) AND c6) OR ((NOT c4)) OR ((NOT c3)) OR (c9 AND c6 AND c8 AND c3) SETTINGS convert_query_to_cnf = 0
SELECT * FROM merge(currentDatabase(), 'test_local_1|test_distributed_2') WHERE _table = 'test_local_1';
DROP DICTIONARY IF EXISTS db_01018.dict1;
DROP DATABASE IF EXISTS test_4sguv36i 
CREATE TABLE test_726637724D555D7A272C604A2D74576A3D2172713C755C357E716D50302151594564615A325E4D49(x UInt8) Engine=Memory;
SELECT '---- toDecimal32OrZero ----';
INSERT INTO r3 SELECT 85 % 10 = 3 ? 85 - 1 : 85
INSERT INTO test_02908_r1_252 SELECT rand64() FROM numbers(5);
SELECT extractTextFromHTML('Hello<>world');
DROP DATABASE IF EXISTS test_fv9fe7di 
DROP DATABASE IF EXISTS test_1cuftluk 
SELECT encodeURLComponent('hello world foo+bar');
select *, arraySum(arr) as s from prewhere_column_missing where s = 0;
with test1 as (select n, null b, n+1 m from with_test where n = 42 order by n limit 4), test2 as (select n + 1 as x, n - 1 as y from test1), test3 as (select x * y as z from test2) select z + 1 as q from test3;
INSERT INTO test_01193_18429.table_1_565 VALUES 
SELECT countMerge(x + y) FROM (SELECT countState(a) as x, countState(b) as y from add_aggregate);
ALTER TABLE tbl UPDATE d = xi WHERE 1;
SELECT CASE WHEN (col1 % 2) = 0 THEN col2 WHEN 1 THEN toFixedString(col3, 16) ELSE 'baz' END FROM multi_if_check;
CREATE TABLE test (`x` Enum('hello' = 1, 'world' = 2), `y` String) ENGINE = MergeTree PARTITION BY x ORDER BY y SETTINGS index_granularity = 17741, min_bytes_for_wide_part = 176702417, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 109, merge_max_block_size = 16502, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 31036538, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 29126, primary_key_compress_block_size = 39452
CREATE DATABASE IF NOT EXISTS test_yi7h4tcb 
INSERT INTO test_01193_18429.table_8_227 VALUES 
CREATE TABLE test_2644745F3D794E3B72256F6E344F4E6632372A322C2D6C793F3F202D2B53402B202B397D77247629(x UInt8) Engine=Memory;
ALTER TABLE test_table_5 DELETE WHERE key % 2 = 0
SELECT soundex('Jonson');
INSERT INTO r3 SELECT 88 % 10 = 3 ? 88 - 1 : 88
SELECT sum(DISTINCT number) FROM numbers_mt(100000);
INSERT INTO src VALUES /* (-15, 2) */ 
CREATE TABLE test_4E3125757E4A512635675E3C666A334126433E6A79703D207D386C317B7B43672079275F68455A3B(x UInt8) Engine=Memory;
SELECT wyHash64(-1);
SET join_algorithm = 'default';
INSERT INTO test_01193_18429.table_8_282 VALUES 
ALTER TABLE table_for_rename RENAME COLUMN value2 TO renamed_value2, RENAME COLUMN value3 TO renamed_value3;
DROP DATABASE IF EXISTS test_md39hcgr 
SHOW CREATE POLICY p2_01296 ON db_01296.table;
SELECT addressToLineWithInlines(NULL);
CREATE TABLE test_7373676E3E4969622F4274586D4B60294A6C446332793723226F454E717545667D614F5C7120203D(x UInt8) Engine=Memory;
SELECT toDateTime32(-1);
SELECT count(), sum(b) FROM alter_table1
select positionUTF8(materialize('ÃÂ°ÃÂ±ÃÂ²') as h, lowerUTF8('' as n)) = positionCaseInsensitiveUTF8(h, n);
ALTER TABLE clear_column1 CLEAR COLUMN s IN PARTITION '200002'
DROP TABLE tab_str_lc
SELECT read_rows, query FROM system.query_log WHERE event_date >= yesterday() AND type = 'QueryFinish' AND current_database == currentDatabase() AND query LIKE 'SELECT ''#02136_scalar_subquery_%' ORDER BY query ASC;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (5 < 68 AND 92 > 0 ? 5 : 0)), throwIf(last != (5 < 68 AND 92 > 0 ? least(68 - 1, 5 + 92 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(68) LIMIT 5, 92);
SELECT * FROM using1 ALL LEFT JOIN (SELECT * FROM using2) js2 USING (a, b) ORDER BY a;
OPTIMIZE TABLE replicated_collapsing PARTITION 201710 FINAL;
DROP DATABASE IF EXISTS test_z5t3qarp 
select sipHash128ReferenceKeyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22)) == sipHash128Reference(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22));
CREATE DATABASE IF NOT EXISTS test_ph6l8v4v 
select '-------toYYYYMMDD---------';
CREATE TABLE test_01193_18429.table_10_1 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO r3 SELECT 42 % 10 = 3 ? 42 - 1 : 42
select count(ignore(*)) from data_02051 settings min_bytes_to_use_direct_io=1, local_filesystem_read_method='read', local_filesystem_read_prefetch=1, read_priority=0, max_read_buffer_size=65505 ;
select query, log_comment from system.query_log where current_database = 'test_ic1awy49' and event_date >= yesterday() and query = 'select 424242\n' and type != 'QueryStart';
INSERT INTO test_01193_18429.table_2_591 VALUES 
INSERT INTO test_01193_18429.table_2_335 VALUES 
CREATE TABLE test_01193_18429.table_4_194 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
alter table many_mutations delete where y = 327 * 2 settings mutations_sync = 0;
ATTACH TABLE concurrent_alter_add_drop_2
INSERT INTO test_01193_18429.table_4_297 VALUES 
SELECT '*** Replicated VersionedCollapsing ***';
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 19754, 500 settings ignore_materialized_views_with_dropped_target_table=1
INSERT INTO table_set VALUES 
CREATE TABLE test_66406F2356347C244F2173682930533F71404D6E4A3A6D64355A6E2833473C4B787E742E2627414D(x UInt8) Engine=Memory;
set output_format_pretty_color=1;
CREATE TABLE test_01193_18429.table_5_513 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT IPv4CIDRToRange(toIPv4('255.0.0.0'), toUInt8(4 + number)) FROM numbers(2);
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c4) AND c8) SETTINGS convert_query_to_cnf = 0
CREATE TABLE t_02848_mt2 (`a` UInt32, `b` String, `c` Int32, `d` String) ENGINE = MergeTree ORDER BY (a, b, c) SETTINGS min_bytes_for_wide_part = 0, index_granularity = 7823, ratio_of_defaults_for_sparse_serialization = 0.9528614282608032, replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 21269, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 817300, vertical_merge_algorithm_min_columns_to_activate = 95, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 3852258, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 67532, primary_key_compress_block_size = 44689
SELECT * FROM ( SELECT number AS x FROM numbers(100000) ) AS t1 ALL FULL JOIN storage_join_race USING (x) FORMAT Null;
DROP TABLE IF EXISTS values_template;
select groupArray(s) from (select sum(n) s from (select toDecimal128(1, 10) as n));
CREATE TABLE test_01193_18429.table_1_62 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select 222 from test54378 prewhere part_date in (toDate('2018-04-19'));
INSERT INTO r2 SELECT 47
CREATE TABLE test_agg_proj (`x` Int32, `y` Int32, PROJECTION x_plus_y (SELECT sum(x - y), argMax(x, y) GROUP BY x + y)) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 1, min_bytes_for_wide_part = 354415971, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 65, merge_max_block_size = 17577, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 776538, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 891032182, index_granularity_bytes = 13254593, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 33746, primary_key_compress_block_size = 54642
CREATE TABLE small_table (a UInt64 default 0, n UInt64) ENGINE = MergeTree() PARTITION BY tuple() ORDER BY (a) SETTINGS min_bytes_for_wide_part = 0
SELECT COUNT() FROM system.tables WHERE database='_temporary_and_external_tables';
CREATE TABLE test_612E49684F734D303323414F714D566A6D52574D4D6F7D4E35712A793B65584E7D2D3A616E6D2143(x UInt8) Engine=Memory;
SELECT arrayFold( acc,x -> arrayPushFront(acc,x), range(number), emptyArrayUInt64()) FROM system.numbers LIMIT 5;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toUInt8(2), toUInt8(3)] ELSE [toInt32(3), toInt32(3)] END FROM system.numbers LIMIT 10;
CREATE INDEX idx_tab3_3 ON tab3 (col4,col3);
select formatDateTime(toDateTime('2022-01-08 02:11:29', 'UTC'), '%m') settings formatdatetime_format_without_leading_zeros = 0;
SELECT quantileExactWeighted(NULL);
CREATE TABLE test_2B753262452B62535B6C563E334628483634497D442A30244851583F5864243F60752C7B763C2D44(x UInt8) Engine=Memory;
SELECT count() FROM (SELECT * FROM test ARRAY JOIN products);
SELECT ('1',materialize(2)) AS t, t.1, t.2;
SELECT indexHint([NULL]);
CREATE TABLE test_293F41664C54645A42395D25632740405A496C335467797E6A5246297348727C28224E595A4D632D(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_3_239 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_4_684 VALUES 
select toStartOfInterval(a, INTERVAL 1 NANOSECOND) from ( select toDateTime64('1980-12-12 12:12:12.123456789', 9) AS a );
SELECT toDate('2017-01-01') + INTERVAL 1 YEAR AS x;
WITH toDate('2021-01-14') AS date_value, toDateTime('2021-01-14 11:22:33') AS date_time_value, toDateTime64('2021-01-14 11:22:33', 3) AS date_time_64_value SELECT monthName(date_value), monthName(date_time_value), monthName(date_time_64_value);
CREATE TABLE test_613C4643697E7534643F782D6925686A4F244E4D64367B284D7E402764765033634A2B5A7E5F4D72(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_10_446 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_4D6A2E35662D2F5D2B423F507E7C7A232B6044585045635C217845674A626B27524E423A6B777878(x UInt8) Engine=Memory;
select * from data_02021 prewhere 1 or ignore(key) where key = 1;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 39030, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT reinterpretAsUUID('');
INSERT INTO 02131_rptable VALUES 
CREATE TABLE test_2C4A2977505F342041445037766E214B4678282E5770624C3B2D685D762D4D74582E7E476B687231(x UInt8) Engine=Memory;
SELECT count() FROM t_cnf_fuzz WHERE (c0) OR ((NOT c1) AND c8 AND c7 AND c6 AND c4) OR ((NOT c6) AND c9 AND (NOT c6) AND (NOT c3)) OR (c9 AND c4 AND c8) SETTINGS convert_query_to_cnf = 0
INSERT INTO src_15 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 33
CREATE TABLE test (`n1` UInt32, `n2` UInt32 ALIAS murmurHash3_32(n1), `n3` UInt32 MATERIALIZED n2 + 1) ENGINE = MergeTree ORDER BY n1 SETTINGS index_granularity = 24421, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 61, merge_max_block_size = 10011, prefer_fetch_merged_part_size_threshold = 3815106907, vertical_merge_algorithm_min_rows_to_activate = 141783, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 2350965946, index_granularity_bytes = 15674779, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 71679, primary_key_compress_block_size = 45959
SELECT * FROM distributed_00952;
SELECT kostikConsistentHash(16045690984833335023+number-number, 120) FROM system.numbers LIMIT 1000000, 2;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c9) AND c5 AND c3 AND c7 AND c9) OR ((NOT c9) AND c3 AND c5 AND c1 AND c0) SETTINGS convert_query_to_cnf = 1
SELECT avgWeighted(x, w) FROM values('x Int32, w Int8', (4, 1), (1, 0), (10, 2));
CREATE TABLE test_257668487135567C646E425D7B352E51383D5C29375B435C655C592D2D5173733B2224383D543C32(x UInt8) Engine=Memory;
/* char function */ SELECT char(65, 66.1, 67.2, 68.3, 97.4, 98.5, 99.6, 100.7, 101.0, 102.0, 103.0);
CREATE TABLE test_44556031375252453556214D5A553F396356227A4B2E51375C274962426878496344472D7278742C(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_1_505 VALUES 
INSERT INTO test_01193_18429.table_1_259 VALUES 
DROP USER IF EXISTS u02247
INSERT INTO test_01193_18429.table_6_390 VALUES 
CREATE TABLE test_01193_18429.table_7_418 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_edql3egi 
DROP TABLE IF EXISTS table_for_dict1;
SELECT count(*) FROM source WHERE toYYYYMM(dt_32) < 202312;
SELECT Title, round(1000 * distance) FROM test_entry_distance ORDER BY ngramSearch(Title, 'metriks') as distance, Title;
SELECT arrayExists(`x` -> (`x` IN ((SELECT '2') AS `_subquery209`)), [2]) FROM `system`.`one`
SELECT transform(toString(number), ['2', '4', '6'], [29, 20, 21], 22) as x FROM numbers(10) GROUP BY x ORDER BY x;
DROP DATABASE IF EXISTS test_1zafox0g 
CREATE TABLE test_01193_18429.table_9_162 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO codecTest (key, name, ref_valueF64, valueF64, ref_valueF32, valueF32) SELECT number AS n, 'sin(n*n*n)*n', sin(n * n * n * n* n) AS v, v, v, v FROM system.numbers LIMIT 301, 100;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), toInt32(-1) > N as r FORMAT CSV;
create view nv_regular_mt_table AS SELECT * FROM mv_regular_mt_table;
DROP DATABASE IF EXISTS test_guh7xx8w 
SELECT round(sum(log(2) * number), 6) AS k FROM numbers(10000) GROUP BY (number % 2) * (number % 3), number % 3, number % 2 HAVING sum(log(2) * number) > 346.57353 ORDER BY k SETTINGS allow_experimental_analyzer=1;
INSERT INTO mt VALUES /* (-1, 2) */ 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), N > DT as r FORMAT CSV;
SELECT 'Running test stateless/02975_system_zookeeper_retries.sql from pid=1705' 
CREATE TABLE subcolumns(n Nullable(UInt32), a1 Array(UInt32), a2 Array(Array(Array(UInt32))), a3 Array(Nullable(UInt32)), t Tuple(s String, v UInt32), m Map(String, UInt32)) ENGINE = Log
CREATE TABLE test_01193_18429.table_1_222 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_28246844314E6B5C676439655C68537566576B2121737C48597B6455666E296C5A406844305A5644(x UInt8) Engine=Memory;
ALTER TABLE src_5 MOVE PARTITION 8 TO TABLE dst_12
EXPLAIN SYNTAX (SELECT sum(uint64 - 1) AS j from test_table having j > 0);
CREATE TABLE test_01193_18429.table_5_633 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT dictGet('range_dictionary_nullable', 'Tax', (toUInt64(2), '2'), toDate('2019-05-31'));
SELECT avgWeighted(x, w) FROM values('x Float64, w Int8', (4, 1), (1, 0), (10, 2));
alter table data_01900_2 update s = 'bar_10' where 1;
SELECT bin(toUInt256(100000000000)) AS res;
CREATE DATABASE IF NOT EXISTS test_kyy0ugvm 
SELECT age('day', toDate32('2015-08-18', 'UTC'), toDateTime('2015-08-19 00:00:00', 'UTC'), 'UTC');
INSERT INTO test_01193_18429.table_7_877 VALUES 
CREATE TABLE test_244A2F6A6E34605C774A476D7D6032592E36473A272A6A5059356032302C79736B7B507E4C742959(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00980_merge_alter_settings.sql from pid=1713' 
CREATE TABLE test_01193_18429.table_7_780 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE DATABASE IF NOT EXISTS test_0o530u3n 
CREATE TABLE test_01193_18429.table_4_57 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_7_741 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_4_95 VALUES 
SELECT materialize(toInt64(0)) AS x, toUInt8(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
CREATE TABLE test_716A4F7333256A5F7B752B314D506F72556D613468686B634E496368327759562E776D3F2D2E2831(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_9_156 VALUES 
SELECT cutIPv6(IPv6StringToNum('2001:0DB8:AC10:FE01:FEED:BABE:CAFE:F00D'), 0, 3);
CREATE TABLE test_01193_18429.table_1_171 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
/* ddl_entry=query-0000000161 */ ALTER TABLE `02028_db`.t1_local MOVE PARTITION 'partition2' TO TABLE `02028_db`.t2_local
select * from dist_02346 order by x settings additional_table_filters={'dist_02346' : 'x > 3 and x < 7'};
ALTER TABLE table_for_concurrent_alter MODIFY SETTING parts_to_throw_insert = 119, parts_to_delay_insert = 119, min_merge_bytes_to_use_direct_io = 119
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c0)) OR (c2) SETTINGS convert_query_to_cnf = 0
CREATE DATABASE IF NOT EXISTS test_bih4ynfu 
SELECT reinterpretAsFloat32(NULL);
SELECT 1 AS $alias$name$ FORMAT TSVWithNames;
CREATE TABLE test_01193_18429.table_2_958 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_gvrheizf 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (25 < 47 AND 30 > 0 ? 25 : 0)), throwIf(last != (25 < 47 AND 30 > 0 ? least(47 - 1, 25 + 30 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(47) LIMIT 25, 30);
CREATE DICTIONARY ip_trie_dictionary ( prefix String, value Nullable(Int64) DEFAULT NULL ) PRIMARY KEY prefix SOURCE(CLICKHOUSE(HOST 'localhost' port tcpPort() TABLE 'dictionary_nullable_source_table')) LIFETIME(MIN 10 MAX 1000) LAYOUT(IP_TRIE());
SELECT 'Running test stateless/01796_Log_rwlock_ub.sql from pid=1713' 
SELECT hex(sipHash128Keyed(key, 4::UInt64)) FROM tab;
CREATE MATERIALIZED VIEW mv_00180 ENGINE = Null AS SELECT * FROM t_00180;
INSERT INTO test_01193_18429.table_9_386 VALUES 
CREATE TABLE test_4869233E7A7A5149235E646467455D343C446F6E696D7C4A7053686D247847265228295D413B3D28(x UInt8) Engine=Memory;
INSERT INTO replicated_versioned_collapsing_merge_tree_with_sampling VALUES 
CREATE TABLE test_01193_18429.table_3_912 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE INDEX idx_tab3_0 ON tab3 (col1 DESC,col4 DESC,col3 DESC);
CREATE TABLE zstd_9_00 (`n` Int, `b` String CODEC(ZSTD(9))) ENGINE = MergeTree ORDER BY n SETTINGS index_granularity = 23120, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 97, merge_max_block_size = 18470, prefer_fetch_merged_part_size_threshold = 1062995899, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 18549560, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 83790, primary_key_compress_block_size = 99438
SELECT arrayIntersect(NULL, NULL, NULL);
CREATE TABLE insert (i UInt64, s String, u UUID, d Date, t DateTime, a Array(UInt32)) ENGINE = Memory;
SELECT test_table.a FROM test_table ORDER BY (test_table.a <= test_table.a) + 1;
INSERT INTO test_02908_r1_134 SELECT rand64() FROM numbers(5);
alter table many_mutations delete where y = 279 * 2 settings mutations_sync = 0;
select makeDate32(-1980, 10, 17);
CREATE TABLE test_01193_18429.table_2_518 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
drop user "Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ";
SELECT A.k, toString(A.t, 'UTC'), A.a, B.b, toString(B.t, 'UTC'), B.k FROM A ASOF LEFT JOIN B USING(k,t) ORDER BY (A.k, A.t);
INSERT INTO r1 SELECT 23 % 10 = 1 ? 23 - 1 : 23
SELECT quantilesExactWeighted(0, 0.001, 0.01, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 0.99, 0.999, 1)(`number`, 1) FROM `test_95gzsaf2`.`numbers_1001`
DROP DATABASE IF EXISTS test_laxoblsd 
CREATE TABLE test_01193_18429.table_1_772 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT nothingArrayIf([NULL], 1) AS x FROM remote('127.0.0.{1,2}', numbers(3));
CREATE TABLE test_01193_18429.table_1_653 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 17103, 500 settings ignore_materialized_views_with_dropped_target_table=1
SET allow_experimental_analyzer = '0';
SELECT toDecimal64(pi(), 17) AS x, round(sin(x), 8), round(cos(x), 8), round(tan(x), 8);
CREATE TABLE test_4C6C6739446E3B4B716A726C243672397C51597C213228692E5A4877217D3D59664F614E3C553950(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_4_991 VALUES 
CREATE TABLE test_01193_18429.table_7_753 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE t1 (`c0` Int32) ENGINE = MergeTree PARTITION BY -c0 ORDER BY c0 SETTINGS index_granularity = 22231, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 93, merge_max_block_size = 18998, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 22589423, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 29868, primary_key_compress_block_size = 18128
SELECT medianDeterministic(NULL, NULL);
SELECT 'Running test stateless/02313_dump_column_structure_low_cardinality.sql from pid=1718' 
SELECT sumIfArrayIf([1, NULL], [1, 0], 1) AS `x` FROM numbers(3)
DROP DATABASE IF EXISTS test_llupmo1y 
DROP DATABASE IF EXISTS test_ailfxhci 
SELECT count() > 0 FROM system.zookeeper WHERE path = '/';
CREATE TABLE test_35515C35557A6041482374665024523F544733235A2A54285C602C4E2B2F29645F5E4B7E52707573(x UInt8) Engine=Memory;
ALTER TABLE dst_5 DROP PART '1_133_133_0'
select * from file('test_02149_schema_inference_test_2lktp9cn.data', 'JSONCompactEachRowWithNames') settings input_format_json_read_numbers_as_strings=0
CREATE TABLE test_28714E232659397B7C7136704E5B46757B2138685F5D4E624158512540603A5B3E565122603D2C4C(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_jv3sj6km 
SELECT * FROM merge(currentDatabase(), '') WHERE value = 1048575;
SELECT pointInPolygon((39.840202, 21.451471), [(39.77683, 21.42438),(39.77605, 21.425),(39.77496, 21.42603),(39.7739, 21.42729),(39.77313, 21.42836),(39.77185, 21.4304),(39.77114, 21.43164),(39.77043, 21.4325),(39.76964, 21.4332),(39.76827, 21.43424),(39.76732, 21.43509),(39.76667, 21.43583),(39.76622, 21.43647),(39.76497, 21.43865),(39.76336, 21.43887),(39.76248, 21.43875),(39.76215, 21.43863),(39.75945, 21.4361),(39.75799, 21.43499),(39.75779, 21.43487),(39.75661, 21.43435),(39.75139, 21.43268),(39.75032, 21.43203),(39.74784, 21.42997),(39.74759, 21.42982),(39.74683, 21.4295),(39.74612, 21.42931),(39.74467, 21.42912),(39.74448, 21.42896),(39.7443, 21.42888),(39.74194, 21.4285),(39.74145, 21.42827),(39.74102, 21.42776),(39.7407, 21.42681),(39.74058, 21.42589),(39.74083, 21.42453),(39.74184, 21.4225),(39.74313, 21.42067),(39.74414, 21.41962),(39.74463, 21.41918),(39.74722, 21.41719),(39.74816, 21.41667),(39.75131, 21.41514),(39.7528, 21.4143),(39.7546, 21.41468),(39.75722, 21.41503),(39.7665, 21.41541),(39.76768, 21.41554),(39.7691, 21.41584),(39.77057, 21.41631),(39.77193, 21.41692),(39.77339, 21.41779),(39.7742, 21.41838),(39.77635, 21.41978),(39.77611, 21.41999),(39.77594, 21.42034),(39.77589, 21.42086),(39.77591, 21.42111),(39.77604, 21.42177),(39.77613, 21.42203),(39.77649, 21.42272),(39.77693, 21.42331),(39.77708, 21.42367),(39.77707, 21.42393),(39.77683, 21.42438)]);
CREATE TABLE test_01193_18429.table_4_105 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_6_435 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
alter table many_mutations delete where y = 124 * 2 settings mutations_sync = 0;
CREATE TABLE t_map_contains (m Map(String, UInt32)) ENGINE = Memory;
CREATE TABLE test_01193_18429.table_5_811 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select user, windowFunnel(10, 'strict_order')(dt, event = 'a', event = 'b', event = 'c') as s from funnel_test_strict_order where user = 7 group by user format JSONCompactEachRow;
set convert_query_to_cnf = 0;
INSERT INTO test_01193_18429.table_1_374 VALUES 
CREATE DATABASE IF NOT EXISTS test_osuursxp 
SELECT quantilesBFloat16Weighted(NULL);
SELECT 1, sleep(0.012392)
SELECT dictGetOrDefault('01684_database_for_cache_dictionary.cache_dictionary_simple_key_simple_attributes', 'value_first', number, toString('default')) as value_first, dictGetOrDefault('01684_database_for_cache_dictionary.cache_dictionary_simple_key_simple_attributes', 'value_second', number, toString('default')) as value_second FROM system.numbers LIMIT 4;
select count(), sum(number) from file('02841.parquet') where indexHint(i32 between -150 and 250);
CREATE TABLE test_66287C43716C6C444F4138242F592A543B217E622F212E4446303C534C4A6C264F5A2F4324276A46(x UInt8) Engine=Memory;
SELECT toTime(NULL, NULL);
SELECT intervalLengthSum(NULL);
WITH 10.125 AS a, 2.5 AS b SELECT a MOD b, -a MOD b, a MOD -b, -a MOD -b;
CREATE TABLE test_7E624064204A2968566248387B30292E245D723C36244E28365F487A224C3339263D724135237873(x UInt8) Engine=Memory;
select concat('a', toFixedString('b', 1), materialize('c')) == 'abc';
SELECT 'Running test stateless/02525_different_engines_in_temporary_tables.sql from pid=1724' 
SELECT name, found_rate FROM system.dictionaries WHERE database = currentDatabase() AND name = 'polygon_dictionary_01862';
SELECT 2147483647 AS `2147483647`, nothingUInt64(_CAST(NULL, 'Nullable(Nothing)')) AS `count(pow(NULL, 1.0001))` FROM `system`.`one` AS `__table1` GROUP BY _CAST(NULL, 'Nullable(Nothing)'), _CAST(NULL, 'Nullable(Nothing)') WITH CUBE
INSERT INTO test3 SELECT toDecimal64(number, 3) FROM numbers(10000);
CREATE TABLE test_01193_18429.table_3_147 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO min_if SELECT [1] AS arr, '2' AS str, toInt32(3) AS int;
select '<19: exception>', exception ilike '%UNKNOWN_TABLE%' from refreshes;
EXPLAIN indexes = 1, description = 0 SELECT * FROM tab WHERE has(foo, 'b');
CREATE DATABASE IF NOT EXISTS test_gpbjypjc 
CREATE DATABASE IF NOT EXISTS test_bnf1x0e3 
CREATE MATERIALIZED VIEW test_mv ENGINE = MergeTree ORDER BY arr SETTINGS index_granularity = 52931, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 17946, prefer_fetch_merged_part_size_threshold = 5539127104, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 9335814518, index_granularity_bytes = 30078789, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 61246, primary_key_compress_block_size = 50522 AS WITH (SELECT regex FROM regex_test_table) AS constant_value SELECT extractAll(concat(toString(number), 'a'), assumeNotNull(constant_value)) AS arr FROM test_table
CREATE TABLE test_2D4A32452C732239682C76477C553E772965297D3E5B32593648492779605652396B39504C245251(x UInt8) Engine=Memory;
INSERT INTO ip_trie_source_table_01862 VALUES 
select round(1000 * ngramSearchUTF8(materialize('ÃÂ°ÃÂ±ÃÂ²ÃÂ³ÃÂ´ÃÂµÃÂÃÂ¶ÃÂ·'), materialize('ÃÂ°ÃÂ±ÃÂ²ÃÂ³ÃÂ´ÃÂµÃÂÃÂ¶ÃÂ·')))=round(1000 * ngramSearchUTF8(materialize('ÃÂ°ÃÂ±ÃÂ²ÃÂ³ÃÂ´ÃÂµÃÂÃÂ¶ÃÂ·'), 'ÃÂ°ÃÂ±ÃÂ²ÃÂ³ÃÂ´ÃÂµÃÂÃÂ¶ÃÂ·')) from system.numbers limit 5;
SELECT arrayCount(x -> number % 2, range(number)) FROM system.numbers LIMIT 10;
CREATE TABLE test_68667E513B624B332D307767734D7955396D387D533365305D78243C647A24304D6869774C486A47(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_9_415 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT -128, -32769, -128 = -32769, -128 != -32769, -128 < -32769, -128 <= -32769, -128 > -32769, -128 >= -32769, -32769 = -128, -32769 != -128, -32769 < -128, -32769 <= -128, -32769 > -128, -32769 >= -128 , toInt8(-128) = toInt32(-32769), toInt8(-128) != toInt32(-32769), toInt8(-128) < toInt32(-32769), toInt8(-128) <= toInt32(-32769), toInt8(-128) > toInt32(-32769), toInt8(-128) >= toInt32(-32769), toInt32(-32769) = toInt8(-128), toInt32(-32769) != toInt8(-128), toInt32(-32769) < toInt8(-128), toInt32(-32769) <= toInt8(-128), toInt32(-32769) > toInt8(-128), toInt32(-32769) >= toInt8(-128) , toInt8(-128) = toInt64(-32769), toInt8(-128) != toInt64(-32769), toInt8(-128) < toInt64(-32769), toInt8(-128) <= toInt64(-32769), toInt8(-128) > toInt64(-32769), toInt8(-128) >= toInt64(-32769), toInt64(-32769) = toInt8(-128), toInt64(-32769) != toInt8(-128), toInt64(-32769) < toInt8(-128), toInt64(-32769) <= toInt8(-128), toInt64(-32769) > toInt8(-128), toInt64(-32769) >= toInt8(-128) , toInt16(-128) = toInt32(-32769), toInt16(-128) != toInt32(-32769), toInt16(-128) < toInt32(-32769), toInt16(-128) <= toInt32(-32769), toInt16(-128) > toInt32(-32769), toInt16(-128) >= toInt32(-32769), toInt32(-32769) = toInt16(-128), toInt32(-32769) != toInt16(-128), toInt32(-32769) < toInt16(-128), toInt32(-32769) <= toInt16(-128), toInt32(-32769) > toInt16(-128), toInt32(-32769) >= toInt16(-128) , toInt16(-128) = toInt64(-32769), toInt16(-128) != toInt64(-32769), toInt16(-128) < toInt64(-32769), toInt16(-128) <= toInt64(-32769), toInt16(-128) > toInt64(-32769), toInt16(-128) >= toInt64(-32769), toInt64(-32769) = toInt16(-128), toInt64(-32769) != toInt16(-128), toInt64(-32769) < toInt16(-128), toInt64(-32769) <= toInt16(-128), toInt64(-32769) > toInt16(-128), toInt64(-32769) >= toInt16(-128) , toInt32(-128) = toInt32(-32769), toInt32(-128) != toInt32(-32769), toInt32(-128) < toInt32(-32769), toInt32(-128) <= toInt32(-32769), toInt32(-128) > toInt32(-32769), toInt32(-128) >= toInt32(-32769), toInt32(-32769) = toInt32(-128), toInt32(-32769) != toInt32(-128), toInt32(-32769) < toInt32(-128), toInt32(-32769) <= toInt32(-128), toInt32(-32769) > toInt32(-128), toInt32(-32769) >= toInt32(-128) , toInt32(-128) = toInt64(-32769), toInt32(-128) != toInt64(-32769), toInt32(-128) < toInt64(-32769), toInt32(-128) <= toInt64(-32769), toInt32(-128) > toInt64(-32769), toInt32(-128) >= toInt64(-32769), toInt64(-32769) = toInt32(-128), toInt64(-32769) != toInt32(-128), toInt64(-32769) < toInt32(-128), toInt64(-32769) <= toInt32(-128), toInt64(-32769) > toInt32(-128), toInt64(-32769) >= toInt32(-128) , toInt64(-128) = toInt32(-32769), toInt64(-128) != toInt32(-32769), toInt64(-128) < toInt32(-32769), toInt64(-128) <= toInt32(-32769), toInt64(-128) > toInt32(-32769), toInt64(-128) >= toInt32(-32769), toInt32(-32769) = toInt64(-128), toInt32(-32769) != toInt64(-128), toInt32(-32769) < toInt64(-128), toInt32(-32769) <= toInt64(-128), toInt32(-32769) > toInt64(-128), toInt32(-32769) >= toInt64(-128) , toInt64(-128) = toInt64(-32769), toInt64(-128) != toInt64(-32769), toInt64(-128) < toInt64(-32769), toInt64(-128) <= toInt64(-32769), toInt64(-128) > toInt64(-32769), toInt64(-128) >= toInt64(-32769), toInt64(-32769) = toInt64(-128), toInt64(-32769) != toInt64(-128), toInt64(-32769) < toInt64(-128), toInt64(-32769) <= toInt64(-128), toInt64(-32769) > toInt64(-128), toInt64(-32769) >= toInt64(-128) 
DROP TABLE IF EXISTS nulls_first_sort_test;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt16(1), toInt16(2)] WHEN (number % 3) = 0 THEN [toInt16(2), toInt16(3)] ELSE [toInt64(3), toInt64(3)] END FROM system.numbers LIMIT 10;
SELECT 'aes-256-ofb' AS mode, decrypt(mode, '[HIDDEN]') = input FROM encryption_test
CREATE TABLE test_7736765B265F5A262839684D472C2F5B6A716928762B7930493A7B256B76657A5430677D7E743649(x UInt8) Engine=Memory;
CREATE TABLE test_63632D22335B5A68762F4754767243564A4D707C3A7671563C3C53602725764075317D5423332C4E(x UInt8) Engine=Memory;
select 1 = isValidUTF8(toValidUTF8('\xE0\xA0\x80')) from system.numbers limit 10;
SELECT SUM(value1) FROM concurrent_alter_mt_4
drop table t5;
SELECT sqidEncode(materialize(1), materialize(2)) AS sqid, sqidDecode(sqid);
DESCRIBE (SELECT value.* APPLY toString FROM test_table);
CREATE DATABASE IF NOT EXISTS test_6u75j5jd 
CREATE DATABASE IF NOT EXISTS test_vtmhczzv 
select parseDateTimeInJodaSyntax('10-', 'M-', 'UTC') = toDateTime('2000-10-01', 'UTC');
INSERT INTO test_01193_18429.table_8_872 VALUES 
CREATE TABLE test_6B2130777E297D232A335767373E7469643B39675E464A4D7253492A3C4F7C66454D323B2F292769(x UInt8) Engine=Memory;
SELECT 'First JOIN LEFT second JOIN INNER';
SELECT like(CAST('\0' AS Nullable(String)),'');
DROP DATABASE IF EXISTS test_01109;
CREATE TABLE test_23462C305B34543C5C28434F74267241754961393377704D4B402040796452333451665966203549(x UInt8) Engine=Memory;
SELECT arrayDistinct(groupArray(dictGetInt32('db_01501.cache_dict', 'Int32_', toUInt64(number)))) from numbers(10);
SELECT 'Running test stateless/00274_shard_group_array.sql from pid=1726' 
CREATE TABLE test_01193_18429.table_3_713 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SYSTEM RELOAD DICTIONARY dict_db_01225.dict;
SELECT Y, uniqCombined(12)(X) FROM (SELECT number AS X, (3*X*X - 7*X + 11) % 37 AS Y FROM system.numbers LIMIT 15) GROUP BY Y ORDER BY Y;
CREATE TABLE test_table_replicated_second (`id` UInt64, `value` String, `insert_time` DateTime) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_table_replicated', '2_replica') ORDER BY id SETTINGS index_granularity = 3338, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.49177250266075134, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 13693, prefer_fetch_merged_part_size_threshold = 4006682975, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 19480150, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 78566, primary_key_compress_block_size = 68040
SELECT toStartOfFifteenMinutes(NULL, NULL);
CREATE TABLE test_01193_18429.table_1_130 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO r6 SELECT 27
DROP DATABASE IF EXISTS test_4y61byah 
DESCRIBE (SELECT * APPLY toString FROM test_table);
SELECT JSONExtractKeysAndValuesRaw(NULL, NULL);
SELECT * FROM bf_tokenbf_map_keys_test WHERE map_fixed['K3'] != '';
SELECT 38,toFixedString('Hello', 10), bin(bitShiftRight(toFixedString('Hello', 10), 38));
select 11 as x format JSONEachRow 
select 1 = sequenceMatch('')(time, data = 0, data = 1, data = 2, data = 3) from sequence_test;
SELECT bitCount(-1);
INSERT INTO test_01193_18429.table_4_131 VALUES 
SELECT 'SELECT toUInt8(1) + N';
SELECT 'toMonday;toDateTime64;false', toMonday(toDateTime64('1920-02-02 10:20:30', 3)) SETTINGS enable_extended_results_for_datetime_functions = false;
DROP DATABASE IF EXISTS test_0kv2j6ph 
CREATE TABLE test_7C5626463F4351225B364C3F76334846624B345972624B247A70262578274E596930697669645F29(x UInt8) Engine=Memory;
SELECT globalInIgnoreSet(NULL, NULL);
SELECT k, uniq(date_dt) FROM remote('127.0.0.{1,2}', currentDatabase(), han_1) GROUP BY k;
SELECT parseDateTime32BestEffortOrZero(NULL, NULL, NULL);
SELECT multiIf((number % 2) = 0, toInt64(1), (number % 3) = 0, toInt32(2), toInt32(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_10_384 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT EXTRACT(DAY from toDateTime('2017-12-31 18:59:58'));
SELECT d1, f1, d1 + f1 FROM t ORDER BY f1;
DROP DATABASE IF EXISTS test_m7wu5xhe 
select 3;
SELECT multiIf((number % 2) = 0, toUInt32(1), (number % 3) = 0, toUInt32(2), toInt16(3)) FROM system.numbers LIMIT 10;
SELECT a, b FROM order_by_all ORDER BY *;
INSERT INTO 01902_db.t SELECT * FROM numbers(10);
DROP DATABASE IF EXISTS test_hsx7pohu 
SET output_format_markdown_escape_special_characters = true;
CREATE TABLE test_466C393A7C5162492B4A2F216A5C77592670343E797163474535287B47566C4E6C264A677325696D(x UInt8) Engine=Memory;
select 0 = isValidUTF8('\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xF1\x80\xC2\x80') from system.numbers limit 10;
SELECT replaceRegexpAll(NULL, NULL, NULL);
CREATE TABLE test_01193_18429.table_9_108 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT any('');
CREATE TABLE test_6D7B39574D5D7A6973292C784F70444E6F364E772B427D5E34613C4B566A68392D5E6F26655F2245(x UInt8) Engine=Memory;
CREATE TABLE test_3F432846276E764E247E7122222348752442482B2671265E587E4B4C507E6B7C293D752A2E695B2F(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_au1cp908 
SELECT 21
CREATE DATABASE IF NOT EXISTS test_wo40gi4o 
DROP TABLE IF EXISTS lz4_table;
SELECT char(NULL);
SELECT toDateOrNull(NULL, NULL);
DROP DATABASE IF EXISTS test_s19qv42d 
CREATE INDEX idx_tab3_4 ON tab3 (col3 DESC,col1,col0 DESC);
DROP USER IF EXISTS u1_02703;
CREATE DATABASE IF NOT EXISTS test_kaxyqa2t 
INSERT INTO test_01193_18429.table_8_346 VALUES 
OPTIMIZE TABLE t_async_inserts_logs FINAL
DROP DATABASE IF EXISTS test_hwnasq2z 
SELECT materialize(toInt16(0)) AS x, toInt8(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
DROP TABLE Issue_2231_Invalid_Nested_Columns_Size;
INSERT INTO test_01193_18429.table_4_176 VALUES 
CREATE ROW POLICY 02763_filter_2 ON 02763_merge_merge_1 USING x=4 AS permissive TO ALL;
DROP DATABASE IF EXISTS test_f59076fh 
SELECT reinterpret(toFloat32(0.2), 'UInt32'), reinterpretAsUInt32(toFloat32(0.2));
SELECT cutQueryString('http://www.example.com/a/b/c?a=b#d=f');
DROP DATABASE IF EXISTS test_ix8x1gkh 
CREATE TABLE test_01193_18429.table_6_204 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_2F2B456E3A766B2935776B7D4F3D31612644552E34464B303A515773667D684E6D424A2936326E27(x UInt8) Engine=Memory;
INSERT INTO r4 SELECT 70 % 10 = 4 ? 70 - 1 : 70
INSERT INTO r6 SELECT 75 % 10 = 6 ? 75 - 1 : 75
SELECT toIPv6('fe80::62:5aff:fed1:daf0') AS ipv6, halfMD5(ipv6), hex(MD4(ipv6)), hex(MD5(ipv6)), hex(SHA1(ipv6)), hex(SHA224(ipv6)), hex(SHA256(ipv6)), hex(SHA512(ipv6)), hex(SHA512_256(ipv6)), farmFingerprint64(ipv6), javaHash(ipv6), xxh3(ipv6), wyHash64(ipv6), xxHash32(ipv6), gccMurmurHash(ipv6), murmurHash2_32(ipv6), javaHashUTF16LE(ipv6), metroHash64(ipv6), hex(sipHash128(ipv6)), hex(murmurHash3_128(ipv6)), sipHash64(ipv6), xxHash64(ipv6), murmurHash2_64(ipv6), cityHash64(ipv6), hiveHash(ipv6), murmurHash3_64(ipv6), murmurHash3_32(ipv6) FORMAT Vertical;
CREATE DATABASE IF NOT EXISTS test_tp1mu8of 
SELECT 'Running test stateless/00915_tuple_orantius.sql from pid=1713' 
SELECT reinterpret(257, 'Int8'), reinterpretAsInt8(257);
SELECT nothingUInt64();
SELECT normalizeQuery('');
SELECT nothingIfArrayArray([[1, NULL]], [[1, 0]]) AS `x` FROM numbers(3)
SELECT count() FROM t_cnf_fuzz WHERE (c4) OR (c1) SETTINGS convert_query_to_cnf = 1
CREATE TABLE test_3F2A275C346F567543523F662F344321213746655E605840617A40244D614B6D316F736B5279604D(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_qjwy0gmn 
select 4 as x format CSV 
SELECT age('week', toDateTime('2014-10-26 00:00:00', 'UTC'), toDateTime('2014-10-27 00:00:00', 'UTC'));
CREATE TABLE test_01193_18429.table_2_290 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT count(), `data_01247`.`number` FROM `test_tc1uzesn`.`data_01247` GROUP BY `number` WITH TOTALS ORDER BY `number` ASC
SELECT multiIf((number % 2) = 0, [toInt32(1), toInt32(2)], (number % 3) = 0, [toFloat32(2), toFloat32(3)], [toInt16(3), toInt16(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE four_rows_per_granule ( p Date, k UInt64, v1 UInt64, v2 Int64 ) ENGINE MergeTree() PARTITION BY toYYYYMM(p) ORDER BY k SETTINGS index_granularity_bytes = 110, min_index_granularity_bytes = 10, write_final_mark = 0, min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0;
DROP QUOTA IF EXISTS sqllt_quota;
INSERT INTO test_01193_18429.table_7_0 VALUES 
ALTER TABLE rename_table_multiple RENAME COLUMN value2 TO value2_old, ADD COLUMN value2 Int64 DEFAULT 7;
INSERT INTO test_01193_18429.table_5_299 VALUES 
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 36076, 500 settings ignore_materialized_views_with_dropped_target_table=1
ALTER TABLE test ADD COLUMN z String DEFAULT 'Hello';
INSERT INTO r1 SELECT 31
CREATE TABLE test_305D64763F78496F5C3164696E2A2D5056576630752C2C472C46683D24324F735C606C7A67353C60(x UInt8) Engine=Memory;
SELECT dateDiff('second', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1927-01-01 00:10:00', 3, 'UTC'));
CREATE TABLE test_01193_18429.table_10_531 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE check_system_tables AS check_system_tables_null Engine=Distributed(test_shard_localhost, currentDatabase(), check_system_tables_null);
SELECT 256, -2147483649, 256 = -2147483649, 256 != -2147483649, 256 < -2147483649, 256 <= -2147483649, 256 > -2147483649, 256 >= -2147483649, -2147483649 = 256, -2147483649 != 256, -2147483649 < 256, -2147483649 <= 256, -2147483649 > 256, -2147483649 >= 256 , toUInt16(256) = toInt64(-2147483649), toUInt16(256) != toInt64(-2147483649), toUInt16(256) < toInt64(-2147483649), toUInt16(256) <= toInt64(-2147483649), toUInt16(256) > toInt64(-2147483649), toUInt16(256) >= toInt64(-2147483649), toInt64(-2147483649) = toUInt16(256), toInt64(-2147483649) != toUInt16(256), toInt64(-2147483649) < toUInt16(256), toInt64(-2147483649) <= toUInt16(256), toInt64(-2147483649) > toUInt16(256), toInt64(-2147483649) >= toUInt16(256) , toInt16(256) = toInt64(-2147483649), toInt16(256) != toInt64(-2147483649), toInt16(256) < toInt64(-2147483649), toInt16(256) <= toInt64(-2147483649), toInt16(256) > toInt64(-2147483649), toInt16(256) >= toInt64(-2147483649), toInt64(-2147483649) = toInt16(256), toInt64(-2147483649) != toInt16(256), toInt64(-2147483649) < toInt16(256), toInt64(-2147483649) <= toInt16(256), toInt64(-2147483649) > toInt16(256), toInt64(-2147483649) >= toInt16(256) , toUInt32(256) = toInt64(-2147483649), toUInt32(256) != toInt64(-2147483649), toUInt32(256) < toInt64(-2147483649), toUInt32(256) <= toInt64(-2147483649), toUInt32(256) > toInt64(-2147483649), toUInt32(256) >= toInt64(-2147483649), toInt64(-2147483649) = toUInt32(256), toInt64(-2147483649) != toUInt32(256), toInt64(-2147483649) < toUInt32(256), toInt64(-2147483649) <= toUInt32(256), toInt64(-2147483649) > toUInt32(256), toInt64(-2147483649) >= toUInt32(256) , toInt32(256) = toInt64(-2147483649), toInt32(256) != toInt64(-2147483649), toInt32(256) < toInt64(-2147483649), toInt32(256) <= toInt64(-2147483649), toInt32(256) > toInt64(-2147483649), toInt32(256) >= toInt64(-2147483649), toInt64(-2147483649) = toInt32(256), toInt64(-2147483649) != toInt32(256), toInt64(-2147483649) < toInt32(256), toInt64(-2147483649) <= toInt32(256), toInt64(-2147483649) > toInt32(256), toInt64(-2147483649) >= toInt32(256) , toUInt64(256) = toInt64(-2147483649), toUInt64(256) != toInt64(-2147483649), toUInt64(256) < toInt64(-2147483649), toUInt64(256) <= toInt64(-2147483649), toUInt64(256) > toInt64(-2147483649), toUInt64(256) >= toInt64(-2147483649), toInt64(-2147483649) = toUInt64(256), toInt64(-2147483649) != toUInt64(256), toInt64(-2147483649) < toUInt64(256), toInt64(-2147483649) <= toUInt64(256), toInt64(-2147483649) > toUInt64(256), toInt64(-2147483649) >= toUInt64(256) , toInt64(256) = toInt64(-2147483649), toInt64(256) != toInt64(-2147483649), toInt64(256) < toInt64(-2147483649), toInt64(256) <= toInt64(-2147483649), toInt64(256) > toInt64(-2147483649), toInt64(256) >= toInt64(-2147483649), toInt64(-2147483649) = toInt64(256), toInt64(-2147483649) != toInt64(256), toInt64(-2147483649) < toInt64(256), toInt64(-2147483649) <= toInt64(256), toInt64(-2147483649) > toInt64(256), toInt64(-2147483649) >= toInt64(256) 
INSERT INTO test_02908_r1_150 SELECT rand64() FROM numbers(5);
INSERT INTO src_4 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 61
SELECT CASE WHEN (col1 % 2) = 0 THEN [col2, col3] WHEN (col1 % 3) = 0 THEN [col4, 'bar'] ELSE ['foo', 'bar'] END FROM multi_if_check;
SELECT data FROM compression_codec_multiple_with_key WHERE id = 2222;
INSERT INTO test_01193_18429.table_6_66 VALUES 
DROP FUNCTION IF EXISTS 02484_plusthreemonths;
select makeDate(1924,1,1);
INSERT INTO r8 SELECT 50
SELECT `data_01270`.`key` FROM `test_vfcbajix`.`data_01270` WHERE `key` = 1
select count(), sum(number) from file('02841.parquet') where indexHint(negative_or_null > -50);
SELECT '(backward, tail) id < 10', id, sequenceNextNode('backward', 'tail')(dt, action, 1) AS next_node FROM test_sequenceNextNode_Nullable WHERE id < 10 GROUP BY id ORDER BY id;
SELECT * FROM (SELECT 1 as key) AS t1 JOIN (SELECT 1 as key) t2 USING key ORDER BY key;
SELECT toString(toStartOfFifteenMinutes(toDateTime(1549483055), 'Europe/London'), 'Europe/London');
select 0 = multiMatchAny(materialize('rbrizgjbigvzfnpgmpkqxoqxvdj'), ['ee', 'cohqnb', 'msol', 'yhlujcvhklnhuomy', 'ietn', 'vgmnlkcsybtokrepzrm', 'wspiryefojxysgrzsxyrluykxfnnbzdstcel', 'mxisnsivndbefqxwznimwgazuulupbaihavg', 'vpzdjvqqeizascxmzdhuq', 'pgvncohlxcqjhfkm', 'mbaypcnfapltsegquurahlsruqvipfhrhq', 'ioxjbcyyqujfveujfhnfdfokfcrlsincjbdt', 'cnvlujyowompdrqjwjx', 'wobwed', 'kdfhaoxiuifotmptcmdbk', 'leoamsnorcvtlmokdomkzuo', 'jjw', 'ogugysetxuqmvggneosbsfbonszepsatq']) from system.numbers limit 10;
INSERT INTO test_01193_18429.table_5_162 VALUES 
CREATE TABLE test_54705E4355607238774C27763B7D734F6C2C25475D2D52297649304F3E4F67763F3C36595E502837(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_7_173 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_table (`f1` Int32, `f2` Int32, `pk` Int32) ENGINE = MergeTree PARTITION BY pk ORDER BY f1 SETTINGS index_granularity = 15322, min_bytes_for_wide_part = 318300419, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 3691, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 9732439472, index_granularity_bytes = 9894667, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 67835, primary_key_compress_block_size = 65341
DROP TABLE IF EXISTS Dates;
CREATE TABLE test_01193_18429.table_6_971 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select 'Constant column';
SELECT 'Running test stateless/01356_view_threads.sql from pid=1705' 
CREATE TABLE test_01193_18429.table_8_542 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT extractTextFromHTML(' \t Hello,\rworld \n ');
CREATE DATABASE IF NOT EXISTS test_0cecm1i8 
INSERT INTO test_01193_18429.table_3_102 VALUES 
insert into t_async_insert_dedup_no_part values 
SELECT multiIf((number % 2) = 0, toInt32(1), (number % 3) = 0, toInt64(2), toUInt8(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_7_745 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT * FROM default_table ORDER BY x, y
SELECT CASE WHEN (number % 2) = 0 THEN toUInt64(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toUInt16(3) END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_4_620 VALUES 
INSERT INTO test_01193_18429.table_4_33 VALUES 
SHOW CREATE POLICY p3_01296 ON table2;
SELECT [-1, toUInt16(1000)];
SELECT CASE WHEN (col1 % 2) = 0 THEN [col2, 'bar'] WHEN (col1 % 3) = 0 THEN ['foo', 'bar'] ELSE [col6, 'bar'] END FROM multi_if_check;
CREATE TABLE test_75345E465F354D78283441427821615D584C39684C3A542B2A6F3E7B7B4D285C4B75276E24494C52(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02516_join_with_totals_and_subquery_bug.gen.sql from pid=1718' 
insert into tesd_dedupl values 
DROP DATABASE IF EXISTS test_l28cbfow 
SELECT `UserID` FROM `test_c5zukzwt`.`users` WHERE `UserID` IN ((SELECT arrayJoin([1468013291393583084, 1321770221388956068])) AS `_subquery3895`)
SELECT * FROM insert_fewer_columns;
SELECT count() FROM t_cnf_fuzz WHERE (c3 AND (NOT c2) AND c4 AND (NOT c2) AND (NOT c1)) OR ((NOT c8) AND (NOT c4) AND c8 AND c7) OR (c4 AND c6) OR (c3 AND (NOT c7) AND (NOT c7) AND (NOT c0)) SETTINGS convert_query_to_cnf = 1
SELECT * FROM orc_arrays
DROP TABLE IF EXISTS fx_5m;
select toTypeName(dict), dict, lowCardinalityIndices(dict), lowCardinalityKeys(dict) from (select '123_' || toLowCardinality(v) as dict from (select arrayJoin(['a', Null, 'bb', '', 'a', Null, 'ccc', 'a', 'bb', '', 'dddd']) as v));
CREATE TABLE xxxx_null (`ts` Nullable(DateTime)) ENGINE = MergeTree ORDER BY toStartOfHour(ts) SETTINGS allow_nullable_key = 1, index_granularity = 3709, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.9871368408203125, replace_long_file_name_to_hash = false, max_file_name_length = 77, merge_max_block_size = 14040, prefer_fetch_merged_part_size_threshold = 5958518413, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 4276562669, index_granularity_bytes = 23552577, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 25964, primary_key_compress_block_size = 44961
CREATE VIEW e (`x` Int64) AS SELECT count() FROM url('https://example.com/', CSV, headers('foo' = '[HIDDEN]', 'a' = '[HIDDEN]'))
DROP DATABASE IF EXISTS test_3hwi6f1n 
INSERT INTO test_01193_18429.table_6_53 VALUES 
SELECT hex(murmurHash3_128('\x01'));
CREATE TABLE test_01193_18429.table_1_503 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_784D224462285D5B422846226F3426383B6F4C725B3B4A427E363D5D237B617462582D2731534A68(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN toInt8(1) WHEN (number % 3) = 0 THEN toInt8(2) ELSE toInt32(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_4_354 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Running test stateless/02677_analyzer_compound_expressions.sql from pid=1726' 
select makeDate32(1980, 10, -17);
SELECT medianGK(NULL, NULL);
DROP DATABASE IF EXISTS test_l7iehks2 
CREATE TABLE test_01193_18429.table_1_297 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE hypothesis_test_test2 (`i` UInt64, `a` UInt64, `b` UInt64, INDEX t a != b TYPE hypothesis GRANULARITY 1) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 1, min_bytes_for_wide_part = 1046791011, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 97, merge_max_block_size = 11786, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 25380105, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 44705, primary_key_compress_block_size = 77243
INSERT INTO t64 SELECT (intExp2(56) - 10 + number) AS x, x, x, x, x, x, x, x FROM numbers(20);
SELECT dictGet('01682_database_for_cache_dictionary.cache_dictionary_complex_key_complex_attributes', 'value_first', (number, concat('id_key_', toString(number)))) as value_first, dictGet('01682_database_for_cache_dictionary.cache_dictionary_complex_key_complex_attributes', 'value_second', (number, concat('id_key_', toString(number)))) as value_second FROM system.numbers LIMIT 3;
CREATE DATABASE IF NOT EXISTS test_na6mzz46 
CREATE TABLE test_01193_18429.table_4_431 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_3F4A486A4D4529417D7574275D79596C29667C40407926694053422C4C2C33616468776A2D546C2A(x UInt8) Engine=Memory;
CREATE TABLE test_5A755A37705E546C692A3A2053404F7646467450322E787B5C445C487B506455425022707C5D6438(x UInt8) Engine=Memory;
SELECT avgWeighted(x, w) FROM values('x Int64, w Int8', (0, 0), (1, 0));
SHOW CREATE test_1602.DICTIONARY;
DROP TABLE test2_00671;
INSERT INTO test_nullable_string_02099 FORMAT TSVRaw
insert into function file(02475_data.bsonEachRow, auto, 'int128 Int128, uint128 UInt128, int256 Int256, uint256 UInt256') select number * -10000000000000000000000::Int128 as int128, number * 10000000000000000000000::UInt128 as uint128, number * -100000000000000000000000000000000000000000000::Int256 as int256, number * 100000000000000000000000000000000000000000000::UInt256 as uint256 from numbers(5) settings engine_file_truncate_on_insert=1
INSERT INTO test_lot_of_parts (a, b, c, val) SELECT 'foo' as a, 'bar' as b, _CAST('1683504000', 'DateTime64') as c, 'baz' as val FROM numbers_mt(95) SETTINGS max_block_size = 1, min_insert_block_size_bytes=1, min_insert_block_size_rows=1;
SELECT * FROM null();
DROP DATABASE IF EXISTS test_ibuk9ivj 
CREATE TABLE test_02908_r2_182 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_182', 'r2') ORDER BY tuple()
SELECT 'Running test stateless/01376_null_logical.sql from pid=1724' 
CREATE TABLE test_6022472D465C235F5D646721775C5E7C643D5576733179395F57465B45535C255063775A3047505D(x UInt8) Engine=Memory;
CREATE TABLE test_3D2262544155416131254956636874312B765C4C7675434C466677626B283A7A5A6E66634B315231(x UInt8) Engine=Memory;
ALTER TABLE concurrent_alter_column ADD COLUMN c108 DOUBLE;
SELECT value FROM system.zookeeper WHERE path = '/clickhouse/tables/01593_concurrent_alter_mutations_kill_many_replicas_long_test_bc61bq8k/s1/replicas/r15/' and name = 'metadata_version'
CREATE TABLE test_01193_18429.table_5_332 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_2631207E51516B64256D53666A6848316E346B304D4622606C21313567574D4B514F69507927412D(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_dj5whefj 
SELECT round(avg(number * log(2)), 6) AS k FROM numbers(10000000) GROUP BY number % 3, number % 2;
SELECT s, replaceAll(s, '_', 'o') AS a, REGEXP_REPLACE(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['__.__', '.__']) AS s);
CREATE TABLE test_432C2E66543A475A5D26413D5F37744D5F61235A316F795A7C793E5A2B402E7744406B244C225435(x UInt8) Engine=Memory;
DROP DICTIONARY dict_complex_cache;
CREATE TABLE test_3B74482F52255F7D79797360415157385579377E54213B2E22364A3731584634303A537E5E387C59(x UInt8) Engine=Memory;
CREATE TABLE 02661_archive_table Engine=File('CSV', '/var/lib/clickhouse/user_files/02661_read_from_archive_test_fyi66vcq_targz_archive*.tar.gz :: *.csv')
SELECT 'Running test stateless/01825_type_json_8.sh from pid=1722' 
INSERT INTO test_table_2 FORMAT JSONCompactStringsEachRow 
CREATE TABLE test_01193_18429.table_7_904 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_5_74 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT * FROM without_fixed_size_columns_replica2 ORDER BY s;
INSERT INTO test_01193_18429.table_3_806 VALUES 
SELECT intDivOrZero(toDecimal256(4.4, 2), toDecimal256(2.2, 2));
SELECT YYYYMMDDToDate32(yyyymmdd) FROM (SELECT 19840121 AS yyyymmdd UNION ALL SELECT 20230911 AS yyyymmdd) ORDER BY yyyymmdd;
SELECT id AS using_id, toTypeName(using_id), t1.id AS t1_id, toTypeName(t1_id), t1.value AS t1_value, toTypeName(t1_value), t2.id AS t2_id, toTypeName(t2_id), t2.value AS t2_value, toTypeName(t2_value), t3.id AS t3_id, toTypeName(t3_id), t3.value AS t3_value, toTypeName(t3_value) FROM test_table_join_1 AS t1 INNER JOIN test_table_join_2 AS t2 USING (id) FULL JOIN test_table_join_3 AS t3 USING(id);
CREATE TABLE test_02908_r3_232 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_232', 'r3') ORDER BY tuple()
SELECT CASE WHEN (number % 2) = 0 THEN [toInt8(1), toInt8(2)] WHEN (number % 3) = 0 THEN [toInt8(2), toInt8(3)] ELSE [toUInt8(3), toUInt8(3)] END FROM system.numbers LIMIT 10;
SELECT count(), X FROM foo_merge JOIN t2 USING Val WHERE Val = 3 AND Id = 3 AND t2.X == 4 GROUP BY X;
DROP DATABASE IF EXISTS test_z2bad25c 
WITH 'ÃÂ¸ÃÂ³ÃÂ¾ÃÂ»ÃÂºÃÂ°' as n SELECT haystack, needle, hasToken(haystack, n) as result FROM ht WHERE func = 'hasToken' AND needle = n AND result != match;
CREATE DATABASE IF NOT EXISTS test_mw51a1lq 
CREATE TABLE mergetree_00588 (`x` UInt64, `s` String) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 44431, min_bytes_for_wide_part = 13550134, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 13102, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 171762, vertical_merge_algorithm_min_columns_to_activate = 85, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 7026335, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 56456, primary_key_compress_block_size = 53388
DROP TABLE IF EXISTS data2014;
DROP DATABASE IF EXISTS test_1obf2uo9 
CREATE DATABASE IF NOT EXISTS test_w1dr9d7p 
CREATE TABLE test_35436F707B2434343F765D4B42782B263A2527584E546024425F416D423254274767683C6D324A5B(x UInt8) Engine=Memory;
CREATE QUOTA q1_01297 KEYED BY user_name FOR INTERVAL 1 minute MAX query_selects = 1 TO r1_01297;
SELECT varPopStable(0.1) FROM numbers(1000000);
CREATE TABLE test_01193_18429.table_3_626 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/02834_sparse_columns_sort_with_limit.sql from pid=1720' 
DROP DATABASE IF EXISTS test_vf0xlxud 
DROP TABLE IF EXISTS defaults_on_defaults;
SELECT id AS using_id, toTypeName(using_id), t1.id AS t1_id, toTypeName(t1_id), t1.value AS t1_value, toTypeName(t1_value), t2.id AS t2_id, toTypeName(t2_id), t2.value AS t2_value, toTypeName(t2_value), t3.id AS t3_id, toTypeName(t3_id), t3.value AS t3_value, toTypeName(t3_value) FROM test_table_join_1 AS t1 LEFT JOIN test_table_join_2 AS t2 USING (id) INNER JOIN test_table_join_3 AS t3 USING(id);
drop table if exists buffer_01277;
alter table many_mutations delete where y = 725 * 2 settings mutations_sync = 0;
CREATE TABLE test_01193_18429.table_7_279 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Running test stateless/02863_non_const_timezone_check.sql from pid=1714' 
RENAME TABLE test_01155_atomic.src TO test_01155_ordinary.src;
CREATE TABLE date_t (`id` UInt32, `value1` String, `date1` Date) ENGINE = ReplacingMergeTree ORDER BY id SETTINGS index_granularity = 51260, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 22220, prefer_fetch_merged_part_size_threshold = 7754704724, vertical_merge_algorithm_min_rows_to_activate = 794770, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 1687802, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 9384, primary_key_compress_block_size = 11577
select 'GROUP BY number';
SELECT 'Running test stateless/02286_function_wyhash.sql from pid=1718' 
INSERT INTO t_arr VALUES 
select substringIndex(materialize('www.clickhouse.com'), '.', materialize(-3));
SELECT 'Running test stateless/02158_ztest_cmp.sh from pid=1722' 
SELECT reinterpret(257, 'Int256'), reinterpretAsInt256(257);
DROP TABLE IF EXISTS replica_01108_4
SELECT 'SELECT N > toUInt64(1)';
SELECT k FROM (SELECT toInt256(123) AS k FROM system.one) INNER JOIN (SELECT toInt256(123) AS k) t USING k;
CREATE TABLE test_225C4E224E562055384B697D7047457A742D7E757375706C7D6C5977472C71727B71505E317D4B72(x UInt8) Engine=Memory;
SELECT encodeURLFormComponent('hello world foo+bar');
SELECT 'SELECT N == D';
show create table quotas format TSVRaw;
CREATE DATABASE IF NOT EXISTS test_fzunlidb 
INSERT INTO test_01193_18429.table_9_339 VALUES 
INSERT INTO r6 SELECT 76 % 10 = 6 ? 76 - 1 : 76
SELECT id, flag FROM test t1 INNER JOIN (SELECT DISTINCT id FROM test) AS t2 ON t1.id = t2.id WHERE flag = 0 and t = 1 AND id NOT IN (SELECT 1 WHERE 0) ORDER BY id;
WITH number % 10 = 0 AS value, number AS time SELECT exponentialMovingAverage(1)(value, time) AS exp_smooth FROM numbers_mt(100000000);
CREATE DATABASE IF NOT EXISTS test_w2xwk77l 
SELECT 'Running test stateless/02249_insert_select_from_input_schema_inference.sql from pid=1713' 
INSERT INTO test_01193_18429.table_7_5 VALUES 
SELECT intDivOrZero(toDecimal256(4.4, 5), toDecimal32(2.2, 2));
CREATE TABLE test_237450452C38613D6B79776E7464554743525C21357141725B57415449466D31492F54235C42327D(x UInt8) Engine=Memory;
CREATE TABLE test_2350722F542C40265C505B245B64513F2A493B4F62276F7E77253247442C5F2A42614458284E682B(x UInt8) Engine=Memory;
CREATE TABLE t_mutations_subcolumns (`id` UInt64, `n` String, `obj` Object(Nullable('json'))) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 5049, min_bytes_for_wide_part = 198175187, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 119, merge_max_block_size = 15717, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 2470166999, index_granularity_bytes = 16210091, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 42899, primary_key_compress_block_size = 35942
SELECT quantiles(0.5)(inf) FROM numbers(5);
EXISTS TABLE t_01048;
select abs(asinh(sinh(1)) - 1) < 1e-9;
select round(1000 * ngramDistance(materialize(''),materialize('')))=round(1000 * ngramDistance(materialize(''), '')) from system.numbers limit 5;
CREATE TABLE test_6E5936357D264D26652A303B3B5257635D49444F6D4F3C74455B5B4F3846756A7927526167505352(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_9_726 VALUES 
SELECT * FROM merge(currentDatabase(), 'test_distributed_1') WHERE _table in ('test_distributed_1', 'test_distributed_2');
SELECT toModifiedJulianDay('1858-11-16');
CREATE TABLE test_5E486F3B54554F387B284369304E7249716623492D6B3C74425B725B32605D2435775E4743395977(x UInt8) Engine=Memory;
SELECT k, v2 FROM adaptive_granularity_alter WHERE k >= 100 OR k = 42;
select positionUTF8(materialize('ÃÂ°ÃÂ±ÃÂ²') as h, lowerUTF8('ÃÂ°ÃÂÃÂ²' as n)) = positionCaseInsensitiveUTF8(h, n);
CREATE TABLE test_4A6A5D276A6657293C7D5B24447D26582A6F6668273070717526747A5D6E37697D7E6E5E543C4E4C(x UInt8) Engine=Memory;
with '2018-01-12 22:33:44' as s, toDateTime(s) as datetime, toDateTime64(s, 6) as datetime64, toDate(s) as date, toDate32(s) as date32 SELECT formatDateTimeInJodaSyntax(datetime, 'HHH'), formatDateTimeInJodaSyntax(datetime64, 'HHH'), formatDateTimeInJodaSyntax(date, 'HHH'), formatDateTimeInJodaSyntax(date32, 'HHH');
DROP TABLE IF EXISTS test_unexpected_cluster;
SELECT '------';
CREATE TABLE elog (`date` Date, `engine_id` UInt32, `referrer` String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/00953_zookeeper_suetin_deduplication_bug_test_akbfizkr/test_akbfizkr/elog/{shard}', '{replica}') PARTITION BY date ORDER BY engine_id SETTINGS replicated_deduplication_window = 2, cleanup_delay_period = 4, cleanup_delay_period_random_add = 0, cleanup_thread_preferred_points_per_iteration = 0, index_granularity = 1383, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 248, prefer_fetch_merged_part_size_threshold = 3497906573, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 13317664, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 21111, primary_key_compress_block_size = 45627
SELECT 'Running test stateless/00700_decimal_arithm.sql from pid=1722' 
INSERT INTO test_01193_18429.table_9_779 VALUES 
CREATE TABLE test_3B755E32416E572A72492F3A226C662752497E202A6530643E3F2D775337436828633F7B523C5375(x UInt8) Engine=Memory;
SELECT toStartOfYear(toDateTime(1419800400), 'Asia/Istanbul');
INSERT INTO test_01193_18429.table_10_280 VALUES 
SELECT round(cramersV(a, b), 2), round(cramersVBiasCorrected(a, b), 2), round(theilsU(a, b), 2), round(theilsU(b, a), 2), round(contingency(a, b), 2) FROM (SELECT number % 10 AS a, number % 5 AS b FROM numbers(150));
CREATE TABLE test (`col1` Int64, `dt` Date) ENGINE = MergeTree PARTITION BY dt ORDER BY tuple() SETTINGS index_granularity = 54364, min_bytes_for_wide_part = 197322109, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 122, merge_max_block_size = 1454, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 8, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 28075918, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 32764, primary_key_compress_block_size = 89720
SELECT toStartOfWeek(toDate(16433), 0);
insert into test2 values 
CREATE TABLE test_01193_18429.table_8_695 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 32767, 4294967295, 32767 = 4294967295, 32767 != 4294967295, 32767 < 4294967295, 32767 <= 4294967295, 32767 > 4294967295, 32767 >= 4294967295, 4294967295 = 32767, 4294967295 != 32767, 4294967295 < 32767, 4294967295 <= 32767, 4294967295 > 32767, 4294967295 >= 32767 , toUInt16(32767) = toUInt32(4294967295), toUInt16(32767) != toUInt32(4294967295), toUInt16(32767) < toUInt32(4294967295), toUInt16(32767) <= toUInt32(4294967295), toUInt16(32767) > toUInt32(4294967295), toUInt16(32767) >= toUInt32(4294967295), toUInt32(4294967295) = toUInt16(32767), toUInt32(4294967295) != toUInt16(32767), toUInt32(4294967295) < toUInt16(32767), toUInt32(4294967295) <= toUInt16(32767), toUInt32(4294967295) > toUInt16(32767), toUInt32(4294967295) >= toUInt16(32767) , toUInt16(32767) = toUInt64(4294967295), toUInt16(32767) != toUInt64(4294967295), toUInt16(32767) < toUInt64(4294967295), toUInt16(32767) <= toUInt64(4294967295), toUInt16(32767) > toUInt64(4294967295), toUInt16(32767) >= toUInt64(4294967295), toUInt64(4294967295) = toUInt16(32767), toUInt64(4294967295) != toUInt16(32767), toUInt64(4294967295) < toUInt16(32767), toUInt64(4294967295) <= toUInt16(32767), toUInt64(4294967295) > toUInt16(32767), toUInt64(4294967295) >= toUInt16(32767) , toUInt16(32767) = toInt64(4294967295), toUInt16(32767) != toInt64(4294967295), toUInt16(32767) < toInt64(4294967295), toUInt16(32767) <= toInt64(4294967295), toUInt16(32767) > toInt64(4294967295), toUInt16(32767) >= toInt64(4294967295), toInt64(4294967295) = toUInt16(32767), toInt64(4294967295) != toUInt16(32767), toInt64(4294967295) < toUInt16(32767), toInt64(4294967295) <= toUInt16(32767), toInt64(4294967295) > toUInt16(32767), toInt64(4294967295) >= toUInt16(32767) , toInt16(32767) = toUInt32(4294967295), toInt16(32767) != toUInt32(4294967295), toInt16(32767) < toUInt32(4294967295), toInt16(32767) <= toUInt32(4294967295), toInt16(32767) > toUInt32(4294967295), toInt16(32767) >= toUInt32(4294967295), toUInt32(4294967295) = toInt16(32767), toUInt32(4294967295) != toInt16(32767), toUInt32(4294967295) < toInt16(32767), toUInt32(4294967295) <= toInt16(32767), toUInt32(4294967295) > toInt16(32767), toUInt32(4294967295) >= toInt16(32767) , toInt16(32767) = toUInt64(4294967295), toInt16(32767) != toUInt64(4294967295), toInt16(32767) < toUInt64(4294967295), toInt16(32767) <= toUInt64(4294967295), toInt16(32767) > toUInt64(4294967295), toInt16(32767) >= toUInt64(4294967295), toUInt64(4294967295) = toInt16(32767), toUInt64(4294967295) != toInt16(32767), toUInt64(4294967295) < toInt16(32767), toUInt64(4294967295) <= toInt16(32767), toUInt64(4294967295) > toInt16(32767), toUInt64(4294967295) >= toInt16(32767) , toInt16(32767) = toInt64(4294967295), toInt16(32767) != toInt64(4294967295), toInt16(32767) < toInt64(4294967295), toInt16(32767) <= toInt64(4294967295), toInt16(32767) > toInt64(4294967295), toInt16(32767) >= toInt64(4294967295), toInt64(4294967295) = toInt16(32767), toInt64(4294967295) != toInt16(32767), toInt64(4294967295) < toInt16(32767), toInt64(4294967295) <= toInt16(32767), toInt64(4294967295) > toInt16(32767), toInt64(4294967295) >= toInt16(32767) , toUInt32(32767) = toUInt32(4294967295), toUInt32(32767) != toUInt32(4294967295), toUInt32(32767) < toUInt32(4294967295), toUInt32(32767) <= toUInt32(4294967295), toUInt32(32767) > toUInt32(4294967295), toUInt32(32767) >= toUInt32(4294967295), toUInt32(4294967295) = toUInt32(32767), toUInt32(4294967295) != toUInt32(32767), toUInt32(4294967295) < toUInt32(32767), toUInt32(4294967295) <= toUInt32(32767), toUInt32(4294967295) > toUInt32(32767), toUInt32(4294967295) >= toUInt32(32767) , toUInt32(32767) = toUInt64(4294967295), toUInt32(32767) != toUInt64(4294967295), toUInt32(32767) < toUInt64(4294967295), toUInt32(32767) <= toUInt64(4294967295), toUInt32(32767) > toUInt64(4294967295), toUInt32(32767) >= toUInt64(4294967295), toUInt64(4294967295) = toUInt32(32767), toUInt64(4294967295) != toUInt32(32767), toUInt64(4294967295) < toUInt32(32767), toUInt64(4294967295) <= toUInt32(32767), toUInt64(4294967295) > toUInt32(32767), toUInt64(4294967295) >= toUInt32(32767) , toUInt32(32767) = toInt64(4294967295), toUInt32(32767) != toInt64(4294967295), toUInt32(32767) < toInt64(4294967295), toUInt32(32767) <= toInt64(4294967295), toUInt32(32767) > toInt64(4294967295), toUInt32(32767) >= toInt64(4294967295), toInt64(4294967295) = toUInt32(32767), toInt64(4294967295) != toUInt32(32767), toInt64(4294967295) < toUInt32(32767), toInt64(4294967295) <= toUInt32(32767), toInt64(4294967295) > toUInt32(32767), toInt64(4294967295) >= toUInt32(32767) , toInt32(32767) = toUInt32(4294967295), toInt32(32767) != toUInt32(4294967295), toInt32(32767) < toUInt32(4294967295), toInt32(32767) <= toUInt32(4294967295), toInt32(32767) > toUInt32(4294967295), toInt32(32767) >= toUInt32(4294967295), toUInt32(4294967295) = toInt32(32767), toUInt32(4294967295) != toInt32(32767), toUInt32(4294967295) < toInt32(32767), toUInt32(4294967295) <= toInt32(32767), toUInt32(4294967295) > toInt32(32767), toUInt32(4294967295) >= toInt32(32767) , toInt32(32767) = toUInt64(4294967295), toInt32(32767) != toUInt64(4294967295), toInt32(32767) < toUInt64(4294967295), toInt32(32767) <= toUInt64(4294967295), toInt32(32767) > toUInt64(4294967295), toInt32(32767) >= toUInt64(4294967295), toUInt64(4294967295) = toInt32(32767), toUInt64(4294967295) != toInt32(32767), toUInt64(4294967295) < toInt32(32767), toUInt64(4294967295) <= toInt32(32767), toUInt64(4294967295) > toInt32(32767), toUInt64(4294967295) >= toInt32(32767) , toInt32(32767) = toInt64(4294967295), toInt32(32767) != toInt64(4294967295), toInt32(32767) < toInt64(4294967295), toInt32(32767) <= toInt64(4294967295), toInt32(32767) > toInt64(4294967295), toInt32(32767) >= toInt64(4294967295), toInt64(4294967295) = toInt32(32767), toInt64(4294967295) != toInt32(32767), toInt64(4294967295) < toInt32(32767), toInt64(4294967295) <= toInt32(32767), toInt64(4294967295) > toInt32(32767), toInt64(4294967295) >= toInt32(32767) , toUInt64(32767) = toUInt32(4294967295), toUInt64(32767) != toUInt32(4294967295), toUInt64(32767) < toUInt32(4294967295), toUInt64(32767) <= toUInt32(4294967295), toUInt64(32767) > toUInt32(4294967295), toUInt64(32767) >= toUInt32(4294967295), toUInt32(4294967295) = toUInt64(32767), toUInt32(4294967295) != toUInt64(32767), toUInt32(4294967295) < toUInt64(32767), toUInt32(4294967295) <= toUInt64(32767), toUInt32(4294967295) > toUInt64(32767), toUInt32(4294967295) >= toUInt64(32767) , toUInt64(32767) = toUInt64(4294967295), toUInt64(32767) != toUInt64(4294967295), toUInt64(32767) < toUInt64(4294967295), toUInt64(32767) <= toUInt64(4294967295), toUInt64(32767) > toUInt64(4294967295), toUInt64(32767) >= toUInt64(4294967295), toUInt64(4294967295) = toUInt64(32767), toUInt64(4294967295) != toUInt64(32767), toUInt64(4294967295) < toUInt64(32767), toUInt64(4294967295) <= toUInt64(32767), toUInt64(4294967295) > toUInt64(32767), toUInt64(4294967295) >= toUInt64(32767) , toUInt64(32767) = toInt64(4294967295), toUInt64(32767) != toInt64(4294967295), toUInt64(32767) < toInt64(4294967295), toUInt64(32767) <= toInt64(4294967295), toUInt64(32767) > toInt64(4294967295), toUInt64(32767) >= toInt64(4294967295), toInt64(4294967295) = toUInt64(32767), toInt64(4294967295) != toUInt64(32767), toInt64(4294967295) < toUInt64(32767), toInt64(4294967295) <= toUInt64(32767), toInt64(4294967295) > toUInt64(32767), toInt64(4294967295) >= toUInt64(32767) , toInt64(32767) = toUInt32(4294967295), toInt64(32767) != toUInt32(4294967295), toInt64(32767) < toUInt32(4294967295), toInt64(32767) <= toUInt32(4294967295), toInt64(32767) > toUInt32(4294967295), toInt64(32767) >= toUInt32(4294967295), toUInt32(4294967295) = toInt64(32767), toUInt32(4294967295) != toInt64(32767), toUInt32(4294967295) < toInt64(32767), toUInt32(4294967295) <= toInt64(32767), toUInt32(4294967295) > toInt64(32767), toUInt32(4294967295) >= toInt64(32767) , toInt64(32767) = toUInt64(4294967295), toInt64(32767) != toUInt64(4294967295), toInt64(32767) < toUInt64(4294967295), toInt64(32767) <= toUInt64(4294967295), toInt64(32767) > toUInt64(4294967295), toInt64(32767) >= toUInt64(4294967295), toUInt64(4294967295) = toInt64(32767), toUInt64(4294967295) != toInt64(32767), toUInt64(4294967295) < toInt64(32767), toUInt64(4294967295) <= toInt64(32767), toUInt64(4294967295) > toInt64(32767), toUInt64(4294967295) >= toInt64(32767) , toInt64(32767) = toInt64(4294967295), toInt64(32767) != toInt64(4294967295), toInt64(32767) < toInt64(4294967295), toInt64(32767) <= toInt64(4294967295), toInt64(32767) > toInt64(4294967295), toInt64(32767) >= toInt64(4294967295), toInt64(4294967295) = toInt64(32767), toInt64(4294967295) != toInt64(32767), toInt64(4294967295) < toInt64(32767), toInt64(4294967295) <= toInt64(32767), toInt64(4294967295) > toInt64(32767), toInt64(4294967295) >= toInt64(32767) 
SELECT test_table.a FROM test_table ORDER BY (test_table.a > test_table.b) + 1 AND (test_table.a > test_table.c) + 1;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toUInt32(1) <= N as r FORMAT CSV;
SELECT 'Running test stateless/00705_drop_create_merge_tree.sh from pid=1726' 
OPTIMIZE TABLE defaults_on_defaults FINAL;
SELECT concat(42, 144);
CREATE TABLE test_table (`f1` Int32, `f2` Int32, `pk` Int32) ENGINE = MergeTree PARTITION BY pk ORDER BY f1 SETTINGS index_granularity = 6282, min_bytes_for_wide_part = 500816156, ratio_of_defaults_for_sparse_serialization = 0.6482152342796326, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 17660, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 982030, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 6568703, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 61192, primary_key_compress_block_size = 67597
insert into t3 select number, number from numbers(7000, 1000);
SELECT toDecimal32OrDefault ('\'', 4);
create table data_01256 as system.numbers Engine=Memory();
desc format(TSV, '{\'key1\' : [[\'2020-01-01 00:00:00\']], \'key2\' : [[\'2020-01-01\']]}\n{\'key1\' : [[\'2020-01-01\']], \'key2\' : [[\'Some string\']]}');
CREATE INDEX idx_tab4_4 ON tab4 (col4 DESC,col3,col0 DESC,col1 DESC);
DROP DATABASE IF EXISTS test_bk76swvp 
SELECT 'Running test stateless/02732_rename_after_processing.sh from pid=1726' 
CREATE TABLE test_01193_18429.table_4_242 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT inf as x, not(x), not(not(x)), (not(x)) IS NULL SETTINGS allow_experimental_analyzer=1;
ATTACH TABLE mergeTree_02184;
INSERT INTO test_01193_18429.table_9_597 VALUES 
SELECT 'Running test stateless/02122_parallel_formatting_PrettySpaceNoEscapes.sh from pid=1718' 
set load_marks_asynchronously = 0;
SELECT count() FROM t1 JOIN t2 USING (time_alias);
SELECT '-- with ASC/DESC modifiers';
select hasSubstr([-128, 1., 512], [1.]);
SELECT '==============';
SELECT length(toString(groupArrayState(toDateTime(number)))) FROM (SELECT * FROM system.numbers LIMIT 10);
CREATE TABLE test_02908_r2_157 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_157', 'r2') ORDER BY tuple()
SHOW CREATE DICTIONARY 2024_dictionary_with_comment;
SELECT CASE WHEN (number % 2) = 0 THEN toInt8(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toUInt16(3) END FROM system.numbers LIMIT 10;
SELECT hex(toDecimal32(1.0, 2));
SELECT materialize(toDate('2015-02-03')) > '2015-02-04';
CREATE TABLE aggregating_00155 (d Date DEFAULT today(), x UInt64, s AggregateFunction(sum, UInt64)) ENGINE = AggregatingMergeTree(d, x, 8192)
DROP TABLE syntax2_persons_02240;
SELECT 'Running test stateless/01475_read_subcolumns.sql from pid=1722' 
CREATE TABLE test_4021767C5C5F605F653E744521645566546432295A38522B3A2F7173543A203C4333613F3E7B6943(x UInt8) Engine=Memory;
CREATE TABLE test_30222D6E40704A2457323F34233972262A577A337A254D343A7665567C767D7B2D3A363E5E652467(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_7_66 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT evalMLMethod(NULL);
SYSTEM SYNC REPLICA concurrent_kill_5
SELECT toInt8(0) AS x, toInt8(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
INSERT INTO test_01193_18429.table_8_833 VALUES 
ALTER TABLE concurrent_alter_column ADD COLUMN c27 DOUBLE;
SELECT CASE WHEN (number % 2) = 0 THEN toInt32(1) WHEN (number % 3) = 0 THEN toFloat32(2) ELSE toInt32(3) END FROM system.numbers LIMIT 10;
ATTACH TABLE sparse_tuple;
INSERT INTO t1 SELECT number as a, 100 + number as b FROM system.numbers LIMIT 1, 10;
CREATE TABLE test_01193_18429.table_9_513 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE t_collisions (`col1` Int32, `e798545eefc8b7a1c2c81ff00c064ad8` Int32) ENGINE = MergeTree ORDER BY tuple() SETTINGS replace_long_file_name_to_hash = 1, max_file_name_length = 42, index_granularity = 53676, min_bytes_for_wide_part = 949274231, ratio_of_defaults_for_sparse_serialization = 0., merge_max_block_size = 24277, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 15986431, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 43558, primary_key_compress_block_size = 84025
select [0] = multiSearchAllPositions(materialize('abcd'), ['cdefgh']);
CREATE TABLE test_alter_r2 (`x` Date, `s` String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01267/alter', 'r2') PARTITION BY x ORDER BY s SETTINGS index_granularity = 7543, min_bytes_for_wide_part = 989006097, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 10990, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 91, min_merge_bytes_to_use_direct_io = 1269974809, index_granularity_bytes = 12570249, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 40681, primary_key_compress_block_size = 69505
insert into function file(02475_data.bsonEachRow) select toString(number) as x from numbers(2)
CREATE TABLE test_01193_18429.table_1_941 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT '1 MONTH';
CREATE TABLE t_having (c0 Int32, c1 UInt64) ENGINE = Memory;
CREATE DATABASE IF NOT EXISTS test_9knxm3j2 
select arraySlice([], materialize(NULL), NULL), 1 from numbers(2);
SELECT arrayMap((x, y) -> (x, y), [1, 2, 3], [4, 5, 6]) FROM remote('127.0.0.{2,3}') ORDER BY rand();
SELECT stddevSampOrNullIfMerge(state) FROM (SELECT stddevSampOrNullIfState(x, x > 0) AS state FROM (SELECT 1 AS x));
SELECT id, sumIf(value1, predicate_value), sumIf(value2, predicate_value), sumIf(value3, predicate_value), sumIf(value4, predicate_value) FROM test_table_unsigned_values GROUP BY id ORDER BY id;
CREATE TABLE test_01193_18429.table_5_152 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_6_716 VALUES 
INSERT INTO t_having SELECT number, number FROM numbers(1000);
INSERT INTO r4 SELECT 11 % 10 = 4 ? 11 - 1 : 11
CREATE TABLE test_5E5864397D725C6D20374E2C4A457C263B7240346B655669357D34423A56392461477C436F5B6B73(x UInt8) Engine=Memory;
select a2, b2 + 1 from tab1 any left join tab2 on b1 + 1 = a2 + 1 and a1 + 4 = b2 + 2;
INSERT INTO test_01193_18429.table_5_255 VALUES 
drop table if exists test_byte_size_other;
INSERT INTO test_01193_18429.table_4_876 VALUES 
SELECT c1, c2, c3 FROM s3Cluster('test_cluster_two_shards_localhost', 'http://localhost:11111/test/{a,b,c}.tsv', 'TSV', 'c1 UInt64, c2 UInt64, c3 UInt64') ORDER BY c1 ASC, c2 ASC, c3 ASC
SELECT 1 FROM `system`.`columns` AS `T1` ALL INNER JOIN cluster('test_shard_localhost', 'system.tables') AS `T2` ON `T1`.`table` = `T2`.`name` LIMIT 1
SELECT CASE WHEN (number % 2) = 0 THEN toInt16(1) WHEN (number % 3) = 0 THEN toFloat32(2) ELSE toUInt32(3) END FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/00397_tsv_format_synonym.sql from pid=1718' 
DROP DATABASE IF EXISTS test_h75tm4x2 
create table test_table_sharded( date Date, text String, hash UInt64 ) engine=MergeTree(date, (hash, date), 8192);
CREATE TABLE test_595D6F43472C4F6B6560454B4F5B39655045243D2B4B72323E592B7D61675B68343C5E674825463E(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_xcbl266t 
CREATE TABLE test_01193_18429.table_6_677 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_5_523 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT uniqUpTo(3)((x, arrayMap(elem -> [elem, elem], x))) FROM (SELECT arrayJoin([[], ['a'], ['a', 'b'], []]) AS x);
INSERT INTO test_01193_18429.table_10_553 VALUES 
CREATE DATABASE IF NOT EXISTS test_ycc48fkt 
DROP TABLE IF EXISTS indices_mutaions2;
SELECT 'SELECT N >= toUInt16(1)';
DESC TABLE test_ddmy1zff.numbers_100k_log
INSERT INTO bloom_filter_idx3 VALUES 
select 6 = position('abcdefgh', materialize('fgh')) from system.numbers limit 10;
insert into test_byte_size_string values
INSERT INTO r5 SELECT 96
SELECT 'Running test stateless/00618_nullable_in.sql from pid=1726' 
SELECT * from defaults_on_defaults where ArrLen = 0;
SELECT 'join_algorithm = default, join_use_nulls = 0, t1 JOIN t4';
CREATE TABLE test_01193_18429.table_4_381 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_4F5E462B247D347546224A367A6B2650245A3035792964565C5E6257423E2F5C3C4E37733C70717D(x UInt8) Engine=Memory;
SET max_block_size=100e3;
CREATE TABLE data_01509 (`key` UInt64, `value` String) ENGINE = MergeTree ORDER BY key SETTINGS index_granularity = 52428, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 2465, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 22739355, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 44310, primary_key_compress_block_size = 95920
select 0 = multiSearchFirstIndex(materialize('yevfiumtjatfdnqixatbprvzwqlfgu'), ['ozghvskaixje', 'vmdrvdjhwxdvajmkpcxigsjzmtuhdxgllhzrpqd', 'qfhnxpcmtzpociajidwlcvobjfyxfcugsxy', 'pgamvhedjibcghinjrnowqzkfzibmfmh', 'bcmrdzpcczhquy', 'czosacvwfsbdvwwyirpvbve', 'qu', 'fdkobwlnmxbpvjkapextlbcrny', 'bqutjqobkyobhtpevjvewyksnoqyjunnnmtocr', 'kjlgff', 'oitltmhdburybwfxrjtxdiry', 'kiokuquyllpeagxygqugfmtm', 'wlbkl', 'khubpmstqjzzjzmsvfmrbmknykszqvue', 'lqrbmyndsztyrkcgqxcsnsanqjigimaxce', 'nitnyonuzedorrtkxhhgedohqcojbvtvjx']) from system.numbers limit 10;
select [0] = multiSearchAllPositions(materialize('abc'), ['defg']) from system.numbers limit 10;
INSERT INTO r3 SELECT 12 % 10 = 3 ? 12 - 1 : 12
CREATE FUNCTION 02148_test_function AS () -> (SELECT * FROM 02148_test_table LIMIT 1);
DROP TABLE IF EXISTS syntax2_persons_02240;
SELECT arrayJoin([tuple([(toNullable(NULL), -9223372036854775808, toNullable(3.4028234663852886e38), arrayJoin([tuple([(toNullable(NULL), 2147483647, toNullable(0.5), k2)])]), k2)])]) AS row, arrayJoin([(1024, k2)]), -9223372036854775807, 256, tupleElement(row, 1048576, 1024) AS k FROM t__fuzz_282 FINAL ORDER BY (toNullable('655.36'), 2, toNullable('0.2147483648'), k2) ASC, toNullable('102.3') DESC NULLS FIRST, '10.25' DESC, k ASC NULLS FIRST format Null;
DROP DATABASE IF EXISTS test_cucqvwhf 
SYSTEM RELOAD DICTIONARY test_dictionary;
SELECT * FROM (SELECT (1, 's') :: Tuple(t Int32, s String) as t ) as na, (SELECT 1 as t ) as t;
DROP DATABASE IF EXISTS test_r1sdajn9 
select 1 = multiSearchAny(materialize('khljxzxlpcrxpkrfybbfk'), ['', 'lpc', 'rxpkrfybb', 'crxp', '', 'pkr', 'jxzxlpcrxpkrf', '', 'xzxlpcr', 'xpk', 'fyb', 'xzxlpcrxpkrfybbfk', 'k', 'lpcrxp', 'ljxzxlpcr', 'r', 'pkr', 'fk']) from system.numbers limit 10;
CREATE DATABASE IF NOT EXISTS test_lxyabdfo 
DROP DATABASE IF EXISTS test_1znyiig5 
SELECT 'Running test stateless/00834_kill_mutation_replicated_zookeeper.sh from pid=1713' 
CREATE TABLE test_table ( id UInt64, value Date32 ) ENGINE=TinyLog;
INSERT INTO r6 SELECT 16
DROP TABLE IF EXISTS default_join2;
INSERT INTO test_01193_18429.table_1_753 VALUES 
INSERT INTO test_01193_18429.table_4_765 VALUES 
CREATE TABLE test_01193_18429.table_7_661 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP DATABASE IF EXISTS test_75cvpnaj 
select * from remote('127.2', view(select sleep(3) from system.one)) settings receive_timeout=1, async_socket_for_remote=1, use_hedged_requests=0 format Null;
insert into tp_1 select number, number from numbers(4);
CREATE TABLE test_5A5A5751792758756F3E686627435A5D374D39297B432D30767B3042337921687A336F215C5A5065(x UInt8) Engine=Memory;
select 'byteSize for others: Nullable, Tuple, LowCardinality';
DROP TABLE tnul SYNC;
SELECT uniqTheta([], []);
CREATE TABLE test_2060734E277D2025674D30786D354D515F4A7C6546386E2150684E32657C5F5E337D593E4C545520(x UInt8) Engine=Memory;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (4 < 59 AND 58 > 0 ? 4 : 0)), throwIf(last != (4 < 59 AND 58 > 0 ? least(59 - 1, 4 + 58 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(59) LIMIT 4, 58);
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), toRelativeQuarterNum(N, 'Asia/Istanbul') as r FORMAT CSV;
SELECT `x` FROM generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8)))))))))))))))))))))))))))))))))))))))))))))))))', 1, 1, 1) LIMIT 1
INSERT INTO test_01193_18429.table_9_909 VALUES 
ALTER TABLE src_1 REPLACE PARTITION 9 FROM src_0
insert into X (id, x_name) values 
INSERT INTO test_01193_18429.table_2_917 VALUES 
INSERT INTO test_01193_18429.table_9_490 VALUES 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c9) AND (NOT c2)) OR ((NOT c8) AND c8) OR (c1 AND (NOT c7) AND c8) OR ((NOT c1) AND (NOT c4) AND (NOT c9) AND (NOT c8) AND c9) OR ((NOT c4) AND (NOT c3) AND c2 AND (NOT c4) AND c5) OR (c9 AND c1 AND (NOT c9)) SETTINGS convert_query_to_cnf = 0
SELECT a, b FROM t_read_in_order WHERE a = 1 ORDER BY b DESC SETTINGS read_in_order_two_level_merge_threshold = 1;
CREATE TABLE test_7B5661282363284B584E345F475C4320292C385A434C417C4C2B63565865534A32494359763D6449(x UInt8) Engine=Memory;
select sipHash128Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34)) == sipHash128(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34));
SELECT number, range(number + 10) AS array, toString(number) AS string FROM numbers(10) FORMAT JSONCompactEachRowWithNamesAndTypes
INSERT INTO test_01193_18429.table_4_504 VALUES 
CREATE DATABASE IF NOT EXISTS test_5h6y7036 
INSERT INTO test_01193_18429.table_6_292 VALUES 
optimize table tbl_8parts_8granules_seq final;
CREATE TABLE test_01193_18429.table_8_776 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select arrayExists(x -> position(x, 'a') > 0, ['a']) 
select number, number + 1, concat('string: ', toString(number)) from numbers(200000) format RowBinaryWithNamesAndTypes
CREATE INDEX idx_tab2_0 ON tab2 (col3 DESC,col0 DESC);
SELECT * FROM 02952_disjunction_optimization WHERE a <> 1 AND a <> 2 AND a <> 4;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (13 < 8 AND 82 > 0 ? 13 : 0)), throwIf(last != (13 < 8 AND 82 > 0 ? least(8 - 1, 13 + 82 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(8) LIMIT 13, 82);
CREATE TABLE test_01193_18429.table_3_297 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select * from merge order by dt;
SELECT reinterpretAsFixedString(-1);
CREATE TABLE test_01193_18429.table_8_517 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT any(array(0)) AS k FROM remote('127.0.0.{1,2}', numbers(10));
Select sum(1 - number) from numbers(10);
CREATE TABLE test_01193_18429.table_10_972 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/00751_low_cardinality_nullable_group_by.sql from pid=1720' 
CREATE TABLE test_226D2C7440383E223A6C2D555D386851727A414F327658667E722C256F457D444B5C54402179674C(x UInt8) Engine=Memory;
DROP TABLE test_log;
INSERT INTO test_01193_18429.table_2_21 VALUES 
alter table many_mutations delete where y = 325 * 2 settings mutations_sync = 0;
SELECT 'Running test stateless/01670_distributed_bytes_to_throw_insert.sql from pid=1714' 
CREATE TABLE test_454F684C2F3032612F6563536D503B7C62426D6D236A304A273551576B244D585269316B4652763A(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_1_356 VALUES 
CREATE TABLE data_compact (`root.array` Array(UInt8)) ENGINE = MergeTree ORDER BY tuple() SETTINGS min_rows_for_wide_part = 100, min_bytes_for_wide_part = 1000000000., index_granularity = 16459, ratio_of_defaults_for_sparse_serialization = 0.15225757658481598, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 19057, prefer_fetch_merged_part_size_threshold = 3875541905, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 26099732, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 30730, primary_key_compress_block_size = 68634
SELECT 'Running test stateless/00432_aggregate_function_scalars_and_constants.sql from pid=1718' 
INSERT INTO test_01193_18429.table_4_663 VALUES 
DROP TABLE IF EXISTS realtimebuff;
CREATE TABLE test_02908_r2_255 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_255', 'r2') ORDER BY tuple()
INSERT INTO r9 SELECT 48 % 10 = 9 ? 48 - 1 : 48
CREATE TABLE test_01193_18429.table_6_551 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT JSONExtract('{"a":123456, "b":3.55}', 'Tuple(a LowCardinality(Int32), b Decimal(5, 2))');
INSERT INTO test_01193_18429.table_6_23 VALUES 
alter table many_mutations delete where y = 131 * 2 settings mutations_sync = 0;
SELECT `__table1`.`x` AS `x`, `__table1`.`y` AS `y`, `__table1`.`r.y` AS `r.y`, `__table1`.`z` AS `z`, `__table6`.`z` AS `rr.z`, `__table6`.`a` AS `a` FROM (SELECT `__table2`.`x` AS `x`, `__table2`.`y` AS `y`, `__table4`.`y` AS `r.y`, `__table4`.`z` AS `z` FROM (SELECT `__table3`.`x` AS `x`, `__table3`.`y` AS `y` FROM `test_e3fwduud`.`tab1` AS `__table3` WHERE `__table3`.`x` != 2) AS `__table2` ANY LEFT JOIN (SELECT `__table5`.`y` AS `y`, `__table5`.`z` AS `z` FROM `test_e3fwduud`.`tab2` AS `__table5` WHERE `__table5`.`y` != 4) AS `__table4` ON `__table2`.`y` = `__table4`.`y`) AS `__table1` ANY LEFT JOIN (SELECT `__table7`.`z` AS `z`, `__table7`.`a` AS `a` FROM `test_e3fwduud`.`tab3` AS `__table7` WHERE `__table7`.`z` != 8) AS `__table6` ON `__table1`.`z` = `__table6`.`z` ORDER BY `__table1`.`x` ASC SETTINGS allow_experimental_parallel_reading_from_replicas = 2, max_parallel_replicas = 2, parallel_replicas_for_non_replicated_merge_tree = 1, prefer_localhost_replica = 1, cluster_for_parallel_replicas = 'test_cluster_one_shard_three_replicas_localhost', allow_experimental_analyzer = 1
SELECT sumMap([number % 3, number % 4 - 1], [number :: UInt256, NULL]) FROM numbers(3) GROUP BY number WITH ROLLUP ORDER BY number;
INSERT INTO test_01193_18429.table_4_7 VALUES 
select arrayEnumerateUniq(n.x, n.y) from tab_00650;
select 1 = multiSearchAny(materialize('abcdefgh'), ['e']) from system.numbers limit 10;
CREATE TABLE test_755B4C5142643B554F5E6E3E405066313F645D7C787B3C517E4C66644C5A4D534C534C27447E576F(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_2_994 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO r8 SELECT 22
select '---Q9---';
SELECT dictGetUInt8(NULL, NULL, NULL);
DROP TABLE IF EXISTS tuple;
DROP DATABASE IF EXISTS test_yk9180p3_02911_keeper_map;
SELECT uniqHLL12([], []);
SELECT splitByString('', 'a==b=c=d', 1) SETTINGS splitby_max_substrings_includes_remaining_string = 1;
CREATE TABLE test_01193_18429.table_5_227 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
create table test_table_url(id UInt32) ENGINE = URL('http://localhost/endpoint', 'JSONEachRow', 'brotli');
INSERT INTO v1 ( id ) VALUES 
DROP TABLE data_01655;
DROP DATABASE IF EXISTS test_kqzdrayk 
alter table many_mutations delete where y = 80 * 2 settings mutations_sync = 0;
select if(number % 5 == 0, toUInt8OrZero(toString(number)), toUInt8OrZero(toString(number + 1))) from numbers(20);
CREATE DATABASE IF NOT EXISTS test_q4flf4s5 
INSERT INTO database_dictionary_test_key_expression.test_for_dictionary VALUES 
SELECT COUNT() FROM prop_table;
select * from format('CSV', '-100000000000000000000');
SELECT Title, round(1000 * distance) FROM test_distance ORDER BY ngramDistanceUTF8(Title, 'metriks') as distance, Title;
SELECT JSON_VALUE(NULL, NULL, NULL);
select dummy from remote('127.{1,1}', system.one) where dummy + dummy >= 0 limit 1 by dummy + dummy + 0 as l settings prefer_localhost_replica=0,distributed_group_by_no_merge=2,distributed_push_down_limit=0;
SELECT toInt16(NULL, NULL);
select count(ignore(*)) from data_02051 settings min_bytes_to_use_direct_io=0, local_filesystem_read_method='pread_fake_async', local_filesystem_read_prefetch=0, read_priority=1, max_read_buffer_size=65505 ;
INSERT INTO test_01193_18429.table_7_545 VALUES 
select (date '2001-09-29' + interval 12345 second) x, toTypeName(x);
DROP TABLE IF EXISTS null_00481;
SELECT 'Running test stateless/02697_stop_reading_on_first_cancel.sh from pid=1718' 
SELECT dateDiff('second', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1927-01-01 01:00:00', 3, 'UTC'));
insert into function file(02416_data.jsonCompact) select number::UInt32 as n, 'Hello' as s, range(number) as a from numbers(3) settings engine_file_truncate_on_insert=1;
CREATE TABLE test_01193_18429.table_2_386 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_5_203 VALUES 
CREATE DATABASE IF NOT EXISTS test_hpbi27nz 
SELECT countSubstrings(NULL, NULL);
SELECT count(), min(x), max(x) FROM null_00699;
SELECT COUNT() FROM bloom_filter_array_types_test WHERE has(u16, 10);
CREATE DATABASE IF NOT EXISTS test_iq2d2bxi 
CREATE TABLE test_02908_r2_93 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_93', 'r2') ORDER BY tuple()
CREATE TABLE test_6C5E514D41202B485A352362646D2267605448442D305972223723454042747D333D557935412044(x UInt8) Engine=Memory;
detach database rdb_test_5mr53c62_2
CREATE TABLE test_01193_18429.table_6_595 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE grouping_sets(fact_1_id Int32, fact_2_id Int32, fact_3_id Int32, fact_4_id Int32, sales_value Int32) ENGINE = Memory;
select * from urlCluster('test_cluster_two_shards_localhost', 'http://localhost:11111/test/{a,b,c}.tsv') ORDER BY c1, c2, c3;
SELECT multiIf((number % 2) = 0, [toInt8(1), toInt8(2)], (number % 3) = 0, [toFloat64(2), toFloat64(3)], [toFloat32(3), toFloat32(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_396A285C62375A7228543F777D2722685F563E736D53337B5C656C2253537C5924732A78603B4077(x UInt8) Engine=Memory;
SELECT id, sum(value1), sum(value2), sum(value3), sum(value4)FROM test_table_signed_values GROUP BY id ORDER BY id;
DROP DATABASE IF EXISTS test_o04cu4ir 
INSERT INTO test_01193_18429.table_4_312 VALUES 
SELECT multiIf((number % 2) = 0, toInt64(1), (number % 3) = 0, toUInt32(2), toUInt8(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_9_11 VALUES 
SELECT concat('With ', materialize('2023-11-14' :: Date));
DROP DICTIONARY 02185_range_dictionary;
INSERT INTO test_01193_18429.table_2_456 VALUES 
CREATE DATABASE IF NOT EXISTS test_9pacj0mi 
select concat('a', toFixedString('b', 1), toFixedString('c', 1)) == 'abc' from system.numbers limit 5;
SELECT CAST(Null AS LowCardinality(Nullable(String)));
CREATE TABLE test_01193_18429.table_6_431 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_10_260 VALUES 
CREATE TABLE test_01193_18429.table_2_753 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_6E764C635645217452645969352772506E74737B61254D2A7D3359723F72243B78646B54235B5C33(x UInt8) Engine=Memory;
SELECT aes_encrypt_mysql(NULL, '[HIDDEN]')
SELECT 'Running test stateless/02972_to_string_nullable_timezone.sql from pid=1714' 
SELECT 'Running test stateless/02751_match_constant_needle.sql from pid=1713' 
SELECT toTypeName(topKForEachState(10)([toString(number)])) FROM numbers(100);
SELECT count() FROM constraint_test_assumption WHERE NOT (domainWithoutWWW(URL) = 'bigmir.net');
INSERT INTO r5 SELECT 57 % 10 = 5 ? 57 - 1 : 57
INSERT INTO test_01193_18429.table_3_108 VALUES 
CREATE TABLE data (`key` Int) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 49816, min_bytes_for_wide_part = 477540964, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 15185, prefer_fetch_merged_part_size_threshold = 3031835271, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 13440540, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 95117, primary_key_compress_block_size = 93442
SELECT 32769, -32769, 32769 = -32769, 32769 != -32769, 32769 < -32769, 32769 <= -32769, 32769 > -32769, 32769 >= -32769, -32769 = 32769, -32769 != 32769, -32769 < 32769, -32769 <= 32769, -32769 > 32769, -32769 >= 32769 , toUInt16(32769) = toInt32(-32769), toUInt16(32769) != toInt32(-32769), toUInt16(32769) < toInt32(-32769), toUInt16(32769) <= toInt32(-32769), toUInt16(32769) > toInt32(-32769), toUInt16(32769) >= toInt32(-32769), toInt32(-32769) = toUInt16(32769), toInt32(-32769) != toUInt16(32769), toInt32(-32769) < toUInt16(32769), toInt32(-32769) <= toUInt16(32769), toInt32(-32769) > toUInt16(32769), toInt32(-32769) >= toUInt16(32769) , toUInt16(32769) = toInt64(-32769), toUInt16(32769) != toInt64(-32769), toUInt16(32769) < toInt64(-32769), toUInt16(32769) <= toInt64(-32769), toUInt16(32769) > toInt64(-32769), toUInt16(32769) >= toInt64(-32769), toInt64(-32769) = toUInt16(32769), toInt64(-32769) != toUInt16(32769), toInt64(-32769) < toUInt16(32769), toInt64(-32769) <= toUInt16(32769), toInt64(-32769) > toUInt16(32769), toInt64(-32769) >= toUInt16(32769) , toUInt32(32769) = toInt32(-32769), toUInt32(32769) != toInt32(-32769), toUInt32(32769) < toInt32(-32769), toUInt32(32769) <= toInt32(-32769), toUInt32(32769) > toInt32(-32769), toUInt32(32769) >= toInt32(-32769), toInt32(-32769) = toUInt32(32769), toInt32(-32769) != toUInt32(32769), toInt32(-32769) < toUInt32(32769), toInt32(-32769) <= toUInt32(32769), toInt32(-32769) > toUInt32(32769), toInt32(-32769) >= toUInt32(32769) , toUInt32(32769) = toInt64(-32769), toUInt32(32769) != toInt64(-32769), toUInt32(32769) < toInt64(-32769), toUInt32(32769) <= toInt64(-32769), toUInt32(32769) > toInt64(-32769), toUInt32(32769) >= toInt64(-32769), toInt64(-32769) = toUInt32(32769), toInt64(-32769) != toUInt32(32769), toInt64(-32769) < toUInt32(32769), toInt64(-32769) <= toUInt32(32769), toInt64(-32769) > toUInt32(32769), toInt64(-32769) >= toUInt32(32769) , toInt32(32769) = toInt32(-32769), toInt32(32769) != toInt32(-32769), toInt32(32769) < toInt32(-32769), toInt32(32769) <= toInt32(-32769), toInt32(32769) > toInt32(-32769), toInt32(32769) >= toInt32(-32769), toInt32(-32769) = toInt32(32769), toInt32(-32769) != toInt32(32769), toInt32(-32769) < toInt32(32769), toInt32(-32769) <= toInt32(32769), toInt32(-32769) > toInt32(32769), toInt32(-32769) >= toInt32(32769) , toInt32(32769) = toInt64(-32769), toInt32(32769) != toInt64(-32769), toInt32(32769) < toInt64(-32769), toInt32(32769) <= toInt64(-32769), toInt32(32769) > toInt64(-32769), toInt32(32769) >= toInt64(-32769), toInt64(-32769) = toInt32(32769), toInt64(-32769) != toInt32(32769), toInt64(-32769) < toInt32(32769), toInt64(-32769) <= toInt32(32769), toInt64(-32769) > toInt32(32769), toInt64(-32769) >= toInt32(32769) , toUInt64(32769) = toInt32(-32769), toUInt64(32769) != toInt32(-32769), toUInt64(32769) < toInt32(-32769), toUInt64(32769) <= toInt32(-32769), toUInt64(32769) > toInt32(-32769), toUInt64(32769) >= toInt32(-32769), toInt32(-32769) = toUInt64(32769), toInt32(-32769) != toUInt64(32769), toInt32(-32769) < toUInt64(32769), toInt32(-32769) <= toUInt64(32769), toInt32(-32769) > toUInt64(32769), toInt32(-32769) >= toUInt64(32769) , toUInt64(32769) = toInt64(-32769), toUInt64(32769) != toInt64(-32769), toUInt64(32769) < toInt64(-32769), toUInt64(32769) <= toInt64(-32769), toUInt64(32769) > toInt64(-32769), toUInt64(32769) >= toInt64(-32769), toInt64(-32769) = toUInt64(32769), toInt64(-32769) != toUInt64(32769), toInt64(-32769) < toUInt64(32769), toInt64(-32769) <= toUInt64(32769), toInt64(-32769) > toUInt64(32769), toInt64(-32769) >= toUInt64(32769) , toInt64(32769) = toInt32(-32769), toInt64(32769) != toInt32(-32769), toInt64(32769) < toInt32(-32769), toInt64(32769) <= toInt32(-32769), toInt64(32769) > toInt32(-32769), toInt64(32769) >= toInt32(-32769), toInt32(-32769) = toInt64(32769), toInt32(-32769) != toInt64(32769), toInt32(-32769) < toInt64(32769), toInt32(-32769) <= toInt64(32769), toInt32(-32769) > toInt64(32769), toInt32(-32769) >= toInt64(32769) , toInt64(32769) = toInt64(-32769), toInt64(32769) != toInt64(-32769), toInt64(32769) < toInt64(-32769), toInt64(32769) <= toInt64(-32769), toInt64(32769) > toInt64(-32769), toInt64(32769) >= toInt64(-32769), toInt64(-32769) = toInt64(32769), toInt64(-32769) != toInt64(32769), toInt64(-32769) < toInt64(32769), toInt64(-32769) <= toInt64(32769), toInt64(-32769) > toInt64(32769), toInt64(-32769) >= toInt64(32769) 
CREATE DATABASE IF NOT EXISTS test_01487;
SELECT dictGet('simple_key_sparse_hashed_dictionary_01862', 'value', toUInt64(1)) FORMAT Null;
SELECT dictIsIn('hierarchy_hashed_array_dictionary', number, number) FROM system.numbers LIMIT 6;
SELECT blockSerializedSize([NULL], [NULL], [NULL]);
INSERT INTO test_01193_18429.table_7_38 VALUES 
CREATE INDEX idx_tab3_1 ON tab3 (col3 DESC,col4);
CREATE TABLE test_58684C3221206A2E39322F314D3C4F2252613A527D434D51357C3E633A7C465756707558237D7974(x UInt8) Engine=Memory;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (26 < 11 AND 53 > 0 ? 26 : 0)), throwIf(last != (26 < 11 AND 53 > 0 ? least(11 - 1, 26 + 53 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(11) LIMIT 26, 53);
CREATE TABLE memory (x UInt8) ENGINE = Memory;
OPTIMIZE TABLE fetches_r1 PARTITION tuple() FINAL
DROP TABLE test_merge;
CREATE TABLE test_562A6430713463625B686229765C3877465D3B274B2B3A7153416A772E665729265B6C215644736F(x UInt8) Engine=Memory;
select count() cnt, * from dist_01247 group by number having cnt == 2;
explain ast alter table t1 delete where date = today();
CREATE TABLE minmax_idx (`u64` UInt64, `i64` Int64, `i32` Int32, INDEX idx (i64, u64 * i64) TYPE minmax GRANULARITY 1) ENGINE = MergeTree ORDER BY u64 SETTINGS index_granularity = 2, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 111, merge_max_block_size = 20990, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 9949760668, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 18164, primary_key_compress_block_size = 10469
CREATE TABLE test_577148713E7E777A616936393428623F20593A4365735C3734275D4435353142644A4C43452C6A43(x UInt8) Engine=Memory;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 15153, 500 settings ignore_materialized_views_with_dropped_target_table=1
INSERT INTO test_01193_18429.table_8_64 VALUES 
insert into summing_merge_tree_aggregate_function select 1, quantileState(0.1)(0.2);
INSERT INTO r7 SELECT 70 % 10 = 7 ? 70 - 1 : 70
CREATE TABLE test_2E61355E7D6F51292972267B3A303939594B2745662F3760684A45506C7127267A404E2F412B5868(x UInt8) Engine=Memory;
select sleep(2) format Null;
SELECT * FROM VALUES('x Nullable(Float64)', NULL);
SELECT groupArrayMovingSum(10)(0) FROM remote('127.0.0.{1,2}', numbers(0)) 
CREATE TABLE rep_fsync_r1 (`key` Int) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/rep_fsync', 'r1') ORDER BY key SETTINGS min_rows_for_wide_part = 2, fsync_after_insert = 1, index_granularity = 25801, min_bytes_for_wide_part = 509248814, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 79, merge_max_block_size = 9385, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 853151, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 5985280, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 59185, primary_key_compress_block_size = 77080
ALTER USER u2_01292 SETTINGS readonly=1;
CREATE TABLE mt (`a` Int32, `timestamp` DateTime) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 60690, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 71, merge_max_block_size = 24520, prefer_fetch_merged_part_size_threshold = 8364087762, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 22016178, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 74283, primary_key_compress_block_size = 71632
CREATE TABLE test_01193_18429.table_1_907 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select 0 = isValidUTF8(toFixedString('\xF0\xEE\x80\x80', 4)) from system.numbers limit 10;
DROP TABLE IF EXISTS capnp_low_cardinality
INSERT INTO test_01193_18429.table_9_328 VALUES 
INSERT INTO test_01193_18429.table_9_914 VALUES 
CREATE TABLE test_343E2C7C4F27594D665A51223A70524A53593E4175795C642159306C686A662C3774603A4D653645(x UInt8) Engine=Memory;
SELECT uniqUpTo(10)(a), uniqUpTo(10)(b), uniqUpTo(10)(c) FROM decimal WHERE a >= 0 AND a < 10;
SELECT mapSort(NULL);
SHOW CREATE QUOTA q9_01297;
select largestTriangleThreeBuckets(20)(x, y) from largestTriangleThreeBucketsTestDecimal64Decimal64;
CREATE TABLE alter_enum_array (`Key` UInt64, `Value` Array(Enum8('Option1' = 1, 'Option2' = 2))) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 10631, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 21521, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 3018776, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 61271, primary_key_compress_block_size = 35074
SELECT dateDiff('day', toDateTime('2015-08-18 00:00:00', 'UTC'), toDate32('2015-08-19', 'UTC'), 'UTC');
CREATE TABLE test_01193_18429.table_10_169 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_8_496 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_6B354D3F5B3A68795D472661283421783944405E66595B284E446D7C3E2F26625E2C287D383E4628(x UInt8) Engine=Memory;
EXPLAIN AST ALTER TABLE t MATERIALIZE COLUMN c;
SELECT SVG(p, 'b') FROM geo ORDER BY id;
DROP TABLE source_table;
SELECT 'Running test stateless/02845_join_on_cond_sparse.sql from pid=1718' 
CREATE TABLE test_01193_18429.table_8_799 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select [1, 0, 0, 3, 4, 12, 0, 9, 0, 12, 0, 0, 8, 0, 10, 3, 4, 1, 1, 9] = multiSearchAllPositionsUTF8(materialize('ÃÂ¶ÃÂ¼ÃÂ ÃÂ¾ÃÂÃÂ¶ÃÂµÃÂ¶ÃÂ¹ÃÂÃÂÃÂÃÂ·ÃÂµÃÂÃÂÃÂµÃÂ¾ÃÂ´ÃÂ½ÃÂÃÂºÃÂµÃÂÃÂÃÂ¼ÃÂµÃÂ¼ÃÂ±ÃÂ°'), ['', 'ÃÂ¸ÃÂ´ÃÂ¾ÃÂÃÂ¹ÃÂºÃÂÃÂ·ÃÂ½ÃÂÃÂ¹ÃÂµÃÂÃÂ²ÃÂ¾ÃÂÃÂ¾ÃÂ³ÃÂ', 'ÃÂÃÂ ÃÂ¼ÃÂÃÂ¹ÃÂ»ÃÂ²ÃÂºÃÂÃÂ»', 'ÃÂ ÃÂ¾ÃÂÃÂ¶ÃÂµÃÂ¶ÃÂ¹ÃÂÃÂ', 'ÃÂ¾ÃÂÃÂ¶ÃÂµÃÂ¶ÃÂ¹ÃÂÃÂÃÂÃÂ·ÃÂµÃÂÃÂÃÂµÃÂ¾ÃÂ´ÃÂ½ÃÂÃÂºÃÂµÃÂÃÂÃÂ¼', 'ÃÂÃÂ·ÃÂµÃÂÃÂÃÂµÃÂ¾ÃÂ´ÃÂ½ÃÂÃÂºÃÂµÃÂ', 'ÃÂ±ÃÂµÃÂÃÂ²ÃÂ´ÃÂ¸ÃÂÃÂ±ÃÂ ÃÂ ÃÂ²ÃÂ ÃÂ¹ÃÂºÃÂ°ÃÂ¶ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ±ÃÂ·ÃÂ ÃÂ ÃÂ', 'ÃÂ¹ÃÂÃÂÃÂÃÂ·ÃÂµÃÂÃÂÃÂµÃÂ¾ÃÂ´ÃÂ½', 'ÃÂ¼ÃÂ³ÃÂ»ÃÂºÃÂÃÂÃÂÃÂµÃÂ°ÃÂ¹ÃÂÃÂÃÂ¶ÃÂ¸ÃÂÃÂÃÂÃÂ½ÃÂ¿ÃÂºÃÂ³ÃÂµÃÂ±ÃÂÃÂÃÂ¿ÃÂ°', 'ÃÂÃÂ·ÃÂµÃÂÃÂÃÂµÃÂ¾', 'ÃÂÃÂµÃÂ ÃÂÃÂÃÂÃÂÃÂµÃÂÃÂÃÂ³ÃÂÃÂ¹ÃÂ¸ÃÂÃÂ¶ÃÂÃÂÃÂ¼ÃÂ³ÃÂ ÃÂ°ÃÂºÃÂÃÂÃÂ²ÃÂ²ÃÂ¾ÃÂ ÃÂ¾ÃÂÃÂ¶ÃÂ¿ÃÂÃÂ ÃÂ', 'ÃÂ´ÃÂÃÂ²ÃÂ¼ÃÂÃÂ±ÃÂÃÂºÃÂ·ÃÂÃÂ°ÃÂ»ÃÂÃÂ±ÃÂ', 'ÃÂ¶ÃÂ¹ÃÂÃÂÃÂÃÂ·ÃÂµÃÂÃÂÃÂµÃÂ¾ÃÂ´ÃÂ½ÃÂÃÂºÃÂµ', 'ÃÂÃÂÃÂÃÂÃÂÃÂ´ÃÂ±ÃÂ¿ÃÂ²ÃÂÃÂ´', 'ÃÂÃÂÃÂÃÂ·ÃÂµÃÂÃÂÃÂµÃÂ¾ÃÂ´ÃÂ½ÃÂÃÂºÃÂµÃÂÃÂÃÂ¼ÃÂµÃÂ¼', 'ÃÂ ÃÂ¾ÃÂÃÂ¶ÃÂµÃÂ¶ÃÂ¹ÃÂÃÂÃÂÃÂ·ÃÂµÃÂÃÂÃÂµÃÂ¾ÃÂ´ÃÂ½ÃÂÃÂºÃÂµÃÂÃÂ', 'ÃÂ¾ÃÂÃÂ¶ÃÂµ', '', 'ÃÂ¶ÃÂ¼ÃÂ ÃÂ¾ÃÂÃÂ¶ÃÂµÃÂ¶ÃÂ¹ÃÂÃÂÃÂÃÂ·ÃÂµÃÂ', 'ÃÂ¹']) from system.numbers limit 10;
SELECT arrayPushBack(NULL, NULL);
select * from (select toLowCardinality(dummy) as val from system.one) any left join (select dummy as val from system.one) using val;
CREATE TABLE test_6D5178433C6E4A7D4A31754057455930312734697B6742667574552850582A352437555D4A78614D(x UInt8) Engine=Memory;
SELECT '20' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:f000::')))
CREATE TABLE test_01193_18429.table_3_92 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_4_976 VALUES 
DROP DATABASE IF EXISTS test_35nao0px 
CREATE TABLE t (`a` UInt64) ENGINE = MergeTree ORDER BY a SETTINGS index_granularity = 21977, min_bytes_for_wide_part = 869586997, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 4660, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 13, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 7280430, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 93049, primary_key_compress_block_size = 59825
SELECT LAST_VALUEIf (number, NOT isNull(number) AND (assumeNotNull(number) > 5)) RESPECT NULLS from (SELECT if(number < 2, NULL, number) as number FROM numbers(10));
SELECT * from mutation_1;
CREATE TABLE test_61214D3245725443215F704D3D6D5463313D745C31737446457D375E39492C594E7C234B5D67613B(x UInt8) Engine=Memory;
INSERT INTO r5 SELECT 37
select * from test_distributed
select hasSubstr([], []);
select v, variantElement(v, 'Int128') from format(CSV, 'v Variant(String, Int128, Int256)', '\\N\n"string"\n-1\n0\n42d42') format CSV;
SELECT 'Running test stateless/02910_rocksdb_optimize.sql from pid=1722' 
INSERT INTO test_01193_18429.table_7_911 VALUES 
SELECT 'Running test stateless/01851_fix_row_policy_empty_result.sql from pid=1713' 
SELECT 3_4e-21;
SYSTEM START REPLICATED SENDS r1;
/* ddl_entry=query-0000000027 */ ALTER TABLE test_h8mmlit8.t1_local UPDATE _row_exists = 0 WHERE tc1 = 1
insert into ints values 
drop table test_02480_support_wildcard_write;
SELECT addMonths(toDateTime('2017-11-05 08:07:47'), materialize(-1));
CREATE TABLE test_01193_18429.table_5_592 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select hasSubsequence('garbage', '');
SELECT 'JA' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('::ffff:101.79.55.22')))
SELECT 'Running test stateless/01056_window_view_proc_hop_watch.py from pid=1705' 
CREATE TABLE test_01193_18429.table_3_269 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO r9 SELECT 86
select finalizeAggregation(uniqThetaUnion(a, b)), finalizeAggregation(a), finalizeAggregation(b) from (select arrayReduce('uniqThetaState',[2,3,4]) as a, arrayReduce('uniqThetaState',[1,2]) as b );
INSERT INTO test_01193_18429.table_4_863 VALUES 
CREATE TABLE test_02908_r1_215 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_215', 'r1') ORDER BY tuple()
SELECT arraySort(arrayIntersect([1, 2, 3]));
CREATE TABLE test_01193_18429.table_3_824 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 33216, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT `UserID` FROM `test_c5zukzwt`.`users` WHERE `UserID` IN ((SELECT arrayJoin([1468013291393583084, 1321770221388956068])) AS `_subquery3874`)
select toStartOfHour(toDateTime(0, 'America/Los_Angeles'));
INSERT INTO concat_nested_test VALUES 
SELECT arrayConcat([], [], []);
explain plan sorting=1 select distinct b, a from distinct_in_order_explain where a > 0
SELECT dateDiff('hour', toDate32('2015-08-18', 'UTC'), toDate('2015-08-19', 'UTC'), 'UTC');
SELECT 'Running test stateless/02496_remove_redundant_sorting.sh from pid=1726' 
CREATE TABLE test_20292D644B483551547558642C3D36653A325E20404D51442F615F2F243F5B2B2C417B645D2B3D2B(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00753_quantile_format.sql from pid=1718' 
SELECT materialize(toInt32(0)) AS x, toUInt32(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
select -8 as offset, -9 as length, toFixedString('Hello', 6) as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
CREATE QUOTA q6_01297 FOR INTERVAL 1 MINUTE MAX query_selects = '12Gi';
CREATE TABLE test_01193_18429.table_1_960 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_5_498 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_lc(a LowCardinality(String), b LowCardinality(String), c Float64) ENGINE = Join(any, left, a, b);
CREATE TABLE IF NOT EXISTS test_01444.t7362 (`x` UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 49736, min_bytes_for_wide_part = 645103364, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 6, merge_max_block_size = 15200, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 21360504, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75390, primary_key_compress_block_size = 98921
SELECT *, _table FROM merge(currentDatabase(), 'test_local_1|test_local_2') ORDER BY _table;
SELECT multiIf((number % 2) = 0, [toInt32(1), toInt32(2)], (number % 3) = 0, [toFloat32(2), toFloat32(3)], [toInt8(3), toInt8(3)]) FROM system.numbers LIMIT 10;
select 0 = multiSearchAny(materialize('abcd'), ['cde']) from system.numbers limit 10;
SELECT 'Running test stateless/00502_custom_partitioning_replicated_zookeeper_long.sql from pid=1722' 
DROP DATABASE IF EXISTS test_dpx3rhnk 
CREATE TABLE test_54505C4B2A275D677C322C5420426F3C283C6D5A2A38723859725F523048627771634F6263645361(x UInt8) Engine=Memory;
select 0 = multiSearchAny(materialize('omgghgnzjmecpzqmtcvw'), ['fjhlzbszodmzavzg', 'gfofrnwrxprkfiokv', 'jmjiiqpgznlmyrxwewzqzbe', 'pkyrsqkltlmxr', 'crqgkgqkkyujcyoc', 'endagbcxwqhueczuasykmajfsvtcmh', 'xytmxtrnkdysuwltqomehddp', 'etmdxyyfotfyifwvbykghijvwv', 'mwqtgrncyhkfhjdg', 'iuvymofrqpp', 'pgllsdanlhzqhkstwsmzzftp', 'disjylcceufxtjdvhy']) from system.numbers limit 10;
select arraySlice([1, 2, 3, 4, 5, 6], 10, -1);
CREATE TABLE data (`ts` DateTime, `field` String, `num_field` Nullable(Float64)) ENGINE = MergeTree PARTITION BY ts ORDER BY ts SETTINGS index_granularity = 47777, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 12911, prefer_fetch_merged_part_size_threshold = 14814918, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 53, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 10396255, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 9971, primary_key_compress_block_size = 32598
INSERT INTO test_01193_18429.table_2_97 VALUES 
select sipHash128Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56)) == sipHash128(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56));
truncate table dst_02225;
CREATE TABLE test_01193_18429.table_2_787 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_685F272C7C705E24317A373739582270382F5F442B5D264B4D79612825363D2C7763725A26347D6A(x UInt8) Engine=Memory;
SELECT multiIf((number % 2) = 0, [toFloat32(1), toFloat32(2)], (number % 3) = 0, [toInt16(2), toInt16(3)], [toUInt8(3), toUInt8(3)]) FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_jrzetzd7 
CREATE TABLE test_52796F495C7A7450352F3B6C6E2D6954245D714659623D6170704B542D5B61217A58512C55374B39(x UInt8) Engine=Memory;
SELECT coalesce(NULL, 1);
SELECT format('The {0} to all questions is {1}.', 'answer', materialize('foo' :: LowCardinality(Nullable(String))));
SELECT s, replaceAll(s, '_', 'o') AS a, REGEXP_REPLACE(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['__.', '.']) AS s);
CREATE TABLE test_01193_18429.table_6_539 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'tn1 ANY LEFT JOIN t2 | bs = 5';
SELECT dateDiff('second', toDateTime64('1927-01-01 00:00:00', 3), toDate32('1927-01-02')) - timeDiff(toDateTime64('1927-01-01 00:00:00', 3), toDate32('1927-01-02')) <= 2;
SELECT * FROM persons_00825 ORDER BY name;
SELECT 'Running test stateless/00976_system_stop_ttl_merges.sql from pid=1713' 
SELECT 'Running test stateless/01347_partition_date_vs_datetime.sql from pid=1714' 
DROP TABLE test_01179
CREATE TABLE test_01193_18429.table_1_576 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP TABLE tt_mv;
CREATE TABLE test_02908_r1_276 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_276', 'r1') ORDER BY tuple()
INSERT INTO r9 SELECT 86 % 10 = 9 ? 86 - 1 : 86
CREATE DATABASE IF NOT EXISTS test_nz075vpm 
select (1 ? (today() as t) : yesterday()) = t;
CREATE TABLE t_query_id_header (a UInt64) ENGINE = Memory
SELECT * FROM 01686_test WHERE key = NULL OR key = 0;
INSERT INTO test_tuple_filter__fuzz_2 SELECT number, toString(number), toDate('2024-01-01') + number FROM numbers(10);
SELECT * FROM v2;
INSERT INTO test_01193_18429.table_8_226 VALUES 
select round(1000 * ngramSearchCaseInsensitive(materialize('abc'), '')) from system.numbers limit 5;
INSERT INTO r7 SELECT 85 % 10 = 7 ? 85 - 1 : 85
INSERT INTO test_01193_18429.table_2_929 VALUES 
select 'src_to_dst', 17, 'dst', type, n, _part from dst order by type, n
SELECT entropy(-1);
DROP DATABASE IF EXISTS test_45jn0ks5 
kill query where query_id = '02450_kill_distributed_query_deadlock_test_ft363ahb-21' sync
SELECT * FROM test_table;
SELECT JSONLength(NULL);
select (1 ? (toUInt32(0) as i) : toInt32(1)) = i;
INSERT INTO test_01193_18429.table_2_863 VALUES 
select concat(materialize(toFixedString('a', 1)), materialize('b'), materialize('c')) == 'abc' from system.numbers limit 5;
SELECT 32767, 9223372036854775809, 32767 = 9223372036854775809, 32767 != 9223372036854775809, 32767 < 9223372036854775809, 32767 <= 9223372036854775809, 32767 > 9223372036854775809, 32767 >= 9223372036854775809, 9223372036854775809 = 32767, 9223372036854775809 != 32767, 9223372036854775809 < 32767, 9223372036854775809 <= 32767, 9223372036854775809 > 32767, 9223372036854775809 >= 32767 , toUInt16(32767) = toUInt64(9223372036854775809), toUInt16(32767) != toUInt64(9223372036854775809), toUInt16(32767) < toUInt64(9223372036854775809), toUInt16(32767) <= toUInt64(9223372036854775809), toUInt16(32767) > toUInt64(9223372036854775809), toUInt16(32767) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toUInt16(32767), toUInt64(9223372036854775809) != toUInt16(32767), toUInt64(9223372036854775809) < toUInt16(32767), toUInt64(9223372036854775809) <= toUInt16(32767), toUInt64(9223372036854775809) > toUInt16(32767), toUInt64(9223372036854775809) >= toUInt16(32767) , toInt16(32767) = toUInt64(9223372036854775809), toInt16(32767) != toUInt64(9223372036854775809), toInt16(32767) < toUInt64(9223372036854775809), toInt16(32767) <= toUInt64(9223372036854775809), toInt16(32767) > toUInt64(9223372036854775809), toInt16(32767) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toInt16(32767), toUInt64(9223372036854775809) != toInt16(32767), toUInt64(9223372036854775809) < toInt16(32767), toUInt64(9223372036854775809) <= toInt16(32767), toUInt64(9223372036854775809) > toInt16(32767), toUInt64(9223372036854775809) >= toInt16(32767) , toUInt32(32767) = toUInt64(9223372036854775809), toUInt32(32767) != toUInt64(9223372036854775809), toUInt32(32767) < toUInt64(9223372036854775809), toUInt32(32767) <= toUInt64(9223372036854775809), toUInt32(32767) > toUInt64(9223372036854775809), toUInt32(32767) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toUInt32(32767), toUInt64(9223372036854775809) != toUInt32(32767), toUInt64(9223372036854775809) < toUInt32(32767), toUInt64(9223372036854775809) <= toUInt32(32767), toUInt64(9223372036854775809) > toUInt32(32767), toUInt64(9223372036854775809) >= toUInt32(32767) , toInt32(32767) = toUInt64(9223372036854775809), toInt32(32767) != toUInt64(9223372036854775809), toInt32(32767) < toUInt64(9223372036854775809), toInt32(32767) <= toUInt64(9223372036854775809), toInt32(32767) > toUInt64(9223372036854775809), toInt32(32767) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toInt32(32767), toUInt64(9223372036854775809) != toInt32(32767), toUInt64(9223372036854775809) < toInt32(32767), toUInt64(9223372036854775809) <= toInt32(32767), toUInt64(9223372036854775809) > toInt32(32767), toUInt64(9223372036854775809) >= toInt32(32767) , toUInt64(32767) = toUInt64(9223372036854775809), toUInt64(32767) != toUInt64(9223372036854775809), toUInt64(32767) < toUInt64(9223372036854775809), toUInt64(32767) <= toUInt64(9223372036854775809), toUInt64(32767) > toUInt64(9223372036854775809), toUInt64(32767) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toUInt64(32767), toUInt64(9223372036854775809) != toUInt64(32767), toUInt64(9223372036854775809) < toUInt64(32767), toUInt64(9223372036854775809) <= toUInt64(32767), toUInt64(9223372036854775809) > toUInt64(32767), toUInt64(9223372036854775809) >= toUInt64(32767) , toInt64(32767) = toUInt64(9223372036854775809), toInt64(32767) != toUInt64(9223372036854775809), toInt64(32767) < toUInt64(9223372036854775809), toInt64(32767) <= toUInt64(9223372036854775809), toInt64(32767) > toUInt64(9223372036854775809), toInt64(32767) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toInt64(32767), toUInt64(9223372036854775809) != toInt64(32767), toUInt64(9223372036854775809) < toInt64(32767), toUInt64(9223372036854775809) <= toInt64(32767), toUInt64(9223372036854775809) > toInt64(32767), toUInt64(9223372036854775809) >= toInt64(32767) 
SELECT * FROM merge(currentDatabase(), 'test_s64_distributed|test_u64_distributed') ORDER BY value;
SELECT intDiv(4.2, toDecimal32(2.2, 2));
SELECT 'Running test stateless/02184_ipv6_cast_test.sql from pid=1724' 
INSERT INTO test_01193_18429.table_2_82 VALUES 
INSERT INTO r8 SELECT 28 % 10 = 8 ? 28 - 1 : 28
SELECT arrayLastIndex(x -> 0, emptyArrayUInt8());
CREATE TABLE test_01193_18429.table_6_638 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT arrayDistinct(materialize(['', NULL, ''])) FROM numbers(2);
CREATE TABLE test_662A28765D4E674A574B5E356E294A604A732C4E313452773B774E4641587860674B777A7D76685F(x UInt8) Engine=Memory;
SELECT dictGet('executable_pool_simple', 'a', toUInt64(1));
CREATE TABLE test_01193_18429.table_1_884 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO range_dictionary_nullable_source_table VALUES 
DROP TABLE IF EXISTS m
SELECT toRelativeYearNum(NULL, NULL, NULL);
CREATE DATABASE IF NOT EXISTS test_meka8o97 
DROP DATABASE IF EXISTS test_uy1ankq9 
SELECT * FROM numbers(34592)
CREATE DATABASE 02265_ordinary_db ENGINE = Ordinary;
CREATE TABLE concurrent_alter_detach_1 (`key` UInt64, `value1` UInt8, `value2` UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/01079_parallel_alter_detach_table_zookeeper_test_syvx3owd/concurrent_alter_detach', '1') ORDER BY key SETTINGS max_replicated_mutations_in_queue = 1000, number_of_free_entries_in_pool_to_execute_mutation = 0, max_replicated_merges_in_queue = 1000, temporary_directories_lifetime = 10, cleanup_delay_period = 3, cleanup_delay_period_random_add = 0, cleanup_thread_preferred_points_per_iteration = 0, index_granularity = 32951, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.6211352348327637, replace_long_file_name_to_hash = true, max_file_name_length = 80, merge_max_block_size = 3933, prefer_fetch_merged_part_size_threshold = 3575133174, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 20595963, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 46322, primary_key_compress_block_size = 66774
CREATE TABLE test_523E6C622B454B5163224222325A5F4829396B49614A27242B32412759322779445D443448552D69(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_8rmakuof 
SELECT sum(cast(value as UInt64)) from test_alter_on_mutation;
CREATE DATABASE IF NOT EXISTS test_pjdl9zq7 
CREATE DATABASE IF NOT EXISTS test_rn11mdjw 
INSERT INTO insert_select_dst(COLUMNS('.*') EXCEPT (middle_a, middle_b)) SELECT * FROM insert_select_src;
CREATE TABLE test_without_merge (`i` Int64) ENGINE = MergeTree ORDER BY i SETTINGS merge_selecting_sleep_ms = 1000, index_granularity = 49682, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 76, merge_max_block_size = 16104, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 4516768901, index_granularity_bytes = 16359344, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 90497, primary_key_compress_block_size = 56067
SELECT MINUTE(NULL, NULL);
CREATE TABLE test_28536C57774250255A42285B3C5B54466E4A4856365F4874613377433670276C7E37492E346E7464(x UInt8) Engine=Memory;
SELECT pointInPolygon((106.6671509, 10.7674952), [(106.667161868227, 10.7674952), (106.667165727127, 10.7675059912261), (106.667170817563, 10.7674904752629), (106.667229225265, 10.7672278502066), (106.667231193621, 10.7672115129572), (106.667229912029, 10.7671951075415), (106.667225430503, 10.767179274157), (106.667217923927, 10.7671646306786), (106.667207685234, 10.7671517485471), (106.667195113975, 10.7671411304688), (106.667180700725, 10.7671331907989), (106.66716500794, 10.7671282393715), (106.666628232995, 10.7670156787539), (106.666612233649, 10.7670139127584), (106.666596193354, 10.7670152569112), (106.666580711053, 10.7670196610218), (106.666566364856, 10.7670269606408), (106.666553690448, 10.7670368832008), (106.666543161092, 10.767049058194), (106.666535169952, 10.7670630310067), (106.666530015418, 10.7670782798948), (106.666482284259, 10.7672828714379), (106.666480170141, 10.7672985245675), (106.666481048788, 10.7673142953614), (106.666484888609, 10.7673296167758), (106.666491551541, 10.7673439379244), (106.666500798017, 10.7673567438858), (106.666512295576, 10.7673675742178), (106.666525630821, 10.7673760395122), (106.667032331859, 10.7676338521733), (106.6671413386, 10.7676893154858), (106.667371048786, 10.7678061934666), (106.667552760053, 10.7678987010209), (106.667801848625, 10.7680278028917), (106.667817742281, 10.7680340673957), (106.667834579682, 10.7680369577679), (106.66785165264, 10.7680363524383), (106.667868243061, 10.7680322768672), (106.667878683314, 10.7680285412847), (106.667885469819, 10.7680268413536), (106.667892390269, 10.7680258148018), (106.667899378015, 10.7680254715159), (106.667906365761, 10.7680258148018), (106.667913286211, 10.7680268413536), (106.667920072716, 10.7680285412847), (106.667926659921, 10.7680308982244), (106.667932984386, 10.7680338894736), (106.667938985204, 10.7680374862253), (106.667944604583, 10.7680416538412), (106.667949788405, 10.7680463521828), (106.667954486747, 10.7680515360051), (106.667958654362, 10.7680571553826), (106.667962251113, 10.7680631561994), (106.667965242363, 10.7680694806664), (106.667967599303, 10.7680760678724), (106.667969299234, 10.7680828543774), (106.667970926246, 10.7680938227996), (106.667974657027, 10.7681089916695), (106.667981154238, 10.7681231972879), (106.667990189396, 10.7681359400994), (106.668001444773, 10.7681467719897), (106.668014524559, 10.7681553120441), (106.668198488147, 10.7682521458591), (106.669562015793, 10.7689901124345), (106.669614757162, 10.7690820717448), (106.669623023723, 10.7690939566151), (106.669633223154, 10.7691042307472), (106.669645047385, 10.7691125838155), (106.670748051536, 10.7697559307954), (106.670751419717, 10.7697577924329), (106.671035494073, 10.7699063431327), (106.671270162713, 10.7700364834325), (106.67127192876, 10.7700374352053), (106.671437929267, 10.7701243344783), (106.671665917937, 10.7702517637461), (106.67166656035, 10.7702521191025), (106.671943689514, 10.7704038245574), (106.671943806749, 10.7704038886117), (106.6722776446, 10.7705859421916), (106.672278295949, 10.7705862936499), (106.673020324076, 10.7709824352208), (106.673433726727, 10.7712057751884), (106.673694081332, 10.7713489702214), (106.673977066657, 10.7715146655761), (106.674254247937, 10.7716778144336), (106.67440928634, 10.7717698954974), (106.674658478275, 10.7719268836667), (106.674658802254, 10.7719270867325), (106.6748919449, 10.7720724734391), (106.675071660589, 10.7721853602936), (106.675350447469, 10.7723606751059), (106.675350748696, 10.7723608636368), (106.6756252856, 10.7725318758852), (106.675888735092, 10.7726957126602), (106.676114500069, 10.7728361211927), (106.676379504941, 10.7730007692002), (106.67661713771, 10.7731502653527), (106.676617572241, 10.773150536857), (106.676852995814, 10.7732966297465), (106.677284352687, 10.7735807849214), (106.677738143311, 10.7738851794554), (106.677752655777, 10.7738929549383), (106.677768414072, 10.773897724206), (106.677784802596, 10.7738993009456), (106.677801181124, 10.7738976235612), (106.677816909825, 10.7738927575805), (106.677831374252, 10.7738848930944), (106.677844009349, 10.7738743373313), (106.677920079221, 10.7737967983562), (106.678239245717, 10.7735243703649), (106.67839926068, 10.7733892116467), (106.678400691571, 10.7733879749217), (106.678515896101, 10.7732860955802), (106.678557979259, 10.7732504310319), (106.67855930664, 10.7732492818517), (106.679033975331, 10.7728295048433), (106.679053201911, 10.772844898411), (106.679632133733, 10.7733262832973), (106.679771732358, 10.7734524450384), (106.679773325229, 10.7734538481348), (106.680011463819, 10.7736582857586), (106.680175801881, 10.7738018862846), (106.680176891116, 10.7738028216402), (106.680320149367, 10.773923712053), (106.680672123374, 10.7742204563391), (106.68094213423, 10.7744504786771), (106.68094233625, 10.7744506502241), (106.68124725775, 10.7747087432576), (106.681247329066, 10.7747088035527), (106.681470746982, 10.7748974804345), (106.681471338135, 10.7748979749973), (106.681840030697, 10.7752035373868), (106.682304929691, 10.7756040772245), (106.682308650112, 10.7756071005185), (106.682312917236, 10.7756103687835), (106.682359764439, 10.7756490693986), (106.682640114944, 10.7758996628849), (106.682644070655, 10.7759029839554), (106.682711710544, 10.7759562859055), (106.682806505954, 10.7760368956153), (106.68280745353, 10.776037689352), (106.683169164535, 10.7763361378178), (106.68363265876, 10.7767252395911), (106.683677875719, 10.7767650291442), (106.683797775698, 10.77688614766), (106.684138558845, 10.7772306328105), (106.68414063031, 10.7772326552454), (106.684827531639, 10.777880369263), (106.685228619785, 10.7782605077038), (106.685228896163, 10.7782607684525), (106.686025996525, 10.7790093622583), (106.686026813787, 10.7790101368229), (106.68658269265, 10.7795369738106), (106.687194479537, 10.7801158277128), (106.688401155505, 10.7812670656457), (106.688401571342, 10.7812674596561), (106.689622367701, 10.7824162362891), (106.690002723257, 10.7827815572149), (106.690002908997, 10.7827817350625), (106.690359062158, 10.7831217027417), (106.690359638585, 10.7831222477508), (106.690747557266, 10.7834855403784), (106.691628272565, 10.7843952548301), (106.692179613338, 10.7849709155958), (106.692179802225, 10.7849711121697), (106.692743910048, 10.7855562574979), (106.693288875836, 10.7861225208133), (106.693601234729, 10.7864484801726), (106.69220838651, 10.7875617536129), (106.692196691453, 10.787573150248), (106.692187444486, 10.7875866094924), (106.692181000965, 10.7876016141149), (106.692177608512, 10.7876175874962), (106.692177397496, 10.7876339157883), (106.692180376026, 10.7876499715041), (106.692186429639, 10.7876651376314), (106.692195325699, 10.7876788313445), (106.692206722334, 10.7876905264015), (106.692220181578, 10.7876997733682), (106.692235186201, 10.7877062168886), (106.692251159582, 10.787709609342), (106.692267487874, 10.7877098203582), (106.69228354359, 10.7877068418281), (106.692298709717, 10.7877007882148), (106.69231240343, 10.7876918921553), (106.693776442708, 10.7865217172423), (106.693788736175, 10.7865096022178), (106.693798269005, 10.7864952137411), (106.693804631934, 10.7864791695437), (106.693807551784, 10.7864621584413), (106.693806903199, 10.7864449107613), (106.693802714026, 10.7864281669878), (106.693795164114, 10.786412645971), (106.693784577601, 10.7863990140651), (106.69340910087, 10.7860071886444), (106.69340897739, 10.7860070600637), (106.692863924954, 10.7854407067139), (106.69229983717, 10.7848555821281), (106.691748435669, 10.7842798579551), (106.691748124777, 10.7842795350934), (106.690865834778, 10.7833681940925), (106.690862927107, 10.7833653342196), (106.690473809086, 10.7830009183885), (106.690118035849, 10.7826613133679), (106.689737465891, 10.7822957865149), (106.689736848623, 10.7822951996834), (106.688515950726, 10.7811463275029), (106.687309357068, 10.7799951680976), (106.687309106711, 10.779994930232), (106.686697270266, 10.7794160294802), (106.686141416688, 10.7788892164565), (106.686140461741, 10.7788883114), (106.686140185762, 10.7788880510296), (106.6853430856, 10.7781394574112), (106.684942058447, 10.7777593767781), (106.684941904463, 10.7777592312084), (106.684255979358, 10.7771124377212), (106.683916204215, 10.776768971525), (106.683794256559, 10.7766457845149), (106.68379008676, 10.7766418525893), (106.683741989497, 10.7765995284558), (106.683740519326, 10.7765982647987), (106.683276011394, 10.7762083120217), (106.683275466929, 10.7762078588774), (106.68291395946, 10.77590957835), (106.682818451152, 10.775828362424), (106.682816046951, 10.7758263940715), (106.682749215964, 10.7757737295564), (106.682469581984, 10.775523776542), (106.682467121137, 10.7755216616573), (106.682417839663, 10.775480950083), (106.68241543796, 10.7754790393628), (106.682411856108, 10.7754762959601), (106.681948170223, 10.775076801292), (106.681946953215, 10.7750757728772), (106.681577943952, 10.7747699480145), (106.681354856141, 10.7745815499075), (106.681050071432, 10.7743235726569), (106.680779998801, 10.774093497693), (106.680779672798, 10.7740932214111), (106.680427578845, 10.7737963760106), (106.680284883706, 10.7736759607876), (106.680120811518, 10.7735325925854), (106.680120259999, 10.7735321149047), (106.679882649978, 10.7733281310479), (106.679742564868, 10.7732015296478), (106.67973997054, 10.7731992804165), (106.679159125009, 10.772716304271), (106.679157929246, 10.7727153285815), (106.679083371982, 10.7726556350576), (106.679069423592, 10.7726465921904), (106.679053957365, 10.7726404990091), (106.679037589221, 10.7726375981655), (106.679020970997, 10.7726380051815), (106.679004764489, 10.7726417038483), (106.678989615098, 10.7726485468719), (106.678976126125, 10.772658261739), (106.678449597495, 10.7731239014943), (106.678407514754, 10.773159565689), (106.678406188192, 10.7731607141448), (106.678291034854, 10.7732625482153), (106.678131577851, 10.7733972356454), (106.678131249559, 10.7733975143985), (106.677809116892, 10.7736724741964), (106.677803734254, 10.7736774962862), (106.67777351642, 10.773708297704), (106.677376870851, 10.7734422350384), (106.677376291861, 10.7734418501559), (106.676943701895, 10.7731568826838), (106.676941799819, 10.7731556663352), (106.676705634648, 10.7730091132449), (106.676468020922, 10.7728596290723), (106.676467624617, 10.7728593813034), (106.676202468827, 10.7726946395397), (106.675976718772, 10.7725542402878), (106.675713344944, 10.7723904505946), (106.675438984881, 10.7722195485022), (106.675160330528, 10.7720443170291), (106.674980445983, 10.7719313240966), (106.674980215342, 10.7719311797465), (106.674747119479, 10.7717858222138), (106.674497164595, 10.7716283533947), (106.674495300219, 10.7716272127471), (106.674339180867, 10.7715344896819), (106.674338897981, 10.771534322423), (106.674061493048, 10.7713710419232), (106.674061328848, 10.7713709455279), (106.673777295695, 10.7712046366425), (106.673775349509, 10.7712035319333), (106.673513740027, 10.7710596467179), (106.673513190173, 10.7710593469847), (106.673099330442, 10.7708357600807), (106.673098966779, 10.7708355647753), (106.672357083034, 10.7704395002842), (106.672023628724, 10.7702576558632), (106.671746880137, 10.7701061587426), (106.671518215262, 10.7699783515251), (106.671516207112, 10.7699772649622), (106.671350083838, 10.7698903014222), (106.671115399209, 10.7697601522552), (106.671113600766, 10.7697591835329), (106.670830326847, 10.7696110514048), (106.66974820551, 10.7689798847013), (106.66969475177, 10.7688866833063), (106.669685913661, 10.7688741199651), (106.669674918986, 10.7688633930448), (106.669662141606, 10.7688548673033), (106.668277363011, 10.7681053993183), (106.668276514094, 10.7681049461882), (106.668126503268, 10.7680259842551), (106.668125839186, 10.7680237950692), (106.66812072496, 10.7680095017658), (106.668117596648, 10.7680019493532), (106.66811110606, 10.7679882261576), (106.668107252546, 10.7679810167398), (106.668099448104, 10.7679679958141), (106.668094906497, 10.767961198818), (106.668085863361, 10.7679490055608), (106.668080677403, 10.7679426864524), (106.668070482664, 10.7679314382913), (106.668064702296, 10.7679256579236), (106.668053454135, 10.7679154631847), (106.668047135024, 10.7679102772246), (106.668034941766, 10.7679012340887), (106.668028144776, 10.7678966924853), (106.668015123851, 10.7678888880428), (106.668007914429, 10.7678850345264), (106.667994191233, 10.7678785439383), (106.667986638821, 10.7678754156266), (106.667972345518, 10.7678703014008), (106.667964522841, 10.7678679284177), (106.667949797082, 10.7678642398071), (106.667941779481, 10.7678626450072), (106.667926763083, 10.767860417535), (106.667918627772, 10.7678596162768), (106.667903465352, 10.7678588713949), (106.667895290678, 10.7678588713949), (106.667880128258, 10.7678596162768), (106.667871992947, 10.767860417535), (106.667856976549, 10.7678626450072), (106.667848958948, 10.7678642398071), (106.667848526162, 10.7678643482145), (106.667629153721, 10.7677506481269), (106.667628614008, 10.7677503708842), (106.66744662399, 10.7676577214203), (106.667216888626, 10.7675408306262), (106.667161868227, 10.7675128359024), (106.667012119458, 10.7674366427911), (106.666659357657, 10.7672571553777), (106.666673753979, 10.7671954479766), (106.667048293768, 10.7672739882109), (106.6670141, 10.7674274)]);
SELECT count() FROM t_cnf_fuzz WHERE (c3 AND (NOT c4) AND (NOT c6) AND c6 AND c9) OR (c9 AND c9 AND c7 AND c8) SETTINGS convert_query_to_cnf = 0
SELECT * FROM cluster(test_cluster_one_shard_three_replicas_localhost, currentDatabase(), 02535_custom_key) SETTINGS max_parallel_replicas=3 , parallel_replicas_custom_key='sipHash64(x)' , parallel_replicas_custom_key_filter_type='default' , prefer_localhost_replica=1
DROP TABLE enum_pk;
CREATE TABLE test_492E6C755C65347E273846433D4F7D484B54772428405E2F7C792048366F5E372B6C615158643876(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_6zxlqqy1 
select replaceRegexpOne(explain, '^[ ]*(.*)', '\\1') from ( explain actions=1 select a from t17 group by a ) where explain like '%Skip merging: %' settings force_aggregate_partitions_independently = 0, max_threads = 4;
INSERT INTO test_01193_18429.table_8_612 VALUES 
SELECT 'Running test stateless/02566_ipv4_ipv6_binary_formats.sh from pid=1705' 
select 1 = multiSearchAnyCaseInsensitive(materialize('VfVQmlYIDdGBpRyfoeuLffUUpMordC'), ['vqMLyIddgBPrYFoEulFFu', 'lyIDdgBPrYFOeul', 'dGBPRYFOeUlffUupmOrD', 'OEulffU', 'pMordc', 'FVqmlyiDdgBpRyFoeUlFfuUpMOrD', 'PmO', 'o', 'YiDDgbPRYFOe', 'DGBPryfoeU', 'yIDdgbpRyFOeULfFU', 'lyIddgBPryfoeulfFuU', 'gbPrYfOeUlFfuupmO', 'yFoeULF']) from system.numbers limit 10;
SELECT * FROM replace FINAL WHERE Version = 0 ORDER BY Id, Version;
select throwIf((SELECT * FROM tmp) != (SELECT arraySort(groupArray(n)), arraySort(groupArray(m)), arraySort(groupArray(_part)) FROM mt)) FORMAT Null;
SELECT multiIf(1, ['foo', 'bar'], (col1 % 3) = 0, ['foo', col5], [col6, col7]) FROM multi_if_check;
SELECT -.34e+21;
CREATE TABLE test_314B405D322C4F295739257964342B68737272295456642C72383E583C453D626F7B6277363B6866(x UInt8) Engine=Memory;
SELECT materialize(toUInt32(0)) AS x, toInt64(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
SELECT anyLast(NULL);
select x + y, sum(x - y) as s from test_agg_proj group by x + y order by s desc limit 5 settings optimize_use_projections=1
CREATE TABLE test_357A7B4924376E7A5E347C287C674C2A6877502A38442C6558722F4C356D7E407C37245F3E6A4956(x UInt8) Engine=Memory;
CREATE TABLE t19 (`a` UInt32, `b` UInt32) ENGINE = MergeTree PARTITION BY a ORDER BY a SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 77, merge_max_block_size = 5221, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 76652, primary_key_compress_block_size = 22585
CREATE TABLE test_544E222A774F2339392E282842236D424E6F345B293B7036295D2645706830414F3C2E3733636F4B(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_6_320 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT *, toTypeName(t2.id), toTypeName(t3.id) FROM t2_00848 t2 FULL JOIN t3_00848 t3 USING(id) ORDER BY id;
DROP DATABASE IF EXISTS test_09j6jqea 
CREATE TABLE test_01193_18429.table_9_431 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_8_112 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_5_103 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT multiIf((number % 2) = 0, [toInt64(1), toInt64(2)], (number % 3) = 0, [toUInt16(2), toUInt16(3)], [toUInt16(3), toUInt16(3)]) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_10_341 VALUES 
select parseDateTimeBestEffort('18:31:44 , 31/12/2015');
select parseDateTimeInJodaSyntax('/11', '/DD', 'UTC') = toDateTime('2000-01-11', 'UTC');
SELECT hasToken('hayhayhayhayhayhayhayhayhayneedlehayhayhayhayhayhayhayhayhay', 'n'), ' expecting ', 0;
SELECT 't22', * FROM t1 JOIN t22 ON t1.id == t22.idd and t22.key == t22.key2 OR t1.id == t22.idd and t1.id == t22.id;
create table tutorial ( inner_poly Array(Tuple(Int32, Int32)), outer_poly Array(Tuple(Int32, Int32)) ) engine = Log();
INSERT INTO r1 SELECT 88 % 10 = 1 ? 88 - 1 : 88
CREATE TABLE test_02908_r1_71 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_71', 'r1') ORDER BY tuple()
INSERT INTO test_01193_18429.table_4_777 VALUES 
SELECT count() FROM t_key_condition_float WHERE a > 0::Float64;
CREATE TABLE test_334E7931654C325B597D2D61296845657A77253E3578635F693D4359263B7B6F356229756842232C(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_2_253 VALUES 
SELECT tj.x FROM t ALL RIGHT JOIN tj USING (key1, key2) ORDER BY key1 FORMAT TSVWithNames;
SELECT '0', '1.500000000', 0 = 1.500000000, 0 != 1.500000000, 0 < 1.500000000, 0 <= 1.500000000, 0 > 1.500000000, 0 >= 1.500000000, 1.500000000 = 0, 1.500000000 != 0, 1.500000000 < 0, 1.500000000 <= 0, 1.500000000 > 0, 1.500000000 >= 0 , toUInt8(0) = 1.500000000, toUInt8(0) != 1.500000000, toUInt8(0) < 1.500000000, toUInt8(0) <= 1.500000000, toUInt8(0) > 1.500000000, toUInt8(0) >= 1.500000000, 1.500000000 = toUInt8(0), 1.500000000 != toUInt8(0), 1.500000000 < toUInt8(0), 1.500000000 <= toUInt8(0), 1.500000000 > toUInt8(0), 1.500000000 >= toUInt8(0) , toInt8(0) = 1.500000000, toInt8(0) != 1.500000000, toInt8(0) < 1.500000000, toInt8(0) <= 1.500000000, toInt8(0) > 1.500000000, toInt8(0) >= 1.500000000, 1.500000000 = toInt8(0), 1.500000000 != toInt8(0), 1.500000000 < toInt8(0), 1.500000000 <= toInt8(0), 1.500000000 > toInt8(0), 1.500000000 >= toInt8(0) , toUInt16(0) = 1.500000000, toUInt16(0) != 1.500000000, toUInt16(0) < 1.500000000, toUInt16(0) <= 1.500000000, toUInt16(0) > 1.500000000, toUInt16(0) >= 1.500000000, 1.500000000 = toUInt16(0), 1.500000000 != toUInt16(0), 1.500000000 < toUInt16(0), 1.500000000 <= toUInt16(0), 1.500000000 > toUInt16(0), 1.500000000 >= toUInt16(0) , toInt16(0) = 1.500000000, toInt16(0) != 1.500000000, toInt16(0) < 1.500000000, toInt16(0) <= 1.500000000, toInt16(0) > 1.500000000, toInt16(0) >= 1.500000000, 1.500000000 = toInt16(0), 1.500000000 != toInt16(0), 1.500000000 < toInt16(0), 1.500000000 <= toInt16(0), 1.500000000 > toInt16(0), 1.500000000 >= toInt16(0) , toUInt32(0) = 1.500000000, toUInt32(0) != 1.500000000, toUInt32(0) < 1.500000000, toUInt32(0) <= 1.500000000, toUInt32(0) > 1.500000000, toUInt32(0) >= 1.500000000, 1.500000000 = toUInt32(0), 1.500000000 != toUInt32(0), 1.500000000 < toUInt32(0), 1.500000000 <= toUInt32(0), 1.500000000 > toUInt32(0), 1.500000000 >= toUInt32(0) , toInt32(0) = 1.500000000, toInt32(0) != 1.500000000, toInt32(0) < 1.500000000, toInt32(0) <= 1.500000000, toInt32(0) > 1.500000000, toInt32(0) >= 1.500000000, 1.500000000 = toInt32(0), 1.500000000 != toInt32(0), 1.500000000 < toInt32(0), 1.500000000 <= toInt32(0), 1.500000000 > toInt32(0), 1.500000000 >= toInt32(0) , toUInt64(0) = 1.500000000, toUInt64(0) != 1.500000000, toUInt64(0) < 1.500000000, toUInt64(0) <= 1.500000000, toUInt64(0) > 1.500000000, toUInt64(0) >= 1.500000000, 1.500000000 = toUInt64(0), 1.500000000 != toUInt64(0), 1.500000000 < toUInt64(0), 1.500000000 <= toUInt64(0), 1.500000000 > toUInt64(0), 1.500000000 >= toUInt64(0) , toInt64(0) = 1.500000000, toInt64(0) != 1.500000000, toInt64(0) < 1.500000000, toInt64(0) <= 1.500000000, toInt64(0) > 1.500000000, toInt64(0) >= 1.500000000, 1.500000000 = toInt64(0), 1.500000000 != toInt64(0), 1.500000000 < toInt64(0), 1.500000000 <= toInt64(0), 1.500000000 > toInt64(0), 1.500000000 >= toInt64(0) ;
SELECT toDecimal128(12345.6789, 4) AS x, round(x, -1), round(x, -2), round(x, -3), round(x, -4), round(x, -5);
SELECT age('month', toDate('2015-08-18', 'UTC'), toDate32('2015-09-18', 'UTC'), 'UTC');
CREATE TABLE test_01193_18429.table_8_676 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_02908_r1_36 SELECT rand64() FROM numbers(5);
SELECT CASE WHEN (number % 2) = 0 THEN [toInt32(1), toInt32(2)] WHEN (number % 3) = 0 THEN [toInt16(2), toInt16(3)] ELSE [toUInt16(3), toUInt16(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_5_336 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT toDateTime64('2011-11-11 11:11:11.111111111111111111111', 0);
SELECT t1.id AS t1_id, toTypeName(t1_id), t1.value AS t1_value, toTypeName(t1_value), t2.id AS t2_id, toTypeName(t2_id), t2.value AS t2_value, toTypeName(t2_value) FROM test_table_join_1 AS t1 RIGHT JOIN test_table_join_2 AS t2 ON t1.id = t2.id;
select * from (SELECT number as a FROM numbers(11)) t1 PASTE JOIN test t2 SETTINGS max_threads=1;
SELECT 'Running test stateless/02204_fractional_progress_bar_long.sh from pid=1722' 
INSERT INTO test_01193_18429.table_5_457 VALUES 
CREATE TABLE test_6379436E2F5C2A4523737D26282A74476F7B783D613D38796C67702B2D61365A5A2E5B31593A4876(x UInt8) Engine=Memory;
alter table data_01900_1 update s = 'foo_21' where 1;
INSERT INTO test_01193_18429.table_2_875 VALUES 
INSERT INTO r3 SELECT 68
SELECT sleepEachRow(1) FROM remote('127.{2,3}', system.one) FORMAT Null
SELECT '24' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffe0::')))
create table data_01320 (key Int) Engine=Null();
select sum(key) from projection_without_key settings optimize_use_projections = 0;
SELECT greatest(CAST(1 AS Int8),CAST( 0 AS Nullable(Int8)));
SELECT round(primary_key_bytes_in_memory, -7), round(primary_key_bytes_in_memory_allocated, -7) FROM system.parts WHERE database = currentDatabase() AND table = 'test';
SELECT count(), sum(b) FROM alter_table0
alter table many_mutations delete where y = 992 * 2 settings mutations_sync = 0;
explain select * from numbers(1) into outfile 'explain1.02767_into_outfile_extensions_msan_test_a4vxgu9s.out'
/* Check JSONCompactEachRowWithNamesAndTypes and JSONCompactEachRowWithNamesAndTypes Input */ SET input_format_null_as_default = 0;
select count(*) as `value`, 0 as `data` from test group by `data`;
SELECT number FROM (SELECT number FROM numbers(2097152)) ORDER BY number * 1234567890123456789 LIMIT 2097142, 10 SETTINGS log_comment='02402_external_disk_mertrics/sort' FORMAT Null;
CREATE TABLE test_01193_18429.table_10_957 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
desc test_nested;
SELECT toUnixTimestamp(x) as tt, (toDateTime('2020-10-04 01:40:00', 'Australia/Lord_Howe') + INTERVAL number * 600 SECOND) AS x, timezoneOffset(x) as res,(toDateTime(toString(x), 'UTC') - x ) AS calc FROM numbers(18) where res != calc;
SELECT * FROM (SELECT materialize(NULL :: Nullable(UInt64)) AS id) AS a SEMI RIGHT JOIN (SELECT materialize(1 :: UInt32) AS id) AS d ON a.id = d.id ;
CREATE TABLE test_01193_18429.table_3_881 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
ALTER TABLE concurrent_alter_column ADD COLUMN c241 DOUBLE;
system stop distributed sends on cluster test_shard_localhost db_01294.dist_01294
SELECT formatDateTime(toDateTime('2018-01-02 22:33:44'), '%b'), formatDateTime(toDate32('2018-01-02'), '%b');
SELECT dictGetString('01280_db.ssd_dict', 'c', ('10', toInt32(-20)));
SELECT materialize(toUInt16(0)) AS x, toFloat64(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
CREATE DATABASE dPRyjSea5iiiY
SELECT sum(e) from tab_02473 PREWHERE b > 10 AND b <= 70 AND c > 46 AND c <= 76 AND d > 5 AND d <= 35 WHERE a == 0;
CREATE TABLE test_7652765A284E70655635756336443C486E30737B73622F41716A30507C3B637E70666E7C7D7B2221(x UInt8) Engine=Memory;
INSERT INTO default_by_other_column(a, b, c) VALUES
SELECT parseDateTime32BestEffort(materialize('2020-05-14T03:37:03.253184Z'), 'UTC') AS a, toTypeName(a);
attach table file from '01188_attach/file' (s String, n UInt8) engine=File(TSV);
SELECT 1 IN ( SELECT 1 ) FROM remote('127.0.0.{1,2}', system.one) GROUP BY dummy;
INSERT INTO test_01193_18429.table_10_174 VALUES 
CREATE TABLE destination_join ( `key` String, `id` String, `color` String, `section` String, `description` String) ENGINE = Join(ANY, LEFT, key);
DROP DATABASE IF EXISTS test_l2yqkpn5 
CREATE DATABASE IF NOT EXISTS test_z4d1h5h7 
SELECT concat('With ', materialize('2023-11-14 05:50:12' :: DateTime('Europe/Amsterdam')));
select concat(materialize(toFixedString('a', 1)), 'b', materialize(toFixedString('c', 1))) == 'abc' from system.numbers limit 5;
CREATE TEMPORARY TABLE t0 AS SELECT quantileArrayState(0.10)([number]) FROM numbers(100);
INSERT INTO test_01193_18429.table_10_95 VALUES 
CREATE TABLE test_01193_18429.table_7_601 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT toDecimal128('0.0', 2) AS x, round(sin(x), 8), round(cos(x), 8), round(tan(x), 8);
SELECT multiIf((number % 2) = 0, toUInt64(1), (number % 3) = 0, toUInt64(2), toUInt16(3)) FROM system.numbers LIMIT 10;
SELECT h3ToParent(599405990164561919, 0);
CREATE TABLE test_4E463A644A59295963304A25537A5C7E4C236A2B3B7027654B7D5C20747875203F5B666B63433332(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_lzfg9kfv 
INSERT INTO r2 SELECT 96
select if(number % 5, Null, toDecimal128OrZero(toString(number), 5)) from numbers(20);
DROP TABLE IF EXISTS test_not_found_column_nothing;
CREATE TABLE test_7A25654B75492423526C4855263E773A4030442E50543B763B7C4225243D5357462A6C30662F3265(x UInt8) Engine=Memory;
SELECT 129, 2147483649, 129 = 2147483649, 129 != 2147483649, 129 < 2147483649, 129 <= 2147483649, 129 > 2147483649, 129 >= 2147483649, 2147483649 = 129, 2147483649 != 129, 2147483649 < 129, 2147483649 <= 129, 2147483649 > 129, 2147483649 >= 129 , toUInt8(129) = toUInt32(2147483649), toUInt8(129) != toUInt32(2147483649), toUInt8(129) < toUInt32(2147483649), toUInt8(129) <= toUInt32(2147483649), toUInt8(129) > toUInt32(2147483649), toUInt8(129) >= toUInt32(2147483649), toUInt32(2147483649) = toUInt8(129), toUInt32(2147483649) != toUInt8(129), toUInt32(2147483649) < toUInt8(129), toUInt32(2147483649) <= toUInt8(129), toUInt32(2147483649) > toUInt8(129), toUInt32(2147483649) >= toUInt8(129) , toUInt8(129) = toUInt64(2147483649), toUInt8(129) != toUInt64(2147483649), toUInt8(129) < toUInt64(2147483649), toUInt8(129) <= toUInt64(2147483649), toUInt8(129) > toUInt64(2147483649), toUInt8(129) >= toUInt64(2147483649), toUInt64(2147483649) = toUInt8(129), toUInt64(2147483649) != toUInt8(129), toUInt64(2147483649) < toUInt8(129), toUInt64(2147483649) <= toUInt8(129), toUInt64(2147483649) > toUInt8(129), toUInt64(2147483649) >= toUInt8(129) , toUInt8(129) = toInt64(2147483649), toUInt8(129) != toInt64(2147483649), toUInt8(129) < toInt64(2147483649), toUInt8(129) <= toInt64(2147483649), toUInt8(129) > toInt64(2147483649), toUInt8(129) >= toInt64(2147483649), toInt64(2147483649) = toUInt8(129), toInt64(2147483649) != toUInt8(129), toInt64(2147483649) < toUInt8(129), toInt64(2147483649) <= toUInt8(129), toInt64(2147483649) > toUInt8(129), toInt64(2147483649) >= toUInt8(129) , toUInt16(129) = toUInt32(2147483649), toUInt16(129) != toUInt32(2147483649), toUInt16(129) < toUInt32(2147483649), toUInt16(129) <= toUInt32(2147483649), toUInt16(129) > toUInt32(2147483649), toUInt16(129) >= toUInt32(2147483649), toUInt32(2147483649) = toUInt16(129), toUInt32(2147483649) != toUInt16(129), toUInt32(2147483649) < toUInt16(129), toUInt32(2147483649) <= toUInt16(129), toUInt32(2147483649) > toUInt16(129), toUInt32(2147483649) >= toUInt16(129) , toUInt16(129) = toUInt64(2147483649), toUInt16(129) != toUInt64(2147483649), toUInt16(129) < toUInt64(2147483649), toUInt16(129) <= toUInt64(2147483649), toUInt16(129) > toUInt64(2147483649), toUInt16(129) >= toUInt64(2147483649), toUInt64(2147483649) = toUInt16(129), toUInt64(2147483649) != toUInt16(129), toUInt64(2147483649) < toUInt16(129), toUInt64(2147483649) <= toUInt16(129), toUInt64(2147483649) > toUInt16(129), toUInt64(2147483649) >= toUInt16(129) , toUInt16(129) = toInt64(2147483649), toUInt16(129) != toInt64(2147483649), toUInt16(129) < toInt64(2147483649), toUInt16(129) <= toInt64(2147483649), toUInt16(129) > toInt64(2147483649), toUInt16(129) >= toInt64(2147483649), toInt64(2147483649) = toUInt16(129), toInt64(2147483649) != toUInt16(129), toInt64(2147483649) < toUInt16(129), toInt64(2147483649) <= toUInt16(129), toInt64(2147483649) > toUInt16(129), toInt64(2147483649) >= toUInt16(129) , toInt16(129) = toUInt32(2147483649), toInt16(129) != toUInt32(2147483649), toInt16(129) < toUInt32(2147483649), toInt16(129) <= toUInt32(2147483649), toInt16(129) > toUInt32(2147483649), toInt16(129) >= toUInt32(2147483649), toUInt32(2147483649) = toInt16(129), toUInt32(2147483649) != toInt16(129), toUInt32(2147483649) < toInt16(129), toUInt32(2147483649) <= toInt16(129), toUInt32(2147483649) > toInt16(129), toUInt32(2147483649) >= toInt16(129) , toInt16(129) = toUInt64(2147483649), toInt16(129) != toUInt64(2147483649), toInt16(129) < toUInt64(2147483649), toInt16(129) <= toUInt64(2147483649), toInt16(129) > toUInt64(2147483649), toInt16(129) >= toUInt64(2147483649), toUInt64(2147483649) = toInt16(129), toUInt64(2147483649) != toInt16(129), toUInt64(2147483649) < toInt16(129), toUInt64(2147483649) <= toInt16(129), toUInt64(2147483649) > toInt16(129), toUInt64(2147483649) >= toInt16(129) , toInt16(129) = toInt64(2147483649), toInt16(129) != toInt64(2147483649), toInt16(129) < toInt64(2147483649), toInt16(129) <= toInt64(2147483649), toInt16(129) > toInt64(2147483649), toInt16(129) >= toInt64(2147483649), toInt64(2147483649) = toInt16(129), toInt64(2147483649) != toInt16(129), toInt64(2147483649) < toInt16(129), toInt64(2147483649) <= toInt16(129), toInt64(2147483649) > toInt16(129), toInt64(2147483649) >= toInt16(129) , toUInt32(129) = toUInt32(2147483649), toUInt32(129) != toUInt32(2147483649), toUInt32(129) < toUInt32(2147483649), toUInt32(129) <= toUInt32(2147483649), toUInt32(129) > toUInt32(2147483649), toUInt32(129) >= toUInt32(2147483649), toUInt32(2147483649) = toUInt32(129), toUInt32(2147483649) != toUInt32(129), toUInt32(2147483649) < toUInt32(129), toUInt32(2147483649) <= toUInt32(129), toUInt32(2147483649) > toUInt32(129), toUInt32(2147483649) >= toUInt32(129) , toUInt32(129) = toUInt64(2147483649), toUInt32(129) != toUInt64(2147483649), toUInt32(129) < toUInt64(2147483649), toUInt32(129) <= toUInt64(2147483649), toUInt32(129) > toUInt64(2147483649), toUInt32(129) >= toUInt64(2147483649), toUInt64(2147483649) = toUInt32(129), toUInt64(2147483649) != toUInt32(129), toUInt64(2147483649) < toUInt32(129), toUInt64(2147483649) <= toUInt32(129), toUInt64(2147483649) > toUInt32(129), toUInt64(2147483649) >= toUInt32(129) , toUInt32(129) = toInt64(2147483649), toUInt32(129) != toInt64(2147483649), toUInt32(129) < toInt64(2147483649), toUInt32(129) <= toInt64(2147483649), toUInt32(129) > toInt64(2147483649), toUInt32(129) >= toInt64(2147483649), toInt64(2147483649) = toUInt32(129), toInt64(2147483649) != toUInt32(129), toInt64(2147483649) < toUInt32(129), toInt64(2147483649) <= toUInt32(129), toInt64(2147483649) > toUInt32(129), toInt64(2147483649) >= toUInt32(129) , toInt32(129) = toUInt32(2147483649), toInt32(129) != toUInt32(2147483649), toInt32(129) < toUInt32(2147483649), toInt32(129) <= toUInt32(2147483649), toInt32(129) > toUInt32(2147483649), toInt32(129) >= toUInt32(2147483649), toUInt32(2147483649) = toInt32(129), toUInt32(2147483649) != toInt32(129), toUInt32(2147483649) < toInt32(129), toUInt32(2147483649) <= toInt32(129), toUInt32(2147483649) > toInt32(129), toUInt32(2147483649) >= toInt32(129) , toInt32(129) = toUInt64(2147483649), toInt32(129) != toUInt64(2147483649), toInt32(129) < toUInt64(2147483649), toInt32(129) <= toUInt64(2147483649), toInt32(129) > toUInt64(2147483649), toInt32(129) >= toUInt64(2147483649), toUInt64(2147483649) = toInt32(129), toUInt64(2147483649) != toInt32(129), toUInt64(2147483649) < toInt32(129), toUInt64(2147483649) <= toInt32(129), toUInt64(2147483649) > toInt32(129), toUInt64(2147483649) >= toInt32(129) , toInt32(129) = toInt64(2147483649), toInt32(129) != toInt64(2147483649), toInt32(129) < toInt64(2147483649), toInt32(129) <= toInt64(2147483649), toInt32(129) > toInt64(2147483649), toInt32(129) >= toInt64(2147483649), toInt64(2147483649) = toInt32(129), toInt64(2147483649) != toInt32(129), toInt64(2147483649) < toInt32(129), toInt64(2147483649) <= toInt32(129), toInt64(2147483649) > toInt32(129), toInt64(2147483649) >= toInt32(129) , toUInt64(129) = toUInt32(2147483649), toUInt64(129) != toUInt32(2147483649), toUInt64(129) < toUInt32(2147483649), toUInt64(129) <= toUInt32(2147483649), toUInt64(129) > toUInt32(2147483649), toUInt64(129) >= toUInt32(2147483649), toUInt32(2147483649) = toUInt64(129), toUInt32(2147483649) != toUInt64(129), toUInt32(2147483649) < toUInt64(129), toUInt32(2147483649) <= toUInt64(129), toUInt32(2147483649) > toUInt64(129), toUInt32(2147483649) >= toUInt64(129) , toUInt64(129) = toUInt64(2147483649), toUInt64(129) != toUInt64(2147483649), toUInt64(129) < toUInt64(2147483649), toUInt64(129) <= toUInt64(2147483649), toUInt64(129) > toUInt64(2147483649), toUInt64(129) >= toUInt64(2147483649), toUInt64(2147483649) = toUInt64(129), toUInt64(2147483649) != toUInt64(129), toUInt64(2147483649) < toUInt64(129), toUInt64(2147483649) <= toUInt64(129), toUInt64(2147483649) > toUInt64(129), toUInt64(2147483649) >= toUInt64(129) , toUInt64(129) = toInt64(2147483649), toUInt64(129) != toInt64(2147483649), toUInt64(129) < toInt64(2147483649), toUInt64(129) <= toInt64(2147483649), toUInt64(129) > toInt64(2147483649), toUInt64(129) >= toInt64(2147483649), toInt64(2147483649) = toUInt64(129), toInt64(2147483649) != toUInt64(129), toInt64(2147483649) < toUInt64(129), toInt64(2147483649) <= toUInt64(129), toInt64(2147483649) > toUInt64(129), toInt64(2147483649) >= toUInt64(129) , toInt64(129) = toUInt32(2147483649), toInt64(129) != toUInt32(2147483649), toInt64(129) < toUInt32(2147483649), toInt64(129) <= toUInt32(2147483649), toInt64(129) > toUInt32(2147483649), toInt64(129) >= toUInt32(2147483649), toUInt32(2147483649) = toInt64(129), toUInt32(2147483649) != toInt64(129), toUInt32(2147483649) < toInt64(129), toUInt32(2147483649) <= toInt64(129), toUInt32(2147483649) > toInt64(129), toUInt32(2147483649) >= toInt64(129) , toInt64(129) = toUInt64(2147483649), toInt64(129) != toUInt64(2147483649), toInt64(129) < toUInt64(2147483649), toInt64(129) <= toUInt64(2147483649), toInt64(129) > toUInt64(2147483649), toInt64(129) >= toUInt64(2147483649), toUInt64(2147483649) = toInt64(129), toUInt64(2147483649) != toInt64(129), toUInt64(2147483649) < toInt64(129), toUInt64(2147483649) <= toInt64(129), toUInt64(2147483649) > toInt64(129), toUInt64(2147483649) >= toInt64(129) , toInt64(129) = toInt64(2147483649), toInt64(129) != toInt64(2147483649), toInt64(129) < toInt64(2147483649), toInt64(129) <= toInt64(2147483649), toInt64(129) > toInt64(2147483649), toInt64(129) >= toInt64(2147483649), toInt64(2147483649) = toInt64(129), toInt64(2147483649) != toInt64(129), toInt64(2147483649) < toInt64(129), toInt64(2147483649) <= toInt64(129), toInt64(2147483649) > toInt64(129), toInt64(2147483649) >= toInt64(129) 
CREATE TABLE test_01193_18429.table_1_594 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_d307n0mt 
CREATE DATABASE IF NOT EXISTS test_zgl0nw70 
drop table if exists dist_01071;
set optimize_uniq_to_count=true;
CREATE TABLE test_01193_18429.table_4_359 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_2_67 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT cosineDistance([1, 2, 3], [0, 0, 0]);
ALTER USER test_user_01075 DROP HOST IP '2001:0db8:11a3:09d7:1f34:8a2e:07a0:765d';
CREATE TABLE test_6D232E4C2E3D3C6C316336673268706C55507E607A4A734929637E6A555023776037694726526774(x UInt8) Engine=Memory;
SELECT ignore(sum(sipHash64(hex(sipHash64(hex(sipHash64(hex(number)))))))) FROM (SELECT * FROM system.numbers_mt LIMIT 1000000)
EXPLAIN SYNTAX SELECT 1 != (NOT 1);
SET distributed_ddl_output_mode='none';
INSERT INTO test_01193_18429.table_2_487 VALUES 
CREATE TABLE test_01193_18429.table_9_581 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/01145_with_fill_const.sql from pid=1718' 
SELECT dictGetUInt64('dict_db_01254.dict', 'val', toUInt64(0));
select b in tuple('a') from tab_00386
CREATE TABLE test_2B50606F304A486C2A55405F20436F6E5C334B5174296D533239203521487D53435A29514E5A2D2B(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00825_protobuf_format_skipped_column_in_nested.sh from pid=1726' 
SELECT arrayJoin([0, 1, 3, NULL]) AS x, x = 0, if(x = 0, 'Definitely x = 0', 'We cannot say that x = 0');
CREATE TABLE test_425A21507D6B3B725578704C786863717137692C6335552C2B2E337924656F395E6630213971437A(x UInt8) Engine=Memory;
SELECT '-- special cases';
CREATE TABLE vec1d (id UInt64, v Array(Float64)) ENGINE = Memory;
INSERT INTO template VALUES 
SELECT nb.t.t FROM na, nb;
ALTER TABLE concurrent_alter_column ADD COLUMN c345 DOUBLE;
SELECT toWeek(NULL, NULL, NULL);
SELECT splitByRegexp('\\d+', 'a12bc23de345f', 4);
select 0 = isValidUTF8('\xed\xa0\x81') from system.numbers limit 10;
SELECT YYYYMMDDToDate32(20230940);
INSERT INTO test_01193_18429.table_7_262 VALUES 
INSERT INTO parquet_nested_arrays FORMAT Parquet
SELECT 'n fj t', t1.x, t2.x FROM ntxy AS t1 FULL JOIN t AS t2 ON t2.x = t1.y OR t1.x = t2.x ORDER BY t1.x;
INSERT INTO test_01193_18429.table_7_518 VALUES 
select -4 as offset, -13 as length, toFixedString('Hello', 6) as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
CREATE TABLE empty_summing (d Date, k UInt64, v Int8) ENGINE=SummingMergeTree(d, k, 8192);
CREATE TABLE test_3A7D654C406F4937337E5E7245736E4064633E3E632447737E284F2950607531793945654D254076(x UInt8) Engine=Memory;
select * from (select *, a + b as x, a / b as y from tab) order by x * c, sin(y);
SELECT 'Running test stateless/02768_into_outfile_extensions_format.sh from pid=1715' 
CREATE TABLE test_3E67534A4147533C552A384D4123587D587A29344927766B45663053734D384E4A3E683E586C6820(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN toInt32(1) WHEN (number % 3) = 0 THEN toFloat64(2) ELSE toInt32(3) END FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_adn33g3k 
CREATE TABLE test_01193_18429.table_6_268 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select 'src_to_dst', 7, 'src', type, n, _part from src order by type, n
CREATE TABLE A (`k` UInt32, `t` UInt64, `a` Float64) ENGINE = MergeTree ORDER BY (k, t) SETTINGS index_granularity = 57643, min_bytes_for_wide_part = 636221231, ratio_of_defaults_for_sparse_serialization = 0.34237709641456604, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 6784, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 2424484770, index_granularity_bytes = 8067457, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 32242, primary_key_compress_block_size = 12095
with '2018-01-12 22:33:44' as s, toDateTime(s) as datetime, toDateTime64(s, 6) as datetime64, toDate(s) as date, toDate32(s) as date32 SELECT formatDateTimeInJodaSyntax(datetime, 'YYYY'), formatDateTimeInJodaSyntax(datetime64, 'YYYY'), formatDateTimeInJodaSyntax(date, 'YYYY'), formatDateTimeInJodaSyntax(date32, 'YYYY');
SELECT multiIf((number % 2) = 0, toInt16(1), (number % 3) = 0, toFloat32(2), toUInt16(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_8_539 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN [toInt64(1), toInt64(2)] WHEN (number % 3) = 0 THEN [toInt8(2), toInt8(3)] ELSE [toUInt8(3), toUInt8(3)] END FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_5c912rvn 
CREATE TABLE test_01193_18429.table_3_510 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'Running test stateless/02804_clusterAllReplicas_insert.sql from pid=1720' 
select val from tab_00612_1 order by val
CREATE TABLE t_async_insert_native_3 (`id` UInt64, `s` String) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 56546, min_bytes_for_wide_part = 403960104, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 31, merge_max_block_size = 275, prefer_fetch_merged_part_size_threshold = 6348468801, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10413327218, index_granularity_bytes = 22406082, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 36686, primary_key_compress_block_size = 74889
DROP TABLE union2;
CREATE DATABASE test_dict_db;
CREATE TABLE test_01193_18429.table_6_590 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT count(*) FROM source WHERE toYYYYMM(dt) < 202312;
DROP DATABASE IF EXISTS test_uraxjysu 
DROP DATABASE IF EXISTS test_d92y84dn 
CREATE DATABASE IF NOT EXISTS test_ypwhqdf8 
SELECT multiIf((col1 % 2) = 0, ['foo', col3], (col1 % 3) = 0, ['foo', col5], [col6, 'bar']) FROM multi_if_check;
CREATE TABLE t3 ( `c1` Int64, `1c1` Int64 ) ENGINE = Memory;
SELECT medianExact(NULL);
SELECT 127, -128, 127 = -128, 127 != -128, 127 < -128, 127 <= -128, 127 > -128, 127 >= -128, -128 = 127, -128 != 127, -128 < 127, -128 <= 127, -128 > 127, -128 >= 127 , toUInt8(127) = toInt8(-128), toUInt8(127) != toInt8(-128), toUInt8(127) < toInt8(-128), toUInt8(127) <= toInt8(-128), toUInt8(127) > toInt8(-128), toUInt8(127) >= toInt8(-128), toInt8(-128) = toUInt8(127), toInt8(-128) != toUInt8(127), toInt8(-128) < toUInt8(127), toInt8(-128) <= toUInt8(127), toInt8(-128) > toUInt8(127), toInt8(-128) >= toUInt8(127) , toUInt8(127) = toInt16(-128), toUInt8(127) != toInt16(-128), toUInt8(127) < toInt16(-128), toUInt8(127) <= toInt16(-128), toUInt8(127) > toInt16(-128), toUInt8(127) >= toInt16(-128), toInt16(-128) = toUInt8(127), toInt16(-128) != toUInt8(127), toInt16(-128) < toUInt8(127), toInt16(-128) <= toUInt8(127), toInt16(-128) > toUInt8(127), toInt16(-128) >= toUInt8(127) , toUInt8(127) = toInt32(-128), toUInt8(127) != toInt32(-128), toUInt8(127) < toInt32(-128), toUInt8(127) <= toInt32(-128), toUInt8(127) > toInt32(-128), toUInt8(127) >= toInt32(-128), toInt32(-128) = toUInt8(127), toInt32(-128) != toUInt8(127), toInt32(-128) < toUInt8(127), toInt32(-128) <= toUInt8(127), toInt32(-128) > toUInt8(127), toInt32(-128) >= toUInt8(127) , toUInt8(127) = toInt64(-128), toUInt8(127) != toInt64(-128), toUInt8(127) < toInt64(-128), toUInt8(127) <= toInt64(-128), toUInt8(127) > toInt64(-128), toUInt8(127) >= toInt64(-128), toInt64(-128) = toUInt8(127), toInt64(-128) != toUInt8(127), toInt64(-128) < toUInt8(127), toInt64(-128) <= toUInt8(127), toInt64(-128) > toUInt8(127), toInt64(-128) >= toUInt8(127) , toInt8(127) = toInt8(-128), toInt8(127) != toInt8(-128), toInt8(127) < toInt8(-128), toInt8(127) <= toInt8(-128), toInt8(127) > toInt8(-128), toInt8(127) >= toInt8(-128), toInt8(-128) = toInt8(127), toInt8(-128) != toInt8(127), toInt8(-128) < toInt8(127), toInt8(-128) <= toInt8(127), toInt8(-128) > toInt8(127), toInt8(-128) >= toInt8(127) , toInt8(127) = toInt16(-128), toInt8(127) != toInt16(-128), toInt8(127) < toInt16(-128), toInt8(127) <= toInt16(-128), toInt8(127) > toInt16(-128), toInt8(127) >= toInt16(-128), toInt16(-128) = toInt8(127), toInt16(-128) != toInt8(127), toInt16(-128) < toInt8(127), toInt16(-128) <= toInt8(127), toInt16(-128) > toInt8(127), toInt16(-128) >= toInt8(127) , toInt8(127) = toInt32(-128), toInt8(127) != toInt32(-128), toInt8(127) < toInt32(-128), toInt8(127) <= toInt32(-128), toInt8(127) > toInt32(-128), toInt8(127) >= toInt32(-128), toInt32(-128) = toInt8(127), toInt32(-128) != toInt8(127), toInt32(-128) < toInt8(127), toInt32(-128) <= toInt8(127), toInt32(-128) > toInt8(127), toInt32(-128) >= toInt8(127) , toInt8(127) = toInt64(-128), toInt8(127) != toInt64(-128), toInt8(127) < toInt64(-128), toInt8(127) <= toInt64(-128), toInt8(127) > toInt64(-128), toInt8(127) >= toInt64(-128), toInt64(-128) = toInt8(127), toInt64(-128) != toInt8(127), toInt64(-128) < toInt8(127), toInt64(-128) <= toInt8(127), toInt64(-128) > toInt8(127), toInt64(-128) >= toInt8(127) , toUInt16(127) = toInt8(-128), toUInt16(127) != toInt8(-128), toUInt16(127) < toInt8(-128), toUInt16(127) <= toInt8(-128), toUInt16(127) > toInt8(-128), toUInt16(127) >= toInt8(-128), toInt8(-128) = toUInt16(127), toInt8(-128) != toUInt16(127), toInt8(-128) < toUInt16(127), toInt8(-128) <= toUInt16(127), toInt8(-128) > toUInt16(127), toInt8(-128) >= toUInt16(127) , toUInt16(127) = toInt16(-128), toUInt16(127) != toInt16(-128), toUInt16(127) < toInt16(-128), toUInt16(127) <= toInt16(-128), toUInt16(127) > toInt16(-128), toUInt16(127) >= toInt16(-128), toInt16(-128) = toUInt16(127), toInt16(-128) != toUInt16(127), toInt16(-128) < toUInt16(127), toInt16(-128) <= toUInt16(127), toInt16(-128) > toUInt16(127), toInt16(-128) >= toUInt16(127) , toUInt16(127) = toInt32(-128), toUInt16(127) != toInt32(-128), toUInt16(127) < toInt32(-128), toUInt16(127) <= toInt32(-128), toUInt16(127) > toInt32(-128), toUInt16(127) >= toInt32(-128), toInt32(-128) = toUInt16(127), toInt32(-128) != toUInt16(127), toInt32(-128) < toUInt16(127), toInt32(-128) <= toUInt16(127), toInt32(-128) > toUInt16(127), toInt32(-128) >= toUInt16(127) , toUInt16(127) = toInt64(-128), toUInt16(127) != toInt64(-128), toUInt16(127) < toInt64(-128), toUInt16(127) <= toInt64(-128), toUInt16(127) > toInt64(-128), toUInt16(127) >= toInt64(-128), toInt64(-128) = toUInt16(127), toInt64(-128) != toUInt16(127), toInt64(-128) < toUInt16(127), toInt64(-128) <= toUInt16(127), toInt64(-128) > toUInt16(127), toInt64(-128) >= toUInt16(127) , toInt16(127) = toInt8(-128), toInt16(127) != toInt8(-128), toInt16(127) < toInt8(-128), toInt16(127) <= toInt8(-128), toInt16(127) > toInt8(-128), toInt16(127) >= toInt8(-128), toInt8(-128) = toInt16(127), toInt8(-128) != toInt16(127), toInt8(-128) < toInt16(127), toInt8(-128) <= toInt16(127), toInt8(-128) > toInt16(127), toInt8(-128) >= toInt16(127) , toInt16(127) = toInt16(-128), toInt16(127) != toInt16(-128), toInt16(127) < toInt16(-128), toInt16(127) <= toInt16(-128), toInt16(127) > toInt16(-128), toInt16(127) >= toInt16(-128), toInt16(-128) = toInt16(127), toInt16(-128) != toInt16(127), toInt16(-128) < toInt16(127), toInt16(-128) <= toInt16(127), toInt16(-128) > toInt16(127), toInt16(-128) >= toInt16(127) , toInt16(127) = toInt32(-128), toInt16(127) != toInt32(-128), toInt16(127) < toInt32(-128), toInt16(127) <= toInt32(-128), toInt16(127) > toInt32(-128), toInt16(127) >= toInt32(-128), toInt32(-128) = toInt16(127), toInt32(-128) != toInt16(127), toInt32(-128) < toInt16(127), toInt32(-128) <= toInt16(127), toInt32(-128) > toInt16(127), toInt32(-128) >= toInt16(127) , toInt16(127) = toInt64(-128), toInt16(127) != toInt64(-128), toInt16(127) < toInt64(-128), toInt16(127) <= toInt64(-128), toInt16(127) > toInt64(-128), toInt16(127) >= toInt64(-128), toInt64(-128) = toInt16(127), toInt64(-128) != toInt16(127), toInt64(-128) < toInt16(127), toInt64(-128) <= toInt16(127), toInt64(-128) > toInt16(127), toInt64(-128) >= toInt16(127) , toUInt32(127) = toInt8(-128), toUInt32(127) != toInt8(-128), toUInt32(127) < toInt8(-128), toUInt32(127) <= toInt8(-128), toUInt32(127) > toInt8(-128), toUInt32(127) >= toInt8(-128), toInt8(-128) = toUInt32(127), toInt8(-128) != toUInt32(127), toInt8(-128) < toUInt32(127), toInt8(-128) <= toUInt32(127), toInt8(-128) > toUInt32(127), toInt8(-128) >= toUInt32(127) , toUInt32(127) = toInt16(-128), toUInt32(127) != toInt16(-128), toUInt32(127) < toInt16(-128), toUInt32(127) <= toInt16(-128), toUInt32(127) > toInt16(-128), toUInt32(127) >= toInt16(-128), toInt16(-128) = toUInt32(127), toInt16(-128) != toUInt32(127), toInt16(-128) < toUInt32(127), toInt16(-128) <= toUInt32(127), toInt16(-128) > toUInt32(127), toInt16(-128) >= toUInt32(127) , toUInt32(127) = toInt32(-128), toUInt32(127) != toInt32(-128), toUInt32(127) < toInt32(-128), toUInt32(127) <= toInt32(-128), toUInt32(127) > toInt32(-128), toUInt32(127) >= toInt32(-128), toInt32(-128) = toUInt32(127), toInt32(-128) != toUInt32(127), toInt32(-128) < toUInt32(127), toInt32(-128) <= toUInt32(127), toInt32(-128) > toUInt32(127), toInt32(-128) >= toUInt32(127) , toUInt32(127) = toInt64(-128), toUInt32(127) != toInt64(-128), toUInt32(127) < toInt64(-128), toUInt32(127) <= toInt64(-128), toUInt32(127) > toInt64(-128), toUInt32(127) >= toInt64(-128), toInt64(-128) = toUInt32(127), toInt64(-128) != toUInt32(127), toInt64(-128) < toUInt32(127), toInt64(-128) <= toUInt32(127), toInt64(-128) > toUInt32(127), toInt64(-128) >= toUInt32(127) , toInt32(127) = toInt8(-128), toInt32(127) != toInt8(-128), toInt32(127) < toInt8(-128), toInt32(127) <= toInt8(-128), toInt32(127) > toInt8(-128), toInt32(127) >= toInt8(-128), toInt8(-128) = toInt32(127), toInt8(-128) != toInt32(127), toInt8(-128) < toInt32(127), toInt8(-128) <= toInt32(127), toInt8(-128) > toInt32(127), toInt8(-128) >= toInt32(127) , toInt32(127) = toInt16(-128), toInt32(127) != toInt16(-128), toInt32(127) < toInt16(-128), toInt32(127) <= toInt16(-128), toInt32(127) > toInt16(-128), toInt32(127) >= toInt16(-128), toInt16(-128) = toInt32(127), toInt16(-128) != toInt32(127), toInt16(-128) < toInt32(127), toInt16(-128) <= toInt32(127), toInt16(-128) > toInt32(127), toInt16(-128) >= toInt32(127) , toInt32(127) = toInt32(-128), toInt32(127) != toInt32(-128), toInt32(127) < toInt32(-128), toInt32(127) <= toInt32(-128), toInt32(127) > toInt32(-128), toInt32(127) >= toInt32(-128), toInt32(-128) = toInt32(127), toInt32(-128) != toInt32(127), toInt32(-128) < toInt32(127), toInt32(-128) <= toInt32(127), toInt32(-128) > toInt32(127), toInt32(-128) >= toInt32(127) , toInt32(127) = toInt64(-128), toInt32(127) != toInt64(-128), toInt32(127) < toInt64(-128), toInt32(127) <= toInt64(-128), toInt32(127) > toInt64(-128), toInt32(127) >= toInt64(-128), toInt64(-128) = toInt32(127), toInt64(-128) != toInt32(127), toInt64(-128) < toInt32(127), toInt64(-128) <= toInt32(127), toInt64(-128) > toInt32(127), toInt64(-128) >= toInt32(127) , toUInt64(127) = toInt8(-128), toUInt64(127) != toInt8(-128), toUInt64(127) < toInt8(-128), toUInt64(127) <= toInt8(-128), toUInt64(127) > toInt8(-128), toUInt64(127) >= toInt8(-128), toInt8(-128) = toUInt64(127), toInt8(-128) != toUInt64(127), toInt8(-128) < toUInt64(127), toInt8(-128) <= toUInt64(127), toInt8(-128) > toUInt64(127), toInt8(-128) >= toUInt64(127) , toUInt64(127) = toInt16(-128), toUInt64(127) != toInt16(-128), toUInt64(127) < toInt16(-128), toUInt64(127) <= toInt16(-128), toUInt64(127) > toInt16(-128), toUInt64(127) >= toInt16(-128), toInt16(-128) = toUInt64(127), toInt16(-128) != toUInt64(127), toInt16(-128) < toUInt64(127), toInt16(-128) <= toUInt64(127), toInt16(-128) > toUInt64(127), toInt16(-128) >= toUInt64(127) , toUInt64(127) = toInt32(-128), toUInt64(127) != toInt32(-128), toUInt64(127) < toInt32(-128), toUInt64(127) <= toInt32(-128), toUInt64(127) > toInt32(-128), toUInt64(127) >= toInt32(-128), toInt32(-128) = toUInt64(127), toInt32(-128) != toUInt64(127), toInt32(-128) < toUInt64(127), toInt32(-128) <= toUInt64(127), toInt32(-128) > toUInt64(127), toInt32(-128) >= toUInt64(127) , toUInt64(127) = toInt64(-128), toUInt64(127) != toInt64(-128), toUInt64(127) < toInt64(-128), toUInt64(127) <= toInt64(-128), toUInt64(127) > toInt64(-128), toUInt64(127) >= toInt64(-128), toInt64(-128) = toUInt64(127), toInt64(-128) != toUInt64(127), toInt64(-128) < toUInt64(127), toInt64(-128) <= toUInt64(127), toInt64(-128) > toUInt64(127), toInt64(-128) >= toUInt64(127) , toInt64(127) = toInt8(-128), toInt64(127) != toInt8(-128), toInt64(127) < toInt8(-128), toInt64(127) <= toInt8(-128), toInt64(127) > toInt8(-128), toInt64(127) >= toInt8(-128), toInt8(-128) = toInt64(127), toInt8(-128) != toInt64(127), toInt8(-128) < toInt64(127), toInt8(-128) <= toInt64(127), toInt8(-128) > toInt64(127), toInt8(-128) >= toInt64(127) , toInt64(127) = toInt16(-128), toInt64(127) != toInt16(-128), toInt64(127) < toInt16(-128), toInt64(127) <= toInt16(-128), toInt64(127) > toInt16(-128), toInt64(127) >= toInt16(-128), toInt16(-128) = toInt64(127), toInt16(-128) != toInt64(127), toInt16(-128) < toInt64(127), toInt16(-128) <= toInt64(127), toInt16(-128) > toInt64(127), toInt16(-128) >= toInt64(127) , toInt64(127) = toInt32(-128), toInt64(127) != toInt32(-128), toInt64(127) < toInt32(-128), toInt64(127) <= toInt32(-128), toInt64(127) > toInt32(-128), toInt64(127) >= toInt32(-128), toInt32(-128) = toInt64(127), toInt32(-128) != toInt64(127), toInt32(-128) < toInt64(127), toInt32(-128) <= toInt64(127), toInt32(-128) > toInt64(127), toInt32(-128) >= toInt64(127) , toInt64(127) = toInt64(-128), toInt64(127) != toInt64(-128), toInt64(127) < toInt64(-128), toInt64(127) <= toInt64(-128), toInt64(127) > toInt64(-128), toInt64(127) >= toInt64(-128), toInt64(-128) = toInt64(127), toInt64(-128) != toInt64(127), toInt64(-128) < toInt64(127), toInt64(-128) <= toInt64(127), toInt64(-128) > toInt64(127), toInt64(-128) >= toInt64(127) 
DROP DATABASE IF EXISTS test_42gh7d9q 
GRANT SELECT ON sqllt.table TO sqllt_user;
CREATE TABLE test_2C7A4833614F4A75354C7076552D645E5028303554502F2E7265354F333B6B65476A29382B733C4B(x UInt8) Engine=Memory;
CREATE TABLE test_4B7772214228664264646C6F39664B2979204E737A765556503C2E6B5524744D495C5C5951514E6B(x UInt8) Engine=Memory;
SELECT arrayLastOrNull(NULL, NULL, NULL);
drop table tab1;
select addNanoseconds(toDateTime64('2220-12-12 12:12:12.123456789', 9), 1);
SELECT * FROM remote('127.0.0.{1,2}', generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8)))))))))', 1, 1, 1)) LIMIT 1 FORMAT Null
SELECT 'Running test stateless/02162_range_hashed_dictionary_ddl_expression.sql from pid=1713' 
INSERT INTO test SELECT 1, 'test';
SELECT 'type;toMonday;toDateTime64;false', toTypeName(toMonday(toDateTime64('1920-02-02 10:20:30', 3))) SETTINGS enable_extended_results_for_datetime_functions = false;
CREATE INDEX idx_tab2_5 ON tab2 (col3 DESC);
CREATE DATABASE IF NOT EXISTS test_0tsggaae 
select 'arrayPushFront(arr1, 1)';
CREATE DATABASE IF NOT EXISTS test_b833w4o8 
SELECT k1, k3, sum(value) v FROM in_order_agg_partial_01710 GROUP BY k1, k3 ORDER BY k1, k3 SETTINGS optimize_aggregation_in_order=1
SELECT * FROM (SELECT toLowCardinality(toNullable(number)) AS l FROM system.numbers LIMIT 3) s1 ANY LEFT JOIN (SELECT toLowCardinality(number) AS r FROM system.numbers LIMIT 3) s2 ON l + 1 = r * 1 ORDER BY l;
SELECT flatten(NULL);
CREATE TABLE test_77633C3425727D63747226492572755F66255F293F2343406E2B71384E283F65453C24632846685A(x UInt8) Engine=Memory;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (14 < 83 AND 47 > 0 ? 14 : 0)), throwIf(last != (14 < 83 AND 47 > 0 ? least(83 - 1, 14 + 47 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(83) LIMIT 14, 47);
INSERT INTO test_01193_18429.table_7_922 VALUES 
SELECT 'Pacific/Kiritimati', toDateTime('2020-01-02 03:04:05', 'Pacific/Kiritimati') AS x, toStartOfDay(x), toHour(x);
CREATE DATABASE IF NOT EXISTS test_h24pqi3d 
CREATE TABLE test_7B61592C565E61676A2A7A4D282B21772F3078427C2622722477746F405A7542235E204025746A4F(x UInt8) Engine=Memory;
INSERT INTO data_01285 SELECT 1, number FROM numbers(4);
CREATE DATABASE IF NOT EXISTS test_nxmtl3gm 
CREATE TABLE test_01193_18429.table_4_758 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_3eb2h3zx_repl_01111_11.rmt_24908_17412_10489 (`n` int) ENGINE = ReplicatedMergeTree ORDER BY tuple() SETTINGS index_granularity = 58, min_bytes_for_wide_part = 567622834, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 62, merge_max_block_size = 18093, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 25267953, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 68778, primary_key_compress_block_size = 19490
INSERT INTO test_01193_18429.table_2_276 VALUES 
CREATE TABLE summing_mt_aggregating_column (`Key` UInt64, `Value` UInt64, `ConcatArraySimple` SimpleAggregateFunction(groupArrayArray, Array(UInt64)), `ConcatArrayComplex` AggregateFunction(groupArrayArray, Array(UInt64))) ENGINE = SummingMergeTree ORDER BY Key SETTINGS index_granularity = 33223, min_bytes_for_wide_part = 106486040, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 7507, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 9569396028, index_granularity_bytes = 6379514, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 66458, primary_key_compress_block_size = 50195
CREATE TABLE source_table ( date Date, datetime DateTime, zoneId UInt64, test1 ALIAS zoneId == 1, test2 DEFAULT zoneId * 3, test3 MATERIALIZED zoneId * 5 ) ENGINE = MergeTree(date, (date, zoneId), 8192);
SELECT '--- empty';
CREATE TABLE test_01193_18429.table_1_52 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE INDEX idx_tab2_4 ON tab2 (col1 DESC,col4 DESC);
SELECT x FROM (SELECT toNullable(1) AS x) WHERE x;
SELECT 17,toFixedString('Hello', 10), bin(bitShiftLeft(toFixedString('Hello', 10), 17));
SELECT * FROM pk WHERE y = 33;
alter table many_mutations delete where y = 425 * 2 settings mutations_sync = 0;
SELECT ignore([NULL]);
SELECT 'wordShingleMinHashUTF8';
INSERT INTO r9 SELECT 14
SELECT CASE WHEN (number % 2) = 0 THEN toInt32(1) WHEN (number % 3) = 0 THEN toInt32(2) ELSE toUInt8(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_2E4339677A64305551585F5745483E5C73385E61622F5723536F3C2E6F74747E724B4951494C636A(x UInt8) Engine=Memory;
INSERT INTO src VALUES /* (-52, 2) */ 
SELECT multiIf((number % 2) = 0, [toInt16(1), toInt16(2)], (number % 3) = 0, [toUInt8(2), toUInt8(3)], [toInt64(3), toInt64(3)]) FROM system.numbers LIMIT 10;
SELECT sleep(3) 
CREATE TABLE test_01193_18429.table_10_936 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_8_669 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'SELECT N != DT';
CREATE DICTIONARY d (id UInt32, country_id UInt8, name String) PRIMARY KEY id SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' DB 'db_01391' table 'd_src')) LIFETIME(MIN 1 MAX 1) LAYOUT(HASHED());
select 1 = positionCaseInsensitive(materialize('abc'), '');
select hex(sipHash64Keyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39)));
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (30 < 92 AND 84 > 0 ? 30 : 0)), throwIf(last != (30 < 92 AND 84 > 0 ? least(92 - 1, 30 + 84 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(92) LIMIT 30, 84);
SELECT * FROM test_02099 FORMAT TabSeparatedRawWithNamesAndTypes
SELECT has([111, 222], NULL);
DROP TABLE tabl_1;
DELETE FROM 02707_keepermap_delete_update WHERE value LIKE 'Some%string';
SHOW CREATE TABLE alter_table
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toFloat32(2), toFloat32(3)] ELSE [toFloat32(3), toFloat32(3)] END FROM system.numbers LIMIT 10;
create MATERIALIZED view view_foo_bar ENGINE = ReplacingMergeTree(ddate, (bar_id), 8192) as select ddate, bar_id, bar_n, foo_id, foo_n from (select ddate, id as bar_id, n as bar_n, foo_id from bar) js1 any left join (select id as foo_id, n as foo_n from foo) js2 using foo_id;
SELECT * FROM FORMAT FORMAT Values;
CREATE TABLE test_01193_18429.table_7_949 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select format('Hello {1} World {1}', materialize('first'), materialize('second')) from system.numbers limit 3;
DROP DATABASE IF EXISTS test_q4flf4s5 
CREATE TABLE test_41736D5F3F263B3D667054345A536E4C6C2E743A285A63706957262E68215E474050752D65242D2D(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02521_lightweight_delete_and_ttl.sql from pid=1724' 
set force_primary_key = 0;
INSERT INTO r6 SELECT 63
INSERT INTO array_of_tuples values 
SELECT MaX(aggr) FROM ( SELECT mAX(-1) AS aggr FROM system.one WHERE NOT 1 UNION ALL SELECT max(-1) AS aggr FROM system.one WHERE not 1 );
SELECT CASE WHEN (number % 2) = 0 THEN toInt64(1) WHEN (number % 3) = 0 THEN toInt16(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
CREATE TABLE dict_data (key UInt64, val UInt64) Engine=Memory();
INSERT INTO test_01193_18429.table_3_967 VALUES 
CREATE TABLE test_42gh7d9q_db.tab_mt (`x` UInt32) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 35408, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 9000, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 12, min_merge_bytes_to_use_direct_io = 10639622501, index_granularity_bytes = 9648462, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 64645, primary_key_compress_block_size = 51012
INSERT INTO test_01193_18429.table_9_109 VALUES 
SELECT m FROM table_map_with_key_integer;
SELECT count() FROM dest_a;
SELECT 'SLEEP #2 TEST', sleep(0.001) FROM numbers(2) FORMAT Null;
CREATE TABLE test_4673374F2A457467522C53313B4A3C7D7E4853616B204D4C6F4D4A747B374A365D3932556B704D40(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_2_791 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_8_343 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT count(*) FROM test_block_mismatch_sk1 FINAL;
CREATE TABLE ttl_with_default (`d` DateTime, `a` Int DEFAULT 777 TTL d + toIntervalSecond(5)) ENGINE = MergeTree ORDER BY d SETTINGS index_granularity = 10546, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.48520463705062866, replace_long_file_name_to_hash = true, max_file_name_length = 46, merge_max_block_size = 4582, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 22977009, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 43750, primary_key_compress_block_size = 25215
SELECT CASE WHEN (number % 2) = 0 THEN toFloat64(1) WHEN (number % 3) = 0 THEN toUInt16(2) ELSE toFloat64(3) END FROM system.numbers LIMIT 10;
create table 02900_destination (k Int8, v String) engine Memory
SELECT count() FROM input_function_table_6 FORMAT CSV
INSERT INTO test_01193_18429.table_3_611 VALUES 
SELECT VAR_SAMP(NULL, NULL);
SELECT sum(`number`) OVER w AS `x`, max(`number`) OVER w AS `y` FROM `test_9l2822ul`.`t_01568` WINDOW w AS (PARTITION BY `p`) ORDER BY `x` ASC, `y` ASC
SELECT cutIPv6(IPv6StringToNum('2001:0DB8:AC10:FE01:FEED:BABE:CAFE:F00D'), 12, 0);
INSERT INTO test_01193_18429.table_5_699 VALUES 
INSERT INTO test_01193_18429.table_9_625 VALUES 
EXPLAIN QUERY TREE run_passes=1 SELECT value1 FROM date_t WHERE toYear(date1) > 1993 AND id BETWEEN 1 AND 3 SETTINGS allow_experimental_analyzer=1;
INSERT INTO dst_2 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 52
SELECT * FROM log;
INSERT INTO r9 SELECT 80 % 10 = 9 ? 80 - 1 : 80
CREATE TABLE test_01193_18429.table_1_736 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_2663486B4478216E4A64576A642071214F5B4257644541272F512C5B2E4A426A614A286D3A577776(x UInt8) Engine=Memory;
SELECT 'Hello & world' AS s, 'Hello\n<World>', toDateTime('2001-02-03 04:05:06') AS time, arrayMap(x -> toString(x), range(10)) AS arr, (s, time) AS tpl SETTINGS extremes = 1 FORMAT XML;
CREATE TABLE join_test (id UInt16, num Nullable(UInt16)) engine = Join(ANY, LEFT, id);
INSERT INTO test_01193_18429.table_9_652 VALUES 
SELECT 'Running test stateless/02030_capnp_format.sh from pid=1705' 
DROP TABLE dst_3
SELECT toDate('2020-12-12') as datetime, 'test-pipeline' as pipeline, 'clickhouse-test-host-001.clickhouse.com' as host, 'clickhouse' as home, 'clickhouse' as detail, number as row_number FROM numbers(1000000) SETTINGS max_block_size=65505 FORMAT JSON
select 5 as offset, 'Hello' as s, subString(bin(s), offset), bin(bitSlice(s, offset));
SELECT count() FROM lc_nullable WHERE has(i64, 100);
select 3, system.parts.name, txn_counters.creation_tid = system.parts.creation_tid from txn_counters join system.parts on txn_counters._part = system.parts.name where database=currentDatabase() and table='txn_counters' order by system.parts.name;
CREATE DATABASE IF NOT EXISTS test_uxj1icyd 
INSERT INTO r7 SELECT 56
select a['key1'], a['key2'] from table_map;
SELECT DISTINCT emptyArrayString() AS k FROM (SELECT * FROM system.numbers LIMIT 100000);
CREATE DATABASE IF NOT EXISTS test_tffxt3f1 
SELECT concatWithSeparator('');
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (64 < 36 AND 71 > 0 ? 64 : 0)), throwIf(last != (64 < 36 AND 71 > 0 ? least(36 - 1, 64 + 71 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(36) LIMIT 64, 71);
CREATE TABLE test_01193_18429.table_9_353 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT '---Explain Syntax---';
desc format(JSONEachRow, '{"x" : "2020-01-01"}, {"x" : "1000"}') 
CREATE DATABASE IF NOT EXISTS test_66p06lxv 
SELECT regionToContinent(NULL);
select IPv4NumToString(materialize(toUInt32(0))) == materialize('0.0.0.0');
drop table if exists summing_merge_tree_aggregate_function;
SELECT toFixedString(a, 16) AS a, toFixedString('aaaaaaaaaaaaaaaa', 16) AS b1, toFixedString('aaaaaaaaaaaaaaab', 16) AS b2, toFixedString('aaaaaaaaaaaaaaac', 16) AS b3, toFixedString('baaaaaaaaaaaaaaa', 16) AS b4, toFixedString('baaaaaaaaaaaaaab', 16) AS b5, toFixedString('baaaaaaaaaaaaaac', 16) AS b6, toFixedString('aaaaaaaabaaaaaaa', 16) AS b7, toFixedString('aaaaaaabaaaaaaaa', 16) AS b8, toFixedString('aaaaaaacaaaaaaaa', 16) AS b9, a = b1, a != b1, a < b1, a > b1, a <= b1, a >= b1, a = b2, a != b2, a < b2, a > b2, a <= b2, a >= b2, a = b3, a != b3, a < b3, a > b3, a <= b3, a >= b3, a = b4, a != b4, a < b4, a > b4, a <= b4, a >= b4, a = b5, a != b5, a < b5, a > b5, a <= b5, a >= b5, a = b6, a != b6, a < b6, a > b6, a <= b6, a >= b6, a = b7, a != b7, a < b7, a > b7, a <= b7, a >= b7, a = b8, a != b8, a < b8, a > b8, a <= b8, a >= b8, a = b9, a != b9, a < b9, a > b9, a <= b9, a >= b9 FROM ( SELECT 'aaaaaaaaaaaaaaaa' AS a UNION ALL SELECT 'aaaaaaaaaaaaaaab' UNION ALL SELECT 'aaaaaaaaaaaaaaac' UNION ALL SELECT 'baaaaaaaaaaaaaaa' UNION ALL SELECT 'baaaaaaaaaaaaaab' UNION ALL SELECT 'baaaaaaaaaaaaaac' UNION ALL SELECT 'aaaaaaaabaaaaaaa' UNION ALL SELECT 'aaaaaaabaaaaaaaa' UNION ALL SELECT 'aaaaaaacaaaaaaaa' ) ORDER BY a;
CREATE DATABASE IF NOT EXISTS test_bjptucwp 
WITH cte_test_table_for_in AS (SELECT id FROM test_table_for_in) SELECT id, value FROM test_table WHERE id IN (SELECT id FROM cte_test_table_for_in UNION DISTINCT SELECT id FROM cte_test_table_for_in);
DROP TABLE IF EXISTS xMM;
INSERT INTO test_01193_18429.table_6_813 VALUES 
SELECT divideDecimal(toDecimal32(123.123, 3), toDecimal128(11.4, 1), 2);
select * from table_1 order by x settings additional_table_filters={'table_1' : 'length(y) < 3'};
CREATE TABLE ttl_02265 (`date` Date, `key` Int, `value` String TTL date + toIntervalMonth(1)) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/ttl_02265', 'r1') PARTITION BY date ORDER BY key SETTINGS min_bytes_for_wide_part = 0, index_granularity = 16892, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 7075, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 27257447, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 74515, primary_key_compress_block_size = 63969
SELECT '2';
SELECT * FROM bf_tokenbf_lowcard_test WHERE like(lc_fixed, '%CD5%') SETTINGS force_data_skipping_indices='lc_fixed_bf_tokenbf';
alter table many_mutations delete where y = 975 * 2 settings mutations_sync = 0;
DROP DATABASE IF EXISTS test_06bzaw9e 
CREATE TABLE test_4C5944226F6C5E61426F5D322F232A5C3D79432D41226B7126457C656755786265552D325021332A(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_7_236 VALUES 
SET param_old_dict_name = 02661_d;
SELECT count() FROM (SELECT count() FROM numbers(10));
SELECT a + 1, x + 1, toTypeName(a), toTypeName(x) FROM (SELECT 1 as x) as t1 LEFT JOIN ( SELECT sum(number) as a from numbers(3) GROUP BY NULL) AS t2 ON TRUE SETTINGS allow_experimental_analyzer=1, join_use_nulls=1;
CREATE TABLE test_01193_18429.table_5_607 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_484853742B5C763C30734C5C633D7E656947225C527C574352255D642931574F337D79606F2D5F6E(x UInt8) Engine=Memory;
ALTER TABLE table_01 DETACH PARTITION ALL;
alter table many_mutations delete where y = 998 * 2 settings mutations_sync = 0;
INSERT INTO test_01193_18429.table_5_42 VALUES 
SELECT replaceRegexpAll(materialize('aa'), 'z*', '') == 'aa';
SELECT any(number) RESPECT NULLS from numbers(0) SETTINGS aggregate_functions_null_for_empty = 1;
INSERT INTO bloom_filter_null_array SELECT [number] FROM numbers(10000000);
CREATE DATABASE IF NOT EXISTS test_lyjzslqb 
SELECT '#02136_scalar_subquery_4', (SELECT max(number) FROM numbers(1000)) as n FROM system.numbers LIMIT 2;
CREATE TABLE test_4A7C767A4639635B3478515C2B2B436D76722831292A402F6D503A20263B69215F71383A512F6620(x UInt8) Engine=Memory;
select count(), * from dist_01247 group by number limit 1 offset 1;
CREATE DATABASE IF NOT EXISTS test_0vrl6lvz 
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 33224, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT arrayReverseSort(NULL);
CREATE DATABASE IF NOT EXISTS test_zcy47y70 
INSERT INTO test_01193_18429.table_2_466 VALUES 
CREATE TABLE test_5D2C2B446B395D3A322369292148733E6775214C3E5F795A435A535F2B432929757139632777612C(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02455_duplicate_column_names_in_schema_inference.sql from pid=1718' 
CREATE TABLE merge_00160 (d Date, x UInt64) ENGINE = Merge(currentDatabase(), '^mt_00160$');
DROP DATABASE IF EXISTS test_ihyzew7j 
DROP TABLE IF EXISTS 02810_async_insert_dedup_collapsing
SELECT dummy FROM one l JOIN one r ON dummy = r.dummy;
SELECT x, t.name FROM (SELECT name, database AS x FROM system.tables) AS t JOIN (SELECT name AS x FROM system.databases) AS db USING x WHERE x = 'system' AND t.name = 'one' SETTINGS join_default_strictness = 'ALL' FORMAT PrettyCompactNoEscapes;
INSERT INTO test_01193_18429.table_9_732 VALUES 
INSERT INTO test_01193_18429.table_7_749 VALUES 
SELECT * FROM (SELECT id, event_date, priority, description FROM remote('127.0.0.{2|3}', currentDatabase(), report)) ORDER BY id ASC;
INSERT INTO bloom_filter_null_array VALUES 
select IPv4StringToNum(CAST(NULL, 'Nullable(String)'));
CREATE TABLE test_01193_18429.table_9_458 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT d1, f2, d1 / f2 FROM t ORDER BY f2;
SELECT '(backward, first_match, 1, B->C)', id, sequenceNextNode('backward', 'first_match')(dt, action, referrer = '2', action = 'B', action = 'A') AS next_node FROM test_base_condition GROUP BY id ORDER BY id;
select a.1-1,a.1+1 FROM (SELECT (1, 2) AS a);
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toUInt32(2), toUInt32(3)] ELSE [toInt64(3), toInt64(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_10_67 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
WITH map(1, 'Test') AS value, 'Array(Tuple(UInt64, String))' AS type SELECT value, cast(value, type), cast(materialize(value), type);
SELECT throwIf((SELECT sum(nm) FROM mv) != 75) FORMAT Null;
SELECT * FROM parallel_replicas_final FINAL FORMAT Null;
SELECT CASE WHEN (number % 2) = 0 THEN toInt16(1) WHEN (number % 3) = 0 THEN toInt32(2) ELSE toFloat32(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_723460227944236A5B2C4B415D267359392F4F707E435B3B47353850756373503930777C23443E32(x UInt8) Engine=Memory;
EXPLAIN SYNTAX SELECT sum(n + 1), sum(1 + n), sum(n - 1), sum(1 - n) FROM (SELECT number n FROM numbers(10));
SYSTEM SYNC REPLICA alter_table_1 STRICT
INSERT INTO test_01193_18429.table_3_370 VALUES 
SELECT range(1), arrayMap(x -> arrayMap(x -> x, range(x)), [1]) SETTINGS allow_experimental_analyzer = 0;
INSERT INTO test_01193_18429.table_9_807 VALUES 
SELECT toInt256(NULL, NULL);
CREATE DATABASE IF NOT EXISTS test_f5uit47o 
insert into tbl_8parts_5granules_rnd select number, 1 from numbers_mt(327680);
SELECT CASE WHEN (number % 2) = 0 THEN [toInt16(1), toInt16(2)] WHEN (number % 3) = 0 THEN [toInt8(2), toInt8(3)] ELSE [toInt32(3), toInt32(3)] END FROM system.numbers LIMIT 10;
SELECT number FROM numbers(30) LIMIT 1;
CREATE OR REPLACE VIEW t (number UInt64) AS SELECT number FROM system.numbers;
CREATE TABLE test_69785F2B5F5676707528687433743D274D7024217D3E375C38454E447E3F417971702F53786A4239(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01802_test_postgresql_protocol_with_row_policy.sh from pid=1705' 
select position(materialize('ÃÂ°ÃÂ±ÃÂ²') as h, lower('' as n)) = positionCaseInsensitive(h, n) from system.numbers limit 10;
CREATE TABLE test_b ( OldColumn String DEFAULT '', NewColumn String DEFAULT '', EventDate Date DEFAULT toDate(EventTime), EventTime DateTime ) ENGINE = MergeTree(EventDate, EventTime, 8192);
SELECT hex(maxIntersectionsState(*)) FROM VALUES((1, 3), (3, 5));
CREATE TABLE m (`v` Enum8('a' = 1, 'b' = 2)) ENGINE = MergeTree PARTITION BY tuple() ORDER BY v SETTINGS index_granularity = 10005, min_bytes_for_wide_part = 99520009, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 7530, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 965959, vertical_merge_algorithm_min_columns_to_activate = 15, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 1344910, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 56212, primary_key_compress_block_size = 99625
SELECT 'SELECT toInt8(-1) + N';
CREATE TABLE test_01193_18429.table_5_735 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO wikistat1 SELECT toDateTime('2020-10-01 00:00:00'), 'hello', 'world', '/data/path', 10 from numbers(100);
select v, variantElement(v, 'UInt32') from format(CSV, 'v Variant(String, UInt32, Int64)', '\\N\n"string"\n-1\n0\n10000000000\n42d42') format CSV;
ALTER TABLE t UPDATE value = 0 WHERE (value > 0) AND (created_at >= '2021-12-21') SETTINGS optimize_use_projections = 1;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (21 < 21 AND 54 > 0 ? 21 : 0)), throwIf(last != (21 < 21 AND 54 > 0 ? least(21 - 1, 21 + 54 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(21) LIMIT 21, 54);
DROP DATABASE IF EXISTS test_myo6i8dt 
CREATE TABLE test_3E2E3C75596B243C715F226A3B4B2C3A7232637C532A375C2772703C372174484D3D4D5D66513A54(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS hits_layer;
SELECT CASE WHEN 1 THEN [col2, 'bar'] WHEN (col1 % 3) = 0 THEN [col4, col5] ELSE ['foo', col7] END FROM multi_if_check;
DROP DATABASE IF EXISTS test_hdfs_1;
INSERT INTO test_01193_18429.table_10_58 VALUES 
SELECT and(b, b), or(b, b), xor(b, b) FROM test_table_nullable;
DROP TABLE line_changes;
CREATE TABLE test_65617C6E4E7C695F332A776E4B6D64232A6952434D42746933262E215C7C573E6431267A242B2A61(x UInt8) Engine=Memory;
SELECT * FROM numbers_mt(500000) SETTINGS max_threads = 4
DROP TABLE replicated_collapsing;
SELECT toDayOfWeek(toDateTime(1412106600), 0, 'Pacific/Pitcairn');
select number from system.numbers limit 0;
CREATE TABLE test_79446E372F6B27246B5246575A7931445A3A484461612A77233F4228742577284A7E30785E49725A(x UInt8) Engine=Memory;
CREATE TABLE test_56485328523D496543525D543E442D614F71546C495774385F27436A402425466C567A6672406325(x UInt8) Engine=Memory;
DESCRIBE (SELECT * APPLY x -> toString(x) FROM test_table);
INSERT INTO test_01193_18429.table_5_810 VALUES 
CREATE TABLE test_01193_18429.table_9_11 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DATABASE IF NOT EXISTS test_etins0is 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), DT <= N as r FORMAT CSV;
select transform('a', ['a', 'b'], [toDateTime64(1, 3, 'UTC'), toDateTime64(2, 3, 'UTC')], toDateTime64(0, 3, 'UTC'));
SELECT count() FROM t_01411_num WHERE arr[1] = 42;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (45 < 9 AND 43 > 0 ? 45 : 0)), throwIf(last != (45 < 9 AND 43 > 0 ? least(9 - 1, 45 + 43 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(9) LIMIT 45, 43);
CREATE TABLE test_364F605046215A4A476F63507B5D286656475B73276351506823676F2A282B647B5A5E4F53726447(x UInt8) Engine=Memory;
SELECT CASE WHEN (col1 % 2) = 0 THEN [col2, 'bar'] WHEN 1 THEN ['foo', col5] ELSE ['foo', 'bar'] END FROM multi_if_check;
CREATE TABLE test_01193_18429.table_2_662 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/00602_throw_if.sh from pid=1714' 
CREATE TABLE test_3B782C32342D363459403C222338417947373960316B4C22417B535C653E5F5C5E49337D4C2D7638(x UInt8) Engine=Memory;
RESTORE TABLE test FROM File('test.zip');
DROP TABLE dt64test;
select '--------';
SELECT 'Running test stateless/00940_order_by_read_in_order.sql from pid=1724' 
SELECT dictGetUInt64('db_01268.dict2', 'parent_region', toUInt64(3));
CREATE TABLE test_36775D61234C52377134402534263172325B377A50476C473A5C414C2B267D20497A6F633342403E(x UInt8) Engine=Memory;
CREATE TABLE t (`x` UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 56772, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.7789211869239807, replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 10438, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 68, min_merge_bytes_to_use_direct_io = 1057156198, index_granularity_bytes = 29302538, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 67661, primary_key_compress_block_size = 85716 COMMENT 'Hello'
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 12919, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE TABLE with_nullable ( timestamp UInt32, country LowCardinality(Nullable(String)) ) ENGINE = Memory;
CREATE TABLE test_6C6B684A734264276C3324412F5F507D323542507168303F66574F5F283322362041432131644D54(x UInt8) Engine=Memory;
select a, x from (select distinct a, 1 as x from distinct_in_order order by x) order by a;
SELECT arraySplit(x -> x % 2 = 1, [1, 2, 3, 4, 5]);
DESC TABLE view(SELECT 1 AS `null`)
INSERT INTO test_01193_18429.table_2_288 VALUES 
CREATE TABLE test_01193_18429.table_9_754 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT t1.id AS t1_id, t1.value, t2.id AS t2_id, t2.value FROM test_table_join_1 AS t1 LEFT JOIN test_table_join_2 AS t2 ON t1_id = t2_id;
SELECT multiIf((number % 2) = 0, toUInt8(1), (number % 3) = 0, toUInt32(2), toFloat32(3)) FROM system.numbers LIMIT 10;
ALTER TABLE sticking_mutations DELETE WHERE value2 % 32 == 0, DROP COLUMN value1
SELECT key, a FROM test ORDER BY key, a, exp(key + a);
drop table if exists user_agents;
SELECT h3NumHexagons(arrayJoin([1,2,3]));
DROP TABLE IF EXISTS echo_test_0
CREATE TABLE test_687478263A203E475D7058717E23364C3622472C2B5A41677078395E3647244E2B7E6731642C6D3D(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01602_show_create_view.sql from pid=1705' 
CREATE DATABASE IF NOT EXISTS test_flvgmwru 
INSERT INTO test_01193_18429.table_4_763 VALUES 
CREATE TABLE test_02908_r2_297 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_297', 'r2') ORDER BY tuple()
alter table data_01900_1 update s = 'foo_60' where 1;
SHOW CREATE merge;
CREATE DATABASE IF NOT EXISTS test_m6v3xovj 
alter table many_mutations delete where y = 563 * 2 settings mutations_sync = 0;
INSERT INTO test_01193_18429.table_1_850 VALUES 
CREATE TABLE test_01193_18429.table_8_772 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT count() FROM 01280_db.keys_table WHERE dictHas('01280_db.ssd_dict', (k1, k2));
CREATE TABLE test_01193_18429.table_4_691 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP TABLE IF EXISTS t_create_as_tuple;
CREATE MATERIALIZED VIEW mv_2_1 TO ds_2_1 as SELECT '2_1' l, t, v FROM ds_1_1;
CREATE DATABASE IF NOT EXISTS test_uy1ankq9 
CREATE MATERIALIZED VIEW IF NOT EXISTS db_test_piw8e8fv.test_mv_a ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_02124/{table}', '1') ORDER BY tuple() SETTINGS index_granularity = 3509, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.4395258128643036, replace_long_file_name_to_hash = true, max_file_name_length = 32, merge_max_block_size = 5309, prefer_fetch_merged_part_size_threshold = 9468582750, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 939070401, index_granularity_bytes = 13136160, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 28054, primary_key_compress_block_size = 69991 AS SELECT test, A, count() AS c FROM db_test_piw8e8fv.test GROUP BY test, A
DROP TABLE series__fuzz_35;
CREATE TABLE test_77762C7C6C422F25535E4D34775C574F6B3339407A4B77334772404E3935746B2F6C3F625A7C5E58(x UInt8) Engine=Memory;
INSERT INTO 02165_out_tb Values
SELECT multiIf((number % 2) = 0, [toFloat64(1), toFloat64(2)], (number % 3) = 0, [toUInt16(2), toUInt16(3)], [toUInt32(3), toUInt32(3)]) FROM system.numbers LIMIT 10;
SELECT '-- Original issue with deduplicate_blocks_in_dependent_materialized_views = 1 AND max_insert_delayed_streams_for_parallel_write > 1';
SELECT argMinIf(number, now() + number, number % 10 < 20) FROM (Select number as number from numbers(10, 10000)) settings max_threads=1, max_block_size=20000;
SELECT multiIf(1, toFixedString(col2, 16), 1, 'bar', col4) FROM multi_if_check;
SELECT 'type;toStartOfMonth;toDate32;false', toTypeName(toStartOfMonth(toDate32('1920-02-02'))) SETTINGS enable_extended_results_for_datetime_functions = false;
INSERT INTO test_02908_r1_11 SELECT rand64() FROM numbers(5);
INSERT INTO r9 SELECT 26
select subtractNanoseconds(toDateTime64('2023-01-01 00:00:00.0000000', 7, 'UTC'), -1);
SELECT toInt16OrDefault(-1);
INSERT INTO r6 SELECT 69
INSERT INTO test_01193_18429.table_8_752 VALUES 
SELECT * FROM m WHERE a = 'OK' SETTINGS optimize_move_to_prewhere=0;
SELECT b, count() FROM tt_m GROUP BY b order by b;
SELECT 'Running test stateless/02917_transform_tsan.sql from pid=1726' 
SELECT 'test_jit_nonnull';
SELECT 'Running test stateless/00280_hex_escape_sequence.sql from pid=1720' 
select concat('a', materialize('b'), materialize('c')) == 'abc' from system.numbers limit 5;
CREATE TABLE test_40235B37664958502F7A6544647A61524846792922344C457D50524366522251625244402A376F2D(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_8_424 VALUES 
CREATE TABLE j (`id1` Int8, `id2` Int8, PROJECTION p (SELECT id1, id2 ORDER BY id2)) ENGINE = MergeTree ORDER BY id1 SETTINGS index_granularity = 1, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 22701, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 618923, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 22174, primary_key_compress_block_size = 20365
CREATE TABLE test_01193_18429.table_3_758 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_5_623 VALUES 
DROP TABLE mv_target;
CREATE TABLE test_2622205D49596938523248546257636836237D76507C7A4333216B334E603E2366556A6D43787829(x UInt8) Engine=Memory;
select dictGetAll('regexp_dict3', ('tag', 'topological_index', 'captured', 'parent'), 'github.com/clickhouse/tree/master/docs', 2);
INSERT INTO test_01193_18429.table_8_818 VALUES 
SELECT 'Running test stateless/01312_skip_empty_params.sh from pid=1713' 
DROP DATABASE IF EXISTS test_sa7j6wzz 
DROP TABLE IF EXISTS bad_codec;
CREATE DATABASE IF NOT EXISTS test_ifsvvuqu 
SELECT 'Running test stateless/02480_parse_date_time_best_effort_math_overflow.sql from pid=1726' 
SELECT 'local_1', toUInt8(1) AS dummy FROM system.one AS o WHERE o.dummy = 1;
INSERT INTO test_01193_18429.table_5_956 VALUES 
SELECT isValidJSON('not a json');
INSERT INTO test_02908_r1_4 SELECT rand64() FROM numbers(5);
CREATE DATABASE IF NOT EXISTS test_e64i6e3y 
DETACH TABLE 01686_test SYNC;
SELECT b.value FROM (SELECT toInt8(1) AS id) ANY LEFT JOIN test_00597 AS b USING id WHERE value = 1;
SELECT filesystemAvailable();
CREATE TABLE test_sort_proj (`x` UInt32, `y` UInt32, PROJECTION p (SELECT x, y ORDER BY y)) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 15828, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 52395, primary_key_compress_block_size = 88505
desc format(Values, '({\'date1\' : \'2020-01-01 00:00:00\', \'date2\' : \'2020-01-01\'})');
CREATE TABLE test_02908_r1_83 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_83', 'r1') ORDER BY tuple()
CREATE TABLE test_01193_18429.table_2_827 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT dictGetString('01280_db.ssd_dict', 'c', tuple('2', toInt32(-1)));
SELECT * FROM bf_ngram_lowcard_test WHERE like(lc, 'K1') SETTINGS force_data_skipping_indices='lc_ngram';
CREATE DATABASE IF NOT EXISTS test_xy5gqx00 
ALTER TABLE concurrent_alter_column ADD COLUMN c83 DOUBLE;
CREATE TABLE test_01193_18429.table_7_683 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TEMPORARY TABLE constrained (x UInt8, CONSTRAINT bogus CHECK 0);
EXPLAIN PIPELINE SELECT a, b, c, d FROM t_fixed_prefix WHERE a = 1 AND b = 1 ORDER BY a, b, c, d SETTINGS optimize_read_in_order = 1
DROP QUOTA IF EXISTS quota_by_ip_test_ljhmihp3;
select arrayShiftLeft(CAST('[1, 2, 3, 4, 5, 6]', 'Array(UInt16)'), 1, 1000);
CREATE TABLE test_3640364F23536F5B3E4559215567285B25524548427D444853444B617E7B612E7A5B6B5F53463D56(x UInt8) Engine=Memory;
CREATE TABLE shard_0.from_0 (`x` UInt32) ENGINE = ReplicatedMergeTree(concat('/clickhouse/tables/from_0_', currentDatabase()), '0') ORDER BY x SETTINGS old_parts_lifetime = 1, max_cleanup_delay_period = 1, cleanup_delay_period = 1, index_granularity = 55138, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 119, merge_max_block_size = 7311, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 9234099017, index_granularity_bytes = 3630046, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 28067, primary_key_compress_block_size = 22551
SELECT quantilesTimingWeighted(0, 0.001, 0.01, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 0.99, 0.999, 1)(number, number) FROM remote('127.0.0.{2,3}', currentDatabase(), numbers_1001);
TRUNCATE TABLE test_02101
SELECT x FROM c UNION ALL SELECT x FROM d;
CREATE TABLE test_01193_18429.table_10_270 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_4_810 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT runningDifference(CAST(NULL AS Nullable(Float32)));
SELECT s, replaceAll(s, '_', 'o') AS a, replaceRegexpAll(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['_._', '_.']) AS s);
CREATE TABLE test_4D7B78623848464D64254B3344323F7C6E6542416E396C255D365A326B5677234862766C7D466153(x UInt8) Engine=Memory;
select 324 from test54378 where date in (toDate('2018-04-19'));
SELECT multiIf((col1 % 2) = 0, toFixedString('foo', 16), (col1 % 3) = 0, col3, toFixedString(col4, 16)) FROM multi_if_check;
SELECT '====== remove column TTL ======';
SELECT CAST(materialize(CAST(1, 'Nullable(Enum(\'A\' = 1, \'B\' = 2))')), 'Nullable(String)');
SELECT id FROM (SELECT * FROM test_table UNION ALL SELECT * FROM test_table);
INSERT INTO 02184_range_dictionary_source_table VALUES 
SELECT c, d FROM t_fixed_prefix WHERE a = 1 ORDER BY c, d SETTINGS optimize_read_in_order = 1
DROP TABLE IF EXISTS Mapping;
CREATE TABLE test_01192.rmt AS test_01192_renamed.mt ENGINE=ReplicatedMergeTree('/test/01192_rename_database_zookeeper_test_mpv982bm/', '1') ORDER BY n
SELECT hex(sipHash128(tuple(*))) FROM sipHashKeyed_test;
SELECT 'processed' AS type, max(number) AS max_date, min(number) AS min_date FROM numbers(100) GROUP BY type;
CREATE TABLE test_30362C24703C656F46617575674561625B60406352744A35312F36212467733D6B43594E5A7B4046(x UInt8) Engine=Memory;
SELECT 1, -127, 1 = -127, 1 != -127, 1 < -127, 1 <= -127, 1 > -127, 1 >= -127, -127 = 1, -127 != 1, -127 < 1, -127 <= 1, -127 > 1, -127 >= 1 , toUInt8(1) = toInt8(-127), toUInt8(1) != toInt8(-127), toUInt8(1) < toInt8(-127), toUInt8(1) <= toInt8(-127), toUInt8(1) > toInt8(-127), toUInt8(1) >= toInt8(-127), toInt8(-127) = toUInt8(1), toInt8(-127) != toUInt8(1), toInt8(-127) < toUInt8(1), toInt8(-127) <= toUInt8(1), toInt8(-127) > toUInt8(1), toInt8(-127) >= toUInt8(1) , toUInt8(1) = toInt16(-127), toUInt8(1) != toInt16(-127), toUInt8(1) < toInt16(-127), toUInt8(1) <= toInt16(-127), toUInt8(1) > toInt16(-127), toUInt8(1) >= toInt16(-127), toInt16(-127) = toUInt8(1), toInt16(-127) != toUInt8(1), toInt16(-127) < toUInt8(1), toInt16(-127) <= toUInt8(1), toInt16(-127) > toUInt8(1), toInt16(-127) >= toUInt8(1) , toUInt8(1) = toInt32(-127), toUInt8(1) != toInt32(-127), toUInt8(1) < toInt32(-127), toUInt8(1) <= toInt32(-127), toUInt8(1) > toInt32(-127), toUInt8(1) >= toInt32(-127), toInt32(-127) = toUInt8(1), toInt32(-127) != toUInt8(1), toInt32(-127) < toUInt8(1), toInt32(-127) <= toUInt8(1), toInt32(-127) > toUInt8(1), toInt32(-127) >= toUInt8(1) , toUInt8(1) = toInt64(-127), toUInt8(1) != toInt64(-127), toUInt8(1) < toInt64(-127), toUInt8(1) <= toInt64(-127), toUInt8(1) > toInt64(-127), toUInt8(1) >= toInt64(-127), toInt64(-127) = toUInt8(1), toInt64(-127) != toUInt8(1), toInt64(-127) < toUInt8(1), toInt64(-127) <= toUInt8(1), toInt64(-127) > toUInt8(1), toInt64(-127) >= toUInt8(1) , toInt8(1) = toInt8(-127), toInt8(1) != toInt8(-127), toInt8(1) < toInt8(-127), toInt8(1) <= toInt8(-127), toInt8(1) > toInt8(-127), toInt8(1) >= toInt8(-127), toInt8(-127) = toInt8(1), toInt8(-127) != toInt8(1), toInt8(-127) < toInt8(1), toInt8(-127) <= toInt8(1), toInt8(-127) > toInt8(1), toInt8(-127) >= toInt8(1) , toInt8(1) = toInt16(-127), toInt8(1) != toInt16(-127), toInt8(1) < toInt16(-127), toInt8(1) <= toInt16(-127), toInt8(1) > toInt16(-127), toInt8(1) >= toInt16(-127), toInt16(-127) = toInt8(1), toInt16(-127) != toInt8(1), toInt16(-127) < toInt8(1), toInt16(-127) <= toInt8(1), toInt16(-127) > toInt8(1), toInt16(-127) >= toInt8(1) , toInt8(1) = toInt32(-127), toInt8(1) != toInt32(-127), toInt8(1) < toInt32(-127), toInt8(1) <= toInt32(-127), toInt8(1) > toInt32(-127), toInt8(1) >= toInt32(-127), toInt32(-127) = toInt8(1), toInt32(-127) != toInt8(1), toInt32(-127) < toInt8(1), toInt32(-127) <= toInt8(1), toInt32(-127) > toInt8(1), toInt32(-127) >= toInt8(1) , toInt8(1) = toInt64(-127), toInt8(1) != toInt64(-127), toInt8(1) < toInt64(-127), toInt8(1) <= toInt64(-127), toInt8(1) > toInt64(-127), toInt8(1) >= toInt64(-127), toInt64(-127) = toInt8(1), toInt64(-127) != toInt8(1), toInt64(-127) < toInt8(1), toInt64(-127) <= toInt8(1), toInt64(-127) > toInt8(1), toInt64(-127) >= toInt8(1) , toUInt16(1) = toInt8(-127), toUInt16(1) != toInt8(-127), toUInt16(1) < toInt8(-127), toUInt16(1) <= toInt8(-127), toUInt16(1) > toInt8(-127), toUInt16(1) >= toInt8(-127), toInt8(-127) = toUInt16(1), toInt8(-127) != toUInt16(1), toInt8(-127) < toUInt16(1), toInt8(-127) <= toUInt16(1), toInt8(-127) > toUInt16(1), toInt8(-127) >= toUInt16(1) , toUInt16(1) = toInt16(-127), toUInt16(1) != toInt16(-127), toUInt16(1) < toInt16(-127), toUInt16(1) <= toInt16(-127), toUInt16(1) > toInt16(-127), toUInt16(1) >= toInt16(-127), toInt16(-127) = toUInt16(1), toInt16(-127) != toUInt16(1), toInt16(-127) < toUInt16(1), toInt16(-127) <= toUInt16(1), toInt16(-127) > toUInt16(1), toInt16(-127) >= toUInt16(1) , toUInt16(1) = toInt32(-127), toUInt16(1) != toInt32(-127), toUInt16(1) < toInt32(-127), toUInt16(1) <= toInt32(-127), toUInt16(1) > toInt32(-127), toUInt16(1) >= toInt32(-127), toInt32(-127) = toUInt16(1), toInt32(-127) != toUInt16(1), toInt32(-127) < toUInt16(1), toInt32(-127) <= toUInt16(1), toInt32(-127) > toUInt16(1), toInt32(-127) >= toUInt16(1) , toUInt16(1) = toInt64(-127), toUInt16(1) != toInt64(-127), toUInt16(1) < toInt64(-127), toUInt16(1) <= toInt64(-127), toUInt16(1) > toInt64(-127), toUInt16(1) >= toInt64(-127), toInt64(-127) = toUInt16(1), toInt64(-127) != toUInt16(1), toInt64(-127) < toUInt16(1), toInt64(-127) <= toUInt16(1), toInt64(-127) > toUInt16(1), toInt64(-127) >= toUInt16(1) , toInt16(1) = toInt8(-127), toInt16(1) != toInt8(-127), toInt16(1) < toInt8(-127), toInt16(1) <= toInt8(-127), toInt16(1) > toInt8(-127), toInt16(1) >= toInt8(-127), toInt8(-127) = toInt16(1), toInt8(-127) != toInt16(1), toInt8(-127) < toInt16(1), toInt8(-127) <= toInt16(1), toInt8(-127) > toInt16(1), toInt8(-127) >= toInt16(1) , toInt16(1) = toInt16(-127), toInt16(1) != toInt16(-127), toInt16(1) < toInt16(-127), toInt16(1) <= toInt16(-127), toInt16(1) > toInt16(-127), toInt16(1) >= toInt16(-127), toInt16(-127) = toInt16(1), toInt16(-127) != toInt16(1), toInt16(-127) < toInt16(1), toInt16(-127) <= toInt16(1), toInt16(-127) > toInt16(1), toInt16(-127) >= toInt16(1) , toInt16(1) = toInt32(-127), toInt16(1) != toInt32(-127), toInt16(1) < toInt32(-127), toInt16(1) <= toInt32(-127), toInt16(1) > toInt32(-127), toInt16(1) >= toInt32(-127), toInt32(-127) = toInt16(1), toInt32(-127) != toInt16(1), toInt32(-127) < toInt16(1), toInt32(-127) <= toInt16(1), toInt32(-127) > toInt16(1), toInt32(-127) >= toInt16(1) , toInt16(1) = toInt64(-127), toInt16(1) != toInt64(-127), toInt16(1) < toInt64(-127), toInt16(1) <= toInt64(-127), toInt16(1) > toInt64(-127), toInt16(1) >= toInt64(-127), toInt64(-127) = toInt16(1), toInt64(-127) != toInt16(1), toInt64(-127) < toInt16(1), toInt64(-127) <= toInt16(1), toInt64(-127) > toInt16(1), toInt64(-127) >= toInt16(1) , toUInt32(1) = toInt8(-127), toUInt32(1) != toInt8(-127), toUInt32(1) < toInt8(-127), toUInt32(1) <= toInt8(-127), toUInt32(1) > toInt8(-127), toUInt32(1) >= toInt8(-127), toInt8(-127) = toUInt32(1), toInt8(-127) != toUInt32(1), toInt8(-127) < toUInt32(1), toInt8(-127) <= toUInt32(1), toInt8(-127) > toUInt32(1), toInt8(-127) >= toUInt32(1) , toUInt32(1) = toInt16(-127), toUInt32(1) != toInt16(-127), toUInt32(1) < toInt16(-127), toUInt32(1) <= toInt16(-127), toUInt32(1) > toInt16(-127), toUInt32(1) >= toInt16(-127), toInt16(-127) = toUInt32(1), toInt16(-127) != toUInt32(1), toInt16(-127) < toUInt32(1), toInt16(-127) <= toUInt32(1), toInt16(-127) > toUInt32(1), toInt16(-127) >= toUInt32(1) , toUInt32(1) = toInt32(-127), toUInt32(1) != toInt32(-127), toUInt32(1) < toInt32(-127), toUInt32(1) <= toInt32(-127), toUInt32(1) > toInt32(-127), toUInt32(1) >= toInt32(-127), toInt32(-127) = toUInt32(1), toInt32(-127) != toUInt32(1), toInt32(-127) < toUInt32(1), toInt32(-127) <= toUInt32(1), toInt32(-127) > toUInt32(1), toInt32(-127) >= toUInt32(1) , toUInt32(1) = toInt64(-127), toUInt32(1) != toInt64(-127), toUInt32(1) < toInt64(-127), toUInt32(1) <= toInt64(-127), toUInt32(1) > toInt64(-127), toUInt32(1) >= toInt64(-127), toInt64(-127) = toUInt32(1), toInt64(-127) != toUInt32(1), toInt64(-127) < toUInt32(1), toInt64(-127) <= toUInt32(1), toInt64(-127) > toUInt32(1), toInt64(-127) >= toUInt32(1) , toInt32(1) = toInt8(-127), toInt32(1) != toInt8(-127), toInt32(1) < toInt8(-127), toInt32(1) <= toInt8(-127), toInt32(1) > toInt8(-127), toInt32(1) >= toInt8(-127), toInt8(-127) = toInt32(1), toInt8(-127) != toInt32(1), toInt8(-127) < toInt32(1), toInt8(-127) <= toInt32(1), toInt8(-127) > toInt32(1), toInt8(-127) >= toInt32(1) , toInt32(1) = toInt16(-127), toInt32(1) != toInt16(-127), toInt32(1) < toInt16(-127), toInt32(1) <= toInt16(-127), toInt32(1) > toInt16(-127), toInt32(1) >= toInt16(-127), toInt16(-127) = toInt32(1), toInt16(-127) != toInt32(1), toInt16(-127) < toInt32(1), toInt16(-127) <= toInt32(1), toInt16(-127) > toInt32(1), toInt16(-127) >= toInt32(1) , toInt32(1) = toInt32(-127), toInt32(1) != toInt32(-127), toInt32(1) < toInt32(-127), toInt32(1) <= toInt32(-127), toInt32(1) > toInt32(-127), toInt32(1) >= toInt32(-127), toInt32(-127) = toInt32(1), toInt32(-127) != toInt32(1), toInt32(-127) < toInt32(1), toInt32(-127) <= toInt32(1), toInt32(-127) > toInt32(1), toInt32(-127) >= toInt32(1) , toInt32(1) = toInt64(-127), toInt32(1) != toInt64(-127), toInt32(1) < toInt64(-127), toInt32(1) <= toInt64(-127), toInt32(1) > toInt64(-127), toInt32(1) >= toInt64(-127), toInt64(-127) = toInt32(1), toInt64(-127) != toInt32(1), toInt64(-127) < toInt32(1), toInt64(-127) <= toInt32(1), toInt64(-127) > toInt32(1), toInt64(-127) >= toInt32(1) , toUInt64(1) = toInt8(-127), toUInt64(1) != toInt8(-127), toUInt64(1) < toInt8(-127), toUInt64(1) <= toInt8(-127), toUInt64(1) > toInt8(-127), toUInt64(1) >= toInt8(-127), toInt8(-127) = toUInt64(1), toInt8(-127) != toUInt64(1), toInt8(-127) < toUInt64(1), toInt8(-127) <= toUInt64(1), toInt8(-127) > toUInt64(1), toInt8(-127) >= toUInt64(1) , toUInt64(1) = toInt16(-127), toUInt64(1) != toInt16(-127), toUInt64(1) < toInt16(-127), toUInt64(1) <= toInt16(-127), toUInt64(1) > toInt16(-127), toUInt64(1) >= toInt16(-127), toInt16(-127) = toUInt64(1), toInt16(-127) != toUInt64(1), toInt16(-127) < toUInt64(1), toInt16(-127) <= toUInt64(1), toInt16(-127) > toUInt64(1), toInt16(-127) >= toUInt64(1) , toUInt64(1) = toInt32(-127), toUInt64(1) != toInt32(-127), toUInt64(1) < toInt32(-127), toUInt64(1) <= toInt32(-127), toUInt64(1) > toInt32(-127), toUInt64(1) >= toInt32(-127), toInt32(-127) = toUInt64(1), toInt32(-127) != toUInt64(1), toInt32(-127) < toUInt64(1), toInt32(-127) <= toUInt64(1), toInt32(-127) > toUInt64(1), toInt32(-127) >= toUInt64(1) , toUInt64(1) = toInt64(-127), toUInt64(1) != toInt64(-127), toUInt64(1) < toInt64(-127), toUInt64(1) <= toInt64(-127), toUInt64(1) > toInt64(-127), toUInt64(1) >= toInt64(-127), toInt64(-127) = toUInt64(1), toInt64(-127) != toUInt64(1), toInt64(-127) < toUInt64(1), toInt64(-127) <= toUInt64(1), toInt64(-127) > toUInt64(1), toInt64(-127) >= toUInt64(1) , toInt64(1) = toInt8(-127), toInt64(1) != toInt8(-127), toInt64(1) < toInt8(-127), toInt64(1) <= toInt8(-127), toInt64(1) > toInt8(-127), toInt64(1) >= toInt8(-127), toInt8(-127) = toInt64(1), toInt8(-127) != toInt64(1), toInt8(-127) < toInt64(1), toInt8(-127) <= toInt64(1), toInt8(-127) > toInt64(1), toInt8(-127) >= toInt64(1) , toInt64(1) = toInt16(-127), toInt64(1) != toInt16(-127), toInt64(1) < toInt16(-127), toInt64(1) <= toInt16(-127), toInt64(1) > toInt16(-127), toInt64(1) >= toInt16(-127), toInt16(-127) = toInt64(1), toInt16(-127) != toInt64(1), toInt16(-127) < toInt64(1), toInt16(-127) <= toInt64(1), toInt16(-127) > toInt64(1), toInt16(-127) >= toInt64(1) , toInt64(1) = toInt32(-127), toInt64(1) != toInt32(-127), toInt64(1) < toInt32(-127), toInt64(1) <= toInt32(-127), toInt64(1) > toInt32(-127), toInt64(1) >= toInt32(-127), toInt32(-127) = toInt64(1), toInt32(-127) != toInt64(1), toInt32(-127) < toInt64(1), toInt32(-127) <= toInt64(1), toInt32(-127) > toInt64(1), toInt32(-127) >= toInt64(1) , toInt64(1) = toInt64(-127), toInt64(1) != toInt64(-127), toInt64(1) < toInt64(-127), toInt64(1) <= toInt64(-127), toInt64(1) > toInt64(-127), toInt64(1) >= toInt64(-127), toInt64(-127) = toInt64(1), toInt64(-127) != toInt64(1), toInt64(-127) < toInt64(1), toInt64(-127) <= toInt64(1), toInt64(-127) > toInt64(1), toInt64(-127) >= toInt64(1) 
INSERT INTO dst_9 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 52
INSERT INTO test_01193_18429.table_4_498 VALUES 
SET max_block_size = 0;
SELECT 4 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'val', tuple(IPv6StringToNum('::ffff:7f00:1')))
SELECT c, a FROM buffer_00126 ORDER BY a, b, c;
SELECT 'Running test stateless/01274_alter_rename_column_distributed.sql from pid=1714' 
SELECT a FROM t_fixed_prefix WHERE bitNot(a) = 1 AND bitNot(c) = 1 ORDER BY a SETTINGS optimize_read_in_order = 1
DROP TABLE IF EXISTS all_valid;
SELECT cutIPv6(toFixedString(unhex('00000000000000000000FFFFC1FC110A'), 16), 0, 11);
CREATE DATABASE IF NOT EXISTS test_67ov0lqp 
insert into summing_merge_tree_aggregate_function select 1, avgState(0.5625);
SELECT cityHash64(toDecimal128(128, 24));
DROP DATABASE IF EXISTS test_p6zkuyt0 
INSERT INTO test_01193_18429.table_1_348 VALUES 
INSERT INTO test_01193_18429.table_5_298 VALUES 
CREATE TABLE test_01193_18429.table_7_908 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT * FROM set_idx WHERE startsWith(s, 'abra') AND endsWith(s, 'abra')
INSERT INTO test_01193_18429.table_2_418 VALUES 
CREATE TABLE test_01193_18429.table_7_398 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT CASE WHEN (col1 % 2) = 0 THEN 'foo' WHEN (col1 % 3) = 0 THEN 'bar' ELSE toFixedString('baz', 16) END FROM multi_if_check;
INSERT INTO test_01193_18429.table_5_895 VALUES 
SELECT * FROM system.data_skipping_indices WHERE table = 'alter_index_test' AND database = currentDatabase();
SELECT a, b, e FROM t_fixed_prefix WHERE bitNot(a) = 1 ORDER BY a, b, e SETTINGS optimize_read_in_order = 1
CREATE TABLE test_01193_18429.table_10_117 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SET max_rows_in_set_to_optimize_join = 1000;
drop table if exists test_tab
DROP TABLE IF EXISTS t_enum16;
SELECT multiIf((number % 2) = 0, toInt32(1), (number % 3) = 0, toFloat64(2), toFloat32(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_02908_r1_131 SELECT rand64() FROM numbers(5);
DROP DICTIONARY IF EXISTS db_01268.dict2;
DROP TABLE not_partitioned;
SELECT * FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a SEMI LEFT JOIN (SELECT (1 :: UInt32) AS id) AS d ON a.id = d.id ;
SELECT a, arrayEnumerateUniqRanked(a) FROM ( SELECT * FROM ( SELECT [[], [], [1, 2, 3, 4]] AS a UNION ALL SELECT [[], [], [3, 4, 5]] AS a ) ORDER BY a ASC );
select sipHash128ReferenceKeyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)) == sipHash128Reference(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20));
alter table many_mutations delete where y = 369 * 2 settings mutations_sync = 0;
DROP DATABASE IF EXISTS test_z1xszoi9 
create materialized view mv_01277_2 to buffer_01277 as select a1, a2, k1, k2, b1, b2, c from in_01277;
SELECT 'Running test stateless/01763_support_map_lowcardinality_type.sql from pid=1713' 
DROP TABLE hit;
SELECT '4 days test in batch comparing with manually computation result for Australia/Lord_Howe whose timezone epoc is of half hour and also its DST offset is half hour:';
CREATE TABLE test_fetch(a Int32, b Int32) Engine = Memory;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), DT <= N as r FORMAT CSV;
SELECT 'Running test stateless/00131_set_hashed.sql from pid=1713' 
SELECT CASE WHEN 1 THEN 'foo' WHEN 1 THEN toFixedString(col3, 16) ELSE toFixedString('baz', 16) END FROM multi_if_check;
INSERT INTO r2 SELECT 47 % 10 = 2 ? 47 - 1 : 47
CREATE TABLE test_4040653976462F3123265B4C7266225123413A4020475847392B273140695C6A5E7E4165757D3D2E(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_ydz5da20 
CREATE TABLE test_01193_18429.table_9_454 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_ivf65qd5 
EXPLAIN QUERY TREE run_passes=1 SELECT value1 FROM date_t WHERE toYYYYMM(date1) = 199312 AND id BETWEEN 1 AND 3 SETTINGS allow_experimental_analyzer=1;
CREATE TABLE test_383B706B375260585C5840506D476820212E27342D7C3E6B65524A50474C41372D573C74205B2076(x UInt8) Engine=Memory;
DROP TABLE wikistat1;
ALTER TABLE concurrent_alter_column ADD COLUMN c430 DOUBLE;
select toDateTimeOrDefault(1685457500, 'UTC');
select multiFuzzyMatchAny('hallo some world', 1, ['^hello.*world$']);
SELECT nothingUInt64(NULL) as n, toTypeName(n);
CREATE TABLE test_7272674556405C6969775D7C21396741794079552E7D3C555D506D6A5C4C53675E75552631236C58(x UInt8) Engine=Memory;
CREATE ROW POLICY user_policy_2 ON user_data FOR SELECT USING userID = 2 TO user_role_2
select * from remote('127.2', system.one) settings log_queries=1, log_comment='127.2 db.name identifier' format Null;
CREATE DATABASE IF NOT EXISTS test_ahwppifc 
SET max_rows_to_read = 3;
CREATE TABLE test_3D3C222E566E2F4F70402D3D775F2B4B417E50432D53762A483A217D2925203C666E22603966213B(x UInt8) Engine=Memory;
select v, variantElement(v, 'UInt64') from format(TSV, 'v Variant(String, UInt64, Int128)', '\\N\nstring\n-1\n0\n10000000000000000000000\n42d42') format TSV;
CREATE TABLE IF NOT EXISTS test_01444.t2461 (`x` UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 49736, min_bytes_for_wide_part = 645103364, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 6, merge_max_block_size = 15200, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 21360504, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75390, primary_key_compress_block_size = 98921
DROP TABLE range_dictionary_nullable_source_table;
CREATE TABLE test_01193_18429.table_9_430 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select 'dictGetOrDefault', 'cache_decimals' as dict_name, toUInt64(1) as k, dictGetOrDefault(dict_name, 'd32', k, toDecimal32(42, 4)), dictGetOrDefault(dict_name, 'd64', k, toDecimal64(42, 6)), dictGetOrDefault(dict_name, 'd128', k, toDecimal128(42, 1)), dictGetOrDefault(dict_name, ('d32', 'd64', 'd128'), k, (toDecimal32(42, 4), toDecimal64(42, 6), toDecimal128(42, 1)));
CREATE TABLE test_01193_18429.table_10_657 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT CASE WHEN 1 THEN [col2, 'bar'] WHEN (col1 % 3) = 0 THEN [col4, 'bar'] ELSE ['foo', 'bar'] END FROM multi_if_check;
CREATE TABLE test_496877225F227E272D506164465259452E79404A6F7565475F65417E27274A2F6B61782C337A7341(x UInt8) Engine=Memory;
CREATE TABLE test_02908_r3_87 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_87', 'r3') ORDER BY tuple()
DROP USER u1_01292, u2_01292, u3_01292, u4_01292, u5_01292;
select cutToFirstSignificantSubdomainCustomRFC('http://foobar.com/foo', 'public_suffix_list');
select sipHash128Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49)) == sipHash128(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49));
INSERT INTO r6 SELECT 91
DROP DATABASE IF EXISTS test_swykjxw7 
SELECT 'SELECT toTime(N, \'Asia/Istanbul\')';
SELECT groupArraySorted(NULL);
DROP DATABASE IF EXISTS test_s879a40r 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c7) AND (NOT c5) AND c8 AND c6) OR ((NOT c0)) OR (c4 AND (NOT c0) AND (NOT c9) AND (NOT c0)) OR (c6 AND c9 AND (NOT c5)) OR ((NOT c1) AND (NOT c4) AND (NOT c3) AND (NOT c5)) OR (c5 AND c6 AND (NOT c2) AND c3) SETTINGS convert_query_to_cnf = 1
SELECT * FROM test_sort_proj WHERE y > 4294967286 order by x FORMAT JSON SETTINGS optimize_move_to_prewhere = 0, optimize_use_projections = 1
SELECT addQuarters(materialize('2023-10-22'), materialize(1)), addQuarters(materialize('2023-10-22 12:34:56.123'), materialize(1));
SELECT 'Running test stateless/01019_materialized_view_select_extra_columns.sql from pid=1722' 
SELECT 'Running test stateless/01278_min_insert_block_size_rows_for_materialized_views.sh from pid=1715' 
ATTACH DATABASE test1601_detach_permanently_atomic;
INSERT INTO test_01193_18429.table_10_276 VALUES 
SELECT toYear(d) AS y, count() FROM ( SELECT today() AS d WHERE 0) GROUP BY y ORDER BY y ASC WITH FILL TO 2023;
CREATE TABLE test_66432467602C6871304B444A35737E77762472523B225C555966263F6463272566263540723C473E(x UInt8) Engine=Memory;
CREATE TABLE test_58447D372466344D3B486D4C507E40313C6949723B386C5F695D29276F717C7D7B533E22352C743A(x UInt8) Engine=Memory;
ALTER SETTINGS PROFILE 02832_alter_max_sessions_profile_26536 SETTINGS max_sessions_for_user = 1
select X'' == X'';
CREATE TABLE test_35732644292B5A592F76365622635D497E786A28293356272C2348616848457C78652F623D5A576E(x UInt8) Engine=Memory;
create table t (n UInt8, a1 AggregateFunction(groupUniqArray(1), UInt8)) engine=Memory
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (82 < 58 AND 101 > 0 ? 82 : 0)), throwIf(last != (82 < 58 AND 101 > 0 ? least(58 - 1, 82 + 101 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(58) LIMIT 82, 101);
CREATE DATABASE IF NOT EXISTS test_uspsumd1 
EXPLAIN SYNTAX (SELECT sum(uint64 + 2) - sum(uint64 + 3) From test_table);
select number, number + 1, concat('string: ', toString(number)) from numbers(200000) group by number with totals order by number limit 190000 format JSONStringsEachRow
CREATE TABLE minmax_idx (`u64` UInt64, `i32` Int32, `f64` Float64, `d` Decimal(10, 2), `s` String, `e` Enum8('a' = 1, 'b' = 2, 'c' = 3), `dt` Date, INDEX idx_all (i32, i32 + f64, d, s, e, dt) TYPE minmax GRANULARITY 1, INDEX idx_all2 (i32, i32 + f64, d, s, e, dt) TYPE minmax GRANULARITY 2, INDEX idx_2 (u64 + toYear(dt), substring(s, 2, 4)) TYPE minmax GRANULARITY 3) ENGINE = MergeTree ORDER BY u64 SETTINGS index_granularity = 2, index_granularity_bytes = '10Mi', min_rows_for_wide_part = 1000000, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 330, prefer_fetch_merged_part_size_threshold = 8507783271, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 56, min_merge_bytes_to_use_direct_io = 7889282500, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 10294, primary_key_compress_block_size = 91646
ALTER TABLE concurrent_alter_column ADD COLUMN c498 DOUBLE;
SELECT 1 from defaults_on_defaults where length(`Arr.C4`) = 0;
DROP DATABASE IF EXISTS test_jf3022zi 
SELECT '(backward, tail, A->B)', id, sequenceNextNode('backward', 'tail')(dt, action, 1, action = 'A', action = 'B') AS next_node FROM test_sequenceNextNode_Nullable GROUP BY id ORDER BY id;
CREATE TABLE test_53777E6E66554F73487737234E4362364736706935684D655E326B36394E533F70395148264C2C24(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02493_analyzer_table_functions_untuple.sql from pid=1714' 
DROP TABLE IF EXISTS t_with_dots;
SELECT toTypeName(arrayMin([toDecimal32(0, 8)])), toTypeName(arrayMin([toDecimal64(0, 8)])), toTypeName(arrayMin([toDecimal128(0, 8)]));
INSERT INTO test_01193_18429.table_6_220 VALUES 
CREATE MATERIALIZED VIEW mv (`a` Int32) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 5178, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 13284, prefer_fetch_merged_part_size_threshold = 4033689863, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 5226630675, index_granularity_bytes = 11208486, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 49301, primary_key_compress_block_size = 80348 AS SELECT * FROM src
CREATE TABLE t_vertical_merge_memory (id UInt64, arr Array(String)) ENGINE = MergeTree ORDER BY id SETTINGS min_bytes_for_wide_part = 0, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, index_granularity = 8192, index_granularity_bytes = '10M', merge_max_block_size = 8192, merge_max_block_size_bytes = '10M';
select sipHash128Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18)) == sipHash128(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18));
ALTER TABLE alter_update DELETE WHERE value2 IN (8, 9, 10), UPDATE value2 = value2 + 10 WHERE value2 <= 10, DELETE WHERE length(value1) + value2 = 23, DELETE WHERE materialized_value = 'materialized_37', UPDATE value1 = concat(value1, '_', materialized_value) WHERE key = 456
ATTACH TABLE test_hklfjq8i.tablefunc05
INSERT INTO test_01193_18429.table_7_959 VALUES 
INSERT INTO test_01193_18429.table_6_280 VALUES 
SYSTEM START MERGES mt_compact
CREATE TABLE data (`A` UInt8, `B` UInt8) ENGINE = MergeTree ORDER BY A SETTINGS index_granularity = 18296, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 17, merge_max_block_size = 8111, prefer_fetch_merged_part_size_threshold = 4034579223, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 6419016717, index_granularity_bytes = 15735151, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 74849, primary_key_compress_block_size = 89788
DROP TABLE IF EXISTS insert_fewer_columns;
DROP TABLE IF EXISTS test_table2
DROP DATABASE IF EXISTS test_ifdde1ga 
SELECT 5, 'Hello',bin(bitShiftLeft('Hello', 5));
DROP TABLE IF EXISTS compatibility_google_wrappers_02266;
SELECT count(), _part from 02581_trips WHERE description = '' GROUP BY _part ORDER BY _part;
CREATE TABLE test_01193_18429.table_10_581 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select formatRow('TSKV', number, good) from (select number, 'good' as good from numbers(3));
CREATE TABLE test_3E4D43722C2F2769602D4A5C2A49606E3D616D5D762E4B533151545D28307E53237C725C6B3B3F51(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_7_191 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT throwIf((SELECT (count(), sum(n)) FROM merge(currentDatabase(), '') WHERE type=4) != (toUInt8(1/2 + 1), (select sum(number) from numbers(1, 1) where number % 2 or number=1))) FORMAT Null;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 16653, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT 'Running test stateless/02113_format_row.sql from pid=1715' 
CREATE TABLE test_01193_18429.table_10_188 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_3_56 VALUES 
SELECT t1.a as t1_a, t2.a as t2_a FROM source_table1 AS t1 JOIN source_table1 AS t2 ON t1_a = t2_a LIMIT 1;
INSERT INTO test_01193_18429.table_10_382 VALUES 
select isInfinite(-1/0) = 1;
select port('http://127.0.0.1/');
SELECT a,b,c,d FROM (SELECT 1 AS a,2 AS b, 3 AS c UNION ALL SELECT 2,3,4 ) js1 ALL LEFT JOIN (SELECT 1 AS a,2 AS b,4 AS d UNION ALL SELECT 2,3,5) js2 USING a,b ORDER BY a,b,c,d ASC;
CREATE TABLE t_json_local (`data` JSON) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 54177, min_bytes_for_wide_part = 914132779, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 12901, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 7208386891, index_granularity_bytes = 11746959, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 81844, primary_key_compress_block_size = 44682
INSERT INTO test_01193_18429.table_7_667 VALUES 
alter table many_mutations delete where y = 463 * 2 settings mutations_sync = 0;
SELECT count() FROM system.processes WHERE query_id LIKE '01168_mutations_isolation_test_oos88xqy_tx11%'
CREATE TABLE test_01193_18429.table_2_213 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_8_121 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DATABASE IF NOT EXISTS test_pdo04d82 
select 4 = position('abcdefgh', materialize('defg')) from system.numbers limit 129;
SELECT CASE WHEN (number % 2) = 0 THEN toInt32(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toInt16(3) END FROM system.numbers LIMIT 10;
SELECT cutQueryString('http://paul@www.example.com/a/b/c?a=b#d=f');
select makeDateTime(1991, 8, 24, 21, 65537, 0, 'UTC');
CREATE TABLE test_01193_18429.table_4_72 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT uniqUpTo([NULL]);
set mysql_max_rows_to_insert = 123123;
alter table data_01900_2 update s = 'bar_61' where 1;
select appendTrailingCharIfAbsent(materialize(''), 'a') = materialize('');
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (13 < 31 AND 42 > 0 ? 13 : 0)), throwIf(last != (13 < 31 AND 42 > 0 ? least(31 - 1, 13 + 42 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(31) LIMIT 13, 42);
DROP TABLE IF EXISTS merge_00160;
SELECT CASE WHEN (col1 % 2) = 0 THEN ['foo', 'bar'] WHEN 1 THEN ['foo', 'bar'] ELSE [col6, 'bar'] END FROM multi_if_check;
CREATE TABLE test_01193_18429.table_4_525 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 26692, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE MATERIALIZED VIEW IF NOT EXISTS db_test_piw8e8fv.test_mv_c ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_02124/{table}', '1') ORDER BY tuple() SETTINGS index_granularity = 3509, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.4395258128643036, replace_long_file_name_to_hash = true, max_file_name_length = 32, merge_max_block_size = 5309, prefer_fetch_merged_part_size_threshold = 9468582750, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 939070401, index_granularity_bytes = 13136160, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 28054, primary_key_compress_block_size = 69991 AS SELECT test, A, count() AS c FROM db_test_piw8e8fv.test GROUP BY test, A
CREATE TABLE test_01193_18429.table_6_94 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT dictGetHierarchy('hierachical_direct_dictionary', number) FROM system.numbers LIMIT 6;
INSERT INTO test_01193_18429.table_10_369 VALUES 
DROP DATABASE IF EXISTS test_f6ptk3r1 
select arrayRotateLeft(a, 2) from t02845;
SELECT name, storage from system.roles WHERE name='r1_01293';
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toFloat32(3), toFloat32(3)] END FROM system.numbers LIMIT 10;
desc format(CSV, '"[null, 1]"\n"[]"');
CREATE DATABASE IF NOT EXISTS test_o9biqex1 
CREATE TABLE test_01193_18429.table_9_702 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/02501_analyzer_expired_context_crash_fix.sql from pid=1713' 
DROP DATABASE IF EXISTS test_2d2lfp9a 
SELECT CASE WHEN (number % 2) = 0 THEN [toInt8(1), toInt8(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toUInt16(3), toUInt16(3)] END FROM system.numbers LIMIT 10;
DROP TABLE IF EXISTS bad_skip_idx;
CREATE TABLE test_48633A6D5273332F7677504720686A71532F59615523422B595836244B4A31406D353C707D63432C(x UInt8) Engine=Memory;
ALTER TABLE kill_mutation_r1 DELETE WHERE toUInt32(s) = 1
INSERT INTO r2 SELECT 85 % 10 = 2 ? 85 - 1 : 85
SELECT varPopStable(NULL, NULL);
CREATE TABLE test_null_array_orc(col0 Array(Nullable(Int64)),col1 Array(Nullable(String))) ENGINE = Memory
INSERT INTO test_01193_18429.table_6_983 VALUES 
CREATE TABLE r5 (`x` UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/tables/01459_manual_write_to_replicas_quorum_test_mto1qa53/r', 'r5') ORDER BY x SETTINGS index_granularity = 65287, min_bytes_for_wide_part = 303178641, ratio_of_defaults_for_sparse_serialization = 0.600425124168396, replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 570, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 607014, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 6813143701, index_granularity_bytes = 4778542, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 71979, primary_key_compress_block_size = 20924
INSERT INTO test_01193_18429.table_7_615 VALUES 
SELECT toString(toTime(toDateTime(1420102800), 'Pacific/Pitcairn'), 'Pacific/Pitcairn'), toString(toTime(toDateTime(1428310800), 'Pacific/Pitcairn'), 'Pacific/Pitcairn');
SELECT avgWeighted(toInt128(1), toInt128(2));
CREATE DATABASE IF NOT EXISTS test_qzgw1l2z 
select URLHash(url, 1 as level) = URLHash(URLHierarchy(url)[level + 1]) from system.one array join ['', 'http://ya.ru', 'http://ya.ru/', 'http://ya.ru/a', 'http://ya.ru/a/', 'http://ya.ru/a/b', 'http://ya.ru/a/b?'] as url;
SELECT hasThreadFuzzer();
CREATE DATABASE IF NOT EXISTS test_jwcap9w8 
select [0] = multiSearchAllPositions(materialize('abc'), ['bcdef']);
select * from array_functions;
CREATE TABLE agg (`key` UInt32, `ts` DateTime, `value` UInt32, PROJECTION aaaa (SELECT ts, key, sum(value) GROUP BY ts, key)) ENGINE = MergeTree ORDER BY (key, ts) SETTINGS index_granularity = 48828, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.4578985571861267, replace_long_file_name_to_hash = false, max_file_name_length = 73, merge_max_block_size = 16307, prefer_fetch_merged_part_size_threshold = 9737382860, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 17783066, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 95470, primary_key_compress_block_size = 69197
SET transform_null_in = 0;
SELECT topLevelDomainRFC('');
DROP TABLE if exists test;
SELECT 'Running test stateless/01159_combinators_with_parameters.sql from pid=1724' 
DROP TABLE IF EXISTS t_part_log_has_merge_type_table
SELECT * FROM defaults ORDER BY n
DROP TABLE IF EXISTS arrow_dicts
DROP DATABASE IF EXISTS test_tnatskoz 
CREATE TABLE test_01193_18429.table_3_792 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
alter table many_mutations delete where y = 118 * 2 settings mutations_sync = 0;
CREATE TABLE test_02908_r2_177 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_177', 'r2') ORDER BY tuple()
SELECT groupBitOr(NULL, NULL);
DROP TABLE IF EXISTS test_table_join_1;
SELECT 'CREATE TABLE t_merge as 01902_db.t ENGINE=Merge(REGEXP(^01902_db), ^t)';
INSERT INTO test_01193_18429.table_1_745 VALUES 
select format('{}{}{}', 'a', toFixedString('b', 1), materialize(toFixedString('c', 1))) == 'abc' from system.numbers limit 5;
INSERT INTO test_01193_18429.table_7_534 VALUES 
SELECT 'TP5';
CREATE TABLE test_307D455D5E7A45702C22664F2374625B5133287D22442F4C6D3453493D6453487C6A3D6C4E717A5D(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_9_997 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_426F73482571505A683A364B7B7854516C73612021333C3633426B7157324C7963767C74647E363D(x UInt8) Engine=Memory;
SELECT count(DISTINCT x, y) FROM (SELECT number % 11 AS x, number % 13 AS y FROM system.numbers LIMIT 1000);
INSERT INTO test_01193_18429.table_9_906 VALUES 
CREATE TABLE test_4A7264792C6E2742406C4F27637C2757662F433F6474487D563D616379655A485639554974717348(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_6_95 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP DATABASE IF EXISTS test_o4c5io7r 
INSERT INTO test_01193_18429.table_6_473 VALUES 
CREATE TABLE test_01193_18429.table_7_499 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
ALTER TABLE src_3 REPLACE PARTITION 7 FROM src_12
SELECT nothingNullArray([NULL, NULL]) AS `x` FROM numbers(3)
CREATE TABLE test_48773D7B495A656C372E577B2C4C30774B55342643596B4F73327E33797C776D455D4F6D4A5B4069(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_c41eo40j 
INSERT INTO main_table_01818 SELECT 1 as `id`, 'ClickHouse' as `advertiser_id`, * EXCEPT (`id`, `advertiser_id`) FROM generateRandom( '`id` UInt32, `advertiser_id` String, `campaign_id` String, `name` String, `budget` Float64, `budget_mode` String, `landing_type` String, `status` String, `modify_time` String, `campaign_type` String, `campaign_create_time` DateTime, `campaign_modify_time` DateTime, `create_time` DateTime, `update_time` DateTime', 10, 10, 10) LIMIT 100;
CREATE TABLE test_7A4078567B507C362E2A5767394C625C723E4B447C742A5F605B6438632D6F3C574E58723975537C(x UInt8) Engine=Memory;
SELECT 0, -32768, 0 = -32768, 0 != -32768, 0 < -32768, 0 <= -32768, 0 > -32768, 0 >= -32768, -32768 = 0, -32768 != 0, -32768 < 0, -32768 <= 0, -32768 > 0, -32768 >= 0 , toUInt8(0) = toInt16(-32768), toUInt8(0) != toInt16(-32768), toUInt8(0) < toInt16(-32768), toUInt8(0) <= toInt16(-32768), toUInt8(0) > toInt16(-32768), toUInt8(0) >= toInt16(-32768), toInt16(-32768) = toUInt8(0), toInt16(-32768) != toUInt8(0), toInt16(-32768) < toUInt8(0), toInt16(-32768) <= toUInt8(0), toInt16(-32768) > toUInt8(0), toInt16(-32768) >= toUInt8(0) , toUInt8(0) = toInt32(-32768), toUInt8(0) != toInt32(-32768), toUInt8(0) < toInt32(-32768), toUInt8(0) <= toInt32(-32768), toUInt8(0) > toInt32(-32768), toUInt8(0) >= toInt32(-32768), toInt32(-32768) = toUInt8(0), toInt32(-32768) != toUInt8(0), toInt32(-32768) < toUInt8(0), toInt32(-32768) <= toUInt8(0), toInt32(-32768) > toUInt8(0), toInt32(-32768) >= toUInt8(0) , toUInt8(0) = toInt64(-32768), toUInt8(0) != toInt64(-32768), toUInt8(0) < toInt64(-32768), toUInt8(0) <= toInt64(-32768), toUInt8(0) > toInt64(-32768), toUInt8(0) >= toInt64(-32768), toInt64(-32768) = toUInt8(0), toInt64(-32768) != toUInt8(0), toInt64(-32768) < toUInt8(0), toInt64(-32768) <= toUInt8(0), toInt64(-32768) > toUInt8(0), toInt64(-32768) >= toUInt8(0) , toInt8(0) = toInt16(-32768), toInt8(0) != toInt16(-32768), toInt8(0) < toInt16(-32768), toInt8(0) <= toInt16(-32768), toInt8(0) > toInt16(-32768), toInt8(0) >= toInt16(-32768), toInt16(-32768) = toInt8(0), toInt16(-32768) != toInt8(0), toInt16(-32768) < toInt8(0), toInt16(-32768) <= toInt8(0), toInt16(-32768) > toInt8(0), toInt16(-32768) >= toInt8(0) , toInt8(0) = toInt32(-32768), toInt8(0) != toInt32(-32768), toInt8(0) < toInt32(-32768), toInt8(0) <= toInt32(-32768), toInt8(0) > toInt32(-32768), toInt8(0) >= toInt32(-32768), toInt32(-32768) = toInt8(0), toInt32(-32768) != toInt8(0), toInt32(-32768) < toInt8(0), toInt32(-32768) <= toInt8(0), toInt32(-32768) > toInt8(0), toInt32(-32768) >= toInt8(0) , toInt8(0) = toInt64(-32768), toInt8(0) != toInt64(-32768), toInt8(0) < toInt64(-32768), toInt8(0) <= toInt64(-32768), toInt8(0) > toInt64(-32768), toInt8(0) >= toInt64(-32768), toInt64(-32768) = toInt8(0), toInt64(-32768) != toInt8(0), toInt64(-32768) < toInt8(0), toInt64(-32768) <= toInt8(0), toInt64(-32768) > toInt8(0), toInt64(-32768) >= toInt8(0) , toUInt16(0) = toInt16(-32768), toUInt16(0) != toInt16(-32768), toUInt16(0) < toInt16(-32768), toUInt16(0) <= toInt16(-32768), toUInt16(0) > toInt16(-32768), toUInt16(0) >= toInt16(-32768), toInt16(-32768) = toUInt16(0), toInt16(-32768) != toUInt16(0), toInt16(-32768) < toUInt16(0), toInt16(-32768) <= toUInt16(0), toInt16(-32768) > toUInt16(0), toInt16(-32768) >= toUInt16(0) , toUInt16(0) = toInt32(-32768), toUInt16(0) != toInt32(-32768), toUInt16(0) < toInt32(-32768), toUInt16(0) <= toInt32(-32768), toUInt16(0) > toInt32(-32768), toUInt16(0) >= toInt32(-32768), toInt32(-32768) = toUInt16(0), toInt32(-32768) != toUInt16(0), toInt32(-32768) < toUInt16(0), toInt32(-32768) <= toUInt16(0), toInt32(-32768) > toUInt16(0), toInt32(-32768) >= toUInt16(0) , toUInt16(0) = toInt64(-32768), toUInt16(0) != toInt64(-32768), toUInt16(0) < toInt64(-32768), toUInt16(0) <= toInt64(-32768), toUInt16(0) > toInt64(-32768), toUInt16(0) >= toInt64(-32768), toInt64(-32768) = toUInt16(0), toInt64(-32768) != toUInt16(0), toInt64(-32768) < toUInt16(0), toInt64(-32768) <= toUInt16(0), toInt64(-32768) > toUInt16(0), toInt64(-32768) >= toUInt16(0) , toInt16(0) = toInt16(-32768), toInt16(0) != toInt16(-32768), toInt16(0) < toInt16(-32768), toInt16(0) <= toInt16(-32768), toInt16(0) > toInt16(-32768), toInt16(0) >= toInt16(-32768), toInt16(-32768) = toInt16(0), toInt16(-32768) != toInt16(0), toInt16(-32768) < toInt16(0), toInt16(-32768) <= toInt16(0), toInt16(-32768) > toInt16(0), toInt16(-32768) >= toInt16(0) , toInt16(0) = toInt32(-32768), toInt16(0) != toInt32(-32768), toInt16(0) < toInt32(-32768), toInt16(0) <= toInt32(-32768), toInt16(0) > toInt32(-32768), toInt16(0) >= toInt32(-32768), toInt32(-32768) = toInt16(0), toInt32(-32768) != toInt16(0), toInt32(-32768) < toInt16(0), toInt32(-32768) <= toInt16(0), toInt32(-32768) > toInt16(0), toInt32(-32768) >= toInt16(0) , toInt16(0) = toInt64(-32768), toInt16(0) != toInt64(-32768), toInt16(0) < toInt64(-32768), toInt16(0) <= toInt64(-32768), toInt16(0) > toInt64(-32768), toInt16(0) >= toInt64(-32768), toInt64(-32768) = toInt16(0), toInt64(-32768) != toInt16(0), toInt64(-32768) < toInt16(0), toInt64(-32768) <= toInt16(0), toInt64(-32768) > toInt16(0), toInt64(-32768) >= toInt16(0) , toUInt32(0) = toInt16(-32768), toUInt32(0) != toInt16(-32768), toUInt32(0) < toInt16(-32768), toUInt32(0) <= toInt16(-32768), toUInt32(0) > toInt16(-32768), toUInt32(0) >= toInt16(-32768), toInt16(-32768) = toUInt32(0), toInt16(-32768) != toUInt32(0), toInt16(-32768) < toUInt32(0), toInt16(-32768) <= toUInt32(0), toInt16(-32768) > toUInt32(0), toInt16(-32768) >= toUInt32(0) , toUInt32(0) = toInt32(-32768), toUInt32(0) != toInt32(-32768), toUInt32(0) < toInt32(-32768), toUInt32(0) <= toInt32(-32768), toUInt32(0) > toInt32(-32768), toUInt32(0) >= toInt32(-32768), toInt32(-32768) = toUInt32(0), toInt32(-32768) != toUInt32(0), toInt32(-32768) < toUInt32(0), toInt32(-32768) <= toUInt32(0), toInt32(-32768) > toUInt32(0), toInt32(-32768) >= toUInt32(0) , toUInt32(0) = toInt64(-32768), toUInt32(0) != toInt64(-32768), toUInt32(0) < toInt64(-32768), toUInt32(0) <= toInt64(-32768), toUInt32(0) > toInt64(-32768), toUInt32(0) >= toInt64(-32768), toInt64(-32768) = toUInt32(0), toInt64(-32768) != toUInt32(0), toInt64(-32768) < toUInt32(0), toInt64(-32768) <= toUInt32(0), toInt64(-32768) > toUInt32(0), toInt64(-32768) >= toUInt32(0) , toInt32(0) = toInt16(-32768), toInt32(0) != toInt16(-32768), toInt32(0) < toInt16(-32768), toInt32(0) <= toInt16(-32768), toInt32(0) > toInt16(-32768), toInt32(0) >= toInt16(-32768), toInt16(-32768) = toInt32(0), toInt16(-32768) != toInt32(0), toInt16(-32768) < toInt32(0), toInt16(-32768) <= toInt32(0), toInt16(-32768) > toInt32(0), toInt16(-32768) >= toInt32(0) , toInt32(0) = toInt32(-32768), toInt32(0) != toInt32(-32768), toInt32(0) < toInt32(-32768), toInt32(0) <= toInt32(-32768), toInt32(0) > toInt32(-32768), toInt32(0) >= toInt32(-32768), toInt32(-32768) = toInt32(0), toInt32(-32768) != toInt32(0), toInt32(-32768) < toInt32(0), toInt32(-32768) <= toInt32(0), toInt32(-32768) > toInt32(0), toInt32(-32768) >= toInt32(0) , toInt32(0) = toInt64(-32768), toInt32(0) != toInt64(-32768), toInt32(0) < toInt64(-32768), toInt32(0) <= toInt64(-32768), toInt32(0) > toInt64(-32768), toInt32(0) >= toInt64(-32768), toInt64(-32768) = toInt32(0), toInt64(-32768) != toInt32(0), toInt64(-32768) < toInt32(0), toInt64(-32768) <= toInt32(0), toInt64(-32768) > toInt32(0), toInt64(-32768) >= toInt32(0) , toUInt64(0) = toInt16(-32768), toUInt64(0) != toInt16(-32768), toUInt64(0) < toInt16(-32768), toUInt64(0) <= toInt16(-32768), toUInt64(0) > toInt16(-32768), toUInt64(0) >= toInt16(-32768), toInt16(-32768) = toUInt64(0), toInt16(-32768) != toUInt64(0), toInt16(-32768) < toUInt64(0), toInt16(-32768) <= toUInt64(0), toInt16(-32768) > toUInt64(0), toInt16(-32768) >= toUInt64(0) , toUInt64(0) = toInt32(-32768), toUInt64(0) != toInt32(-32768), toUInt64(0) < toInt32(-32768), toUInt64(0) <= toInt32(-32768), toUInt64(0) > toInt32(-32768), toUInt64(0) >= toInt32(-32768), toInt32(-32768) = toUInt64(0), toInt32(-32768) != toUInt64(0), toInt32(-32768) < toUInt64(0), toInt32(-32768) <= toUInt64(0), toInt32(-32768) > toUInt64(0), toInt32(-32768) >= toUInt64(0) , toUInt64(0) = toInt64(-32768), toUInt64(0) != toInt64(-32768), toUInt64(0) < toInt64(-32768), toUInt64(0) <= toInt64(-32768), toUInt64(0) > toInt64(-32768), toUInt64(0) >= toInt64(-32768), toInt64(-32768) = toUInt64(0), toInt64(-32768) != toUInt64(0), toInt64(-32768) < toUInt64(0), toInt64(-32768) <= toUInt64(0), toInt64(-32768) > toUInt64(0), toInt64(-32768) >= toUInt64(0) , toInt64(0) = toInt16(-32768), toInt64(0) != toInt16(-32768), toInt64(0) < toInt16(-32768), toInt64(0) <= toInt16(-32768), toInt64(0) > toInt16(-32768), toInt64(0) >= toInt16(-32768), toInt16(-32768) = toInt64(0), toInt16(-32768) != toInt64(0), toInt16(-32768) < toInt64(0), toInt16(-32768) <= toInt64(0), toInt16(-32768) > toInt64(0), toInt16(-32768) >= toInt64(0) , toInt64(0) = toInt32(-32768), toInt64(0) != toInt32(-32768), toInt64(0) < toInt32(-32768), toInt64(0) <= toInt32(-32768), toInt64(0) > toInt32(-32768), toInt64(0) >= toInt32(-32768), toInt32(-32768) = toInt64(0), toInt32(-32768) != toInt64(0), toInt32(-32768) < toInt64(0), toInt32(-32768) <= toInt64(0), toInt32(-32768) > toInt64(0), toInt32(-32768) >= toInt64(0) , toInt64(0) = toInt64(-32768), toInt64(0) != toInt64(-32768), toInt64(0) < toInt64(-32768), toInt64(0) <= toInt64(-32768), toInt64(0) > toInt64(-32768), toInt64(0) >= toInt64(-32768), toInt64(-32768) = toInt64(0), toInt64(-32768) != toInt64(0), toInt64(-32768) < toInt64(0), toInt64(-32768) <= toInt64(0), toInt64(-32768) > toInt64(0), toInt64(-32768) >= toInt64(0) 
CREATE TABLE test_3D567C452057512C743F4E313F4E5F7A56305852725B3C2664765A4871597A244C77443962605C34(x UInt8) Engine=Memory;
SELECT dictGetChildren('hierarchy_flat_dictionary', 0);
insert into function hdfs('hdfs://localhost:12222/02368_data_10.jsonl') select range(number % 1000) from numbers(100000) settings hdfs_truncate_on_insert=1, output_format_parallel_formatting=0
CREATE TABLE test_5C2A6C2C36663171355E2A5459414429505F374A346F47543658754B2D3F633A695661572E662956(x UInt8) Engine=Memory;
CREATE DATABASE test_02771;
SELECT extractGroups('abc=111, def=222, ghi=333 "jkl mno"="444 foo bar"', '("[^"]+"|\\w+)=("[^"]+"|\\w+)');
CREATE DATABASE IF NOT EXISTS test_4ixoqtu5 
CREATE TABLE alter_table_0 (`a` UInt8, `b` Int16, `c` Float32, `d` String, `e` Array(UInt8), `f` Nullable(UUID), `g` Tuple(UInt8, UInt16)) ENGINE = ReplicatedMergeTree('/clickhouse/tables/00993_system_parts_race_condition_drop_zookeeper_test_zoczfe66/alter_table', 'r_0') PARTITION BY b % 10 ORDER BY a SETTINGS old_parts_lifetime = 1, cleanup_delay_period = 0, cleanup_delay_period_random_add = 0, cleanup_thread_preferred_points_per_iteration = 0, replicated_max_mutations_in_one_entry = 131, index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 17222, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 5082719006, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75985, primary_key_compress_block_size = 73298
CREATE INDEX idx_tab3_1 ON tab3 (col4 DESC,col1);
SELECT concat('With ', materialize(47 :: Int256));
SELECT * FROM numbers(34571)
INSERT INTO test_01193_18429.table_9_174 VALUES 
select 41 as offset, 1 as length, 'Hello' as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
DROP TABLE goal;
DROP TABLE IF EXISTS summing_merge_tree_with_sampling_with_list_of_columns_to_sum;
INSERT INTO test_01193_18429.table_4_544 VALUES 
DROP DATABASE IF EXISTS test_ycxtqsoi 
CREATE TABLE test_4D4B552C692936415F5021292C4F536D4F79245A7459417D206B6C415653385A693559267273403F(x UInt8) Engine=Memory;
set mutations_sync=2;
CREATE TABLE test_462E777B25473C287C6C6E463F6153226040522F6E245971363679612249392825572B2A3363377C(x UInt8) Engine=Memory;
SELECT extractURLParameter('?abc\0def=Hello', 'abc\0def');
SELECT toStartOfHour(toDateTime(10000, 'Asia/Calcutta'));
select * from data format Null settings max_local_read_bandwidth='1M', local_filesystem_read_method='pread'
DROP TABLE IF EXISTS slow_log;
CREATE TABLE test_5A453B363F57375F7E2B7E766C3642282B327D563C6B737B3267637B5431736A77543E406B24546E(x UInt8) Engine=Memory;
select toDateTimeOrDefault(cast(19 as Int128), 'UTC');
CREATE DATABASE IF NOT EXISTS test_xwt4sy6x 
insert into coords values 
ALTER TABLE enum_nested_alter MODIFY COLUMN n.e Array(UInt16);
insert into table function file('test_02167.JSONEachRow', 'auto', 'x UInt64') select * from numbers(2)
SELECT DATEDIFF(millisecond, '2021-01-01'::Date, '2021-01-02'::Date);
DROP DATABASE IF EXISTS test_zcpcvl3w 
SELECT shardNum() AS `_shard_num` FROM `system`.`one` ORDER BY `_shard_num` ASC
CREATE DATABASE IF NOT EXISTS test_hhgtr0bp 
INSERT INTO test_01193_18429.table_2_341 VALUES 
CREATE DATABASE IF NOT EXISTS test_0njk7jlu 
ALTER TABLE test ADD COLUMN s1 String;
SELECT tumbleStart(tumble(toDateTime('2020-01-09 12:00:01', 'US/Samoa'), INTERVAL '1' DAY, 'US/Samoa'));
SELECT (dummy AS x) - 1 FROM remote('127.0.0.{2,3}', system, one) 
CREATE TABLE dst_13 (`p` UInt64, `k` UInt64, `v` UInt64) ENGINE = ReplicatedMergeTree('/test/01154_move_partition_long_test_uepaqe2p/dst', '13') PARTITION BY p % 10 ORDER BY k SETTINGS index_granularity = 13557, min_bytes_for_wide_part = 756562708, ratio_of_defaults_for_sparse_serialization = 0.35682085156440735, replace_long_file_name_to_hash = false, max_file_name_length = 50, merge_max_block_size = 13985, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 376025, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 6001059207, index_granularity_bytes = 10151118, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 83048, primary_key_compress_block_size = 78650
CREATE DICTIONARY dict_db_01224.dict (`key` UInt64 DEFAULT 0, `val` UInt64 DEFAULT 10) PRIMARY KEY key SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'dict_data' PASSWORD '[HIDDEN]' DB 'dict_db_01224')) LIFETIME(MIN 0 MAX 0) LAYOUT(FLAT())
CREATE TABLE test_01193_18429.table_2_510 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE DATABASE IF NOT EXISTS test_mwewoqtb 
INSERT INTO test_01193_18429.table_5_977 VALUES 
CREATE DATABASE IF NOT EXISTS test_qdjih96d 
CREATE TABLE test_3A273541667B26326946352C5C407B31417574545160562F4154732B384E3C5E57417C4C2F537B79(x UInt8) Engine=Memory;
SELECT 1000
SELECT DISTINCT `data_01223`.`key` FROM `test_4zufzi3e`.`data_01223`
CREATE TABLE test_27273A5E64725A4D7C48776C64737850407A30574623405C74735C7E673D3A474A512B4B3A2D4238(x UInt8) Engine=Memory;
ALTER TABLE test_02559 ADD COLUMN y UInt8 DEFAULT 0;
SELECT 'Running test stateless/00753_system_columns_and_system_tables_long.sql from pid=1718' 
DROP DICTIONARY IF EXISTS 02176_test_complex_key_dictionary;
select * from prewhere_column_missing where hash_x = intHash64(x) and length(arr) = 0;
CREATE TABLE test_01193_18429.table_7_810 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP DATABASE IF EXISTS test_u2frzd8s 
CREATE TABLE test_01193_18429.table_6_831 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select count() from ( SELECT event_dt FROM ( select event_dt, 403 AS event_id from ( select event_dt from tba as tba where event_id = 9 and ((tba.event_dt >= 20220822 and tba.event_dt <= 20220822)) ) ) tba WHERE tba.event_dt >= 20220822 and tba.event_dt <= 20220822 and event_id = 403 );
CREATE TABLE min_max_with_nullable_string (`t` DateTime, `nullable_str` Nullable(String), INDEX nullable_str_min_max nullable_str TYPE minmax GRANULARITY 1) ENGINE = MergeTree ORDER BY t SETTINGS index_granularity = 34774, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 124, merge_max_block_size = 18959, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 4019988899, index_granularity_bytes = 16548678, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 83975, primary_key_compress_block_size = 63614
DROP DATABASE IF EXISTS test_6nbk7vt3 
SELECT quantileDeterministic(NULL, NULL);
SELECT count() FROM t_cnf_fuzz WHERE (c3) OR ((NOT c4)) OR (c5 AND (NOT c1) AND c1) OR (c1 AND c3 AND c0) OR (c6 AND c0 AND c8 AND (NOT c2) AND (NOT c3)) OR ((NOT c4) AND c6 AND c3 AND (NOT c4)) SETTINGS convert_query_to_cnf = 1
DROP TABLE weird_partitions_02245;
DROP TABLE IF EXISTS test_00563;
SELECT count() FROM table_float WHERE (toUInt64(f) = 1) AND (f >= 1.3) AND (f <= 1.4) AND (u > 0);
SELECT concatWithSeparator('|', 'a', 'b') == 'a|b';
INSERT INTO r6 SELECT 86 % 10 = 6 ? 86 - 1 : 86
CREATE TABLE test_5C7640583F5F427B38683927687062435673796048376F2E407E213E3C3250335452324A50524539(x UInt8) Engine=Memory;
drop table test_01655_plan_optimizations_optimize_read_in_window_order_long_n
insert into test1__fuzz_36 select * from generateRandom() limit 10;
CREATE TABLE test_5B617A5D365D3A34535965414C24784E3A492330314C7170392228307E7253235D4A524E355D2234(x UInt8) Engine=Memory;
select multiFuzzyMatchAny(materialize('halo some wrld'), 3, materialize(['^hello.*world$']));
CREATE DATABASE IF NOT EXISTS test_pohdljei 
DROP TABLE IF EXISTS 02416_rocksdb;
SELECT ProfileEvents['QueryCacheHits'], ProfileEvents['QueryCacheMisses'] FROM system.query_log WHERE type = 'QueryFinish' AND current_database = currentDatabase() AND query = 'SELECT 1 SETTINGS use_query_cache = true, enable_writes_to_query_cache = false, max_threads = 16;';
INSERT INTO 02918_parallel_replicas SELECT toString(number), number % 4 FROM numbers(1000);
CREATE INDEX idx_tab2_0 ON tab2 (col1,col4 DESC,col0 DESC);
SELECT item_id FROM (SELECT item_id FROM t GROUP BY item_id WITH TOTALS) l INNER JOIN (SELECT item_id FROM t GROUP BY item_id WITH TOTALS ORDER BY item_id) r USING (item_id);
CREATE DATABASE IF NOT EXISTS test_dnuw5fd5 
INSERT INTO t_json_2 FORMAT JSONEachRow 
OPTIMIZE TABLE with_lonely PARTITION '2022-10-28' FINAL;
SHOW CREATE TABLE compression_codec_multiple_more_types_replicated;
INSERT INTO test_01193_18429.table_8_937 VALUES 
OPTIMIZE TABLE test_6d2x9kvl.optimize_me_finally PARTITION 197001 FINAL
SELECT 'Running test stateless/01055_window_view_proc_hop_to.sh from pid=1720' 
CREATE QUOTA q1_01297, q2_01297 FOR 1 day MAX errors=5;
SELECT '=== TABLES IN test_truncate_database ===';
create user u_01939 default database db_01939
INSERT INTO dst_0 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 48
DROP DATABASE IF EXISTS test_g54zb45l 
CREATE TABLE table_for_dict (key UInt64, value String) ENGINE = Memory();
CREATE TABLE test_01193_18429.table_1_615 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_gmo80lov.dist_opentelemetry SETTINGS distributed_foreground_insert=1, prefer_localhost_replica=0 VALUES
INSERT INTO test_01193_18429.table_4_426 VALUES 
alter table many_mutations delete where y = 277 * 2 settings mutations_sync = 0;
SELECT CAST(CAST('Hello' AS LowCardinality(Nullable(String))) AS String);
SELECT arrayMap(x -> materialize(123), emptyArrayString());
SELECT count() FROM enum WHERE x = 'hello';
SELECT multiIf(1, ['foo', 'bar'], 1, [col4, col5], [col6, col7]) FROM multi_if_check;
select accurateCastOrDefault('192.0.2.1', 'IPv4');
INSERT INTO test_01193_18429.table_5_576 VALUES 
DROP DATABASE IF EXISTS test_fyprbunm 
SELECT toUUID('61f0c404-5cb3-11e7-907b-a6006ad3dba2') >= '61f0c404-5cb3-11e7-907b-a6006ad3dba1';
SELECT round(1.1::Decimal(60, 30), 1);
SELECT '-- multiple roles in one command';
INSERT INTO test_01193_18429.table_6_470 VALUES 
CREATE TABLE d (x Enum8('abc' = 0, 'def' = 1, 'xyz' = 2)) ENGINE = Distributed(test_cluster_two_shards, currentDatabase(), t);
SELECT 'Running test stateless/01225_drop_dictionary_as_table.sql from pid=1705' 
DROP DATABASE IF EXISTS test_4wh61swd 
set engine_file_truncate_on_insert = 1;
SELECT 'Running test stateless/01277_alter_rename_column_constraint.sql from pid=1714' 
CREATE TABLE rmt (n UInt64, s String) ENGINE = ReplicatedMergeTree('{default_path_test}test_01148', '{default_name_test}') ORDER BY n;
SELECT k, groupArray(x) AS res1, toTypeName(res1), avg(x) AS res2, toTypeName(res2) FROM (SELECT 1 AS k, arrayJoin([1, NULL, 2]) AS x UNION ALL SELECT 2 AS k, CAST(arrayJoin([NULL, NULL]) AS Nullable(UInt8)) AS x) GROUP BY k ORDER BY k;
SELECT multiIf((number % 2) = 0, toUInt32(1), (number % 3) = 0, toInt64(2), toUInt32(3)) FROM system.numbers LIMIT 10;
select * from file('test_02167.TSV')
INSERT INTO test6 VALUES
CREATE DATABASE IF NOT EXISTS test_77m6kehp 
SELECT 'Running test stateless/01773_case_sensitive_version.sql from pid=1724' 
CREATE TABLE test_5F4772324A492A3F7E62794C40337861456D622B296D4521426A7479383E5B7E5757627C777C5F71(x UInt8) Engine=Memory;
CREATE TABLE test_5D594920442F3372746549734A2A503F724B74487E3B21233022682D3F352C37367A3D3040733830(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS sqllt;
TRUNCATE TABLE file
INSERT INTO r8 SELECT 71 % 10 = 8 ? 71 - 1 : 71
select round(1000 * ngramDistanceUTF8('ÃÂ°ÃÂ±ÃÂ²ÃÂ³ÃÂ´ÃÂµÃÂÃÂ¶ÃÂ·', materialize('ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ')))=round(1000 * ngramDistanceUTF8(materialize('ÃÂ°ÃÂ±ÃÂ²ÃÂ³ÃÂ´ÃÂµÃÂÃÂ¶ÃÂ·'), 'ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ')) from system.numbers limit 5;
INSERT INTO mt_compact SELECT toDate('2020-01-06'), number, toString(number) FROM numbers(1000);
CREATE TABLE test_373D705B5A2462592F4B6C25315F6730242D5C43457977752635296D642570657B413E2840285664(x UInt8) Engine=Memory;
OPTIMIZE TABLE buf;
CREATE TABLE adaptive_granularity_alter1 ( p Date, k UInt64, v1 UInt64, v2 Int64 ) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00926/adaptive_granularity_alter', '1') PARTITION BY toYYYYMM(p) ORDER BY k SETTINGS index_granularity_bytes = 110, min_index_granularity_bytes = 100, write_final_mark = 0;
SELECT count() == (SELECT count() FROM rdb_65555 WHERE key < 81944) FROM (SELECT number as k FROM numbers_mt(81944)) as t1 INNER JOIN rdb_65555 as rdb ON rdb.key == t1.k;
select round(1000 * ngramDistance('', materialize('abc')))=round(1000 * ngramDistance(materialize(''), 'abc')) from system.numbers limit 5;
SET max_block_size = 8192;
SELECT normalizeQueryKeepNames('');
CREATE TABLE test_306A46553346274C475061283E733C35213C337761622D344357623421487D5C597D5841412D5D76(x UInt8) Engine=Memory;
DROP TABLE cte1;
DROP DATABASE IF EXISTS test_gx8npkk5 
DROP DICTIONARY test_table_select
SELECT CASE WHEN 1 THEN [col2, 'bar'] WHEN 1 THEN ['foo', 'bar'] ELSE ['foo', 'bar'] END FROM multi_if_check;
SELECT t1.key, t2.key, t1.s, isNull(t2.s) FROM t1 ALL LEFT JOIN t2 ON t1.key == t2.key ORDER BY t1.key, t2.key, t1.s ;
CREATE TABLE test_01193_18429.table_9_584 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_2_545 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT x FROM b UNION ALL SELECT x FROM d;
CREATE TABLE test_01193_18429.table_3_600 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
alter table rmt drop column s;
CREATE TABLE test_01193_18429.table_2_998 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_8_841 VALUES 
SELECT mapContains(m, 'a') FROM t_map_contains;
INSERT INTO r7 SELECT 39
CREATE DATABASE IF NOT EXISTS test_6eyw500p 
INSERT INTO test_01193_18429.table_6_595 VALUES 
 SELECT name FROM system.functions WHERE NOT is_aggregate AND origin = 'System' AND alias_to = '' AND name NOT IN ( SELECT arrayJoin(used_functions) FROM system.query_log WHERE event_date >= yesterday() ) ORDER BY name 
drop table if exists merge_dist_01223;
CREATE DATABASE IF NOT EXISTS test_ubhg2mlg 
INSERT INTO test_01193_18429.table_3_432 VALUES 
CREATE TABLE pk_order (`d` DateTime, `a` Int32, `b` Int32) ENGINE = MergeTree PARTITION BY toDate(d) ORDER BY (d, a) SETTINGS index_granularity = 1, min_bytes_for_wide_part = 574746912, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 94, merge_max_block_size = 13672, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 2300618228, index_granularity_bytes = 12339527, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 87941, primary_key_compress_block_size = 34262
INSERT INTO test_01193_18429.table_2_522 VALUES 
SELECT multiIf((col1 % 2) = 0, ['foo', col3], (col1 % 3) = 0, ['foo', 'bar'], ['foo', col7]) FROM multi_if_check;
SELECT regexpExtract(NULL, NULL, NULL);
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 25514, 500 settings ignore_materialized_views_with_dropped_target_table=1
INSERT INTO test_01193_18429.table_9_385 VALUES 
ALTER TABLE concurrent_alter_column ADD COLUMN c442 DOUBLE;
SELECT countSubstringsCaseInsensitive(NULL);
DROP DATABASE IF EXISTS test_in16zed3 
SELECT YYYYMMDDToDate32(toDecimal64(20230911.1, 5));
CREATE TABLE test_6739295C2E2B68647D673772715934466A346C6738684C645B7230372B227E2B2C52467A73222F27(x UInt8) Engine=Memory;
SELECT arrayEnumerateDenseRanked([], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []);
INSERT INTO test_01193_18429.table_2_61 VALUES 
drop table data_01527;
DROP DATABASE IF EXISTS test_f7pyswbs 
SELECT a, b, c FROM decimal WHERE a = toInt64(42) AND b = toInt64(42) AND c = toInt64(42);
select hasSubsequenceCaseInsensitiveUTF8(materialize('ÃÂ´ÃÂ»ÃÂ ÃÂ¾ÃÂ½ÃÂ»ÃÂ°ÃÂ¹ÃÂ½ ÃÂ¾ÃÂ±ÃÂÃÂ°ÃÂ±ÃÂ¾ÃÂÃÂºÃÂ¸ ÃÂ°ÃÂ½ÃÂ°ÃÂ»ÃÂ¸ÃÂÃÂ¸ÃÂÃÂµÃÂÃÂºÃÂ¸ÃÂ ÃÂ·ÃÂ°ÃÂ¿ÃÂÃÂ¾ÃÂÃÂ¾ÃÂ² (OLAP)'), 'ÃÂÃÂ°ÃÂ±ÃÂ¾ÃÂÃÂ°');
CREATE TABLE test_6074686950337E442428736F202C48672B634E572F244B4B4570202A3E256E3223473073646E6F49(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_1_461 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
alter table data_01900_2 update s = 'bar_66' where 1;
CREATE TABLE test_01193_18429.table_2_892 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select [10, 0, 1, 1, 6, 1, 7, 6, 0, 0, 0, 2, 12, 0, 6, 0, 4, 8, 0, 0] = multiSearchAllPositionsCaseInsensitiveUTF8(materialize('ÃÂºÃÂ²ÃÂ ÃÂÃÂ½ÃÂÃÂ ÃÂ¹ÃÂ·ÃÂÃÂ¿ÃÂ¹ÃÂÃÂ¼ÃÂÃÂÃÂ ÃÂÃÂ·ÃÂ²ÃÂ³ÃÂ´ÃÂ¤'), ['ÃÂµÃÂÃÂ¹ÃÂÃÂÃÂ', 'ÃÂ ÃÂ³ÃÂºÃÂ¸ÃÂÃÂ¶ÃÂ¡ÃÂÃÂÃÂ¢ÃÂÃÂÃÂµÃÂ½ÃÂ©ÃÂÃÂÃÂÃÂ¡ÃÂºÃÂ¹', '', 'ÃÂÃÂ²ÃÂ ÃÂ±', 'ÃÂÃÂ ÃÂÃÂÃÂÃÂÃÂ¹ÃÂÃÂ¼ÃÂ¢ÃÂ¹ÃÂ¥ÃÂ¤ÃÂ', 'ÃÂº', 'ÃÂ ÃÂ¹ÃÂÃÂÃÂÃÂÃÂÃÂ¼ÃÂÃÂ¹', 'ÃÂ¦ÃÂ ', 'ÃÂ½ÃÂÃÂ»ÃÂ¨ÃÂ±ÃÂÃÂÃÂÃÂ¹ÃÂ¨ÃÂºÃÂ ÃÂ·ÃÂ°ÃÂ´ÃÂÃÂ', 'ÃÂÃÂÃÂÃÂ¨ÃÂ²ÃÂÃÂ¨ÃÂ¢ÃÂ³', 'ÃÂ¡ÃÂ¦ÃÂÃÂ¹ÃÂÃÂ°ÃÂ¼ÃÂ¦ÃÂÃÂÃÂ³ÃÂ»ÃÂ´ÃÂ¡ÃÂ·ÃÂÃÂ»ÃÂ¾ÃÂÃÂ¨ÃÂ°ÃÂÃÂ£ÃÂÃÂÃÂ´ÃÂ½ÃÂÃÂÃÂ²', 'ÃÂÃÂ ÃÂÃÂ½ÃÂÃÂ ÃÂ¹ÃÂÃÂÃÂÃÂ¹ÃÂ¸ÃÂ¼ÃÂ¢', 'ÃÂ¹ÃÂ¸ÃÂ¼ÃÂÃÂÃÂ¥ÃÂ¤ÃÂÃÂÃÂÃÂ', 'ÃÂ¶ÃÂÃÂÃÂÃÂÃÂ½ÃÂÃÂ°ÃÂ ÃÂÃÂÃÂºÃÂÃÂ£ÃÂ¦ÃÂÃÂ½ÃÂÃÂÃÂÃÂ ÃÂ½ÃÂ ÃÂ¶', 'ÃÂÃÂ¥ÃÂÃÂÃÂÃÂ', 'ÃÂÃÂ³ÃÂÃÂ¤ÃÂ´ÃÂÃÂÃÂÃÂ¢ÃÂÃÂ´ÃÂÃÂÃÂ¼ÃÂ¥ÃÂÃÂµÃÂÃÂ¹ÃÂ ÃÂÃÂ', 'ÃÂ±ÃÂ½ÃÂ¦ÃÂ ÃÂ', 'ÃÂÃÂÃÂµ', 'ÃÂ·ÃÂ³ÃÂ©ÃÂ¸ÃÂÃÂ¨', 'ÃÂÃÂ¥ÃÂ»ÃÂ¤ÃÂÃÂ»ÃÂ¥']) from system.numbers limit 10;
drop table if exists dist_background_insert_batch;
SELECT sum(number) FROM numbers(10);
alter table prewhere_column_missing add column arr Array(UInt64);
SELECT 'Parts before OPTIMIZE:';
INSERT INTO test_01193_18429.table_3_348 VALUES 
INSERT INTO test FORMAT BSONEachRow 
INSERT INTO test_01193_18429.table_6_353 VALUES 
DROP TABLE IF EXISTS null_table_buffer;
DROP DATABASE 01682_database_for_cache_dictionary;
CREATE TABLE test_3E3765676E68494A4E79494274653423225F70265542512A2766786D7A204E6242543D7E37574D5F(x UInt8) Engine=Memory;
insert into test_02241 SETTINGS input_format_parquet_case_insensitive_column_matching=false format Parquet
create table tp_1 (x Int32, y Int32, projection p (select x, y order by x)) engine = ReplicatedMergeTree('/clickhouse/tables/{shard}/01710_projection_fetch_' || currentDatabase(), '1_{replica}') order by y settings min_rows_for_wide_part = 4, min_bytes_for_wide_part = 32;
DROP ROLE IF EXISTS session_log_test_role;
CREATE TABLE compression_codec( id UInt64 CODEC(LZ4), data String CODEC(ZSTD), ddd Date CODEC(NONE), somenum Float64 CODEC(ZSTD(2)), somestr FixedString(3) CODEC(LZ4HC(7)), othernum Int64 CODEC(Delta) ) ENGINE = MergeTree() ORDER BY tuple();
SELECT '(forward, head, B->A->A)', id, sequenceNextNode('forward', 'head')(dt, action, 1, action = 'B', action = 'A', action = 'A') AS next_node FROM test_sequenceNextNode GROUP BY id ORDER BY id;
CREATE TABLE test_01193_18429.table_3_933 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_4_165 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select format('{}{}{}', 'a', toFixedString('b', 1), materialize(toFixedString('c', 1))) == 'abc';
DROP DATABASE IF EXISTS test_4s9exx46 
select 'constants:', tuple(NULL, []), byteSize(tuple(NULL, [])), tuple(toNullable(toFixedString('a',4)), []), byteSize(tuple(toNullable(toFixedString('a',4)), [])), tuple(toNullable(toFixedString('a',4)), [tuple(NULL, 'a')]), byteSize(tuple(toNullable(toFixedString('a',4)), [tuple(NULL, 'a')])), tuple(toFixedString('a',4), [tuple(NULL, 'a'), tuple(NULL, 'a')]), byteSize(tuple(toNullable(toFixedString('a',4)), [tuple(NULL, 'a'), tuple(NULL, 'a')]));
CREATE TABLE dict_db_01225.dict_data (key UInt64, val UInt64) Engine=Memory();
select count(), * from dist_01247 group by number;
INSERT INTO t64 values 
SELECT ifNull(toString(number), nullIf(toString(-number), '-3')) AS res, toTypeName(res) FROM system.numbers LIMIT 5;
DROP TABLE IF EXISTS tokenbf_tab;
CREATE TABLE test_6A7B4E5B4C284C57486F593F7C424B6B383D61713B606E3C5B3E793947615F4F7642497D582E3F29(x UInt8) Engine=Memory;
DESCRIBE (SELECT test_table_join_1.* APPLY toString, test_table_join_2.* APPLY toString FROM test_table_join_1 AS t1 INNER JOIN test_table_join_2 AS t2 ON t1.id = t2.id);
SELECT sparkbar(NULL);
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c0) AND (NOT c4) AND (NOT c0) AND c5 AND c0) OR ((NOT c0) AND c8 AND (NOT c0)) OR (c1 AND c0) OR ((NOT c2) AND c6 AND c2) OR (c7 AND (NOT c4) AND (NOT c8)) OR (c8) SETTINGS convert_query_to_cnf = 0
CREATE INDEX idx_tab2_0 ON tab2 (col3 DESC,col0,col1);
INSERT INTO numbers_squashed SELECT arrayJoin(range(10)) AS number UNION ALL SELECT arrayJoin(range(100)) UNION ALL SELECT arrayJoin(range(100));
DROP DATABASE IF EXISTS test_st1qn5ak 
select a from prewhere_alias prewhere d = 2;
select toFloat32OrNull('2023-01-01');
CREATE TABLE test_3A3E5F57205F26795C503E37736C333147232753643B686564206F6D74453B454A4B5C4240382130(x UInt8) Engine=Memory;
/* ddl_entry=query-0000000167 */ CREATE TABLE shard_0.demo_loan_01568 UUID '94125c50-f37a-4a04-bc2e-53638644c387' (`id` Int64 COMMENT 'id', `date_stat` Date COMMENT 'date of stat', `customer_no` String COMMENT 'customer no', `loan_principal` Float64 COMMENT 'loan principal') ENGINE = ReplacingMergeTree PARTITION BY toYYYYMM(date_stat) ORDER BY id
SELECT COUNT() FROM bloom_filter_types_test WHERE date_time = toDateTime('1970-01-01 02:00:01', 'Asia/Istanbul') SETTINGS max_rows_to_read = 6;
INSERT INTO test_01193_18429.table_8_725 VALUES 
CREATE role test_role_01999;
INSERT INTO test_02908_r1_280 SELECT rand64() FROM numbers(5);
SELECT 'Running test stateless/01283_max_threads_simple_query_optimization.sql from pid=1724' 
DROP TABLE IF EXISTS numbers_100k_log;
SELECT multiIf(1, [col2, col3], (col1 % 3) = 0, ['foo', col5], ['foo', col7]) FROM multi_if_check;
SELECT 'Insert Data';
SELECT v FROM replica1 ORDER BY v;
DROP DATABASE IF EXISTS test_atkiox37 
select '# countSubstringsCaseInsensitiveUTF8';
SELECT greatest(today(), yesterday() + 10) - today();
INSERT INTO test_01193_18429.table_7_281 VALUES 
INSERT INTO r10 SELECT 83 % 10 = 10 ? 83 - 1 : 83
CREATE TABLE test_01193_18429.table_9_110 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_2B5574767938205C737E3C7B66556A505C7E2A327C2E202E7D40797D7D454C25444F225A3D3B6F28(x UInt8) Engine=Memory;
CREATE TABLE test_3151257268394362756E313E407D767E37445C2F744C36597B5B473A202D20304665257A6E7B4267(x UInt8) Engine=Memory;
SELECT CASE WHEN (col1 % 2) = 0 THEN [col2, 'bar'] WHEN (col1 % 3) = 0 THEN [col4, 'bar'] ELSE [col6, col7] END FROM multi_if_check;
SELECT toDecimal128(1234567890.12345678901234567890, 20), JSONExtract('{"a":1234567890.12345678901234567890, "b":"test"}', 'Tuple(a Decimal(35,20), b LowCardinality(String))');
CREATE TABLE test_3B3C23703D334B20532757323F71522E6E3D40655928754E375838774A2657647C5F6870584F3174(x UInt8) Engine=Memory;
OPTIMIZE TABLE src_13
SELECT 'VALUES FROM DISK AND RAM BUFFER';
SELECT * FROM test_00616 ORDER BY ver;
CREATE TABLE test_2255255E4F336F6D7C3C353A61622976764A6D623D58282D22752E31382D544A55705F444D6F2D6F(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_iu4m874r 
DROP TABLE IF EXISTS prop_table;
DROP DATABASE IF EXISTS test_vw7mgc3g 
CREATE TABLE IF NOT EXISTS buf_00097 (a UInt8) ENGINE = Buffer(test_v3brwf2u, b, 1, 1, 1, 1, 1, 1, 1);
INSERT INTO test_01193_18429.table_7_167 VALUES 
CREATE TABLE test_02908_r2_196 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_196', 'r2') ORDER BY tuple()
SELECT sum(e) from tab_02473 PREWHERE b > 0 AND b <= 70 AND c > 0 AND c <= 72 AND d > 5 AND d <= 79 WHERE a == 0;
CREATE TABLE test_7A57656649507E606C252F2D2D6E36706F497C4A69585B4D416C6A724F4662486F4D653A7C706769(x UInt8) Engine=Memory;
INSERT INTO ttest VALUES 
SELECT a FROM t_fixed_prefix WHERE a = 1 ORDER BY a SETTINGS optimize_read_in_order = 1
CREATE TABLE test_764726513661754C64607C47695F423053632924327B20366467607B3761277C3E2D7A3A402A3475(x UInt8) Engine=Memory;
from aboba filter user_id > 101 group user_id ( aggregate { metrics = sum metric } );
SELECT id, u, s FROM t_sparse_full WHERE u != 0 ORDER BY u DESC LIMIT 3;
CREATE TABLE test_01193_18429.table_7_196 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT b, a FROM buffer_00126 ORDER BY a, b, c;
DROP DATABASE IF EXISTS test_jam0j4w2 
EXPLAIN SYNTAX SELECT a, b FROM (SELECT 1 AS a, 1 AS b) ANY FULL JOIN (SELECT 1 AS a) USING (a) WHERE b = 0;
DROP TABLE advertiser
EXPLAIN ESTIMATE SELECT 1 IN (SELECT joinGet(`02843_join`, 'value', materialize(1)));
CREATE DATABASE IF NOT EXISTS test_2v0ex65h 
SELECT '99' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ffff:ffff:f800:0')))
CREATE TABLE test_733A782E5641626E2F316A784D21362E4F57643A31207243332F50215B5261763A4F522962406E69(x UInt8) Engine=Memory;
desc file(data_02304.parquet);
OPTIMIZE TABLE replace_partition_dest2_2 FINAL;
CREATE TABLE test_02908_r3_140 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_140', 'r3') ORDER BY tuple()
select 2 = positionUTF8(materialize('ÃÂ°ÃÂ±ÃÂ²'), 'ÃÂ±ÃÂ²');
SELECT L2Norm(materialize((-12, 5)));
SELECT CASE WHEN (number % 2) = 0 THEN toUInt16(1) WHEN (number % 3) = 0 THEN toInt8(2) ELSE toFloat64(3) END FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_7ajad0d0 
INSERT INTO test_01193_18429.table_9_504 VALUES 
INSERT INTO test_01193_18429.table_8_344 VALUES 
select [6, 1, 1, 0, 0, 5, 1, 0, 8, 0, 5, 0, 2, 12, 0, 15, 0, 0] = multiSearchAllPositions(materialize('pyepgwainvmwekwhhqxxvzdjw'), ['w', '', '', 'gvvkllofjnxvcu', 'kmwwhboplctvzazcyfpxhwtaddfnhekei', 'gwainv', 'pyepgwain', 'ekpnogkzzmbpfynsunwqp', 'invmwe', 'hrxpiplfplqjsstuybksuteoz', 'gwa', 'akfpyduqrwosxcbdemtxrxvundrgse', 'yepgwainvmw', 'wekwhhqxxvzdjw', 'fyimzvedmyriubgoznmcav', 'whhq', 'ozxowbwdqfisuupyzaqynoprgsjhkwlum', 'vpoufrofekajksdp']) from system.numbers limit 10;
INSERT INTO r1 SELECT 93
SELECT concatAssumeInjective(NULL, NULL);
SELECT 1, -32769, 1 = -32769, 1 != -32769, 1 < -32769, 1 <= -32769, 1 > -32769, 1 >= -32769, -32769 = 1, -32769 != 1, -32769 < 1, -32769 <= 1, -32769 > 1, -32769 >= 1 , toUInt8(1) = toInt32(-32769), toUInt8(1) != toInt32(-32769), toUInt8(1) < toInt32(-32769), toUInt8(1) <= toInt32(-32769), toUInt8(1) > toInt32(-32769), toUInt8(1) >= toInt32(-32769), toInt32(-32769) = toUInt8(1), toInt32(-32769) != toUInt8(1), toInt32(-32769) < toUInt8(1), toInt32(-32769) <= toUInt8(1), toInt32(-32769) > toUInt8(1), toInt32(-32769) >= toUInt8(1) , toUInt8(1) = toInt64(-32769), toUInt8(1) != toInt64(-32769), toUInt8(1) < toInt64(-32769), toUInt8(1) <= toInt64(-32769), toUInt8(1) > toInt64(-32769), toUInt8(1) >= toInt64(-32769), toInt64(-32769) = toUInt8(1), toInt64(-32769) != toUInt8(1), toInt64(-32769) < toUInt8(1), toInt64(-32769) <= toUInt8(1), toInt64(-32769) > toUInt8(1), toInt64(-32769) >= toUInt8(1) , toInt8(1) = toInt32(-32769), toInt8(1) != toInt32(-32769), toInt8(1) < toInt32(-32769), toInt8(1) <= toInt32(-32769), toInt8(1) > toInt32(-32769), toInt8(1) >= toInt32(-32769), toInt32(-32769) = toInt8(1), toInt32(-32769) != toInt8(1), toInt32(-32769) < toInt8(1), toInt32(-32769) <= toInt8(1), toInt32(-32769) > toInt8(1), toInt32(-32769) >= toInt8(1) , toInt8(1) = toInt64(-32769), toInt8(1) != toInt64(-32769), toInt8(1) < toInt64(-32769), toInt8(1) <= toInt64(-32769), toInt8(1) > toInt64(-32769), toInt8(1) >= toInt64(-32769), toInt64(-32769) = toInt8(1), toInt64(-32769) != toInt8(1), toInt64(-32769) < toInt8(1), toInt64(-32769) <= toInt8(1), toInt64(-32769) > toInt8(1), toInt64(-32769) >= toInt8(1) , toUInt16(1) = toInt32(-32769), toUInt16(1) != toInt32(-32769), toUInt16(1) < toInt32(-32769), toUInt16(1) <= toInt32(-32769), toUInt16(1) > toInt32(-32769), toUInt16(1) >= toInt32(-32769), toInt32(-32769) = toUInt16(1), toInt32(-32769) != toUInt16(1), toInt32(-32769) < toUInt16(1), toInt32(-32769) <= toUInt16(1), toInt32(-32769) > toUInt16(1), toInt32(-32769) >= toUInt16(1) , toUInt16(1) = toInt64(-32769), toUInt16(1) != toInt64(-32769), toUInt16(1) < toInt64(-32769), toUInt16(1) <= toInt64(-32769), toUInt16(1) > toInt64(-32769), toUInt16(1) >= toInt64(-32769), toInt64(-32769) = toUInt16(1), toInt64(-32769) != toUInt16(1), toInt64(-32769) < toUInt16(1), toInt64(-32769) <= toUInt16(1), toInt64(-32769) > toUInt16(1), toInt64(-32769) >= toUInt16(1) , toInt16(1) = toInt32(-32769), toInt16(1) != toInt32(-32769), toInt16(1) < toInt32(-32769), toInt16(1) <= toInt32(-32769), toInt16(1) > toInt32(-32769), toInt16(1) >= toInt32(-32769), toInt32(-32769) = toInt16(1), toInt32(-32769) != toInt16(1), toInt32(-32769) < toInt16(1), toInt32(-32769) <= toInt16(1), toInt32(-32769) > toInt16(1), toInt32(-32769) >= toInt16(1) , toInt16(1) = toInt64(-32769), toInt16(1) != toInt64(-32769), toInt16(1) < toInt64(-32769), toInt16(1) <= toInt64(-32769), toInt16(1) > toInt64(-32769), toInt16(1) >= toInt64(-32769), toInt64(-32769) = toInt16(1), toInt64(-32769) != toInt16(1), toInt64(-32769) < toInt16(1), toInt64(-32769) <= toInt16(1), toInt64(-32769) > toInt16(1), toInt64(-32769) >= toInt16(1) , toUInt32(1) = toInt32(-32769), toUInt32(1) != toInt32(-32769), toUInt32(1) < toInt32(-32769), toUInt32(1) <= toInt32(-32769), toUInt32(1) > toInt32(-32769), toUInt32(1) >= toInt32(-32769), toInt32(-32769) = toUInt32(1), toInt32(-32769) != toUInt32(1), toInt32(-32769) < toUInt32(1), toInt32(-32769) <= toUInt32(1), toInt32(-32769) > toUInt32(1), toInt32(-32769) >= toUInt32(1) , toUInt32(1) = toInt64(-32769), toUInt32(1) != toInt64(-32769), toUInt32(1) < toInt64(-32769), toUInt32(1) <= toInt64(-32769), toUInt32(1) > toInt64(-32769), toUInt32(1) >= toInt64(-32769), toInt64(-32769) = toUInt32(1), toInt64(-32769) != toUInt32(1), toInt64(-32769) < toUInt32(1), toInt64(-32769) <= toUInt32(1), toInt64(-32769) > toUInt32(1), toInt64(-32769) >= toUInt32(1) , toInt32(1) = toInt32(-32769), toInt32(1) != toInt32(-32769), toInt32(1) < toInt32(-32769), toInt32(1) <= toInt32(-32769), toInt32(1) > toInt32(-32769), toInt32(1) >= toInt32(-32769), toInt32(-32769) = toInt32(1), toInt32(-32769) != toInt32(1), toInt32(-32769) < toInt32(1), toInt32(-32769) <= toInt32(1), toInt32(-32769) > toInt32(1), toInt32(-32769) >= toInt32(1) , toInt32(1) = toInt64(-32769), toInt32(1) != toInt64(-32769), toInt32(1) < toInt64(-32769), toInt32(1) <= toInt64(-32769), toInt32(1) > toInt64(-32769), toInt32(1) >= toInt64(-32769), toInt64(-32769) = toInt32(1), toInt64(-32769) != toInt32(1), toInt64(-32769) < toInt32(1), toInt64(-32769) <= toInt32(1), toInt64(-32769) > toInt32(1), toInt64(-32769) >= toInt32(1) , toUInt64(1) = toInt32(-32769), toUInt64(1) != toInt32(-32769), toUInt64(1) < toInt32(-32769), toUInt64(1) <= toInt32(-32769), toUInt64(1) > toInt32(-32769), toUInt64(1) >= toInt32(-32769), toInt32(-32769) = toUInt64(1), toInt32(-32769) != toUInt64(1), toInt32(-32769) < toUInt64(1), toInt32(-32769) <= toUInt64(1), toInt32(-32769) > toUInt64(1), toInt32(-32769) >= toUInt64(1) , toUInt64(1) = toInt64(-32769), toUInt64(1) != toInt64(-32769), toUInt64(1) < toInt64(-32769), toUInt64(1) <= toInt64(-32769), toUInt64(1) > toInt64(-32769), toUInt64(1) >= toInt64(-32769), toInt64(-32769) = toUInt64(1), toInt64(-32769) != toUInt64(1), toInt64(-32769) < toUInt64(1), toInt64(-32769) <= toUInt64(1), toInt64(-32769) > toUInt64(1), toInt64(-32769) >= toUInt64(1) , toInt64(1) = toInt32(-32769), toInt64(1) != toInt32(-32769), toInt64(1) < toInt32(-32769), toInt64(1) <= toInt32(-32769), toInt64(1) > toInt32(-32769), toInt64(1) >= toInt32(-32769), toInt32(-32769) = toInt64(1), toInt32(-32769) != toInt64(1), toInt32(-32769) < toInt64(1), toInt32(-32769) <= toInt64(1), toInt32(-32769) > toInt64(1), toInt32(-32769) >= toInt64(1) , toInt64(1) = toInt64(-32769), toInt64(1) != toInt64(-32769), toInt64(1) < toInt64(-32769), toInt64(1) <= toInt64(-32769), toInt64(1) > toInt64(-32769), toInt64(1) >= toInt64(-32769), toInt64(-32769) = toInt64(1), toInt64(-32769) != toInt64(1), toInt64(-32769) < toInt64(1), toInt64(-32769) <= toInt64(1), toInt64(-32769) > toInt64(1), toInt64(-32769) >= toInt64(1) 
CREATE TABLE test_3C3169604E2647773E7D796176582B75704A686821415452595A646D69205F4459557B2254575F61(x UInt8) Engine=Memory;
INSERT INTO clear_column1 (d) VALUES 
INSERT INTO test_01193_18429.table_9_728 VALUES 
SELECT visitParamExtractFloat(CAST('\0' AS Nullable(String)),CAST('\0' AS Nullable(String)));
SELECT 'Running test stateless/01323_bad_arg_in_arithmetic_operations.sql from pid=1715' 
INSERT INTO test_01193_18429.table_2_599 VALUES 
CREATE TABLE test_01193_18429.table_9_852 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_1_664 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 129, 65535, 129 = 65535, 129 != 65535, 129 < 65535, 129 <= 65535, 129 > 65535, 129 >= 65535, 65535 = 129, 65535 != 129, 65535 < 129, 65535 <= 129, 65535 > 129, 65535 >= 129 , toUInt8(129) = toUInt16(65535), toUInt8(129) != toUInt16(65535), toUInt8(129) < toUInt16(65535), toUInt8(129) <= toUInt16(65535), toUInt8(129) > toUInt16(65535), toUInt8(129) >= toUInt16(65535), toUInt16(65535) = toUInt8(129), toUInt16(65535) != toUInt8(129), toUInt16(65535) < toUInt8(129), toUInt16(65535) <= toUInt8(129), toUInt16(65535) > toUInt8(129), toUInt16(65535) >= toUInt8(129) , toUInt8(129) = toUInt32(65535), toUInt8(129) != toUInt32(65535), toUInt8(129) < toUInt32(65535), toUInt8(129) <= toUInt32(65535), toUInt8(129) > toUInt32(65535), toUInt8(129) >= toUInt32(65535), toUInt32(65535) = toUInt8(129), toUInt32(65535) != toUInt8(129), toUInt32(65535) < toUInt8(129), toUInt32(65535) <= toUInt8(129), toUInt32(65535) > toUInt8(129), toUInt32(65535) >= toUInt8(129) , toUInt8(129) = toInt32(65535), toUInt8(129) != toInt32(65535), toUInt8(129) < toInt32(65535), toUInt8(129) <= toInt32(65535), toUInt8(129) > toInt32(65535), toUInt8(129) >= toInt32(65535), toInt32(65535) = toUInt8(129), toInt32(65535) != toUInt8(129), toInt32(65535) < toUInt8(129), toInt32(65535) <= toUInt8(129), toInt32(65535) > toUInt8(129), toInt32(65535) >= toUInt8(129) , toUInt8(129) = toUInt64(65535), toUInt8(129) != toUInt64(65535), toUInt8(129) < toUInt64(65535), toUInt8(129) <= toUInt64(65535), toUInt8(129) > toUInt64(65535), toUInt8(129) >= toUInt64(65535), toUInt64(65535) = toUInt8(129), toUInt64(65535) != toUInt8(129), toUInt64(65535) < toUInt8(129), toUInt64(65535) <= toUInt8(129), toUInt64(65535) > toUInt8(129), toUInt64(65535) >= toUInt8(129) , toUInt8(129) = toInt64(65535), toUInt8(129) != toInt64(65535), toUInt8(129) < toInt64(65535), toUInt8(129) <= toInt64(65535), toUInt8(129) > toInt64(65535), toUInt8(129) >= toInt64(65535), toInt64(65535) = toUInt8(129), toInt64(65535) != toUInt8(129), toInt64(65535) < toUInt8(129), toInt64(65535) <= toUInt8(129), toInt64(65535) > toUInt8(129), toInt64(65535) >= toUInt8(129) , toUInt16(129) = toUInt16(65535), toUInt16(129) != toUInt16(65535), toUInt16(129) < toUInt16(65535), toUInt16(129) <= toUInt16(65535), toUInt16(129) > toUInt16(65535), toUInt16(129) >= toUInt16(65535), toUInt16(65535) = toUInt16(129), toUInt16(65535) != toUInt16(129), toUInt16(65535) < toUInt16(129), toUInt16(65535) <= toUInt16(129), toUInt16(65535) > toUInt16(129), toUInt16(65535) >= toUInt16(129) , toUInt16(129) = toUInt32(65535), toUInt16(129) != toUInt32(65535), toUInt16(129) < toUInt32(65535), toUInt16(129) <= toUInt32(65535), toUInt16(129) > toUInt32(65535), toUInt16(129) >= toUInt32(65535), toUInt32(65535) = toUInt16(129), toUInt32(65535) != toUInt16(129), toUInt32(65535) < toUInt16(129), toUInt32(65535) <= toUInt16(129), toUInt32(65535) > toUInt16(129), toUInt32(65535) >= toUInt16(129) , toUInt16(129) = toInt32(65535), toUInt16(129) != toInt32(65535), toUInt16(129) < toInt32(65535), toUInt16(129) <= toInt32(65535), toUInt16(129) > toInt32(65535), toUInt16(129) >= toInt32(65535), toInt32(65535) = toUInt16(129), toInt32(65535) != toUInt16(129), toInt32(65535) < toUInt16(129), toInt32(65535) <= toUInt16(129), toInt32(65535) > toUInt16(129), toInt32(65535) >= toUInt16(129) , toUInt16(129) = toUInt64(65535), toUInt16(129) != toUInt64(65535), toUInt16(129) < toUInt64(65535), toUInt16(129) <= toUInt64(65535), toUInt16(129) > toUInt64(65535), toUInt16(129) >= toUInt64(65535), toUInt64(65535) = toUInt16(129), toUInt64(65535) != toUInt16(129), toUInt64(65535) < toUInt16(129), toUInt64(65535) <= toUInt16(129), toUInt64(65535) > toUInt16(129), toUInt64(65535) >= toUInt16(129) , toUInt16(129) = toInt64(65535), toUInt16(129) != toInt64(65535), toUInt16(129) < toInt64(65535), toUInt16(129) <= toInt64(65535), toUInt16(129) > toInt64(65535), toUInt16(129) >= toInt64(65535), toInt64(65535) = toUInt16(129), toInt64(65535) != toUInt16(129), toInt64(65535) < toUInt16(129), toInt64(65535) <= toUInt16(129), toInt64(65535) > toUInt16(129), toInt64(65535) >= toUInt16(129) , toInt16(129) = toUInt16(65535), toInt16(129) != toUInt16(65535), toInt16(129) < toUInt16(65535), toInt16(129) <= toUInt16(65535), toInt16(129) > toUInt16(65535), toInt16(129) >= toUInt16(65535), toUInt16(65535) = toInt16(129), toUInt16(65535) != toInt16(129), toUInt16(65535) < toInt16(129), toUInt16(65535) <= toInt16(129), toUInt16(65535) > toInt16(129), toUInt16(65535) >= toInt16(129) , toInt16(129) = toUInt32(65535), toInt16(129) != toUInt32(65535), toInt16(129) < toUInt32(65535), toInt16(129) <= toUInt32(65535), toInt16(129) > toUInt32(65535), toInt16(129) >= toUInt32(65535), toUInt32(65535) = toInt16(129), toUInt32(65535) != toInt16(129), toUInt32(65535) < toInt16(129), toUInt32(65535) <= toInt16(129), toUInt32(65535) > toInt16(129), toUInt32(65535) >= toInt16(129) , toInt16(129) = toInt32(65535), toInt16(129) != toInt32(65535), toInt16(129) < toInt32(65535), toInt16(129) <= toInt32(65535), toInt16(129) > toInt32(65535), toInt16(129) >= toInt32(65535), toInt32(65535) = toInt16(129), toInt32(65535) != toInt16(129), toInt32(65535) < toInt16(129), toInt32(65535) <= toInt16(129), toInt32(65535) > toInt16(129), toInt32(65535) >= toInt16(129) , toInt16(129) = toUInt64(65535), toInt16(129) != toUInt64(65535), toInt16(129) < toUInt64(65535), toInt16(129) <= toUInt64(65535), toInt16(129) > toUInt64(65535), toInt16(129) >= toUInt64(65535), toUInt64(65535) = toInt16(129), toUInt64(65535) != toInt16(129), toUInt64(65535) < toInt16(129), toUInt64(65535) <= toInt16(129), toUInt64(65535) > toInt16(129), toUInt64(65535) >= toInt16(129) , toInt16(129) = toInt64(65535), toInt16(129) != toInt64(65535), toInt16(129) < toInt64(65535), toInt16(129) <= toInt64(65535), toInt16(129) > toInt64(65535), toInt16(129) >= toInt64(65535), toInt64(65535) = toInt16(129), toInt64(65535) != toInt16(129), toInt64(65535) < toInt16(129), toInt64(65535) <= toInt16(129), toInt64(65535) > toInt16(129), toInt64(65535) >= toInt16(129) , toUInt32(129) = toUInt16(65535), toUInt32(129) != toUInt16(65535), toUInt32(129) < toUInt16(65535), toUInt32(129) <= toUInt16(65535), toUInt32(129) > toUInt16(65535), toUInt32(129) >= toUInt16(65535), toUInt16(65535) = toUInt32(129), toUInt16(65535) != toUInt32(129), toUInt16(65535) < toUInt32(129), toUInt16(65535) <= toUInt32(129), toUInt16(65535) > toUInt32(129), toUInt16(65535) >= toUInt32(129) , toUInt32(129) = toUInt32(65535), toUInt32(129) != toUInt32(65535), toUInt32(129) < toUInt32(65535), toUInt32(129) <= toUInt32(65535), toUInt32(129) > toUInt32(65535), toUInt32(129) >= toUInt32(65535), toUInt32(65535) = toUInt32(129), toUInt32(65535) != toUInt32(129), toUInt32(65535) < toUInt32(129), toUInt32(65535) <= toUInt32(129), toUInt32(65535) > toUInt32(129), toUInt32(65535) >= toUInt32(129) , toUInt32(129) = toInt32(65535), toUInt32(129) != toInt32(65535), toUInt32(129) < toInt32(65535), toUInt32(129) <= toInt32(65535), toUInt32(129) > toInt32(65535), toUInt32(129) >= toInt32(65535), toInt32(65535) = toUInt32(129), toInt32(65535) != toUInt32(129), toInt32(65535) < toUInt32(129), toInt32(65535) <= toUInt32(129), toInt32(65535) > toUInt32(129), toInt32(65535) >= toUInt32(129) , toUInt32(129) = toUInt64(65535), toUInt32(129) != toUInt64(65535), toUInt32(129) < toUInt64(65535), toUInt32(129) <= toUInt64(65535), toUInt32(129) > toUInt64(65535), toUInt32(129) >= toUInt64(65535), toUInt64(65535) = toUInt32(129), toUInt64(65535) != toUInt32(129), toUInt64(65535) < toUInt32(129), toUInt64(65535) <= toUInt32(129), toUInt64(65535) > toUInt32(129), toUInt64(65535) >= toUInt32(129) , toUInt32(129) = toInt64(65535), toUInt32(129) != toInt64(65535), toUInt32(129) < toInt64(65535), toUInt32(129) <= toInt64(65535), toUInt32(129) > toInt64(65535), toUInt32(129) >= toInt64(65535), toInt64(65535) = toUInt32(129), toInt64(65535) != toUInt32(129), toInt64(65535) < toUInt32(129), toInt64(65535) <= toUInt32(129), toInt64(65535) > toUInt32(129), toInt64(65535) >= toUInt32(129) , toInt32(129) = toUInt16(65535), toInt32(129) != toUInt16(65535), toInt32(129) < toUInt16(65535), toInt32(129) <= toUInt16(65535), toInt32(129) > toUInt16(65535), toInt32(129) >= toUInt16(65535), toUInt16(65535) = toInt32(129), toUInt16(65535) != toInt32(129), toUInt16(65535) < toInt32(129), toUInt16(65535) <= toInt32(129), toUInt16(65535) > toInt32(129), toUInt16(65535) >= toInt32(129) , toInt32(129) = toUInt32(65535), toInt32(129) != toUInt32(65535), toInt32(129) < toUInt32(65535), toInt32(129) <= toUInt32(65535), toInt32(129) > toUInt32(65535), toInt32(129) >= toUInt32(65535), toUInt32(65535) = toInt32(129), toUInt32(65535) != toInt32(129), toUInt32(65535) < toInt32(129), toUInt32(65535) <= toInt32(129), toUInt32(65535) > toInt32(129), toUInt32(65535) >= toInt32(129) , toInt32(129) = toInt32(65535), toInt32(129) != toInt32(65535), toInt32(129) < toInt32(65535), toInt32(129) <= toInt32(65535), toInt32(129) > toInt32(65535), toInt32(129) >= toInt32(65535), toInt32(65535) = toInt32(129), toInt32(65535) != toInt32(129), toInt32(65535) < toInt32(129), toInt32(65535) <= toInt32(129), toInt32(65535) > toInt32(129), toInt32(65535) >= toInt32(129) , toInt32(129) = toUInt64(65535), toInt32(129) != toUInt64(65535), toInt32(129) < toUInt64(65535), toInt32(129) <= toUInt64(65535), toInt32(129) > toUInt64(65535), toInt32(129) >= toUInt64(65535), toUInt64(65535) = toInt32(129), toUInt64(65535) != toInt32(129), toUInt64(65535) < toInt32(129), toUInt64(65535) <= toInt32(129), toUInt64(65535) > toInt32(129), toUInt64(65535) >= toInt32(129) , toInt32(129) = toInt64(65535), toInt32(129) != toInt64(65535), toInt32(129) < toInt64(65535), toInt32(129) <= toInt64(65535), toInt32(129) > toInt64(65535), toInt32(129) >= toInt64(65535), toInt64(65535) = toInt32(129), toInt64(65535) != toInt32(129), toInt64(65535) < toInt32(129), toInt64(65535) <= toInt32(129), toInt64(65535) > toInt32(129), toInt64(65535) >= toInt32(129) , toUInt64(129) = toUInt16(65535), toUInt64(129) != toUInt16(65535), toUInt64(129) < toUInt16(65535), toUInt64(129) <= toUInt16(65535), toUInt64(129) > toUInt16(65535), toUInt64(129) >= toUInt16(65535), toUInt16(65535) = toUInt64(129), toUInt16(65535) != toUInt64(129), toUInt16(65535) < toUInt64(129), toUInt16(65535) <= toUInt64(129), toUInt16(65535) > toUInt64(129), toUInt16(65535) >= toUInt64(129) , toUInt64(129) = toUInt32(65535), toUInt64(129) != toUInt32(65535), toUInt64(129) < toUInt32(65535), toUInt64(129) <= toUInt32(65535), toUInt64(129) > toUInt32(65535), toUInt64(129) >= toUInt32(65535), toUInt32(65535) = toUInt64(129), toUInt32(65535) != toUInt64(129), toUInt32(65535) < toUInt64(129), toUInt32(65535) <= toUInt64(129), toUInt32(65535) > toUInt64(129), toUInt32(65535) >= toUInt64(129) , toUInt64(129) = toInt32(65535), toUInt64(129) != toInt32(65535), toUInt64(129) < toInt32(65535), toUInt64(129) <= toInt32(65535), toUInt64(129) > toInt32(65535), toUInt64(129) >= toInt32(65535), toInt32(65535) = toUInt64(129), toInt32(65535) != toUInt64(129), toInt32(65535) < toUInt64(129), toInt32(65535) <= toUInt64(129), toInt32(65535) > toUInt64(129), toInt32(65535) >= toUInt64(129) , toUInt64(129) = toUInt64(65535), toUInt64(129) != toUInt64(65535), toUInt64(129) < toUInt64(65535), toUInt64(129) <= toUInt64(65535), toUInt64(129) > toUInt64(65535), toUInt64(129) >= toUInt64(65535), toUInt64(65535) = toUInt64(129), toUInt64(65535) != toUInt64(129), toUInt64(65535) < toUInt64(129), toUInt64(65535) <= toUInt64(129), toUInt64(65535) > toUInt64(129), toUInt64(65535) >= toUInt64(129) , toUInt64(129) = toInt64(65535), toUInt64(129) != toInt64(65535), toUInt64(129) < toInt64(65535), toUInt64(129) <= toInt64(65535), toUInt64(129) > toInt64(65535), toUInt64(129) >= toInt64(65535), toInt64(65535) = toUInt64(129), toInt64(65535) != toUInt64(129), toInt64(65535) < toUInt64(129), toInt64(65535) <= toUInt64(129), toInt64(65535) > toUInt64(129), toInt64(65535) >= toUInt64(129) , toInt64(129) = toUInt16(65535), toInt64(129) != toUInt16(65535), toInt64(129) < toUInt16(65535), toInt64(129) <= toUInt16(65535), toInt64(129) > toUInt16(65535), toInt64(129) >= toUInt16(65535), toUInt16(65535) = toInt64(129), toUInt16(65535) != toInt64(129), toUInt16(65535) < toInt64(129), toUInt16(65535) <= toInt64(129), toUInt16(65535) > toInt64(129), toUInt16(65535) >= toInt64(129) , toInt64(129) = toUInt32(65535), toInt64(129) != toUInt32(65535), toInt64(129) < toUInt32(65535), toInt64(129) <= toUInt32(65535), toInt64(129) > toUInt32(65535), toInt64(129) >= toUInt32(65535), toUInt32(65535) = toInt64(129), toUInt32(65535) != toInt64(129), toUInt32(65535) < toInt64(129), toUInt32(65535) <= toInt64(129), toUInt32(65535) > toInt64(129), toUInt32(65535) >= toInt64(129) , toInt64(129) = toInt32(65535), toInt64(129) != toInt32(65535), toInt64(129) < toInt32(65535), toInt64(129) <= toInt32(65535), toInt64(129) > toInt32(65535), toInt64(129) >= toInt32(65535), toInt32(65535) = toInt64(129), toInt32(65535) != toInt64(129), toInt32(65535) < toInt64(129), toInt32(65535) <= toInt64(129), toInt32(65535) > toInt64(129), toInt32(65535) >= toInt64(129) , toInt64(129) = toUInt64(65535), toInt64(129) != toUInt64(65535), toInt64(129) < toUInt64(65535), toInt64(129) <= toUInt64(65535), toInt64(129) > toUInt64(65535), toInt64(129) >= toUInt64(65535), toUInt64(65535) = toInt64(129), toUInt64(65535) != toInt64(129), toUInt64(65535) < toInt64(129), toUInt64(65535) <= toInt64(129), toUInt64(65535) > toInt64(129), toUInt64(65535) >= toInt64(129) , toInt64(129) = toInt64(65535), toInt64(129) != toInt64(65535), toInt64(129) < toInt64(65535), toInt64(129) <= toInt64(65535), toInt64(129) > toInt64(65535), toInt64(129) >= toInt64(65535), toInt64(65535) = toInt64(129), toInt64(65535) != toInt64(129), toInt64(65535) < toInt64(129), toInt64(65535) <= toInt64(129), toInt64(65535) > toInt64(129), toInt64(65535) >= toInt64(129) 
SELECT multiIf(1, col2, 1, col3, 'baz') FROM multi_if_check;
SELECT count(), min(id), max(id), avg(id) FROM test2_d SETTINGS allow_experimental_parallel_reading_from_replicas = 2, max_parallel_replicas = 3, prefer_localhost_replica = 0, parallel_replicas_for_non_replicated_merge_tree=1;
INSERT INTO src_15 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 58
SELECT '2023-10-23' - INTERVAL 1 NANOSECOND, '2023-10-23 12:34:56.123' - INTERVAL 1 NANOSECOND;
RENAME TABLE test1 TO test_tmp, test2 TO test1, test_tmp TO test2
INSERT INTO test_01193_18429.table_6_730 VALUES 
DROP DATABASE IF EXISTS test_9l2822ul 
SELECT '24' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ff80::')))
CREATE DATABASE IF NOT EXISTS test_w88mxwo3 
DROP DATABASE IF EXISTS test_jbueva8g 
INSERT INTO test_02908_r1_8 SELECT rand64() FROM numbers(5);
DROP TABLE IF EXISTS table_to_drop;
SELECT count(), min(id) FROM t_mutations_subcolumns;
CREATE TABLE alter_column(x UInt32, y Int32) ENGINE MergeTree PARTITION BY x ORDER BY x;
alter table many_mutations delete where y = 829 * 2 settings mutations_sync = 0;
CREATE TABLE src (k UInt64, s FixedString(11)) ENGINE = Memory;
SELECT dateDiff('second', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), materialize(toDateTime64('1927-01-01 00:00:10', 3, 'UTC')));
CREATE TABLE join_inner_table__fuzz_1 (`id` UUID, `key` Nullable(Date), `number` Int64, `value1` LowCardinality(String), `value2` LowCardinality(String), `time` Int128) ENGINE = MergeTree ORDER BY (id, number, key) SETTINGS allow_nullable_key = 1, index_granularity = 9474, min_bytes_for_wide_part = 19548938, ratio_of_defaults_for_sparse_serialization = 0.06768563389778137, replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 15934, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 94, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 20788010, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 66124, primary_key_compress_block_size = 77519
CREATE TABLE test_295769255F5F68202934612E362F3925694879375E3B3A6E604E49542A4433654E6E46746B583A35(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_lhyx01jd 
SELECT 'Running test stateless/01024__getScalar.sql from pid=1713' 
select b from (select 1 as a, 42 as c) js1 any left join (select 2 as b, 2 as b, 42 as c) js2 using c;
SELECT 'Flat dictionary';
WITH [1, 2, 3] AS constant_array SELECT id, value, value_1 FROM test_table ARRAY JOIN constant_array AS value_1;
SELECT 'Running test stateless/02265_rename_join_ordinary_to_atomic.sql from pid=1705' 
SELECT count() FROM system.parts WHERE active AND database='test_6d2x9kvl' AND table='optimize_me_finally'
DROP DATABASE IF EXISTS test_02k6derd 
EXPLAIN SYNTAX CREATE TABLE t (x varchar(255) COLLATE binary NOT NULL) ENGINE=Memory;
CREATE TABLE test_2723277340217E73255572397B775F532A4A306F5C637C5A2430272C275C463D5B5B6D7173266047(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_7_803 VALUES 
INSERT INTO test_01193_18429.table_5_348 VALUES 
CREATE TABLE test_01193_18429.table_3_963 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select format('{}{}{}', toFixedString('a', 1), 'b', materialize(toFixedString('c', 1))) == 'abc' from system.numbers limit 5;
CREATE TABLE test_01193_18429.table_8_486 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP DATABASE IF EXISTS test_krjc8p95 
select * from numbers(10) as t any join join on t.number=join.n order by n;
CREATE TABLE test_343A513760663C644B6F3222593C6323403336214A5D543C7A5F386B2A4354592F414F20524E767A(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_8_145 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select 1, arraySort(groupArray(n)) from rmt2;
select uniqExact(_part), count() from xMM where d >= '2020-09-01 00:00:00' and d < '2020-10-01 00:00:00' and a<>3;
SELECT regionToCountry(NULL, NULL);
select variantElement((number % 2 ? NULL : number)::Variant(String, UInt64), 'UInt64') from numbers(4);
CREATE TABLE test_01193_18429.table_1_632 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
drop table if exists tab_00484;
CREATE TABLE test_5B624A354A405853386E5C535740352C5B312C2E67522B62622C50246C337A7E732D2B6A40484B59(x UInt8) Engine=Memory;
CREATE TABLE test_67242C597071403931272C49664D593A4B2953342E615349636C2D583A7A24546A42462943774E4C(x UInt8) Engine=Memory;
select 'quarter', date_diff('quarter', toDateTime64('1969-12-25 10:00:00.000', 3), toDateTime64('1970-01-05 10:00:00.000', 3));
select arrayFilter(x -> x % 2 == 0, arr) from lc_lambda;
CREATE INDEX idx_tab3_0 ON tab3 (col0 DESC,col1);
INSERT INTO mt VALUES /* (20, 2) */ 
CREATE TABLE test_01193_18429.table_9_421 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP DATABASE IF EXISTS test_e4xidt1o 
SELECT * FROM ((SELECT * FROM table1 ORDER BY number DESC) UNION ALL (SELECT * FROM table2 ORDER BY number DESC)) ORDER BY number DESC;
CREATE DATABASE IF NOT EXISTS test_ee683tgg 
EXPLAIN SYNTAX SELECT number FROM numbers(3) ORDER BY toFloat32(toFloat64(number));
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (110 < 86 AND 56 > 0 ? 110 : 0)), throwIf(last != (110 < 86 AND 56 > 0 ? least(86 - 1, 110 + 56 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(86) LIMIT 110, 56);
INSERT INTO test_01193_18429.table_6_196 VALUES 
SELECT a, b, c, d FROM t_fixed_prefix ORDER BY a, b, c, d SETTINGS optimize_read_in_order = 0
CREATE DATABASE IF NOT EXISTS test_ciuh5h8z 
INSERT INTO numbers_squashed SELECT arrayJoin(range(10)) AS number UNION ALL SELECT arrayJoin(range(100)) UNION ALL SELECT arrayJoin(range(10));
DROP DATABASE IF EXISTS test_njoc9re0 
SELECT t1.id, test_table_join_1.id, t1.value, test_table_join_1.value, t2.id, test_table_join_2.id, t2.value, test_table_join_2.value, t3.id, test_table_join_3.id, t3.value, test_table_join_3.value FROM test_table_join_1 AS t1 RIGHT JOIN test_table_join_2 AS t2 ON test_table_join_1.id = test_table_join_2.id RIGHT JOIN test_table_join_3 AS t3 ON test_table_join_2.id = test_table_join_3.id;
CREATE TABLE test_467B224978786E6869257A66535B582B5A49214046363926382D46686C59755D53476B5C584D2158(x UInt8) Engine=Memory;
CREATE TABLE test_78333256267825404C5A6042412E766F66395E7A2D4322475C6355446D55323D60544261255D3924(x UInt8) Engine=Memory;
INSERT INTO r7 SELECT 71
insert into t_avro_7 select number, 'str' from numbers(1000) settings engine_file_truncate_on_insert=1
SELECT id, any(value1), any(value2) FROM test_table_nullable_float_values GROUP BY id ORDER BY id;
WITH map('a', 2, 'b', NULL) AS m SELECT m[toNullable('a')], m[toNullable('b')], m[toNullable('c')];
DROP TABLE 01914_db.table_1;
select toStartOfQuarter(toDateTime(0, 'America/Los_Angeles'));
SELECT COUNT() FROM bloom_filter_array_lc_null_types_test WHERE has(u8, NULL);
CREATE TABLE test_01193_18429.table_1_798 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE IF NOT EXISTS test_01444.t27280 (`x` UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 49736, min_bytes_for_wide_part = 645103364, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 6, merge_max_block_size = 15200, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 21360504, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75390, primary_key_compress_block_size = 98921
select toDateTime(x, 'Asia/Istanbul') from values('x Nullable(String)', '2020-12-24 01:02:03', NULL, '0000-00-00 00:00:00', '');
DROP DATABASE IF EXISTS test_fwctyzuu 
select (date '2001-10-01' - date '2001-09-28') x, toTypeName(x);
CREATE TABLE test_3F3D686853245B556B784F4A6833495A664A382530405E6A236C7A77515143627B4B674779603F53(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_2_529 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP TABLE t_nested_modify;
create table tt (x UInt32, y UInt32) engine = MergeTree order by x SETTINGS ratio_of_defaults_for_sparse_serialization = 1
SELECT 'Running test stateless/02158_explain_ast_alter_commands.sh from pid=1713' 
CREATE DATABASE IF NOT EXISTS test_oydvpef2 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (98 < 92 AND 48 > 0 ? 98 : 0)), throwIf(last != (98 < 92 AND 48 > 0 ? least(92 - 1, 98 + 48 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(92) LIMIT 98, 48);
CREATE TABLE test_01193_18429.table_9_502 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/00483_reading_from_array_structure.sql from pid=1718' 
CREATE TABLE dtest ( `a` Decimal(18, 0), `b` Decimal(18, 1), `c` Decimal(36, 0) ) ENGINE = Memory;
SELECT 'Running test stateless/01664_ntoa_aton_mysql_compatibility.sql from pid=1722' 
SELECT has(materialize([1, 2, 3]), 3.0);
select number, -(number - 2) * 2 as offset, neighbor(number, offset) from numbers(6);
SELECT '46' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:fffc::')))
INSERT INTO test_01193_18429.table_5_663 VALUES 
DETACH TABLE comment_test_table SYNC;
SELECT count() FROM t_02848_mt1 WHERE k = 3 AND notEmpty(v);
SELECT 'Running test stateless/01019_alter_materialized_view_atomic.sh from pid=1713' 
select sipHash128ReferenceKeyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54)) == sipHash128Reference(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54));
DROP TABLE IF EXISTS test_00974;
INSERT INTO for_subquery VALUES 
INSERT INTO replacing_00155 (x, v) SELECT number AS x, toUInt64(number % 3 == 0) FROM system.numbers LIMIT 8191
SELECT count() FROM t_cnf_fuzz WHERE (c8 AND (NOT c0) AND c9 AND c8 AND c6) OR (c3 AND c5 AND c9 AND c1) OR (c5 AND c4 AND c4 AND c3) OR ((NOT c0) AND c6 AND (NOT c7) AND c9) OR ((NOT c9) AND c5 AND (NOT c9) AND (NOT c2)) OR ((NOT c6) AND (NOT c3) AND (NOT c6)) SETTINGS convert_query_to_cnf = 0
SELECT intDiv(toDecimal256(4.4, 2), toDecimal256(2.2, 2));
SELECT materialize('Hello') LIKE '_%';
CREATE DATABASE IF NOT EXISTS test_cx54o1xd 
SELECT 'Running test stateless/00430_https_server.sh from pid=1724' 
SELECT count() FROM (SELECT * FROM system.numbers LIMIT 1000) WHERE 1 IN (SELECT 0 WHERE 0) FORMAT JSON;
CREATE DATABASE IF NOT EXISTS test_zlfc3h85 
SELECT 'K=18';
CREATE TABLE join_test (id UInt16, num Array(UInt16)) engine = Join(ANY, LEFT, id);
DROP DATABASE IF EXISTS test_v3ul6psr 
select -16 as offset, 16 as length, toFixedString('Hello', 6) as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
CREATE TABLE test_632D7640372867742353333D6A284A532E514F38315F464F634E275E665C2B5A5267706E486B563A(x UInt8) Engine=Memory;
SELECT 255, 128, 255 = 128, 255 != 128, 255 < 128, 255 <= 128, 255 > 128, 255 >= 128, 128 = 255, 128 != 255, 128 < 255, 128 <= 255, 128 > 255, 128 >= 255 , toUInt8(255) = toUInt8(128), toUInt8(255) != toUInt8(128), toUInt8(255) < toUInt8(128), toUInt8(255) <= toUInt8(128), toUInt8(255) > toUInt8(128), toUInt8(255) >= toUInt8(128), toUInt8(128) = toUInt8(255), toUInt8(128) != toUInt8(255), toUInt8(128) < toUInt8(255), toUInt8(128) <= toUInt8(255), toUInt8(128) > toUInt8(255), toUInt8(128) >= toUInt8(255) , toUInt8(255) = toUInt16(128), toUInt8(255) != toUInt16(128), toUInt8(255) < toUInt16(128), toUInt8(255) <= toUInt16(128), toUInt8(255) > toUInt16(128), toUInt8(255) >= toUInt16(128), toUInt16(128) = toUInt8(255), toUInt16(128) != toUInt8(255), toUInt16(128) < toUInt8(255), toUInt16(128) <= toUInt8(255), toUInt16(128) > toUInt8(255), toUInt16(128) >= toUInt8(255) , toUInt8(255) = toInt16(128), toUInt8(255) != toInt16(128), toUInt8(255) < toInt16(128), toUInt8(255) <= toInt16(128), toUInt8(255) > toInt16(128), toUInt8(255) >= toInt16(128), toInt16(128) = toUInt8(255), toInt16(128) != toUInt8(255), toInt16(128) < toUInt8(255), toInt16(128) <= toUInt8(255), toInt16(128) > toUInt8(255), toInt16(128) >= toUInt8(255) , toUInt8(255) = toUInt32(128), toUInt8(255) != toUInt32(128), toUInt8(255) < toUInt32(128), toUInt8(255) <= toUInt32(128), toUInt8(255) > toUInt32(128), toUInt8(255) >= toUInt32(128), toUInt32(128) = toUInt8(255), toUInt32(128) != toUInt8(255), toUInt32(128) < toUInt8(255), toUInt32(128) <= toUInt8(255), toUInt32(128) > toUInt8(255), toUInt32(128) >= toUInt8(255) , toUInt8(255) = toInt32(128), toUInt8(255) != toInt32(128), toUInt8(255) < toInt32(128), toUInt8(255) <= toInt32(128), toUInt8(255) > toInt32(128), toUInt8(255) >= toInt32(128), toInt32(128) = toUInt8(255), toInt32(128) != toUInt8(255), toInt32(128) < toUInt8(255), toInt32(128) <= toUInt8(255), toInt32(128) > toUInt8(255), toInt32(128) >= toUInt8(255) , toUInt8(255) = toUInt64(128), toUInt8(255) != toUInt64(128), toUInt8(255) < toUInt64(128), toUInt8(255) <= toUInt64(128), toUInt8(255) > toUInt64(128), toUInt8(255) >= toUInt64(128), toUInt64(128) = toUInt8(255), toUInt64(128) != toUInt8(255), toUInt64(128) < toUInt8(255), toUInt64(128) <= toUInt8(255), toUInt64(128) > toUInt8(255), toUInt64(128) >= toUInt8(255) , toUInt8(255) = toInt64(128), toUInt8(255) != toInt64(128), toUInt8(255) < toInt64(128), toUInt8(255) <= toInt64(128), toUInt8(255) > toInt64(128), toUInt8(255) >= toInt64(128), toInt64(128) = toUInt8(255), toInt64(128) != toUInt8(255), toInt64(128) < toUInt8(255), toInt64(128) <= toUInt8(255), toInt64(128) > toUInt8(255), toInt64(128) >= toUInt8(255) , toUInt16(255) = toUInt8(128), toUInt16(255) != toUInt8(128), toUInt16(255) < toUInt8(128), toUInt16(255) <= toUInt8(128), toUInt16(255) > toUInt8(128), toUInt16(255) >= toUInt8(128), toUInt8(128) = toUInt16(255), toUInt8(128) != toUInt16(255), toUInt8(128) < toUInt16(255), toUInt8(128) <= toUInt16(255), toUInt8(128) > toUInt16(255), toUInt8(128) >= toUInt16(255) , toUInt16(255) = toUInt16(128), toUInt16(255) != toUInt16(128), toUInt16(255) < toUInt16(128), toUInt16(255) <= toUInt16(128), toUInt16(255) > toUInt16(128), toUInt16(255) >= toUInt16(128), toUInt16(128) = toUInt16(255), toUInt16(128) != toUInt16(255), toUInt16(128) < toUInt16(255), toUInt16(128) <= toUInt16(255), toUInt16(128) > toUInt16(255), toUInt16(128) >= toUInt16(255) , toUInt16(255) = toInt16(128), toUInt16(255) != toInt16(128), toUInt16(255) < toInt16(128), toUInt16(255) <= toInt16(128), toUInt16(255) > toInt16(128), toUInt16(255) >= toInt16(128), toInt16(128) = toUInt16(255), toInt16(128) != toUInt16(255), toInt16(128) < toUInt16(255), toInt16(128) <= toUInt16(255), toInt16(128) > toUInt16(255), toInt16(128) >= toUInt16(255) , toUInt16(255) = toUInt32(128), toUInt16(255) != toUInt32(128), toUInt16(255) < toUInt32(128), toUInt16(255) <= toUInt32(128), toUInt16(255) > toUInt32(128), toUInt16(255) >= toUInt32(128), toUInt32(128) = toUInt16(255), toUInt32(128) != toUInt16(255), toUInt32(128) < toUInt16(255), toUInt32(128) <= toUInt16(255), toUInt32(128) > toUInt16(255), toUInt32(128) >= toUInt16(255) , toUInt16(255) = toInt32(128), toUInt16(255) != toInt32(128), toUInt16(255) < toInt32(128), toUInt16(255) <= toInt32(128), toUInt16(255) > toInt32(128), toUInt16(255) >= toInt32(128), toInt32(128) = toUInt16(255), toInt32(128) != toUInt16(255), toInt32(128) < toUInt16(255), toInt32(128) <= toUInt16(255), toInt32(128) > toUInt16(255), toInt32(128) >= toUInt16(255) , toUInt16(255) = toUInt64(128), toUInt16(255) != toUInt64(128), toUInt16(255) < toUInt64(128), toUInt16(255) <= toUInt64(128), toUInt16(255) > toUInt64(128), toUInt16(255) >= toUInt64(128), toUInt64(128) = toUInt16(255), toUInt64(128) != toUInt16(255), toUInt64(128) < toUInt16(255), toUInt64(128) <= toUInt16(255), toUInt64(128) > toUInt16(255), toUInt64(128) >= toUInt16(255) , toUInt16(255) = toInt64(128), toUInt16(255) != toInt64(128), toUInt16(255) < toInt64(128), toUInt16(255) <= toInt64(128), toUInt16(255) > toInt64(128), toUInt16(255) >= toInt64(128), toInt64(128) = toUInt16(255), toInt64(128) != toUInt16(255), toInt64(128) < toUInt16(255), toInt64(128) <= toUInt16(255), toInt64(128) > toUInt16(255), toInt64(128) >= toUInt16(255) , toInt16(255) = toUInt8(128), toInt16(255) != toUInt8(128), toInt16(255) < toUInt8(128), toInt16(255) <= toUInt8(128), toInt16(255) > toUInt8(128), toInt16(255) >= toUInt8(128), toUInt8(128) = toInt16(255), toUInt8(128) != toInt16(255), toUInt8(128) < toInt16(255), toUInt8(128) <= toInt16(255), toUInt8(128) > toInt16(255), toUInt8(128) >= toInt16(255) , toInt16(255) = toUInt16(128), toInt16(255) != toUInt16(128), toInt16(255) < toUInt16(128), toInt16(255) <= toUInt16(128), toInt16(255) > toUInt16(128), toInt16(255) >= toUInt16(128), toUInt16(128) = toInt16(255), toUInt16(128) != toInt16(255), toUInt16(128) < toInt16(255), toUInt16(128) <= toInt16(255), toUInt16(128) > toInt16(255), toUInt16(128) >= toInt16(255) , toInt16(255) = toInt16(128), toInt16(255) != toInt16(128), toInt16(255) < toInt16(128), toInt16(255) <= toInt16(128), toInt16(255) > toInt16(128), toInt16(255) >= toInt16(128), toInt16(128) = toInt16(255), toInt16(128) != toInt16(255), toInt16(128) < toInt16(255), toInt16(128) <= toInt16(255), toInt16(128) > toInt16(255), toInt16(128) >= toInt16(255) , toInt16(255) = toUInt32(128), toInt16(255) != toUInt32(128), toInt16(255) < toUInt32(128), toInt16(255) <= toUInt32(128), toInt16(255) > toUInt32(128), toInt16(255) >= toUInt32(128), toUInt32(128) = toInt16(255), toUInt32(128) != toInt16(255), toUInt32(128) < toInt16(255), toUInt32(128) <= toInt16(255), toUInt32(128) > toInt16(255), toUInt32(128) >= toInt16(255) , toInt16(255) = toInt32(128), toInt16(255) != toInt32(128), toInt16(255) < toInt32(128), toInt16(255) <= toInt32(128), toInt16(255) > toInt32(128), toInt16(255) >= toInt32(128), toInt32(128) = toInt16(255), toInt32(128) != toInt16(255), toInt32(128) < toInt16(255), toInt32(128) <= toInt16(255), toInt32(128) > toInt16(255), toInt32(128) >= toInt16(255) , toInt16(255) = toUInt64(128), toInt16(255) != toUInt64(128), toInt16(255) < toUInt64(128), toInt16(255) <= toUInt64(128), toInt16(255) > toUInt64(128), toInt16(255) >= toUInt64(128), toUInt64(128) = toInt16(255), toUInt64(128) != toInt16(255), toUInt64(128) < toInt16(255), toUInt64(128) <= toInt16(255), toUInt64(128) > toInt16(255), toUInt64(128) >= toInt16(255) , toInt16(255) = toInt64(128), toInt16(255) != toInt64(128), toInt16(255) < toInt64(128), toInt16(255) <= toInt64(128), toInt16(255) > toInt64(128), toInt16(255) >= toInt64(128), toInt64(128) = toInt16(255), toInt64(128) != toInt16(255), toInt64(128) < toInt16(255), toInt64(128) <= toInt16(255), toInt64(128) > toInt16(255), toInt64(128) >= toInt16(255) , toUInt32(255) = toUInt8(128), toUInt32(255) != toUInt8(128), toUInt32(255) < toUInt8(128), toUInt32(255) <= toUInt8(128), toUInt32(255) > toUInt8(128), toUInt32(255) >= toUInt8(128), toUInt8(128) = toUInt32(255), toUInt8(128) != toUInt32(255), toUInt8(128) < toUInt32(255), toUInt8(128) <= toUInt32(255), toUInt8(128) > toUInt32(255), toUInt8(128) >= toUInt32(255) , toUInt32(255) = toUInt16(128), toUInt32(255) != toUInt16(128), toUInt32(255) < toUInt16(128), toUInt32(255) <= toUInt16(128), toUInt32(255) > toUInt16(128), toUInt32(255) >= toUInt16(128), toUInt16(128) = toUInt32(255), toUInt16(128) != toUInt32(255), toUInt16(128) < toUInt32(255), toUInt16(128) <= toUInt32(255), toUInt16(128) > toUInt32(255), toUInt16(128) >= toUInt32(255) , toUInt32(255) = toInt16(128), toUInt32(255) != toInt16(128), toUInt32(255) < toInt16(128), toUInt32(255) <= toInt16(128), toUInt32(255) > toInt16(128), toUInt32(255) >= toInt16(128), toInt16(128) = toUInt32(255), toInt16(128) != toUInt32(255), toInt16(128) < toUInt32(255), toInt16(128) <= toUInt32(255), toInt16(128) > toUInt32(255), toInt16(128) >= toUInt32(255) , toUInt32(255) = toUInt32(128), toUInt32(255) != toUInt32(128), toUInt32(255) < toUInt32(128), toUInt32(255) <= toUInt32(128), toUInt32(255) > toUInt32(128), toUInt32(255) >= toUInt32(128), toUInt32(128) = toUInt32(255), toUInt32(128) != toUInt32(255), toUInt32(128) < toUInt32(255), toUInt32(128) <= toUInt32(255), toUInt32(128) > toUInt32(255), toUInt32(128) >= toUInt32(255) , toUInt32(255) = toInt32(128), toUInt32(255) != toInt32(128), toUInt32(255) < toInt32(128), toUInt32(255) <= toInt32(128), toUInt32(255) > toInt32(128), toUInt32(255) >= toInt32(128), toInt32(128) = toUInt32(255), toInt32(128) != toUInt32(255), toInt32(128) < toUInt32(255), toInt32(128) <= toUInt32(255), toInt32(128) > toUInt32(255), toInt32(128) >= toUInt32(255) , toUInt32(255) = toUInt64(128), toUInt32(255) != toUInt64(128), toUInt32(255) < toUInt64(128), toUInt32(255) <= toUInt64(128), toUInt32(255) > toUInt64(128), toUInt32(255) >= toUInt64(128), toUInt64(128) = toUInt32(255), toUInt64(128) != toUInt32(255), toUInt64(128) < toUInt32(255), toUInt64(128) <= toUInt32(255), toUInt64(128) > toUInt32(255), toUInt64(128) >= toUInt32(255) , toUInt32(255) = toInt64(128), toUInt32(255) != toInt64(128), toUInt32(255) < toInt64(128), toUInt32(255) <= toInt64(128), toUInt32(255) > toInt64(128), toUInt32(255) >= toInt64(128), toInt64(128) = toUInt32(255), toInt64(128) != toUInt32(255), toInt64(128) < toUInt32(255), toInt64(128) <= toUInt32(255), toInt64(128) > toUInt32(255), toInt64(128) >= toUInt32(255) , toInt32(255) = toUInt8(128), toInt32(255) != toUInt8(128), toInt32(255) < toUInt8(128), toInt32(255) <= toUInt8(128), toInt32(255) > toUInt8(128), toInt32(255) >= toUInt8(128), toUInt8(128) = toInt32(255), toUInt8(128) != toInt32(255), toUInt8(128) < toInt32(255), toUInt8(128) <= toInt32(255), toUInt8(128) > toInt32(255), toUInt8(128) >= toInt32(255) , toInt32(255) = toUInt16(128), toInt32(255) != toUInt16(128), toInt32(255) < toUInt16(128), toInt32(255) <= toUInt16(128), toInt32(255) > toUInt16(128), toInt32(255) >= toUInt16(128), toUInt16(128) = toInt32(255), toUInt16(128) != toInt32(255), toUInt16(128) < toInt32(255), toUInt16(128) <= toInt32(255), toUInt16(128) > toInt32(255), toUInt16(128) >= toInt32(255) , toInt32(255) = toInt16(128), toInt32(255) != toInt16(128), toInt32(255) < toInt16(128), toInt32(255) <= toInt16(128), toInt32(255) > toInt16(128), toInt32(255) >= toInt16(128), toInt16(128) = toInt32(255), toInt16(128) != toInt32(255), toInt16(128) < toInt32(255), toInt16(128) <= toInt32(255), toInt16(128) > toInt32(255), toInt16(128) >= toInt32(255) , toInt32(255) = toUInt32(128), toInt32(255) != toUInt32(128), toInt32(255) < toUInt32(128), toInt32(255) <= toUInt32(128), toInt32(255) > toUInt32(128), toInt32(255) >= toUInt32(128), toUInt32(128) = toInt32(255), toUInt32(128) != toInt32(255), toUInt32(128) < toInt32(255), toUInt32(128) <= toInt32(255), toUInt32(128) > toInt32(255), toUInt32(128) >= toInt32(255) , toInt32(255) = toInt32(128), toInt32(255) != toInt32(128), toInt32(255) < toInt32(128), toInt32(255) <= toInt32(128), toInt32(255) > toInt32(128), toInt32(255) >= toInt32(128), toInt32(128) = toInt32(255), toInt32(128) != toInt32(255), toInt32(128) < toInt32(255), toInt32(128) <= toInt32(255), toInt32(128) > toInt32(255), toInt32(128) >= toInt32(255) , toInt32(255) = toUInt64(128), toInt32(255) != toUInt64(128), toInt32(255) < toUInt64(128), toInt32(255) <= toUInt64(128), toInt32(255) > toUInt64(128), toInt32(255) >= toUInt64(128), toUInt64(128) = toInt32(255), toUInt64(128) != toInt32(255), toUInt64(128) < toInt32(255), toUInt64(128) <= toInt32(255), toUInt64(128) > toInt32(255), toUInt64(128) >= toInt32(255) , toInt32(255) = toInt64(128), toInt32(255) != toInt64(128), toInt32(255) < toInt64(128), toInt32(255) <= toInt64(128), toInt32(255) > toInt64(128), toInt32(255) >= toInt64(128), toInt64(128) = toInt32(255), toInt64(128) != toInt32(255), toInt64(128) < toInt32(255), toInt64(128) <= toInt32(255), toInt64(128) > toInt32(255), toInt64(128) >= toInt32(255) , toUInt64(255) = toUInt8(128), toUInt64(255) != toUInt8(128), toUInt64(255) < toUInt8(128), toUInt64(255) <= toUInt8(128), toUInt64(255) > toUInt8(128), toUInt64(255) >= toUInt8(128), toUInt8(128) = toUInt64(255), toUInt8(128) != toUInt64(255), toUInt8(128) < toUInt64(255), toUInt8(128) <= toUInt64(255), toUInt8(128) > toUInt64(255), toUInt8(128) >= toUInt64(255) , toUInt64(255) = toUInt16(128), toUInt64(255) != toUInt16(128), toUInt64(255) < toUInt16(128), toUInt64(255) <= toUInt16(128), toUInt64(255) > toUInt16(128), toUInt64(255) >= toUInt16(128), toUInt16(128) = toUInt64(255), toUInt16(128) != toUInt64(255), toUInt16(128) < toUInt64(255), toUInt16(128) <= toUInt64(255), toUInt16(128) > toUInt64(255), toUInt16(128) >= toUInt64(255) , toUInt64(255) = toInt16(128), toUInt64(255) != toInt16(128), toUInt64(255) < toInt16(128), toUInt64(255) <= toInt16(128), toUInt64(255) > toInt16(128), toUInt64(255) >= toInt16(128), toInt16(128) = toUInt64(255), toInt16(128) != toUInt64(255), toInt16(128) < toUInt64(255), toInt16(128) <= toUInt64(255), toInt16(128) > toUInt64(255), toInt16(128) >= toUInt64(255) , toUInt64(255) = toUInt32(128), toUInt64(255) != toUInt32(128), toUInt64(255) < toUInt32(128), toUInt64(255) <= toUInt32(128), toUInt64(255) > toUInt32(128), toUInt64(255) >= toUInt32(128), toUInt32(128) = toUInt64(255), toUInt32(128) != toUInt64(255), toUInt32(128) < toUInt64(255), toUInt32(128) <= toUInt64(255), toUInt32(128) > toUInt64(255), toUInt32(128) >= toUInt64(255) , toUInt64(255) = toInt32(128), toUInt64(255) != toInt32(128), toUInt64(255) < toInt32(128), toUInt64(255) <= toInt32(128), toUInt64(255) > toInt32(128), toUInt64(255) >= toInt32(128), toInt32(128) = toUInt64(255), toInt32(128) != toUInt64(255), toInt32(128) < toUInt64(255), toInt32(128) <= toUInt64(255), toInt32(128) > toUInt64(255), toInt32(128) >= toUInt64(255) , toUInt64(255) = toUInt64(128), toUInt64(255) != toUInt64(128), toUInt64(255) < toUInt64(128), toUInt64(255) <= toUInt64(128), toUInt64(255) > toUInt64(128), toUInt64(255) >= toUInt64(128), toUInt64(128) = toUInt64(255), toUInt64(128) != toUInt64(255), toUInt64(128) < toUInt64(255), toUInt64(128) <= toUInt64(255), toUInt64(128) > toUInt64(255), toUInt64(128) >= toUInt64(255) , toUInt64(255) = toInt64(128), toUInt64(255) != toInt64(128), toUInt64(255) < toInt64(128), toUInt64(255) <= toInt64(128), toUInt64(255) > toInt64(128), toUInt64(255) >= toInt64(128), toInt64(128) = toUInt64(255), toInt64(128) != toUInt64(255), toInt64(128) < toUInt64(255), toInt64(128) <= toUInt64(255), toInt64(128) > toUInt64(255), toInt64(128) >= toUInt64(255) , toInt64(255) = toUInt8(128), toInt64(255) != toUInt8(128), toInt64(255) < toUInt8(128), toInt64(255) <= toUInt8(128), toInt64(255) > toUInt8(128), toInt64(255) >= toUInt8(128), toUInt8(128) = toInt64(255), toUInt8(128) != toInt64(255), toUInt8(128) < toInt64(255), toUInt8(128) <= toInt64(255), toUInt8(128) > toInt64(255), toUInt8(128) >= toInt64(255) , toInt64(255) = toUInt16(128), toInt64(255) != toUInt16(128), toInt64(255) < toUInt16(128), toInt64(255) <= toUInt16(128), toInt64(255) > toUInt16(128), toInt64(255) >= toUInt16(128), toUInt16(128) = toInt64(255), toUInt16(128) != toInt64(255), toUInt16(128) < toInt64(255), toUInt16(128) <= toInt64(255), toUInt16(128) > toInt64(255), toUInt16(128) >= toInt64(255) , toInt64(255) = toInt16(128), toInt64(255) != toInt16(128), toInt64(255) < toInt16(128), toInt64(255) <= toInt16(128), toInt64(255) > toInt16(128), toInt64(255) >= toInt16(128), toInt16(128) = toInt64(255), toInt16(128) != toInt64(255), toInt16(128) < toInt64(255), toInt16(128) <= toInt64(255), toInt16(128) > toInt64(255), toInt16(128) >= toInt64(255) , toInt64(255) = toUInt32(128), toInt64(255) != toUInt32(128), toInt64(255) < toUInt32(128), toInt64(255) <= toUInt32(128), toInt64(255) > toUInt32(128), toInt64(255) >= toUInt32(128), toUInt32(128) = toInt64(255), toUInt32(128) != toInt64(255), toUInt32(128) < toInt64(255), toUInt32(128) <= toInt64(255), toUInt32(128) > toInt64(255), toUInt32(128) >= toInt64(255) , toInt64(255) = toInt32(128), toInt64(255) != toInt32(128), toInt64(255) < toInt32(128), toInt64(255) <= toInt32(128), toInt64(255) > toInt32(128), toInt64(255) >= toInt32(128), toInt32(128) = toInt64(255), toInt32(128) != toInt64(255), toInt32(128) < toInt64(255), toInt32(128) <= toInt64(255), toInt32(128) > toInt64(255), toInt32(128) >= toInt64(255) , toInt64(255) = toUInt64(128), toInt64(255) != toUInt64(128), toInt64(255) < toUInt64(128), toInt64(255) <= toUInt64(128), toInt64(255) > toUInt64(128), toInt64(255) >= toUInt64(128), toUInt64(128) = toInt64(255), toUInt64(128) != toInt64(255), toUInt64(128) < toInt64(255), toUInt64(128) <= toInt64(255), toUInt64(128) > toInt64(255), toUInt64(128) >= toInt64(255) , toInt64(255) = toInt64(128), toInt64(255) != toInt64(128), toInt64(255) < toInt64(128), toInt64(255) <= toInt64(128), toInt64(255) > toInt64(128), toInt64(255) >= toInt64(128), toInt64(128) = toInt64(255), toInt64(128) != toInt64(255), toInt64(128) < toInt64(255), toInt64(128) <= toInt64(255), toInt64(128) > toInt64(255), toInt64(128) >= toInt64(255) 
SELECT count() from tab_02473 PREWHERE b > 0 AND b <= 70 AND c > 0 AND c <= 72 AND d > 5 AND d <= 35 WHERE a == 0;
select 1 = multiSearchAny(materialize('abcdefgh'), ['bcde']);
SELECT 'Running test stateless/00149_function_url_hash.sql from pid=1714' 
INSERT INTO test_01193_18429.table_10_171 VALUES 
CREATE DICTIONARY 02843_dict ( id UInt64, value String ) PRIMARY KEY id SOURCE(CLICKHOUSE(TABLE '02843_source')) LAYOUT(DIRECT());
INSERT INTO composite_partition_key VALUES 
INSERT INTO test_01193_18429.table_2_34 VALUES 
CREATE USER IF NOT EXISTS `02833_HTTP_USER_25955` IDENTIFIED WITH plaintext_password
SELECT 'Running test stateless/02458_datediff_date32.sql from pid=1718' 
SELECT dateDiff('second', toDateTime('2015-08-18 00:00:00', 'UTC'), toDateTime64('2015-08-18 01:00:00', 3, 'UTC'));
CREATE TABLE projection_test__fuzz_0 (`sum(block_count)` UInt64, `domain_alias` UInt64 ALIAS length(domain), `datetime` DateTime, `domain` LowCardinality(String), `x_id` String, `y_id` String, `block_count` Int64, `retry_count` Int64, `duration` Decimal(76, 13), `kbytes` LowCardinality(Int64), `buffer_time` Int64, `first_time` UInt256, `total_bytes` LowCardinality(Nullable(UInt64)), `valid_bytes` Nullable(UInt64), `completed_bytes` Nullable(UInt64), `fixed_bytes` LowCardinality(Nullable(UInt64)), `force_bytes` Int256, PROJECTION p (SELECT toStartOfMinute(datetime) AS dt_m, countIf(first_time = 0) / count(), avg((kbytes * 8) / duration), count(), sum(block_count) / sum(duration), avg(block_count / duration), sum(buffer_time) / sum(duration), avg(buffer_time / duration), sum(valid_bytes) / sum(total_bytes), sum(completed_bytes) / sum(total_bytes), sum(fixed_bytes) / sum(total_bytes), sum(force_bytes) / sum(total_bytes), sum(valid_bytes) / sum(total_bytes), sum(retry_count) / sum(duration), avg(retry_count / duration), countIf(block_count > 0) / count(), countIf(first_time = 0) / count(), uniqHLL12(x_id), uniqHLL12(y_id) GROUP BY dt_m, domain)) ENGINE = MergeTree PARTITION BY toDate(datetime) ORDER BY (toStartOfTenMinutes(datetime), domain) SETTINGS index_granularity_bytes = 10000000, index_granularity = 26879, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 39, merge_max_block_size = 18674, prefer_fetch_merged_part_size_threshold = 9251759095, vertical_merge_algorithm_min_rows_to_activate = 95717, vertical_merge_algorithm_min_columns_to_activate = 77, min_merge_bytes_to_use_direct_io = 33507593, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 81935, primary_key_compress_block_size = 81207
SELECT 'Running test stateless/00230_array_functions_has_count_equal_index_of_non_const_second_arg.sql from pid=1713' 
INSERT INTO table_for_concurrent_alter VALUES
SELECT tokens('test1,;\ test2,;\ test3,;\ test4');
SELECT 'Running test stateless/02514_null_dictionary_source.sql from pid=1705' 
CREATE TABLE t2 (a Int16, b Nullable(Int64)) ENGINE = TinyLog;
SELECT sum(`number`) FROM `test_owehxw65`.`test_parallel_replicas_automatic_count`
DROP TABLE IF EXISTS mergetree_00698;
CREATE TABLE test_01193_18429.table_5_149 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT connection_id();
INSERT INTO test_01193_18429.table_7_209 VALUES 
CREATE DATABASE IF NOT EXISTS test_zr7t3xgo 
CREATE TABLE mutations(d Date, x UInt32, s String, a UInt32 ALIAS x + 1, m MATERIALIZED x + 2) ENGINE MergeTree(d, intDiv(x, 10), 8192)
insert into distinct_in_order select * from numbers(10);
CREATE INDEX idx_tab2_2 ON tab2 (col0 DESC);
CREATE TABLE test_37236B253C74313D2F61327E6633462D4B24296A263E743F5B31553A492D6F777E4C62482D602E4E(x UInt8) Engine=Memory;
SELECT uniqExact('');
SELECT 'Running test stateless/02294_nothing_arguments_in_functions_errors.sh from pid=1713' 
SELECT number FROM numbers(3) GROUP BY (number, number % 2) ORDER BY number;
SELECT bitRotateLeft(NULL, NULL);
DROP DATABASE test_1603_rename_bug_ordinary;
CREATE TABLE test_565B3747484C7E3E222B785153243A686D607274286B395A523E5F5529202E224D7E7E51792F704E(x UInt8) Engine=Memory;
SELECT uniqHLL12('');
CREATE DATABASE IF NOT EXISTS test_tz2pe8vt 
SELECT '01234567890123456789012345678901234567890123456789.01234567890123456789012345678901234567890123456789.01234567890123456789012345678901234567890123456789.01234567890123456789012345678901234567890123456789.0123456789012345678901234567890123456789012345678.x' AS idna, idnaEncode(idna) AS ascii, tryIdnaEncode(idna) AS ascii_try, idnaDecode(ascii) AS original, idnaDecode(ascii_try) AS original_try;
CREATE TABLE test_01193_18429.table_6_946 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO producer_02366 (*) VALUES 
select 1 = multiMatchAny(materialize('abc'), materialize(['ab'])) from system.numbers limit 10;
SELECT count() == 3 FROM null_in WHERE s not in ('1', '3');
INSERT INTO test_01193_18429.table_10_110 VALUES 
SELECT count() FROM t_sparse_full WHERE u % 4 = 0;
CREATE TABLE test_635474704A312B4357686B5D4B4176795231305258674331683D6C416F3C4451543B67347379392F(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_2_807 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE t2 Engine=Memory AS t1;
CREATE DATABASE IF NOT EXISTS test_x833jibq 
SELECT 'Running test stateless/01014_lazy_database_concurrent_recreate_reattach_and_show_tables.sh from pid=1705' 
SELECT 'Running test stateless/02310_generate_multi_columns_with_uuid.sql from pid=1724' 
SET allow_experimental_parallel_reading_from_replicas=2;
SELECT '28' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:fff0::')))
SELECT sum(number) FROM test_parallel_replicas_automatic_count WHERE p != 3 format Null
SELECT count() == 1 FROM dtest WHERE b IN toDecimal32('44.4000', 4);
CREATE TABLE test_01193_18429.table_5_492 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_9_963 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT sum(a) from 02501_view settings max_result_rows = 1;
ALTER TABLE concurrent_alter_column ADD COLUMN c255 DOUBLE;
CREATE DATABASE IF NOT EXISTS test_8mcrt274 
INSERT INTO test_01193_18429.table_5_477 VALUES 
SELECT 5; 
DROP DATABASE IF EXISTS test_pufwl5e8 
insert into function null('_ Int') select sleep(1) from numbers(2) settings max_block_size=1, interactive_delay=1000
SELECT c, arrayPopBack(c), arrayPopFront(c), arrayResize(c, 1), arraySlice(c, 2, 1) FROM decimal;
create view test_param_view as with {param_test_val:UInt8} as param_test_val select param_test_val, arrayCount((a)->(a < param_test_val), t.arr) as cnt1 from (select [1,2,3,4,5] as arr) t;
select [1, 4, 1, 0, 4, 1, 0, 1, 16, 1, 0, 0, 0, 8, 12, 14, 0, 2] = multiSearchAllPositionsCaseInsensitive(materialize('lrDgweYHmpzOASVeiFcrDQUsv'), ['', 'gwEYhMP', 'LrDGwEyHmPzOaSVEifC', 'oMN', 'gwEYhMpZO', 'lrdGWEy', 'pOKrxN', 'lrDgwEyhmpZoaSv', 'eifcrdqU', 'LrDgw', 'dUvarZ', 'giYIvswNbNaBWprMd', 'pPPqKPhVaBhNdmZqrBmb', 'hmPzoASVEiF', 'O', 'SVEi', 'gIGLmHnctIkFsDFfeJWahtjDzjPXwY', 'rDGweyHmP']) from system.numbers limit 10;
SELECT 'Running test stateless/02724_delay_mutations.sh from pid=1713' 
CREATE TABLE test_01193_18429.table_8_116 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SET format_csv_delimiter = ':';
SELECT bitmapHasAny(bitmapBuild(emptyArrayUInt16()), bitmapBuild([1, 2, 3, 500]));
INSERT INTO test_01193_18429.table_8_477 VALUES 
SELECT * FROM (SELECT 'Hello, World! From client.') INTO OUTFILE '/tmp/clickhouse-test/0_stateless/test_cnrzwo8n/test_comp_for_input_and_output_without_gz' COMPRESSION 'GZ' FORMAT TabSeparated;
SELECT t1.key, t2.key, length(t1.s), length(t2.s) FROM tn1 AS t1 FULL JOIN tn2 AS t2 ON t1.key == t2.key ORDER BY t1.key, t2.key, length(t1.s), length(t2.s);
DROP DATABASE IF EXISTS test_3dv6seh3 
SELECT CASE WHEN (col1 % 2) = 0 THEN [col2, col3] WHEN (col1 % 3) = 0 THEN [col4, col5] ELSE ['foo', 'bar'] END FROM multi_if_check;
select a, b from ttl_00933_1;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c0) AND (NOT c5)) OR ((NOT c0) AND (NOT c1)) OR (c0) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_01193_18429.table_4_801 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DATABASE IF NOT EXISTS test_5yegutuw 
SELECT multiIf((number % 2) = 0, [toUInt16(1), toUInt16(2)], (number % 3) = 0, [toInt64(2), toInt64(3)], [toInt16(3), toInt16(3)]) FROM system.numbers LIMIT 10;
SELECT count() FROM `test_b6294dcb`.`test_local` WHERE `x` IN ((SELECT * FROM numbers(10)) AS `_subquery3981`)
CREATE TABLE test_01193_18429.table_10_192 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_02908_r1_125 SELECT rand64() FROM numbers(5);
INSERT INTO test_01193_18429.table_10_707 VALUES 
SELECT h3NumHexagons(3);
INSERT INTO src VALUES /* (-42, 2) */ 
INSERT INTO test_01193_18429.table_2_953 VALUES 
CREATE DATABASE IF NOT EXISTS test_bapw5lcz 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), DT64 <= N as r FORMAT CSV;
INSERT INTO test_01193_18429.table_5_939 VALUES 
INSERT INTO report(id,event_date,priority,description) VALUES 
DROP TABLE IF EXISTS prewhere_defaults;
SELECT intDivOrZero(toDecimal64(4.4, 3), toDecimal32(2.2, 2));
CREATE TABLE test_01193_18429.table_10_528 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select count() from t cross join numbers(2) r;
CREATE TABLE test_7A50315A6370523B522E5A6A79605A29463575396237656A672B7649677B21357D6E4E346B377455(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_t52cut4q 
CREATE TABLE ghdata_2_string (`data` String) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 17128, prefer_fetch_merged_part_size_threshold = 4560990128, vertical_merge_algorithm_min_rows_to_activate = 799848, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1745707980, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 40111, primary_key_compress_block_size = 95396
DROP DATABASE IF EXISTS test_aqltjs1n 
SELECT id, haystack, needle, 'x', replaceRegexpAll(haystack, needle, 'x') FROM test_tab ORDER BY id;
CREATE TABLE auto_assign_enum (`x` enum('a', 'b')) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 13102, min_bytes_for_wide_part = 70701994, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 83, merge_max_block_size = 2452, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 178854, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 13336553, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 61819, primary_key_compress_block_size = 82429
CREATE TABLE test_222D3C7C4020267D3B55493E696A3B7E6A24282F605C7E44525A434B5223774A50375F5553745651(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_whv56o7x 
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat32(1), toFloat32(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toInt32(3), toInt32(3)] END FROM system.numbers LIMIT 10;
SELECT age('day', toDate('2015-08-18', 'UTC'), materialize(toDateTime64('2015-08-19 00:00:00', 3, 'UTC')));
INSERT INTO test_01193_18429.table_8_158 VALUES 
SELECT number AS id, toString(number) AS s, range(number) AS arr FROM numbers(10) FORMAT ORC
SELECT 'Running test stateless/02896_leading_zeroes_no_octal.sql from pid=1713' 
SHOW CREATE TABLE t_tuple_numeric;
set input_format_json_try_infer_numbers_from_strings=1;
select x'';
SELECT toUInt16(0) AS x, toDecimal128(1, 0) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
CREATE TABLE test_5D2D344E466948775E7C7E4D7B557E68732F30605F4F2477406220284F256F52794E696B47716837(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01666_blns_long.sql from pid=1713' 
INSERT INTO test_01193_18429.table_8_728 VALUES 
CREATE TABLE test_5F3B2C5472565166567B3A7A442D5D49493C75217361485A36574156262E7B7973644B323E793545(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS data_01515;
SELECT tupleHammingDistance((12, 43), t1) FROM defaults;
OPTIMIZE TABLE check_query_test_non_adaptive;
CREATE TABLE bloom_filter_idx (`u64` UInt64, `i32` Int32, `f64` Float64, `d` Decimal(10, 2), `s` String, `e` Enum8('a' = 1, 'b' = 2, 'c' = 3), `dt` Date, INDEX bloom_filter_a i32 TYPE bloom_filter(0.000001) GRANULARITY 1) ENGINE = MergeTree ORDER BY u64 SETTINGS index_granularity = 8192, min_bytes_for_wide_part = 394618900, ratio_of_defaults_for_sparse_serialization = 0.7166685461997986, replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 13784, prefer_fetch_merged_part_size_threshold = 1955553081, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 276509, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 65820, primary_key_compress_block_size = 87680
INSERT INTO parquet_nullable_arrays VALUES 
drop table test_2j4sloxh_1_renamed.t;
CREATE TABLE test_335C293D43392337337D775A56437D4521376A333D5A372F2765564C3A42682D705649262869593E(x UInt8) Engine=Memory;
SELECT -34e2_1;
INSERT INTO FUNCTION remote('127.0.0.1', test_e1yc5z9h, async_inserts) VALUES 
SELECT 'Running test stateless/02347_rank_corr_size_overflow.sql from pid=1724' 
CREATE TABLE test_217E772E72253C463C6A5F6E7B7E61565C727634392E3E6F62515E79687E282626407B4731386654(x UInt8) Engine=Memory;
select throwIf(A != 11) from src format Null
DROP TABLE IF EXISTS t_sparse_alter;
CREATE INDEX idx_tab3_2 ON tab3 (col1,col0 DESC);
SELECT multiMatchAnyIndex('goodbye', ['^hello[, ]+world$', 'go+d *bye', 'w(or)+ld']);
select columns.5, columns.6 from file(strings2_02735.parquet, ParquetMetadata) array join columns;
INSERT INTO 02526_rocksdb SELECT * FROM generateRandom('`key` String, `value` UInt32') LIMIT 100;
CREATE INDEX idx_tab2_1 ON tab2 (col4,col3 DESC,col1);
SELECT a FROM t_fixed_prefix WHERE c = 1 ORDER BY a SETTINGS optimize_read_in_order = 0
select SUBSTRING_INDEX('www.clickhouse.com', '.', 2);
CREATE TABLE test_02908_r2_158 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_158', 'r2') ORDER BY tuple()
DROP TABLE database_for_range_dict.date_table;
CREATE TABLE check_query_tiny_log (N UInt32, S String) Engine = TinyLog;
SELECT DATE_ADD(hour, 2, toDateTime(1234567890, 'UTC'));
CREATE TABLE test_01193_18429.table_5_205 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP DATABASE IF EXISTS test_bo56il5m 
INSERT INTO test_01193_18429.table_10_67 VALUES 
CREATE TABLE test_01193_18429.table_10_304 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO t64 SELECT number AS x, x, x, x, x, x, x, x FROM numbers(intExp2(8));
INSERT INTO test_01193_18429.table_1_749 VALUES 
CREATE TABLE test_01193_18429.table_6_801 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DATABASE IF NOT EXISTS test_bl71oz17 
CREATE TABLE test_01193_18429.table_1_721 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT count() FROM test WHERE y = 10 AND x <= 10 SETTINGS max_rows_to_read = 17;
CREATE TABLE test_29704C6C436A234025782B65444D72522B6752393579426B3D4A54303D5B65315652247133245E58(x UInt8) Engine=Memory;
SELECT 'tn1 ALL LEFT JOIN t2 | bs = 9';
select count() from data_01256;
SELECT toInt256(123) AS k GROUP BY k;
CREATE TABLE test_2F3F513129444039256349575E385553786E6B57536245425D4732622D2B4229463020512721704C(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01778_test_LowCardinality_FixedString_pk.sql from pid=1715' 
SELECT 'Running test stateless/02494_query_cache_query_log.sql from pid=1705' 
CREATE TABLE test_01193_18429.table_2_54 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_ic1awy49 
INSERT INTO t2 SELECT number, number FROM numbers(2, 3);
SELECT format('The {0} to all questions is {1}.', 'answer', materialize(44 :: Int32));
CREATE INDEX idx_tab4_4 ON tab4 (col4,col3 DESC);
SELECT tcpPort()
SELECT sin(NULL);
INSERT INTO test_01193_18429.table_8_498 VALUES 
CREATE TABLE test_7A28355D4B346843455C7B68343037776B5D37626C4D766D562E2F272C48454C3649493C4E375246(x UInt8) Engine=Memory;
EXPLAIN SYNTAX SELECT count() FROM constraint_test_constants WHERE (a > 100 OR b > 100 OR c > 100) AND (a <= 100 OR b > 100 OR c > 100) AND (NOT b > 100 OR c > 100) AND (c > 100);
CREATE TABLE test_5C706A746E644E70454E7E7E2F33583956334A787578697C5D225A305F3A4854347931377E4E502A(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_4_637 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
desc file('test_02149_schema_inference_test_2lktp9cn.data', 'TSVWithNames')
CREATE TABLE test_02908_r1_90 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_90', 'r1') ORDER BY tuple()
SELECT 'Running test stateless/02265_column_ttl.sql from pid=1713' 
DROP DATABASE IF EXISTS test_c45aqv7u 
INSERT INTO test_01193_18429.table_3_6 VALUES 
CREATE INDEX idx_tab2_1 ON tab2 (col0 DESC,col1 DESC);
ALTER TABLE t_sparse_mutations_2 UPDATE s = '' WHERE id % 13 != 0;
DROP DATABASE IF EXISTS test_qre9kwn4_1
SELECT normalizeQuery('-1, 1 - (+1, 2, 3) - 1');
select part_name, merge_reason, event_type, errorCodeToName(error) from system.part_log where database = 'test_u2uzx3hf' and error != 0 order by event_time_microseconds
SELECT CASE WHEN 1 THEN [col2, 'bar'] WHEN (col1 % 3) = 0 THEN [col4, 'bar'] ELSE [col6, col7] END FROM multi_if_check;
CREATE TABLE numbers_10 (`number` UInt64) ENGINE = MergeTree ORDER BY number SETTINGS index_granularity = 2639, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.09587779641151428, replace_long_file_name_to_hash = true, max_file_name_length = 78, merge_max_block_size = 5961, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 38, min_merge_bytes_to_use_direct_io = 9522356612, index_granularity_bytes = 13996312, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 60706, primary_key_compress_block_size = 24970
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (26 < 7 AND 97 > 0 ? 26 : 0)), throwIf(last != (26 < 7 AND 97 > 0 ? least(7 - 1, 26 + 97 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(7) LIMIT 26, 97);
SELECT count(*) FROM compression_codec_multiple;
desc format(JSONEachRow, '{"x" : "123"}\n{"x" : 123}');
OPTIMIZE TABLE src_4
DROP DATABASE IF EXISTS test_abn9beur 
DROP TABLE 01785_db.simple_key_source_table;
CREATE DATABASE IF NOT EXISTS test_2sg5v2ph 
DROP DATABASE IF EXISTS test_u0tx7230 
CREATE TABLE test_6B735A5177412247436B4D345B446048442545353A5B41704B6356555B5D3368766447644924756D(x UInt8) Engine=Memory;
CREATE TABLE n (k UInt32) ENGINE = Memory;
SELECT materialize(toDecimal32(1, 2)) / CAST(NULL, 'Nullable(UInt32)');
SELECT -32768, 4294967296, -32768 = 4294967296, -32768 != 4294967296, -32768 < 4294967296, -32768 <= 4294967296, -32768 > 4294967296, -32768 >= 4294967296, 4294967296 = -32768, 4294967296 != -32768, 4294967296 < -32768, 4294967296 <= -32768, 4294967296 > -32768, 4294967296 >= -32768 , toInt16(-32768) = toUInt64(4294967296), toInt16(-32768) != toUInt64(4294967296), toInt16(-32768) < toUInt64(4294967296), toInt16(-32768) <= toUInt64(4294967296), toInt16(-32768) > toUInt64(4294967296), toInt16(-32768) >= toUInt64(4294967296), toUInt64(4294967296) = toInt16(-32768), toUInt64(4294967296) != toInt16(-32768), toUInt64(4294967296) < toInt16(-32768), toUInt64(4294967296) <= toInt16(-32768), toUInt64(4294967296) > toInt16(-32768), toUInt64(4294967296) >= toInt16(-32768) , toInt16(-32768) = toInt64(4294967296), toInt16(-32768) != toInt64(4294967296), toInt16(-32768) < toInt64(4294967296), toInt16(-32768) <= toInt64(4294967296), toInt16(-32768) > toInt64(4294967296), toInt16(-32768) >= toInt64(4294967296), toInt64(4294967296) = toInt16(-32768), toInt64(4294967296) != toInt16(-32768), toInt64(4294967296) < toInt16(-32768), toInt64(4294967296) <= toInt16(-32768), toInt64(4294967296) > toInt16(-32768), toInt64(4294967296) >= toInt16(-32768) , toInt32(-32768) = toUInt64(4294967296), toInt32(-32768) != toUInt64(4294967296), toInt32(-32768) < toUInt64(4294967296), toInt32(-32768) <= toUInt64(4294967296), toInt32(-32768) > toUInt64(4294967296), toInt32(-32768) >= toUInt64(4294967296), toUInt64(4294967296) = toInt32(-32768), toUInt64(4294967296) != toInt32(-32768), toUInt64(4294967296) < toInt32(-32768), toUInt64(4294967296) <= toInt32(-32768), toUInt64(4294967296) > toInt32(-32768), toUInt64(4294967296) >= toInt32(-32768) , toInt32(-32768) = toInt64(4294967296), toInt32(-32768) != toInt64(4294967296), toInt32(-32768) < toInt64(4294967296), toInt32(-32768) <= toInt64(4294967296), toInt32(-32768) > toInt64(4294967296), toInt32(-32768) >= toInt64(4294967296), toInt64(4294967296) = toInt32(-32768), toInt64(4294967296) != toInt32(-32768), toInt64(4294967296) < toInt32(-32768), toInt64(4294967296) <= toInt32(-32768), toInt64(4294967296) > toInt32(-32768), toInt64(4294967296) >= toInt32(-32768) , toInt64(-32768) = toUInt64(4294967296), toInt64(-32768) != toUInt64(4294967296), toInt64(-32768) < toUInt64(4294967296), toInt64(-32768) <= toUInt64(4294967296), toInt64(-32768) > toUInt64(4294967296), toInt64(-32768) >= toUInt64(4294967296), toUInt64(4294967296) = toInt64(-32768), toUInt64(4294967296) != toInt64(-32768), toUInt64(4294967296) < toInt64(-32768), toUInt64(4294967296) <= toInt64(-32768), toUInt64(4294967296) > toInt64(-32768), toUInt64(4294967296) >= toInt64(-32768) , toInt64(-32768) = toInt64(4294967296), toInt64(-32768) != toInt64(4294967296), toInt64(-32768) < toInt64(4294967296), toInt64(-32768) <= toInt64(4294967296), toInt64(-32768) > toInt64(4294967296), toInt64(-32768) >= toInt64(4294967296), toInt64(4294967296) = toInt64(-32768), toInt64(4294967296) != toInt64(-32768), toInt64(4294967296) < toInt64(-32768), toInt64(4294967296) <= toInt64(-32768), toInt64(4294967296) > toInt64(-32768), toInt64(4294967296) >= toInt64(-32768) 
CREATE DATABASE IF NOT EXISTS test_k2kug8a0 
SELECT dictGetString(concat('test_g0lvg7te', '.test_dict_01080'), 'dim_id', x) FROM (SELECT tuple(toInt64(rand64() * 0)) AS x)
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (27 < 75 AND 102 > 0 ? 27 : 0)), throwIf(last != (27 < 75 AND 102 > 0 ? least(75 - 1, 27 + 102 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(75) LIMIT 27, 102);
ATTACH TABLE r3
DROP DATABASE IF EXISTS test_utraczr3 
CREATE TABLE test_46653B684B6D5A4F236D7130715323362444345C293A257D4C6B73622133526A78535E584E506450(x UInt8) Engine=Memory;
CREATE TABLE t64 (`date16` Date, `t_date16` Date CODEC(T64, ZSTD), `date_32` Date32, `t_date32` Date32 CODEC(T64, ZSTD)) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 5517, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 2973, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 285308, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 13561092, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 68030, primary_key_compress_block_size = 86739
SELECT d FROM test_tz_setting WHERE d == toDateTime('2000-01-01 02:00:00');
DROP DATABASE IF EXISTS test_n1b7tg5f 
DROP DATABASE IF EXISTS test_4irtzvq4 
DROP DATABASE IF EXISTS test_dsv9cml1 
select 1 = multiSearchAny(materialize('abc'), ['']) from system.numbers limit 10;
CREATE TABLE DATABASE_IO (`Application` LowCardinality(String), `Base` LowCardinality(String), `Date` DateTime, `Ios` UInt32) ENGINE = MergeTree ORDER BY Date SETTINGS index_granularity = 19693, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 107, merge_max_block_size = 12855, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 14038857, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 8805, primary_key_compress_block_size = 76908
DROP DATABASE test_5muuvyod
SELECT toFloat32(toDecimal32(number, 1)), toFloat32(toDecimal64(number, 2)), toFloat32(toDecimal128(number, 3)) FROM numbers(12, 1);
CREATE TABLE test_01193_18429.table_8_217 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt32(1), toInt32(2)] WHEN (number % 3) = 0 THEN [toUInt32(2), toUInt32(3)] ELSE [toInt8(3), toInt8(3)] END FROM system.numbers LIMIT 10;
select x + y, sum(x - y) as s from test_agg_proj_02302 group by x + y order by s desc limit 5 settings optimize_aggregation_in_order=1, optimize_read_in_order=1;
INSERT INTO test_01193_18429.table_5_959 VALUES 
INSERT INTO table_gcd_codec_datetime SELECT number FROM system.numbers LIMIT 50;
SELECT * FROM system.contributors ORDER BY name DESC FORMAT Parquet
select sipHash64Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53)) == sipHash64(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53));
INSERT INTO src_12 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 12
INSERT INTO truncate_test_merge_tree VALUES
CREATE TABLE test_3253503A4457364E726D26725F585F2A67405C645F563D3B43692221543F54713427573E4250202E(x UInt8) Engine=Memory;
CREATE TABLE test_67392C253C426A4A374F625D243A6673735741327C547530404E697655267B775C5A565D69692361(x UInt8) Engine=Memory;
CREATE TABLE t_collisions (`id` Int, `col` String, `col.s` Array(LowCardinality(String)), `col.u` Array(LowCardinality(String))) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 53676, min_bytes_for_wide_part = 949274231, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 24277, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 15986431, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 43558, primary_key_compress_block_size = 84025
SELECT '49' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:e000::')))
GRANT FILE ON *.* TO user_02561_temporary_table_grants_test_ljq8n49h
SELECT multiIf(1, 'foo', (col1 % 3) = 0, col3, col4) FROM multi_if_check;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (11 < 83 AND 57 > 0 ? 11 : 0)), throwIf(last != (11 < 83 AND 57 > 0 ? least(83 - 1, 11 + 57 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(83) LIMIT 11, 57);
SELECT 'Running test stateless/00834_kill_mutation.sh from pid=1718' 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (90 < 75 AND 32 > 0 ? 90 : 0)), throwIf(last != (90 < 75 AND 32 > 0 ? least(75 - 1, 90 + 32 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(75) LIMIT 90, 32);
CREATE DATABASE IF NOT EXISTS test_u2wn73nk 
INSERT INTO r4 SELECT 77 % 10 = 4 ? 77 - 1 : 77
INSERT INTO aggregating_merge_tree_with_sampling VALUES 
SELECT range(toIPv4('172.31.0.0'), 2887712778);
SELECT 'SELECT toInt64(-1) + N';
CREATE TABLE test_47372323564B473B2D352D776E5D3C52384228482D7C773D38622431604A3560257B5F3D612F3344(x UInt8) Engine=Memory;
CREATE ROW POLICY p3_01295 ON db.table, db2.table2 TO u1_01295;
SELECT 15, 14, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (15 < 13 AND 14 > 0 ? 15 : 0)), throwIf(last != (15 < 13 AND 14 > 0 ? least(13 - 1, 15 + 14 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 15, 14);
ALTER TABLE table_for_ttl MODIFY TTL d + INTERVAL 1 YEAR SETTINGS materialize_ttl_after_modify = 0;
DROP DATABASE IF EXISTS test_f0jfk6tb 
CREATE TABLE test_01193_18429.table_7_737 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT '=DICTIONARY in Ordinary DB';
DROP DATABASE IF EXISTS test_2asizclh 
DROP TABLE IF EXISTS table_with_compact_parts;
SHOW COLUMNS FROM tab WHERE field LIKE '%int%';
DROP TABLE IF EXISTS points_01862;
INSERT INTO test_table_3 VALUES 
DROP TABLE if exists test_01054.ints;
select hex(sipHash64Keyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)));
CREATE TABLE test_294A3550687E7A467A46322B285A2D2F245B536C204A3925346B334D2F2D5469282D266D42523B36(x UInt8) Engine=Memory;
CREATE TABLE test_4E4869517636567B345D6B3938363C2D3C413C2041212149212C223F243B515D37253334735C6340(x UInt8) Engine=Memory;
drop table if exists test_01655_plan_optimizations_optimize_read_in_window_order_long_n_x
CREATE TABLE test_424D275558614D4A407B33265A4152242A5F57726A4C206462237C6F62775A564F6937774B3A4B21(x UInt8) Engine=Memory;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (12 < 17 AND 12 > 0 ? 12 : 0)), throwIf(last != (12 < 17 AND 12 > 0 ? least(17 - 1, 12 + 12 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(17) LIMIT 12, 12);
SELECT count() FROM t_cnf_fuzz WHERE (c5) OR ((NOT c0)) OR (c1 AND (NOT c8) AND c8 AND c2 AND c9) OR ((NOT c8) AND c1 AND (NOT c5) AND (NOT c0) AND (NOT c2)) OR (c3 AND (NOT c3) AND c4) SETTINGS convert_query_to_cnf = 1
INSERT INTO test_01193_18429.table_9_252 VALUES 
DROP DATABASE IF EXISTS test_01048;
CREATE TABLE test_01193_18429.table_1_81 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP TABLE IF EXISTS input_function_table_2
CREATE TABLE test_362F563147622022585D5A4073605B7C70337E2B7C333D53244B3730564C4238547E4E714E27624C(x UInt8) Engine=Memory;
CREATE TABLE test_623E666E5B6F5773766C6A52593C4E4B2B652452586A77212C67343D6F5C75714F6E2D444276526C(x UInt8) Engine=Memory;
SELECT '-- drop part --';
CREATE TABLE table_without_pk ( key1 UInt8, key2 UInt32, key3 DateTime64(6, 'UTC'), value String ) ENGINE = MergeTree ORDER BY tuple() SETTINGS min_compress_block_size=65536, max_compress_block_size=65536;
DROP TABLE IF EXISTS merge_tree_pk_sql SYNC;
select 1 in tuple(Null);
CREATE ROW POLICY 02703_filter_4 ON 02703_db.02703_rptable USING x<=2 AS restrictive TO ALL;
DROP TABLE parquet_events
select '--- ASC NULLS FIRST, ASC';
INSERT INTO test_01193_18429.table_2_35 VALUES 
SELECT *, toTypeName(t1.id), toTypeName(t3.id) FROM t1_00848 t1 LEFT JOIN t3_00848 t3 ON t1.id = t3.id ORDER BY t1.id, t3.id;
CREATE TABLE test_7D6B3C4656542E272E3D595B69727A5A56463857582636402B2F345C474E7C405448593B38224170(x UInt8) Engine=Memory;
CREATE TABLE test_65525A3B593D373D26795B6B314E22537D496C404B41712A252F3A247E7127515D3A5134564A5244(x UInt8) Engine=Memory;
SELECT ignore(decrypt('aes-128-ctr', '[HIDDEN]'))
SELECT `dummy` FROM `system`.`one` LIMIT 2 BY `dummy`
DROP TABLE replicated_collapsing_merge_tree;
select INSTR('hello', 'e');
CREATE TABLE test_01193_18429.table_4_130 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO r10 SELECT 42
INSERT INTO test_01193_18429.table_4_751 VALUES 
CREATE TABLE test (key UInt32, value String) Engine=MergeTree() ORDER BY key SETTINGS min_bytes_for_wide_part = 10485760, compress_marks=false, compress_primary_key=false, disk = disk( type = cache, max_size = '128Mi', path = 'filesystem_query_cache/', cache_on_write_operations= 1, enable_filesystem_query_cache_limit = 1, delayed_cleanup_interval_ms = 100, disk = 's3_disk');
CREATE TABLE test_01193_18429.table_3_207 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE MATERIALIZED VIEW IF NOT EXISTS forward TO session AS SELECT day, uid FROM queue;
select str from lc_null_fix_str_0;
INSERT INTO src_0 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 98
alter table many_mutations delete where y = 510 * 2 settings mutations_sync = 0;
CREATE TABLE test_01193_18429.table_10_386 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
ALTER TABLE test DROP COLUMN x SETTINGS mutations_sync = 2;
CREATE TABLE test_225B373749525C2E477E24353162595378525D2621313C646A676B2A26202E4E3A52407E5227645C(x UInt8) Engine=Memory;
CREATE INDEX idx_tab3_4 ON tab3 (col1 DESC,col4);
DROP DATABASE IF EXISTS test_gl7q55b6 
select '2283-11-11' > toDate32('1925-02-01');
SELECT 'R1, R2, R3 + additional_table_filters and WHERE: (x == 1) OR (x == 2) OR (x == 3) AND (x < 3) AND (x > 1)';
select subtractNanoseconds(toDateTime64('2023-01-01 00:00:00.0000000', 7, 'UTC'), 1);
select 'intersect';
SELECT a, t1.a, t2.a FROM t1 LEFT JOIN t2 USING (a) ORDER BY (t1.a, t2.a);
SELECT 'Running test stateless/02560_quantile_min_max.sql from pid=1715' 
SELECT 'Running test stateless/00561_storage_join.sql from pid=1722' 
CREATE TABLE test_01193_18429.table_8_15 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'Running test stateless/02210_processors_profile_log_2.sh from pid=1722' 
select round(1000 * ngramSearchCaseInsensitive(materialize('ABCdefgH'), 'aaaaaaaa')) from system.numbers limit 5;
CREATE INDEX idx_tab4_2 ON tab4 (col0,col3 DESC);
SELECT 'Running test stateless/01084_regexp_empty.sql from pid=1715' 
INSERT INTO test_01193_18429.table_3_963 VALUES 
/* ddl_entry=query-0000000002 */ CREATE TABLE test_h5znju24_db.test UUID 'c2e67be1-32d0-40c8-bcf0-defc15eedcfb' (`id` UInt64) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 5933, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = 1, max_file_name_length = 0, merge_max_block_size = 13095, prefer_fetch_merged_part_size_threshold = 2260218170, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10046355821, index_granularity_bytes = 29341930, allow_vertical_merges_from_compact_to_wide_parts = 1, marks_compress_block_size = 20672, primary_key_compress_block_size = 37915 AS SELECT 1
ALTER TABLE alter_test DROP COLUMN NestedColumn.A;
SELECT -1 AS x, 2 AS y, least(x, y), greatest(x, y), least(x, materialize(y)), greatest(materialize(x), y), greatest(materialize(x), materialize(y)), toTypeName(least(x, y));
CREATE TABLE test_552F3C4977226055515868463E717E2C43363250556E262776435B5868205774536F322471296F34(x UInt8) Engine=Memory;
select 'before optimize', count(), _part from tt group by _part order by _part
select if(number % 5 == 0, toInt8OrZero(toString(number)), Null) from numbers(20);
SELECT multiIf((number % 2) = 0, toInt32(1), (number % 3) = 0, toUInt32(2), toUInt8(3)) FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS shard_0;
SELECT dictGetString(dict3, 'some_column', toUInt64(12));
DROP DATABASE IF EXISTS test_wyf0miya 
INSERT INTO src VALUES /* (2, 3) */ 
select 0 = multiSearchAnyUTF8(materialize('ÃÂ·ÃÂ¼ÃÂµÃÂ¹ÃÂ´ÃÂ¼ÃÂ¾ÃÂ¾ÃÂ´ÃÂºÃÂÃÂÃÂ¸ÃÂÃÂ²ÃÂµÃÂ¸ÃÂÃÂÃÂ´ÃÂ´ÃÂÃÂÃÂ¿ÃÂ '), ['ÃÂ·ÃÂ´ÃÂÃÂÃÂµÃÂÃÂ³ÃÂ´ÃÂºÃÂ·ÃÂ¼ÃÂÃÂ±ÃÂ¶ÃÂÃÂÃÂÃÂ¸ÃÂ¾ÃÂ¾', 'ÃÂÃÂÃÂ·ÃÂ·ÃÂÃÂ¼ÃÂÃÂ´ÃÂÃÂ ÃÂÃÂÃÂÃÂ¼ÃÂÃÂ·ÃÂÃÂ²ÃÂÃÂ¹ÃÂ', 'ÃÂÃÂ»ÃÂÃÂ½ÃÂ±ÃÂ½ÃÂ·ÃÂÃÂÃÂÃÂ±ÃÂÃÂ±ÃÂ±ÃÂ´ÃÂ¾ÃÂÃÂÃÂ²ÃÂ»ÃÂ·ÃÂ¼ÃÂ¿ÃÂ³ÃÂÃÂºÃÂÃÂ·ÃÂ¾ÃÂ ÃÂº', 'ÃÂºÃÂÃÂ·ÃÂ»ÃÂµÃÂ±ÃÂÃÂ°ÃÂ¼', 'ÃÂ²ÃÂÃÂÃÂ¿ÃÂ¼ÃÂ¶', 'ÃÂ½ÃÂ³ÃÂºÃÂº', 'ÃÂ³ÃÂ¿ÃÂ·ÃÂ¹ÃÂ°', 'ÃÂÃÂ¿ÃÂ¹ÃÂºÃÂÃÂÃÂ½ÃÂ°ÃÂ±ÃÂ°ÃÂºÃÂÃÂÃÂ»ÃÂ°ÃÂ¿ÃÂÃÂ±ÃÂ²ÃÂ°ÃÂ¸ÃÂ ÃÂ½ÃÂÃÂ ÃÂÃÂÃÂ¸ÃÂ´ÃÂ±', 'ÃÂ°ÃÂÃÂÃÂÃÂ·ÃÂ¶ÃÂ½ÃÂ°ÃÂ¹ÃÂ ÃÂÃÂ¸', 'ÃÂ¹ÃÂÃÂ·ÃÂ´ÃÂµÃÂÃÂÃÂÃÂ´ÃÂ±ÃÂÃÂ²ÃÂ¿ÃÂ¶ÃÂ¾ÃÂ ÃÂÃÂ·', 'ÃÂ¾ÃÂÃÂ±ÃÂµÃÂÃÂ¿ÃÂ·ÃÂ»ÃÂ³', 'ÃÂ¿ÃÂ¾ÃÂ»ÃÂÃÂ ÃÂ¸ÃÂ´ÃÂÃÂ']) from system.numbers limit 10;
SELECT 'Running test stateless/02515_fix_any_parsing.sh from pid=1718' 
DROP TABLE IF EXISTS map_test_index_map_keys;
INSERT INTO r9 SELECT 58 % 10 = 9 ? 58 - 1 : 58
ALTER TABLE src_7 REPLACE PARTITION 2 FROM src_6
INSERT INTO test_01193_18429.table_5_173 VALUES 
INSERT INTO check_system_tables SELECT number+50 FROM numbers(50);
SELECT arrayMap(x -> x + arrayMap(x -> 5, [1])[1], [1,2,3]);
SELECT toUInt256(-1);
INSERT INTO TABLE test1(year, uv) select '2021',uniqThetaState(toInt64(2));
SELECT pointInPolygon((0.7, 0.6), [(0., 1.), (0.2, 0.5), (0.6, 0.5), (0.8, 0.8), (0.8, 0.3), (0.1, 0.3), (0.1, 0.1), (0.8, 0.1), (1.0, 0.0), (8.0, 7.0), (7.0, 8.0), (0., 1.)]);
SELECT quantileTDigest(x) FROM (SELECT inf AS x UNION ALL SELECT -inf UNION ALL SELECT -inf);
select cbrt(1) = 1;
SELECT toUInt16(0) AS x, toUInt32(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
INSERT INTO test_01193_18429.table_9_919 VALUES 
INSERT INTO test_01193_18429.table_5_54 VALUES 
select '---- Q5 ----';
CREATE DATABASE IF NOT EXISTS test_88t3n1rq 
WITH 0.01 AS threshold SELECT 'unknown runtime exceptions', greatest(coalesce(sum(length(message_format_string) = 0) / countOrNull(), 0) as v, threshold), v <= threshold ? [] : (SELECT groupArray((message, c)) FROM ( SELECT message, count() as c FROM logs WHERE length(message_format_string) = 0 AND (message like '%DB::Exception%' or message like '%Coordination::Exception%') AND message not like '% Received from %' and message not like '%(SYNTAX_ERROR)%' GROUP BY message ORDER BY c LIMIT 10 )) FROM logs WHERE (message like '%DB::Exception%' or message like '%Coordination::Exception%') AND message not like '% Received from %' and message not like '%(SYNTAX_ERROR)%';
CREATE TABLE test_01193_18429.table_2_535 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
/* ddl_entry=query-0000000059 */ ALTER TABLE test_990cm9di.t1 ADD COLUMN `newcol` UInt32
CREATE TABLE test_575F673E4347222820332B2E7159737931244D7C523437693242714D6F7D28305C41583934294438(x UInt8) Engine=Memory;
SELECT hasTokenCaseInsensitive('hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay NEEDLE', 'needle'), ' expecting ', 1;
CREATE DATABASE IF NOT EXISTS test_8x6wk6xm 
DROP DATABASE IF EXISTS test_f4s29bhl 
SHOW CREATE rich_syntax;
CREATE INDEX idx_tab3_0 ON tab3 (col4 DESC,col3);
CREATE DATABASE IF NOT EXISTS test_ha0crt67 
insert into idx select number, number, number from numbers(10)
select toDateTime(0, 'Asia/Istanbul');
drop table if exists merge_tree;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 13122, 500 settings ignore_materialized_views_with_dropped_target_table=1
DROP TABLE fill;
DROP DATABASE IF EXISTS test_b29vur9d 
SELECT cityHash64(CAST( 0 AS Nullable(UInt16)));
SELECT countMerge(cnt) FROM without_deduplication_mv;
CREATE TABLE lc_nullable (`order_key` Array(LowCardinality(Nullable(UInt64))), `i8` Array(LowCardinality(Nullable(Int8))), `i16` Array(LowCardinality(Nullable(Int16))), `i32` Array(LowCardinality(Nullable(Int32))), `i64` Array(LowCardinality(Nullable(Int64))), `u8` Array(LowCardinality(Nullable(UInt8))), `u16` Array(LowCardinality(Nullable(UInt16))), `u32` Array(LowCardinality(Nullable(UInt32))), `u64` Array(LowCardinality(Nullable(UInt64))), `f32` Array(LowCardinality(Nullable(Float32))), `f64` Array(LowCardinality(Nullable(Float64))), `date` Array(LowCardinality(Nullable(Date))), `date_time` Array(LowCardinality(Nullable(DateTime('Asia/Istanbul')))), `str` Array(LowCardinality(Nullable(String))), `fixed_string` Array(LowCardinality(Nullable(FixedString(5))))) ENGINE = MergeTree ORDER BY order_key SETTINGS allow_nullable_key = 1, index_granularity = 416, min_bytes_for_wide_part = 793572971, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 8, merge_max_block_size = 761, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 8962315969, index_granularity_bytes = 10769349, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 63554, primary_key_compress_block_size = 48436
SELECT sum(isNull(t1.x)), count(t1.x) FROM nt AS t1 LEFT JOIN nt AS t2 ON t1.x = t2.x;
ALTER TABLE concurrent_alter_mt_5 MODIFY COLUMN value1 UInt32 SETTINGS replication_alter_partitions_sync=0
SELECT 'Running test stateless/01945_system_warnings.sh from pid=1705' 
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 32788, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT 'Running test stateless/02337_base58.sql from pid=1724' 
CREATE TABLE test_01193_18429.table_10_30 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT key2, arrayReduce('uniqExactMerge', arr) FROM ( SELECT key1 % 3 AS key2, groupArray(state) AS arr FROM ( SELECT number % 10 AS key1, uniqExactState(number) AS state FROM ( SELECT * FROM system.numbers LIMIT 100 ) GROUP BY key1 ) GROUP BY key2 ) ORDER BY key2;
insert into test select 2;
CREATE DATABASE IF NOT EXISTS test_k7kpf9v0 
SELECT * FROM system.functions WHERE name ILIKE 'quantile%'
CREATE PROFILE s4_01294 SETTINGS profile readonly, readonly;
SELECT tupleHammingDistance((1, 2), (1, Null));
CREATE TABLE test_02908_r1_213 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_213', 'r1') ORDER BY tuple()
CREATE TABLE test_7E337C34557A467134685B4B314D346023493A7071717C6D61267067596656696C2C3F22754F2260(x UInt8) Engine=Memory;
alter table trunc attach partition id '0';
drop table if exists mult_tab;
CREATE TABLE test_01193_18429.table_3_173 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE DATABASE IF NOT EXISTS test_p9as4n7o 
DROP TABLE 01056_window_view_proc_hop_watch.wv
SELECT count() - sum(is_readonly) FROM system.replicas WHERE database=currentDatabase() AND table LIKE 'concurrent_alter_mt_%'
SELECT 'Pacific/Enderbury', toDateTime('2020-01-02 03:04:05', 'Pacific/Enderbury') AS x, toStartOfDay(x), toHour(x);
create table test_table_url(id UInt32) ENGINE = URL('http://localhost/endpoint', 'JSONEachRow', 'auto');
SELECT 'Running test stateless/02177_issue_31009.sql from pid=1718' 
DROP DATABASE IF EXISTS test_e8mqhr27 
CREATE TABLE test_7B47716F3C2D75762851724D29686B6F3D48206F216B2A464A706355542A6E65597B483F445E3A2D(x UInt8) Engine=Memory;
SELECT nothingNullIfArrayArray([[1, NULL]], [[1, 0]]) AS `x` FROM numbers(3)
CREATE TABLE date_dim (`d_date_sk` Int64, `d_date_id` String, `d_date` Nullable(Date), `d_month_seq` Nullable(Int64), `d_week_seq` Nullable(Int64), `d_quarter_seq` Nullable(Int64), `d_year` Nullable(Int64), `d_dow` Nullable(Int64), `d_moy` Nullable(Int64), `d_dom` Nullable(Int64), `d_qoy` Nullable(Int64), `d_fy_year` Nullable(Int64), `d_fy_quarter_seq` Nullable(Int64), `d_fy_week_seq` Nullable(Int64), `d_day_name` Nullable(String), `d_quarter_name` Nullable(String), `d_holiday` Nullable(String), `d_weekend` Nullable(String), `d_following_holiday` Nullable(String), `d_first_dom` Nullable(Int64), `d_last_dom` Nullable(Int64), `d_same_day_ly` Nullable(Int64), `d_same_day_lq` Nullable(Int64), `d_current_day` Nullable(String), `d_current_week` Nullable(String), `d_current_month` Nullable(String), `d_current_quarter` Nullable(String), `d_current_year` Nullable(String)) ENGINE = MergeTree ORDER BY d_date_sk SETTINGS index_granularity = 54709, min_bytes_for_wide_part = 729090018, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 22777, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 256871, vertical_merge_algorithm_min_columns_to_activate = 36, min_merge_bytes_to_use_direct_io = 7728769504, index_granularity_bytes = 9282957, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 19664, primary_key_compress_block_size = 11428
select (1 ? (toUInt8(0) as i) : toInt32(1)) = i;
SELECT *,_block_number,_part from test ORDER BY id;
INSERT INTO test_01193_18429.table_2_413 VALUES 
CREATE TABLE attach_partition_t6 (`a` UInt32, `b` String, PROJECTION proj (SELECT b, sum(a) GROUP BY b)) ENGINE = MergeTree ORDER BY a SETTINGS index_granularity = 25866, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 4303, prefer_fetch_merged_part_size_threshold = 2505950316, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 7469782776, index_granularity_bytes = 8318948, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 84124, primary_key_compress_block_size = 74757
CREATE TABLE test_01193_18429.table_9_503 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_6F5664512B344A2741512B7844237C6D5C264467396C515D633B27274E7E303E3343762A23252E3F(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_2_269 VALUES 
INSERT INTO test_01193_18429.table_1_254 VALUES 
DROP DATABASE IF EXISTS test_ik259ipu 
SELECT CASE WHEN (number % 2) = 0 THEN toInt16(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toUInt8(3) END FROM system.numbers LIMIT 10;
DROP VIEW test_02428_v1
CREATE DATABASE IF NOT EXISTS test_lzb7pic9 
SELECT arrayStringConcat(arrayMap(x -> transform(x, [1025, -9223372036854775808, 65537, 257, 1048576, 10, 7, 1048575, 65536], ['censor.net', 'googlegooglegooglegoogle', 'test', '', '', 'hello', 'world', '', 'xyz'], ''), arrayMap(x -> (x % -inf), range(number))), '') FROM system.numbers LIMIT 1025 FORMAT Null;
SELECT YYYYMMDDhhmmssToDateTime64(NULL);
CREATE TABLE test_242E766B73637D3443366B5657622C2B556B317E317B485753245D386D6C4B2F72612B6F592B2E43(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_8_136 VALUES 
INSERT INTO nt (x) SELECT NULL as x FROM numbers(1000);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (6 < 59 AND 76 > 0 ? 6 : 0)), throwIf(last != (6 < 59 AND 76 > 0 ? least(59 - 1, 6 + 76 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(59) LIMIT 6, 76);
SELECT toTypeName(tup), toTypeName(tup.1), toTypeName(tup.2), toTypeName(tup.3) FROM decimal;
CREATE INDEX idx_tab3_1 ON tab3 (col0 DESC);
SELECT * FROM information_schema.tables LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
SELECT quantileExactHigh(NULL, NULL);
select if(number % 5 == 0, Null, toDecimal64OrZero(toString(number), 5)) from numbers(20);
SELECT count(), min(x), max(x), sum(x) FROM r7;
SELECT dictGet('01753_dictionary_db.direct_dictionary_simple_key_simple_attributes', 'value_first', number) as value_first, dictGet('01753_dictionary_db.direct_dictionary_simple_key_simple_attributes', 'value_second', number) as value_second FROM system.numbers LIMIT 4;
alter table many_mutations delete where y = 533 * 2 settings mutations_sync = 0;
CREATE TABLE 01685_database_for_cache_dictionary.complex_key_simple_attributes_source_table ( id UInt64, id_key String, value_first String, value_second String ) ENGINE = TinyLog;
SELECT repeat(strings, u64) FROM defaults;
CREATE DATABASE IF NOT EXISTS test_h7qxd540 
CREATE TABLE dist_tbl ENGINE = Distributed('test_shard_localhost', currentDatabase(), 'local_tbl', rand());
INSERT INTO test_01193_18429.table_10_335 VALUES 
SELECT 'Running test stateless/00752_low_cardinality_permute.sql from pid=1718' 
SELECT * FROM bloom_filter_idx WHERE startsWith(s, 'abra') ORDER BY k FORMAT JSON
select [4] = multiSearchAllPositions(materialize('abcdefgh'), ['defgh']) from system.numbers limit 10;
SELECT 'Running test stateless/00332_quantile_timing_memory_leak.sql from pid=1705' 
SELECT 1025 == count(n) FROM foo_lc AS t1 ANY LEFT JOIN foo AS t2 ON t1.n == t2.n;
DROP TABLE IF EXISTS tags;
SELECT age('year', toDate('2017-12-31'), toDate('2017-01-01'));
INSERT INTO TABLE test1(year, uv) select '2022',uniqThetaState(toInt64(3));
DROP DATABASE IF EXISTS test_54tq9361 
SELECT toDecimal64(4,4) - toDecimal32(2,2);
SELECT id, yago FROM ( SELECT item_id AS id, arrayJoin(emptyArrayInt32()) FROM t GROUP BY id WITH TOTALS ORDER BY id ) AS ll FULL OUTER JOIN ( SELECT item_id AS id, SUM(price_sold) AS yago FROM t GROUP BY id ) AS rr USING (id);
INSERT INTO src_12 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 9
CREATE TABLE test_5D307B2C3F3074316C49275C512D565F446D2B43653C674C64363042682538416C372A62587E4B23(x UInt8) Engine=Memory;
SELECT hasToken('hay,hay,hay,hay,hay,hay,hay,hay,hay,NEEDLE,hay,hay,hay,hay,hay,hay,hay,hay,hay', 'NEEDLE'), ' expecting ', 1;
CREATE TABLE test_282B3F36783D312A483660527C43462F687B5D497B31415D463422787C3A6A70765B736F7B725F4C(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_51oxv8qp 
DETACH TABLE compression_codec_replicated1;
SELECT bitmapSubsetLimit(NULL, NULL, NULL);
CREATE TABLE IF NOT EXISTS topXtest(A Int64) ENGINE = Memory;
CREATE TABLE test_725D26222B203325406B326824692D642258535F6A4639496A6D446B2E6A374651467656483E4361(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_5_231 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT visitParamHas(CAST('\0' AS Nullable(String)),'');
CREATE TABLE test_01193_18429.table_10_966 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/02551_ipv4_implicit_uint64.sql from pid=1722' 
INSERT INTO test_01193_18429.table_8_206 VALUES 
CREATE TABLE part_header_r2 (`x` UInt32, `y` UInt32) ENGINE = ReplicatedMergeTree('/clickhouse/tables/00814_replicated_minimalistic_part_header_zookeeper_test_wcue72qz/test_00814/part_header/{shard}', '2{replica}') ORDER BY x SETTINGS use_minimalistic_part_header_in_zookeeper = 1, old_parts_lifetime = 1, cleanup_delay_period = 0, cleanup_delay_period_random_add = 0, cleanup_thread_preferred_points_per_iteration = 0, index_granularity = 27532, min_bytes_for_wide_part = 571346640, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 17, merge_max_block_size = 15920, prefer_fetch_merged_part_size_threshold = 3458486608, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 6977721323, index_granularity_bytes = 30185203, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 70197, primary_key_compress_block_size = 59554
CREATE DATABASE IF NOT EXISTS test_d0yv4lhd 
SET implicit_transaction=1;
CREATE DATABASE IF NOT EXISTS test_2oodowf2 
select min(i), max(i), count() from d;
CREATE TABLE nullable_low_cardinality_tsv_test ( A Date, S LowCardinality(Nullable(String)), X Int32, S1 LowCardinality(Nullable(String)), S2 Array(String) ) ENGINE=TinyLog
INSERT INTO test_01193_18429.table_10_43 VALUES 
select makeDate(2150,1,1);
DROP DATABASE IF EXISTS test_x6wo3lo3 
CREATE TABLE test_6F746F4D464C686D4226413D4C2D613F2F425E5B5E3832646D3D62615A704C48452F28443E5A262C(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_10_381 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT arrayPopBack([]);
CREATE DATABASE IF NOT EXISTS test_miftexk6 
INSERT INTO test_01193_18429.table_6_97 VALUES 
select number, number + 1, concat('string: ', toString(number)) from numbers(200000) group by number with totals order by number limit 190000 format JSON
CREATE USER test_user_01073;
SELECT materialize(toUInt8(0)) AS x, toUInt16(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
CREATE TABLE test_4043614B59367531396E2E487E5B5D684F2B4B6522717A3C746A5E2D45552045547A6B4132472E4B(x UInt8) Engine=Memory;
SELECT -0x1.234;
SELECT count() FROM `test_j2zj9xxq`.`tt`
SELECT 'Running test stateless/01940_custom_tld_sharding_key.sql from pid=1720' 
CREATE TABLE test_01193_18429.table_6_802 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE t4 (`a` UInt32, `b` UInt16, `val` UInt32) ENGINE = MergeTree ORDER BY tuple() SETTINGS ratio_of_defaults_for_sparse_serialization = 1, index_granularity = 21162, min_bytes_for_wide_part = 583251239, replace_long_file_name_to_hash = true, max_file_name_length = 123, merge_max_block_size = 4377, prefer_fetch_merged_part_size_threshold = 2347218820, vertical_merge_algorithm_min_rows_to_activate = 44654, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 8803227504, index_granularity_bytes = 21356536, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 95167, primary_key_compress_block_size = 87373
CREATE TABLE test_01193_18429.table_2_405 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP TABLE IF EXISTS mv;
SELECT LinfDistance((1, 1), (1, 2));
select '-------toStartOfYear---------';
SELECT 'SELECT toYear(N, \'Asia/Istanbul\')';
INSERT INTO alter_table_1 SELECT rand(1), rand(2), 1 / rand(3), toString(rand(4)), [rand(5), rand(6)], rand(7) % 2 ? NULL : generateUUIDv4(), (rand(8), rand(9)) FROM numbers(100000)
INSERT INTO test_01193_18429.table_4_551 VALUES 
INSERT INTO test_01193_18429.table_1_478 VALUES 
SELECT subtractMonths(NULL);
CREATE TABLE test_6E3752507854453A594F332264414B4E44642C3F754A6922376B47374141412B3E4C755144676E32(x UInt8) Engine=Memory;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 43176, 500 settings ignore_materialized_views_with_dropped_target_table=1
INSERT INTO A(k,t,a) VALUES 
INSERT INTO test_01193_18429.table_6_923 VALUES 
CREATE TABLE test_7D662F586862517C5B34625F51375843396A495A7671405C5F673B697B7D66534733656E5B484837(x UInt8) Engine=Memory;
CREATE TABLE test_bit_shift_left_string_integer (str String, fixedStr FixedString(10), id Int64) engine=Log;
SELECT 32769, -9223372036854775808, 32769 = -9223372036854775808, 32769 != -9223372036854775808, 32769 < -9223372036854775808, 32769 <= -9223372036854775808, 32769 > -9223372036854775808, 32769 >= -9223372036854775808, -9223372036854775808 = 32769, -9223372036854775808 != 32769, -9223372036854775808 < 32769, -9223372036854775808 <= 32769, -9223372036854775808 > 32769, -9223372036854775808 >= 32769 , toUInt16(32769) = toInt64(-9223372036854775808), toUInt16(32769) != toInt64(-9223372036854775808), toUInt16(32769) < toInt64(-9223372036854775808), toUInt16(32769) <= toInt64(-9223372036854775808), toUInt16(32769) > toInt64(-9223372036854775808), toUInt16(32769) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toUInt16(32769), toInt64(-9223372036854775808) != toUInt16(32769), toInt64(-9223372036854775808) < toUInt16(32769), toInt64(-9223372036854775808) <= toUInt16(32769), toInt64(-9223372036854775808) > toUInt16(32769), toInt64(-9223372036854775808) >= toUInt16(32769) , toUInt32(32769) = toInt64(-9223372036854775808), toUInt32(32769) != toInt64(-9223372036854775808), toUInt32(32769) < toInt64(-9223372036854775808), toUInt32(32769) <= toInt64(-9223372036854775808), toUInt32(32769) > toInt64(-9223372036854775808), toUInt32(32769) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toUInt32(32769), toInt64(-9223372036854775808) != toUInt32(32769), toInt64(-9223372036854775808) < toUInt32(32769), toInt64(-9223372036854775808) <= toUInt32(32769), toInt64(-9223372036854775808) > toUInt32(32769), toInt64(-9223372036854775808) >= toUInt32(32769) , toInt32(32769) = toInt64(-9223372036854775808), toInt32(32769) != toInt64(-9223372036854775808), toInt32(32769) < toInt64(-9223372036854775808), toInt32(32769) <= toInt64(-9223372036854775808), toInt32(32769) > toInt64(-9223372036854775808), toInt32(32769) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toInt32(32769), toInt64(-9223372036854775808) != toInt32(32769), toInt64(-9223372036854775808) < toInt32(32769), toInt64(-9223372036854775808) <= toInt32(32769), toInt64(-9223372036854775808) > toInt32(32769), toInt64(-9223372036854775808) >= toInt32(32769) , toUInt64(32769) = toInt64(-9223372036854775808), toUInt64(32769) != toInt64(-9223372036854775808), toUInt64(32769) < toInt64(-9223372036854775808), toUInt64(32769) <= toInt64(-9223372036854775808), toUInt64(32769) > toInt64(-9223372036854775808), toUInt64(32769) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toUInt64(32769), toInt64(-9223372036854775808) != toUInt64(32769), toInt64(-9223372036854775808) < toUInt64(32769), toInt64(-9223372036854775808) <= toUInt64(32769), toInt64(-9223372036854775808) > toUInt64(32769), toInt64(-9223372036854775808) >= toUInt64(32769) , toInt64(32769) = toInt64(-9223372036854775808), toInt64(32769) != toInt64(-9223372036854775808), toInt64(32769) < toInt64(-9223372036854775808), toInt64(32769) <= toInt64(-9223372036854775808), toInt64(32769) > toInt64(-9223372036854775808), toInt64(32769) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toInt64(32769), toInt64(-9223372036854775808) != toInt64(32769), toInt64(-9223372036854775808) < toInt64(32769), toInt64(-9223372036854775808) <= toInt64(32769), toInt64(-9223372036854775808) > toInt64(32769), toInt64(-9223372036854775808) >= toInt64(32769) 
CREATE TABLE test_52576355593E52574B3A5C6C4778616B3266365B763E666E7C28712B6F4B402C343746717C7E5029(x UInt8) Engine=Memory;
DROP TABLE t_json_mutations;
SELECT count() FROM t_cnf_fuzz WHERE (c8 AND c4 AND (NOT c7) AND (NOT c1) AND c7) OR (c9) OR (c8) OR ((NOT c9)) OR ((NOT c3) AND (NOT c0) AND (NOT c6) AND (NOT c9) AND c1) SETTINGS convert_query_to_cnf = 0
CREATE DATABASE IF NOT EXISTS test_yzy729qc 
CREATE TABLE test_01193_18429.table_10_544 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE map_test_index_map_keys (`row_id` UInt32, `map` Map(String, String), INDEX map_bloom_filter_keys mapKeys(map) TYPE bloom_filter GRANULARITY 1) ENGINE = MergeTree ORDER BY row_id SETTINGS index_granularity = 1, min_bytes_for_wide_part = 64314209, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 102, merge_max_block_size = 17111, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1909772992, index_granularity_bytes = 3458733, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 12837, primary_key_compress_block_size = 15513
SELECT system.one.dummy FROM one;
SELECT cityHash64(groupArray(cityHash64(*))) FROM buf_00385
DROP TABLE IF EXISTS binary_op_mono3;
select * from format(JSONCompactEachRow, '[1,1]\n[2]\n[]\n[3,3,3,3]') settings input_format_json_compact_allow_variable_number_of_columns=1;
desc format(JSONEachRow, '{"x" : ["123", 123, 12.3]}');
desc file(02416_data.json);
CREATE TABLE test_61366A26395766775F442D5B27292024337142395C444C5131616C6A43203337506122577B2E2E22(x UInt8) Engine=Memory;
SELECT toDecimal32OrDefault ('1.1111111111111111111111111111111111111', 4);
CREATE TABLE test_422B2F4E507A6E7E252174726F406A2C7E69417B344E6A632F385E367D46292877604B67715E3A34(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_evk4tqw8 
CREATE TABLE test_01193_18429.table_4_807 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT toStartOfWeek(toDateTime('2017-12-31 00:00:00', 'UTC'), 0, 'UTC');
SELECT number, neighbor('Hello', -3, 'World') FROM numbers(10);
SELECT multiIf((number % 2) = 0, toInt32(1), (number % 3) = 0, toUInt32(2), toInt8(3)) FROM system.numbers LIMIT 10;
WITH arrayJoin(['a', 'b']) AS `z` SELECT sumStateForEach([1., 1.1, 1.1300175]) AS `x` FROM `system`.`one`
SELECT startsWith(s, 'He') FROM (SELECT arrayJoin(['', 'H', 'He', 'Hellow', '3434', 'fffffffffdHe']) AS s);
CREATE DATABASE IF NOT EXISTS test_g6lb23z3 
CREATE TABLE test_4159462D70224A4A57482C5A712466203F7C373C6F787C3F575D79512B25577C51553F3E6E697D53(x UInt8) Engine=Memory;
SELECT (NULL IN (SELECT 9223372036854775806 IN (SELECT 65536), inf, NULL IN (NULL))) IN (SELECT NULL IN (NULL));
INSERT INTO test_01193_18429.table_2_551 VALUES 
INSERT INTO r7 SELECT 96 % 10 = 7 ? 96 - 1 : 96
CREATE TABLE test_01193_18429.table_6_536 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT s FROM (SELECT materialize('abc') AS s FROM system.numbers LIMIT 100) ORDER BY s DESC 
SELECT '54' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:fc00::')))
ALTER TABLE concurrent_alter_column ADD COLUMN c1 DOUBLE;
SELECT 'leftPad';
insert into tbl_8parts_16granules_seq select number, 1 from numbers_mt(1048576);
CREATE TABLE events (`EventDate` Date, `EventDateTime` DateTime, `EventId` String, `SessionId` FixedString(36), `PageViewId` FixedString(36), `UserId` UInt64, `UniqUserId` FixedString(36), `UrlReferrer` String, `Param1` String, `Param2` String, `Param3` String, `Param4` String, `Param5` String, `Param6` String, `Param7` String, `Param8` String, `Param9` String, `Param10` String, `ApplicationType` UInt8, `Locale` String, `Lang` String, `Version` String, `Path` String, `QueryString` String, `UserHostAddress` UInt32) ENGINE = MergeTree PARTITION BY (toYYYYMM(EventDate), EventId) ORDER BY (EventId, EventDate, Locale, ApplicationType, intHash64(UserId)) SAMPLE BY intHash64(UserId) SETTINGS index_granularity = 8192, min_bytes_for_wide_part = 34067505, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 6205, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 22388979, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 34009, primary_key_compress_block_size = 20410
CREATE TABLE test_01193_18429.table_9_308 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select atan2(-1, -1) = -3 * pi() / 4;
INSERT INTO test_01193_18429.table_6_503 VALUES 
ALTER TABLE table_for_freeze_old_syntax FREEZE PARTITION '202103' WITH NAME 'test_01417_single_part_old_syntax' FORMAT TSVWithNames SETTINGS alter_partition_verbose_result = 1;
CREATE TABLE test_01193_18429.table_7_757 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select * from tab2 order by toStartOfDay(x), intDiv(intDiv(y, -2), -3);
CREATE TABLE test_3D713336604F4A3273795A3B493337337B51735423737657374C284B7B2038405733766E7E2D7E6B(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00633_materialized_view_and_too_many_parts_zookeeper.sh from pid=1713' 
SELECT CASE WHEN 1 THEN toFixedString('foo', 16) WHEN 1 THEN toFixedString(col3, 16) ELSE col4 END FROM multi_if_check;
insert into rmt1 values 
alter table many_mutations delete where y = 801 * 2 settings mutations_sync = 0;
CREATE DATABASE IF NOT EXISTS test_81lld5jg 
/* stddevPop */ SELECT stddevPop(x_value) FROM (SELECT x_value FROM series LIMIT 0);
DROP DATABASE IF EXISTS db_test_16wuveew;
drop table if exists funnel_test_strict_order;
SELECT * FROM arrow_types3 ORDER BY int8 FORMAT ArrowStream
ALTER TABLE test6 DROP PARTITION _CAST((1, 2), 'Tuple(UInt32, Int64)')
SELECT * FROM partitioned_by_tuple ORDER BY d, x, w, y;
CREATE TABLE test_726821546C2C2A5F584950476A4C414C362F354A727B215169796A757D24722C34614D226F60362E(x UInt8) Engine=Memory;
select isFinite(materialize(0)) = 1;
select 1 = isValidUTF8(toValidUTF8('\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xF1\x80\xC2\x80')) from system.numbers limit 10;
INSERT INTO replicated_alter1 VALUES 
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 485, 500 settings ignore_materialized_views_with_dropped_target_table=1
with groupArrayArraySimpleState([number]) as c select toTypeName(c), c from numbers(1);
CREATE TABLE test_01193_18429.table_5_107 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select hex(sipHash128ReferenceKeyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33)));
CREATE TABLE test_207B334A3158367A493C45736A3B3B372D323D33703C61296F79624D5C5C6E562D472B3167744F6B(x UInt8) Engine=Memory;
SELECT arrayJoin(['hello', 'world']) LIKE '%hell';
DROP DATABASE IF EXISTS test_n24wfuix 
CREATE TABLE test_01193_18429.table_7_794 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_1_801 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DATABASE IF NOT EXISTS test_e47zppjt 
desc file('02305_schema_inference_with_globs_test_ljcc6vwv_data*.jsonl') settings input_format_max_rows_to_read_for_schema_inference=32, input_format_json_infer_incomplete_types_as_strings=0
CREATE TABLE test_01193_18429.table_3_790 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select '---Q8---';
SELECT * FROM test_table_2 FORMAT JSONCompactStringsEachRow;
SELECT toInt32(-199) % toUInt32(200) as k, toTypeName(k);
select format('{}{}{}', toFixedString('a', 1), toFixedString('b', 1), toFixedString('c', 1)) == 'abc' from system.numbers limit 5;
SELECT 'Running test stateless/01560_DateTime_and_DateTime64_comparision.sql from pid=1722' 
CREATE TABLE test_01193_18429.table_4_513 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select key, sum(sum(value)) over (rows unbounded preceding) from dist_01247 group by key;
SELECT * FROM system.replication_queue WHERE table = 'concurrent_alter_mt_4' and (type = 'ALTER_METADATA' or type = 'MUTATE_PART')
CREATE DATABASE IF NOT EXISTS test_hysieiuf 
SELECT quantileTDigest(NULL);
select makeDate(2149, 158);
INSERT INTO test_02908_r1_81 SELECT rand64() FROM numbers(5);
SELECT * FROM test_table_join_1 AS t1 INNER JOIN test_table_join_2 AS t2 USING (id) RIGHT JOIN test_table_join_3 AS t3 USING (id) ORDER BY id, t1.value;
SET distributed_aggregation_memory_efficient = 1, group_by_two_level_threshold = 1000, group_by_overflow_mode = 'any', max_rows_to_group_by = 1000, totals_mode = 'after_having_auto';
SELECT 'Running test stateless/02731_zero_objects_in_metadata.sh from pid=1713' 
alter table many_mutations delete where y = 480 * 2 settings mutations_sync = 0;
SELECT 'Running test stateless/01383_remote_ambiguous_column_shard.sql from pid=1705' 
select position(materialize('') as h, lower('ÃÂ°ÃÂÃÂ²' as n)) = positionCaseInsensitive(h, n);
SELECT toTypeName(1 + today()) = 'Date';
CREATE TABLE test_01193_18429.table_9_655 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select 'Offset > block';
CREATE DATABASE IF NOT EXISTS test_tilp70lb 
insert into mult_tab select '2018-01-31', 'str_' || toString(number), 1, if(number % 3 = 1, 1, -1) from system.numbers limit 10;
select toDate('2018-01-01') == '2018-01-01';
CREATE TABLE replacing (`d` Date, `x` UInt32, `s` String) ENGINE = ReplacingMergeTree PARTITION BY d ORDER BY x SETTINGS index_granularity = 58299, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 9848, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 11762772, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 49821, primary_key_compress_block_size = 74473
SELECT formatDateTime(toDate('2010-01-01'), '%g');
SELECT concat('Two arguments ', 'test');
DROP TABLE squares_protobuf_00825
SELECT age('hour', toDate32('1927-01-01', 'UTC'), toDate32('1927-01-02', 'UTC'), 'UTC');
CREATE TABLE test_01193_18429.table_9_594 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT * from db_01721.table_decimal_dict where KeyField = 5000;
DROP DATABASE IF EXISTS test_6z8esw5d 
DROP TABLE tuple_values;
ATTACH TABLE rmt1;
SELECT formatQuerySingleLine('SELECT 1');
set join_algorithm = 'partial_merge';
SELECT event,value FROM system.events WHERE event IN ('QueryTimeMicroseconds','SelectQueryTimeMicroseconds','InsertQueryTimeMicroseconds') FORMAT CSV
INSERT INTO test_01193_18429.table_9_749 VALUES 
CREATE TABLE test_39206F4E686C5C53344E2D26444A4C6B352540422D243C2751632E6C635426476A3867733320305F(x UInt8) Engine=Memory;
CREATE DATABASE 01682_database_for_cache_dictionary;
SELECT log2(-1);
select 1 = multiMatchAny(materialize('abc'), ['a\0d']) from system.numbers limit 10;
SELECT count() FROM (SELECT * FROM 02919_test_table_reuse_args LIMIT 100);
select '- 1';
SELECT CASE WHEN 1 THEN col2 WHEN 1 THEN toFixedString(col3, 16) ELSE toFixedString('baz', 16) END FROM multi_if_check;
INSERT INTO test_01193_18429.table_6_240 VALUES 
SELECT hasTokenCaseInsensitive('needle,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,', 'NEEDLE'), ' expecting ', 1;
CREATE TABLE tab (`x` DateTime) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 18930, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 64, merge_max_block_size = 8923, prefer_fetch_merged_part_size_threshold = 7787277522, vertical_merge_algorithm_min_rows_to_activate = 150565, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 28914596, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 14439, primary_key_compress_block_size = 32044
CREATE TABLE customer_demographics (`cd_demo_sk` Int64, `cd_gender` Nullable(String), `cd_marital_status` Nullable(String), `cd_education_status` Nullable(String), `cd_purchase_estimate` Nullable(Int64), `cd_credit_rating` Nullable(String), `cd_dep_count` Nullable(Int64), `cd_dep_employed_count` Nullable(Int64), `cd_dep_college_count` Nullable(Int64)) ENGINE = MergeTree ORDER BY cd_demo_sk SETTINGS index_granularity = 54709, min_bytes_for_wide_part = 729090018, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 22777, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 256871, vertical_merge_algorithm_min_columns_to_activate = 36, min_merge_bytes_to_use_direct_io = 7728769504, index_granularity_bytes = 9282957, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 19664, primary_key_compress_block_size = 11428
SELECT '123' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffe0')))
SELECT multiIf((number % 2) = 0, toInt16(1), (number % 3) = 0, toUInt16(2), toInt64(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_5_326 VALUES 
CREATE TABLE test_01193_18429.table_1_147 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP DATABASE IF EXISTS test_rzq5lmy4 
CREATE TABLE test_01193_18429.table_2_13 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT `t`.dummy FROM system.one AS t;
select arrayFilter(x -> 2 * x > 0, []);
INSERT INTO test_01193_18429.table_1_989 VALUES 
SELECT CAST('127.0.0.1' as IPv4) as v, toTypeName(v);
SELECT throwIf((SELECT (count(), sum(n)) FROM merge(currentDatabase(), '') WHERE type=4) != (toUInt8(13/2 + 1), (select sum(number) from numbers(1, 13) where number % 2 or number=13))) FORMAT Null
SELECT ngramSimHashCaseInsensitive(NULL, NULL);
SELECT '-- count() with parallel replicas -------';
insert into table function file(concat(currentDatabase(), '/test4/data.Parquet.gz'), 'Parquet', 'number UInt64') select * from numbers(10, 10) settings engine_file_allow_create_multiple_files=1;
drop table if exists test_ins_arr_null;
SELECT arrayAll(x -> 0, emptyArrayString());
CREATE TABLE test_01193_18429.table_4_153 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_28hqcbem 
INSERT INTO test_01193_18429.table_5_19 VALUES 
CREATE DATABASE IF NOT EXISTS test_gdupjawq 
SELECT throwIf((SELECT (count(), sum(n)) FROM merge(currentDatabase(), '') WHERE type=4) != (toUInt8(10/2 + 1), (select sum(number) from numbers(1, 10) where number % 2 or number=10))) FORMAT Null;
INSERT INTO foo SELECT toString(number) AS n FROM system.numbers LIMIT 1025;
INSERT INTO src_4 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 56
INSERT INTO test_01193_18429.table_8_405 VALUES 
INSERT INTO r10 SELECT 71
INSERT INTO test_01193_18429.table_10_468 VALUES 
drop table if exists src_02225;
SELECT * FROM ngrambf_v1_hasany_test WHERE hasAny(array, ['example.com']) SETTINGS force_data_skipping_indices='idx_array_ngrambf_v1';
INSERT INTO bar (ts, x) SELECT toDateTime('2020-01-01 00:05:00'), number from system.numbers_mt LIMIT 10;
select 0 = multiSearchAny(materialize('abc'), ['abcdef']);
SELECT 2 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'asn', tuple(IPv4StringToNum('192.0.0.0')))
CREATE DATABASE IF NOT EXISTS test_jyc2gm6n 
INSERT INTO r6 SELECT 99 % 10 = 6 ? 99 - 1 : 99
SELECT h3UnidirectionalEdgeIsValid(stringToH3('85283473ffffff')) as edge;
CREATE TABLE test_01193_18429.table_7_430 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO t2 SELECT toString(number), toDecimal64(number, 8) FROM system.numbers LIMIT 1000000;
CREATE TABLE test_01193_18429.table_5_965 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_2058725D4A39767D2738517D68537068396E2F63385F6C4E2B3175202F31287D4A5C385F623C662E(x UInt8) Engine=Memory;
CREATE TABLE t_index_hypothesis (`a` UInt32, `b` UInt32, INDEX t a != b TYPE hypothesis GRANULARITY 1) ENGINE = MergeTree ORDER BY a SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 3070, prefer_fetch_merged_part_size_threshold = 581777426, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 6089926150, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 8673, primary_key_compress_block_size = 50607
SELECT splitByNonAlpha('128.0.0.1', 3) SETTINGS splitby_max_substrings_includes_remaining_string = 1;
select initcap('hello world');
DROP TABLE IF EXISTS concurrent_mutate_mt_4
DROP DATABASE IF EXISTS test_c5f2k3ts 
SELECT netloc('');
SELECT 'Running test stateless/01666_gcd_ubsan.sql from pid=1713' 
SELECT toUUIDOrZero(NULL);
CREATE TABLE test_01193_18429.table_2_456 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT * FROM maps
SELECT sumIf(dummy, 1) FROM remote('127.0.0.{1,2}', view(SELECT cast(dummy AS Nullable(UInt8)) AS dummy FROM system.one));
SELECT count() FROM bftest WHERE hasAny(x, []) FORMAT Null;
SELECT t1.id, t1.value, t2.id, t2.value FROM test_table_join_1 AS t1 LEFT JOIN test_table_join_2 AS t2 ON t1.id = t2.id AND t2.value = 'Join_2_Value_0';
INSERT INTO test_01193_18429.table_8_869 VALUES 
CREATE TABLE test_7434765A29657069507E67624A46686C3B4955365A5F2F775D2F352569373B592120585630663D4A(x UInt8) Engine=Memory;
SELECT 'non-const, uint';
SELECT medianBFloat16(NULL, NULL, NULL);
SELECT count() == 2 FROM t1 LEFT JOIN t2 ON 1 = 2;
SELECT 'Running test stateless/00984_materialized_view_to_columns.sql from pid=1724' 
INSERT INTO r8 SELECT 45
SELECT 1, sleep(0.014281)
SELECT dictGet('executable_pool_simple', 'b', toUInt64(2));
RESTORE TABLE data AS data_native_copy FROM S3(s3_conn, 'backups/test_s5wpyi15/data_native_copy') SETTINGS allow_s3_native_copy=true
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c3)) OR (c8 AND c9 AND (NOT c7) AND c5 AND c8) OR (c1 AND (NOT c2) AND c5 AND (NOT c2)) SETTINGS convert_query_to_cnf = 0
DROP FUNCTION 01856_test_function_2;
SELECT t as e, toTypeName(e) FROM ( SELECT ((((1, 's'), 's'), 's'), 's') :: Tuple(t Tuple(t Tuple(t Tuple(t UInt32, s String), s String), s String), s String) as t ) ttta FULL JOIN ( SELECT ((((2, 's'), 's'), 's'), 's') :: Tuple(t Tuple(t Tuple(t Tuple(t Int32, s String), s String), s String), s String) as t ) tttb USING (t);
INSERT INTO test_01193_18429.table_3_571 VALUES 
SELECT 'Running test stateless/01441_low_cardinality_array_index.sql from pid=1713' 
CREATE DICTIONARY simple_key_dictionary ( id UInt64, value String, value_nullable Nullable(String) ) PRIMARY KEY id SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'simple_key_dictionary_source_table')) LAYOUT(DIRECT());
SELECT 'Running test stateless/00109_shard_totals_after_having.sql from pid=1715' 
INSERT INTO r3 SELECT 17 % 10 = 3 ? 17 - 1 : 17
CREATE TABLE test_747267355D6E693B613F24567A717C632E3C7C496D295A462340614F5C2A755E7B50706B67654B55(x UInt8) Engine=Memory;
CREATE TABLE src (`A` Int64, `B` String, `C` String) ENGINE = ReplicatedMergeTree('/clickhouse/{database}/test/src1', '1') ORDER BY A SETTINGS min_bytes_for_wide_part = 0, index_granularity = 58834, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 17462, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 215040, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 4784844898, index_granularity_bytes = 21241274, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 18062, primary_key_compress_block_size = 35281
INSERT INTO test_01193_18429.table_9_53 VALUES 
INSERT INTO test_01193_18429.table_5_246 VALUES 
CREATE TABLE huge_strings (`n` UInt64, `l` UInt64, `s` String, `h` UInt64) ENGINE = MergeTree ORDER BY n SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.38050341606140137, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 10625, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 4699830163, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 32167, primary_key_compress_block_size = 53764
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), N != DT as r FORMAT CSV;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt64(1), toInt64(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
select count(ignore(*)) from data_02051 settings min_bytes_to_use_direct_io=0, local_filesystem_read_method='pread_fake_async', local_filesystem_read_prefetch=0, read_priority=0, max_read_buffer_size=1048576 ;
CREATE TABLE test_01193_18429.table_7_125 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), N + toUInt32(1) as r FORMAT CSV;
INSERT INTO dst_9 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 89
DROP DATABASE IF EXISTS test_9i1u611j 
SELECT * FROM test_02428_pv8(prices=[10,20])
INSERT INTO r2 SELECT 87
INSERT INTO test_01193_18429.table_2_976 VALUES 
SELECT formatReadableTimeDelta(-1);
CREATE INDEX idx_tab3_0 ON tab3 (col1 DESC,col3);
CREATE TABLE dst (`count` UInt64, `market` Int64, `w_end` DateTime) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 48414, min_bytes_for_wide_part = 857730464, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 13410, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 7408975, index_granularity_bytes = 28140238, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 21446, primary_key_compress_block_size = 67981
select zero from zeros_mt(10) settings max_block_size = 3, max_threads=3;
SELECT age('week', toDateTime64('2015-01-01 20:30:36.200', 3, 'UTC'), toDateTime64('2015-01-15 20:30:36.200', 3, 'UTC'));
CREATE TABLE test_01193_18429.table_7_608 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT tumbleEnd(tumble(toDateTime('2020-01-09 12:00:01', 'US/Samoa'), INTERVAL '1' DAY, 'US/Samoa'));
CREATE TABLE test_01193_18429.table_5_805 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE DATABASE IF NOT EXISTS test_3htxd3gd 
CREATE TABLE test_01193_18429.table_1_685 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_342B7E247E3C7D642F385A6F3459263F48724748514D4822216F5B7646347E6E742D2578553B6961(x UInt8) Engine=Memory;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 44846, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT coalesce(minOrNull(is_done), 1) FROM system.mutations WHERE database='test_63f87xjh' AND table like 'ttl_table%'
DROP TABLE IF EXISTS tmp;
CREATE TABLE test_01193_18429.table_10_23 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO src VALUES /* (-20, 2) */ 
select format('{}{}{}', materialize(toFixedString('a', 1)), toFixedString('b', 1), materialize('c')) == 'abc';
SELECT * FROM file('data.capnp', 'CapnProto', 'value Enum(\'oNe\' = 1, \'tWo\' = 2, \'threE\' = 3)') SETTINGS format_schema='test_02030/02030_capnp_enum:Message', format_capn_proto_enum_comparising_mode='by_names_case_insensitive'
DROP DATABASE IF EXISTS lazy_test_16wuveew;
INSERT INTO src VALUES /* (7, 1) */ 
select 'Still alive'
CREATE TABLE test_01193_18429.table_1_55 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP DATABASE IF EXISTS test_xwtkdnzi 
SELECT b, c, e FROM t_fixed_prefix WHERE a = 1 ORDER BY b, c, e SETTINGS optimize_read_in_order = 1
SELECT * FROM temp WHERE y IN (toDecimal64(64, 2));
INSERT INTO db01802.postgresql SELECT number FROM numbers(10);
SELECT sumMap([number % 3, number % 4 - 1], [number :: Float64, NULL]) FROM numbers(3) GROUP BY number WITH TOTALS ORDER BY number;
select format('{}{}{}', materialize(toFixedString('a', 1)), materialize('b'), toFixedString('c', 1)) == 'abc';
SELECT * FROM insert ORDER BY i;
SELECT format('The {0} to all questions is {1}.', 'answer', materialize('foo' :: Nullable(String)));
SELECT 'SELECT toUInt64(1) < N';
select toStartOfWeek(toDateTime(0, 'America/Paramaribo'));
with 01091 as id select sum(number) from numbers_mt(1000000);
EXPLAIN SYNTAX SELECT value1 FROM date_t WHERE toYYYYMM(date1) = 199203 AND id BETWEEN 1 AND 3;
SELECT DATEDIFF(YEAR, DATE '2021-01-01', DATE '2022-01-01');
INSERT INTO test_01193_18429.table_6_999 VALUES 
INSERT INTO test_01193_18429.table_2_967 VALUES 
SELECT 'Running test stateless/01413_rows_events.sql from pid=1713' 
DROP TABLE IF EXISTS foo_merge;
CREATE TABLE test_02908_r2_266 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_266', 'r2') ORDER BY tuple()
SELECT 'Running test stateless/02808_aliases_inside_case.sql from pid=1720' 
CREATE INDEX idx_tab2_2 ON tab2 (col4 DESC,col0 DESC);
DROP TABLE IF EXISTS test_table_for_in;
SELECT id as shift_right_bit,toFixedString('Hello', 10) as arg,bin(bitShiftRight(toFixedString('Hello', 10), id)) as fixed_string_res FROM test_bit_shift_right_string_integer;
INSERT INTO array_pk VALUES 
SELECT * FROM (SELECT number AS l FROM system.numbers LIMIT 3) s1 ANY LEFT JOIN (SELECT number AS r FROM system.numbers LIMIT 3) s2 ON l + 1 = r * 1 ORDER BY l;
INSERT INTO distinct_two_level SELECT 1546300800000, 'test.com', concat('foo', toString(number % 10000)) from numbers(10000);
drop table if exists test_rows_wide_part;
CREATE DICTIONARY database_for_dict.dict2 ( key_column UInt64 DEFAULT 0, second_column UInt8 DEFAULT 1, third_column String DEFAULT 'qqq', fourth_column Float64 DEFAULT 42.0 ) PRIMARY KEY key_column SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'dict1' DB 'database_for_dict')) LIFETIME(MIN 1 MAX 10) LAYOUT(HASHED());
SELECT 'Running test stateless/02126_fix_filelog.sh from pid=1726' 
CREATE DATABASE IF NOT EXISTS test_m7wu5xhe 
INSERT INTO t_s3_filter_02495 SELECT number FROM numbers(10) SETTINGS s3_truncate_on_insert=1;
CREATE TABLE test_566D786A296330372A7269413A623D4C383B34394A28276C437942276546634E3F3E384532785836(x UInt8) Engine=Memory;
CREATE TABLE test_604471335A352B417E5243673047732A3D6233303D6846355533417E6535252A5A213E605731595C(x UInt8) Engine=Memory;
INSERT INTO src_14 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 40
SELECT 'Running test stateless/01596_setting_limit_offset.sql from pid=1724' 
select addMonths(x1, 1) from t1;
SELECT count() FROM system.processes WHERE query_id = 'test_01948_tcp_test_jam0j4w2'
DROP DATABASE IF EXISTS test_fq7lf5o4 
INSERT INTO test_01193_18429.table_6_943 VALUES 
DROP TABLE IF EXISTS dictionary_source_table;
CREATE TABLE test_6E36527E552C332B3130782C376A613B2B486C3449552478264B607D7B605D324B532E7A5E747978(x UInt8) Engine=Memory;
ALTER TABLE concurrent_alter_column ADD COLUMN c267 DOUBLE;
DROP TABLE IF EXISTS big_array;
INSERT INTO t_light_sync_r1 SELECT number, number, number FROM numbers(10);
INSERT INTO replica_01108_2 SELECT * FROM system.numbers LIMIT 2 * 10, 10
CREATE TABLE test_3C336B4A665D3843737E3E7829486C7B317876394B59312E4A46346E5B477C2F53214B6C53716C7D(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_5_268 VALUES 
INSERT INTO test_01193_18429.table_4_611 VALUES 
INSERT INTO test_01193_18429.table_5_85 VALUES 
SELECT arrayJoin(['hello', 'world']) LIKE 'hell_';
DROP DATABASE IF EXISTS test_pfogt5il 
DROP DATABASE IF EXISTS test_onqt3snm 
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 28890, 500 settings ignore_materialized_views_with_dropped_target_table=1
insert into cardinality (x) select concat('v', toString(number)) from numbers(10);
INSERT INTO dt VALUES 
INSERT INTO test_01193_18429.table_9_99 VALUES 
CREATE TABLE test_01193_18429.table_10_948 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP TABLE IF EXISTS parallel_q1 SYNC
SELECT id, avgWeighted(value1, weight), avgWeighted(value2, weight), avgWeighted(value3, weight), avgWeighted(value4, weight) FROM test_table_unsigned_values GROUP BY id ORDER BY id;
CREATE TABLE arrow_dicts (`a` LowCardinality(String)) ENGINE = MergeTree ORDER BY a SETTINGS index_granularity = 36183, min_bytes_for_wide_part = 23867735, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 59, merge_max_block_size = 18724, prefer_fetch_merged_part_size_threshold = 7478957527, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 8324113, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 63770, primary_key_compress_block_size = 36055
OPTIMIZE TABLE partial_duplicates FINAL DEDUPLICATE BY pk,sk,val,mat;
SELECT accurateCast(5, 'UInt8');
INSERT INTO test_01193_18429.table_3_892 VALUES 
EXPLAIN AST ALTER TABLE t REMOVE TTL;
CREATE TABLE tp (`d1` Int32, `d2` Int32, `eventcnt` Int64, PROJECTION p (SELECT sum(eventcnt) GROUP BY d1)) ENGINE = MergeTree ORDER BY (d1, d2) SETTINGS index_granularity = 19793, min_bytes_for_wide_part = 640657666, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 62, merge_max_block_size = 4698, prefer_fetch_merged_part_size_threshold = 4398477105, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 1857272, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 65082, primary_key_compress_block_size = 89434
CREATE DATABASE IF NOT EXISTS test_39sw43bh 
CREATE TABLE 01778_db.hierarchy_source_table (id UInt64, parent_id UInt64) ENGINE = TinyLog;
select dummy from (select dummy + dummy + 0 as l, dummy from remote('127.{1,1}', system.one) where dummy + dummy >= 0 limit 1 by l) settings prefer_localhost_replica=0,distributed_group_by_no_merge=2,distributed_push_down_limit=1;
SELECT 0, 65536, 0 = 65536, 0 != 65536, 0 < 65536, 0 <= 65536, 0 > 65536, 0 >= 65536, 65536 = 0, 65536 != 0, 65536 < 0, 65536 <= 0, 65536 > 0, 65536 >= 0 , toUInt8(0) = toUInt32(65536), toUInt8(0) != toUInt32(65536), toUInt8(0) < toUInt32(65536), toUInt8(0) <= toUInt32(65536), toUInt8(0) > toUInt32(65536), toUInt8(0) >= toUInt32(65536), toUInt32(65536) = toUInt8(0), toUInt32(65536) != toUInt8(0), toUInt32(65536) < toUInt8(0), toUInt32(65536) <= toUInt8(0), toUInt32(65536) > toUInt8(0), toUInt32(65536) >= toUInt8(0) , toUInt8(0) = toInt32(65536), toUInt8(0) != toInt32(65536), toUInt8(0) < toInt32(65536), toUInt8(0) <= toInt32(65536), toUInt8(0) > toInt32(65536), toUInt8(0) >= toInt32(65536), toInt32(65536) = toUInt8(0), toInt32(65536) != toUInt8(0), toInt32(65536) < toUInt8(0), toInt32(65536) <= toUInt8(0), toInt32(65536) > toUInt8(0), toInt32(65536) >= toUInt8(0) , toUInt8(0) = toUInt64(65536), toUInt8(0) != toUInt64(65536), toUInt8(0) < toUInt64(65536), toUInt8(0) <= toUInt64(65536), toUInt8(0) > toUInt64(65536), toUInt8(0) >= toUInt64(65536), toUInt64(65536) = toUInt8(0), toUInt64(65536) != toUInt8(0), toUInt64(65536) < toUInt8(0), toUInt64(65536) <= toUInt8(0), toUInt64(65536) > toUInt8(0), toUInt64(65536) >= toUInt8(0) , toUInt8(0) = toInt64(65536), toUInt8(0) != toInt64(65536), toUInt8(0) < toInt64(65536), toUInt8(0) <= toInt64(65536), toUInt8(0) > toInt64(65536), toUInt8(0) >= toInt64(65536), toInt64(65536) = toUInt8(0), toInt64(65536) != toUInt8(0), toInt64(65536) < toUInt8(0), toInt64(65536) <= toUInt8(0), toInt64(65536) > toUInt8(0), toInt64(65536) >= toUInt8(0) , toInt8(0) = toUInt32(65536), toInt8(0) != toUInt32(65536), toInt8(0) < toUInt32(65536), toInt8(0) <= toUInt32(65536), toInt8(0) > toUInt32(65536), toInt8(0) >= toUInt32(65536), toUInt32(65536) = toInt8(0), toUInt32(65536) != toInt8(0), toUInt32(65536) < toInt8(0), toUInt32(65536) <= toInt8(0), toUInt32(65536) > toInt8(0), toUInt32(65536) >= toInt8(0) , toInt8(0) = toInt32(65536), toInt8(0) != toInt32(65536), toInt8(0) < toInt32(65536), toInt8(0) <= toInt32(65536), toInt8(0) > toInt32(65536), toInt8(0) >= toInt32(65536), toInt32(65536) = toInt8(0), toInt32(65536) != toInt8(0), toInt32(65536) < toInt8(0), toInt32(65536) <= toInt8(0), toInt32(65536) > toInt8(0), toInt32(65536) >= toInt8(0) , toInt8(0) = toUInt64(65536), toInt8(0) != toUInt64(65536), toInt8(0) < toUInt64(65536), toInt8(0) <= toUInt64(65536), toInt8(0) > toUInt64(65536), toInt8(0) >= toUInt64(65536), toUInt64(65536) = toInt8(0), toUInt64(65536) != toInt8(0), toUInt64(65536) < toInt8(0), toUInt64(65536) <= toInt8(0), toUInt64(65536) > toInt8(0), toUInt64(65536) >= toInt8(0) , toInt8(0) = toInt64(65536), toInt8(0) != toInt64(65536), toInt8(0) < toInt64(65536), toInt8(0) <= toInt64(65536), toInt8(0) > toInt64(65536), toInt8(0) >= toInt64(65536), toInt64(65536) = toInt8(0), toInt64(65536) != toInt8(0), toInt64(65536) < toInt8(0), toInt64(65536) <= toInt8(0), toInt64(65536) > toInt8(0), toInt64(65536) >= toInt8(0) , toUInt16(0) = toUInt32(65536), toUInt16(0) != toUInt32(65536), toUInt16(0) < toUInt32(65536), toUInt16(0) <= toUInt32(65536), toUInt16(0) > toUInt32(65536), toUInt16(0) >= toUInt32(65536), toUInt32(65536) = toUInt16(0), toUInt32(65536) != toUInt16(0), toUInt32(65536) < toUInt16(0), toUInt32(65536) <= toUInt16(0), toUInt32(65536) > toUInt16(0), toUInt32(65536) >= toUInt16(0) , toUInt16(0) = toInt32(65536), toUInt16(0) != toInt32(65536), toUInt16(0) < toInt32(65536), toUInt16(0) <= toInt32(65536), toUInt16(0) > toInt32(65536), toUInt16(0) >= toInt32(65536), toInt32(65536) = toUInt16(0), toInt32(65536) != toUInt16(0), toInt32(65536) < toUInt16(0), toInt32(65536) <= toUInt16(0), toInt32(65536) > toUInt16(0), toInt32(65536) >= toUInt16(0) , toUInt16(0) = toUInt64(65536), toUInt16(0) != toUInt64(65536), toUInt16(0) < toUInt64(65536), toUInt16(0) <= toUInt64(65536), toUInt16(0) > toUInt64(65536), toUInt16(0) >= toUInt64(65536), toUInt64(65536) = toUInt16(0), toUInt64(65536) != toUInt16(0), toUInt64(65536) < toUInt16(0), toUInt64(65536) <= toUInt16(0), toUInt64(65536) > toUInt16(0), toUInt64(65536) >= toUInt16(0) , toUInt16(0) = toInt64(65536), toUInt16(0) != toInt64(65536), toUInt16(0) < toInt64(65536), toUInt16(0) <= toInt64(65536), toUInt16(0) > toInt64(65536), toUInt16(0) >= toInt64(65536), toInt64(65536) = toUInt16(0), toInt64(65536) != toUInt16(0), toInt64(65536) < toUInt16(0), toInt64(65536) <= toUInt16(0), toInt64(65536) > toUInt16(0), toInt64(65536) >= toUInt16(0) , toInt16(0) = toUInt32(65536), toInt16(0) != toUInt32(65536), toInt16(0) < toUInt32(65536), toInt16(0) <= toUInt32(65536), toInt16(0) > toUInt32(65536), toInt16(0) >= toUInt32(65536), toUInt32(65536) = toInt16(0), toUInt32(65536) != toInt16(0), toUInt32(65536) < toInt16(0), toUInt32(65536) <= toInt16(0), toUInt32(65536) > toInt16(0), toUInt32(65536) >= toInt16(0) , toInt16(0) = toInt32(65536), toInt16(0) != toInt32(65536), toInt16(0) < toInt32(65536), toInt16(0) <= toInt32(65536), toInt16(0) > toInt32(65536), toInt16(0) >= toInt32(65536), toInt32(65536) = toInt16(0), toInt32(65536) != toInt16(0), toInt32(65536) < toInt16(0), toInt32(65536) <= toInt16(0), toInt32(65536) > toInt16(0), toInt32(65536) >= toInt16(0) , toInt16(0) = toUInt64(65536), toInt16(0) != toUInt64(65536), toInt16(0) < toUInt64(65536), toInt16(0) <= toUInt64(65536), toInt16(0) > toUInt64(65536), toInt16(0) >= toUInt64(65536), toUInt64(65536) = toInt16(0), toUInt64(65536) != toInt16(0), toUInt64(65536) < toInt16(0), toUInt64(65536) <= toInt16(0), toUInt64(65536) > toInt16(0), toUInt64(65536) >= toInt16(0) , toInt16(0) = toInt64(65536), toInt16(0) != toInt64(65536), toInt16(0) < toInt64(65536), toInt16(0) <= toInt64(65536), toInt16(0) > toInt64(65536), toInt16(0) >= toInt64(65536), toInt64(65536) = toInt16(0), toInt64(65536) != toInt16(0), toInt64(65536) < toInt16(0), toInt64(65536) <= toInt16(0), toInt64(65536) > toInt16(0), toInt64(65536) >= toInt16(0) , toUInt32(0) = toUInt32(65536), toUInt32(0) != toUInt32(65536), toUInt32(0) < toUInt32(65536), toUInt32(0) <= toUInt32(65536), toUInt32(0) > toUInt32(65536), toUInt32(0) >= toUInt32(65536), toUInt32(65536) = toUInt32(0), toUInt32(65536) != toUInt32(0), toUInt32(65536) < toUInt32(0), toUInt32(65536) <= toUInt32(0), toUInt32(65536) > toUInt32(0), toUInt32(65536) >= toUInt32(0) , toUInt32(0) = toInt32(65536), toUInt32(0) != toInt32(65536), toUInt32(0) < toInt32(65536), toUInt32(0) <= toInt32(65536), toUInt32(0) > toInt32(65536), toUInt32(0) >= toInt32(65536), toInt32(65536) = toUInt32(0), toInt32(65536) != toUInt32(0), toInt32(65536) < toUInt32(0), toInt32(65536) <= toUInt32(0), toInt32(65536) > toUInt32(0), toInt32(65536) >= toUInt32(0) , toUInt32(0) = toUInt64(65536), toUInt32(0) != toUInt64(65536), toUInt32(0) < toUInt64(65536), toUInt32(0) <= toUInt64(65536), toUInt32(0) > toUInt64(65536), toUInt32(0) >= toUInt64(65536), toUInt64(65536) = toUInt32(0), toUInt64(65536) != toUInt32(0), toUInt64(65536) < toUInt32(0), toUInt64(65536) <= toUInt32(0), toUInt64(65536) > toUInt32(0), toUInt64(65536) >= toUInt32(0) , toUInt32(0) = toInt64(65536), toUInt32(0) != toInt64(65536), toUInt32(0) < toInt64(65536), toUInt32(0) <= toInt64(65536), toUInt32(0) > toInt64(65536), toUInt32(0) >= toInt64(65536), toInt64(65536) = toUInt32(0), toInt64(65536) != toUInt32(0), toInt64(65536) < toUInt32(0), toInt64(65536) <= toUInt32(0), toInt64(65536) > toUInt32(0), toInt64(65536) >= toUInt32(0) , toInt32(0) = toUInt32(65536), toInt32(0) != toUInt32(65536), toInt32(0) < toUInt32(65536), toInt32(0) <= toUInt32(65536), toInt32(0) > toUInt32(65536), toInt32(0) >= toUInt32(65536), toUInt32(65536) = toInt32(0), toUInt32(65536) != toInt32(0), toUInt32(65536) < toInt32(0), toUInt32(65536) <= toInt32(0), toUInt32(65536) > toInt32(0), toUInt32(65536) >= toInt32(0) , toInt32(0) = toInt32(65536), toInt32(0) != toInt32(65536), toInt32(0) < toInt32(65536), toInt32(0) <= toInt32(65536), toInt32(0) > toInt32(65536), toInt32(0) >= toInt32(65536), toInt32(65536) = toInt32(0), toInt32(65536) != toInt32(0), toInt32(65536) < toInt32(0), toInt32(65536) <= toInt32(0), toInt32(65536) > toInt32(0), toInt32(65536) >= toInt32(0) , toInt32(0) = toUInt64(65536), toInt32(0) != toUInt64(65536), toInt32(0) < toUInt64(65536), toInt32(0) <= toUInt64(65536), toInt32(0) > toUInt64(65536), toInt32(0) >= toUInt64(65536), toUInt64(65536) = toInt32(0), toUInt64(65536) != toInt32(0), toUInt64(65536) < toInt32(0), toUInt64(65536) <= toInt32(0), toUInt64(65536) > toInt32(0), toUInt64(65536) >= toInt32(0) , toInt32(0) = toInt64(65536), toInt32(0) != toInt64(65536), toInt32(0) < toInt64(65536), toInt32(0) <= toInt64(65536), toInt32(0) > toInt64(65536), toInt32(0) >= toInt64(65536), toInt64(65536) = toInt32(0), toInt64(65536) != toInt32(0), toInt64(65536) < toInt32(0), toInt64(65536) <= toInt32(0), toInt64(65536) > toInt32(0), toInt64(65536) >= toInt32(0) , toUInt64(0) = toUInt32(65536), toUInt64(0) != toUInt32(65536), toUInt64(0) < toUInt32(65536), toUInt64(0) <= toUInt32(65536), toUInt64(0) > toUInt32(65536), toUInt64(0) >= toUInt32(65536), toUInt32(65536) = toUInt64(0), toUInt32(65536) != toUInt64(0), toUInt32(65536) < toUInt64(0), toUInt32(65536) <= toUInt64(0), toUInt32(65536) > toUInt64(0), toUInt32(65536) >= toUInt64(0) , toUInt64(0) = toInt32(65536), toUInt64(0) != toInt32(65536), toUInt64(0) < toInt32(65536), toUInt64(0) <= toInt32(65536), toUInt64(0) > toInt32(65536), toUInt64(0) >= toInt32(65536), toInt32(65536) = toUInt64(0), toInt32(65536) != toUInt64(0), toInt32(65536) < toUInt64(0), toInt32(65536) <= toUInt64(0), toInt32(65536) > toUInt64(0), toInt32(65536) >= toUInt64(0) , toUInt64(0) = toUInt64(65536), toUInt64(0) != toUInt64(65536), toUInt64(0) < toUInt64(65536), toUInt64(0) <= toUInt64(65536), toUInt64(0) > toUInt64(65536), toUInt64(0) >= toUInt64(65536), toUInt64(65536) = toUInt64(0), toUInt64(65536) != toUInt64(0), toUInt64(65536) < toUInt64(0), toUInt64(65536) <= toUInt64(0), toUInt64(65536) > toUInt64(0), toUInt64(65536) >= toUInt64(0) , toUInt64(0) = toInt64(65536), toUInt64(0) != toInt64(65536), toUInt64(0) < toInt64(65536), toUInt64(0) <= toInt64(65536), toUInt64(0) > toInt64(65536), toUInt64(0) >= toInt64(65536), toInt64(65536) = toUInt64(0), toInt64(65536) != toUInt64(0), toInt64(65536) < toUInt64(0), toInt64(65536) <= toUInt64(0), toInt64(65536) > toUInt64(0), toInt64(65536) >= toUInt64(0) , toInt64(0) = toUInt32(65536), toInt64(0) != toUInt32(65536), toInt64(0) < toUInt32(65536), toInt64(0) <= toUInt32(65536), toInt64(0) > toUInt32(65536), toInt64(0) >= toUInt32(65536), toUInt32(65536) = toInt64(0), toUInt32(65536) != toInt64(0), toUInt32(65536) < toInt64(0), toUInt32(65536) <= toInt64(0), toUInt32(65536) > toInt64(0), toUInt32(65536) >= toInt64(0) , toInt64(0) = toInt32(65536), toInt64(0) != toInt32(65536), toInt64(0) < toInt32(65536), toInt64(0) <= toInt32(65536), toInt64(0) > toInt32(65536), toInt64(0) >= toInt32(65536), toInt32(65536) = toInt64(0), toInt32(65536) != toInt64(0), toInt32(65536) < toInt64(0), toInt32(65536) <= toInt64(0), toInt32(65536) > toInt64(0), toInt32(65536) >= toInt64(0) , toInt64(0) = toUInt64(65536), toInt64(0) != toUInt64(65536), toInt64(0) < toUInt64(65536), toInt64(0) <= toUInt64(65536), toInt64(0) > toUInt64(65536), toInt64(0) >= toUInt64(65536), toUInt64(65536) = toInt64(0), toUInt64(65536) != toInt64(0), toUInt64(65536) < toInt64(0), toUInt64(65536) <= toInt64(0), toUInt64(65536) > toInt64(0), toUInt64(65536) >= toInt64(0) , toInt64(0) = toInt64(65536), toInt64(0) != toInt64(65536), toInt64(0) < toInt64(65536), toInt64(0) <= toInt64(65536), toInt64(0) > toInt64(65536), toInt64(0) >= toInt64(65536), toInt64(65536) = toInt64(0), toInt64(65536) != toInt64(0), toInt64(65536) < toInt64(0), toInt64(65536) <= toInt64(0), toInt64(65536) > toInt64(0), toInt64(65536) >= toInt64(0) 
select 1 as offset, null as length, toFixedString('Hello', 6) as s, subString(bin(s), offset , length), bin(bitSlice(s, offset, length));
INSERT INTO test_01193_18429.table_3_481 VALUES 
CREATE DATABASE IF NOT EXISTS test_rugmiu77 
select if(number % 5 == 0, Null, toUInt64OrZero(toString(number))) from numbers(20);
SELECT toDecimal32OrNull(NULL, NULL, NULL);
CREATE TABLE test_6578466F4C70447E5C7922224F6C2B6A3820392321465529262428366D2D7D25507727324E7A5064(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_8_931 VALUES 
DROP DATABASE IF EXISTS test_a8v6hxdy 
SELECT addressToLine(NULL);
INSERT INTO collapsing VALUES 
select toStartOfInterval(toDateTime64('2220-12-12 12:12:12.123456', 6), INTERVAL 1 MILLISECOND);
INSERT INTO test_01193_18429.table_2_324 VALUES 
drop table test_protobuf
select x from (select dummy as x, dummy + 1 as dummy order by identity(x)) format Null;
CREATE DATABASE db_01018;
SELECT 'Running test stateless/00948_values_interpreter_template.sql from pid=1715' 
CREATE TABLE test_01193_18429.table_8_480 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_516955443E3D31302234376423404A547E61314A5656333829495B43207D5B6546205C302F7B7859(x UInt8) Engine=Memory;
OPTIMIZE TABLE order_by_desc FINAL;
SELECT formatDateTimeInJodaSyntax(NULL, NULL);
SELECT 1 WHERE 10 != NOT ( NOT 10);
CREATE TABLE test_3F25764473454B2E23666067283E39755B524B657C753E225A5373386C2A31587B44777B4842594B(x UInt8) Engine=Memory;
SELECT t1.id AS t1_id, t2.id AS t2_id, t1.value AS t1_value, t2.value AS t2_value FROM test_table_join_1 AS t1 FINAL INNER JOIN test_table_join_2 AS t2 FINAL ON t1.id = t2.id ORDER BY t1_id;
CREATE TABLE test_21585557357B3E732E2F3A74773F33275B5F54797169246F4858724C686A4F3C713748313873282A(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00498_array_functions_concat_slice_push_pop.sql from pid=1726' 
CREATE DATABASE IF NOT EXISTS test_jf3022zi 
INSERT INTO datetime(d) VALUES
SELECT sum(cityHash64(*)) FROM compression_codec_multiple_replicated1;
CREATE TABLE test_7849732436262B70256E746D403724232D205D3148357D6A405479497641322A6E6E26392D55493D(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_10_674 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE VIEW test_1602.VIEW AS SELECT * FROM test_1602.tbl;
CREATE TABLE test_01193_18429.table_9_583 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select num_columns, num_rows, num_row_groups from file(squash_02735.parquet, ParquetMetadata);
CREATE TABLE test_01193_18429.table_3_570 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO r4 SELECT 41
INSERT INTO test_01193_18429.table_9_649 VALUES 
SELECT throwIf((SELECT sum(nm) FROM mv) != 78) FORMAT Null;
CREATE DATABASE IF NOT EXISTS test_yz7s7485 
CREATE TABLE test_01193_18429.table_10_200 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT t1.id, t1.value, t2.id, t2.value FROM test_table_join_1 AS t1 RIGHT JOIN test_table_join_2 AS t2 ON t1.id = t2.id;
DROP DATABASE IF EXISTS test_169zsvys 
SELECT 'Running test stateless/00434_tonullable.sql from pid=1724' 
SELECT id AS using_id, toTypeName(using_id), t1.id AS t1_id, toTypeName(t1_id), t1.value AS t1_value, toTypeName(t1_value), t2.id AS t2_id, toTypeName(t2_id), t2.value AS t2_value, toTypeName(t2_value), t3.id AS t3_id, toTypeName(t3_id), t3.value AS t3_value, toTypeName(t3_value) FROM test_table_join_1 AS t1 RIGHT JOIN test_table_join_2 AS t2 USING (id) LEFT JOIN test_table_join_3 AS t3 USING(id);
CREATE TABLE test_02908_r3_117 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_117', 'r3') ORDER BY tuple()
CREATE TABLE test_01193_18429.table_5_280 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE DATABASE IF NOT EXISTS test_ml5uw9jj 
CREATE TABLE dest_table (`Date` Date, `Id` UInt64, `Units` Float32) ENGINE = Memory;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt32(1), toUInt32(2)] WHEN (number % 3) = 0 THEN [toFloat32(2), toFloat32(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_2v0ex65h 
INSERT INTO r6 SELECT 14 % 10 = 6 ? 14 - 1 : 14
SELECT 'Running test stateless/01072_json_each_row_data_in_square_brackets.sql from pid=1722' 
SELECT 'Running test stateless/02187_async_inserts_all_formats.sh from pid=1720' 
SELECT cosineDistance( [toFloat32(0.0), toFloat32(1.0), toFloat32(2.0), toFloat32(3.0), toFloat32(4.0), toFloat32(5.0), toFloat32(6.0), toFloat32(7.0), toFloat32(8.0), toFloat32(9.0), toFloat32(10.0), toFloat32(11.0), toFloat32(12.0), toFloat32(13.0), toFloat32(14.0), toFloat32(15.0), toFloat32(16.0), toFloat32(17.0), toFloat32(18.0), toFloat32(19.0), toFloat32(20.0), toFloat32(21.0), toFloat32(22.0), toFloat32(23.0), toFloat32(24.0), toFloat32(25.0), toFloat32(26.0), toFloat32(27.0), toFloat32(28.0), toFloat32(29.0), toFloat32(30.0), toFloat32(31.0), toFloat32(32.0), toFloat32(33.0)], materialize([toFloat32(1.0), toFloat32(2.0), toFloat32(3.0), toFloat32(4.0), toFloat32(5.0), toFloat32(6.0), toFloat32(7.0), toFloat32(8.0), toFloat32(9.0), toFloat32(10.0), toFloat32(11.0), toFloat32(12.0), toFloat32(13.0), toFloat32(14.0), toFloat32(15.0), toFloat32(16.0), toFloat32(17.0), toFloat32(18.0), toFloat32(19.0), toFloat32(20.0), toFloat32(21.0), toFloat32(22.0), toFloat32(23.0), toFloat32(24.0), toFloat32(25.0), toFloat32(26.0), toFloat32(27.0), toFloat32(28.0), toFloat32(29.0), toFloat32(30.0), toFloat32(31.0), toFloat32(32.0), toFloat32(33.0), toFloat32(34.0)]));
select count() from ( select toInt128(number) * number x, toInt256(number) * number y from numbers_mt(100000000) where x != y );
CREATE TABLE test_01193_18429.table_1_335 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_6_704 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE DATABASE IF NOT EXISTS test_zzaakalw 
select transactionID().1
CREATE TABLE test_78774E2029437C6A757E29666D582C656923416C5921642E7224634C32417476506E5945373E2F24(x UInt8) Engine=Memory;
SELECT * FROM msgpack FORMAT MsgPack
CREATE DATABASE IF NOT EXISTS test_tdo6tshm 
INSERT INTO t_sparse_s3 SELECT 16, number % 2, 'foo' FROM numbers(4730);
CREATE TABLE test_4E7B4F263E5C454C435A6D7E36692F3E5F3A2360302B7C2563286B6554717D4C5A5C522C4C55435F(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_8_585 VALUES 
EXPLAIN SYNTAX SELECT (1 + 2)::UInt32 AS c;
SHOW CREATE TABLE codecs6;
CREATE TABLE test_01193_18429.table_8_973 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT type, serialization_kind, subcolumns.names, subcolumns.types, subcolumns.serializations FROM system.parts_columns WHERE database = currentDatabase() AND table = 't_sparse_mutations_3' AND column = 's' AND active ORDER BY name;
set allow_experimental_map_type = 1;
INSERT INTO test_01193_18429.table_8_511 VALUES 
SELECT CASE WHEN (col1 % 2) = 0 THEN ['foo', col3] WHEN 1 THEN [col4, col5] ELSE [col6, col7] END FROM multi_if_check;
SELECT accurateCastOrDefault(nan, 'Int256'), accurateCastOrDefault(nan, 'Int256', toInt256(5));
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (53 < 19 AND 10 > 0 ? 53 : 0)), throwIf(last != (53 < 19 AND 10 > 0 ? least(19 - 1, 53 + 10 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(19) LIMIT 53, 10);
INSERT INTO index VALUES 
alter table many_mutations delete where y = 649 * 2 settings mutations_sync = 0;
SELECT ucase('');
SELECT '= inner using =';
CREATE TABLE test_01193_18429.table_2_288 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'Running test stateless/02534_keyed_siphash.sql from pid=1714' 
DROP DATABASE IF EXISTS test_6a26v5p2 
 CREATE DICTIONARY IF NOT EXISTS dictdb_01076.dict_datarace ( key_column UInt64, value Float64 DEFAULT 77.77 ) PRIMARY KEY key_column SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_datarace' DB 'dictdb_01076')) LIFETIME(1) LAYOUT(CACHE(SIZE_IN_CELLS 10)); 
SELECT format('The {0} to all questions is {1}.', 'answer', materialize(42 :: LowCardinality(Nullable(UInt32))));
DROP DATABASE IF EXISTS test_a0rvwpyo 
SELECT parseDateTimeBestEffort('Dec 15, 2021') AS a, toTypeName(a);
SELECT argMaxIf((n, n), n, n < 100) t, toTypeName(t) FROM (SELECT if(number % 3 = 0, NULL, number) AS n from numbers(50));
CREATE TABLE t2 (`a` UInt32) ENGINE = MergeTree PARTITION BY a % 8 ORDER BY tuple() SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 77, merge_max_block_size = 5221, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 76652, primary_key_compress_block_size = 22585
CREATE TABLE test_37482440382C5720514D6F6E5E204F78536130642034414D3349574C287E4C6B62524B574E4C5568(x UInt8) Engine=Memory;
SELECT '----- case when -----';
SELECT polygonsSymDifferenceCartesian([[[(100.0001, 1000.0001), (-20., 20.), (10., 10.), (20., 20.), (20., -20.), (1000.0001, 1.1920928955078125e-7)]],[[(0.0001, 100000000000000000000.)]] AS x],[x]) GROUP BY x WITH ROLLUP;
CREATE DATABASE IF NOT EXISTS test_ey3nlqup 
CREATE TABLE parquet_types4 (int8 Int64, uint8 Int64, int16 Int64, uint16 Int64, int32 Int64, uint32 Int64, int64 Int64, uint64 Int64, float32 Int64, float64 Int64, string String, fixedstring String, date DateTime, datetime DateTime, datetime64 DateTime64(9)) ENGINE = Memory
select * from (select 1 as a, 1 as b, 1 as c, b, c);
CREATE TABLE test_38304C5A2F236F7160592A6C6A254978483E4C6B682770243F5274664B753C6054522A5A5F3E3D67(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01870_buffer_flush.sql from pid=1705' 
SELECT intDiv(1, CAST(materialize(NULL), 'Nullable(Float32)'));
SELECT max(1 + n + 1), max(1 + 1 + n), max(1 + n - 1), max(1 + 1 - n) FROM (SELECT number n FROM numbers(10));
DROP DATABASE IF EXISTS test_ocbyho8m 
CREATE TEMPORARY TABLE table_memory_02561(name String)
SELECT 'Running test stateless/00288_empty_stripelog.sql from pid=1714' 
SELECT throwIf((SELECT sum(nm) FROM mv) != 59) FORMAT Null;
INSERT INTO test_01193_18429.table_10_471 VALUES 
SELECT 'Running test stateless/02946_literal_alias_misclassification.sql from pid=1726' 
CREATE TABLE test_4242685F485F443D4954284F3F76394D52764A4D766755337E32564E47237344323870344B455840(x UInt8) Engine=Memory;
select * from t1_all t1 where t1.a in (select t2.a from t2_all t2);
SELECT 'Running test stateless/00929_multi_match_edit_distance.sql from pid=1713' 
SELECT avg(number) AS number, max(number) FROM numbers(10);
DROP TABLE IF EXISTS moons;
CREATE DATABASE IF NOT EXISTS test_tymasz3a 
INSERT INTO test_01193_18429.table_8_998 VALUES 
SELECT * FROM system.functions LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
SELECT 'Running test stateless/02232_functions_to_subcolumns_alias.sql from pid=1726' 
select concat(materialize(toFixedString('a', 1)), materialize(toFixedString('b', 1)), materialize('c')) == 'abc' from system.numbers limit 5;
SELECT joinGet('join_tbl', 'name', toLowCardinality('xxx')) == 'yyy';
SELECT arrayMap(x -> hex(toString(x)), finalizeAggregation(uniqStateForEachState([1, NULL]))) WITH TOTALS;
SELECT formatReadableTimeDelta(-(1 + 60 + 3600 + 86400 + 30.5 * 86400 + 365 * 86400), 'years');
DROP TABLE IF EXISTS pk_test6;
DROP DATABASE IF EXISTS test_etdjafpv 
INSERT INTO test_01193_18429.table_4_52 VALUES 
SELECT 'Running test stateless/00464_array_element_out_of_range.sql from pid=1715' 
CREATE TABLE data_compact (`key` Int) ENGINE = MergeTree ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 1000, min_rows_for_wide_part = 100, index_granularity = 2866, ratio_of_defaults_for_sparse_serialization = 0.9507150650024414, replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 697, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1943531906, index_granularity_bytes = 7206520, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 97541, primary_key_compress_block_size = 86667
insert into function file('02366_data_6.jsonl') select range(number % 1000) from numbers(100000) settings output_format_parallel_formatting=0
SELECT dictGet('02183_cache_dictionary', 'value_date', 0);
SELECT 'SELECT toUInt64(1) - N';
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (32 < 2 AND 97 > 0 ? 32 : 0)), throwIf(last != (32 < 2 AND 97 > 0 ? least(2 - 1, 32 + 97 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(2) LIMIT 32, 97);
INSERT INTO test_01193_18429.table_5_991 VALUES 
alter table many_mutations delete where y = 512 * 2 settings mutations_sync = 0;
CREATE TABLE test_6236644A67246D777B6E3C256E33745F2C476B3C517929403B5B6A395B446D525D2D2046245F6A35(x UInt8) Engine=Memory;
SELECT murmurHash2_32([], []);
CREATE TABLE test_5162524637546E786E324C6D5A634E477A6C33722B7E415D6C3D643A7431206C654A553E4E535C78(x UInt8) Engine=Memory;
select substringIndexUTF8('Ã¥Â¯ÂÃ¥Â¼ÂºÃ¯Â¼ÂÃ¦Â°ÂÃ¤Â¸Â»Ã¯Â¼ÂÃ¦ÂÂÃ¦ÂÂ', 'Ã¯Â¼Â', -4);
insert into bloom_filter2 select number+3000, 'yyy,uuu' from numbers(1024);
INSERT INTO test_01193_18429.table_8_543 VALUES 
CREATE TABLE test_283871516F3624755C523761285852576E634B42573E76346E5E455A7D763C712E2A4F416C604A7B(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_9_796 VALUES 
SELECT JSONExtract('{"a":3,"b":5,"c":7}', 'Tuple(a Int, b Int)');
CREATE TABLE test_33244B684F2B6938665F57646B32227E697D254120405A4D536A76796F494C3D592F217A7B263A73(x UInt8) Engine=Memory;
SELECT sum(`dummy`) FROM `system`.`one` WHERE 1 GLOBAL IN (`_subquery3795`)
SELECT multiIf((number % 2) = 0, [toInt64(1), toInt64(2)], (number % 3) = 0, [toInt8(2), toInt8(3)], [toUInt32(3), toUInt32(3)]) FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/01356_wrong_filter-type_bug.sql from pid=1714' 
SELECT -129, -2147483648, -129 = -2147483648, -129 != -2147483648, -129 < -2147483648, -129 <= -2147483648, -129 > -2147483648, -129 >= -2147483648, -2147483648 = -129, -2147483648 != -129, -2147483648 < -129, -2147483648 <= -129, -2147483648 > -129, -2147483648 >= -129 , toInt16(-129) = toInt32(-2147483648), toInt16(-129) != toInt32(-2147483648), toInt16(-129) < toInt32(-2147483648), toInt16(-129) <= toInt32(-2147483648), toInt16(-129) > toInt32(-2147483648), toInt16(-129) >= toInt32(-2147483648), toInt32(-2147483648) = toInt16(-129), toInt32(-2147483648) != toInt16(-129), toInt32(-2147483648) < toInt16(-129), toInt32(-2147483648) <= toInt16(-129), toInt32(-2147483648) > toInt16(-129), toInt32(-2147483648) >= toInt16(-129) , toInt16(-129) = toInt64(-2147483648), toInt16(-129) != toInt64(-2147483648), toInt16(-129) < toInt64(-2147483648), toInt16(-129) <= toInt64(-2147483648), toInt16(-129) > toInt64(-2147483648), toInt16(-129) >= toInt64(-2147483648), toInt64(-2147483648) = toInt16(-129), toInt64(-2147483648) != toInt16(-129), toInt64(-2147483648) < toInt16(-129), toInt64(-2147483648) <= toInt16(-129), toInt64(-2147483648) > toInt16(-129), toInt64(-2147483648) >= toInt16(-129) , toInt32(-129) = toInt32(-2147483648), toInt32(-129) != toInt32(-2147483648), toInt32(-129) < toInt32(-2147483648), toInt32(-129) <= toInt32(-2147483648), toInt32(-129) > toInt32(-2147483648), toInt32(-129) >= toInt32(-2147483648), toInt32(-2147483648) = toInt32(-129), toInt32(-2147483648) != toInt32(-129), toInt32(-2147483648) < toInt32(-129), toInt32(-2147483648) <= toInt32(-129), toInt32(-2147483648) > toInt32(-129), toInt32(-2147483648) >= toInt32(-129) , toInt32(-129) = toInt64(-2147483648), toInt32(-129) != toInt64(-2147483648), toInt32(-129) < toInt64(-2147483648), toInt32(-129) <= toInt64(-2147483648), toInt32(-129) > toInt64(-2147483648), toInt32(-129) >= toInt64(-2147483648), toInt64(-2147483648) = toInt32(-129), toInt64(-2147483648) != toInt32(-129), toInt64(-2147483648) < toInt32(-129), toInt64(-2147483648) <= toInt32(-129), toInt64(-2147483648) > toInt32(-129), toInt64(-2147483648) >= toInt32(-129) , toInt64(-129) = toInt32(-2147483648), toInt64(-129) != toInt32(-2147483648), toInt64(-129) < toInt32(-2147483648), toInt64(-129) <= toInt32(-2147483648), toInt64(-129) > toInt32(-2147483648), toInt64(-129) >= toInt32(-2147483648), toInt32(-2147483648) = toInt64(-129), toInt32(-2147483648) != toInt64(-129), toInt32(-2147483648) < toInt64(-129), toInt32(-2147483648) <= toInt64(-129), toInt32(-2147483648) > toInt64(-129), toInt32(-2147483648) >= toInt64(-129) , toInt64(-129) = toInt64(-2147483648), toInt64(-129) != toInt64(-2147483648), toInt64(-129) < toInt64(-2147483648), toInt64(-129) <= toInt64(-2147483648), toInt64(-129) > toInt64(-2147483648), toInt64(-129) >= toInt64(-2147483648), toInt64(-2147483648) = toInt64(-129), toInt64(-2147483648) != toInt64(-129), toInt64(-2147483648) < toInt64(-129), toInt64(-2147483648) <= toInt64(-129), toInt64(-2147483648) > toInt64(-129), toInt64(-2147483648) >= toInt64(-129) 
SELECT arrayReduce('groupUniqArrayIf', ['---', '---', 't1'], [1, 1, 0]);
CREATE DATABASE IF NOT EXISTS test_sgdg4ke9 
CREATE TABLE test_table (`id` UInt64, `value` String) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 10690, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 63, merge_max_block_size = 775, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 46, min_merge_bytes_to_use_direct_io = 7295669995, index_granularity_bytes = 18263213, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 77598, primary_key_compress_block_size = 64017
select toDateOrDefault(cast(19 as UInt256));
CREATE DATABASE IF NOT EXISTS test_oohmewxw 
SELECT *, id FROM (SELECT [[0]] AS id) AS subquery ARRAY JOIN id AS id_nested_array ARRAY JOIN id_nested_array AS id INNER JOIN test_table USING (id);
select [6] = multiSearchAllPositions(materialize('abcdefgh'), ['f']) from system.numbers limit 10;
select u, windowFunnel(86400)(dt, COALESCE(a, '') = 'a1', COALESCE(a, '') = 'a2') as s from funnel_test_non_null group by u order by u format JSONCompactEachRow;
SELECT multiIf(1, toFixedString(col2, 16), 1, toFixedString('bar', 16), 'baz') FROM multi_if_check;
CREATE TABLE test_316235266D427B7E226E596C325A78747249694323766B74753F4F38497B4163315A2D43313D6531(x UInt8) Engine=Memory;
SELECT * FROM system.crash_log LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
INSERT INTO test_01193_18429.table_9_623 VALUES 
CREATE TABLE test_7E6C783B4F3A3A2147644F6B654F532049653E4D453C3A55316A603C262E5B784478442F44485521(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_pvhbjg06 
CREATE TABLE test_01193_18429.table_9_447 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_4729776E617E2C3F476B404C472F7C2D3074383E3744706C3F3C426E29264B4B67453731482A4874(x UInt8) Engine=Memory;
SELECT (shardNum() AS `_shard_num`) + `dummy`, count() FROM `system`.`one` GROUP BY `_shard_num` + `dummy` ORDER BY `_shard_num` + `dummy` ASC
select * from dist_01756 where dummy not in (2, 3) and dummy in (0, 2);
INSERT INTO test_01193_18429.table_7_586 VALUES 
SHOW CREATE USER u8_01292;
CREATE TABLE test_01193_18429.table_10_352 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE template1 (s1 String, s2 String, s3 String, s4 String, n UInt64, d Date) ENGINE = Memory
INSERT INTO test_01193_18429.table_2_970 VALUES 
SELECT toDecimal128(1.555,3) IN (1.550,1.5);
CREATE TABLE test_6E412B74685246326F2C7C423E6A5B7D68593C5E6E4C5F336D70202A686E6D204A484E7E622F5E62(x UInt8) Engine=Memory;
select number % 2 ? NULL : number as x, x as y, CAST(number % 2 ? NULL : toString(number), 'LowCardinality(Nullable(String))') as z from numbers(2) format Parquet
DROP TABLE IF EXISTS realtimedistributed;
select v, variantElement(v, 'Date32') from format(CSV, 'v Variant(String, Date32, DateTime64)', '\\N\n"string"\n"2020-01-d1"\n"1900-01-01"\n"2020-01-01 00:00:00.999"') format CSV;
CREATE PROFILE session_log_test_profile2 SETTINGS max_rows_to_transfer=1000 TO session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_sha256_password_two_profiles_no_roles;
DROP TABLE ip_trie_dictionary_array_source_table;
desc format(JSONEachRow, '{"obj" : {"a" : 42, "b" : "Hello", "c" : [1,2,3]}}');
DROP TABLE IF EXISTS parallel_replicas;
DROP DATABASE IF EXISTS test_zlfc3h85 
SYSTEM FLUSH DISTRIBUTED dist_02482;
CREATE DATABASE IF NOT EXISTS test_s4quh8qu 
SHOW CREATE USER u1_01292, u2_01292, u3_01292, u4_01292;
select (timestamp '2001-12-29 03:00:00' - timestamp '2001-12-27 12:00:00') x, toTypeName(x);
SELECT '\x30 \xD0\xA0';
CREATE TABLE test_01193_18429.table_5_78 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_7C56793B607B714D3F4B4977507328426E632A287D2A64217079405F724C4D2D7172692E3C305E3B(x UInt8) Engine=Memory;
 SELECT sipHash64(9, groupArray((name, type))) FROM (SELECT name, type FROM system.columns WHERE database = 'system' AND table = 'query_log' ORDER BY position) 
SELECT sum(e.n.size0), sum(e.t.size0) FROM t_nested_offsets;
SELECT h3ToGeoBoundary(NULL);
SELECT hasToken('n hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay', 'n'), ' expecting ', 1;
select 1 = position('abc', materialize('a'));
CREATE TABLE test_01193_18429.table_1_3 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE projection_broken_parts_1 (`a` int, `b` int, PROJECTION ab (SELECT a, sum(b) GROUP BY a)) ENGINE = ReplicatedMergeTree('/test/02254/02254_projection_broken_part_test_ncporfep/rmt', 'r1') ORDER BY a SETTINGS index_granularity = 1, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 7053, prefer_fetch_merged_part_size_threshold = 1651138349, vertical_merge_algorithm_min_rows_to_activate = 419557, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1507745064, index_granularity_bytes = 26076285, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 63853, primary_key_compress_block_size = 55210
SELECT * FROM numbers(2) AS n1, numbers(3) AS n2 RIGHT JOIN numbers(4) AS n3 ON n2.number = n3.number ORDER BY n1.number, n2.number, n3.number;
CREATE TABLE test_3D67764354235E7D5649467D3C2D7025323E3C6C6D213F5D2F21246172775E316A634D79724E7746(x UInt8) Engine=Memory;
INSERT INTO table_for_update_field_dictionary VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN toInt64(1) WHEN (number % 3) = 0 THEN toInt16(2) ELSE toUInt32(3) END FROM system.numbers LIMIT 10;
select '<30: to existing table>', * from dest;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), N != toUInt64(1) as r FORMAT CSV;
CREATE VIEW dest_view_log (x UInt64) AS SELECT * FROM source_table_log;
CREATE MATERIALIZED VIEW tmp_mv ENGINE = AggregatingMergeTree(date, (date, name), 8192) AS SELECT date, name, countState() AS cc FROM tmp GROUP BY date, name;
select arrayPushBack(['a', 'b', 'c'], val2) from array_functions;
SELECT count() FROM constraint_test_constants WHERE 11 <= a;
SELECT * FROM parquet_load ORDER BY tuple(*) LIMIT 100
CREATE TABLE test_01193_18429.table_2_99 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT toUInt32OrDefault(toUInt32(1)) SETTINGS cast_keep_nullable=1;
SELECT count() FROM t_cnf_fuzz WHERE (c7 AND c3 AND (NOT c7) AND (NOT c7)) OR (c9 AND c9) OR (c2 AND (NOT c1) AND c3 AND (NOT c1) AND c6) OR (c5 AND (NOT c9) AND c9 AND (NOT c3) AND c2) OR ((NOT c8) AND (NOT c0) AND (NOT c9) AND c6) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_4C74503B702E585C7C6B2A7930617A21552C2D4051236B55613E3635757E494E7D2A745B3E292574(x UInt8) Engine=Memory;
SELECT [1, 2, 3, 11] = arraySort(multiMatchAllIndices('ÃÂÃÂ°ÃÂ±ÃÂÃÂ¸ÃÂºÃÂ°ÃÂ½ÃÂ', ['', 'ÃÂÃÂ¸ÃÂºÃÂ°ÃÂ½', 'ÃÂ°', 'f[ae]b[ei]rl', 'ÃÂ[ÃÂ¸ÃÂ°ÃÂÃÂµ]ÃÂ±[ÃÂµÃÂÃÂ¸][ÃÂÃÂ¿ÃÂ»]', 'ÃÂ°ÃÂÃÂ¸ÃÂÃÂºÃÂ´', 'a[ft],th', '^ÃÂ[ÃÂ°ÃÂ¸ÃÂµÃÂ]?ÃÂ±?[ÃÂµÃÂÃÂ¸]?$', 'ÃÂ±ÃÂµÃÂÃÂ»ÃÂ¸ÃÂº', 'fab', 'ÃÂÃÂ°[ÃÂ±ÃÂµÃÂÃÂ²]+ÃÂµ?[ÃÂÃÂ»ÃÂºÃÂ¾]']));
CREATE TABLE test_01193_18429.table_7_732 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP TABLE IF EXISTS fetches_r2 SYNC
SELECT 9, 3, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (9 < 13 AND 3 > 0 ? 9 : 0)), throwIf(last != (9 < 13 AND 3 > 0 ? least(13 - 1, 9 + 3 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 9, 3);
CREATE TABLE t2__fuzz_0 (`c` UInt32, `d` String) ENGINE = Memory;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toInt16(3), toInt16(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_02908_r2_282 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_282', 'r2') ORDER BY tuple()
INSERT INTO test_01193_18429.table_2_949 VALUES 
CREATE TABLE test_01193_18429.table_4_5 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP TABLE ttl_with_default;
SELECT sum(1 + n + 1), sum(1 + 1 + n), sum(1 + n - 1), sum(1 + 1 - n) FROM (SELECT number n FROM numbers(10));
select distinct b,c from distinct_in_order order by c;
INSERT INTO test_01193_18429.table_3_51 VALUES 
SELECT covarSamp(NULL, NULL);
SELECT 'Running test stateless/01090_fixed_string_bit_ops.sql from pid=1714' 
select toTypeName(arrayFilter(x -> 2 * x < 0, []));
select sumIf(number::UInt256, number % 10 == 0) from numbers(1000);
CREATE TABLE test_6632316F4122302779566056413F6B6523412744383C4A65436D66393D7B382D21686B426B2A7B21(x UInt8) Engine=Memory;
CREATE TABLE test_207B68446B203F2B6B484C67235539743F3D577868734C542169612D732F465F50493067524F6A35(x UInt8) Engine=Memory;
SELECT materialize('Hello') WHERE materialize(NULL);
SELECT toIPv6OrNull('::ffff:127.0.0.1');
INSERT INTO test_y9d6pdpj.t_async_insert FORMAT NDJSON
select tuple(toNullable(number)) > tuple(toNullable(number + 1)) from numbers(1);
SELECT a, t1.a, t2.a FROM t1 RIGHT JOIN t2 USING (a) ORDER BY (t1.a, t2.a) SETTINGS allow_experimental_analyzer = 0;
insert into mt1 values 
SELECT COUNT() FROM bloom_filter_array_lc_null_types_test WHERE has(fixed_string, toFixedString('10', 5));
INSERT INTO test_01193_18429.table_6_911 VALUES 
INSERT INTO test_01193_18429.table_6_573 VALUES 
SELECT dictGet('simple_key_direct_dictionary_01862', 'value', toUInt64(1)) FORMAT Null;
SELECT 'Running test stateless/00252_shard_global_in_aggregate_function.sql from pid=1714' 
INSERT INTO r4 SELECT 72 % 10 = 4 ? 72 - 1 : 72
SELECT CASE WHEN (col1 % 2) = 0 THEN [col2, 'bar'] WHEN 1 THEN ['foo', 'bar'] ELSE [col6, 'bar'] END FROM multi_if_check;
SELECT 1 % CAST(materialize(1), 'Nullable(Float32)');
DROP TABLE IF EXISTS t_compact_vertical_merge;
CREATE TABLE test_2E262A6C3D2A7C21202D7D756E6024786420384F58596F2A293B457871332E4B622E625273722662(x UInt8) Engine=Memory;
select tuple(number) <= tuple(toNullable(number + 1)) from numbers(1);
CREATE TABLE test_01193_18429.table_7_605 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
EXPLAIN QUERY TREE (SELECT (sum(float64) + 2 * count(float64)) - (sum(float64) + 3 * count(float64)) From test_table);
select t.a, t.a as t_a, max(s.a) from t left join s on t.a = s.a left join y on y.b = s.b group by t.a order by t.a;
CREATE TABLE test_737B3D5A542E4D7538486F347A27407E5E492E6937734477635E454658484D70727D786C5D784B45(x UInt8) Engine=Memory;
SELECT 13,'Hello',bin(bitShiftLeft('Hello', 13));
INSERT INTO cool_table SELECT number, range(number), range(number) FROM numbers(10);
CREATE TABLE test_64696A2F6943215B2357777A33396E692C4E3971253D205846326A363A3F63375F6B2F5A4B315230(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_3_759 VALUES 
SELECT shardNum() AS `_shard_num`, `id` FROM view(SELECT toUInt32(`id`) AS `id` FROM `data` HAVING `id` IN (0, 2147483648)) WHERE `id` IN (0, 2147483648) ORDER BY `_shard_num` ASC, `id` ASC
SELECT * FROM nested ORDER BY x;
CREATE DATABASE IF NOT EXISTS test_m994pi1l 
CREATE TABLE concurrent_alter_mt_2 (`key` UInt64, `value1` UInt64, `value2` Int32) ENGINE = ReplicatedMergeTree('/clickhouse/tables/01079_parallel_alter_modify_zookeeper_long_test_8vpf77vf/concurrent_alter_mt', '2') ORDER BY key SETTINGS max_replicated_mutations_in_queue = 1000, number_of_free_entries_in_pool_to_execute_mutation = 0, max_replicated_merges_in_queue = 1000, index_granularity = 59838, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 30, merge_max_block_size = 9045, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 5477784109, index_granularity_bytes = 4966886, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 47646, primary_key_compress_block_size = 68831
create table nums_in_mem(v UInt64) engine=Memory;
CREATE TABLE test_456051477672697E3731245E6C323544675130722931685D4C767A2F2C2A60676B485974642F6036(x UInt8) Engine=Memory;
CREATE TABLE ids (id UInt64) ENGINE = Memory;
SELECT hex(sipHash128Keyed());
SELECT 'Running test stateless/00178_function_replicate.sql from pid=1722' 
INSERT INTO test_01193_18429.table_7_940 VALUES 
SELECT 'Running test stateless/01391_join_on_dict_crash.sql from pid=1705' 
OPTIMIZE TABLE compression_codec_replicated1 FINAL;
SELECT id, maxMerge(latest_login_time) as current_latest_login_time, maxMerge(latest_checkout_time) as current_latest_checkout_time, minMerge(fastest_session) as current_fastest_session, maxMerge(biggest_inactivity_period) as current_biggest_inactivity_period FROM target_table where id in (1,2) GROUP BY id ORDER BY id;
set date_time_input_format = 'best_effort_us';
DROP TABLE test_table_string;
CREATE INDEX idx_tab4_0 ON tab4 (col4 DESC,col1 DESC);
INSERT INTO FUNCTION s3('http://localhost:11111/test/test_w5677s9y/test_INT_MAX.tsv', '', '[HIDDEN]', 'TSV') SETTINGS s3_max_single_part_upload_size = '10Gi' SELECT repeat('a', 1024) FROM numbers((pow(2, 30) * 2) / 1024) SETTINGS s3_max_single_part_upload_size = '10Gi'
DROP DATABASE IF EXISTS test_p8mgzzga 
select number % 2 ? NULL : number as x, x as y, CAST(number % 2 ? NULL : toString(number), 'LowCardinality(Nullable(String))') as z from numbers(2) format Arrow settings output_format_arrow_low_cardinality_as_dictionary=1
CREATE MATERIALIZED VIEW async_insert_mv TO async_insert_target AS SELECT id + throwIf(id = 42) FROM async_insert_landing
CREATE DATABASE IF NOT EXISTS test_sp2m0q2m 
CREATE DATABASE IF NOT EXISTS test_12ym7zpb 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (5 < 40 AND 84 > 0 ? 5 : 0)), throwIf(last != (5 < 40 AND 84 > 0 ? least(40 - 1, 5 + 84 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(40) LIMIT 5, 84);
CREATE TABLE test_01193_18429.table_8_782 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO rep_data VALUES 
select '-------subtractDays---------';
CREATE TABLE test_01193_18429.table_1_830 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_556548705F4F527C492A276E4F253566697E6C52416A40754E473A6E2F2E40786F515559724B5439(x UInt8) Engine=Memory;
CREATE TABLE test_3927696725576059777E26314663307C4C295E425E765B747D4765626871275A56256562722A3E50(x UInt8) Engine=Memory;
INSERT INTO src VALUES /* (-57, 1) */ 
SELECT toRelativeWeekNum(toDateTime(1412106600), 'Asia/Tokyo') - toRelativeWeekNum(toDateTime(0), 'Asia/Tokyo');
CREATE TABLE test_3D7E3957373A5E613F7C322862514B704B5977283640236D33366550535775403B3B543D6B5C2F25(x UInt8) Engine=Memory;
SELECT avgWeighted(x, w) FROM values('x UInt64, w UInt8', (4, 1), (1, 0), (10, 2));
SELECT multiIf((number % 2) = 0, [toFloat64(1), toFloat64(2)], (number % 3) = 0, [toUInt32(2), toUInt32(3)], [toUInt8(3), toUInt8(3)]) FROM system.numbers LIMIT 10;
insert into data_02491 values 
SELECT -.34e+2_1;
select 1 = multiSearchAny(materialize('abc'), ['a']) from system.numbers limit 10;
EXPLAIN PLAN actions = 1 SELECT * FROM t_order_by_monotonic AS test ORDER BY a, -b
INSERT INTO set2 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN toUInt8(1) WHEN (number % 3) = 0 THEN toUInt16(2) ELSE toFloat64(3) END FROM system.numbers LIMIT 10;
SELECT $ÃÂ ÃÂÃÂÃÂÃÂÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¬$VALUE$ÃÂ ÃÂÃÂÃÂÃÂÃÂÃÂÃÂ¢ÃÂÃÂÃÂ¬$;
CREATE TABLE test_01193_18429.table_3_810 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT cutIPv6(IPv6StringToNum('2001:0DB8:AC10:FE01:FEED:BABE:CAFE:F00D'), 0, 10);
ALTER USER test_user_01075 HOST LOCAL;
DROP DATABASE IF EXISTS test_lhiad3hc 
SELECT 'Running test stateless/01083_match_zero_byte.sql from pid=1715' 
ALTER TABLE concurrent_mutate_kill MODIFY COLUMN value String SETTINGS replication_alter_partitions_sync=2
CREATE DATABASE IF NOT EXISTS test_3rynnx3w 
ALTER TABLE mt UPDATE x = 'Goodbye' WHERE y = 1;
SELECT 'sizes';
CREATE TABLE test_01193_18429.table_1_144 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select 0 = multiSearchAny(materialize('abc'), ['bcdef']);
SELECT y, count() FROM cluster(test_cluster_one_shard_three_replicas_localhost, currentDatabase(), 02535_custom_key) GROUP BY y ORDER BY y SETTINGS max_parallel_replicas=3 , parallel_replicas_custom_key='y' , parallel_replicas_custom_key_filter_type='range' , prefer_localhost_replica=0
INSERT INTO test_01193_18429.table_6_815 VALUES 
CREATE TABLE test_01193_18429.table_9_656 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT '---- toDecimal256OrDefault ----';
SELECT arraySort(groupArray(DISTINCT number % 13)) FROM remote('127.0.0.{1,2}', numbers_mt(100000));
DROP TABLE IF EXISTS test_null_array_orc
select 1 except select 2 intersect select 1;
SELECT 'Running test stateless/02354_read_in_order_prewhere.sql from pid=1715' 
CREATE TABLE data_02294 (`a` Int64, `b` Int64, `grp_aggreg` AggregateFunction(groupArrayArray, Array(UInt64)), `grp_simple` SimpleAggregateFunction(groupArrayArray, Array(UInt64))) ENGINE = MergeTree ORDER BY a SETTINGS index_granularity = 55981, min_bytes_for_wide_part = 657118208, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 10216, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 8123672723, index_granularity_bytes = 23371767, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 36752, primary_key_compress_block_size = 22315
select '--- DESC NULLS LAST, ASC';
DROP TABLE users_02534;
CREATE TABLE test_7B516542396D6E73213F2553674C6E4D5F39373F62784072345F304D6A4F42747C7758697D7D537E(x UInt8) Engine=Memory;
SELECT pointInPolygon((0.15, 0.15), [(0., 1.), (0.2, 0.5), (0.6, 0.5), (0.8, 0.8), (0.8, 0.3), (0.1, 0.3), (0.1, 0.1), (0.8, 0.1), (1.0, 0.0), (8.0, 7.0), (7.0, 8.0), (0., 1.)]);
CREATE DATABASE IF NOT EXISTS test_g9w6ns70 
SELECT multiIf((number % 2) = 0, [toUInt32(1), toUInt32(2)], (number % 3) = 0, [toFloat64(2), toFloat64(3)], [toFloat64(3), toFloat64(3)]) FROM system.numbers LIMIT 10;
EXPLAIN AST ALTER TABLE t CLEAR COLUMN c IN PARTITION 'p';
SELECT t1.value, t2.value, t3.value FROM test_table_join_1 AS t1 INNER JOIN test_table_join_2 AS t2 ON t1.id = t2.id OR t1.id = t2.id LEFT JOIN test_table_join_3 AS t3 ON t2.id = t3.id OR t3.id = t2.id;
CREATE TABLE IF NOT EXISTS agg_table (`time` DateTime CODEC(DoubleDelta, LZ4), `xxx` String, `two_values` Tuple(Array(UInt16), UInt32), `agg_simple` SimpleAggregateFunction(sum, UInt64), `agg` SimpleAggregateFunction(sumMap, Tuple(Array(Int16), Array(UInt64)))) ENGINE = AggregatingMergeTree ORDER BY (xxx, time) SETTINGS index_granularity = 24764, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 14163, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 11418425, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 81931, primary_key_compress_block_size = 19018
SELECT sum(b) = 103 FROM t1 LEFT JOIN t2 USING (a) WHERE b > 102 AND t2.b < 204;
INSERT INTO test_01193_18429.table_8_307 VALUES 
select * from dist_01247 group by value, key;
select arraySort(arrayIntersect([1,2], arr)) from array_intersect order by arr;
CREATE TABLE tab (`x` LowCardinality(String)) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 36030, min_bytes_for_wide_part = 218909124, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 21814, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 24715805, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 34321, primary_key_compress_block_size = 80491
drop table if exists tbl_8parts_8granules_rnd;
CREATE TABLE test_01193_18429.table_6_56 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT FROM_UNIXTIME(1234356, '%Y-%m-%d %R:%S', 'UTC');
INSERT INTO numbers SELECT * FROM numbers(100000);
CREATE TABLE test_02908_r1_260 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_260', 'r1') ORDER BY tuple()
DROP DATABASE IF EXISTS test_1ndtbysf 
INSERT INTO test_01193_18429.table_4_689 VALUES 
INSERT INTO r4 SELECT 73
SELECT splitByRegexp('', 'a12bc23de345f', 4);
RENAME TABLE table_for_renames7 TO table_for_renames8
CREATE TABLE test_606C6D6A70282C4124757337264C385E776C2052346D252E6659347E7124357E526D4A787D584E45(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_9_712 VALUES 
select * from (select dummy as val from system.one) any left join (select dummy as rval from system.one) on val + 0 = rval * 1;
create table test_01054_overflow.ints (key UInt64, i8 Int8, i16 Int16, i32 Int32, i64 Int64, u8 UInt8, u16 UInt16, u32 UInt32, u64 UInt64) Engine = Memory;
CREATE TABLE test_66755A55516D7658202A297D594B784E55403F4971432C3441786831262C6D793E367C22422A7755(x UInt8) Engine=Memory;
SELECT '-- formatQuery';
SELECT key, ref_valueU32, valueU32, ref_valueU32 - valueU32 as dU32 FROM codecTest WHERE dU32 != 0 LIMIT 10;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt8(1) WHEN (number % 3) = 0 THEN toFloat64(2) ELSE toInt16(3) END FROM system.numbers LIMIT 10;
CREATE TABLE partitions (`x` UInt64) ENGINE = MergeTree PARTITION BY x ORDER BY x SETTINGS index_granularity = 9575, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.5042633414268494, replace_long_file_name_to_hash = true, max_file_name_length = 58, merge_max_block_size = 12830, prefer_fetch_merged_part_size_threshold = 9314757542, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 3491332410, index_granularity_bytes = 19325518, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 90796, primary_key_compress_block_size = 14271
SELECT 'Running test stateless/00388_enum_with_totals.sql from pid=1726' 
DROP DATABASE IF EXISTS test_rtrej9lf 
select test_01103.t1_distr.id from test_01103.t1_distr join ( select test_01103.t1_distr.id from test_01103.t1_distr as d1 inner join test_01103.t2_distr as d2 on test_01103.t1_distr.id = test_01103.t2_distr.id where test_01103.t1_distr.id > 0 order by test_01103.t1_distr.id ) s0 using id;
CREATE TABLE test_6927653C78335B565C7E2A4754343D334879607761556C5248723B704574696E777477383B275C35(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_u75vly87 
select v, variantElement(v, 'Int64') from format(Values, 'v Variant(String, Int64, Int128)', '(NULL), (''string''), (-1), (0), (10000000000000000000000)') format Values;
CREATE TABLE m2 (id UInt64) ENGINE=Merge(currentDatabase(),'m0|m1v');
SELECT groupArrayMovingSum(256)(toDecimal32(100000000, 1)) FROM numbers(300);
select arrayReduce('stddevPopResample(2, 9, 3)', [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);
SELECT formatDateTime(toDateTime('2018-01-01 00:33:44'), '%j'), formatDateTime(toDate32('2018-01-01'), '%j');
CREATE TABLE test_6F725A442A333C663A50507753243177676F2B40665C234E743A70655C25713B2C6B4655685D4443(x UInt8) Engine=Memory;
SELECT avg(length(data.inputs.prev_out.spending_outpoints) AS outpoints_length), median(outpoints_length) FROM btc
SELECT CASE WHEN (number % 2) = 0 THEN toInt32(1) WHEN (number % 3) = 0 THEN toFloat32(2) ELSE toUInt16(3) END FROM system.numbers LIMIT 10;
INSERT INTO 02265_ordinary_db.join_table VALUES 
CREATE TABLE replica_01108_2 (`n` int) ENGINE = ReplicatedMergeTree('/clickhouse/tables/01108_restart_replicas_rename_deadlock_zookeeper_test_gmla4knt/replica_01108_2', 'replica') ORDER BY tuple() SETTINGS index_granularity = 54206, min_bytes_for_wide_part = 107393377, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 21917, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 734127, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 2447171233, index_granularity_bytes = 7487035, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 48088, primary_key_compress_block_size = 85065
CREATE TABLE test_01193_18429.table_8_295 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_2_294 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_7_762 VALUES 
CREATE TABLE store_returns (`sr_returned_date_sk` Nullable(Int64), `sr_return_time_sk` Nullable(Int64), `sr_item_sk` Int64, `sr_customer_sk` Nullable(Int64), `sr_cdemo_sk` Nullable(Int64), `sr_hdemo_sk` Nullable(Int64), `sr_addr_sk` Nullable(Int64), `sr_store_sk` Nullable(Int64), `sr_reason_sk` Nullable(Int64), `sr_ticket_number` Int64, `sr_return_quantity` Nullable(Int64), `sr_return_amt` Nullable(Float32), `sr_return_tax` Nullable(Float32), `sr_return_amt_inc_tax` Nullable(Float32), `sr_fee` Nullable(Float32), `sr_return_ship_cost` Nullable(Float32), `sr_refunded_cash` Nullable(Float32), `sr_reversed_charge` Nullable(Float32), `sr_store_credit` Nullable(Float32), `sr_net_loss` Nullable(Float32)) ENGINE = MergeTree ORDER BY (sr_item_sk, sr_ticket_number) SETTINGS index_granularity = 54709, min_bytes_for_wide_part = 729090018, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 22777, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 256871, vertical_merge_algorithm_min_columns_to_activate = 36, min_merge_bytes_to_use_direct_io = 7728769504, index_granularity_bytes = 9282957, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 19664, primary_key_compress_block_size = 11428
set parallel_replicas_prefer_local_join = 1;
SELECT * FROM pk WHERE x = 3 AND y >= 50;
INSERT INTO test_01193_18429.table_5_641 VALUES 
INSERT INTO r8 SELECT 54 % 10 = 8 ? 54 - 1 : 54
SELECT keycol, enum_col FROM table_with_enum FULL JOIN table_key USING (keycol) ORDER BY keycol;
insert into proj values 
INSERT INTO test_37wr0kd3.async_inserts SETTINGS format_custom_escaping_rule = 'CSV', format_custom_field_delimiter = ',' FORMAT CustomSeparated
CREATE TABLE test_01193_18429.table_5_584 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select concat(toFixedString('a', 1), toFixedString('b', 1), materialize(toFixedString('c', 1))) == 'abc' from system.numbers limit 5;
SELECT * FROM test_sort_proj WHERE y > 4294967286 order by x FORMAT JSON SETTINGS optimize_move_to_prewhere = 1, optimize_use_projections = 1
ALTER TABLE sticking_mutations MODIFY COLUMN value1 UInt64, MODIFY TTL date + INTERVAL 1 DAY
alter table many_mutations delete where y = 28 * 2 settings mutations_sync = 0;
INSERT INTO test_01193_18429.table_10_775 VALUES 
CREATE TABLE test_01193_18429.table_2_929 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT CASE WHEN (number % 2) = 0 THEN [toInt16(1), toInt16(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toInt16(3), toInt16(3)] END FROM system.numbers LIMIT 10;
SELECT diff, traf FROM order_by_nulls_first ORDER BY diff DESC NULLS LAST, traf DESC;
OPTIMIZE TABLE t_index_agg_func FINAL;
select hasSubsequence('ClickHouse - ÃÂÃÂÃÂ¾ÃÂ»ÃÂ±ÃÂÃÂ¾ÃÂ²ÃÂ°ÃÂ ÃÂÃÂ¸ÃÂÃÂÃÂµÃÂ¼ÃÂ° ÃÂÃÂ¿ÃÂÃÂ°ÃÂ²ÃÂ»ÃÂµÃÂ½ÃÂ¸ÃÂ ÃÂ±ÃÂ°ÃÂ·ÃÂ°ÃÂ¼ÃÂ¸ ÃÂ´ÃÂ°ÃÂ½ÃÂ½ÃÂÃÂ ', 'house');
SELECT tid, processed_at, created_at, amount FROM t FINAL ORDER BY tid;
CREATE TABLE test_4C48314E372C5A60496D4621313F36582928446C3F7E684B3234557870592F4A227078473D505627(x UInt8) Engine=Memory;
select *, arraySum(arr) as s from prewhere_column_missing prewhere s = 0;
CREATE DATABASE IF NOT EXISTS test_pukmwd22 
DROP TABLE IF EXISTS t_mt_sync_insert;
INSERT INTO test_01193_18429.table_1_793 VALUES 
DROP DATABASE IF EXISTS test_h7941qf0 
DROP DATABASE IF EXISTS test_jwlk9mpb 
CREATE TABLE test_01193_18429.table_2_27 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
create table one_table (date Date, one UInt64) engine = MergeTree(date, (date, one), 8192);
INSERT INTO t_parts_columns_filenames SELECT number, 0, 0, range(number % 5), range(number % 5) FROM numbers(10);
CREATE TABLE test_23323E6D2F352C4A5B5A496B267B6662405F4C647A5C3F696C7639624B7B7B2C4A2B427D74475037(x UInt8) Engine=Memory;
INSERT INTO t_uncompressed_cache SELECT number, number FROM numbers(200);
DROP TABLE IF EXISTS sharded_table;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c3)) OR (c5) OR (c9) OR ((NOT c0) AND (NOT c4) AND c5 AND c2) OR ((NOT c6) AND (NOT c4) AND (NOT c0) AND c6) OR ((NOT c8) AND c8) OR (c4) SETTINGS convert_query_to_cnf = 1
CREATE TABLE test_01193_18429.table_6_256 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_6_961 VALUES 
SELECT 'complex key';
INSERT INTO test_02908_r1_42 SELECT rand64() FROM numbers(5);
SELECT dictGetOrDefault('01765_db.hashed_dictionary_simple_key_simple_attributes', 'value_first', number, toString('default')) as value_first, dictGetOrDefault('01765_db.hashed_dictionary_simple_key_simple_attributes', 'value_second', number, toString('default')) as value_second FROM system.numbers LIMIT 4;
SELECT 'Running test stateless/02969_archive_seek.sh from pid=1724' 
CREATE TABLE test_01193_18429.table_2_181 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SET allow_nonconst_timezone_arguments = 1;
INSERT INTO map_protobuf_00825 VALUES 
select * from s3Cluster('test_cluster_two_shards_localhost', 'http://localhost:11111/test/{a,b,c}.tsv') ORDER BY c1, c2, c3;
SELECT h3EdgeAngle(NULL);
select '-------addSeconds---------';
DROP DATABASE IF EXISTS test_jubxws22 
CREATE DATABASE IF NOT EXISTS test_sbarhoct 
SELECT 'Running test stateless/01818_input_format_with_names_use_header.sh from pid=1726' 
SELECT sum(t1.key), sum(t2.key), count(), countIf(t1.key != 0), countIf(t2.key != 0) FROM t1 ANY INNER JOIN t2 ON t1.key == t2.key ;
SELECT 'Running test stateless/00550_join_insert_select.sh from pid=1713' 
select number, number + 1, concat('string: ', toString(number)) from numbers(200000) group by number with totals order by number limit 190000 format CSV
SELECT arrayUniq([], []);
SHOW CREATE QUOTA default;
CREATE TABLE test_01193_18429.table_3_465 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT toUInt128OrNull(NULL, NULL, NULL);
SELECT d, x, s, m FROM mutations_r2 ORDER BY d, x
SELECT YYYYMMDDToDate32(110);
INSERT INTO test_02908_r1_128 SELECT rand64() FROM numbers(5);
CREATE TABLE table_from_select ENGINE = MergeTree() ORDER BY tuple() AS SELECT number from system.numbers LIMIT 1;
CREATE TABLE test_2242 (key UInt32, value String) Engine=MergeTree() ORDER BY key SETTINGS storage_policy='s3_cache', min_bytes_for_wide_part = 10485760, compress_marks=false, compress_primary_key=false
INSERT INTO syntax2_persons_02240 SETTINGS format_schema='/usr/share/clickhouse-test/queries/0_stateless/format_schemas/02240_protobuflist_format_persons_syntax2:Syntax2Person' FORMAT ProtobufList
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), N == toUInt32(1) as r FORMAT CSV;
INSERT INTO test_01193_18429.table_9_883 VALUES 
INSERT INTO test_01193_18429.table_1_787 VALUES 
select * from test FINAL order by uid;
CREATE DATABASE IF NOT EXISTS test_3msnnqlq 
SELECT 'Running test stateless/01172_transaction_counters.sql from pid=1714' 
SELECT 1, 'Hello',bin(bitShiftRight('Hello', 1));
drop table test_02902;
select -49 as offset, -48 as length, toFixedString('Hello', 6) as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
select count() from tst final;
INSERT INTO test_01193_18429.table_7_894 VALUES 
DROP DATABASE `'`;
create table test (number UInt64) engine=File('Parquet', 'test_02155/test3/data.Parquet.gz');
CREATE DATABASE IF NOT EXISTS test_qg6uzhhg 
INSERT INTO test_01193_18429.table_10_961 VALUES 
CREATE TABLE test_40302361287E3D273576644C2C344E4F26497E712B45755655457E403C716146737022495C784A37(x UInt8) Engine=Memory;
CREATE INDEX idx_tab3_5 ON tab3 (col4,col0 DESC);
SELECT number FROM numbers(3) ORDER BY exp(number);
INSERT INTO test_01193_18429.table_5_148 VALUES 
CREATE TABLE test_02908_r2_64 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_64', 'r2') ORDER BY tuple()
CREATE TABLE test_01193_18429.table_8_897 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select 1 = multiSearchAny(materialize('abcdefgh'), ['abcdefg']) from system.numbers limit 10;
CREATE DATABASE IF NOT EXISTS test_aisg26id 
EXPLAIN PIPELINE SELECT a, b FROM t_fixed_prefix WHERE a = 1 AND c = 1 ORDER BY a, b SETTINGS optimize_read_in_order = 1
CREATE TABLE test_4D6F46212C294E7A3E2834354B7C456750553A44563E7E6A3C68426B463536756F4979432A71694A(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_0enqzhsd 
SELECT toTypeName(sumWithOverflow(n)) FROM (SELECT toUInt16(number) AS n FROM system.numbers LIMIT 100);
SELECT * FROM numbers(34546)
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 45287, 500 settings ignore_materialized_views_with_dropped_target_table=1
ALTER TABLE t_proj_external MATERIALIZE PROJECTION aaaa SETTINGS mutations_sync = 2;
INSERT INTO r7 SELECT 29 % 10 = 7 ? 29 - 1 : 29
SELECT multiIf(1, toFixedString(col2, 16), 1, col3, 'baz') FROM multi_if_check;
SELECT number, number % 2, sum(number) AS val FROM numbers(10) GROUP BY ROLLUP(number, number % 2) ORDER BY (number, number % 2, val) SETTINGS group_by_use_nulls=0;
CREATE TABLE test_472E46304C7241275875602D32375C663F4D29625D244F254321272972433A4F2C51714263412E60(x UInt8) Engine=Memory;
SELECT count(), count(DISTINCT x, y) FROM (SELECT DISTINCT * FROM (SELECT [1, 2] AS x, [3] AS y UNION ALL SELECT [1], [2, 3]));
DROP TABLE IF EXISTS test_table_5
DROP DATABASE IF EXISTS test_cr1et2j8 
DROP DATABASE IF EXISTS test_xulskofr 
CREATE INDEX idx_tab4_1 ON tab4 (col4,col1);
select '2,..,2';
INSERT INTO test_01193_18429.table_1_552 VALUES 
INSERT INTO test_01193_18429.table_1_761 VALUES 
INSERT INTO test_01193_18429.table_7_226 VALUES 
show create table roles format TSVRaw;
CREATE TABLE test_01193_18429.table_7_570 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
WITH subquery_1 AS (SELECT 1 AS a), subquery_2 AS (SELECT (1 + subquery_1.a) AS a FROM subquery_1) SELECT subquery_2.a FROM subquery_2;
CREATE INDEX idx_tab3_2 ON tab3 (col4,col3 DESC);
CREATE TABLE test_01193_18429.table_8_397 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_4_368 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_10_136 VALUES 
CREATE TABLE test_36615020577A4639785D45353E247E2A4D2E3144504874753C5A2D773155402B67483B7A4175315E(x UInt8) Engine=Memory;
SELECT a FROM t_fixed_prefix WHERE bitNot(c) = 1 ORDER BY a SETTINGS optimize_read_in_order = 1
select [0, 18, 10, 5, 0, 2, 8, 1, 4, 11] = multiSearchAllPositionsCaseInsensitiveUTF8(materialize('ÃÂ¥ÃÂ¿ÃÂÃÂ ÃÂ´ÃÂ´ÃÂ¥ÃÂÃÂ¼ÃÂÃÂÃÂ¹ÃÂÃÂÃÂ²ÃÂ³ÃÂ¨ÃÂ¸ÃÂ§ÃÂÃÂÃÂ'), ['ÃÂ ÃÂÃÂ¤ÃÂÃÂ»ÃÂÃÂ£ÃÂÃÂÃÂ°ÃÂ¦ÃÂÃÂ¶ÃÂ ÃÂÃÂÃÂÃÂÃÂ¹ÃÂ½ÃÂ¦ÃÂ¿ÃÂ', 'ÃÂ¸ÃÂ§ÃÂ¼ÃÂ', 'ÃÂ²ÃÂ½ÃÂ', 'ÃÂ´', 'ÃÂ·ÃÂ¸ÃÂÃÂ£ÃÂ©ÃÂÃÂ¸ÃÂ', 'ÃÂÃÂÃÂ', 'ÃÂ ÃÂÃÂ²ÃÂ½ÃÂÃÂÃÂÃÂ²ÃÂ³ÃÂ¨ÃÂ¸ÃÂ', '', 'ÃÂ ÃÂ´ÃÂÃÂ ÃÂ ÃÂ', 'ÃÂ½ÃÂÃÂÃÂÃÂÃÂÃÂ¨ÃÂ']) from system.numbers limit 10;
SELECT 'const int, multiple';
ALTER TABLE concurrent_alter_column ADD COLUMN c29 DOUBLE;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c8) AND c6 AND c6 AND c3) OR (c2 AND c6 AND (NOT c7)) OR ((NOT c7) AND (NOT c3) AND (NOT c8) AND c8 AND c0) OR (c5 AND c1 AND (NOT c5) AND (NOT c4)) OR (c0 AND c5 AND c3 AND c4 AND (NOT c4)) OR (c3 AND c9 AND c0) OR ((NOT c3) AND (NOT c1) AND c3 AND c2) OR ((NOT c3) AND c7 AND c3) SETTINGS convert_query_to_cnf = 0
ALTER TABLE concurrent_alter_column ADD COLUMN c119 DOUBLE;
INSERT INTO r2 SELECT 21 % 10 = 2 ? 21 - 1 : 21
select count() from test where isNotNull(v.UInt64);
select -13 as offset, 13 as length, 'Hello' as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
SELECT _partition_id FROM partition_id ORDER BY x;
DROP TABLE t_00180;
DROP DATABASE IF EXISTS test_gpbjypjc 
SELECT arrayExists(`x` -> (`x` IN ((SELECT '2') AS `_subquery218`)), [2]) FROM `system`.`one` GROUP BY '__unused_group_by_column'
CREATE TABLE test_672D247E70315B3163736A532A6D4B5A6635585C366E5648394C61414A357868782C576444682259(x UInt8) Engine=Memory;
INSERT INTO src VALUES /* (-28, 2) */ 
SELECT CASE WHEN (number % 2) = 0 THEN [toInt32(1), toInt32(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toUInt8(3), toUInt8(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_316B38724B793948397B7D472C562B5B5A54217E742E392C3136724145463C234E7B36486F527739(x UInt8) Engine=Memory;
SELECT count(*) FROM source WHERE toYear(ts) <= 2023 SETTINGS allow_experimental_analyzer=1;
CREATE TABLE test_01193_18429.table_8_179 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_7D4E5E6C32453276622A3D577B452F623F6A3355356E6A5E6B3E3440262472556872694E7E213C72(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS test_02047
drop table buf;
CREATE TABLE test_01193_18429.table_3_667 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO dst_3 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 48
CREATE TABLE test_465D5554656B603032392A4021595C4B2D3B77613A2465765345675530726638414F5D244B3E7741(x UInt8) Engine=Memory;
SELECT count() FROM constraint_test_constants_repl WHERE a - b = c + d;
SELECT multiIf((number % 2) = 0, [toUInt32(1), toUInt32(2)], (number % 3) = 0, [toUInt32(2), toUInt32(3)], [toUInt8(3), toUInt8(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_1_787 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE alter_update_00806 (d Date, e Enum8('foo'=1, 'bar'=2)) Engine = MergeTree(d, (d), 8192);
select 'src_to_dst', 10, 'src', type, n, _part from src order by type, n
SELECT arrayCumSum(NULL);
alter table data_01900_2 update s = 'bar_60' where 1;
CREATE TABLE test_01193_18429.table_4_988 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP FUNCTION 02483_plusone;
SELECT * FROM nullable_key WHERE k IS NOT NULL;
SELECT 'Running test stateless/00357_to_string_complex_types.sql from pid=1724' 
SELECT third_column FROM test_8yvdjyfm.dict1 WHERE key_column = 12
CREATE TABLE test_317C78603B7B622B422F72346730282347727735504E7E6B29704B7A692864202376702A6164446F(x UInt8) Engine=Memory;
CREATE TABLE test_276D7E2255652E20797E4E41683E67425274572478347056317D56394A647E3C5563332168244E59(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_zq2jtumq 
INSERT INTO test_01193_18429.table_6_404 VALUES 
CREATE TABLE test_01193_18429.table_8_617 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_6E625D587C6B6821677B6E62736B4E56336B2C6077604C5E564E642C293F4266337840263D4D6D71(x UInt8) Engine=Memory;
CREATE TABLE test_444C3C4629687D66744F27533D4B785F5D6E272B7C66365020243A302B21675C2862234576727A28(x UInt8) Engine=Memory;
SELECT addInterval((INTERVAL 1 DAY, INTERVAL 1 SECOND), INTERVAL 1 SECOND);
CREATE TABLE table_with_column_ttl ( EventTime DateTime, UserID UInt64, Age UInt8 TTL EventTime + INTERVAL 3 MONTH ) ENGINE MergeTree() ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0;
CREATE TABLE replace_partition_dest2_2 (`key` UInt64) ENGINE = ReplicatedMergeTree('/test/02271_replace_partition_many/{database}/dest2', '2') PARTITION BY key ORDER BY tuple() SETTINGS index_granularity = 21145, min_bytes_for_wide_part = 853359182, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 94, merge_max_block_size = 10354, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 12, min_merge_bytes_to_use_direct_io = 2146133332, index_granularity_bytes = 20583043, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 34423, primary_key_compress_block_size = 10056
drop table if exists part_01278_4;
CREATE TABLE t1 (`n` UInt64) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 17243, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 1520, prefer_fetch_merged_part_size_threshold = 10335495399, vertical_merge_algorithm_min_rows_to_activate = 882696, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 3096643, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 32298, primary_key_compress_block_size = 71359
CREATE TABLE quorum1 (`x` UInt32, `y` Date) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_02377/quorum', '1') PARTITION BY y ORDER BY x SETTINGS index_granularity = 31863, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 744, prefer_fetch_merged_part_size_threshold = 7913545010, vertical_merge_algorithm_min_rows_to_activate = 984678, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10479636447, index_granularity_bytes = 16789443, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 30712, primary_key_compress_block_size = 96400
CREATE TABLE test_01193_18429.table_4_175 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_5D315E2F373F6E7B56267B6332706B5345614E246B7826292F315763797630224067713A2E2C2A56(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt8(1) WHEN (number % 3) = 0 THEN toInt8(2) ELSE toFloat64(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_8_895 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_2_276 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_5C774238757A45666D6A53564C4F223E7C554E574578367C452D4E572F336F7A7949465F59652A3F(x UInt8) Engine=Memory;
SELECT `n.i8` FROM alter_00394 ORDER BY k;
CREATE MATERIALIZED VIEW matview_exception_a_to_c TO table_exception_c AS SELECT b AS a FROM table_exception_a;
SELECT '----- Array functions -----';
INSERT INTO lc_nullable SELECT groupArray(number) AS order_key, groupArray(toInt8(number)) AS i8, groupArray(toInt16(number)) AS i16, groupArray(toInt32(number)) AS i32, groupArray(toInt64(number)) AS i64, groupArray(toUInt8(number)) AS u8, groupArray(toUInt16(number)) AS u16, groupArray(toUInt32(number)) AS u32, groupArray(toUInt64(number)) AS u64, groupArray(toFloat32(number)) AS f32, groupArray(toFloat64(number)) AS f64, groupArray(toDate(number, 'Asia/Istanbul')) AS date, groupArray(toDateTime(number, 'Asia/Istanbul')) AS date_time, groupArray(toString(number)) AS str, groupArray(toFixedString(toString(number), 5)) AS fixed_string FROM (SELECT number FROM system.numbers LIMIT 15);
SELECT hex(toInt256(-100000000000)) AS res;
CREATE TABLE test_204D6C4C705B494E3D6551212260346B296C3F394D35557C47792B5E2E2063362C2D4B6C55487B49(x UInt8) Engine=Memory;
DROP USER IF EXISTS user1_02713, user2_02713, user3_02713, user4_02713, user5_02713, user6_02713, user7_02713
DROP TABLE IF EXISTS regression_for_in_operator;
drop table if exists testXB;
select * from system.one cross join system.one;
INSERT INTO replicated_collapsing_merge_tree_with_sampling VALUES 
SELECT 'Running test stateless/02494_query_cache_user_quotas.sql from pid=1705' 
CREATE TABLE test_01193_18429.table_10_659 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO r5 SELECT 44 % 10 = 5 ? 44 - 1 : 44
CREATE TABLE test_21754A2F2E773E2D22356E6D41693A743058315E3E3B53482E2822363E6A464C76255A3459657951(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02021_exponential_sum_shard.sql from pid=1726' 
CREATE TABLE test_02908_r2_164 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_164', 'r2') ORDER BY tuple()
SELECT makeDateTime(NULL, NULL);
INSERT INTO dict SELECT number, toString(number) FROM numbers(1e3);
SELECT bitCount('clickhouse cloud');
INSERT INTO r5 SELECT 79 % 10 = 5 ? 79 - 1 : 79
INSERT INTO test_01193_18429.table_9_948 VALUES 
select hex(sipHash64Keyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47)));
replace table dist (n int) engine=Distributed(test_shard_localhost, currentDatabase(), t);
SELECT dateDiff('milliseconds', toDateTime('2017-12-31', 'UTC'), toDateTime('2016-01-01', 'UTC'));
DROP TABLE IF EXISTS test_startsWith;
CREATE TABLE IF NOT EXISTS t1 (x UInt64, s Array(Nullable(String))) ENGINE = Log
SELECT CAST(database, 'String') AS db FROM system.tables WHERE db LIKE '%' format Null;
SELECT materialize(toInt16(0)) AS x, toUInt16(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
select [5] = multiSearchAllPositions(materialize('abcdefgh'), ['ef']);
SELECT indexOf(a, toDecimal32(0.1, 4)) FROM decimal;
INSERT INTO test_02908_r1_147 SELECT rand64() FROM numbers(5);
CREATE TABLE test_01193_18429.table_4_774 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE DATABASE IF NOT EXISTS test_t1yn9esc 
SELECT toWeek(toDate('2000-12-31'),2),toWeek(toDate('2000-12-31'),3);
DROP DATABASE IF EXISTS test_rj9imrpl 
SELECT count() FROM t_cnf_fuzz WHERE (c4 AND c1) OR (c9 AND (NOT c9) AND c5) OR (c4) OR (c6 AND c9) OR (c6 AND c2 AND c7 AND c3) OR (c8) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_6E393776612D5C3C33673D527047324F4B794127537A745F32703A5369575062452F204F513C4356(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_9_242 VALUES 
DESCRIBE TABLE null_00557;
DROP TABLE IF EXISTS tt2;
CREATE TABLE test_01193_18429.table_10_512 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/00583_limit_by_expressions.sql from pid=1718' 
CREATE TABLE test_01193_18429.table_6_108 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE alter_table_7 (`a` UInt8, `b` Int16, `c` Float32, `d` String, `e` Array(UInt8), `f` Nullable(UUID), `g` Tuple(UInt8, UInt16)) ENGINE = ReplicatedMergeTree('/clickhouse/tables/00993_system_parts_race_condition_drop_zookeeper_test_zoczfe66/alter_table', 'r_7') PARTITION BY b % 10 ORDER BY a SETTINGS old_parts_lifetime = 1, cleanup_delay_period = 0, cleanup_delay_period_random_add = 0, cleanup_thread_preferred_points_per_iteration = 0, replicated_max_mutations_in_one_entry = 291, index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 17222, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 5082719006, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75985, primary_key_compress_block_size = 73298
SET query_cache_max_size_in_bytes = DEFAULT;
INSERT INTO test_01193_18429.table_3_706 VALUES 
CREATE TABLE test_2327474C274F3D675C775E536C58446E5D2E5F7A5F5850423A4D4F762B374C27325A322F36576F51(x UInt8) Engine=Memory;
alter table many_mutations delete where y = 676 * 2 settings mutations_sync = 0;
SELECT 32768, 9223372036854775807, 32768 = 9223372036854775807, 32768 != 9223372036854775807, 32768 < 9223372036854775807, 32768 <= 9223372036854775807, 32768 > 9223372036854775807, 32768 >= 9223372036854775807, 9223372036854775807 = 32768, 9223372036854775807 != 32768, 9223372036854775807 < 32768, 9223372036854775807 <= 32768, 9223372036854775807 > 32768, 9223372036854775807 >= 32768 , toUInt16(32768) = toUInt64(9223372036854775807), toUInt16(32768) != toUInt64(9223372036854775807), toUInt16(32768) < toUInt64(9223372036854775807), toUInt16(32768) <= toUInt64(9223372036854775807), toUInt16(32768) > toUInt64(9223372036854775807), toUInt16(32768) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toUInt16(32768), toUInt64(9223372036854775807) != toUInt16(32768), toUInt64(9223372036854775807) < toUInt16(32768), toUInt64(9223372036854775807) <= toUInt16(32768), toUInt64(9223372036854775807) > toUInt16(32768), toUInt64(9223372036854775807) >= toUInt16(32768) , toUInt16(32768) = toInt64(9223372036854775807), toUInt16(32768) != toInt64(9223372036854775807), toUInt16(32768) < toInt64(9223372036854775807), toUInt16(32768) <= toInt64(9223372036854775807), toUInt16(32768) > toInt64(9223372036854775807), toUInt16(32768) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toUInt16(32768), toInt64(9223372036854775807) != toUInt16(32768), toInt64(9223372036854775807) < toUInt16(32768), toInt64(9223372036854775807) <= toUInt16(32768), toInt64(9223372036854775807) > toUInt16(32768), toInt64(9223372036854775807) >= toUInt16(32768) , toUInt32(32768) = toUInt64(9223372036854775807), toUInt32(32768) != toUInt64(9223372036854775807), toUInt32(32768) < toUInt64(9223372036854775807), toUInt32(32768) <= toUInt64(9223372036854775807), toUInt32(32768) > toUInt64(9223372036854775807), toUInt32(32768) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toUInt32(32768), toUInt64(9223372036854775807) != toUInt32(32768), toUInt64(9223372036854775807) < toUInt32(32768), toUInt64(9223372036854775807) <= toUInt32(32768), toUInt64(9223372036854775807) > toUInt32(32768), toUInt64(9223372036854775807) >= toUInt32(32768) , toUInt32(32768) = toInt64(9223372036854775807), toUInt32(32768) != toInt64(9223372036854775807), toUInt32(32768) < toInt64(9223372036854775807), toUInt32(32768) <= toInt64(9223372036854775807), toUInt32(32768) > toInt64(9223372036854775807), toUInt32(32768) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toUInt32(32768), toInt64(9223372036854775807) != toUInt32(32768), toInt64(9223372036854775807) < toUInt32(32768), toInt64(9223372036854775807) <= toUInt32(32768), toInt64(9223372036854775807) > toUInt32(32768), toInt64(9223372036854775807) >= toUInt32(32768) , toInt32(32768) = toUInt64(9223372036854775807), toInt32(32768) != toUInt64(9223372036854775807), toInt32(32768) < toUInt64(9223372036854775807), toInt32(32768) <= toUInt64(9223372036854775807), toInt32(32768) > toUInt64(9223372036854775807), toInt32(32768) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toInt32(32768), toUInt64(9223372036854775807) != toInt32(32768), toUInt64(9223372036854775807) < toInt32(32768), toUInt64(9223372036854775807) <= toInt32(32768), toUInt64(9223372036854775807) > toInt32(32768), toUInt64(9223372036854775807) >= toInt32(32768) , toInt32(32768) = toInt64(9223372036854775807), toInt32(32768) != toInt64(9223372036854775807), toInt32(32768) < toInt64(9223372036854775807), toInt32(32768) <= toInt64(9223372036854775807), toInt32(32768) > toInt64(9223372036854775807), toInt32(32768) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toInt32(32768), toInt64(9223372036854775807) != toInt32(32768), toInt64(9223372036854775807) < toInt32(32768), toInt64(9223372036854775807) <= toInt32(32768), toInt64(9223372036854775807) > toInt32(32768), toInt64(9223372036854775807) >= toInt32(32768) , toUInt64(32768) = toUInt64(9223372036854775807), toUInt64(32768) != toUInt64(9223372036854775807), toUInt64(32768) < toUInt64(9223372036854775807), toUInt64(32768) <= toUInt64(9223372036854775807), toUInt64(32768) > toUInt64(9223372036854775807), toUInt64(32768) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toUInt64(32768), toUInt64(9223372036854775807) != toUInt64(32768), toUInt64(9223372036854775807) < toUInt64(32768), toUInt64(9223372036854775807) <= toUInt64(32768), toUInt64(9223372036854775807) > toUInt64(32768), toUInt64(9223372036854775807) >= toUInt64(32768) , toUInt64(32768) = toInt64(9223372036854775807), toUInt64(32768) != toInt64(9223372036854775807), toUInt64(32768) < toInt64(9223372036854775807), toUInt64(32768) <= toInt64(9223372036854775807), toUInt64(32768) > toInt64(9223372036854775807), toUInt64(32768) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toUInt64(32768), toInt64(9223372036854775807) != toUInt64(32768), toInt64(9223372036854775807) < toUInt64(32768), toInt64(9223372036854775807) <= toUInt64(32768), toInt64(9223372036854775807) > toUInt64(32768), toInt64(9223372036854775807) >= toUInt64(32768) , toInt64(32768) = toUInt64(9223372036854775807), toInt64(32768) != toUInt64(9223372036854775807), toInt64(32768) < toUInt64(9223372036854775807), toInt64(32768) <= toUInt64(9223372036854775807), toInt64(32768) > toUInt64(9223372036854775807), toInt64(32768) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toInt64(32768), toUInt64(9223372036854775807) != toInt64(32768), toUInt64(9223372036854775807) < toInt64(32768), toUInt64(9223372036854775807) <= toInt64(32768), toUInt64(9223372036854775807) > toInt64(32768), toUInt64(9223372036854775807) >= toInt64(32768) , toInt64(32768) = toInt64(9223372036854775807), toInt64(32768) != toInt64(9223372036854775807), toInt64(32768) < toInt64(9223372036854775807), toInt64(32768) <= toInt64(9223372036854775807), toInt64(32768) > toInt64(9223372036854775807), toInt64(32768) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toInt64(32768), toInt64(9223372036854775807) != toInt64(32768), toInt64(9223372036854775807) < toInt64(32768), toInt64(9223372036854775807) <= toInt64(32768), toInt64(9223372036854775807) > toInt64(32768), toInt64(9223372036854775807) >= toInt64(32768) 
ALTER TABLE concurrent_alter_column ADD COLUMN c270 DOUBLE;
CREATE TABLE t1 (c String) ENGINE = Memory;
select distinct * from dist_01223 order by key;
DROP DATABASE IF EXISTS test_h7h2oukb 
select 'src_to_dst', 15, 'dst', type, n, _part from dst order by type, n
SELECT trunc(NULL, NULL);
DROP DATABASE IF EXISTS test_0k5b9vl5 
CREATE TABLE 01504_test (key String, value UInt32) Engine=EmbeddedRocksDB PRIMARY KEY(key);
CREATE TABLE test_39732E2857603C6E73426F2C762247357E513665733B526F776E5F2F563B58436224425E2B505448(x UInt8) Engine=Memory;
SELECT * FROM 01754_dictionary_db.direct_dictionary_complex_key_complex_attributes;
OPTIMIZE TABLE summing_merge_tree;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), N <= toUInt16(1) as r FORMAT CSV;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), N <= toUInt8(1) as r FORMAT CSV;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 29629, 500 settings ignore_materialized_views_with_dropped_target_table=1
select 4 in plus(2, 2);
CREATE TABLE test_02521_insert_delay (`key` UInt32, `value` String) ENGINE = MergeTree ORDER BY tuple() SETTINGS parts_to_delay_insert = 1, parts_to_throw_insert = 5, max_delay_to_insert = 1, min_delay_to_insert_ms = 300, index_granularity = 29900, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 22132, prefer_fetch_merged_part_size_threshold = 8634696040, vertical_merge_algorithm_min_rows_to_activate = 757878, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1928996459, index_granularity_bytes = 63824, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 13202, primary_key_compress_block_size = 21520
CREATE INDEX idx_tab3_3 ON tab3 (col1,col4 DESC,col0 DESC);
INSERT INTO test_01193_18429.table_2_519 VALUES 
SELECT toFloat32(9.999999) as x, toDecimal32(x, 6), toDecimal32(-x, 6), toDecimal64(x, 6), toDecimal64(-x, 6);
SELECT COUNT(*) FROM system.query_cache;
INSERT INTO test_01193_18429.table_10_76 VALUES 
select mapAdd(map(toUInt128(1), toUInt128(1), 2, 1), map(toUInt128(1), toUInt128(1), 2, 1)) as res, toTypeName(res);
SELECT 'Running test stateless/02474_analyzer_subqueries_table_expression_modifiers.sql from pid=1714' 
ALTER TABLE dst_11 DROP PARTITION 1
INSERT INTO test_01193_18429.table_6_139 VALUES 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c9) AND c0 AND c8 AND c7 AND (NOT c8)) OR (c5 AND (NOT c4)) OR (c4 AND c3) OR (c5 AND c0 AND (NOT c5) AND (NOT c5)) SETTINGS convert_query_to_cnf = 0
SELECT stddevSamp(toFloat64(a)), stddevSamp(toFloat64(b)), stddevSamp(toFloat64(c)) FROM decimal;
SELECT 'Running test stateless/02191_nested_with_dots.sql from pid=1720' 
CREATE TABLE test_3E6051462E6E2E2973515F5426613E48207E3A402A7D276F296640683978784F474A5E6577434553(x UInt8) Engine=Memory;
SELECT toInt64(-1);
SELECT 0, -128, 0 = -128, 0 != -128, 0 < -128, 0 <= -128, 0 > -128, 0 >= -128, -128 = 0, -128 != 0, -128 < 0, -128 <= 0, -128 > 0, -128 >= 0 , toUInt8(0) = toInt8(-128), toUInt8(0) != toInt8(-128), toUInt8(0) < toInt8(-128), toUInt8(0) <= toInt8(-128), toUInt8(0) > toInt8(-128), toUInt8(0) >= toInt8(-128), toInt8(-128) = toUInt8(0), toInt8(-128) != toUInt8(0), toInt8(-128) < toUInt8(0), toInt8(-128) <= toUInt8(0), toInt8(-128) > toUInt8(0), toInt8(-128) >= toUInt8(0) , toUInt8(0) = toInt16(-128), toUInt8(0) != toInt16(-128), toUInt8(0) < toInt16(-128), toUInt8(0) <= toInt16(-128), toUInt8(0) > toInt16(-128), toUInt8(0) >= toInt16(-128), toInt16(-128) = toUInt8(0), toInt16(-128) != toUInt8(0), toInt16(-128) < toUInt8(0), toInt16(-128) <= toUInt8(0), toInt16(-128) > toUInt8(0), toInt16(-128) >= toUInt8(0) , toUInt8(0) = toInt32(-128), toUInt8(0) != toInt32(-128), toUInt8(0) < toInt32(-128), toUInt8(0) <= toInt32(-128), toUInt8(0) > toInt32(-128), toUInt8(0) >= toInt32(-128), toInt32(-128) = toUInt8(0), toInt32(-128) != toUInt8(0), toInt32(-128) < toUInt8(0), toInt32(-128) <= toUInt8(0), toInt32(-128) > toUInt8(0), toInt32(-128) >= toUInt8(0) , toUInt8(0) = toInt64(-128), toUInt8(0) != toInt64(-128), toUInt8(0) < toInt64(-128), toUInt8(0) <= toInt64(-128), toUInt8(0) > toInt64(-128), toUInt8(0) >= toInt64(-128), toInt64(-128) = toUInt8(0), toInt64(-128) != toUInt8(0), toInt64(-128) < toUInt8(0), toInt64(-128) <= toUInt8(0), toInt64(-128) > toUInt8(0), toInt64(-128) >= toUInt8(0) , toInt8(0) = toInt8(-128), toInt8(0) != toInt8(-128), toInt8(0) < toInt8(-128), toInt8(0) <= toInt8(-128), toInt8(0) > toInt8(-128), toInt8(0) >= toInt8(-128), toInt8(-128) = toInt8(0), toInt8(-128) != toInt8(0), toInt8(-128) < toInt8(0), toInt8(-128) <= toInt8(0), toInt8(-128) > toInt8(0), toInt8(-128) >= toInt8(0) , toInt8(0) = toInt16(-128), toInt8(0) != toInt16(-128), toInt8(0) < toInt16(-128), toInt8(0) <= toInt16(-128), toInt8(0) > toInt16(-128), toInt8(0) >= toInt16(-128), toInt16(-128) = toInt8(0), toInt16(-128) != toInt8(0), toInt16(-128) < toInt8(0), toInt16(-128) <= toInt8(0), toInt16(-128) > toInt8(0), toInt16(-128) >= toInt8(0) , toInt8(0) = toInt32(-128), toInt8(0) != toInt32(-128), toInt8(0) < toInt32(-128), toInt8(0) <= toInt32(-128), toInt8(0) > toInt32(-128), toInt8(0) >= toInt32(-128), toInt32(-128) = toInt8(0), toInt32(-128) != toInt8(0), toInt32(-128) < toInt8(0), toInt32(-128) <= toInt8(0), toInt32(-128) > toInt8(0), toInt32(-128) >= toInt8(0) , toInt8(0) = toInt64(-128), toInt8(0) != toInt64(-128), toInt8(0) < toInt64(-128), toInt8(0) <= toInt64(-128), toInt8(0) > toInt64(-128), toInt8(0) >= toInt64(-128), toInt64(-128) = toInt8(0), toInt64(-128) != toInt8(0), toInt64(-128) < toInt8(0), toInt64(-128) <= toInt8(0), toInt64(-128) > toInt8(0), toInt64(-128) >= toInt8(0) , toUInt16(0) = toInt8(-128), toUInt16(0) != toInt8(-128), toUInt16(0) < toInt8(-128), toUInt16(0) <= toInt8(-128), toUInt16(0) > toInt8(-128), toUInt16(0) >= toInt8(-128), toInt8(-128) = toUInt16(0), toInt8(-128) != toUInt16(0), toInt8(-128) < toUInt16(0), toInt8(-128) <= toUInt16(0), toInt8(-128) > toUInt16(0), toInt8(-128) >= toUInt16(0) , toUInt16(0) = toInt16(-128), toUInt16(0) != toInt16(-128), toUInt16(0) < toInt16(-128), toUInt16(0) <= toInt16(-128), toUInt16(0) > toInt16(-128), toUInt16(0) >= toInt16(-128), toInt16(-128) = toUInt16(0), toInt16(-128) != toUInt16(0), toInt16(-128) < toUInt16(0), toInt16(-128) <= toUInt16(0), toInt16(-128) > toUInt16(0), toInt16(-128) >= toUInt16(0) , toUInt16(0) = toInt32(-128), toUInt16(0) != toInt32(-128), toUInt16(0) < toInt32(-128), toUInt16(0) <= toInt32(-128), toUInt16(0) > toInt32(-128), toUInt16(0) >= toInt32(-128), toInt32(-128) = toUInt16(0), toInt32(-128) != toUInt16(0), toInt32(-128) < toUInt16(0), toInt32(-128) <= toUInt16(0), toInt32(-128) > toUInt16(0), toInt32(-128) >= toUInt16(0) , toUInt16(0) = toInt64(-128), toUInt16(0) != toInt64(-128), toUInt16(0) < toInt64(-128), toUInt16(0) <= toInt64(-128), toUInt16(0) > toInt64(-128), toUInt16(0) >= toInt64(-128), toInt64(-128) = toUInt16(0), toInt64(-128) != toUInt16(0), toInt64(-128) < toUInt16(0), toInt64(-128) <= toUInt16(0), toInt64(-128) > toUInt16(0), toInt64(-128) >= toUInt16(0) , toInt16(0) = toInt8(-128), toInt16(0) != toInt8(-128), toInt16(0) < toInt8(-128), toInt16(0) <= toInt8(-128), toInt16(0) > toInt8(-128), toInt16(0) >= toInt8(-128), toInt8(-128) = toInt16(0), toInt8(-128) != toInt16(0), toInt8(-128) < toInt16(0), toInt8(-128) <= toInt16(0), toInt8(-128) > toInt16(0), toInt8(-128) >= toInt16(0) , toInt16(0) = toInt16(-128), toInt16(0) != toInt16(-128), toInt16(0) < toInt16(-128), toInt16(0) <= toInt16(-128), toInt16(0) > toInt16(-128), toInt16(0) >= toInt16(-128), toInt16(-128) = toInt16(0), toInt16(-128) != toInt16(0), toInt16(-128) < toInt16(0), toInt16(-128) <= toInt16(0), toInt16(-128) > toInt16(0), toInt16(-128) >= toInt16(0) , toInt16(0) = toInt32(-128), toInt16(0) != toInt32(-128), toInt16(0) < toInt32(-128), toInt16(0) <= toInt32(-128), toInt16(0) > toInt32(-128), toInt16(0) >= toInt32(-128), toInt32(-128) = toInt16(0), toInt32(-128) != toInt16(0), toInt32(-128) < toInt16(0), toInt32(-128) <= toInt16(0), toInt32(-128) > toInt16(0), toInt32(-128) >= toInt16(0) , toInt16(0) = toInt64(-128), toInt16(0) != toInt64(-128), toInt16(0) < toInt64(-128), toInt16(0) <= toInt64(-128), toInt16(0) > toInt64(-128), toInt16(0) >= toInt64(-128), toInt64(-128) = toInt16(0), toInt64(-128) != toInt16(0), toInt64(-128) < toInt16(0), toInt64(-128) <= toInt16(0), toInt64(-128) > toInt16(0), toInt64(-128) >= toInt16(0) , toUInt32(0) = toInt8(-128), toUInt32(0) != toInt8(-128), toUInt32(0) < toInt8(-128), toUInt32(0) <= toInt8(-128), toUInt32(0) > toInt8(-128), toUInt32(0) >= toInt8(-128), toInt8(-128) = toUInt32(0), toInt8(-128) != toUInt32(0), toInt8(-128) < toUInt32(0), toInt8(-128) <= toUInt32(0), toInt8(-128) > toUInt32(0), toInt8(-128) >= toUInt32(0) , toUInt32(0) = toInt16(-128), toUInt32(0) != toInt16(-128), toUInt32(0) < toInt16(-128), toUInt32(0) <= toInt16(-128), toUInt32(0) > toInt16(-128), toUInt32(0) >= toInt16(-128), toInt16(-128) = toUInt32(0), toInt16(-128) != toUInt32(0), toInt16(-128) < toUInt32(0), toInt16(-128) <= toUInt32(0), toInt16(-128) > toUInt32(0), toInt16(-128) >= toUInt32(0) , toUInt32(0) = toInt32(-128), toUInt32(0) != toInt32(-128), toUInt32(0) < toInt32(-128), toUInt32(0) <= toInt32(-128), toUInt32(0) > toInt32(-128), toUInt32(0) >= toInt32(-128), toInt32(-128) = toUInt32(0), toInt32(-128) != toUInt32(0), toInt32(-128) < toUInt32(0), toInt32(-128) <= toUInt32(0), toInt32(-128) > toUInt32(0), toInt32(-128) >= toUInt32(0) , toUInt32(0) = toInt64(-128), toUInt32(0) != toInt64(-128), toUInt32(0) < toInt64(-128), toUInt32(0) <= toInt64(-128), toUInt32(0) > toInt64(-128), toUInt32(0) >= toInt64(-128), toInt64(-128) = toUInt32(0), toInt64(-128) != toUInt32(0), toInt64(-128) < toUInt32(0), toInt64(-128) <= toUInt32(0), toInt64(-128) > toUInt32(0), toInt64(-128) >= toUInt32(0) , toInt32(0) = toInt8(-128), toInt32(0) != toInt8(-128), toInt32(0) < toInt8(-128), toInt32(0) <= toInt8(-128), toInt32(0) > toInt8(-128), toInt32(0) >= toInt8(-128), toInt8(-128) = toInt32(0), toInt8(-128) != toInt32(0), toInt8(-128) < toInt32(0), toInt8(-128) <= toInt32(0), toInt8(-128) > toInt32(0), toInt8(-128) >= toInt32(0) , toInt32(0) = toInt16(-128), toInt32(0) != toInt16(-128), toInt32(0) < toInt16(-128), toInt32(0) <= toInt16(-128), toInt32(0) > toInt16(-128), toInt32(0) >= toInt16(-128), toInt16(-128) = toInt32(0), toInt16(-128) != toInt32(0), toInt16(-128) < toInt32(0), toInt16(-128) <= toInt32(0), toInt16(-128) > toInt32(0), toInt16(-128) >= toInt32(0) , toInt32(0) = toInt32(-128), toInt32(0) != toInt32(-128), toInt32(0) < toInt32(-128), toInt32(0) <= toInt32(-128), toInt32(0) > toInt32(-128), toInt32(0) >= toInt32(-128), toInt32(-128) = toInt32(0), toInt32(-128) != toInt32(0), toInt32(-128) < toInt32(0), toInt32(-128) <= toInt32(0), toInt32(-128) > toInt32(0), toInt32(-128) >= toInt32(0) , toInt32(0) = toInt64(-128), toInt32(0) != toInt64(-128), toInt32(0) < toInt64(-128), toInt32(0) <= toInt64(-128), toInt32(0) > toInt64(-128), toInt32(0) >= toInt64(-128), toInt64(-128) = toInt32(0), toInt64(-128) != toInt32(0), toInt64(-128) < toInt32(0), toInt64(-128) <= toInt32(0), toInt64(-128) > toInt32(0), toInt64(-128) >= toInt32(0) , toUInt64(0) = toInt8(-128), toUInt64(0) != toInt8(-128), toUInt64(0) < toInt8(-128), toUInt64(0) <= toInt8(-128), toUInt64(0) > toInt8(-128), toUInt64(0) >= toInt8(-128), toInt8(-128) = toUInt64(0), toInt8(-128) != toUInt64(0), toInt8(-128) < toUInt64(0), toInt8(-128) <= toUInt64(0), toInt8(-128) > toUInt64(0), toInt8(-128) >= toUInt64(0) , toUInt64(0) = toInt16(-128), toUInt64(0) != toInt16(-128), toUInt64(0) < toInt16(-128), toUInt64(0) <= toInt16(-128), toUInt64(0) > toInt16(-128), toUInt64(0) >= toInt16(-128), toInt16(-128) = toUInt64(0), toInt16(-128) != toUInt64(0), toInt16(-128) < toUInt64(0), toInt16(-128) <= toUInt64(0), toInt16(-128) > toUInt64(0), toInt16(-128) >= toUInt64(0) , toUInt64(0) = toInt32(-128), toUInt64(0) != toInt32(-128), toUInt64(0) < toInt32(-128), toUInt64(0) <= toInt32(-128), toUInt64(0) > toInt32(-128), toUInt64(0) >= toInt32(-128), toInt32(-128) = toUInt64(0), toInt32(-128) != toUInt64(0), toInt32(-128) < toUInt64(0), toInt32(-128) <= toUInt64(0), toInt32(-128) > toUInt64(0), toInt32(-128) >= toUInt64(0) , toUInt64(0) = toInt64(-128), toUInt64(0) != toInt64(-128), toUInt64(0) < toInt64(-128), toUInt64(0) <= toInt64(-128), toUInt64(0) > toInt64(-128), toUInt64(0) >= toInt64(-128), toInt64(-128) = toUInt64(0), toInt64(-128) != toUInt64(0), toInt64(-128) < toUInt64(0), toInt64(-128) <= toUInt64(0), toInt64(-128) > toUInt64(0), toInt64(-128) >= toUInt64(0) , toInt64(0) = toInt8(-128), toInt64(0) != toInt8(-128), toInt64(0) < toInt8(-128), toInt64(0) <= toInt8(-128), toInt64(0) > toInt8(-128), toInt64(0) >= toInt8(-128), toInt8(-128) = toInt64(0), toInt8(-128) != toInt64(0), toInt8(-128) < toInt64(0), toInt8(-128) <= toInt64(0), toInt8(-128) > toInt64(0), toInt8(-128) >= toInt64(0) , toInt64(0) = toInt16(-128), toInt64(0) != toInt16(-128), toInt64(0) < toInt16(-128), toInt64(0) <= toInt16(-128), toInt64(0) > toInt16(-128), toInt64(0) >= toInt16(-128), toInt16(-128) = toInt64(0), toInt16(-128) != toInt64(0), toInt16(-128) < toInt64(0), toInt16(-128) <= toInt64(0), toInt16(-128) > toInt64(0), toInt16(-128) >= toInt64(0) , toInt64(0) = toInt32(-128), toInt64(0) != toInt32(-128), toInt64(0) < toInt32(-128), toInt64(0) <= toInt32(-128), toInt64(0) > toInt32(-128), toInt64(0) >= toInt32(-128), toInt32(-128) = toInt64(0), toInt32(-128) != toInt64(0), toInt32(-128) < toInt64(0), toInt32(-128) <= toInt64(0), toInt32(-128) > toInt64(0), toInt32(-128) >= toInt64(0) , toInt64(0) = toInt64(-128), toInt64(0) != toInt64(-128), toInt64(0) < toInt64(-128), toInt64(0) <= toInt64(-128), toInt64(0) > toInt64(-128), toInt64(0) >= toInt64(-128), toInt64(-128) = toInt64(0), toInt64(-128) != toInt64(0), toInt64(-128) < toInt64(0), toInt64(-128) <= toInt64(0), toInt64(-128) > toInt64(0), toInt64(-128) >= toInt64(0) 
alter table many_mutations delete where y = 813 * 2 settings mutations_sync = 0;
DROP DATABASE IF EXISTS test_9qm57lwl 
select CRC32(str1), CRC32(str2) from table1 order by CRC32(str1), CRC32(str2);
INSERT INTO src VALUES /* (-58, 2) */ 
CREATE TABLE parquet_load (`date32` Date32) ENGINE = Memory;
ALTER TABLE tbl ADD COLUMN a Int64;
CREATE ROW POLICY 02763_filter_3 ON 02763_merge_log_1 USING y>12 AS permissive TO ALL;
select v, variantElement(v, 'Int64') from format(JSONEachRow, 'v Variant(String, Int64, Int128)', '{"v" : null}, {"v" : "string"}, {"v" : -1}, {"v" : 0}, {"v" : 10000000000000000000000}') format JSONEachRow;
SELECT shardNum() AS `_shard_num`, `id` FROM view(SELECT toUInt64(`id`) AS `id` FROM `data` HAVING `id` IN tuple(1)) WHERE `id` IN tuple(1) ORDER BY `_shard_num` ASC, `id` ASC
SELECT * FROM bloom_filter_not_has WHERE NOT has(ary, 'd') ORDER BY ary;
SELECT 'Running test stateless/01818_move_partition_simple.sql from pid=1714' 
CREATE TABLE IF NOT EXISTS test_01444.t18180 (`x` UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 49736, min_bytes_for_wide_part = 645103364, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 6, merge_max_block_size = 15200, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 21360504, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75390, primary_key_compress_block_size = 98921
SELECT CASE WHEN 1 THEN toFixedString('foo', 16) WHEN 1 THEN 'bar' ELSE toFixedString(col4, 16) END FROM multi_if_check;
CREATE DATABASE IF NOT EXISTS test_59o3nf7q 
CREATE TABLE test_3E6D3E6758654653485C204B7B453A243B6954312E62314779366565407C3A30592C685C2550714A(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_2_891 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/02165_h3_num_hexagons.sql from pid=1713' 
CREATE TABLE test_01193_18429.table_3_441 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select count(), sum(number) from file('02841.parquet') where indexHint(dt64_s between toDateTime64('-2.01e8'::Decimal64(0), 0) and toDateTime64(1.5e8::Decimal64(0), 0));
SELECT x FROM b WHERE x IN (SELECT toUInt8(count()) FROM system.tables);
drop view revenue0;
SELECT multiIf((number % 2) = 0, [toInt16(1), toInt16(2)], (number % 3) = 0, [toFloat32(2), toFloat32(3)], [toFloat32(3), toFloat32(3)]) FROM system.numbers LIMIT 10;
select polygonsWithinSpherical([[[(4.3613577, 50.8651821), (4.349556, 50.8535879), (4.3602419, 50.8435626), (4.3830299, 50.8428851), (4.3904543, 50.8564867), (4.3613148, 50.8651279)]]], [[[(4.346693, 50.858306), (4.367945, 50.852455), (4.366227, 50.840809), (4.344961, 50.833264), (4.338074, 50.848677), (4.346693, 50.858306)]]]);
SELECT 'Running test stateless/01922_sum_null_for_remote.sql from pid=1722' 
CREATE DATABASE IF NOT EXISTS test_e90l8mvh 
CREATE TABLE test_35464E4376247D5054445D727D677429466B2B342326322436542D57584170424D5059227154712B(x UInt8) Engine=Memory;
SELECT JSONExtract('{"a": "hello", "b": [-100, 200.0, 300]}', 'b', 2, 'Int32');
SELECT formatDateTime(toDateTime64('2019-09-16 19:20:12', 0, 'Asia/Istanbul'), '%C');
SELECT 'Running test stateless/01069_materialized_view_alter_target_table_with_default_expression.sql from pid=1714' 
CREATE TABLE test_6B2C747555515C57205E7C4E30454955622A4D442659772C2E6F593E405D772C4D7E5A7D296C2F4B(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_bjd2w0tf 
select 20, 'fail: correlated subquery';
insert into function file(data_02302.arrow) select 1 as x settings engine_file_truncate_on_insert=1;
CREATE TABLE test_77402E3C4A6860423E386B30427D3B67584E5D3A725B20483C3D565275436A6F445B3A3D346D246B(x UInt8) Engine=Memory;
SELECT test_table.a FROM test_table ORDER BY (test_table.a == test_table.a) + 1;
INSERT INTO test_01193_18429.table_6_118 VALUES 
CREATE TABLE test_2A67713E4B3E2835666C5532344A592C485D4D5E597379405B266E32307B624345783959346E323E(x UInt8) Engine=Memory;
SELECT hex(sipHash128Keyed((key0, key1), val)) FROM sipHashKeyed_keys ORDER by key0;
CREATE TABLE test_454B594E6A3E606641644C4936312C722A70596A224B3535455450285D7E4A4E3A52563F3E4A3C59(x UInt8) Engine=Memory;
INSERT INTO test_02908_r1_165 SELECT rand64() FROM numbers(5);
SELECT 'Running test stateless/02552_client_format_settings.sql from pid=1715' 
CREATE TABLE default_table ( key UInt64 DEFAULT 42, value1 UInt64 MATERIALIZED key * key, value2 ALIAS value1 * key ) ENGINE = MergeTree() ORDER BY tuple();
CREATE INDEX idx_tab4_2 ON tab4 (col3 DESC,col0);
CREATE TABLE test_01193_18429.table_7_728 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_082yvl00 
create table s(a Int64, b Nullable(Int64), c String) engine = Memory;
CREATE TABLE test_37525139645D61576A7B4D513020372147554B6E295A796D273A2D3F6E2C456C4B644754404E6B4D(x UInt8) Engine=Memory;
SELECT * FROM merge('system', '^one$') AS one WHERE (one.dummy = 0) OR (one.dummy = 1);
CREATE DATABASE IF NOT EXISTS test_hbgqqew3 
CREATE DATABASE IF NOT EXISTS test_ccrs4m94 
DROP DATABASE IF EXISTS test_6lseoj1t 
SELECT bitTest(CAST(1 AS Int8),CAST( 0 AS Nullable(Int8)));
SELECT a, min(b), max(b) FROM data_02295 GROUP BY a WITH TOTALS ORDER BY a, count() SETTINGS optimize_aggregation_in_order = 1, max_threads = 1;
CREATE DATABASE IF NOT EXISTS test_o0enb1zw 
SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN nr AS r USING (lc) ORDER BY x, r.lc, l.lc;
CREATE TABLE test_5A6E52202A47725F38794D3E78323D40562E492E35323252664F242F28663B4A73333F28544D6565(x UInt8) Engine=Memory;
CREATE TABLE test_38585A435150597D3C5D487B75402A4B354A2844297E412549252B63482D5428206824214C5A6C75(x UInt8) Engine=Memory;
select 'dictGetOrDefault', 'test_01037.dict_tuple' as dict_name, tuple(x, y) as key, dictGetOrDefault(dict_name, 'name', key, 'www'), dictGetOrDefault(dict_name, 'value', key, toUInt64(1234)) from test_01037.points order by x, y;
CREATE DATABASE IF NOT EXISTS test_6slenhsf 
drop table if exists rate_test;
DROP DATABASE IF EXISTS test_ag8766nj 
DROP DATABASE IF EXISTS test_r3yhgm6n 
CREATE TABLE test_3E795F2B777851475248285E313737716B6E4E3C4C2C47324A6E424166613B2B7A4B3651584C5A68(x UInt8) Engine=Memory;
ALTER TABLE table_with_lc_key MODIFY COLUMN enum_key Int8;
drop table if exists part_01278_2;
select 'left asof on';
INSERT INTO empty_pk SELECT number FROM numbers(100000);
select concat(materialize(toFixedString('a', 1)), toFixedString('b', 1), materialize('c')) == 'abc';
INSERT INTO test_01193_18429.table_2_343 VALUES 
DROP DATABASE IF EXISTS test_hjqqp1i2 
INSERT INTO src_0 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 18
SELECT extractTextFromHTML('<![CDATA[ \t Hello,\rworld \n ]]>');
SELECT 'Check bug found fuzzing';
CREATE DATABASE IF NOT EXISTS test_3z4q3l7b 
CREATE TABLE set (val UInt64) ENGINE = Set() SETTINGS persistent=0;
SELECT arrayReduce('avgOrDefault', [toDecimal128(-123.45, 2)]);
EXPLAIN QUERY TREE run_passes=1 SELECT key FROM test GROUP BY key ORDER BY avg(a), key settings allow_experimental_analyzer=1;
CREATE TABLE test_01193_18429.table_2_741 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_442B243728467C3028616E3D47712D712236383C525371312478715377245549575949515E3F6540(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_7_65 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'Lambda compound argument';
CREATE TABLE columns_with_multiple_streams_bad_case ( field0 Nullable(UInt64) CODEC(Delta) ) ENGINE = MergeTree ORDER BY tuple();
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toInt64(3), toInt64(3)] END FROM system.numbers LIMIT 10;
insert into t select number from numbers(10000);
INSERT INTO test_01193_18429.table_5_376 VALUES 
select parseDateTimeInJodaSyntax('august', 'MMMM', 'UTC') = toDateTime('2000-08-01', 'UTC');
CREATE TABLE old_syntax_01071_test (date Date, id UInt8) ENGINE = MergeTree(date, id, 8192);
INSERT INTO r5 SELECT 77
CREATE DATABASE IF NOT EXISTS test_xhfhbh9d 
select -41 as offset, -40 as length, 'Hello' as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
explain pipeline select a from remote(test_cluster_two_shards, currentDatabase(), dist_t) group by a;
CREATE TABLE test_2A61394D2E21686D77456E7A3C4A4C78217920577B4F5A5B4D3C2C4D22334F2244715870784F285F(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_5_137 VALUES 
SELECT 'Running test stateless/02245_parquet_skip_unknown_type.sh from pid=1705' 
INSERT INTO 02918_table_str SELECT * FROM fuzzJSON( 02918_json_fuzzer, json_str='{"name": "John Doe", "age": 30, "address": {"city": "Citiville", "zip": "12345"}, "hobbies": ["reading", "traveling", "coding"]}', random_seed=6666) LIMIT 200;
INSERT INTO r1 SELECT 83 % 10 = 1 ? 83 - 1 : 83
INSERT INTO test_01193_18429.table_6_613 VALUES 
INSERT INTO test_01193_18429.table_5_454 VALUES 
SELECT bin(toInt256(-100000000000)) AS res;
SELECT * FROM ( SELECT m0.pt AS pt ,m0.`uvctr` AS uvctr ,round(m1.uvctr,4) AS uvctr_hb_last_value ,round(m2.uvctr,4) AS uvctr_tb_last_value FROM ( SELECT m0.pt AS pt ,COALESCE(m0.brand_name,m1.brand_name) AS brand_name ,if(isNaN(`click_uv` / `exposure_uv`) OR isInfinite(`click_uv` / `exposure_uv`),NULL,`click_uv` / `exposure_uv`) AS `uvctr` FROM ( SELECT pt AS pt ,brand_name AS `brand_name` ,exposure_uv AS `exposure_uv` ,click_uv AS `click_uv` FROM test2 WHERE pt = '20230626' ) m0 FULL JOIN ( SELECT pt AS pt ,brand_name AS `brand_name` ,total_indirect_order_cnt AS `total_indirect_order_cnt` ,total_indirect_gmv AS `total_indirect_gmv` FROM test1 WHERE pt = '20230626' ) m1 ON m0.brand_name = m1.brand_name AND m0.pt = m1.pt ) m0 LEFT JOIN ( SELECT m0.pt AS pt ,if(isNaN(`click_uv` / `exposure_uv`) OR isInfinite(`click_uv` / `exposure_uv`),NULL,`click_uv` / `exposure_uv`) AS `uvctr` ,COALESCE(m0.brand_name,m1.brand_name) AS brand_name ,`exposure_uv` AS `exposure_uv` ,`click_uv` FROM ( SELECT pt AS pt ,brand_name AS `brand_name` ,exposure_uv AS `exposure_uv` ,click_uv AS `click_uv` FROM test2 WHERE pt = '20230625' ) m0 FULL JOIN ( SELECT pt AS pt ,brand_name AS `brand_name` ,total_indirect_order_cnt AS `total_indirect_order_cnt` ,total_indirect_gmv AS `total_indirect_gmv` FROM test1 WHERE pt = '20230625' ) m1 ON m0.brand_name = m1.brand_name AND m0.pt = m1.pt ) m1 ON m0.brand_name = m1.brand_name AND m0.pt = m1.pt LEFT JOIN ( SELECT m0.pt AS pt ,if(isNaN(`click_uv` / `exposure_uv`) OR isInfinite(`click_uv` / `exposure_uv`),NULL,`click_uv` / `exposure_uv`) AS `uvctr` ,COALESCE(m0.brand_name,m1.brand_name) AS brand_name ,`exposure_uv` AS `exposure_uv` ,`click_uv` FROM ( SELECT pt AS pt ,brand_name AS `brand_name` ,exposure_uv AS `exposure_uv` ,click_uv AS `click_uv` FROM test2 WHERE pt = '20220626' ) m0 FULL JOIN ( SELECT pt AS pt ,brand_name AS `brand_name` ,total_indirect_order_cnt AS `total_indirect_order_cnt` ,total_indirect_gmv AS `total_indirect_gmv` FROM test1 WHERE pt = '20220626' ) m1 ON m0.brand_name = m1.brand_name AND m0.pt = m1.pt ) m2 ON m0.brand_name = m2.brand_name AND m0.pt = m2.pt ) c0 ORDER BY pt ASC, uvctr DESC;
SELECT 'Running test stateless/02798_explain_settings_not_applied_bug.sql from pid=1713' 
select * from enum_alter_issue order by b;
CREATE DATABASE IF NOT EXISTS test_k4qqnipv 
SELECT mapAll(NULL);
SELECT a > 0, b > 0, g > 0 FROM decimal ORDER BY a DESC;
SELECT 'Running test stateless/00411_long_accurate_number_comparison_int4.sh from pid=1726' 
INSERT INTO test_01193_18429.table_4_160 VALUES 
SELECT _sample_factor FROM merge(currentDatabase(), '^sample_00579_\\d$');
CREATE TABLE test_465031416023493C2846443A282279234E32384D3542777D636C2D4C5D4932277A4721357020596B(x UInt8) Engine=Memory;
SELECT nothing([NULL]);
CREATE TABLE table1 (str1 String, str2 String) ENGINE = Memory;
select * from dist_01072 where key=0 and _part='0' settings force_optimize_skip_unused_shards=2;
CREATE TABLE test_01193_18429.table_8_431 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT key FROM ( SELECT 1 AS key ) AS t1 JOIN ( SELECT 1 AS key ) AS t2 ON t1.key = t2.key WHERE key;
select arrayMap(a -> arrayMap(b -> arrayMap(c -> (round(c.1, 6), round(c.2, 6)), b), a), polygonsUnionSpherical([[[(4.3613577, 50.8651821), (4.349556, 50.8535879), (4.3602419, 50.8435626), (4.3830299, 50.8428851), (4.3904543, 50.8564867), (4.3613148, 50.8651279)]]], [[[(4.346693, 50.858306), (4.367945, 50.852455), (4.366227, 50.840809), (4.344961, 50.833264), (4.338074, 50.848677), (4.346693, 50.858306)]]]));
ALTER TABLE concurrent_alter_column ADD COLUMN c479 DOUBLE;
select regexpExtract(materialize('100-200'), '([a-z])', null);
SELECT * FROM system.numbers LIMIT 3 FORMAT ArrowStream
SELECT throwIf((SELECT (count(), sum(n)) FROM merge(currentDatabase(), '') WHERE type=3) != (9 + 1, 45 + 10)) FORMAT Null;
CREATE TABLE src (`A` Int64, `B` String, `C` String) ENGINE = MergeTree ORDER BY A SETTINGS min_bytes_for_wide_part = 0, index_granularity = 58834, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 17462, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 215040, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 4784844898, index_granularity_bytes = 21241274, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 18062, primary_key_compress_block_size = 35281
CREATE TABLE test_01193_18429.table_3_286 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT '1,a1,1,a2,1', arrayEnumerateUniqRanked(1,a1,1,a2,1) FROM arrays_test ORDER BY a1, a2;
select s2CellsIntersect(9926595209846587392, 9926594385212866560);
SELECT polygonsIntersectionCartesian(NULL, NULL);
CREATE DICTIONARY hashed_array_dictionary_simple_key_complex_attributes ( id UInt64, value_first String DEFAULT 'value_first_default', value_second Nullable(String) DEFAULT 'value_second_default' ) PRIMARY KEY id SOURCE(CLICKHOUSE(TABLE 'simple_key_complex_attributes_source_table')) LAYOUT(HASHED_ARRAY()) LIFETIME(MIN 1 MAX 1000);
INSERT INTO test_01193_18429.table_7_703 VALUES 
SELECT 'Running test stateless/01521_alter_enum_and_reverse_read.sql from pid=1714' 
CREATE TABLE test_7B41282D2E445A5F5A426A532C4035622C6435262F202A2C37435F3E342379202E2E384329392945(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_2_833 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_1_199 VALUES 
ALTER TABLE concurrent_alter_column ADD COLUMN c292 DOUBLE;
INSERT INTO r9 SELECT 53
SELECT count() = 8191, sumMerge(s) = 16382 FROM aggregating_00155
select formatRowNoNewline('JSON', number, good) from (select number, 'good' as good from numbers(3));
CREATE TABLE 02661_archive_table Engine=File('CSV', '/var/lib/clickhouse/user_files/02661_read_from_archive_test_t8u0u0ho_tarxz_archive3.tar.xz :: 02661_read_from_archive_test_t8u0u0ho_tarxz_data*.csv')
SELECT 't1 ANY RIGHT JOIN tn2 | bs = 1';
SELECT * FROM merge(currentDatabase(), '02763_merge') ORDER BY x;
SELECT DIV AS MOD FROM (SELECT 1 `DIV`) FORMAT TSVWithNames;
SELECT topLevelDomainRFC(NULL);
SELECT 'Running test stateless/01503_fixed_string_primary_key.sql from pid=1718' 
CREATE TABLE test_345374216A79536B29366532655234617525374323417121435A5752542F2C277A63275629512973(x UInt8) Engine=Memory;
ALTER TABLE concurrent_alter_column ADD COLUMN c42 DOUBLE;
CREATE TABLE IF NOT EXISTS decimal (a Nullable(DECIMAL(9,0)), b Nullable(DECIMAL(18,0)), c Nullable(DECIMAL(38,0)), d Nullable(DECIMAL(9,0))) ENGINE = Memory;
CREATE TABLE test_01193_18429.table_8_528 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_of09t7yj 
DROP TABLE IF EXISTS test_parallel_replicas_unavailable_shards;
SELECT count() from tab_02473 PREWHERE b > 10 AND b <= 70 AND c > 46 AND c <= 76 AND d > 5 AND d <= 79 WHERE a == 0;
SELECT SECOND(toDateTime('2016-06-15 23:00:00'));
ALTER TABLE concurrent_alter_column ADD COLUMN c4 DOUBLE;
CREATE TABLE test_01193_18429.table_5_785 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP TABLE IF EXISTS 02763_merge_merge_1;
CREATE TABLE test_01193_18429.table_4_110 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT _CAST(42, 'UInt64'), 'hello', _CAST(1659652253, 'DateTime'), _CAST([('2b95a497-3a5d-49af-bf85-15763318cde7', [1.2000000476837158, 3.4000000953674316])], 'Map(UUID, Array(Float32))')
DROP DATABASE IF EXISTS test_h5znju24 
SELECT JSON_QUERY('{"abc123":{"123":1}}', '$.abc123.123');
DROP FUNCTION test_user_defined_function
select arrayResize(['a', 'b', 'c'], 5);
CREATE TABLE 01765_db.simple_key_hierarchy_table ( id UInt64, parent_id UInt64 ) ENGINE = TinyLog();
CREATE DATABASE IF NOT EXISTS test_fi3nif0z 
SELECT toDayOfMonth(toDateTime(1412106600), 'Europe/London');
CREATE DATABASE IF NOT EXISTS test_q16nf5kf 
CREATE TABLE test_01193_18429.table_9_363 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
drop table src_02225;
select -2 as offset, 2 as length, 'Hello' as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
SELECT number from numbers(10) where sleepEachRow(1) Format Null;
SELECT count() FROM t_cnf_fuzz WHERE (c5 AND (NOT c9) AND c1 AND c1) OR (c7) OR ((NOT c0) AND c0 AND (NOT c3) AND c5) OR (c2 AND c5) OR (c0 AND (NOT c7) AND c0) OR (c5 AND (NOT c2)) OR (c0 AND (NOT c1) AND (NOT c0)) SETTINGS convert_query_to_cnf = 1
SELECT CASE WHEN (col1 % 2) = 0 THEN col2 WHEN (col1 % 3) = 0 THEN toFixedString('bar', 16) ELSE toFixedString('baz', 16) END FROM multi_if_check;
alter table many_mutations delete where y = 288 * 2 settings mutations_sync = 0;
CREATE TABLE hypothesis_test_test3 (`i` UInt64, `a` UInt64, `b` UInt64, INDEX t a = b TYPE hypothesis GRANULARITY 1) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 1, min_bytes_for_wide_part = 1046791011, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 97, merge_max_block_size = 11786, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 25380105, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 44705, primary_key_compress_block_size = 77243
INSERT INTO test_01193_18429.table_2_245 VALUES 
CREATE WINDOW VIEW wv Engine Memory as select count(id), tumbleStart(w_id) as window_start from data group by tumble(timestamp, INTERVAL '10' SECOND) as w_id;
CREATE TABLE test_01193_18429.table_9_35 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_5_422 VALUES 
CREATE TABLE test_79602F4E304742523344263C3723315C2E55407D76377B42235A2C2854574D2C2C3A494264585053(x UInt8) Engine=Memory;
ALTER TABLE concurrent_alter_column ADD COLUMN c428 DOUBLE;
SELECT 3, 14, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (3 < 13 AND 14 > 0 ? 3 : 0)), throwIf(last != (3 < 13 AND 14 > 0 ? least(13 - 1, 3 + 14 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 3, 14);
SELECT 'Running test stateless/01273_arrow.sh from pid=1722' 
backup table test_h75tm4x2.test2 on cluster test_shard_localhost to Disk('backups', '02907_backup_restore_flatten_nested_test_h75tm4x22');
INSERT INTO test_01193_18429.table_4_708 VALUES 
CREATE DATABASE IF NOT EXISTS test_8567wdbw 
DROP TABLE any_inner_join;
select *, e > 'b' from enums;
SELECT mutation_id FROM system.mutations WHERE is_done = 0 and table like 'concurrent_kill_%' and database='test_bc61bq8k' LIMIT 1
SELECT ngramMinHashArgUTF8(NULL, NULL);
CREATE TABLE test_01193_18429.table_5_320 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP TABLE IF EXISTS checksums_r1;
SELECT wordShingleMinHashCaseInsensitiveUTF8('');
INSERT INTO test_01193_18429.table_8_929 VALUES 
INSERT INTO TABLE or_bug VALUES 
CREATE TABLE test_01193_18429.table_7_682 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
USE system;
SELECT toUInt64(number * number) * number y, toDecimal32(y, 1), toDecimal64(y, 2), toDecimal128(y, 6), toDecimal256(y, 7) FROM numbers_mt(10) ORDER BY number;
CREATE TABLE test_654558714234763421323F4267467D5E4F4976287A6C745E4A2965226C777173653F787D56517A6A(x UInt8) Engine=Memory;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 27018, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT accurateCastOrNull(1, 'Decimal32(9)');
SELECT * FROM test WHERE isZeroOrNull(x = 'xyz');
CREATE TABLE test_01193_18429.table_7_21 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_713A55767E5D654F725C672A61655E615335453F70542F4259412431292D24613C656A2973414B73(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_8_972 VALUES 
INSERT INTO test_01193_18429.table_6_320 VALUES 
CREATE TABLE test_424F372438252721745D233D49507650527E534D32707274403B7022327029496D683346682D7229(x UInt8) Engine=Memory;
SELECT stddevSamp(-1);
SELECT 127, -32767, 127 = -32767, 127 != -32767, 127 < -32767, 127 <= -32767, 127 > -32767, 127 >= -32767, -32767 = 127, -32767 != 127, -32767 < 127, -32767 <= 127, -32767 > 127, -32767 >= 127 , toUInt8(127) = toInt16(-32767), toUInt8(127) != toInt16(-32767), toUInt8(127) < toInt16(-32767), toUInt8(127) <= toInt16(-32767), toUInt8(127) > toInt16(-32767), toUInt8(127) >= toInt16(-32767), toInt16(-32767) = toUInt8(127), toInt16(-32767) != toUInt8(127), toInt16(-32767) < toUInt8(127), toInt16(-32767) <= toUInt8(127), toInt16(-32767) > toUInt8(127), toInt16(-32767) >= toUInt8(127) , toUInt8(127) = toInt32(-32767), toUInt8(127) != toInt32(-32767), toUInt8(127) < toInt32(-32767), toUInt8(127) <= toInt32(-32767), toUInt8(127) > toInt32(-32767), toUInt8(127) >= toInt32(-32767), toInt32(-32767) = toUInt8(127), toInt32(-32767) != toUInt8(127), toInt32(-32767) < toUInt8(127), toInt32(-32767) <= toUInt8(127), toInt32(-32767) > toUInt8(127), toInt32(-32767) >= toUInt8(127) , toUInt8(127) = toInt64(-32767), toUInt8(127) != toInt64(-32767), toUInt8(127) < toInt64(-32767), toUInt8(127) <= toInt64(-32767), toUInt8(127) > toInt64(-32767), toUInt8(127) >= toInt64(-32767), toInt64(-32767) = toUInt8(127), toInt64(-32767) != toUInt8(127), toInt64(-32767) < toUInt8(127), toInt64(-32767) <= toUInt8(127), toInt64(-32767) > toUInt8(127), toInt64(-32767) >= toUInt8(127) , toInt8(127) = toInt16(-32767), toInt8(127) != toInt16(-32767), toInt8(127) < toInt16(-32767), toInt8(127) <= toInt16(-32767), toInt8(127) > toInt16(-32767), toInt8(127) >= toInt16(-32767), toInt16(-32767) = toInt8(127), toInt16(-32767) != toInt8(127), toInt16(-32767) < toInt8(127), toInt16(-32767) <= toInt8(127), toInt16(-32767) > toInt8(127), toInt16(-32767) >= toInt8(127) , toInt8(127) = toInt32(-32767), toInt8(127) != toInt32(-32767), toInt8(127) < toInt32(-32767), toInt8(127) <= toInt32(-32767), toInt8(127) > toInt32(-32767), toInt8(127) >= toInt32(-32767), toInt32(-32767) = toInt8(127), toInt32(-32767) != toInt8(127), toInt32(-32767) < toInt8(127), toInt32(-32767) <= toInt8(127), toInt32(-32767) > toInt8(127), toInt32(-32767) >= toInt8(127) , toInt8(127) = toInt64(-32767), toInt8(127) != toInt64(-32767), toInt8(127) < toInt64(-32767), toInt8(127) <= toInt64(-32767), toInt8(127) > toInt64(-32767), toInt8(127) >= toInt64(-32767), toInt64(-32767) = toInt8(127), toInt64(-32767) != toInt8(127), toInt64(-32767) < toInt8(127), toInt64(-32767) <= toInt8(127), toInt64(-32767) > toInt8(127), toInt64(-32767) >= toInt8(127) , toUInt16(127) = toInt16(-32767), toUInt16(127) != toInt16(-32767), toUInt16(127) < toInt16(-32767), toUInt16(127) <= toInt16(-32767), toUInt16(127) > toInt16(-32767), toUInt16(127) >= toInt16(-32767), toInt16(-32767) = toUInt16(127), toInt16(-32767) != toUInt16(127), toInt16(-32767) < toUInt16(127), toInt16(-32767) <= toUInt16(127), toInt16(-32767) > toUInt16(127), toInt16(-32767) >= toUInt16(127) , toUInt16(127) = toInt32(-32767), toUInt16(127) != toInt32(-32767), toUInt16(127) < toInt32(-32767), toUInt16(127) <= toInt32(-32767), toUInt16(127) > toInt32(-32767), toUInt16(127) >= toInt32(-32767), toInt32(-32767) = toUInt16(127), toInt32(-32767) != toUInt16(127), toInt32(-32767) < toUInt16(127), toInt32(-32767) <= toUInt16(127), toInt32(-32767) > toUInt16(127), toInt32(-32767) >= toUInt16(127) , toUInt16(127) = toInt64(-32767), toUInt16(127) != toInt64(-32767), toUInt16(127) < toInt64(-32767), toUInt16(127) <= toInt64(-32767), toUInt16(127) > toInt64(-32767), toUInt16(127) >= toInt64(-32767), toInt64(-32767) = toUInt16(127), toInt64(-32767) != toUInt16(127), toInt64(-32767) < toUInt16(127), toInt64(-32767) <= toUInt16(127), toInt64(-32767) > toUInt16(127), toInt64(-32767) >= toUInt16(127) , toInt16(127) = toInt16(-32767), toInt16(127) != toInt16(-32767), toInt16(127) < toInt16(-32767), toInt16(127) <= toInt16(-32767), toInt16(127) > toInt16(-32767), toInt16(127) >= toInt16(-32767), toInt16(-32767) = toInt16(127), toInt16(-32767) != toInt16(127), toInt16(-32767) < toInt16(127), toInt16(-32767) <= toInt16(127), toInt16(-32767) > toInt16(127), toInt16(-32767) >= toInt16(127) , toInt16(127) = toInt32(-32767), toInt16(127) != toInt32(-32767), toInt16(127) < toInt32(-32767), toInt16(127) <= toInt32(-32767), toInt16(127) > toInt32(-32767), toInt16(127) >= toInt32(-32767), toInt32(-32767) = toInt16(127), toInt32(-32767) != toInt16(127), toInt32(-32767) < toInt16(127), toInt32(-32767) <= toInt16(127), toInt32(-32767) > toInt16(127), toInt32(-32767) >= toInt16(127) , toInt16(127) = toInt64(-32767), toInt16(127) != toInt64(-32767), toInt16(127) < toInt64(-32767), toInt16(127) <= toInt64(-32767), toInt16(127) > toInt64(-32767), toInt16(127) >= toInt64(-32767), toInt64(-32767) = toInt16(127), toInt64(-32767) != toInt16(127), toInt64(-32767) < toInt16(127), toInt64(-32767) <= toInt16(127), toInt64(-32767) > toInt16(127), toInt64(-32767) >= toInt16(127) , toUInt32(127) = toInt16(-32767), toUInt32(127) != toInt16(-32767), toUInt32(127) < toInt16(-32767), toUInt32(127) <= toInt16(-32767), toUInt32(127) > toInt16(-32767), toUInt32(127) >= toInt16(-32767), toInt16(-32767) = toUInt32(127), toInt16(-32767) != toUInt32(127), toInt16(-32767) < toUInt32(127), toInt16(-32767) <= toUInt32(127), toInt16(-32767) > toUInt32(127), toInt16(-32767) >= toUInt32(127) , toUInt32(127) = toInt32(-32767), toUInt32(127) != toInt32(-32767), toUInt32(127) < toInt32(-32767), toUInt32(127) <= toInt32(-32767), toUInt32(127) > toInt32(-32767), toUInt32(127) >= toInt32(-32767), toInt32(-32767) = toUInt32(127), toInt32(-32767) != toUInt32(127), toInt32(-32767) < toUInt32(127), toInt32(-32767) <= toUInt32(127), toInt32(-32767) > toUInt32(127), toInt32(-32767) >= toUInt32(127) , toUInt32(127) = toInt64(-32767), toUInt32(127) != toInt64(-32767), toUInt32(127) < toInt64(-32767), toUInt32(127) <= toInt64(-32767), toUInt32(127) > toInt64(-32767), toUInt32(127) >= toInt64(-32767), toInt64(-32767) = toUInt32(127), toInt64(-32767) != toUInt32(127), toInt64(-32767) < toUInt32(127), toInt64(-32767) <= toUInt32(127), toInt64(-32767) > toUInt32(127), toInt64(-32767) >= toUInt32(127) , toInt32(127) = toInt16(-32767), toInt32(127) != toInt16(-32767), toInt32(127) < toInt16(-32767), toInt32(127) <= toInt16(-32767), toInt32(127) > toInt16(-32767), toInt32(127) >= toInt16(-32767), toInt16(-32767) = toInt32(127), toInt16(-32767) != toInt32(127), toInt16(-32767) < toInt32(127), toInt16(-32767) <= toInt32(127), toInt16(-32767) > toInt32(127), toInt16(-32767) >= toInt32(127) , toInt32(127) = toInt32(-32767), toInt32(127) != toInt32(-32767), toInt32(127) < toInt32(-32767), toInt32(127) <= toInt32(-32767), toInt32(127) > toInt32(-32767), toInt32(127) >= toInt32(-32767), toInt32(-32767) = toInt32(127), toInt32(-32767) != toInt32(127), toInt32(-32767) < toInt32(127), toInt32(-32767) <= toInt32(127), toInt32(-32767) > toInt32(127), toInt32(-32767) >= toInt32(127) , toInt32(127) = toInt64(-32767), toInt32(127) != toInt64(-32767), toInt32(127) < toInt64(-32767), toInt32(127) <= toInt64(-32767), toInt32(127) > toInt64(-32767), toInt32(127) >= toInt64(-32767), toInt64(-32767) = toInt32(127), toInt64(-32767) != toInt32(127), toInt64(-32767) < toInt32(127), toInt64(-32767) <= toInt32(127), toInt64(-32767) > toInt32(127), toInt64(-32767) >= toInt32(127) , toUInt64(127) = toInt16(-32767), toUInt64(127) != toInt16(-32767), toUInt64(127) < toInt16(-32767), toUInt64(127) <= toInt16(-32767), toUInt64(127) > toInt16(-32767), toUInt64(127) >= toInt16(-32767), toInt16(-32767) = toUInt64(127), toInt16(-32767) != toUInt64(127), toInt16(-32767) < toUInt64(127), toInt16(-32767) <= toUInt64(127), toInt16(-32767) > toUInt64(127), toInt16(-32767) >= toUInt64(127) , toUInt64(127) = toInt32(-32767), toUInt64(127) != toInt32(-32767), toUInt64(127) < toInt32(-32767), toUInt64(127) <= toInt32(-32767), toUInt64(127) > toInt32(-32767), toUInt64(127) >= toInt32(-32767), toInt32(-32767) = toUInt64(127), toInt32(-32767) != toUInt64(127), toInt32(-32767) < toUInt64(127), toInt32(-32767) <= toUInt64(127), toInt32(-32767) > toUInt64(127), toInt32(-32767) >= toUInt64(127) , toUInt64(127) = toInt64(-32767), toUInt64(127) != toInt64(-32767), toUInt64(127) < toInt64(-32767), toUInt64(127) <= toInt64(-32767), toUInt64(127) > toInt64(-32767), toUInt64(127) >= toInt64(-32767), toInt64(-32767) = toUInt64(127), toInt64(-32767) != toUInt64(127), toInt64(-32767) < toUInt64(127), toInt64(-32767) <= toUInt64(127), toInt64(-32767) > toUInt64(127), toInt64(-32767) >= toUInt64(127) , toInt64(127) = toInt16(-32767), toInt64(127) != toInt16(-32767), toInt64(127) < toInt16(-32767), toInt64(127) <= toInt16(-32767), toInt64(127) > toInt16(-32767), toInt64(127) >= toInt16(-32767), toInt16(-32767) = toInt64(127), toInt16(-32767) != toInt64(127), toInt16(-32767) < toInt64(127), toInt16(-32767) <= toInt64(127), toInt16(-32767) > toInt64(127), toInt16(-32767) >= toInt64(127) , toInt64(127) = toInt32(-32767), toInt64(127) != toInt32(-32767), toInt64(127) < toInt32(-32767), toInt64(127) <= toInt32(-32767), toInt64(127) > toInt32(-32767), toInt64(127) >= toInt32(-32767), toInt32(-32767) = toInt64(127), toInt32(-32767) != toInt64(127), toInt32(-32767) < toInt64(127), toInt32(-32767) <= toInt64(127), toInt32(-32767) > toInt64(127), toInt32(-32767) >= toInt64(127) , toInt64(127) = toInt64(-32767), toInt64(127) != toInt64(-32767), toInt64(127) < toInt64(-32767), toInt64(127) <= toInt64(-32767), toInt64(127) > toInt64(-32767), toInt64(127) >= toInt64(-32767), toInt64(-32767) = toInt64(127), toInt64(-32767) != toInt64(127), toInt64(-32767) < toInt64(127), toInt64(-32767) <= toInt64(127), toInt64(-32767) > toInt64(127), toInt64(-32767) >= toInt64(127) 
SELECT * FROM view_00843;
CREATE TABLE test_4D362F3C786E476A5F746F2E23252530512C234B4777766C596F583C34457E2F7C34677659474C63(x UInt8) Engine=Memory;
DROP TABLE test_dist_02536;
CREATE INDEX idx_tab4_4 ON tab4 (col3 DESC,col4 DESC);
ALTER TABLE concurrent_alter_column ADD COLUMN c423 DOUBLE;
INSERT INTO r10 SELECT 65 % 10 = 10 ? 65 - 1 : 65
insert into data_01593 select * from numbers_mt(10);
INSERT INTO r1 SELECT 47 % 10 = 1 ? 47 - 1 : 47
SELECT dateDiff('minute', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1927-01-01 10:00:00', 3, 'UTC'));
CREATE TABLE test_01193_18429.table_2_802 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select [6, 0, 11, 0, 7, 0, 0, 0, 6, 1, 0, 3, 0, 0, 0, 0] = multiSearchAllPositions(materialize('hhkscgmqzmuwltmrhtxnnzsxl'), ['gmqzmuwltmrh', 'qtescwjubeqhurqoqfjauwxdoc', 'uwltmrh', 'qlhyfuspwdtecdbrmrqcnxghhlnbmzs', 'm', 'kcsuocwokvohnqonnfzmeiqtomehksehwc', 'hoxocyilgrxxoek', 'nisnlmbdczjsiw', 'gmqz', '', 'cqzz', 'k', 'utxctwtzelxmtioyqshxedecih', 'ifsmsljxzkyuigdtunwk', 'ojxvxwdosaqjhrnjwisss', 'dz']) from system.numbers limit 10;
CREATE TABLE test_01193_18429.table_8_845 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'Misc queries';
SELECT CASE WHEN 1 THEN [col2, col3] WHEN 1 THEN ['foo', col5] ELSE [col6, col7] END FROM multi_if_check;
SELECT -1, -32767, -1 = -32767, -1 != -32767, -1 < -32767, -1 <= -32767, -1 > -32767, -1 >= -32767, -32767 = -1, -32767 != -1, -32767 < -1, -32767 <= -1, -32767 > -1, -32767 >= -1 , toInt8(-1) = toInt16(-32767), toInt8(-1) != toInt16(-32767), toInt8(-1) < toInt16(-32767), toInt8(-1) <= toInt16(-32767), toInt8(-1) > toInt16(-32767), toInt8(-1) >= toInt16(-32767), toInt16(-32767) = toInt8(-1), toInt16(-32767) != toInt8(-1), toInt16(-32767) < toInt8(-1), toInt16(-32767) <= toInt8(-1), toInt16(-32767) > toInt8(-1), toInt16(-32767) >= toInt8(-1) , toInt8(-1) = toInt32(-32767), toInt8(-1) != toInt32(-32767), toInt8(-1) < toInt32(-32767), toInt8(-1) <= toInt32(-32767), toInt8(-1) > toInt32(-32767), toInt8(-1) >= toInt32(-32767), toInt32(-32767) = toInt8(-1), toInt32(-32767) != toInt8(-1), toInt32(-32767) < toInt8(-1), toInt32(-32767) <= toInt8(-1), toInt32(-32767) > toInt8(-1), toInt32(-32767) >= toInt8(-1) , toInt8(-1) = toInt64(-32767), toInt8(-1) != toInt64(-32767), toInt8(-1) < toInt64(-32767), toInt8(-1) <= toInt64(-32767), toInt8(-1) > toInt64(-32767), toInt8(-1) >= toInt64(-32767), toInt64(-32767) = toInt8(-1), toInt64(-32767) != toInt8(-1), toInt64(-32767) < toInt8(-1), toInt64(-32767) <= toInt8(-1), toInt64(-32767) > toInt8(-1), toInt64(-32767) >= toInt8(-1) , toInt16(-1) = toInt16(-32767), toInt16(-1) != toInt16(-32767), toInt16(-1) < toInt16(-32767), toInt16(-1) <= toInt16(-32767), toInt16(-1) > toInt16(-32767), toInt16(-1) >= toInt16(-32767), toInt16(-32767) = toInt16(-1), toInt16(-32767) != toInt16(-1), toInt16(-32767) < toInt16(-1), toInt16(-32767) <= toInt16(-1), toInt16(-32767) > toInt16(-1), toInt16(-32767) >= toInt16(-1) , toInt16(-1) = toInt32(-32767), toInt16(-1) != toInt32(-32767), toInt16(-1) < toInt32(-32767), toInt16(-1) <= toInt32(-32767), toInt16(-1) > toInt32(-32767), toInt16(-1) >= toInt32(-32767), toInt32(-32767) = toInt16(-1), toInt32(-32767) != toInt16(-1), toInt32(-32767) < toInt16(-1), toInt32(-32767) <= toInt16(-1), toInt32(-32767) > toInt16(-1), toInt32(-32767) >= toInt16(-1) , toInt16(-1) = toInt64(-32767), toInt16(-1) != toInt64(-32767), toInt16(-1) < toInt64(-32767), toInt16(-1) <= toInt64(-32767), toInt16(-1) > toInt64(-32767), toInt16(-1) >= toInt64(-32767), toInt64(-32767) = toInt16(-1), toInt64(-32767) != toInt16(-1), toInt64(-32767) < toInt16(-1), toInt64(-32767) <= toInt16(-1), toInt64(-32767) > toInt16(-1), toInt64(-32767) >= toInt16(-1) , toInt32(-1) = toInt16(-32767), toInt32(-1) != toInt16(-32767), toInt32(-1) < toInt16(-32767), toInt32(-1) <= toInt16(-32767), toInt32(-1) > toInt16(-32767), toInt32(-1) >= toInt16(-32767), toInt16(-32767) = toInt32(-1), toInt16(-32767) != toInt32(-1), toInt16(-32767) < toInt32(-1), toInt16(-32767) <= toInt32(-1), toInt16(-32767) > toInt32(-1), toInt16(-32767) >= toInt32(-1) , toInt32(-1) = toInt32(-32767), toInt32(-1) != toInt32(-32767), toInt32(-1) < toInt32(-32767), toInt32(-1) <= toInt32(-32767), toInt32(-1) > toInt32(-32767), toInt32(-1) >= toInt32(-32767), toInt32(-32767) = toInt32(-1), toInt32(-32767) != toInt32(-1), toInt32(-32767) < toInt32(-1), toInt32(-32767) <= toInt32(-1), toInt32(-32767) > toInt32(-1), toInt32(-32767) >= toInt32(-1) , toInt32(-1) = toInt64(-32767), toInt32(-1) != toInt64(-32767), toInt32(-1) < toInt64(-32767), toInt32(-1) <= toInt64(-32767), toInt32(-1) > toInt64(-32767), toInt32(-1) >= toInt64(-32767), toInt64(-32767) = toInt32(-1), toInt64(-32767) != toInt32(-1), toInt64(-32767) < toInt32(-1), toInt64(-32767) <= toInt32(-1), toInt64(-32767) > toInt32(-1), toInt64(-32767) >= toInt32(-1) , toInt64(-1) = toInt16(-32767), toInt64(-1) != toInt16(-32767), toInt64(-1) < toInt16(-32767), toInt64(-1) <= toInt16(-32767), toInt64(-1) > toInt16(-32767), toInt64(-1) >= toInt16(-32767), toInt16(-32767) = toInt64(-1), toInt16(-32767) != toInt64(-1), toInt16(-32767) < toInt64(-1), toInt16(-32767) <= toInt64(-1), toInt16(-32767) > toInt64(-1), toInt16(-32767) >= toInt64(-1) , toInt64(-1) = toInt32(-32767), toInt64(-1) != toInt32(-32767), toInt64(-1) < toInt32(-32767), toInt64(-1) <= toInt32(-32767), toInt64(-1) > toInt32(-32767), toInt64(-1) >= toInt32(-32767), toInt32(-32767) = toInt64(-1), toInt32(-32767) != toInt64(-1), toInt32(-32767) < toInt64(-1), toInt32(-32767) <= toInt64(-1), toInt32(-32767) > toInt64(-1), toInt32(-32767) >= toInt64(-1) , toInt64(-1) = toInt64(-32767), toInt64(-1) != toInt64(-32767), toInt64(-1) < toInt64(-32767), toInt64(-1) <= toInt64(-32767), toInt64(-1) > toInt64(-32767), toInt64(-1) >= toInt64(-32767), toInt64(-32767) = toInt64(-1), toInt64(-32767) != toInt64(-1), toInt64(-32767) < toInt64(-1), toInt64(-32767) <= toInt64(-1), toInt64(-32767) > toInt64(-1), toInt64(-32767) >= toInt64(-1) 
CREATE TABLE test_585964427B6C522F5C2643414C6D3663622F6C6F79562648374C2C4E26696226287E22226D4D3D67(x UInt8) Engine=Memory;
SET do_not_merge_across_partitions_select_final = 1;
select 'constants:', [tuple(NULL, []), tuple(toNullable(toFixedString('a',4)), []), tuple(toNullable(toFixedString('a',4)), [tuple(NULL, 'a')]), tuple(toNullable(toFixedString('a',4)), [tuple(NULL, 'a'), tuple(NULL, 'a')])];
select ' = 1:';
SELECT * FROM file('/var/lib/clickhouse/user_files/02661_read_from_archive_test_fv9w6ph7_zip_archive*.zip :: 02661_read_from_archive_test_fv9w6ph7_zip_data{2..3}.csv') ORDER BY 1, 2
select id, haystack, needle, like(haystack, needle) from non_const_needle order by id;
CREATE TABLE test_01193_18429.table_8_513 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_10_204 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO samples VALUES 
CREATE TABLE test_6032216F6738436C416C5534423C65496A6C33622539656C6270496078664B4951367E5C5F742B60(x UInt8) Engine=Memory;
INSERT INTO src_1 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 16
CREATE TABLE test_4C392D3F554D644624662E4336372D39427D5B5B496B4A2F716125523A5C5A5C342177507D493E44(x UInt8) Engine=Memory;
INSERT INTO table_for_reset_setting VALUES 
SELECT `date`, `value` FROM `test_lfm0vlkf`.`local_00952`
CREATE TABLE test_3B4667323B54485F412B3E642073715A5253232667563B3D3A45375A23203F324C5279782F5D654B(x UInt8) Engine=Memory;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (56 < 44 AND 8 > 0 ? 56 : 0)), throwIf(last != (56 < 44 AND 8 > 0 ? least(44 - 1, 56 + 8 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(44) LIMIT 56, 8);
CREATE TABLE test_5375614D5C225B297D2875256B69356B6D4D4D45246351606666303B593E734E7E393B4636456B6F(x UInt8) Engine=Memory;
SELECT addNanoseconds('2023-10-22', materialize(1)), addNanoseconds('2023-10-22 12:34:56.123', materialize(1));
INSERT INTO r2 SELECT 56 % 10 = 2 ? 56 - 1 : 56
CREATE TABLE test_434F62725C695F476F304A665227524C55363466513A2B6F6529606D5E45476B2B51462A474D6362(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_at0iixw6 
SELECT count() from tab_02473 PREWHERE b > 10 AND b <= 70 AND c > 23 AND c <= 53 AND d > 32 AND d <= 62 WHERE a == 0;
SELECT subtractQuarters('2023-10-22', materialize(1)), subtractQuarters('2023-10-22 12:34:56.123', materialize(1));
DROP TABLE IF EXISTS sample_table
CREATE TABLE test_01193_18429.table_6_18 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT CASE WHEN (number % 2) = 0 THEN toInt64(1) WHEN (number % 3) = 0 THEN toUInt16(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
CREATE INDEX idx_tab2_2 ON tab2 (col4,col1 DESC,col0);
SELECT multiIf((number % 2) = 0, toInt32(1), (number % 3) = 0, toInt16(2), toUInt8(3)) FROM system.numbers LIMIT 10;
INSERT INTO src_4 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 80
SELECT t.t.t as e, toTypeName(e) FROM ttta FULL JOIN tttb USING (t.t.t);
INSERT INTO test_01193_18429.table_10_916 VALUES 
INSERT INTO dst_3 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 70
select 1 = isValidUTF8('\x00\x7F') from system.numbers limit 10;
SELECT * FROM (SELECT 1 AS X UNION ALL SELECT 2 UNION ALL SELECT 3 AS X) ORDER BY X ASC;
INSERT INTO test_01193_18429.table_7_661 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat64(1), toFloat64(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
SELECT minIf(number, rand() % 2 == 3) from numbers(10) settings max_threads=1, max_block_size=5;
SELECT '2a02:6b8:1::/48' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'prefix', tuple(IPv6StringToNum('2a02:6b8:1::1')))
SELECT `UserID` FROM `test_c5zukzwt`.`users` WHERE `UserID` IN ((SELECT arrayJoin([1468013291393583084, 1321770221388956068])) AS `_subquery3822`)
SELECT avgWeighted(x, w) FROM values('x UInt64, w Int16', (0, 0), (1, 0));
create role AWD;
CREATE TABLE cte1(a Int64) ENGINE=Memory;
CREATE TABLE test_335958242E6A53424C623F4233795A607956372D7B6E25723269794E28682A233031246C566E6477(x UInt8) Engine=Memory;
select * from xp_d where i in (select * from numbers(2));
SELECT '::ffff:101.79.55.22/128' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'prefix', tuple(IPv6StringToNum('::ffff:101.79.55.22')))
SELECT * FROM system.tables WHERE database = currentDatabase() FORMAT Null
CREATE DICTIONARY hashed_dictionary ( id UInt64, array_value Array(Int64) DEFAULT [1,2,3] ) PRIMARY KEY id SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dictionary_array_source_table')) LIFETIME(MIN 1 MAX 1000) LAYOUT(HASHED());
SELECT sparkbar(128, 0, 9223372036854775806)(toUInt64(9223372036854775806), number % 65535) FROM numbers(100);
SELECT count() FROM hypothesis_test_test3 WHERE a < b FORMAT JSON
SELECT a.pk, b.pk, a.dt, b.dt, toTypeName(a.pk), toTypeName(b.pk), toTypeName(materialize(a.dt)), toTypeName(materialize(b.dt)) FROM (SELECT toUInt8(number) > 0 as pk, toUInt8(number) as dt FROM numbers(3)) a ASOF JOIN (SELECT 1 as pk, 2 as dt) b ON a.pk = b.pk AND a.dt >= b.dt ORDER BY a.dt;
INSERT INTO test_01193_18429.table_8_128 VALUES 
CREATE DATABASE IF NOT EXISTS test_o33ym28g 
insert into distinct_in_order select distinct * from distinct_cardinality_low where low > 0 settings optimize_distinct_in_order=1;
SELECT 'Running test stateless/01058_zlib_ng_level1_bug.sh from pid=1715' 
select 'Map';
SHOW CREATE PROFILE s1_01294, s2_01294, s3_01294, s4_01294;
CREATE TABLE test ENGINE=Memory AS SELECT number + 100 AS n, 0 AS test FROM numbers(50)
SELECT 'Running test stateless/02388_analyzer_recursive_lambda.sql from pid=1713' 
alter table many_mutations delete where y = 779 * 2 settings mutations_sync = 0;
SELECT dateDiff('quarter', toDate('2017-12-31'), toDate('2018-01-01'));
drop table rmt1 sync;
CREATE INDEX idx_tab3_1 ON tab3 (col1,col0 DESC,col4);
SELECT multiIf((number % 2) = 0, [toInt16(1), toInt16(2)], (number % 3) = 0, [toUInt32(2), toUInt32(3)], [toUInt16(3), toUInt16(3)]) FROM system.numbers LIMIT 10;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c3)) OR (c0 AND c2 AND c2 AND (NOT c6)) OR (c7 AND c4 AND (NOT c2) AND (NOT c1)) OR (c5 AND (NOT c0)) OR (c8 AND c3 AND (NOT c1) AND c1 AND (NOT c1)) OR (c1) OR (c4 AND (NOT c6)) SETTINGS convert_query_to_cnf = 0
SELECT 'Running test stateless/00716_allow_ddl.sql from pid=1713' 
SELECT uniq(-1);
CREATE TABLE test_01193_18429.table_1_362 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/00715_json_each_row_input_nested.sh from pid=1714' 
ATTACH TABLE t_sparse_reload;
CREATE TABLE test_2B382D5B644D2E5357414E5F5F403B2828225E39313A2763413E78667C387E76332237476E40433B(x UInt8) Engine=Memory;
SELECT multiIf((number % 2) = 0, toFloat64(1), (number % 3) = 0, toUInt32(2), toUInt16(3)) FROM system.numbers LIMIT 10;
SELECT cutIPv6(toFixedString(unhex('00000000000000000000FFFFC1FC110A'), 16), 6, 0);
SELECT toStartOfYear(toDateTime(1419800400), 'Asia/Tokyo');
ALTER TABLE detach_all_no_partition DETACH PARTITION ALL;
CREATE TABLE test_484839684D40703A2C4C4B69647B4F425F31304C3C55363233324C362B7D26422C79604144343177(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS orders;
SELECT multiIf((number % 2) = 0, [toUInt8(1), toUInt8(2)], (number % 3) = 0, [toInt16(2), toInt16(3)], [toFloat64(3), toFloat64(3)]) FROM system.numbers LIMIT 10;
SELECT materialize('aÃÂb') LIKE materialize('a_b');
SELECT has([(a, b), (c, d)], (a, b)) FROM (SELECT 1 AS a, 2 AS b, 3 AS c, 4 AS d);
INSERT INTO test_01193_18429.table_5_846 VALUES 
CREATE MATERIALIZED VIEW mv_null TO source_null AS SELECT * FROM source;
SELECT count() FROM system.processes WHERE query_id LIKE '01167_isolation_hermitage_test_bvbtk2qs_tx18%'
CREATE TABLE test_246E3F366D432E484D477333352D646C6649336C504259706F54264445353B7769716A5C78254C7D(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_w89al8ni 
SELECT 'Running test stateless/02048_alter_command_format.sh from pid=1713' 
INSERT INTO test_02908_r1_166 SELECT rand64() FROM numbers(5);
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c9)) OR ((NOT c3) AND c7 AND c1) OR (c8 AND (NOT c7) AND (NOT c8) AND c9 AND (NOT c7)) OR (c1 AND (NOT c5) AND (NOT c3) AND (NOT c1)) OR (c1 AND (NOT c3) AND (NOT c5) AND c7 AND (NOT c5)) OR (c9 AND c4 AND c0 AND c2 AND c8) OR (c5 AND (NOT c8) AND c8 AND (NOT c5) AND (NOT c3)) SETTINGS convert_query_to_cnf = 1
DROP TABLE `01746_merge_tree_mv`;
SELECT 'Running test stateless/01780_column_sparse_alter.sql from pid=1726' 
SELECT count() FROM t_async_inserts_flush;
SELECT DATE(NULL, NULL, NULL);
DROP TABLE customer;
SELECT '32' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff::')))
CREATE TABLE test_01193_18429.table_2_208 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO r7 SELECT 58
SHOW CREATE check_comments;
CREATE DATABASE IF NOT EXISTS test_qwrzijzb 
SELECT count() = 8193, sum(s) = 16384 FROM summing_00155
SELECT count() FROM date_test_table WHERE toInt32(val) == 1;
system reload dictionaries;
CREATE DATABASE IF NOT EXISTS test_mliry1ra 
INSERT INTO test_01193_18429.table_3_905 VALUES 
select arrayRotateLeft([1,2,3,4,5], -2);
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt16(1), toUInt16(2)] WHEN (number % 3) = 0 THEN [toFloat32(2), toFloat32(3)] ELSE [toFloat32(3), toFloat32(3)] END FROM system.numbers LIMIT 10;
DETACH TABLE mt;
SELECT 17;
select alias_col from t_00712_2 sample 1 / 2 where date = '2018-01-01' and counter = 1 and sampler = 1;
SELECT 'Running test stateless/02354_numeric_literals_with_underscores.sql from pid=1726' 
DROP TABLE t_tuple_element;
DROP DATABASE IF EXISTS test_d47pyr57 
CREATE DATABASE IF NOT EXISTS test_46l8n0xd 
alter table data_01900_2 update s = 'bar_28' where 1;
SELECT 'R1, R2, R3 + additional_result_filter and PREWHERE: (x == 1) OR (x == 2) OR (x == 3) AND (x < 3) AND (x > 1)';
INSERT INTO src_7 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 85
SELECT * FROM replicated_report WHERE product = 'IU';
CREATE TABLE test_01193_18429.table_2_919 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT x, txt FROM 02540_date WHERE txt == 'toUInt16(65535)';
CREATE TABLE test_01193_18429.table_7_615 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO compression_codec_multiple_with_key SELECT toDate('2018-10-12'), number, toString(number) FROM system.numbers LIMIT 1000;
SELECT 'Running test stateless/00900_long_parquet.sh from pid=1720' 
INSERT INTO test_01193_18429.table_3_772 VALUES 
DROP TABLE rocksdb_with_filter;
INSERT INTO table_map SELECT number, map('key1', number, 'key2', number * 2) FROM numbers(1111, 3);
INSERT INTO test_01193_18429.table_4_688 VALUES 
select 0 = isValidUTF8('\xe2\x82\x28') from system.numbers limit 10;
SELECT a FROM ps WHERE t = _CAST((10, 'Test'), 'Tuple(Int16, String)')
select toValidUTF8('\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xF1\x80\x80') from system.numbers limit 10;
CREATE TABLE test_table (message String) ENGINE=TinyLog;
WITH concat('1,2,"[1,2,3]",','"[[\'abc\'], [], [\'d\', \'e\']]"') AS format_value SELECT c1, c2, c3, c4 FROM format('CSV', format_value);
CREATE TABLE test_02908_r3_107 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_107', 'r3') ORDER BY tuple()
SELECT count() == 33335 FROM null_in_subquery WHERE i in (SELECT i FROM null_in_subquery WHERE dt = 0);
CREATE TABLE test_7E762E6537752F54604B3C4F23536B7A313858676A2E7A605B5A227D20626353422B4F543A624D6A(x UInt8) Engine=Memory;
SELECT count() FROM lc_nullable WHERE has(i8, 100);
ALTER TABLE modify_sample MODIFY SAMPLE BY x;
insert into test_tuple values 
CREATE TABLE buffer_00763_1 (s String) ENGINE = Buffer(test_pexbz5lj, mt_00763_1, 1, 1, 1, 1, 1, 1, 1)
SELECT hex(xxHash32('ABC')) = upper('80712ed5');
CREATE TABLE test_56266A6B4F6E2A45532C6234563B5E3E7B6E575060765F2D7C653658635E537E225B447E5E306E2D(x UInt8) Engine=Memory;
select * from dist_01223 order by key limit 1 by key;
 select x, y from ( select range(number) as x, number + 1 as y from numbers(3) ) array join x where y != 2 and x != 0 order by x, y
CREATE TABLE test_01193_18429.table_1_626 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 02126_function(1);
SELECT '-- Regression introduced in https://github.com/ClickHouse/ClickHouse/pull/54184';
INSERT INTO values_floats FORMAT Values
DROP DATABASE IF EXISTS test_f6mzmvai 
DROP DATABASE IF EXISTS test_lyjzslqb 
CREATE TABLE test_32422939246820635F4748203961307B2E4B584A3D2C7B212729707C4037256A4B4F5F62363B316C(x UInt8) Engine=Memory;
select hasSubsequence('garbage', 'rga');
SELECT * FROM file('/var/lib/clickhouse/user_files/02661_read_from_archive_test_y9jm4uu0_7z_archive3.7z :: 02661_read_from_archive_test_y9jm4uu0_7z_data*.csv') ORDER BY 1, 2
SELECT * FROM (SELECT * FROM test_fetch ORDER BY a OFFSET 1 ROW FETCH FIRST 3 ROWS WITH TIES) ORDER BY a, b;
DROP TABLE IF EXISTS set_index_not;
CREATE TABLE test_02313 (id Int32, val String) ENGINE = MergeTree() ORDER BY tuple() SETTINGS storage_policy = 'local_cache'
INSERT INTO test_01193_18429.table_8_472 VALUES 
DESC file('/var/lib/clickhouse/user_files/02661_read_from_archive_test_vdj32cgq_tar_archive{1,2}.tar :: 02661_read_from_archive_test_vdj32cgq_tar_data{1,3}.csv')
CREATE TABLE test_635C5D4D2B6F5B247745564D20793B3D4D7B3D2C3F4D614F3B7E42312B4E493A42504C506B56293C(x UInt8) Engine=Memory;
CREATE TABLE 02661_archive_table Engine=File('CSV', '/var/lib/clickhouse/user_files/02661_read_from_archive_test_vdj32cgq_tar_archive*.tar :: *.csv')
CREATE DATABASE IF NOT EXISTS test_6u8jno8m 
SELECT count() FROM system.zookeeper WHERE path = '/clickhouse/test/'||currentDatabase()||'/01586_replicated_mutations_empty_partitions/'||getMacro('shard')||'/block_numbers';
show create dist_background_insert_split_batch_on_failure;
SHOW CREATE POLICY ON db1_02703.*;
CREATE TABLE test_01193_18429.table_8_681 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO multi_if_check(col1) VALUES 
SELECT throwIf((SELECT (count(), sum(n)) FROM merge(currentDatabase(), '') WHERE type=4) != (toUInt8(3/2 + 1), (select sum(number) from numbers(1, 3) where number % 2 or number=3))) FORMAT Null;
DROP TABLE IF EMPTY data_02716_1;
CREATE TABLE test_485D2467354C4969542D6522307C4F776C2B5F3834286E766837587264382C4A7169637C452B4A43(x UInt8) Engine=Memory;
CREATE DICTIONARY 02183_polygon_dictionary ( key Array(Array(Array(Tuple(Float64, Float64)))), value_date Date, value_date_32 Date32, value_date_time DateTime, value_date_time_64 DateTime64 ) PRIMARY KEY key SOURCE(CLICKHOUSE(TABLE '02183_polygon_dictionary_source_table')) LAYOUT(POLYGON(store_polygon_key_column 1)) LIFETIME(0);
CREATE TABLE test_01193_18429.table_1_859 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE rmt2 (`n` int) ENGINE = ReplicatedMergeTree('/test/{database}/02438/', '2') ORDER BY tuple() SETTINGS index_granularity = 27128, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.18236669898033142, replace_long_file_name_to_hash = true, max_file_name_length = 88, merge_max_block_size = 601, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 409512, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 3849354, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 54496, primary_key_compress_block_size = 71988
SELECT dateTrunc('month', toDateTime64('2022-03-01 12:55:55', 2));
CREATE DATABASE IF NOT EXISTS test_i4wgg5yb 
SELECT count() FROM t_cnf_fuzz WHERE (c9 AND (NOT c5)) OR ((NOT c2)) OR (c6 AND (NOT c3) AND (NOT c9)) OR ((NOT c0) AND (NOT c4) AND c3) OR ((NOT c2) AND c0) OR (c5 AND c1 AND c7) OR ((NOT c2)) OR ((NOT c7) AND (NOT c6) AND (NOT c0) AND c8) OR ((NOT c3) AND c6 AND (NOT c5) AND (NOT c2)) SETTINGS convert_query_to_cnf = 0
SELECT count() == 500 AND count(a) == 500 AND sum(a) == 1499 * 500 / 2 FROM ( SELECT a, b, val FROM t1 INNER JOIN t2 ON t1.a = t2.key OR t1.b = t2.key);
select if(materialize(0), materialize(toLowCardinality('a')), NULL);
INSERT INTO test_01193_18429.table_10_492 VALUES 
DROP TABLE model;
INSERT INTO test_01193_18429.table_10_660 VALUES 
SYSTEM STOP MERGES t_read_in_order;
DROP DATABASE IF EXISTS test_0ufoslco 
CREATE TABLE test_01193_18429.table_2_766 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select accurateCastOrDefault('xfalse', 'Bool');
SELECT DISTINCT arraySort(groupArrayIf(n, type=1)) = arraySort(groupArrayIf(n, type=2)) FROM merge(currentDatabase(), '') GROUP BY _table ORDER BY _table
CREATE TABLE test_02908_r3_175 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_175', 'r3') ORDER BY tuple()
INSERT INTO test select number, number % 3, number % 5, number % 10, number % 13, number % 15, number % 17, number % 18, number % 22, number % 25 from numbers(1000000)
SELECT dictGetOrDefault('01684_database_for_cache_dictionary.cache_dictionary_simple_key_simple_attributes', 'value_first', number, toString('default')) as value_first, dictGetOrDefault('01684_database_for_cache_dictionary.cache_dictionary_simple_key_simple_attributes', 'value_second', number, toString('default')) as value_second FROM system.numbers LIMIT 3;
CREATE DATABASE IF NOT EXISTS test_xw7pt05u 
SELECT '49' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:8000::')))
INSERT INTO src_13 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 4
SELECT 17,'Hello',bin(bitShiftLeft('Hello', 17));
CREATE TABLE test_5A652B3F3C3372732470403B5A61445E5E2F6950393F3E7E5D276D56703C3E692A394C597D563B62(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_pt0g4rmi 
CREATE INDEX idx_tab4_4 ON tab4 (col0,col1,col3 DESC);
CREATE TABLE test_01193_18429.table_7_893 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT * FROM replicated_truncate2 ORDER BY k;
SELECT soundex(NULL);
SELECT * FROM (SELECT item_id FROM t) l LEFT JOIN (SELECT item_id FROM t GROUP BY item_id WITH TOTALS ORDER BY item_id ) r ON l.item_id = r.item_id;
CREATE DATABASE IF NOT EXISTS test_wbebge0s 
INSERT INTO test_01193_18429.table_7_519 VALUES 
SELECT '' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('::0')))
INSERT INTO pk_func SELECT '2020-05-07 01:00:00', number FROM numbers(100000);
INSERT INTO test_01193_18429.table_3_77 VALUES 
CREATE TABLE t16 (`a` UInt32, `b` UInt32) ENGINE = MergeTree PARTITION BY a % 16 ORDER BY a SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 77, merge_max_block_size = 5221, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 76652, primary_key_compress_block_size = 22585
INSERT INTO test_01193_18429.table_9_398 VALUES 
CREATE TABLE test_7246322476236A7E2C67533848217A5D75652E2B497B445C4C6E3A64485B2E4A6131234541605122(x UInt8) Engine=Memory;
CREATE TABLE test_4E71682E6E514C27522B37477B5A784D21326B5F6A5858744D4B2D4C472A283222585D535B48506F(x UInt8) Engine=Memory;
detach database rdb_test_5mr53c62_3
CREATE DATABASE IF NOT EXISTS test_t0kh7uas 
SELECT a, arrayEnumerateUniqRanked(a) FROM ( SELECT * FROM ( SELECT [[],[1],[]] AS a UNION ALL SELECT [[1]] AS a ) ORDER BY a ASC );
select sipHash128Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43)) == sipHash128(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43));
select largestTriangleThreeBuckets(5)(x, y) from largestTriangleThreeBucketsTestDateTime64Float64;
SELECT count(notNullIn(NULL, []));
EXPLAIN QUERY TREE SELECT i FROM index_append_test_test WHERE a >= 0 SETTINGS convert_query_to_cnf = 1 , optimize_using_constraints = 1 , optimize_move_to_prewhere = 1 , optimize_substitute_columns = 1 , optimize_append_index = 1, allow_experimental_analyzer = 1
SELECT 4, 15, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (4 < 13 AND 15 > 0 ? 4 : 0)), throwIf(last != (4 < 13 AND 15 > 0 ? least(13 - 1, 4 + 15 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 4, 15);
SELECT 255, -127, 255 = -127, 255 != -127, 255 < -127, 255 <= -127, 255 > -127, 255 >= -127, -127 = 255, -127 != 255, -127 < 255, -127 <= 255, -127 > 255, -127 >= 255 , toUInt8(255) = toInt8(-127), toUInt8(255) != toInt8(-127), toUInt8(255) < toInt8(-127), toUInt8(255) <= toInt8(-127), toUInt8(255) > toInt8(-127), toUInt8(255) >= toInt8(-127), toInt8(-127) = toUInt8(255), toInt8(-127) != toUInt8(255), toInt8(-127) < toUInt8(255), toInt8(-127) <= toUInt8(255), toInt8(-127) > toUInt8(255), toInt8(-127) >= toUInt8(255) , toUInt8(255) = toInt16(-127), toUInt8(255) != toInt16(-127), toUInt8(255) < toInt16(-127), toUInt8(255) <= toInt16(-127), toUInt8(255) > toInt16(-127), toUInt8(255) >= toInt16(-127), toInt16(-127) = toUInt8(255), toInt16(-127) != toUInt8(255), toInt16(-127) < toUInt8(255), toInt16(-127) <= toUInt8(255), toInt16(-127) > toUInt8(255), toInt16(-127) >= toUInt8(255) , toUInt8(255) = toInt32(-127), toUInt8(255) != toInt32(-127), toUInt8(255) < toInt32(-127), toUInt8(255) <= toInt32(-127), toUInt8(255) > toInt32(-127), toUInt8(255) >= toInt32(-127), toInt32(-127) = toUInt8(255), toInt32(-127) != toUInt8(255), toInt32(-127) < toUInt8(255), toInt32(-127) <= toUInt8(255), toInt32(-127) > toUInt8(255), toInt32(-127) >= toUInt8(255) , toUInt8(255) = toInt64(-127), toUInt8(255) != toInt64(-127), toUInt8(255) < toInt64(-127), toUInt8(255) <= toInt64(-127), toUInt8(255) > toInt64(-127), toUInt8(255) >= toInt64(-127), toInt64(-127) = toUInt8(255), toInt64(-127) != toUInt8(255), toInt64(-127) < toUInt8(255), toInt64(-127) <= toUInt8(255), toInt64(-127) > toUInt8(255), toInt64(-127) >= toUInt8(255) , toUInt16(255) = toInt8(-127), toUInt16(255) != toInt8(-127), toUInt16(255) < toInt8(-127), toUInt16(255) <= toInt8(-127), toUInt16(255) > toInt8(-127), toUInt16(255) >= toInt8(-127), toInt8(-127) = toUInt16(255), toInt8(-127) != toUInt16(255), toInt8(-127) < toUInt16(255), toInt8(-127) <= toUInt16(255), toInt8(-127) > toUInt16(255), toInt8(-127) >= toUInt16(255) , toUInt16(255) = toInt16(-127), toUInt16(255) != toInt16(-127), toUInt16(255) < toInt16(-127), toUInt16(255) <= toInt16(-127), toUInt16(255) > toInt16(-127), toUInt16(255) >= toInt16(-127), toInt16(-127) = toUInt16(255), toInt16(-127) != toUInt16(255), toInt16(-127) < toUInt16(255), toInt16(-127) <= toUInt16(255), toInt16(-127) > toUInt16(255), toInt16(-127) >= toUInt16(255) , toUInt16(255) = toInt32(-127), toUInt16(255) != toInt32(-127), toUInt16(255) < toInt32(-127), toUInt16(255) <= toInt32(-127), toUInt16(255) > toInt32(-127), toUInt16(255) >= toInt32(-127), toInt32(-127) = toUInt16(255), toInt32(-127) != toUInt16(255), toInt32(-127) < toUInt16(255), toInt32(-127) <= toUInt16(255), toInt32(-127) > toUInt16(255), toInt32(-127) >= toUInt16(255) , toUInt16(255) = toInt64(-127), toUInt16(255) != toInt64(-127), toUInt16(255) < toInt64(-127), toUInt16(255) <= toInt64(-127), toUInt16(255) > toInt64(-127), toUInt16(255) >= toInt64(-127), toInt64(-127) = toUInt16(255), toInt64(-127) != toUInt16(255), toInt64(-127) < toUInt16(255), toInt64(-127) <= toUInt16(255), toInt64(-127) > toUInt16(255), toInt64(-127) >= toUInt16(255) , toInt16(255) = toInt8(-127), toInt16(255) != toInt8(-127), toInt16(255) < toInt8(-127), toInt16(255) <= toInt8(-127), toInt16(255) > toInt8(-127), toInt16(255) >= toInt8(-127), toInt8(-127) = toInt16(255), toInt8(-127) != toInt16(255), toInt8(-127) < toInt16(255), toInt8(-127) <= toInt16(255), toInt8(-127) > toInt16(255), toInt8(-127) >= toInt16(255) , toInt16(255) = toInt16(-127), toInt16(255) != toInt16(-127), toInt16(255) < toInt16(-127), toInt16(255) <= toInt16(-127), toInt16(255) > toInt16(-127), toInt16(255) >= toInt16(-127), toInt16(-127) = toInt16(255), toInt16(-127) != toInt16(255), toInt16(-127) < toInt16(255), toInt16(-127) <= toInt16(255), toInt16(-127) > toInt16(255), toInt16(-127) >= toInt16(255) , toInt16(255) = toInt32(-127), toInt16(255) != toInt32(-127), toInt16(255) < toInt32(-127), toInt16(255) <= toInt32(-127), toInt16(255) > toInt32(-127), toInt16(255) >= toInt32(-127), toInt32(-127) = toInt16(255), toInt32(-127) != toInt16(255), toInt32(-127) < toInt16(255), toInt32(-127) <= toInt16(255), toInt32(-127) > toInt16(255), toInt32(-127) >= toInt16(255) , toInt16(255) = toInt64(-127), toInt16(255) != toInt64(-127), toInt16(255) < toInt64(-127), toInt16(255) <= toInt64(-127), toInt16(255) > toInt64(-127), toInt16(255) >= toInt64(-127), toInt64(-127) = toInt16(255), toInt64(-127) != toInt16(255), toInt64(-127) < toInt16(255), toInt64(-127) <= toInt16(255), toInt64(-127) > toInt16(255), toInt64(-127) >= toInt16(255) , toUInt32(255) = toInt8(-127), toUInt32(255) != toInt8(-127), toUInt32(255) < toInt8(-127), toUInt32(255) <= toInt8(-127), toUInt32(255) > toInt8(-127), toUInt32(255) >= toInt8(-127), toInt8(-127) = toUInt32(255), toInt8(-127) != toUInt32(255), toInt8(-127) < toUInt32(255), toInt8(-127) <= toUInt32(255), toInt8(-127) > toUInt32(255), toInt8(-127) >= toUInt32(255) , toUInt32(255) = toInt16(-127), toUInt32(255) != toInt16(-127), toUInt32(255) < toInt16(-127), toUInt32(255) <= toInt16(-127), toUInt32(255) > toInt16(-127), toUInt32(255) >= toInt16(-127), toInt16(-127) = toUInt32(255), toInt16(-127) != toUInt32(255), toInt16(-127) < toUInt32(255), toInt16(-127) <= toUInt32(255), toInt16(-127) > toUInt32(255), toInt16(-127) >= toUInt32(255) , toUInt32(255) = toInt32(-127), toUInt32(255) != toInt32(-127), toUInt32(255) < toInt32(-127), toUInt32(255) <= toInt32(-127), toUInt32(255) > toInt32(-127), toUInt32(255) >= toInt32(-127), toInt32(-127) = toUInt32(255), toInt32(-127) != toUInt32(255), toInt32(-127) < toUInt32(255), toInt32(-127) <= toUInt32(255), toInt32(-127) > toUInt32(255), toInt32(-127) >= toUInt32(255) , toUInt32(255) = toInt64(-127), toUInt32(255) != toInt64(-127), toUInt32(255) < toInt64(-127), toUInt32(255) <= toInt64(-127), toUInt32(255) > toInt64(-127), toUInt32(255) >= toInt64(-127), toInt64(-127) = toUInt32(255), toInt64(-127) != toUInt32(255), toInt64(-127) < toUInt32(255), toInt64(-127) <= toUInt32(255), toInt64(-127) > toUInt32(255), toInt64(-127) >= toUInt32(255) , toInt32(255) = toInt8(-127), toInt32(255) != toInt8(-127), toInt32(255) < toInt8(-127), toInt32(255) <= toInt8(-127), toInt32(255) > toInt8(-127), toInt32(255) >= toInt8(-127), toInt8(-127) = toInt32(255), toInt8(-127) != toInt32(255), toInt8(-127) < toInt32(255), toInt8(-127) <= toInt32(255), toInt8(-127) > toInt32(255), toInt8(-127) >= toInt32(255) , toInt32(255) = toInt16(-127), toInt32(255) != toInt16(-127), toInt32(255) < toInt16(-127), toInt32(255) <= toInt16(-127), toInt32(255) > toInt16(-127), toInt32(255) >= toInt16(-127), toInt16(-127) = toInt32(255), toInt16(-127) != toInt32(255), toInt16(-127) < toInt32(255), toInt16(-127) <= toInt32(255), toInt16(-127) > toInt32(255), toInt16(-127) >= toInt32(255) , toInt32(255) = toInt32(-127), toInt32(255) != toInt32(-127), toInt32(255) < toInt32(-127), toInt32(255) <= toInt32(-127), toInt32(255) > toInt32(-127), toInt32(255) >= toInt32(-127), toInt32(-127) = toInt32(255), toInt32(-127) != toInt32(255), toInt32(-127) < toInt32(255), toInt32(-127) <= toInt32(255), toInt32(-127) > toInt32(255), toInt32(-127) >= toInt32(255) , toInt32(255) = toInt64(-127), toInt32(255) != toInt64(-127), toInt32(255) < toInt64(-127), toInt32(255) <= toInt64(-127), toInt32(255) > toInt64(-127), toInt32(255) >= toInt64(-127), toInt64(-127) = toInt32(255), toInt64(-127) != toInt32(255), toInt64(-127) < toInt32(255), toInt64(-127) <= toInt32(255), toInt64(-127) > toInt32(255), toInt64(-127) >= toInt32(255) , toUInt64(255) = toInt8(-127), toUInt64(255) != toInt8(-127), toUInt64(255) < toInt8(-127), toUInt64(255) <= toInt8(-127), toUInt64(255) > toInt8(-127), toUInt64(255) >= toInt8(-127), toInt8(-127) = toUInt64(255), toInt8(-127) != toUInt64(255), toInt8(-127) < toUInt64(255), toInt8(-127) <= toUInt64(255), toInt8(-127) > toUInt64(255), toInt8(-127) >= toUInt64(255) , toUInt64(255) = toInt16(-127), toUInt64(255) != toInt16(-127), toUInt64(255) < toInt16(-127), toUInt64(255) <= toInt16(-127), toUInt64(255) > toInt16(-127), toUInt64(255) >= toInt16(-127), toInt16(-127) = toUInt64(255), toInt16(-127) != toUInt64(255), toInt16(-127) < toUInt64(255), toInt16(-127) <= toUInt64(255), toInt16(-127) > toUInt64(255), toInt16(-127) >= toUInt64(255) , toUInt64(255) = toInt32(-127), toUInt64(255) != toInt32(-127), toUInt64(255) < toInt32(-127), toUInt64(255) <= toInt32(-127), toUInt64(255) > toInt32(-127), toUInt64(255) >= toInt32(-127), toInt32(-127) = toUInt64(255), toInt32(-127) != toUInt64(255), toInt32(-127) < toUInt64(255), toInt32(-127) <= toUInt64(255), toInt32(-127) > toUInt64(255), toInt32(-127) >= toUInt64(255) , toUInt64(255) = toInt64(-127), toUInt64(255) != toInt64(-127), toUInt64(255) < toInt64(-127), toUInt64(255) <= toInt64(-127), toUInt64(255) > toInt64(-127), toUInt64(255) >= toInt64(-127), toInt64(-127) = toUInt64(255), toInt64(-127) != toUInt64(255), toInt64(-127) < toUInt64(255), toInt64(-127) <= toUInt64(255), toInt64(-127) > toUInt64(255), toInt64(-127) >= toUInt64(255) , toInt64(255) = toInt8(-127), toInt64(255) != toInt8(-127), toInt64(255) < toInt8(-127), toInt64(255) <= toInt8(-127), toInt64(255) > toInt8(-127), toInt64(255) >= toInt8(-127), toInt8(-127) = toInt64(255), toInt8(-127) != toInt64(255), toInt8(-127) < toInt64(255), toInt8(-127) <= toInt64(255), toInt8(-127) > toInt64(255), toInt8(-127) >= toInt64(255) , toInt64(255) = toInt16(-127), toInt64(255) != toInt16(-127), toInt64(255) < toInt16(-127), toInt64(255) <= toInt16(-127), toInt64(255) > toInt16(-127), toInt64(255) >= toInt16(-127), toInt16(-127) = toInt64(255), toInt16(-127) != toInt64(255), toInt16(-127) < toInt64(255), toInt16(-127) <= toInt64(255), toInt16(-127) > toInt64(255), toInt16(-127) >= toInt64(255) , toInt64(255) = toInt32(-127), toInt64(255) != toInt32(-127), toInt64(255) < toInt32(-127), toInt64(255) <= toInt32(-127), toInt64(255) > toInt32(-127), toInt64(255) >= toInt32(-127), toInt32(-127) = toInt64(255), toInt32(-127) != toInt64(255), toInt32(-127) < toInt64(255), toInt32(-127) <= toInt64(255), toInt32(-127) > toInt64(255), toInt32(-127) >= toInt64(255) , toInt64(255) = toInt64(-127), toInt64(255) != toInt64(-127), toInt64(255) < toInt64(-127), toInt64(255) <= toInt64(-127), toInt64(255) > toInt64(-127), toInt64(255) >= toInt64(-127), toInt64(-127) = toInt64(255), toInt64(-127) != toInt64(255), toInt64(-127) < toInt64(255), toInt64(-127) <= toInt64(255), toInt64(-127) > toInt64(255), toInt64(-127) >= toInt64(255) 
select finalizeAggregation(uniqThetaUnion(a, b)), finalizeAggregation(a), finalizeAggregation(b) from (select arrayReduce('uniqThetaState',[1,2]) as a, arrayReduce('uniqThetaState',[2,3,4]) as b );
create table data_02344 (key Int) engine=Null;
select 'single argument';
select * from s3Cluster('test_cluster_two_shards_localhost', 'http://localhost:11111/test/{a,b,c}.tsv', 'TSV', 'c1 UInt64, c2 UInt64, c3 UInt64') ORDER BY c1, c2, c3;
INSERT INTO test_01193_18429.table_10_208 VALUES 
EXPLAIN SYNTAX select uniq(concatAssumeInjective('x', 'y')) from numbers(10);
DROP TABLE IF EXISTS t_json;
INSERT INTO dst_10 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 41
INSERT INTO multi_if_check(col1, col2, col3, col4, col5, col6, col7) VALUES
INSERT INTO totimezone_op_mono VALUES 
INSERT INTO src_5 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 88
CREATE TABLE test_4D503B5C572529283850512D5E5156214B555F4A647323476C752C6C452B5E586E314E46372E686F(x UInt8) Engine=Memory;
EXPLAIN PIPELINE SELECT a, b FROM t_fixed_prefix WHERE a = 1 AND b = 1 ORDER BY a, b SETTINGS optimize_read_in_order = 1
drop table data_02263
DROP DATABASE IF EXISTS test_vhbxr3v7 
INSERT INTO test_01193_18429.table_2_598 VALUES 
CREATE TABLE test_01193_18429.table_7_355 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_572F226A294E51635A756A694A5D59373F6E3E4F49577562362B627779543A7B2C69353D61452841(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_4x2i086x 
DROP TABLE contributors
INSERT INTO right SELECT number, toString(number) FROM numbers(261);
DROP DATABASE IF EXISTS test_p9as4n7o 
DROP TABLE IF EXISTS `01746_buffer_mv`;
INSERT INTO test_01193_18429.table_8_705 VALUES 
SELECT 'Running test stateless/02125_recursive_sql_user_defined_functions.sql from pid=1705' 
select match('Too late', '(?i)to+ late');
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (19 < 15 AND 3 > 0 ? 19 : 0)), throwIf(last != (19 < 15 AND 3 > 0 ? least(15 - 1, 19 + 3 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(15) LIMIT 19, 3);
SELECT [[(1, 'Hello'), (2, 'World')], [(3, 'Goodbye')]] AS nested, nested.1, nested.2;
select [0, 7, 0, 0, 0, 0, 7, 6, 0, 16, 12, 12, 15, 0] = multiSearchAllPositionsCaseInsensitiveUTF8(materialize('ÃÂ¾ÃÂÃÂ¸ÃÂ¾ÃÂ³ÃÂÃÂÃÂºÃÂ»ÃÂ¨ÃÂÃÂ¡ÃÂÃÂÃÂ±ÃÂ ÃÂ ÃÂ±ÃÂÃÂ±ÃÂÃÂÃÂÃÂÃÂÃÂÃÂ¹ÃÂ¾ÃÂ´'), ['ÃÂ¸ÃÂÃÂ¼ÃÂÃÂÃÂµÃÂ¹ÃÂÃÂÃÂÃÂºÃÂ»ÃÂÃÂ¥ÃÂÃÂÃÂÃÂ±ÃÂ°ÃÂÃÂ´ÃÂ¨', 'ÃÂ¤ÃÂÃÂ»ÃÂ¨ÃÂ¼ÃÂÃÂÃÂÃÂÃÂ¥ÃÂ ÃÂ±ÃÂÃÂ±ÃÂÃÂµÃÂÃÂÃÂÃÂÃÂÃÂÃÂ´', 'ÃÂ°ÃÂÃÂÃÂ¶ÃÂÃÂ¡ÃÂ¢ÃÂ½ÃÂº', 'ÃÂÃÂ±ÃÂ¢ÃÂÃÂÃÂÃÂ¶ÃÂ¾ÃÂ¾ÃÂÃÂÃÂ·ÃÂÃÂ£', 'ÃÂ¾ÃÂÃÂÃÂ©ÃÂÃÂÃÂ ÃÂ¡ÃÂ£ÃÂ³ÃÂ°ÃÂÃÂÃÂ ÃÂÃÂÃÂ»ÃÂ¼ÃÂÃÂ ÃÂÃÂÃÂÃÂ¾', 'ÃÂ°ÃÂÃÂ±ÃÂºÃÂ¸ÃÂ¦ÃÂ°ÃÂÃÂÃÂ±ÃÂÃÂ ÃÂÃÂÃÂÃÂ½ÃÂ¼ÃÂ¤ÃÂÃÂºÃÂ¹ÃÂ ÃÂ²ÃÂ ÃÂ', 'ÃÂ¤ÃÂÃÂ»ÃÂ¨ÃÂ¼ÃÂ¡ÃÂÃÂÃÂ±ÃÂ¥ÃÂ ÃÂ±ÃÂ¼', 'ÃÂ¡ÃÂÃÂºÃÂ»ÃÂ¨', 'ÃÂµÃÂÃÂ¹ÃÂ¸ÃÂ»ÃÂºÃÂ£ÃÂ»ÃÂ¸ÃÂÃÂÃÂ¥ÃÂÃÂ¨ÃÂÃÂ ÃÂÃÂÃÂÃÂ£', 'ÃÂ ÃÂÃÂ', 'ÃÂ¡ÃÂÃÂÃÂ±ÃÂ¥ÃÂÃÂ±ÃÂÃÂÃÂ ', 'ÃÂ¡ÃÂ´ÃÂÃÂ±ÃÂ ÃÂ ÃÂ', 'ÃÂ±ÃÂ ÃÂÃÂÃÂÃÂÃÂ ÃÂÃÂÃÂÃÂ¹ÃÂ·', 'ÃÂÃÂÃÂ±']) from system.numbers limit 10;
CREATE TABLE t_uncompressed_cache (`id` UInt32, `n` UInt32) ENGINE = MergeTree ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0, min_compress_block_size = 12, max_compress_block_size = 12, index_granularity = 4, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 44, merge_max_block_size = 20025, prefer_fetch_merged_part_size_threshold = 6603766880, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 13949222, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 68309, primary_key_compress_block_size = 93493
INSERT INTO storage_join_race SELECT number AS x, sleepEachRow(0.1) + number AS y FROM numbers (20 * 10) SETTINGS function_sleep_max_microseconds_per_block = 100000000, max_block_size = 10;
CREATE DATABASE IF NOT EXISTS test_w7ksp3x2 
INSERT INTO r1 SELECT 86 % 10 = 1 ? 86 - 1 : 86
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), N < DT64 as r FORMAT CSV;
CREATE TABLE test_01193_18429.table_4_435 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'L';
DROP DATABASE IF EXISTS test_zjbndmkb 
SELECT 'Running test stateless/00500_point_in_polygon_nan.sql from pid=1724' 
SELECT 'type;toStartOfTenMinutes;toDateTime64;true', toTypeName(toStartOfTenMinutes(toDateTime64('1920-02-02 10:20:30', 3, 'UTC'), 'UTC')) SETTINGS enable_extended_results_for_datetime_functions = true;
DESCRIBE (SELECT * FROM test_table_join_1, test_table_join_2);
SELECT nullIf(number, number % 3 = 0 ? number : 0) AS x, number AS y FROM (SELECT * FROM system.numbers LIMIT 10) ORDER BY x, y;
CREATE TABLE test_01193_18429.table_5_53 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select arrayRotateRight(['H', 'e', 'l', 'l', 'o'], 2);
SELECT 129, -32769, 129 = -32769, 129 != -32769, 129 < -32769, 129 <= -32769, 129 > -32769, 129 >= -32769, -32769 = 129, -32769 != 129, -32769 < 129, -32769 <= 129, -32769 > 129, -32769 >= 129 , toUInt8(129) = toInt32(-32769), toUInt8(129) != toInt32(-32769), toUInt8(129) < toInt32(-32769), toUInt8(129) <= toInt32(-32769), toUInt8(129) > toInt32(-32769), toUInt8(129) >= toInt32(-32769), toInt32(-32769) = toUInt8(129), toInt32(-32769) != toUInt8(129), toInt32(-32769) < toUInt8(129), toInt32(-32769) <= toUInt8(129), toInt32(-32769) > toUInt8(129), toInt32(-32769) >= toUInt8(129) , toUInt8(129) = toInt64(-32769), toUInt8(129) != toInt64(-32769), toUInt8(129) < toInt64(-32769), toUInt8(129) <= toInt64(-32769), toUInt8(129) > toInt64(-32769), toUInt8(129) >= toInt64(-32769), toInt64(-32769) = toUInt8(129), toInt64(-32769) != toUInt8(129), toInt64(-32769) < toUInt8(129), toInt64(-32769) <= toUInt8(129), toInt64(-32769) > toUInt8(129), toInt64(-32769) >= toUInt8(129) , toUInt16(129) = toInt32(-32769), toUInt16(129) != toInt32(-32769), toUInt16(129) < toInt32(-32769), toUInt16(129) <= toInt32(-32769), toUInt16(129) > toInt32(-32769), toUInt16(129) >= toInt32(-32769), toInt32(-32769) = toUInt16(129), toInt32(-32769) != toUInt16(129), toInt32(-32769) < toUInt16(129), toInt32(-32769) <= toUInt16(129), toInt32(-32769) > toUInt16(129), toInt32(-32769) >= toUInt16(129) , toUInt16(129) = toInt64(-32769), toUInt16(129) != toInt64(-32769), toUInt16(129) < toInt64(-32769), toUInt16(129) <= toInt64(-32769), toUInt16(129) > toInt64(-32769), toUInt16(129) >= toInt64(-32769), toInt64(-32769) = toUInt16(129), toInt64(-32769) != toUInt16(129), toInt64(-32769) < toUInt16(129), toInt64(-32769) <= toUInt16(129), toInt64(-32769) > toUInt16(129), toInt64(-32769) >= toUInt16(129) , toInt16(129) = toInt32(-32769), toInt16(129) != toInt32(-32769), toInt16(129) < toInt32(-32769), toInt16(129) <= toInt32(-32769), toInt16(129) > toInt32(-32769), toInt16(129) >= toInt32(-32769), toInt32(-32769) = toInt16(129), toInt32(-32769) != toInt16(129), toInt32(-32769) < toInt16(129), toInt32(-32769) <= toInt16(129), toInt32(-32769) > toInt16(129), toInt32(-32769) >= toInt16(129) , toInt16(129) = toInt64(-32769), toInt16(129) != toInt64(-32769), toInt16(129) < toInt64(-32769), toInt16(129) <= toInt64(-32769), toInt16(129) > toInt64(-32769), toInt16(129) >= toInt64(-32769), toInt64(-32769) = toInt16(129), toInt64(-32769) != toInt16(129), toInt64(-32769) < toInt16(129), toInt64(-32769) <= toInt16(129), toInt64(-32769) > toInt16(129), toInt64(-32769) >= toInt16(129) , toUInt32(129) = toInt32(-32769), toUInt32(129) != toInt32(-32769), toUInt32(129) < toInt32(-32769), toUInt32(129) <= toInt32(-32769), toUInt32(129) > toInt32(-32769), toUInt32(129) >= toInt32(-32769), toInt32(-32769) = toUInt32(129), toInt32(-32769) != toUInt32(129), toInt32(-32769) < toUInt32(129), toInt32(-32769) <= toUInt32(129), toInt32(-32769) > toUInt32(129), toInt32(-32769) >= toUInt32(129) , toUInt32(129) = toInt64(-32769), toUInt32(129) != toInt64(-32769), toUInt32(129) < toInt64(-32769), toUInt32(129) <= toInt64(-32769), toUInt32(129) > toInt64(-32769), toUInt32(129) >= toInt64(-32769), toInt64(-32769) = toUInt32(129), toInt64(-32769) != toUInt32(129), toInt64(-32769) < toUInt32(129), toInt64(-32769) <= toUInt32(129), toInt64(-32769) > toUInt32(129), toInt64(-32769) >= toUInt32(129) , toInt32(129) = toInt32(-32769), toInt32(129) != toInt32(-32769), toInt32(129) < toInt32(-32769), toInt32(129) <= toInt32(-32769), toInt32(129) > toInt32(-32769), toInt32(129) >= toInt32(-32769), toInt32(-32769) = toInt32(129), toInt32(-32769) != toInt32(129), toInt32(-32769) < toInt32(129), toInt32(-32769) <= toInt32(129), toInt32(-32769) > toInt32(129), toInt32(-32769) >= toInt32(129) , toInt32(129) = toInt64(-32769), toInt32(129) != toInt64(-32769), toInt32(129) < toInt64(-32769), toInt32(129) <= toInt64(-32769), toInt32(129) > toInt64(-32769), toInt32(129) >= toInt64(-32769), toInt64(-32769) = toInt32(129), toInt64(-32769) != toInt32(129), toInt64(-32769) < toInt32(129), toInt64(-32769) <= toInt32(129), toInt64(-32769) > toInt32(129), toInt64(-32769) >= toInt32(129) , toUInt64(129) = toInt32(-32769), toUInt64(129) != toInt32(-32769), toUInt64(129) < toInt32(-32769), toUInt64(129) <= toInt32(-32769), toUInt64(129) > toInt32(-32769), toUInt64(129) >= toInt32(-32769), toInt32(-32769) = toUInt64(129), toInt32(-32769) != toUInt64(129), toInt32(-32769) < toUInt64(129), toInt32(-32769) <= toUInt64(129), toInt32(-32769) > toUInt64(129), toInt32(-32769) >= toUInt64(129) , toUInt64(129) = toInt64(-32769), toUInt64(129) != toInt64(-32769), toUInt64(129) < toInt64(-32769), toUInt64(129) <= toInt64(-32769), toUInt64(129) > toInt64(-32769), toUInt64(129) >= toInt64(-32769), toInt64(-32769) = toUInt64(129), toInt64(-32769) != toUInt64(129), toInt64(-32769) < toUInt64(129), toInt64(-32769) <= toUInt64(129), toInt64(-32769) > toUInt64(129), toInt64(-32769) >= toUInt64(129) , toInt64(129) = toInt32(-32769), toInt64(129) != toInt32(-32769), toInt64(129) < toInt32(-32769), toInt64(129) <= toInt32(-32769), toInt64(129) > toInt32(-32769), toInt64(129) >= toInt32(-32769), toInt32(-32769) = toInt64(129), toInt32(-32769) != toInt64(129), toInt32(-32769) < toInt64(129), toInt32(-32769) <= toInt64(129), toInt32(-32769) > toInt64(129), toInt32(-32769) >= toInt64(129) , toInt64(129) = toInt64(-32769), toInt64(129) != toInt64(-32769), toInt64(129) < toInt64(-32769), toInt64(129) <= toInt64(-32769), toInt64(129) > toInt64(-32769), toInt64(129) >= toInt64(-32769), toInt64(-32769) = toInt64(129), toInt64(-32769) != toInt64(129), toInt64(-32769) < toInt64(129), toInt64(-32769) <= toInt64(129), toInt64(-32769) > toInt64(129), toInt64(-32769) >= toInt64(129) 
CREATE DATABASE IF NOT EXISTS test_b6afwqc5 
SELECT 'Running test stateless/00429_point_in_ellipses.sql from pid=1713' 
INSERT INTO r6 SELECT 22 % 10 = 6 ? 22 - 1 : 22
SELECT startsWith(NULL, NULL);
CREATE USER u8_01292 SETTINGS max_memory_usage=5000000 MIN 4000000 MAX 6000000 CONST;
select count() from system.query_log where type = 'QueryFinish' and not is_initial_query and startsWith(query, 'DESC') and initial_query_id = ( select distinct query_id from system.query_log where log_comment = '127.1 db.name identifier' and current_database = currentDatabase() );
SELECT mid(NULL);
SELECT count() FROM lc_nullable WHERE has(u32, 1);
DROP TABLE IF EXISTS str_persons_02240;
EXPLAIN SYNTAX SELECT (1,);
show tables from rdb_test_5mr53c62
DROP DATABASE IF EXISTS test_f8k9immc 
DROP DATABASE IF EXISTS test_d6dr89xz 
create table test_02243 (image_path Nullable(String), caption Nullable(String), NSFW Nullable(String), similarity Nullable(Float64), LICENSE Nullable(String), url Nullable(String), key Nullable(UInt64), shard_id Nullable(UInt64), status Nullable(String), error_message Nullable(String), width Nullable(UInt32), height Nullable(UInt32), exif Nullable(String), original_width Nullable(UInt32), original_height Nullable(UInt32)) engine=Memory
CREATE TABLE test_4847696E4A6E612A713C6A37685F3D3E60597D724D424D6638536A4463234F4C3664205E455D5E31(x UInt8) Engine=Memory;
SELECT 'uniqCombined(17)(round(float))';
SYSTEM STOP FETCHES quorum3;
DROP DATABASE IF EXISTS test_6yhwgy5e 
CREATE TABLE test (d Date, s String) ENGINE = MergeTree(d, s, 8192)
INSERT INTO test_01193_18429.table_1_276 VALUES 
CREATE TABLE test_01193_18429.table_8_172 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_1_966 VALUES 
CREATE TABLE test_01193_18429.table_9_52 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/02842_mutations_replace_non_deterministic.sql from pid=1724' 
INSERT INTO test_01193_18429.table_5_88 VALUES 
SELECT * FROM test_collate ORDER BY x, s COLLATE 'ru';
CREATE DATABASE IF NOT EXISTS test_6bkm4l68 
INSERT INTO test_01114_1.mt_tmp SELECT * FROM numbers(100);
INSERT INTO r1 SELECT 10
CREATE TABLE test_49425427315658573B2D52235D636B797C39403A497E657D493A3D2142353E3C7B235E6567652348(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_p7ygnv08 
INSERT INTO test_01193_18429.table_6_993 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN toUInt8(1) WHEN (number % 3) = 0 THEN toUInt8(2) ELSE toUInt16(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_44696768275C5D7574203337217670686B7B422822795B5640464A6221256C3A476D394A4F4E4E76(x UInt8) Engine=Memory;
alter table cardinality add column y LowCardinality(String);
SELECT hex(rightPad(toFixedString('abc34324' as s, 8), number)) as result, hex(rightPad(s, number)) = result, hex(rightPadUTF8(toFixedString(s, 8), number)) = result, hex(rightPadUTF8(s, number)) = result FROM numbers(20);
select 0 = positionCaseInsensitive(materialize(''), 'aBc');
SYSTEM STOP MERGES tDD;
CREATE TABLE test_01193_18429.table_10_294 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Running test stateless/02294_system_certificates.sql from pid=1724' 
ALTER TABLE concurrent_alter_column ADD COLUMN c117 DOUBLE;
CREATE TABLE test (`a` Int32) ENGINE = MergeTree ORDER BY tuple() SETTINGS disk = disk(name = 'test1', type = object_storage, object_storage_type = local_blob_storage, path = './02963_test1/'), index_granularity = 18290, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 4654, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 5197720, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 33039, primary_key_compress_block_size = 35624
SELECT decodeHTMLComponent('Hello, &quot;world&quot;!');
INSERT INTO test_01193_18429.table_9_248 VALUES 
SELECT 4294967295, 9223372036854775809, 4294967295 = 9223372036854775809, 4294967295 != 9223372036854775809, 4294967295 < 9223372036854775809, 4294967295 <= 9223372036854775809, 4294967295 > 9223372036854775809, 4294967295 >= 9223372036854775809, 9223372036854775809 = 4294967295, 9223372036854775809 != 4294967295, 9223372036854775809 < 4294967295, 9223372036854775809 <= 4294967295, 9223372036854775809 > 4294967295, 9223372036854775809 >= 4294967295 , toUInt32(4294967295) = toUInt64(9223372036854775809), toUInt32(4294967295) != toUInt64(9223372036854775809), toUInt32(4294967295) < toUInt64(9223372036854775809), toUInt32(4294967295) <= toUInt64(9223372036854775809), toUInt32(4294967295) > toUInt64(9223372036854775809), toUInt32(4294967295) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toUInt32(4294967295), toUInt64(9223372036854775809) != toUInt32(4294967295), toUInt64(9223372036854775809) < toUInt32(4294967295), toUInt64(9223372036854775809) <= toUInt32(4294967295), toUInt64(9223372036854775809) > toUInt32(4294967295), toUInt64(9223372036854775809) >= toUInt32(4294967295) , toUInt64(4294967295) = toUInt64(9223372036854775809), toUInt64(4294967295) != toUInt64(9223372036854775809), toUInt64(4294967295) < toUInt64(9223372036854775809), toUInt64(4294967295) <= toUInt64(9223372036854775809), toUInt64(4294967295) > toUInt64(9223372036854775809), toUInt64(4294967295) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toUInt64(4294967295), toUInt64(9223372036854775809) != toUInt64(4294967295), toUInt64(9223372036854775809) < toUInt64(4294967295), toUInt64(9223372036854775809) <= toUInt64(4294967295), toUInt64(9223372036854775809) > toUInt64(4294967295), toUInt64(9223372036854775809) >= toUInt64(4294967295) , toInt64(4294967295) = toUInt64(9223372036854775809), toInt64(4294967295) != toUInt64(9223372036854775809), toInt64(4294967295) < toUInt64(9223372036854775809), toInt64(4294967295) <= toUInt64(9223372036854775809), toInt64(4294967295) > toUInt64(9223372036854775809), toInt64(4294967295) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toInt64(4294967295), toUInt64(9223372036854775809) != toInt64(4294967295), toUInt64(9223372036854775809) < toInt64(4294967295), toUInt64(9223372036854775809) <= toInt64(4294967295), toUInt64(9223372036854775809) > toInt64(4294967295), toUInt64(9223372036854775809) >= toInt64(4294967295) 
select if(number % 5 == 0, Null, toUInt256OrZero(toString(number))) from numbers(20);
CREATE TABLE 01504_test (k UInt32, value UInt64, dummy Tuple(UInt32, Float64), bm AggregateFunction(groupBitmap, UInt64)) Engine=EmbeddedRocksDB PRIMARY KEY(k);
SELECT mortonEncode(NULL, NULL, NULL);
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toDayOfMonth(N, 'Asia/Istanbul') as r FORMAT CSV;
CREATE TABLE test_01193_18429.table_2_353 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_pexbz5lj 
SELECT count() FROM system.processes WHERE current_database=currentDatabase() AND query LIKE '%test_table_%'
INSERT INTO dst_2 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 15
SELECT count(), max(x), avg(length(s)) FROM file('/var/lib/clickhouse/user_files/test_ppeg0s5q/zst_1.zst', 'TabSeparated', 'x UInt32, s String')
CREATE TABLE test_01193_18429.table_7_754 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO FUNCTION cluster('test_cluster_two_shards', 'test_m3a0ae8p', 'dst_02224', `key`) SETTINGS parallel_distributed_insert_select = 1, max_distributed_depth = 2 SELECT * FROM `test_m3a0ae8p`.`src_02224` SETTINGS parallel_distributed_insert_select = 1, max_distributed_depth = 2
RESTORE TABLE test_tsnnbsbz.tbl2 FROM Disk('backups', '02915_lazy_loading_of_base_backups_test_tsnnbsbz_c') SETTINGS id='02915_lazy_loading_of_base_backups_test_tsnnbsbz_r2';
INSERT INTO test_01193_18429.table_4_311 VALUES 
DROP DATABASE IF EXISTS test_k6jk54go 
INSERT INTO source_table_stripe_log SELECT * FROM system.numbers LIMIT 10;
SET allow_prefetched_read_pool_for_remote_filesystem=0;
SELECT count() FROM date_test_table WHERE toInt8(val) == 1;
INSERT INTO mt VALUES /* (-39, 1) */ 
INSERT INTO table3 SELECT number-205, number FROM numbers(10);
SELECT translateUTF8('abc', '', '');
select * from enum_alter_issue order by a;
CREATE TABLE test_01193_18429.table_2_899 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_417447486A5E47727E654B476562424D7B6A7A47257E287366744544283B685D6035293A4E497223(x UInt8) Engine=Memory;
SELECT name, type, serialization_kind FROM system.parts_columns WHERE database = currentDatabase() AND table = 't_sparse_mutations_1' AND column = 's' AND active ORDER BY name;
SELECT substr(NULL, NULL, NULL);
SELECT 'system.query_cache with new user', count(*) FROM system.query_cache
select number, count(*) over (partition by p) from window_mt order by number limit 10 settings optimize_read_in_order = 1;
TRUNCATE TABLE target;
select 'arrayPopFront(arr1)';
SELECT '21' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:f800::')))
CREATE TABLE test_01193_18429.table_4_207 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
EXPLAIN QUERY TREE (SELECT sum(((1 AS m) - (uint64 AS n)) AS i) j from test_table where m > 0 and n > 0 and i < 0 having j < 0);
SELECT multiIf((col1 % 2) = 0, 'foo', (col1 % 3) = 0, toFixedString(col3, 16), toFixedString(col4, 16)) FROM multi_if_check;
INSERT INTO test_01193_18429.table_8_100 VALUES 
SELECT (5,4) % 2;
CREATE TABLE foo_lc (n LowCardinality(String)) ENGINE = Memory;
SELECT 'Running test stateless/02312_parquet_orc_arrow_names_tuples.sql from pid=1720' 
SET output_format_protobuf_nullables_with_google_wrappers = true;
CREATE TABLE test_38635063297C6E72372E793D25337C6F73516B5A3C45592643557C2150275877237C3E7C6747582E(x UInt8) Engine=Memory;
insert into test_02245_s3_nested_orc1 values 
CREATE TABLE ttt (id Int32, value String) Engine=MergeTree() ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0, disk = disk( type = cache, max_size = '128Mi', max_file_segment_size = '10Ki', boundary_alignment = '5Ki', path = '02503_cache_on_write_with_small_segment_size_test_bzw5pw23', cache_on_write_operations = 1, enable_filesystem_query_cache_limit = 1, delayed_cleanup_interval_ms = 100, disk = 's3_disk');
CREATE TABLE test_5122334A7E573071272F386B316770705A24443E6D564333436A727640542C543B4B4E436A566750(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_1lhue70b 
SELECT multiIf((number % 2) = 0, [toFloat64(1), toFloat64(2)], (number % 3) = 0, [toInt32(2), toInt32(3)], [toUInt16(3), toUInt16(3)]) FROM system.numbers LIMIT 10;
set allow_experimental_analyzer=1;
SELECT count() FROM test_table WHERE value_1 = '1' AND value_2 = '1' SETTINGS force_data_skipping_indices = 'value_1_idx, value_2_idx';
CREATE TABLE test_01193_18429.table_4_960 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'Running test stateless/01737_move_order_key_to_prewhere_select_final.sql from pid=1715' 
DROP DATABASE IF EXISTS test_e47zppjt 
CREATE TABLE test_75255E4038246E404F435A5247435D7920422B533D2B47263835485677596B7C4B2C2F3655566172(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_q26wjeoa 
DROP DATABASE IF EXISTS test_kp66539v 
EXPLAIN SYNTAX SELECT number AS a, number % 2 AS b FROM numbers(10) ORDER BY (a, b) DESC NULLS FIRST WITH FILL FROM 2 TO 1 STEP -1
INSERT INTO test_01193_18429.table_9_46 VALUES 
SELECT 13, 9, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (13 < 13 AND 9 > 0 ? 13 : 0)), throwIf(last != (13 < 13 AND 9 > 0 ? least(13 - 1, 13 + 9 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 13, 9);
select * from (select 5 as x) s1 left join (select toLowCardinality(5) as x) s2 using x;
alter table many_mutations delete where y = 218 * 2 settings mutations_sync = 0;
INSERT INTO test_01193_18429.table_9_558 VALUES 
INSERT INTO test_01193_18429.table_9_660 VALUES 
DROP DATABASE IF EXISTS test_ar496h4w 
SELECT accurateCastOrNull(inf, 'Int128');
CREATE TABLE test_01193_18429.table_2_889 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select hasAny(['a'], ['a']);
SELECT CASE WHEN (number % 2) = 0 THEN toUInt16(1) WHEN (number % 3) = 0 THEN toUInt64(2) ELSE toUInt64(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_76416A3D527E662A463E646822354E467B666D63547D3378506B23723A5F6C3723754F2C753A5339(x UInt8) Engine=Memory;
select if(toUInt8(0), y, 42) from test;
INSERT INTO test_01193_18429.table_4_919 VALUES 
CREATE TABLE t2 ( x Int ) Engine = Memory;
EXPLAIN QUERY TREE run_passes = 1 select quantiles(0.5, 0.9, 0.99)(if(number % 2, number, null)) from numbers(100);
CREATE DATABASE IF NOT EXISTS test_9fe89h20 
CREATE TABLE test_01193_18429.table_9_913 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT count() FROM t_cnf_fuzz WHERE (c7 AND c9 AND (NOT c3)) OR ((NOT c2)) OR (c1 AND c8 AND c6) OR ((NOT c0) AND c2 AND (NOT c4) AND (NOT c1) AND (NOT c3)) OR (c6 AND c7 AND c1) OR ((NOT c1)) OR (c6 AND (NOT c4) AND c1 AND c7) OR ((NOT c5)) OR ((NOT c4) AND c6 AND (NOT c7) AND c4) OR (c8) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_01193_18429.table_1_528 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_6_329 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
drop table mt;
alter table many_mutations delete where y = 281 * 2 settings mutations_sync = 0;
INSERT INTO src_1 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 33
DROP DICTIONARY IF EXISTS 2024_dictionary_with_comment;
SELECT 'Running test stateless/02409_url_format_detection.sql from pid=1718' 
select * from file(data_02293, JSONColumns) order by b, a, c, d
CREATE INDEX idx_tab4_5 ON tab4 (col1 DESC,col0);
SELECT INTERVAL 100 - number * 20 DAY + toDate32('2217-01-01') AS x FROM system.numbers LIMIT 10;
DROP TABLE test_01532_2;
CREATE DATABASE IF NOT EXISTS test_xcfircyg 
CREATE TABLE data_sparse_column (`key` Int64, `value` Int32) ENGINE = MergeTree ORDER BY key SETTINGS index_granularity = 29433, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 1956, prefer_fetch_merged_part_size_threshold = 6134223066, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 21005126, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 47765, primary_key_compress_block_size = 16762
SELECT DISTINCT `number` FROM `test_1k523xfh`.`numbers_memory` ORDER BY `number` ASC LIMIT 10
INSERT INTO test_01193_18429.table_8_99 VALUES 
CREATE DATABASE IF NOT EXISTS test_ml4r3ns2 
SELECT * FROM (SELECT [1] AS id) AS subquery_1 ARRAY JOIN id INNER JOIN (SELECT 1 AS id) AS subquery_2 USING (id);
SELECT 'HAS';
select count()>0 from system.zookeeper_log where path like '/test/01158/' || currentDatabase() || '/rmt%' and duration_ms > 0;
insert into optimize_sorting values 
SELECT sum(v) AS s FROM group_by_pk GROUP BY k ORDER BY s DESC LIMIT 5 SETTINGS optimize_aggregation_in_order = 1, max_block_size = 1;
select parseDateTimeInJodaSyntax('1999 365', 'yyyy D', 'UTC') = toDateTime('1999-12-31', 'UTC');
SELECT uniqTheta(NULL, NULL, NULL);
SELECT day = '2020-01-03' FROM ( SELECT toDate('2020-01-03') AS day FROM numbers(1) ) AS a INNER JOIN ( SELECT day FROM test_table WHERE day = '2020-01-03' GROUP BY day ) AS b ON a.day = b.day SETTINGS max_rows_to_read = 11;
SELECT 't join none using';
DROP DATABASE IF EXISTS test_xlzxvgbn 
INSERT INTO test_01193_18429.table_9_149 VALUES 
INSERT INTO test_01193_18429.table_3_29 VALUES 
DROP DATABASE IF EXISTS test_68hb5j99 
CREATE TABLE test_4B3F4761274961215D713D442A254D475A617940676320376E2A6C777630414E733D2C4728662A41(x UInt8) Engine=Memory;
REVOKE SELECT ON db2.table FROM test_user_01073;
SELECT 'Running test stateless/01035_avg.sql from pid=1713' 
SELECT toDecimal32(-12345.6789, 4) AS x, trunc(x), trunc(x, 1), trunc(x, 2), trunc(x, 3), trunc(x, 4), trunc(x, 5);
CREATE DATABASE IF NOT EXISTS test_v0nq0hvy 
SELECT CAST('disable', 'Bool');
CREATE TABLE test_01193_18429.table_2_4 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (69 < 39 AND 102 > 0 ? 69 : 0)), throwIf(last != (69 < 39 AND 102 > 0 ? least(39 - 1, 69 + 102 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(39) LIMIT 69, 102);
SELECT * FROM table_with_defaults_on_aliases WHERE col1 = 1;
insert into test1_00863 (id, code) select number, toString(number) FROM numbers(100000);
SELECT '{a}' AS x, x LIKE (concat('%', x) AS pat), materialize(x) LIKE pat;
SELECT parseDateTime32BestEffortOrNull(materialize('2020-05-14T03:37:03.253184Z'), 'UTC') AS a, toTypeName(a);
select i from t prewhere j = 4;
select round(1000 * ngramDistanceCaseInsensitiveUTF8('ÃÂÃÂÃÂÃÂÃÂÃÂµÃÂÃÂ¶ÃÂ·', 'ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ'));
DROP TABLE numbers_100k_log;
SELECT number AS id, toString(number) AS s, range(number) AS arr FROM numbers(10) FORMAT RowBinary
CREATE TABLE r5 (`x` UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/tables/02725_start_stop_fetches_test_6idd5v10/r', 'r5') ORDER BY x SETTINGS replicated_deduplication_window = 1, allow_remote_fs_zero_copy_replication = 1, index_granularity = 18137, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 74, merge_max_block_size = 5429, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 980051, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 3015265721, index_granularity_bytes = 14004876, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 23866, primary_key_compress_block_size = 41058
SELECT nothingNullArrayIf([NULL], 1) AS `x` FROM numbers(3)
SELECT count(), `data_01247`.`number` FROM `test_tc1uzesn`.`data_01247` GROUP BY `number`
CREATE TABLE test_464F4A477769386576547B5A2F616224403479433C7B5A6A59433160447E4C6F3C3E7D463C4F3F5B(x UInt8) Engine=Memory;
SYSTEM STOP MERGES dst_r2;
CREATE TABLE test_01148_atomic.rmt2 ON CLUSTER test_shard_localhost (n int, PRIMARY KEY n) ENGINE=ReplicatedMergeTree;
select * from x where dt like '2022-10-01%';
CREATE TABLE test_01193_18429.table_1_525 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_66214337623F367D292354362A26423B4423667263326F552274703463705D415E756B4174357A25(x UInt8) Engine=Memory;
SELECT '---- toDecimal64OrDefault ----';
INSERT INTO test_01193_18429.table_10_763 VALUES 
DROP DATABASE IF EXISTS 02097_db;
SELECT serverTimeZone();
SELECT multiIf(1, ['foo', 'bar'], (col1 % 3) = 0, [col4, col5], [col6, col7]) FROM multi_if_check;
ALTER TABLE table_from_select ADD COLUMN col UInt8;
alter table many_mutations delete where y = 731 * 2 settings mutations_sync = 0;
SELECT 'Running test stateless/01654_test_writer_block_sequence.sh from pid=1726' 
SELECT sum(n + -1), sum(-1 + n), sum(n - -1), sum(-1 - n) FROM (SELECT number n FROM numbers(10));
DROP DATABASE IF EXISTS test_m2touxp7 
CREATE INDEX idx_tab2_4 ON tab2 (col3,col0);
SELECT count() FROM hypothesis_test_test2 WHERE a = b FORMAT JSON
SELECT 2 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'val', tuple(IPv4StringToNum('127.0.255.127')))
DROP DATABASE IF EXISTS test_wm9j3rzp 
SELECT 'Running test stateless/00854_multiple_join_asterisks.sql from pid=1715' 
select dictGetAll('regexp_dict4', 'pattern', 'HELLO\nWORLD');
SHOW DICTIONARIES FROM test_5qyz18pn
with '2018-01-12 22:33:44' as s, toDateTime(s) as datetime, toDateTime64(s, 6) as datetime64, toDate(s) as date, toDate32(s) as date32 SELECT formatDateTimeInJodaSyntax(datetime, 'kk'), formatDateTimeInJodaSyntax(datetime64, 'kk'), formatDateTimeInJodaSyntax(date, 'kk'), formatDateTimeInJodaSyntax(date32, 'kk');
DROP DATABASE IF EXISTS test_1b3fgcmg 
WITH (1, 2) AS a SELECT 1 IN a, 3 IN a;
INSERT INTO test_01193_18429.table_3_737 VALUES 
SELECT 'SELECT toStartOfTenMinutes(N, \'Asia/Istanbul\')';
select 1 
INSERT INTO t_sparse_s3 SELECT 9, number % 2, '' FROM numbers(8192);
ALTER TABLE test_move_partition_src MOVE PARTITION 1 TO TABLE test_move_partition_dest;
SELECT t1.id AS t1_id, t1.value, t2.id AS t2_id, t2.value, t3.id AS t3_id, t3.value FROM test_table_join_1 AS t1 FULL JOIN test_table_join_2 AS t2 ON t1_id = t2_id RIGHT JOIN test_table_join_3 AS t3 ON t2_id = t3_id;
CREATE TABLE test_00681(x Int32) ENGINE = Log;
SELECT JSON_QUERY('{"abc":{"123":1}}', '$.abc.123');
ALTER TABLE t_lwd_mutations UPDATE v = 1 WHERE id % 4 = 0, DELETE WHERE id % 10 = 1;
INSERT INTO test_01193_18429.table_3_958 VALUES 
DROP TABLE IF EXISTS capnp_nested_lists_and_tuples
CREATE TABLE test_01193_18429.table_7_100 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT name, partition_key, sorting_key, primary_key, sampling_key FROM system.tables WHERE name = 'check_system_tables' AND database = currentDatabase() FORMAT PrettyCompactNoEscapes;
CREATE DATABASE IF NOT EXISTS test_j76cbgkb 
SELECT dictIsIn('database_for_dict.dictionary_with_hierarchy', materialize(toUInt64(22)), materialize(toUInt64(111)));
CREATE DATABASE IF NOT EXISTS test_hr9n2zxd 
DROP DATABASE IF EXISTS test_on5su1z6 
select a1, b1, a2 from tab1 any left join (select * from tab2) on b1 + 1 = a2 + 1;
SELECT 15, 4, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (15 < 13 AND 4 > 0 ? 15 : 0)), throwIf(last != (15 < 13 AND 4 > 0 ? least(13 - 1, 15 + 4 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 15, 4);
CREATE TABLE test_01193_18429.table_1_345 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE fetches_r1 (`x` UInt32) ENGINE = ReplicatedMergeTree('/clickhouse/tables/00715_fetch_merged_or_mutated_part_zookeeper_test_u2x8txzw/fetches', 'r1') ORDER BY x SETTINGS index_granularity = 205, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 8734, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 2298498, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 99399, primary_key_compress_block_size = 22324
SELECT multiIf((number % 2) = 0, toFloat64(1), (number % 3) = 0, toFloat32(2), toFloat32(3)) FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_zmx1sja8 
INSERT INTO test_01193_18429.table_2_153 VALUES 
SELECT count() FROM t_cnf_fuzz WHERE (c7 AND (NOT c8)) OR ((NOT c3) AND (NOT c1) AND c6 AND c6 AND c8) OR ((NOT c6) AND c9 AND (NOT c6) AND (NOT c6) AND (NOT c8)) OR ((NOT c6)) OR (c1 AND c7) OR (c2) SETTINGS convert_query_to_cnf = 0
INSERT INTO test_01193_18429.table_3_317 VALUES 
select * from dist_01223 order by key;
SELECT toTypeName(x) FROM (SELECT toDecimal32('12.345', 7) AS x UNION ALL SELECT toUInt8(0) AS x) WHERE x = 0;
select largestTriangleThreeBuckets(0)(x, y) FROM largestTriangleThreeBucketsTestFloat64Float64;
SELECT CASE WHEN (col1 % 2) = 0 THEN 'foo' WHEN 1 THEN toFixedString(col3, 16) ELSE col4 END FROM multi_if_check;
SELECT type, serialization_kind FROM system.parts_columns WHERE database = currentDatabase() AND table = 't_sparse_mutations_2' AND column = 's' AND active ORDER BY name;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toInt64(3), toInt64(3)] END FROM system.numbers LIMIT 10;
SELECT arrayFilter(x -> 1, emptyArrayUInt8());
EXPLAIN SYNTAX SELECT -(-(-1));
SELECT * FROM set_idx WHERE NOT (i32 = 5 AND i32 + f64 < 12 AND 3 < d AND d < 7 AND (s = 'bac' OR s = 'cba')) ORDER BY dt
select makeDateTime(1991, 8, 65537, 21, 4, 0, 'UTC');
INSERT INTO test_01193_18429.table_3_741 VALUES 
DROP DATABASE IF EXISTS test_q0240jk6 
CREATE TABLE test_56537128644420675E42717E292229723F50374A74522B3076623B294C5C362D6E765F302A527A69(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_7_36 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_7_423 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT * FROM t1 ASOF LEFT JOIN t2 ON t1.a = t2.a AND t1.b >= t2.b ORDER BY t1.b;
alter table data_01900_2 update s = 'bar_20' where 1;
DROP TABLE IF EXISTS arrow_numbers
SELECT avg(diff) FROM ( SELECT * FROM ( SELECT learnerHash, passed - eventTime AS diff FROM statements GLOBAL SEMI LEFT JOIN ( SELECT learnerHash, argMax(eventTime, resultScoreRaw) AS passed FROM ( SELECT learnerHash, eventTime, resultScoreRaw FROM statements WHERE (courseId = 1) AND (onCourse = 0) AND (verb = 'http://adlnet.gov/expapi/verbs/passed') AND (objectId = 'https://crmm.ru/xapi/courses/spp/1/1/0-1') ORDER BY eventTime ASC ) GROUP BY learnerHash ) USING (learnerHash) WHERE (courseId = 1) AND (onCourse = 0) AND (verb = 'http://adlnet.gov/expapi/verbs/interacted') AND (eventTime <= passed) AND (diff > 0) ORDER BY eventTime DESC LIMIT 1 BY learnerHash ) ORDER BY diff DESC LIMIT 7, 126 );
CREATE TABLE test_01193_18429.table_10_586 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_1_553 VALUES 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (16 < 96 AND 104 > 0 ? 16 : 0)), throwIf(last != (16 < 96 AND 104 > 0 ? least(96 - 1, 16 + 104 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(96) LIMIT 16, 104);
INSERT INTO t_json_async_insert FORMAT JSONAsObject 
select * from part_info order by t;
SELECT CASE WHEN 1 THEN 'foo' WHEN 1 THEN 'bar' ELSE toFixedString('baz', 16) END FROM multi_if_check;
SELECT addWeeks(NULL, NULL, NULL);
INSERT INTO test_01193_18429.table_1_189 VALUES 
CREATE TABLE test_4E515A56453B54485D523E585E3C2B447D4B63602A3F612739507266606F34633253655C59782C34(x UInt8) Engine=Memory;
CREATE TABLE test_38245D7D4931583E313A517E742C31613549224F716D796D7A7A71387D642E2E2A632A597A645140(x UInt8) Engine=Memory;
SELECT multiIf((number % 2) = 0, toInt64(1), (number % 3) = 0, toInt16(2), toInt32(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_4343276E4B3271536B7E2066292E55562F6E3B257562775551575A7E784D353B714F5F2A65647334(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_9_886 VALUES 
CREATE DATABASE IF NOT EXISTS test_lxnnhtoa 
INSERT INTO default (t) VALUES 
CREATE DATABASE IF NOT EXISTS test_rxk22wvb 
SELECT `UserID` FROM `test_c5zukzwt`.`users` WHERE `UserID` IN ((SELECT arrayJoin([1468013291393583084, 1321770221388956068])) AS `_subquery3943`)
SELECT t1.id, test_table_join_1.id, t1.value, test_table_join_1.value, t2.id, test_table_join_2.id, t2.value, test_table_join_2.value, t3.id, test_table_join_3.id, t3.value, test_table_join_3.value FROM test_table_join_1 AS t1, test_table_join_2 AS t2, test_table_join_3 AS t3;
SELECT 'Running test stateless/01305_array_join_prewhere_in_subquery.sql from pid=1713' 
select `SomeMap.ID`, `SomeMap.Num` from nested_map;
set optimize_rewrite_array_exists_to_has = false;
CREATE TABLE test_2A635331297961252C382458223B263128424B437847336B39546D75564D2E5B4731764723766343(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_2fxqs94g 
select parseDateTime('Aug 13, 2022, 07:58:32 PM', '%b %e, %G, %h:%i:%s %p', 'UTC');
SELECT 'can not attach with bad uuid';
INSERT INTO insert_dedup_token1 VALUES
CREATE TABLE test_5B5E3222696A31553356517B2C7C5732246D305B45356E383F23557025475259217B4534515C5B3C(x UInt8) Engine=Memory;
CREATE MATERIALIZED VIEW mv_good (`x` String) ENGINE = MergeTree PARTITION BY tuple() ORDER BY tuple() SETTINGS index_granularity = 27849, min_bytes_for_wide_part = 875937438, ratio_of_defaults_for_sparse_serialization = 0.5092053413391113, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 11239, prefer_fetch_merged_part_size_threshold = 8437331277, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 594261864, index_granularity_bytes = 24845012, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 56668, primary_key_compress_block_size = 26926 AS SELECT x FROM test_00687
SELECT count(), min(`k`), max(`k`), avg(`k`) FROM `test_ou04xfkb`.`t1`
SELECT count() FROM t_cnf_fuzz WHERE (c7 AND (NOT c2) AND c8 AND (NOT c4)) OR ((NOT c1) AND c0) OR (c2 AND (NOT c2) AND c4) OR (c4 AND (NOT c1) AND c7 AND (NOT c3) AND (NOT c3)) OR (c7 AND (NOT c1) AND (NOT c2) AND (NOT c4) AND c7) OR ((NOT c4) AND c9 AND (NOT c0)) OR ((NOT c3) AND c5) OR ((NOT c2) AND c0 AND (NOT c4) AND (NOT c6)) OR (c9 AND (NOT c8)) OR (c8 AND (NOT c3) AND (NOT c0) AND c8) SETTINGS convert_query_to_cnf = 1
SELECT round(abs(res1 - res2), 6) FROM ( SELECT stddevPop(x_value) AS res1, sqrt((sum(x_value * x_value) - ((sum(x_value) * sum(x_value)) / count())) / count()) AS res2 FROM series );
DROP DATABASE IF EXISTS test_j43intth 
SELECT cityHash64(CAST(NULL AS Nullable(UInt32)));
select 'dst_to_src', 1, 'src', type, n, _part from src order by type, n
CREATE TABLE test_02908_r3_27 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_27', 'r3') ORDER BY tuple()
SELECT count() FROM `test_b6294dcb`.`test_local` WHERE 'XXX' GLOBAL IN (`_subquery3979`)
CREATE TABLE test_6956244C4932583F2B6B2C62255F5E562221207957495233582D696C7A2041322D25756838477E6B(x UInt8) Engine=Memory;
SELECT count() FROM t_cnf_fuzz WHERE (c3) OR ((NOT c9)) OR (c2 AND c0) OR (c7 AND (NOT c8) AND c0 AND (NOT c7) AND c7) OR ((NOT c7) AND c3) OR (c0 AND c3 AND (NOT c2) AND c8) SETTINGS convert_query_to_cnf = 0
SELECT '= full =';
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (37 < 1 AND 45 > 0 ? 37 : 0)), throwIf(last != (37 < 1 AND 45 > 0 ? least(1 - 1, 37 + 45 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(1) LIMIT 37, 45);
CREATE TABLE test_01193_18429.table_4_183 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT number FROM remote('127.0.0.{2,3}', currentDatabase(), numbers10m) ORDER BY number * 1234567890123456789 LIMIT 19999980, 20;
CREATE TABLE test_02908_r2_211 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_211', 'r2') ORDER BY tuple()
select [1, 1, 2, 3, 4, 5, 0, 0, 0, 0] = groupArray(position('aaaa', materialize(''), number)) from numbers(10);
CREATE TABLE test_01193_18429.table_3_429 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 't22', * FROM t1 JOIN t22 ON t1.id == t22.id and t1.id == t22.idd OR t22.key == t22.key2 and t1.id == t22.idd;
DROP TABLE IF EXISTS alter_enum_array;
DROP TABLE IF EXISTS 01082_window_view_watch_limit.mt
SELECT sipHash64Keyed((2::UInt64, 2::UInt64), val) FROM sipHashKeyed_keys ORDER by val;
DROP TABLE IF EXISTS replicated_merge_tree_pk_sql SYNC;
SELECT CASE WHEN (number % 2) = 0 THEN toFloat64(1) WHEN (number % 3) = 0 THEN toUInt8(2) ELSE toInt32(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_392C67306B6B6E4E6C447A544F36777D6D3144276D24327E59664F703B21415338666F644E5F634D(x UInt8) Engine=Memory;
SELECT materialize('a\xFFb') LIKE 'a%\xFFb';
CREATE TABLE test_40756130293A425B494B2D2B3E525A4437437575342B37206F73703D6B2D794D32524E3876663F70(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_1_535 VALUES 
SELECT * FROM test_table_join_1 AS t1 LEFT JOIN test_table_join_2 AS t2 ON t1.id = t2.id ORDER BY t1.id, t1.value;
INSERT INTO test_01193_18429.table_7_788 VALUES 
SELECT 'Running test stateless/00384_column_aggregate_function_insert_from.sql from pid=1724' 
select 2 = windowFunnel(10000)(timestamp, event = 1001, event = 1008) from funnel_test_u64;
insert into test2 select * from numbers(11, 20);
CREATE DATABASE IF NOT EXISTS test_ogk2syhg 
select makeDateTime64(1984, 1, 1, 0, 0, 0, 0, 9.5, 'UTC');
SELECT uniq(t.alias_of_a) FROM (SELECT a as alias_of_a, sum(b) FROM test_rewrite_uniq_to_count GROUP BY a) t settings allow_experimental_analyzer=0;
DROP TABLE crash_02919;
CREATE DATABASE IF NOT EXISTS test_vb46rtl3 
SELECT age('day', toDate32('1927-01-01', 'UTC'), toDate32('1927-01-02', 'UTC'), 'UTC');
SELECT SUM(toUInt64(value1)) > 1725 FROM concurrent_alter_detach_1
DROP DATABASE IF EXISTS test_6bfdbljg 
INSERT INTO test_01193_18429.table_2_722 VALUES 
CREATE DATABASE IF NOT EXISTS test_ndzhrh73 
SELECT toDate(toDateTime(1412106600), 'Asia/Tokyo');
SELECT reverse([NULL, '\0']);
SELECT nowInBlock();
INSERT INTO test_01193_18429.table_9_634 VALUES 
select blockSize(), * from `table_00483` prewhere x = 7 format Null;
select 1 = position('abcdefgh', materialize('abcdefg')) from system.numbers limit 129;
SELECT arrayJoin(['hello', 'world']) LIKE '%helloworld%';
INSERT INTO left_table VALUES
CREATE DATABASE IF NOT EXISTS test_ys3f2nfj 
INSERT INTO r9 SELECT 49
INSERT INTO test SELECT 'case1', number%3, 1 FROM numbers(9);
SELECT tupleDivideByNumber((1, 2.5, 3), materialize(0.5));
CREATE TABLE test_6B43266056612D7954326A2F7240767C437B2565782371373B3B7C612F793267775440266E5E5866(x UInt8) Engine=Memory;
INSERT INTO dst_5 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 65
SELECT arrayJoin(['F', 'z', 'J', 'ÃÂ']) as x ORDER BY x;
SELECT countMatches(NULL, NULL);
drop dictionary db_01527_ranges.dict;
SELECT 9;
select 'describe table:'
SELECT COUNT() FROM system.mutations WHERE is_done = 0 and table = 'concurrent_alter_add_drop_1'
alter table many_mutations delete where y = 923 * 2 settings mutations_sync = 0;
drop table if exists data_01270;
CREATE TABLE test_01193_18429.table_5_605 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'Running test stateless/01376_array_fill_empty.sql from pid=1713' 
CREATE DATABASE IF NOT EXISTS test_qrs0foqv 
CREATE TABLE test_02908_r2_33 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_33', 'r2') ORDER BY tuple()
SELECT toDecimal64(1, 2) * toDecimal128(1, 3) x, toTypeName(x);
INSERT INTO test_01193_18429.table_10_853 VALUES 
SELECT has([1, 2.1, 3], 2);
CREATE TABLE test_01193_18429.table_2_80 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT count(*) FROM source WHERE toYYYYMM(ts_64) = 202312 SETTINGS allow_experimental_analyzer=1;
SELECT CASE WHEN (col1 % 2) = 0 THEN [col2, 'bar'] WHEN 1 THEN [col4, col5] ELSE [col6, 'bar'] END FROM multi_if_check;
SELECT * FROM t_async_insert_table_function ORDER BY id;
SELECT FROM_UNIXTIME(toDateTime('2018-01-02 22:33:44'), '%H'), FROM_UNIXTIME(toDate32('2018-01-02'), '%H');
CREATE DATABASE IF NOT EXISTS test_suin7bry 
CREATE TABLE test_7E3E5F25223B6D5B357649647A33454827343B4F3A595E5A714F786366534423647E6F3170366D2F(x UInt8) Engine=Memory;
CREATE TABLE t_00284_lc_str (`s` LowCardinality(String)) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 559023826, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 21721, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 9239822455, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 34328, primary_key_compress_block_size = 57294
DROP TABLE IF EXISTS replicated_truncate2;
INSERT INTO r4 SELECT 89
WITH ['2023-04-05', '2023-04-06']::Array(Date) AS d SELECT arrayMax(d), arrayMin(d), arrayDifference(d);
CREATE TABLE ignore_auto_increment ( id int AUTO_INCREMENT ) ENGINE=MergeTree() ORDER BY tuple();
SELECT * FROM system.table_functions LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
CREATE DATABASE IF NOT EXISTS test_aq2vmzly 
CREATE TABLE test_423B45515A7165547750385A61752C22664C5D2A46527D6B2F3525204E765F614B50795725767D3E(x UInt8) Engine=Memory;
SELECT concatWithSeparator('|', 'a', materialize(42 :: LowCardinality(Nullable(UInt32)))) == 'a|42';
SELECT name, database, element_count FROM system.dictionaries WHERE database = '01785_db' AND name = 'simple_key_cache_dictionary';
select (date '2001-10-01' - interval 7 day) x, toTypeName(x);
INSERT INTO test_01193_18429.table_10_307 VALUES 
SELECT t1.id, test_table_join_1.id, t1.value, test_table_join_1.value, t2.id, test_table_join_2.id, t2.value, test_table_join_2.value FROM test_table_join_1 AS t1 INNER JOIN test_table_join_2 AS t2 ON t1.id = t2.id;
EXPLAIN SYNTAX SELECT sum(abs(n) * 2), sum(abs(n) * n), sum(n / abs(n)), sum(1 / abs(n)) FROM (SELECT number n FROM numbers(10));
KILL MUTATION WHERE mutation_id='0000000065' and table like 'concurrent_kill_%' and database='test_bc61bq8k'
CREATE TABLE test_01193_18429.table_2_299 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_00571 ( date Date, platform Enum8('a' = 0, 'b' = 1, 'c' = 2), app Enum8('a' = 0, 'b' = 1) ) ENGINE = MergeTree(date, (platform, app), 8192);
SELECT wordShingleSimHashCaseInsensitive('');
select [0, 0, 2, 2, 0, 0, 0, 11, 10, 4, 9, 1, 6, 4, 0, 0] = multiSearchAllPositions(materialize('bdmfwdisdlgbcidshnhautsye'), ['uxdceftnmnqpveljer', 'xdnh', 'dmf', 'dmfwdisdlgbc', 'cpwnaijpkpyjgaq', 'doquvlrzhusjbxyqcqxvwr', 'llppnnmtqggyfoxtawnngsiiunvjjxxsufh', 'gbcidshnhau', 'lgbcids', 'f', 'dlgbc', 'bdmfwdisdlgbcids', 'disdlgbcidshnhautsy', 'fwdisdlgbcidshn', 'zfpbfc', 'triqajlyfmxlredivqiambigmge']) from system.numbers limit 10;
DROP TABLE test SYNC;
SELECT range(0::Nullable(Int64), 10::Nullable(Int64), 2::Nullable(Int64));
SELECT 'Running test stateless/02269_insert_select_with_format_without_schema_inference.sql from pid=1715' 
select is_blocked, error_count, data_files, data_compressed_bytes, broken_data_files, broken_data_compressed_bytes from system.distribution_queue where database = currentDatabase();
SELECT 'Running test stateless/01516_date_time_output_format.sql from pid=1718' 
INSERT INTO test_01193_18429.table_2_450 VALUES 
SELECT toIntervalMinute(-1);
SELECT dictGet('ssd_cache_dictionary', 'array_value', toUInt64(1));
SELECT materialize([[13], [14]])[3::Int8];
DROP TABLE IF EXISTS t_json_partitions;
CREATE DATABASE IF NOT EXISTS test_pop9p23f 
select polygonsDistanceSpherical([[[(23.725750, 37.971536)]]], [[[(4.3826169, 50.8119483)]]]);
CREATE TABLE test_515722304F355E7C215A666F333E522D225D266B7A7127516F60466C467869785855253D682D7B71(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_spyix5jz 
SELECT countIf(explain like '%COMMA%' OR explain like '%CROSS%'), countIf(explain like '%INNER%') FROM ( EXPLAIN SYNTAX SELECT t1.a FROM t1, t2, t3, t4 WHERE t3.a = t1.a AND t3.a = t2.a AND t3.a = t4.a);
SELECT k, sumMerge(d), avgMerge(af_avg1) FROM agg_func_col GROUP BY k ORDER BY k;
CREATE TABLE test_01193_18429.table_9_751 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT Title, round(1000 * distance) FROM test_distance ORDER BY ngramDistanceUTF8(Title, extract(Title, 'ÃÂºÃÂ°ÃÂº ÃÂ´ÃÂµÃÂ»ÃÂ°')) as distance, Title;
SELECT 1 / CAST(NULL, 'Nullable(Decimal(7, 2))');
SELECT max(x) FROM select_final FINAL where string = 'updated';
CREATE TABLE test_01193_18429.table_7_14 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_7_966 VALUES 
select * from dist_01071;
INSERT INTO test_01193_18429.table_7_679 VALUES 
CREATE DATABASE IF NOT EXISTS test_yby9i7gp 
SELECT CASE WHEN 1 THEN [col2, col3] WHEN (col1 % 3) = 0 THEN [col4, 'bar'] ELSE ['foo', col7] END FROM multi_if_check;
SELECT [1, 2, 3, 11] = arraySort(multiMatchAllIndices(materialize('ÃÂÃÂ°ÃÂ±ÃÂÃÂ¸ÃÂºÃÂ°ÃÂ½ÃÂ'), materialize(['', 'ÃÂÃÂ¸ÃÂºÃÂ°ÃÂ½', 'ÃÂ°', 'f[ae]b[ei]rl', 'ÃÂ[ÃÂ¸ÃÂ°ÃÂÃÂµ]ÃÂ±[ÃÂµÃÂÃÂ¸][ÃÂÃÂ¿ÃÂ»]', 'ÃÂ°ÃÂÃÂ¸ÃÂÃÂºÃÂ´', 'a[ft],th', '^ÃÂ[ÃÂ°ÃÂ¸ÃÂµÃÂ]?ÃÂ±?[ÃÂµÃÂÃÂ¸]?$', 'ÃÂ±ÃÂµÃÂÃÂ»ÃÂ¸ÃÂº', 'fab', 'ÃÂÃÂ°[ÃÂ±ÃÂµÃÂÃÂ²]+ÃÂµ?[ÃÂÃÂ»ÃÂºÃÂ¾]'])));
DROP DATABASE IF EXISTS test_n6wab8c8 
SELECT domainRFC('[2001::db\81]:80') FORMAT CSV;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt64(1) WHEN (number % 3) = 0 THEN toUInt8(2) ELSE toUInt16(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_2_918 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_1_915 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT * FROM bf_ngrambf_map_values_test WHERE map['K2'] != 'V2' SETTINGS force_data_skipping_indices='map_values_ngrambf';
SELECT bitmapHasAny(bitmapBuild([1, 2, 3, 5]),bitmapBuild([0, 4, 7]));
SELECT substringUTF8(materialize(''), -9223372036854775808) FROM numbers(7);
drop table if exists mapop_test;
SELECT 'Running test stateless/02247_written_bytes_quota.sh from pid=1705' 
ALTER TABLE table_for_concurrent_alter MODIFY SETTING parts_to_throw_insert = 147, parts_to_delay_insert = 147, min_merge_bytes_to_use_direct_io = 147
CREATE DATABASE IF NOT EXISTS test_siu1w56t 
SELECT 32768, -9223372036854775807, 32768 = -9223372036854775807, 32768 != -9223372036854775807, 32768 < -9223372036854775807, 32768 <= -9223372036854775807, 32768 > -9223372036854775807, 32768 >= -9223372036854775807, -9223372036854775807 = 32768, -9223372036854775807 != 32768, -9223372036854775807 < 32768, -9223372036854775807 <= 32768, -9223372036854775807 > 32768, -9223372036854775807 >= 32768 , toUInt16(32768) = toInt64(-9223372036854775807), toUInt16(32768) != toInt64(-9223372036854775807), toUInt16(32768) < toInt64(-9223372036854775807), toUInt16(32768) <= toInt64(-9223372036854775807), toUInt16(32768) > toInt64(-9223372036854775807), toUInt16(32768) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toUInt16(32768), toInt64(-9223372036854775807) != toUInt16(32768), toInt64(-9223372036854775807) < toUInt16(32768), toInt64(-9223372036854775807) <= toUInt16(32768), toInt64(-9223372036854775807) > toUInt16(32768), toInt64(-9223372036854775807) >= toUInt16(32768) , toUInt32(32768) = toInt64(-9223372036854775807), toUInt32(32768) != toInt64(-9223372036854775807), toUInt32(32768) < toInt64(-9223372036854775807), toUInt32(32768) <= toInt64(-9223372036854775807), toUInt32(32768) > toInt64(-9223372036854775807), toUInt32(32768) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toUInt32(32768), toInt64(-9223372036854775807) != toUInt32(32768), toInt64(-9223372036854775807) < toUInt32(32768), toInt64(-9223372036854775807) <= toUInt32(32768), toInt64(-9223372036854775807) > toUInt32(32768), toInt64(-9223372036854775807) >= toUInt32(32768) , toInt32(32768) = toInt64(-9223372036854775807), toInt32(32768) != toInt64(-9223372036854775807), toInt32(32768) < toInt64(-9223372036854775807), toInt32(32768) <= toInt64(-9223372036854775807), toInt32(32768) > toInt64(-9223372036854775807), toInt32(32768) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toInt32(32768), toInt64(-9223372036854775807) != toInt32(32768), toInt64(-9223372036854775807) < toInt32(32768), toInt64(-9223372036854775807) <= toInt32(32768), toInt64(-9223372036854775807) > toInt32(32768), toInt64(-9223372036854775807) >= toInt32(32768) , toUInt64(32768) = toInt64(-9223372036854775807), toUInt64(32768) != toInt64(-9223372036854775807), toUInt64(32768) < toInt64(-9223372036854775807), toUInt64(32768) <= toInt64(-9223372036854775807), toUInt64(32768) > toInt64(-9223372036854775807), toUInt64(32768) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toUInt64(32768), toInt64(-9223372036854775807) != toUInt64(32768), toInt64(-9223372036854775807) < toUInt64(32768), toInt64(-9223372036854775807) <= toUInt64(32768), toInt64(-9223372036854775807) > toUInt64(32768), toInt64(-9223372036854775807) >= toUInt64(32768) , toInt64(32768) = toInt64(-9223372036854775807), toInt64(32768) != toInt64(-9223372036854775807), toInt64(32768) < toInt64(-9223372036854775807), toInt64(32768) <= toInt64(-9223372036854775807), toInt64(32768) > toInt64(-9223372036854775807), toInt64(32768) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toInt64(32768), toInt64(-9223372036854775807) != toInt64(32768), toInt64(-9223372036854775807) < toInt64(32768), toInt64(-9223372036854775807) <= toInt64(32768), toInt64(-9223372036854775807) > toInt64(32768), toInt64(-9223372036854775807) >= toInt64(32768) 
CREATE TABLE test_28426A642F53694579506C7B7E6C5A4D7E50243E217A38673C302C4D32215F217B6F7827714D472E(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02517_infer_uint64_in_case_of_int64_overflow.sh from pid=1726' 
explain pipeline select * from tbl_8parts_3granules_rnd final settings max_threads = 16, do_not_merge_across_partitions_select_final = 0;
CREATE TABLE test_01193_18429.table_6_31 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT '333' = t1.key FROM t1 INNER ANY JOIN t2_nullable as t2 ON t1.id == t2.id AND (t2.key == t2.key2 OR isNull(t2.key2)) AND t1.key == t1.key2 AND t1.key2 == '333';
DROP TABLE test_01532_4;
INSERT INTO test_01193_18429.table_1_460 VALUES 
SELECT TIMESTAMPSUB(YEAR, 1, DATE '2022-01-01');
INSERT INTO src VALUES /* (-28, 1) */ 
SELECT arrayConcat(a, nest.a) AS x, toTypeName(x) FROM decimal;
SELECT CASE WHEN 1 THEN [col2, 'bar'] WHEN 1 THEN [col4, col5] ELSE ['foo', col7] END FROM multi_if_check;
select deltaSumMerge(rows) as delta_sum from ( select * from ( select deltaSumState(arrayJoin([3, 5])) as rows union all select deltaSumState(arrayJoin([1, 2])) as rows union all select deltaSumState(arrayJoin([4, 6])) as rows ) order by rows ) order by delta_sum;
SELECT round(1000000 / (number + 1)) AS k, count() AS c, arrayMap(x -> round(x, 6), quantilesDeterministic(0.1, 0.5, 0.9)(number, intHash64(number))) AS q1, quantilesExact(0.1, 0.5, 0.9)(number) AS q2 FROM (SELECT number FROM system.numbers LIMIT 1000000) GROUP BY k ORDER BY k;
DROP DATABASE IF EXISTS test_sbzxfcr5 
CREATE TABLE test_4A797548295D20616A24724B6C75646A74535670606B3F2E35302A6B527E2C4D6056737E332A5940(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02725_null_group_key_with_rollup.sql from pid=1713' 
SELECT CASE WHEN (number % 2) = 0 THEN toUInt16(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toInt32(3) END FROM system.numbers LIMIT 10;
SELECT '-- insert after rename column --';
CREATE DATABASE IF NOT EXISTS test_6oigbcur 
SELECT xxHash32([], []);
select 114 from test54378 where date in ('2018-04-19');
ALTER TABLE concurrent_alter_column ADD COLUMN c109 DOUBLE;
DROP DATABASE IF EXISTS test_2dkghn1d 
DROP TABLE IF EXISTS alt_persons_02240;
CREATE TABLE test_4E52632A327C644D7B44693926207D6F7B6E4A476A332B5E6157613D3D313B6C3A333F4D696D503B(x UInt8) Engine=Memory;
with 123 as pid select a.col1, sum(a.col2) as summ from table1 a prewhere (pid is null or a.col2 = pid) group by a.col1;
INSERT INTO r6 SELECT 17 % 10 = 6 ? 17 - 1 : 17
INSERT INTO test_01193_18429.table_10_284 VALUES 
INSERT INTO hit SELECT * FROM generateRandom() LIMIT 10;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt8(1), toInt8(2)] WHEN (number % 3) = 0 THEN [toFloat32(2), toFloat32(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
INSERT INTO line_as_string1 FORMAT LineAsString
INSERT INTO test_01193_18429.table_1_916 VALUES 
SELECT 'Running test stateless/01682_gather_utils_ubsan.sql from pid=1715' 
SELECT 'Running test stateless/01499_log_deadlock.sql from pid=1715' 
SELECT avgWeighted(x, w) FROM values('x Int64, w Int64', (0, 0), (1, 0));
OPTIMIZE TABLE not_partitioned PARTITION tuple() FINAL;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 23499, 500 settings ignore_materialized_views_with_dropped_target_table=1
INSERT INTO test_01193_18429.table_7_233 VALUES 
SELECT currentDatabase()
select substringIndex(materialize('www.clickhouse.com'), '.', 4);
SELECT 'Running test stateless/00646_url_engine.sh from pid=1714' 
SELECT 3, 11, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (3 < 13 AND 11 > 0 ? 3 : 0)), throwIf(last != (3 < 13 AND 11 > 0 ? least(13 - 1, 3 + 11 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 3, 11);
CREATE TABLE set_crash (`key1` Int32, `id1` Int64, `c1` Int64) ENGINE = MergeTree PARTITION BY id1 ORDER BY key1 SETTINGS index_granularity = 24064, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8787, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 8130563326, index_granularity_bytes = 13137194, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 22515, primary_key_compress_block_size = 76255
CREATE TABLE test_58415B21226D425C225C52293968626F4B286E63226367666C645D6442472864794F7841397D6C22(x UInt8) Engine=Memory;
CREATE TABLE test_736D7176746A32266D224E364E4221614B5D472760427B2641505D31612B4D52465B48396857202B(x UInt8) Engine=Memory;
alter table many_mutations delete where y = 522 * 2 settings mutations_sync = 0;
SELECT 'Running test stateless/00124_shard_distributed_with_many_replicas.sql from pid=1718' 
SELECT count() FROM t_cnf_fuzz WHERE (c4 AND c7 AND (NOT c0) AND (NOT c1)) OR (c5 AND c4 AND c1 AND c2) OR ((NOT c5) AND c1 AND c5 AND (NOT c0) AND (NOT c3)) OR ((NOT c1)) OR (c5) OR (c8 AND c6 AND c3 AND c8) SETTINGS convert_query_to_cnf = 0
INSERT INTO test_01193_18429.table_9_488 VALUES 
SELECT s, nest.x, nest.y FROM nested_test ARRAY JOIN nest;
SELECT * FROM data_01285 WHERE assumeNotNull(value) = 3;
SELECT avgWeighted(x, w) FROM values('x Int8, w UInt16', (0, 0), (1, 0));
SELECT value FROM system.events WHERE event == 'PerfAlignmentFaults';
CREATE TABLE test_01193_18429.table_7_439 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_8_636 VALUES 
INSERT INTO test_01193_18429.table_8_252 VALUES 
CREATE TABLE test1_00395(col1 Nullable(String), col2 Nullable(UInt8), col3 String) ENGINE=TinyLog;
CREATE TABLE test_01193_18429.table_1_837 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_474277564C6E662722643822242B3252796B412A6A58522875513D3967632F312D6D31657952775B(x UInt8) Engine=Memory;
SELECT 7;
SHOW CREATE TABLE rmt;
INSERT INTO src VALUES /* (82, 1) */ 
CREATE TABLE test_02908_r1_146 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_146', 'r1') ORDER BY tuple()
CREATE TABLE test_01193_18429.table_10_149 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_5_843 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT s, replaceAll(s, '_', 'oo') AS a, replaceRegexpAll(s, '_', 'oo') AS b, a = b FROM (SELECT arrayJoin(['.', '._']) AS s);
SELECT FROM_UNIXTIME(toDateTime('2018-01-02 22:33:44'), '%M'), FROM_UNIXTIME(toDate32('2018-01-02'), '%M');
CREATE TABLE test_01193_18429.table_7_330 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_203A5C2142437E5A20306F503C293F3F625C346D33566D4A214F48413A5F7D225C2F7C53644C5726(x UInt8) Engine=Memory;
select '-------toRelativeQuarterNum---------';
select addMicroseconds(toDateTime64('1980-12-12 12:12:12.12345678', 8), 1);
select 1 = multiSearchAnyCaseInsensitiveUTF8(materialize('ÃÂÃÂ±ÃÂ¹ÃÂ½ÃÂ ÃÂÃÂÃÂ§ÃÂÃÂÃÂÃÂÃÂÃÂÃÂ¿ÃÂÃÂ¤ÃÂ½ÃÂÃÂ¨ÃÂ¤ÃÂ±ÃÂ³ÃÂÃÂ°'), ['ÃÂÃÂÃÂ³', '', 'ÃÂ°ÃÂ¿ÃÂ§ÃÂÃÂÃÂÃÂ¨ÃÂÃÂ±', 'ÃÂÃÂ½ÃÂ ÃÂÃÂ©ÃÂ§ÃÂÃÂÃÂÃÂ³ÃÂÃÂÃÂÃÂ§ÃÂ', 'ÃÂ¥ÃÂÃÂÃÂ§ÃÂ¶ÃÂ©ÃÂ§ÃÂ³ÃÂ¾ÃÂÃÂ¿ÃÂ', 'ÃÂ¥ÃÂÃÂÃÂ§ÃÂ¶ÃÂÃÂÃÂÃÂ¾', 'ÃÂ½ÃÂÃÂ§ÃÂ¶ÃÂÃÂÃÂÃÂÃÂ°', 'ÃÂÃÂÃÂ©ÃÂ§ÃÂÃÂ¾ÃÂ°ÃÂ¿ÃÂ§ÃÂ¤ÃÂÃÂ»', 'ÃÂ¾ÃÂ°ÃÂ¿ÃÂÃÂ¤', 'ÃÂÃÂ§ÃÂÃÂÃÂÃÂ¿ÃÂ§ÃÂ¤ÃÂÃÂ»ÃÂÃÂ¤', 'ÃÂ©ÃÂ§ÃÂÃÂÃÂÃÂ¿ÃÂ§ÃÂ¤ÃÂÃÂÃÂÃÂÃÂÃÂ³', 'ÃÂÃÂÃÂÃÂ ÃÂ½ÃÂÃÂÃÂÃÂÃÂÃÂÃÂ¾ÃÂ°ÃÂÃÂ§ÃÂ¤ÃÂÃÂÃÂ¨ÃÂ¤ÃÂÃÂ³ÃÂ', 'ÃÂÃÂ°ÃÂ¿ÃÂ§ÃÂÃÂ½', 'ÃÂ', 'ÃÂÃÂ³ÃÂ»ÃÂ', 'ÃÂ', 'ÃÂÃÂÃÂ±ÃÂ', 'ÃÂ¥ÃÂ½ÃÂ©ÃÂ§ÃÂÃÂÃÂÃÂÃÂ¾ÃÂ', 'ÃÂ¥ÃÂÃÂÃÂÃÂ¶ÃÂÃÂ§ÃÂ³ÃÂ¾ÃÂ°ÃÂ¿ÃÂ', 'ÃÂ ÃÂÃÂ©ÃÂÃÂ¶ÃÂÃÂ§ÃÂÃÂ¾ÃÂ°ÃÂ¿ÃÂÃÂÃÂ½ÃÂ»ÃÂÃÂ¤ÃÂ±ÃÂ³ÃÂ']) from system.numbers limit 10;
SELECT key, ref_valueI8, valueI8, ref_valueI8 - valueI8 as dI8 FROM codecTest WHERE dI8 != 0 LIMIT 10;
SELECT count(*) FROM distributed WHERE a IN (0, 1) AND b IN (0, 1);
CREATE TABLE IF NOT EXISTS test_01444.t2049 (`x` UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 49736, min_bytes_for_wide_part = 645103364, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 6, merge_max_block_size = 15200, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 21360504, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75390, primary_key_compress_block_size = 98921
select b, length(b) as l from tab_00717 group by b, l, l + 1 order by b;
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat32(1), toFloat32(2)] WHEN (number % 3) = 0 THEN [toUInt32(2), toUInt32(3)] ELSE [toFloat64(3), toFloat64(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_74606A5B487D387E505D552D563B2C73263E465E594D58396B575964497172664A74503275714A37(x UInt8) Engine=Memory;
select 11 > all (select 11 from numbers(10));
SELECT * FROM file('/var/lib/clickhouse/user_files/02661_read_from_archive_test_fv9w6ph7_zip_archive{1..2}.zip :: 02661_read_from_archive_test_fv9w6ph7_zip_data1.csv') ORDER BY 1, 2
SELECT nx, ny FROM nested ARRAY JOIN nest.x AS nx, nest.y AS ny WHERE notEmpty(nest.y);
INSERT INTO test_01193_18429.table_7_605 VALUES 
CREATE TABLE shard_1.data_02346 (`x` UInt32, `y` String) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 2, min_bytes_for_wide_part = 737558200, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 97, merge_max_block_size = 5966, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 44, min_merge_bytes_to_use_direct_io = 1499944448, index_granularity_bytes = 1558636, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 59554, primary_key_compress_block_size = 31854
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (39 < 90 AND 88 > 0 ? 39 : 0)), throwIf(last != (39 < 90 AND 88 > 0 ? least(90 - 1, 39 + 88 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(90) LIMIT 39, 88);
SELECT x FROM t GROUP BY x WITH TOTALS;
DROP DATABASE IF EXISTS test_73owvbql 
INSERT INTO test_01193_18429.table_2_918 VALUES 
insert into t3 select number from numbers_mt(1e6);
insert into tab3 values 
DROP DATABASE IF EXISTS test_q5mvu7kr 
INSERT INTO test_01193_18429.table_8_798 VALUES 
CREATE PROFILE s5_01294 SETTINGS profile readonly, readonly=1;
CREATE DATABASE IF NOT EXISTS test_pvw0pxn6 
select hex(sipHash64Keyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60)));
INSERT INTO test_01193_18429.table_10_469 VALUES 
CREATE DICTIONARY dict (key UInt64, value UInt64) PRIMARY KEY key SOURCE(CLICKHOUSE(TABLE dict_data)) LIFETIME(0) LAYOUT(FLAT(INITIAL_ARRAY_SIZE 3_000_000 MAX_ARRAY_SIZE 3_000_000));
select minMap(val, cnt) from values ('val Array(DateTime(\'Asia/Istanbul\')), cnt Array(Int32)', ([1], [1]), ([1], [2]));
CREATE TABLE test_4D2D486E3E54404A44326B3634473522572330654F356E2E7D2054575E40335C7958643678453638(x UInt8) Engine=Memory;
SELECT 3, 4, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (3 < 13 AND 4 > 0 ? 3 : 0)), throwIf(last != (3 < 13 AND 4 > 0 ? least(13 - 1, 3 + 4 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 3, 4);
SELECT farmHash64([], []);
CREATE TABLE test_55676946695F602F7A63533D6C3D48775346274E456367517B3C2951205269445751243660592046(x UInt8) Engine=Memory;
SELECT transform(number, [2, 4, 6], ['google', 'yandex', 'yahoo'], 'other') as x FROM numbers(10) GROUP BY x ORDER BY x;
insert into distr select number from numbers(100);
OPTIMIZE TABLE src FINAL;
CREATE INDEX idx_tab2_5 ON tab2 (col0,col4 DESC);
select 0 = multiSearchFirstPositionUTF8('\0', CAST([], 'Array(String)'));
SELECT 'Running test stateless/02705_settings_check_changed_flag.sql from pid=1720' 
CREATE TABLE t_arr (a Array(UInt32)) ENGINE = MergeTree ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0;
insert into t5 select number from numbers_mt(1e6);
SELECT number, number % 2, sum(number) AS val FROM numbers(10) GROUP BY GROUPING SETS ( (number), (number % 2) ) ORDER BY (number, number % 2, val) SETTINGS group_by_use_nulls = 0;
CREATE TABLE test_01193_18429.table_4_212 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP DATABASE IF EXISTS test_xq47pyua 
CREATE TABLE nested1 (d Date DEFAULT '2000-01-01', x UInt64, n Nested(a String, b String)) ENGINE = MergeTree(d, x, 1);
CREATE TABLE test_6E232E4F7537353C255F4B5770602B6B2D2E243C25717D387B343369526534303D6F794F69652A77(x UInt8) Engine=Memory;
SELECT count() FROM test WHERE x <= '100000';
CREATE TABLE mem_test ( `a` Int64, `b` Int64 ) ENGINE = Memory;
DROP TABLE IF EXISTS markdown;
CREATE TABLE test_01193_18429.table_9_155 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT date_trunc('minute', toDateTime64('2020-01-01 20:11:22.123', 3, 'Europe/London'), 'Asia/Tokyo');
CREATE TABLE test_01193_18429.table_3_211 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
alter table src modify column C LowCardinality(String);
DROP TABLE t2_shard;
CREATE TABLE segfault (`id` UInt32, `uuid` UUID, `tags_ids` Array(UInt32)) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 52584, min_bytes_for_wide_part = 157210247, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 71, merge_max_block_size = 14797, prefer_fetch_merged_part_size_threshold = 7157208351, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 9274280, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 27046, primary_key_compress_block_size = 53061
INSERT INTO dst_4 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 4
CREATE TEMPORARY TABLE table_gcd_codec_datetime64 (n DateTime64(3, 'Asia/Istanbul') CODEC(GCD, LZ4)) ENGINE = Memory;
SELECT CASE WHEN (number % 2) = 0 THEN toInt64(1) WHEN (number % 3) = 0 THEN toInt16(2) ELSE toInt32(3) END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_9_601 VALUES 
INSERT INTO test_with_merge SELECT 1;
SELECT 'Running test stateless/02314_csv_tsv_skip_first_lines.sql from pid=1705' 
SELECT 'tn1 ANY INNER JOIN t2 | bs = 1';
INSERT INTO test_01193_18429.table_7_776 VALUES 
DROP TABLE dst_6
DROP DATABASE IF EXISTS test_ag88t61l 
SELECT 'Running test stateless/02131_remove_columns_in_subquery.sql from pid=1713' 
CREATE TABLE test_6127722552494F675C41206F7A53236B3550577A79342439262C6B2F7375424E677148463B674F22(x UInt8) Engine=Memory;
SELECT dictGetFloat32('db_01268.dict3', 'parent_region', toUInt64(1));
EXISTS DICTIONARY db_01048.t_01048;
INSERT INTO test_01193_18429.table_5_358 VALUES 
alter table x add index nn LOG2(i) type minmax granularity 1, add projection p2 (select MIN(i));
SELECT toUInt128(NULL);
CREATE TABLE test_table_nullable_signed_values ( id UInt64, value1 Nullable(Int8), value2 Nullable(Int16), value3 Nullable(Int32), value4 Nullable(Int64) ) ENGINE=TinyLog;
insert into src_table select * from numbers(2);
DROP TABLE t2 SYNC;
SELECT multiIf((number % 2) = 0, toUInt16(1), (number % 3) = 0, toUInt8(2), toUInt8(3)) FROM system.numbers LIMIT 10;
ALTER TABLE dst_r1 REPLACE PARTITION 1 FROM dst_r1;
SELECT '*** Test CLEAR COLUMN ***';
INSERT INTO test_01193_18429.table_7_437 VALUES 
select * from dist_01223 having key = 1;
select null as offset, 'Hello' as s, subString(bin(s), offset), bin(bitSlice(s, offset));
CREATE TABLE test_295C3F75635043252B3540436277283477456C6F353F456571203F727B4F722A314026774D7D6637(x UInt8) Engine=Memory;
select * from file('test_02167.messagepack', 'MsgPack', 'x UInt64')
SELECT CASE WHEN (number % 2) = 0 THEN [toInt16(1), toInt16(2)] WHEN (number % 3) = 0 THEN [toInt16(2), toInt16(3)] ELSE [toUInt16(3), toUInt16(3)] END FROM system.numbers LIMIT 10;
SELECT * FROM agg_table;
CREATE TABLE test_01193_18429.table_7_866 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT toUInt8(NULL);
CREATE TABLE test_01193_18429.table_7_578 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_7A7731295456306059466D5C5828482C33515B49783A6B3645303470457E65602E6C54585A5E2475(x UInt8) Engine=Memory;
select 1 = position('abcdefgh', materialize('abcde'));
SELECT 'Running test stateless/00132_sets.sql from pid=1714' 
SELECT '(-160.32605134916085,37.70584056842162),' FROM numbers(1000000)
SELECT dictGet('range_hashed_dictionary', 'value', toUInt64(1), toUInt64(18446744073709551615));
INSERT INTO r3 SELECT 57
CREATE TABLE test_01193_18429.table_1_746 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT count() FROM t_cnf_fuzz WHERE (c5 AND (NOT c9) AND c2 AND (NOT c2) AND (NOT c5)) OR ((NOT c1) AND (NOT c2) AND (NOT c4) AND (NOT c5) AND c4) OR (c7 AND (NOT c4) AND (NOT c4)) OR (c2 AND (NOT c6) AND c1 AND c8 AND (NOT c9)) OR (c5 AND (NOT c5)) SETTINGS convert_query_to_cnf = 1
SELECT d1, f1, d1 - f1 FROM t ORDER BY f1;
CREATE TABLE test_01193_18429.table_8_385 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP TABLE IF EXISTS mv2;
CREATE TABLE test_46787168544A2B39234D644B232F66614E676B4524487972792D627538353E576B3F3965397C7957(x UInt8) Engine=Memory;
INSERT INTO test_whitespace SETTINGS format_csv_delimiter=' ', input_format_csv_allow_whitespace_or_tab_as_delimiter=true FORMAT CSV
CREATE TABLE test_01193_18429.table_5_324 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
alter table t delete where n global in (select t1.n from t as t1 full join t as t2 on t1.n=t2.n where t1.n global in (select 2::Int32))
DROP DATABASE IF EXISTS test_lazy_01014_concurrent_test_bo56il5m;
SELECT s2GetNeighbors(arrayJoin([1157339245694594829, 5074766849661468672]));
select 1 = multiSearchAny(materialize('abcdefgh'), ['efg']);
DROP DATABASE IF EXISTS test_hptbb1gt 
INSERT INTO src_0 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 60
ALTER TABLE concurrent_alter_column ADD COLUMN c340 DOUBLE;
CREATE TABLE 02661_archive_table Engine=File('CSV', '/var/lib/clickhouse/user_files/02661_read_from_archive_test_vdj32cgq_tar_archive{1,2}.tar :: 02661_read_from_archive_test_vdj32cgq_tar_data{1,3}.csv')
CREATE TABLE t ENGINE = Log AS SELECT * FROM system.numbers LIMIT 20;
DROP DATABASE IF EXISTS test_c4fy0gvu 
INSERT INTO dst_11 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 9
CREATE TABLE IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_6 (id Int32, str String) Engine=Memory;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toInt32(-1) != N as r FORMAT CSV;
select a, c from t1 join t2 on a = c;
SELECT toTypeName(x) FROM (SELECT toDecimal32('12345.00', 4) AS x UNION ALL SELECT toUInt64(0) AS x) WHERE x = 0;
INSERT INTO test_01193_18429.table_7_507 VALUES 
optimize table tt final /*all_1_2_8*/
SELECT toUnixTimestamp('2017-11-05 08:07:47', 'Asia/Istanbul');
select * from t where i < 5 and j in (1, 2);
DROP TABLE test_00690;
SELECT count() FROM system.processes WHERE query_id LIKE '01167_isolation_hermitage_test_bvbtk2qs_tx5%'
SELECT accurateCastOrDefault(nan, 'UInt256'), accurateCastOrDefault(nan, 'UInt256', toUInt256(5));
CREATE DATABASE IF NOT EXISTS test_oqtk8d1i 
CREATE TABLE test_3563282031244049425859445A483041285940456D352A793133782A7364582C477575297A264F5E(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_na6mzz46 
DROP DATABASE IF EXISTS test_qghofjre 
select a1, b2 from tab1 full join tab2 on b1 + 1 = a2 + 1 or a1 + 4 = b2 + 2 ORDER BY a1, b2;
INSERT INTO test_01193_18429.table_6_239 VALUES 
INSERT INTO test_01193_18429.table_6_446 VALUES 
SELECT s, replaceAll(s, '_', 'oo') AS a, replaceRegexpAll(s, '_', 'oo') AS b, a = b FROM (SELECT arrayJoin(['_.', '.']) AS s);
 INSERT INTO join_block_test SELECT toString(number) as id, number * number as num FROM system.numbers LIMIT 500000 
SELECT toTypeName(map(toLowCardinality('1'), toLowCardinality('2')));
SELECT quantiles(0.5)(arrayJoin([inf, 0, -inf]));
SELECT * FROM (SELECT toLowCardinality(toNullable(dummy)) AS val FROM system.one) s1 ANY LEFT JOIN (SELECT toLowCardinality(toNullable(dummy)) AS val FROM system.one) s2 USING val ORDER BY val;
SELECT `UserID` FROM `test_c5zukzwt`.`users` WHERE `UserID` IN ((SELECT arrayJoin([1468013291393583084, 1321770221388956068])) AS `_subquery3829`)
CREATE TABLE test1 (`id` String, `time` DateTime64(9), `key` Int64, `value` Bool) ENGINE = MergeTree PARTITION BY toYYYYMM(time) ORDER BY (key, id, time) SETTINGS index_granularity = 48567, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 15, merge_max_block_size = 23556, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 17295326, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 55903, primary_key_compress_block_size = 26345
INSERT INTO r9 SELECT 52 % 10 = 9 ? 52 - 1 : 52
select accurateCastOrNull(0, 'Bool');
INSERT INTO test_01193_18429.table_10_408 VALUES 
INSERT INTO r1 SELECT 26 % 10 = 1 ? 26 - 1 : 26
SELECT 4, 7, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (4 < 13 AND 7 > 0 ? 4 : 0)), throwIf(last != (4 < 13 AND 7 > 0 ? least(13 - 1, 4 + 7 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 4, 7);
CREATE TABLE tmp_01375 (n UInt32, s String) ENGINE = Memory;
SELECT categoricalInformationValue(x.1, x.2) FROM ( SELECT arrayJoin([(0, 1), (0, 1), (1, 1), (1, 1)]) as x );
CREATE DATABASE test_01383;
INSERT INTO test_01193_18429.table_3_387 VALUES 
SELECT `UserID` FROM `test_c5zukzwt`.`users` WHERE `UserID` IN ((SELECT arrayJoin([1468013291393583084, 1321770221388956068])) AS `_subquery3752`)
CREATE TABLE test_7C614A36575F2430204D2E616E5C746941436A6941594F356B71342065406C582C307D2A537E3B62(x UInt8) Engine=Memory;
SELECT multiIf((number % 2) = 0, toInt64(1), (number % 3) = 0, toInt8(2), toInt32(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_2_623 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT JSONExtractUInt(NULL);
SELECT sumMapFilteredMerge([1, 2])(*) FROM remote('127.0.0.{1,2}', view(SELECT sumMapFilteredState([1, 2])([1, 2, 3], [10, 10, 10])));
SELECT id, L1Norm(materialize([5., 6.])) FROM vec1;
SELECT * FROM bf_tokenbf_map_keys_test WHERE map_fixed['K3'] = '';
SELECT map('a', 1, 'b', 2) FROM remote('127.0.0.{1,2}', system, one);
ALTER TABLE alter_test ADD COLUMN Added1 UInt32 AFTER Added0;
CREATE DATABASE IF NOT EXISTS test_wqze2v0s 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (65 < 11 AND 10 > 0 ? 65 : 0)), throwIf(last != (65 < 11 AND 10 > 0 ? least(11 - 1, 65 + 10 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(11) LIMIT 65, 10);
SELECT stringJaccardIndexUTF8(materialize('hello'), materialize('\x41\xE2\x82\xAC'));
SELECT has([(a, b), (c, d)], (b, c)) FROM (SELECT materialize(1) AS a, materialize(2) AS b, materialize(3) AS c, 4 AS d);
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toUInt32(2), toUInt32(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_5_943 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (50 < 34 AND 24 > 0 ? 50 : 0)), throwIf(last != (50 < 34 AND 24 > 0 ? least(34 - 1, 50 + 24 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(34) LIMIT 50, 24);
CREATE TABLE Beta (foo LowCardinality(String), baz UInt64) ENGINE = Memory;
CREATE TABLE test_745925307B41482E4F2355567730783C50217D31522C2E6F216C6C432064722524295E685D24687B(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS 01766_db;
SELECT 'Running test stateless/01825_type_json_partitions.sql from pid=1720' 
CREATE DATABASE IF NOT EXISTS test_upoaeb7h 
INSERT INTO table4 SELECT number, number, toString(number) FROM numbers(1000);
CREATE TABLE test_01193_18429.table_10_973 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT toStartOfInterval(NULL, NULL);
SELECT shardNum() AS `_shard_num`, `key` FROM `test_rzij4415`.`dist_2` ORDER BY `_shard_num` ASC, `key` ASC
select toStartOfInterval(toDateTime64('2220-12-12 12:12:12.123456789', 9), INTERVAL 1 NANOSECOND);
INSERT INTO test_01193_18429.table_1_608 VALUES 
SELECT 'ÃÂ±' AS str, punycodeEncode(str) AS puny, punycodeDecode(puny) AS original, tryPunycodeDecode(puny) AS original_try;
CREATE TABLE test_01193_18429.table_1_244 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select parseDateTime('08', '%M', 'UTC') = toDateTime('1970-01-01 00:08:00', 'UTC');
SELECT `local_00952`.`date` FROM `test_lfm0vlkf`.`local_00952`
SELECT CAST(replicate(['a'], [1]) AS String);
DROP DATABASE IF EXISTS test_q1xx96fh 
CREATE DATABASE IF NOT EXISTS test_t3fygabq 
INSERT INTO test_01193_18429.table_4_37 VALUES 
SELECT toFloat64(-1);
select * from values('s LowCardinality(Nullable(String))', (NULL));
SELECT extractTextFromHTML('<![CDATA[<sender>John ]]><![CDATA[Smith</sender>]]>');
desc format(JSONEachRow, '{"x" : "123"}');
DROP DATABASE IF EXISTS test_pehlnr20 
INSERT INTO 02563_db.test_merge_table_1 VALUES 
SELECT 'Running test stateless/02943_exprs_order_in_group_by_with_rollup.sql from pid=1714' 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), CAST(N as DateTime64(6, 'Europe/Minsk')) as r FORMAT CSV;
select polygonConvexHullCartesian([[[(0., 0.), (0., 5.), (5., 5.), (5., 0.), (2., 3.)]]]);
SELECT 'Running test stateless/01544_errorCodeToName.sql from pid=1718' 
INSERT INTO test_01193_18429.table_9_998 VALUES 
CREATE TABLE test_01193_18429.table_8_409 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT intDivOrZero(toDecimal64(4.4, 2), toDecimal64(2.2, 2));
DROP DATABASE IF EXISTS test_32fp5rvo 
CREATE TABLE IF NOT EXISTS parallel_ddl(a Int) ENGINE = Memory
SELECT name, round(polygonAreaSpherical(p), 6) from country_rings
CREATE USER u8_01292 HOST LIKE '%';
INSERT INTO r1 SELECT 21 % 10 = 1 ? 21 - 1 : 21
SELECT Title, round(1000 * distance) FROM test_entry_distance ORDER BY ngramSearchUTF8(Title, 'metriks') as distance, Title;
SELECT arrayPartialSort(NULL);
select bin('0');
CREATE TABLE test_01193_18429.table_9_341 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_8_882 VALUES 
select cutToFirstSignificantSubdomainCustomRFC('http://www.foo', 'public_suffix_list');
SELECT * FROM squares_protobuf_00825 FORMAT Protobuf SETTINGS format_schema = '/usr/share/clickhouse-test/queries/0_stateless/format_schemas/00825_protobuf_format_squares:NumberAndSquare'
SELECT parseDateTime64BestEffortOrZero(NULL, NULL, NULL);
INSERT INTO dst_8 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 60
CREATE TABLE test_666A69533B54402E6E282E764A33232674696A41475D32687E562A4744762142407B232742304370(x UInt8) Engine=Memory;
SELECT subtractWeeks('2023-10-22', materialize(1)), subtractWeeks('2023-10-22 12:34:56.123', materialize(1));
SELECT cutToFirstSignificantSubdomainRFC('');
INSERT INTO test_01193_18429.table_5_517 VALUES 
CREATE TABLE pk_test4 (a String, b String PRIMARY KEY, c String PRIMARY KEY);
INSERT INTO src_10 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 10
CREATE TABLE test_01193_18429.table_10_897 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_1_59 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT DISTINCT * FROM clear_column2 WHERE d != toDate('2000-03-01') ORDER BY d, i, s
SELECT count() FROM system.mutations WHERE database = 'test_kzou0211' AND table = 'kill_mutation_r1' AND is_done = 0
SELECT 24
SELECT c, d, e FROM t_fixed_prefix WHERE a = 1 ORDER BY c, d, e SETTINGS optimize_read_in_order = 1
DROP DATABASE IF EXISTS test_fnx9p4hq 
SELECT 0x0.e_e;
select distinct on (k1) k2 from remote('127.{1,2}', view(select 1 k1, 2 k2, 3 v), cityHash64(k1, k2));
ALTER TABLE alter_default MODIFY COLUMN other_date DEFAULT 1;
INSERT INTO test_01193_18429.table_9_630 VALUES 
CREATE DATABASE IF NOT EXISTS test_fyi66vcq 
CREATE TABLE test_01193_18429.table_6_690 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN toInt64(1) WHEN (number % 3) = 0 THEN toInt64(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
SELECT max(id) OVER (PARTITION BY id) AS id FROM ( SELECT materialize('aaaa') AS id FROM numbers_mt(1000000) ) FORMAT `Null`;
INSERT INTO test_r9uii7dj.tmp_01683 (n) VALUES
SELECT 'Running test stateless/01198_client_quota_key.sh from pid=1714' 
CREATE TABLE test_01193_18429.table_9_319 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select a3 == 5 OR a3 == 100, b3 from tab2 any left join tab3 on a2 = a3 or b2 = b3 ORDER BY a3, b3;
SELECT arrayZip([0, number], [toString(number), 'world']) FROM numbers(10);
SELECT tupleMinus(materialize(vectorSum(tupleMultiply(materialize((1, 2)), (3, 4)), (5, 6))), (31, 41));
SELECT arrayDifference( cast([10, 1], 'Array(UInt16)'));
CREATE TABLE test_01193_18429.table_8_631 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT arrayFold((acc, x) -> acc + x, materialize(CAST([NULL], 'Array(Nullable(UInt8))')), toUInt64(toNullable(0)));
SELECT SUM(value1) FROM concurrent_alter_mt_5
CREATE TABLE test_01193_18429.table_1_223 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select [1, 2, 3] as arr, arr[id] from array_element_test;
INSERT INTO src_14 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 39
CREATE TABLE test_01193_18429.table_1_518 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_7D337B20726E67772626272E467223345D393B46635268696F2E40675E617B54255E296D703B2A67(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_6_732 VALUES 
SELECT multiIf((number % 2) = 0, toUInt16(1), (number % 3) = 0, toInt16(2), toFloat64(3)) FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_dokgyhxa 
CREATE TABLE test_01193_18429.table_8_440 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select * from xp where i in (select * from numbers(2));
INSERT INTO test_01193_18429.table_9_852 VALUES 
set max_rows_to_read = 5001;
SELECT SVG(p, s) FROM geo ORDER BY id;
SELECT multiIf((number % 2) = 0, [toInt64(1), toInt64(2)], (number % 3) = 0, [toInt32(2), toInt32(3)], [toUInt8(3), toUInt8(3)]) FROM system.numbers LIMIT 10;
SELECT `UserID` FROM `test_c5zukzwt`.`users` WHERE `UserID` IN ((SELECT arrayJoin([1468013291393583084, 1321770221388956068])) AS `_subquery3913`)
INSERT INTO test_01193_18429.table_5_906 VALUES 
drop table if exists in_02231;
CREATE TABLE test_2E675365553C4229263476326351636F464C2857666B6D4B3F3B2A4F293B3D353D70586429585823(x UInt8) Engine=Memory;
CREATE TABLE runningConcurrency_test(begin DateTime, end DateTime) ENGINE = Memory;
CREATE TABLE IF NOT EXISTS flows (`SrcAS` UInt32, `Bytes` UInt64) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 59885, min_bytes_for_wide_part = 449038895, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 12719, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 25998396, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 22240, primary_key_compress_block_size = 58846
select (a, d) in tuple(1, tuple(tuple(1))) from tab_00386
insert into t select 4, sum(number) as c, getSetting('max_threads') as mt from numbers_mt(10000000) group by mt settings max_insert_threads=4, max_threads=2;
alter table many_mutations delete where y = 6 * 2 settings mutations_sync = 0;
CREATE DATABASE IF NOT EXISTS test_hmdfu0cy 
SELECT JSONExtract('{"a":"3333.6333333333333333333333", "b":"test"}', 'Tuple(a Decimal(20,10), b LowCardinality(String))');
INSERT INTO test_01193_18429.table_5_276 VALUES 
alter table many_mutations delete where y = 557 * 2 settings mutations_sync = 0;
CREATE INDEX idx_tab4_0 ON tab4 (col1,col4);
CREATE TABLE t_nested_with_dots (`t.t2` Tuple(`t3.t4.t5` Tuple(`s1.s2` String, `u1.u2` UInt64), `s3.s4.s5` String)) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 39545, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 4, merge_max_block_size = 9044, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 12, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 26774119, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 77073, primary_key_compress_block_size = 28334
SELECT COUNT() FROM t_obj;
SELECT max(x) as k FROM test ORDER BY k;
SELECT count() FROM signed_integer_test_table WHERE toUInt16(val) == 0;
insert into function file(compressed_02735.parquet) select if(number%3==1, NULL, 42) as x from numbers(70) settings output_format_parquet_compression_method='zstd';
insert into tt_null values
CREATE INDEX idx_tab4_3 ON tab4 (col4,col3);
SELECT 8, 8, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (8 < 13 AND 8 > 0 ? 8 : 0)), throwIf(last != (8 < 13 AND 8 > 0 ? least(13 - 1, 8 + 8 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 8, 8);
select format('{}{}{}', 'a', toFixedString('b', 1), toFixedString('c', 1)) == 'abc';
EXPLAIN actions = 1 SELECT A, B, count() FROM test_agg where A = 1 GROUP BY A, B ORDER BY A, B LIMIT 3
SELECT 'Running test stateless/01213_point_in_Myanmar.sql from pid=1715' 
select sum(cityHash64(*)) from file(compressed_02735.parquet);
INSERT INTO test_01193_18429.table_3_181 VALUES 
DROP TABLE IF EXISTS ontime;
CREATE TABLE test_01193_18429.table_1_933 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'JOIN RIGHT';
SET database_atomic_wait_for_drop_and_detach_synchronously=1;
CREATE TABLE test_403F77723D5D337A7D556D706165223859556C613C5664387E6D4A63676F4D5F773F6470787C283B(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_8_710 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT toUUIDOrNull(NULL, NULL);
SELECT toUInt32(0) AS x, toFloat64(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
CREATE TABLE t_transform_or (`B` AggregateFunction(uniq, String), `A` String) ENGINE = MergeTree ORDER BY A SETTINGS index_granularity = 45322, min_bytes_for_wide_part = 418067455, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 76, merge_max_block_size = 7853, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 19, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 10954964, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 81471, primary_key_compress_block_size = 85545
EXPLAIN QUERY TREE SELECT * FROM 02668_logical_optimizer WHERE a = 1 AND 2 = a;
optimize table nested_not_a_map;
DROP TABLE IF EXISTS mann_whitney_test;
select toValidUTF8('\xF4\x90\x88\xAA') from system.numbers limit 10;
INSERT INTO src_2 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 44
INSERT INTO 01682_database_for_cache_dictionary.complex_key_complex_attributes_source_table VALUES
CREATE DATABASE IF NOT EXISTS test_dkvqyz5c 
SELECT * FROM system.warnings LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
CREATE TABLE test_01193_18429.table_7_406 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
drop table tbl_8parts_3granules_rnd;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (90 < 41 AND 14 > 0 ? 90 : 0)), throwIf(last != (90 < 41 AND 14 > 0 ? least(41 - 1, 90 + 14 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(41) LIMIT 90, 14);
CREATE TABLE tbl (`s` String, `i` int) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 3739, min_bytes_for_wide_part = 838780253, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 16851, prefer_fetch_merged_part_size_threshold = 3088943305, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 63, min_merge_bytes_to_use_direct_io = 10251804718, index_granularity_bytes = 27998967, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 93873, primary_key_compress_block_size = 84157
CREATE TABLE test_01193_18429.table_9_934 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT x FROM a;
SELECT name FROM system.functions WHERE name = 'date_diff' OR name = 'DATE_DIFF' OR name = 'timestampDiff' OR name = 'timestamp_diff' OR name = 'TIMESTAMP_DIFF' ORDER BY name;
CREATE DATABASE IF NOT EXISTS test_wljdo5ak 
select 1 = sequenceMatch('(?1)(?t>10)(?2)')(time, data = 0, data = 1, data = 2, data = 3) from sequence_test;
CREATE DATABASE IF NOT EXISTS test_qattwlms 
CREATE TABLE test_2C5F54523D58306176277B366147402046734663573B5D7630436B6F77436163237D6A523F493673(x UInt8) Engine=Memory;
SELECT 'Before DROP PARTITION:';
SELECT 'Running test stateless/01683_dist_INSERT_block_structure_mismatch.sql from pid=1718' 
select hasSubsequence('garbage', 'garbage');
CREATE INDEX idx_tab3_5 ON tab3 (col1,col0);
INSERT INTO r4 SELECT 39 % 10 = 4 ? 39 - 1 : 39
INSERT INTO r5 SELECT 17
INSERT INTO test_01193_18429.table_2_592 VALUES 
CREATE TABLE test_4F31766C457C7871596A4B3A7D317541546F3D75344C712873257348385776344F2E5E7278585B75(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_2_647 VALUES 
select 'Used settings: prefer_localhost_replica=0,distributed_group_by_no_merge=2,distributed_push_down_limit=0';
SELECT count() FROM constraint_test_assumption WHERE domainWithoutWWW(URL) != 'bigmir.net';
SELECT dictGet('range_dictionary', 'value', toUInt64(0), toDate('2019-05-15'));
SELECT has(a, toDecimal32(0.1, 3)), has(a, toDecimal32(1.0, 3)) FROM decimal;
SELECT `key` FROM `test_rzij4415`.`mem1`
SELECT multiIf((number % 2) = 0, toFloat64(1), (number % 3) = 0, toUInt8(2), toInt32(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_3_154 VALUES 
CREATE TABLE tab3 (`a` UInt32, `b` UInt32, `c` UInt32, `d` UInt32) ENGINE = MergeTree ORDER BY ((a + b) * c, sin(a / b)) SETTINGS index_granularity = 44716, min_bytes_for_wide_part = 255117795, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 7677, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 68, min_merge_bytes_to_use_direct_io = 7161362298, index_granularity_bytes = 15649650, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 21403, primary_key_compress_block_size = 54316
CREATE DATABASE IF NOT EXISTS test_plorivuq 
CREATE INDEX idx_tab4_5 ON tab4 (col1 DESC,col3);
CREATE TABLE test_01600.base (`id` UInt64, `id2` UInt64, `d` UInt64, `value` UInt64) ENGINE = MergeTree PARTITION BY d ORDER BY (id, id2, d) SETTINGS index_granularity = 40648, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 11646, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 232734814, index_granularity_bytes = 11098476, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 74477, primary_key_compress_block_size = 15220
SELECT Title, round(1000 * distance) FROM test_distance ORDER BY ngramDistanceCaseInsensitive(Title, 'metriKS') as distance, Title;
CREATE TABLE test_01193_18429.table_8_640 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE DATABASE IF NOT EXISTS test_gbjdybs4 
select countSubstrings(concat(toString(number), '000111'), toString(number)) from numbers(1);
SELECT varPop(-1);
SELECT 'right (join_use_nulls)';
CREATE TABLE test_6748392B47356F69667A3B25755B41755E477424222A5B5B5E614E71404F367C2B62675E555B7370(x UInt8) Engine=Memory;
CREATE TABLE test_234430603B363251613A27384444437B7A5B2B5A607724576C3C247C55313642473A32365C654829(x UInt8) Engine=Memory;
select pow(1, 0) = 1;
SELECT count() FROM system.parts WHERE table = 'ttl_empty_parts' AND database = currentDatabase() AND active;
CREATE TABLE test_02908_r3_241 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_241', 'r3') ORDER BY tuple()
CREATE TABLE test_766C3447653E6429633239225C387D4A2A4C74366A3E273A552A754933246B41273B585F746F2340(x UInt8) Engine=Memory;
INSERT INTO merge_table_standard_delete select number, toString(number) from numbers(100);
INSERT INTO all_valid VALUES 
SELECT ProfileEvents['InsertedRows'] as value FROM system.query_log WHERE current_database = currentDatabase() AND query LIKE 'INSERT INTO /* test 01413, query 2 */ rows_events_test%' AND type = 2 AND event_date >= yesterday() ORDER BY event_time DESC LIMIT 1;
SELECT CASE WHEN (number % 2) = 0 THEN toFloat64(1) WHEN (number % 3) = 0 THEN toUInt8(2) ELSE toFloat64(3) END FROM system.numbers LIMIT 10;
INSERT INTO r5 SELECT 38
SELECT CASE WHEN (number % 2) = 0 THEN toFloat64(1) WHEN (number % 3) = 0 THEN toInt32(2) ELSE toInt16(3) END FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_lm7dznsr 
SELECT * FROM 02267_t ORDER BY n1, n2 FORMAT JSONLines;
CREATE TABLE test_3F5860633F67463B526E616C56495071462E3A2D7A4D582944693D7D223B385D455C72566B305277(x UInt8) Engine=Memory;
INSERT INTO test_not_found_column_nothing(col001) SELECT number FROM numbers(11);
CREATE TABLE test_22402259326F3B2D736057613D5D56494E413364777750515965317D7547433D734D7525463F422E(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_xvh03zff 
DROP DATABASE IF EXISTS test_tqgi389z 
DESCRIBE FILESYSTEM CACHE '$CLICHOUSE_TEST_UNIQUE_NAME';
SELECT `t1`.`a` FROM `test_02115`.`t1_local` AS `t1` WHERE `t1`.`a` GLOBAL IN (`_subquery4219`)
SELECT DISTINCT t1.id FROM t1 INNER ANY JOIN t2 ON t1.id == t2.id AND toNullable(t1.key2 != '');
SELECT CASE WHEN (number % 2) = 0 THEN toFloat32(1) WHEN (number % 3) = 0 THEN toFloat32(2) ELSE toUInt32(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_10_92 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/01558_enum_as_num_in_tsv_csv_input.sql from pid=1724' 
CREATE TABLE nested (nest Nested(a UInt8, b String)) ENGINE = Memory;
DROP TABLE load_parts_refcounts SYNC
SELECT has(materialize(['a', NULL, 'b']), materialize('b'));
CREATE DATABASE IF NOT EXISTS test_046gleel 
INSERT INTO test_01193_18429.table_4_78 VALUES 
alter table many_mutations delete where y = 826 * 2 settings mutations_sync = 0;
CREATE TABLE data2014 (name String, value UInt32) ENGINE = Memory;
SELECT multiIf((number % 2) = 0, [toInt32(1), toInt32(2)], (number % 3) = 0, [toUInt8(2), toUInt8(3)], [toInt16(3), toInt16(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE partslost_0 (`x` String) ENGINE = ReplicatedMergeTree('/clickhouse/table/{database}_02067_lost/partslost', '0') ORDER BY tuple() SETTINGS min_rows_for_wide_part = 0, min_bytes_for_wide_part = 0, old_parts_lifetime = 1, cleanup_delay_period = 1, cleanup_delay_period_random_add = 1, cleanup_thread_preferred_points_per_iteration = 0, index_granularity = 8192, index_granularity_bytes = '10Mi', ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 64, merge_max_block_size = 8900, prefer_fetch_merged_part_size_threshold = 9749799180, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 62, min_merge_bytes_to_use_direct_io = 10737418240, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 93217, primary_key_compress_block_size = 85255
INSERT INTO test_01193_18429.table_8_838 VALUES 
select format('{}{}{}', materialize(toFixedString('a', 1)), materialize(toFixedString('b', 1)), toFixedString('c', 1)) == 'abc';
select * from xyz where y = 2;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c9) AND (NOT c8) AND c2 AND c2 AND c3) OR (c1 AND c8) SETTINGS convert_query_to_cnf = 0
SELECT greatCircleAngle(0, -9223372036854775808, number, number) FROM numbers(3) FORMAT Null;
select 0 = position('abc', materialize('defg')) from system.numbers limit 10;
select variantElement(number::Variant(String, UInt64), 'String') from numbers(4);
SELECT * FROM numbers(34540)
INSERT INTO test_max_num_to_warn_02931.test_max_num_to_warn_7 VALUES 
INSERT INTO test_01193_18429.table_10_695 VALUES 
INSERT INTO test_01193_18429.table_4_129 VALUES 
SELECT arrayPushBack([], 1), arrayPushFront([[]], []);
INSERT INTO test_01193_18429.table_5_133 VALUES 
INSERT INTO r5 SELECT 82
CREATE TABLE test_01193_18429.table_4_241 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DICTIONARY test_01037.dict_array (`key` Array(Array(Array(Array(Float64)))), `name` String DEFAULT 'qqq', `value` UInt64 DEFAULT 101) PRIMARY KEY key SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'polygons_array' PASSWORD '[HIDDEN]' DB 'test_01037')) LIFETIME(MIN 0 MAX 0) LAYOUT(POLYGON_SIMPLE())
DROP DATABASE IF EXISTS test_mqnyuxhm 
CREATE TABLE test_3C2F54612A71447938373825604761777574643D266F443A227E2D522633344A61704E2B247C5324(x UInt8) Engine=Memory;
drop table nested_map_explicit;
SELECT sum(uint64 - 2) + sum(uint64 - 3) From test_table;
SELECT '(backward, first_match, B->B)', id, sequenceNextNode('backward', 'first_match')(dt, action, 1, action = 'B', action = 'B') AS next_node FROM test_sequenceNextNode GROUP BY id ORDER BY id;
SELECT *, id FROM (SELECT [1] AS value) AS subquery ARRAY JOIN value AS id INNER JOIN test_table USING (id);
INSERT INTO test_01193_18429.table_9_658 VALUES 
DROP TABLE IF EXISTS nullable_string_value;
CREATE DATABASE IF NOT EXISTS test_mlwxp01t 
CREATE TABLE no_order(a UInt32, b UInt32) ENGINE = MergeTree ORDER BY tuple();
SELECT sum(uint64 - 1 AS i) from test_table where i > 0;
SELECT sum(if((number % 2) = 0 AS cond_expr, 1 AS one_expr, 0 AS zero_expr) AS if_expr), sum(cond_expr), sum(if_expr), one_expr, zero_expr FROM numbers(100);
DROP DATABASE IF EXISTS test_wquj6usf 
SELECT arrayCompact([toDecimal32(1.0,4), toDecimal32(1.0,4)]) x, toTypeName(x);
CREATE DATABASE IF NOT EXISTS test_kr9a34gh 
SELECT 'Running test stateless/00664_cast_from_string_to_nullable.sql from pid=1718' 
INSERT INTO test_01193_18429.table_8_697 VALUES 
DETACH TABLE file_02184;
select 'select 1';
CREATE TABLE test_59633C5A2A6E67257839797D46583E622E716F6068662C34582E58594437433B2358364E713F677E(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_67bqv09v 
DETACH TABLE t_nested_modify;
SELECT 31 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'asn', tuple(IPv4StringToNum('255.255.255.254')))
CREATE TABLE test_01193_18429.table_1_78 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT quantileTimingWeighted(NULL, NULL, NULL);
CREATE DATABASE IF NOT EXISTS test_lx8h57em 
DROP DATABASE IF EXISTS test_46xkozr7 
INSERT INTO test_01193_18429.table_6_683 VALUES 
SELECT file('nonexistent.txt', 'default');
CREATE TABLE test_692C49334A24752F635E3E67502525447C345B6675542A2B6E3530533A2526685D462C6052683D6A(x UInt8) Engine=Memory;
DROP DICTIONARY 02183_polygon_dictionary;
 CREATE TABLE join_block_test ( id String, num Int64 ) ENGINE = Join(ANY, LEFT, id) 
SELECT * FROM distributed_01099_b;
SELECT 'Running test stateless/02954_analyzer_fuzz_i57086.sql from pid=1714' 
SELECT dictGetChildren('hierarchy_hashed_array_dictionary', number) FROM system.numbers LIMIT 6;
SELECT 127, 4294967295, 127 = 4294967295, 127 != 4294967295, 127 < 4294967295, 127 <= 4294967295, 127 > 4294967295, 127 >= 4294967295, 4294967295 = 127, 4294967295 != 127, 4294967295 < 127, 4294967295 <= 127, 4294967295 > 127, 4294967295 >= 127 , toUInt8(127) = toUInt32(4294967295), toUInt8(127) != toUInt32(4294967295), toUInt8(127) < toUInt32(4294967295), toUInt8(127) <= toUInt32(4294967295), toUInt8(127) > toUInt32(4294967295), toUInt8(127) >= toUInt32(4294967295), toUInt32(4294967295) = toUInt8(127), toUInt32(4294967295) != toUInt8(127), toUInt32(4294967295) < toUInt8(127), toUInt32(4294967295) <= toUInt8(127), toUInt32(4294967295) > toUInt8(127), toUInt32(4294967295) >= toUInt8(127) , toUInt8(127) = toUInt64(4294967295), toUInt8(127) != toUInt64(4294967295), toUInt8(127) < toUInt64(4294967295), toUInt8(127) <= toUInt64(4294967295), toUInt8(127) > toUInt64(4294967295), toUInt8(127) >= toUInt64(4294967295), toUInt64(4294967295) = toUInt8(127), toUInt64(4294967295) != toUInt8(127), toUInt64(4294967295) < toUInt8(127), toUInt64(4294967295) <= toUInt8(127), toUInt64(4294967295) > toUInt8(127), toUInt64(4294967295) >= toUInt8(127) , toUInt8(127) = toInt64(4294967295), toUInt8(127) != toInt64(4294967295), toUInt8(127) < toInt64(4294967295), toUInt8(127) <= toInt64(4294967295), toUInt8(127) > toInt64(4294967295), toUInt8(127) >= toInt64(4294967295), toInt64(4294967295) = toUInt8(127), toInt64(4294967295) != toUInt8(127), toInt64(4294967295) < toUInt8(127), toInt64(4294967295) <= toUInt8(127), toInt64(4294967295) > toUInt8(127), toInt64(4294967295) >= toUInt8(127) , toInt8(127) = toUInt32(4294967295), toInt8(127) != toUInt32(4294967295), toInt8(127) < toUInt32(4294967295), toInt8(127) <= toUInt32(4294967295), toInt8(127) > toUInt32(4294967295), toInt8(127) >= toUInt32(4294967295), toUInt32(4294967295) = toInt8(127), toUInt32(4294967295) != toInt8(127), toUInt32(4294967295) < toInt8(127), toUInt32(4294967295) <= toInt8(127), toUInt32(4294967295) > toInt8(127), toUInt32(4294967295) >= toInt8(127) , toInt8(127) = toUInt64(4294967295), toInt8(127) != toUInt64(4294967295), toInt8(127) < toUInt64(4294967295), toInt8(127) <= toUInt64(4294967295), toInt8(127) > toUInt64(4294967295), toInt8(127) >= toUInt64(4294967295), toUInt64(4294967295) = toInt8(127), toUInt64(4294967295) != toInt8(127), toUInt64(4294967295) < toInt8(127), toUInt64(4294967295) <= toInt8(127), toUInt64(4294967295) > toInt8(127), toUInt64(4294967295) >= toInt8(127) , toInt8(127) = toInt64(4294967295), toInt8(127) != toInt64(4294967295), toInt8(127) < toInt64(4294967295), toInt8(127) <= toInt64(4294967295), toInt8(127) > toInt64(4294967295), toInt8(127) >= toInt64(4294967295), toInt64(4294967295) = toInt8(127), toInt64(4294967295) != toInt8(127), toInt64(4294967295) < toInt8(127), toInt64(4294967295) <= toInt8(127), toInt64(4294967295) > toInt8(127), toInt64(4294967295) >= toInt8(127) , toUInt16(127) = toUInt32(4294967295), toUInt16(127) != toUInt32(4294967295), toUInt16(127) < toUInt32(4294967295), toUInt16(127) <= toUInt32(4294967295), toUInt16(127) > toUInt32(4294967295), toUInt16(127) >= toUInt32(4294967295), toUInt32(4294967295) = toUInt16(127), toUInt32(4294967295) != toUInt16(127), toUInt32(4294967295) < toUInt16(127), toUInt32(4294967295) <= toUInt16(127), toUInt32(4294967295) > toUInt16(127), toUInt32(4294967295) >= toUInt16(127) , toUInt16(127) = toUInt64(4294967295), toUInt16(127) != toUInt64(4294967295), toUInt16(127) < toUInt64(4294967295), toUInt16(127) <= toUInt64(4294967295), toUInt16(127) > toUInt64(4294967295), toUInt16(127) >= toUInt64(4294967295), toUInt64(4294967295) = toUInt16(127), toUInt64(4294967295) != toUInt16(127), toUInt64(4294967295) < toUInt16(127), toUInt64(4294967295) <= toUInt16(127), toUInt64(4294967295) > toUInt16(127), toUInt64(4294967295) >= toUInt16(127) , toUInt16(127) = toInt64(4294967295), toUInt16(127) != toInt64(4294967295), toUInt16(127) < toInt64(4294967295), toUInt16(127) <= toInt64(4294967295), toUInt16(127) > toInt64(4294967295), toUInt16(127) >= toInt64(4294967295), toInt64(4294967295) = toUInt16(127), toInt64(4294967295) != toUInt16(127), toInt64(4294967295) < toUInt16(127), toInt64(4294967295) <= toUInt16(127), toInt64(4294967295) > toUInt16(127), toInt64(4294967295) >= toUInt16(127) , toInt16(127) = toUInt32(4294967295), toInt16(127) != toUInt32(4294967295), toInt16(127) < toUInt32(4294967295), toInt16(127) <= toUInt32(4294967295), toInt16(127) > toUInt32(4294967295), toInt16(127) >= toUInt32(4294967295), toUInt32(4294967295) = toInt16(127), toUInt32(4294967295) != toInt16(127), toUInt32(4294967295) < toInt16(127), toUInt32(4294967295) <= toInt16(127), toUInt32(4294967295) > toInt16(127), toUInt32(4294967295) >= toInt16(127) , toInt16(127) = toUInt64(4294967295), toInt16(127) != toUInt64(4294967295), toInt16(127) < toUInt64(4294967295), toInt16(127) <= toUInt64(4294967295), toInt16(127) > toUInt64(4294967295), toInt16(127) >= toUInt64(4294967295), toUInt64(4294967295) = toInt16(127), toUInt64(4294967295) != toInt16(127), toUInt64(4294967295) < toInt16(127), toUInt64(4294967295) <= toInt16(127), toUInt64(4294967295) > toInt16(127), toUInt64(4294967295) >= toInt16(127) , toInt16(127) = toInt64(4294967295), toInt16(127) != toInt64(4294967295), toInt16(127) < toInt64(4294967295), toInt16(127) <= toInt64(4294967295), toInt16(127) > toInt64(4294967295), toInt16(127) >= toInt64(4294967295), toInt64(4294967295) = toInt16(127), toInt64(4294967295) != toInt16(127), toInt64(4294967295) < toInt16(127), toInt64(4294967295) <= toInt16(127), toInt64(4294967295) > toInt16(127), toInt64(4294967295) >= toInt16(127) , toUInt32(127) = toUInt32(4294967295), toUInt32(127) != toUInt32(4294967295), toUInt32(127) < toUInt32(4294967295), toUInt32(127) <= toUInt32(4294967295), toUInt32(127) > toUInt32(4294967295), toUInt32(127) >= toUInt32(4294967295), toUInt32(4294967295) = toUInt32(127), toUInt32(4294967295) != toUInt32(127), toUInt32(4294967295) < toUInt32(127), toUInt32(4294967295) <= toUInt32(127), toUInt32(4294967295) > toUInt32(127), toUInt32(4294967295) >= toUInt32(127) , toUInt32(127) = toUInt64(4294967295), toUInt32(127) != toUInt64(4294967295), toUInt32(127) < toUInt64(4294967295), toUInt32(127) <= toUInt64(4294967295), toUInt32(127) > toUInt64(4294967295), toUInt32(127) >= toUInt64(4294967295), toUInt64(4294967295) = toUInt32(127), toUInt64(4294967295) != toUInt32(127), toUInt64(4294967295) < toUInt32(127), toUInt64(4294967295) <= toUInt32(127), toUInt64(4294967295) > toUInt32(127), toUInt64(4294967295) >= toUInt32(127) , toUInt32(127) = toInt64(4294967295), toUInt32(127) != toInt64(4294967295), toUInt32(127) < toInt64(4294967295), toUInt32(127) <= toInt64(4294967295), toUInt32(127) > toInt64(4294967295), toUInt32(127) >= toInt64(4294967295), toInt64(4294967295) = toUInt32(127), toInt64(4294967295) != toUInt32(127), toInt64(4294967295) < toUInt32(127), toInt64(4294967295) <= toUInt32(127), toInt64(4294967295) > toUInt32(127), toInt64(4294967295) >= toUInt32(127) , toInt32(127) = toUInt32(4294967295), toInt32(127) != toUInt32(4294967295), toInt32(127) < toUInt32(4294967295), toInt32(127) <= toUInt32(4294967295), toInt32(127) > toUInt32(4294967295), toInt32(127) >= toUInt32(4294967295), toUInt32(4294967295) = toInt32(127), toUInt32(4294967295) != toInt32(127), toUInt32(4294967295) < toInt32(127), toUInt32(4294967295) <= toInt32(127), toUInt32(4294967295) > toInt32(127), toUInt32(4294967295) >= toInt32(127) , toInt32(127) = toUInt64(4294967295), toInt32(127) != toUInt64(4294967295), toInt32(127) < toUInt64(4294967295), toInt32(127) <= toUInt64(4294967295), toInt32(127) > toUInt64(4294967295), toInt32(127) >= toUInt64(4294967295), toUInt64(4294967295) = toInt32(127), toUInt64(4294967295) != toInt32(127), toUInt64(4294967295) < toInt32(127), toUInt64(4294967295) <= toInt32(127), toUInt64(4294967295) > toInt32(127), toUInt64(4294967295) >= toInt32(127) , toInt32(127) = toInt64(4294967295), toInt32(127) != toInt64(4294967295), toInt32(127) < toInt64(4294967295), toInt32(127) <= toInt64(4294967295), toInt32(127) > toInt64(4294967295), toInt32(127) >= toInt64(4294967295), toInt64(4294967295) = toInt32(127), toInt64(4294967295) != toInt32(127), toInt64(4294967295) < toInt32(127), toInt64(4294967295) <= toInt32(127), toInt64(4294967295) > toInt32(127), toInt64(4294967295) >= toInt32(127) , toUInt64(127) = toUInt32(4294967295), toUInt64(127) != toUInt32(4294967295), toUInt64(127) < toUInt32(4294967295), toUInt64(127) <= toUInt32(4294967295), toUInt64(127) > toUInt32(4294967295), toUInt64(127) >= toUInt32(4294967295), toUInt32(4294967295) = toUInt64(127), toUInt32(4294967295) != toUInt64(127), toUInt32(4294967295) < toUInt64(127), toUInt32(4294967295) <= toUInt64(127), toUInt32(4294967295) > toUInt64(127), toUInt32(4294967295) >= toUInt64(127) , toUInt64(127) = toUInt64(4294967295), toUInt64(127) != toUInt64(4294967295), toUInt64(127) < toUInt64(4294967295), toUInt64(127) <= toUInt64(4294967295), toUInt64(127) > toUInt64(4294967295), toUInt64(127) >= toUInt64(4294967295), toUInt64(4294967295) = toUInt64(127), toUInt64(4294967295) != toUInt64(127), toUInt64(4294967295) < toUInt64(127), toUInt64(4294967295) <= toUInt64(127), toUInt64(4294967295) > toUInt64(127), toUInt64(4294967295) >= toUInt64(127) , toUInt64(127) = toInt64(4294967295), toUInt64(127) != toInt64(4294967295), toUInt64(127) < toInt64(4294967295), toUInt64(127) <= toInt64(4294967295), toUInt64(127) > toInt64(4294967295), toUInt64(127) >= toInt64(4294967295), toInt64(4294967295) = toUInt64(127), toInt64(4294967295) != toUInt64(127), toInt64(4294967295) < toUInt64(127), toInt64(4294967295) <= toUInt64(127), toInt64(4294967295) > toUInt64(127), toInt64(4294967295) >= toUInt64(127) , toInt64(127) = toUInt32(4294967295), toInt64(127) != toUInt32(4294967295), toInt64(127) < toUInt32(4294967295), toInt64(127) <= toUInt32(4294967295), toInt64(127) > toUInt32(4294967295), toInt64(127) >= toUInt32(4294967295), toUInt32(4294967295) = toInt64(127), toUInt32(4294967295) != toInt64(127), toUInt32(4294967295) < toInt64(127), toUInt32(4294967295) <= toInt64(127), toUInt32(4294967295) > toInt64(127), toUInt32(4294967295) >= toInt64(127) , toInt64(127) = toUInt64(4294967295), toInt64(127) != toUInt64(4294967295), toInt64(127) < toUInt64(4294967295), toInt64(127) <= toUInt64(4294967295), toInt64(127) > toUInt64(4294967295), toInt64(127) >= toUInt64(4294967295), toUInt64(4294967295) = toInt64(127), toUInt64(4294967295) != toInt64(127), toUInt64(4294967295) < toInt64(127), toUInt64(4294967295) <= toInt64(127), toUInt64(4294967295) > toInt64(127), toUInt64(4294967295) >= toInt64(127) , toInt64(127) = toInt64(4294967295), toInt64(127) != toInt64(4294967295), toInt64(127) < toInt64(4294967295), toInt64(127) <= toInt64(4294967295), toInt64(127) > toInt64(4294967295), toInt64(127) >= toInt64(4294967295), toInt64(4294967295) = toInt64(127), toInt64(4294967295) != toInt64(127), toInt64(4294967295) < toInt64(127), toInt64(4294967295) <= toInt64(127), toInt64(4294967295) > toInt64(127), toInt64(4294967295) >= toInt64(127) 
CREATE TABLE test_6C4056705B5F5E7224432C367C264B2C533D65604A214F2F53407C34776B5E6B3D20313B50502735(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN toInt8(1) WHEN (number % 3) = 0 THEN toFloat32(2) ELSE toInt32(3) END FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_7ajed5o3 
SELECT 'Running test stateless/00291_array_reduce.sql from pid=1724' 
SHOW TABLES FROM test_8y0pt1h3 NOT LIKE 'tes%2'
select 1 intersect select 1 except select 2 intersect select 1 except select 3 intersect select 2;
CREATE TABLE test_445939542C4F2E5368677B796E725E7B267B60316875725C6C3579385F4523567E656342335F6162(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_3_643 VALUES 
SELECT argMax((n, n), n) t, toTypeName(t) FROM (SELECT if(number <= 100, NULL, number) AS n from numbers(10));
CREATE TABLE data_01551 ( key UInt32 ) engine=AggregatingMergeTree() PARTITION BY key%2 ORDER BY (key, key/2) SETTINGS index_granularity=10, index_granularity_bytes='10Mi';
SELECT age('second', materialize(toDateTime('2015-08-18 00:00:00', 'UTC')), toDateTime64('2015-08-18 00:00:10', 3, 'UTC'));
CREATE INDEX idx_tab2_1 ON tab2 (col0);
CREATE DATABASE IF NOT EXISTS test_f1h9sl1f 
CREATE TABLE test_433E4D336D745A603C3C2F516C48414A485A6B5E7C7B6D2F7C4B64633C3750492A3E366D5F3D6C54(x UInt8) Engine=Memory;
select [14, 0, 0, 7, 20, 6, 0, 13, 0, 0, 20, 0, 20, 2, 0, 8, 2, 11, 2, 0] = multiSearchAllPositions(materialize('asjwxabjrwgcdviokfaoqvqiafz'), ['v', 'zqngytligwwpzxhatyayvdnbbj', 'gjicovfzgbyagiirn', 'bjrwgcdviok', 'oqvqiafz', 'abjrwgc', 'wulrpfzh', 'dviokfao', 'esnchjuiufjadqmdtrpcd', 'tkodqzsjchpaftk', 'oqvq', 'eyoshlrlvmnqjmtmloryvg', 'oqv', 'sjwx', 'uokueelyytnoidplwmmox', 'jrwgcdviokfaoqvqiaf', 'sjwxabjrwgcdviokfaoqvqi', 'gcdviokfa', 'sjwxab', 'zneabsnfucjcwauxmudyxibnmxzfx']) from system.numbers limit 10;
CREATE TABLE test_01193_18429.table_2_235 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'Running test stateless/02982_perf_introspection_for_inserts.sh from pid=1713' 
DROP DATABASE IF EXISTS test_0o22gkjz 
CREATE INDEX idx_tab3_1 ON tab3 (col3,col4 DESC);
INSERT INTO test_01193_18429.table_5_868 VALUES 
select has(materialize([toUInt64(0)]), number) from system.numbers limit 10;
select parseDateTimeInJodaSyntax('12 AM', 'h a', 'UTC') = toDateTime('1970-01-01 00:00:00', 'UTC');
CREATE TABLE test_42667E383D2C767741555A49607B3F7846484122357A23296A5B2C2B24612D60284669484336212D(x UInt8) Engine=Memory;
SELECT arrayEnumerateUniqRanked([], []);
desc file(dump6.sql, MySQLDump) settings input_format_mysql_dump_table_name='test 3'
select countSubstrings('foo.com.bar', 'com');
CREATE TABLE test_01193_18429.table_2_513 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE t_with_dots (id UInt32, arr Array(UInt32), `b.id` UInt32, `b.arr` Array(UInt32)) ENGINE = Log;
INSERT INTO test_01193_18429.table_3_673 VALUES 
SELECT toStartOfDay(toDate(16343), 'Pacific/Pitcairn');
SELECT [2, 3, 5] * number FROM numbers(5);
CREATE TABLE tab (`id` UUID, `value` UInt32) ENGINE = MergeTree PARTITION BY id ORDER BY tuple() SETTINGS index_granularity = 34917, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 19512, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 412396, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 31367648, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 66674, primary_key_compress_block_size = 63188
CREATE TABLE test_5C49723D445B4D38657D623C6374432B21787C48275643303D6F546C6A4B3B274351434E474B4741(x UInt8) Engine=Memory;
SELECT JSON_EXISTS('{"a":[{"b":1},{"c":2}]}', '$.a[*].f');
INSERT INTO test_01193_18429.table_9_389 VALUES 
select key, byteSize(*), str1, byteSize(str1), str2, byteSize(str2), fstr1, byteSize(fstr1), fstr2, byteSize(fstr2) from test_byte_size_string order by key;
SELECT 'Running test stateless/00647_multiply_aggregation_state.sql from pid=1724' 
INSERT INTO test_01193_18429.table_2_969 VALUES 
DROP TABLE IF EXISTS test_skip_idx;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 48941, 500 settings ignore_materialized_views_with_dropped_target_table=1
DROP TABLE IF EXISTS NULL;
CREATE TABLE test_01193_18429.table_1_478 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select -number as offset, number as length, toFixedString('Hello', 6) as s, subString(bin(s), offset , length), bin(bitSlice(s, offset, length)) from numbers(16);
SELECT demangle(NULL);
INSERT INTO test_01193_18429.table_3_138 VALUES 
SELECT 'Running test stateless/00753_comment_columns_zookeeper.sql from pid=1718' 
EXPLAIN SYNTAX (SELECT 2 * count(float64) - sum(float64) From test_table);
ALTER TABLE test_alter_on_mutation MODIFY COLUMN value UInt64 DEFAULT 10;
CREATE TABLE test_665756284C2043342C4B4E65793B2E62576A596E346D576F6C6A4041212E7C29544E4A3B3848304A(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_11cclegg 
select CAST(1.0, 'Decimal(15,2)') > CAST(-1, 'Float32');
INSERT INTO test_01193_18429.table_8_578 VALUES 
select parent_key, child_key, count() from data_02233 group by parent_key, child_key with totals order by parent_key, child_key settings max_threads=1, optimize_aggregation_in_order=1, max_block_size=1;
CREATE TABLE test_01193_18429.table_5_853 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
insert into test_02245_s3_nested_parquet1 values 
SYSTEM SYNC REPLICA compression_codec_multiple_replicated2;
SELECT 'Running test stateless/02146_mv_non_phys.sql from pid=1726' 
SELECT arrayAll(x -> 0, arrayMap(x -> toString(x), range(number))) FROM system.numbers LIMIT 10;
alter table another_mt replace partition id 'all' from mt
SELECT `a`, count() FROM `t_different_dbs` GROUP BY `a` ORDER BY `a` ASC LIMIT 500, 5
INSERT INTO test_01193_18429.table_9_226 VALUES 
CREATE TABLE test_2553356F54495C76525269394B603E425E267D6E7C24443C382D2B7E6B5155673A455C3E6C7D4B56(x UInt8) Engine=Memory;
select arrayReduce('simpleLinearRegression', [-1, -2, -3, -4], [-100, -110, -120, -130]);
create table dp as d Engine=Distributed(test_cluster_two_shards, currentDatabase(), d, i);
CREATE TABLE test_01193_18429.table_5_419 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE WINDOW VIEW wv ENGINE Memory AS SELECT count(a), hopStart(wid) AS w_start, hopEnd(wid) AS w_end FROM mt GROUP BY hop(timestamp, INTERVAL '3' SECOND, INTERVAL '5' SECOND) AS wid;
CREATE TABLE test_vaepqvz9.dicttbl (`key` Int64, `value_default` String, `value_expression` String) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 5802, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 2885, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 426163388, index_granularity_bytes = 27827355, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 46012, primary_key_compress_block_size = 38322
SELECT 'Running test stateless/01279_dist_group_by.sql from pid=1715' 
select groupArray(s) from (select sum(n) s from (select toDecimal128(number, 10) as n from numbers(1000)));
DROP TABLE IF EXISTS parallel_replicas_final;
SELECT t1.id, t1.value, t2.id, t2.value FROM test_table_join_1 AS t1 RIGHT JOIN test_table_join_2 AS t2 ON t1.id = t2.id AND t2.value = 'Join_2_Value_0';
DROP DATABASE IF EXISTS test_hqiadgn3 
SELECT multiIf(1, ['foo', col3], 1, [col4, col5], ['foo', col7]) FROM multi_if_check;
SELECT id FROM test_bf_indexOf WHERE indexOf(ary, 'value1') > 0 ORDER BY id FORMAT TSV;
SELECT count() FROM merge(currentDatabase(), '^numbers\\d+$') WHERE _table = 'numbers3';
create table arrays_02735 engine = Memory as select * from generateRandom(' u32 Array(UInt32), i8 Array(Int8), datetime Array(DateTime), enum16 Array(Enum16(''xx'' = 1000, ''yy'' = 2000, ''zz'' = 3000)), float32 Array(Float32), str Array(String), fstr Array(FixedString(12)), u128 Array(UInt128), decimal64 Array(Decimal64(10)), ipv4 Array(IPv4), msi Map(String, Int16), tup Tuple(FixedString(3), Array(String), Map(Int8, Date))') limit 10000;
ALTER TABLE 02484_substitute_udf ADD COLUMN id2 UInt64, MODIFY ORDER BY (02484_plusone(id), 02484_plusthree(id2));
CREATE TABLE test_01193_18429.table_6_384 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select 423 from test54378 where pk_date in (toDate('2018-04-19'));
DROP DATABASE IF EXISTS test_mc6lnz2t 
SELECT arrayMap((x) -> x, [tuple(1)]);
SELECT hex(IPv4ToIPv6(addr)) FROM addresses ORDER BY addr ASC;
drop table tab_00386
CREATE TABLE test_01193_18429.table_2_597 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_3_530 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_276B52486863292871776C2D7E4621526849643966543F377B59225B505749423B256F6D603B552E(x UInt8) Engine=Memory;
alter table many_mutations delete where y = 184 * 2 settings mutations_sync = 0;
SELECT id, haystack, needle, replacement, replaceAll('Hello World', needle, replacement) FROM test_tab ORDER BY id;
CREATE TABLE test_36203A4A3274364322523E6F36626751286674623F7D47335E6D72706F257023432A317B5B657B72(x UInt8) Engine=Memory;
CREATE TABLE test_48673C7D292B204142733547536B5F5F2F3A2B7B607E304B323E24687A36496623412B402C455164(x UInt8) Engine=Memory;
select count() from table_to_store_data;
DROP TABLE test_table_float_values;
select * from file(02475_data.bsonEachRow, auto, 'lc LowCardinality(String)')
CREATE TABLE test_48494E767221436C696C38784F3F7D287A21563044272A777B4D27424D6A39665E34324B455F6435(x UInt8) Engine=Memory;
DROP TABLE cannot_be_nullable;
SELECT addMicroseconds(NULL, NULL);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (19 < 30 AND 74 > 0 ? 19 : 0)), throwIf(last != (19 < 30 AND 74 > 0 ? least(30 - 1, 19 + 74 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(30) LIMIT 19, 74);
CREATE TABLE test_01193_18429.table_4_755 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_02908_r1_89 SELECT rand64() FROM numbers(5);
CREATE TABLE test_01193_18429.table_8_568 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
ALTER TABLE concurrent_alter_column ADD COLUMN c396 DOUBLE;
SELECT count() FROM t_cnf_fuzz WHERE (c3 AND c7 AND (NOT c1)) OR (c9 AND (NOT c5)) OR ((NOT c6) AND c4) OR (c4 AND c2 AND c6 AND c2) OR ((NOT c1) AND c9 AND c5 AND c2 AND c7) SETTINGS convert_query_to_cnf = 1
INSERT INTO test_table_unsigned_values SELECT number % 3, number, number, number, number, if(number % 2 == 0, 1, 0) FROM system.numbers LIMIT 120;
select * from file(data_02293, JSONColumns, 'a UInt32, t String') order by a, t settings input_format_skip_unknown_fields=1
INSERT INTO src VALUES /* (-39, 2) */ 
ALTER TABLE table_1017_merge UPDATE y = y + rand() % 1 WHERE not ignore()
CREATE TABLE test_26406F647B343565322467313B7B39742B5D36294A564A40526B7146747943275464647D503E2B2B(x UInt8) Engine=Memory;
SELECT toLowCardinality(toIntervalYear(1));
select max(s.a) from t left join s on s.a = t.a left join y on s.b = y.b group by t.a order by t.a;
CREATE TABLE test2 (`a` Int32, `b` String) ENGINE = MergeTree ORDER BY a SETTINGS disk = disk(type = cache, disk = 'local_disk', name = '$CLICHOUSE_TEST_UNIQUE_NAME_2', cache_name = 'cache_collection'), index_granularity = 38364, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 11119, prefer_fetch_merged_part_size_threshold = 5672301183, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 7082256190, index_granularity_bytes = 986201, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 18794, primary_key_compress_block_size = 99798
DESCRIBE (SELECT (1, 1));
SELECT * FROM table_gcd_codec_uint256;
CREATE TABLE test_01193_18429.table_1_446 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT toDateTime('2015-02-03 06:07:08') > '2015-02-03 05:06:07';
insert into t_00725_4 values
SELECT today() + INTERVAL 1::UInt128 DAY - today();
SELECT *, d.*, d.values FROM ( SELECT 1 AS id, 2 AS value ) SEMI LEFT JOIN ( SELECT 1 AS id, 3 AS values ) AS d USING id;
INSERT INTO test_01193_18429.table_5_597 VALUES 
DROP DATABASE IF EXISTS test_qfkhrrs9 
SELECT * FROM test_tuple_filter WHERE (log_date, value) = ('2021-01-01', 'A');
SELECT count() FROM t_cnf_fuzz WHERE (c4 AND c2) OR ((NOT c4) AND (NOT c5) AND (NOT c8)) OR (c8 AND (NOT c0) AND c8) OR ((NOT c1) AND (NOT c3)) OR (c4 AND c9 AND (NOT c6)) OR ((NOT c4)) OR ((NOT c7)) OR ((NOT c3) AND (NOT c4) AND c7 AND c7) OR (c5 AND c7 AND c6 AND (NOT c5) AND c6) OR ((NOT c3)) SETTINGS convert_query_to_cnf = 1
DROP DICTIONARY `01945.db`.test_dictionary;
DROP TABLE IF EXISTS any_inner_join;
CREATE TABLE test_552F4D672B4A52523F507B2D33415E6378264B6B6D694E5D6958237E2031534336396D505D357B2C(x UInt8) Engine=Memory;
CREATE ROLE user_role_2
SELECT 'Running test stateless/01070_modify_ttl.sql from pid=1705' 
system drop replica 'doesntexisttest_5mr53c62' from database rdb_test_5mr53c62_4
ALTER TABLE concurrent_alter_detach_3 MODIFY COLUMN value1 UInt32 SETTINGS replication_alter_partitions_sync=0
CREATE TABLE test_4F28765828607C5B57282E38325A217825594A3C4E3D4460647B6F2D272D7127482B547B4276554B(x UInt8) Engine=Memory;
SELECT partition_id FROM system.detached_parts WHERE (table = 'restore_01640') AND (database = currentDatabase());
INSERT INTO dst_9 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 9
SELECT 'Running test stateless/02538_analyzer_create_table_as_select.sql from pid=1724' 
select '-- select h3PointDistRads(lat1, lon1,lat2, lon2) AS k from table1 order by k;';
CREATE TABLE test_01193_18429.table_3_925 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT * FROM compression_codec_multiple_more_types order by id;
CREATE TABLE test_01193_18429.table_1_683 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO r2 SELECT 75 % 10 = 2 ? 75 - 1 : 75
EXPLAIN PLAN actions=1, header=1, sorting=1 SELECT a FROM (SELECT sipHash64(a) AS a FROM (SELECT a FROM optimize_sorting ORDER BY a)) ORDER BY a
SELECT s FROM index_for_like WHERE s LIKE 'Hello, World %';
CREATE MATERIALIZED VIEW test_1602.vv (`EventDate` DateTime, `CounterID` UInt32, `UserID` UInt32) ENGINE = MergeTree() PARTITION BY toYYYYMM(EventDate) ORDER BY (CounterID, EventDate, intHash32(UserID)) SETTINGS index_granularity = 8192 AS SELECT * FROM test_1602.tbl;
CREATE DATABASE IF NOT EXISTS test_6xm3omg7 
CREATE TABLE defaults (x UInt32, y UInt32, a DEFAULT x + y, b Float32 DEFAULT round(log(1 + x + y), 5), c UInt32 DEFAULT 42, e MATERIALIZED x + y, f ALIAS x + y) ENGINE = Memory
CREATE MATERIALIZED VIEW IF NOT EXISTS test_race_condition_mv1_1 TO test_race_condition_target AS select count() as number FROM (SELECT a.number, a.n, a.n2, b.number, b.n, b.n2, c.number, c.n, c.n2 FROM test_race_condition_landing a CROSS JOIN test_race_condition_landing b CROSS JOIN test_race_condition_landing c)
SELECT 'Running test stateless/01510_format_regexp_raw_low_cardinality.sh from pid=1720' 
SELECT uniqExact(reinterpretAsFloat64(reinterpretAsFixedString(reinterpretAsUInt64(reinterpretAsFixedString(nan)) + number))) FROM numbers(10);
CREATE TABLE test_01193_18429.table_5_881 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT multiIf((number % 2) = 0, [toUInt8(1), toUInt8(2)], (number % 3) = 0, [toUInt8(2), toUInt8(3)], [toInt8(3), toInt8(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE orc_load (int Int32, smallint Int8, bigint Int64, float Float32, double Float64, date Date, y String, datetime64 DateTime64(3)) ENGINE = Memory
SELECT 'Running test stateless/00909_ngram_distance.sql from pid=1722' 
INSERT INTO test_01193_18429.table_9_667 VALUES 
SELECT sum(e) from tab_02473 PREWHERE b > 10 AND b <= 70 AND c > 23 AND c <= 53 AND d > 5 AND d <= 57 WHERE a == 0;
SELECT t1.key, t1.key2 FROM t1 INNER ALL JOIN t2 ON t1.id == t2.id AND t2.key == t2.key2 AND t1.key == t1.key2;
select makeDateTime64(2262, 4, 11, 23, 47, 16, 854775807, 9, 'UTC');
DROP DATABASE IF EXISTS test_sj78vc37 
CREATE TABLE test_01193_18429.table_8_531 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_4_63 VALUES 
INSERT INTO r9 SELECT 85
ALTER TABLE dst_14 DROP PART '4_100_100_0'
SELECT arrayFill((x, y) -> y, [1, 2, 3, 11, 12, 13, 4, 5, 6, 14, 15, 16], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0]);
DROP TABLE IF EXISTS parquet_nested_arrays
DROP DATABASE IF EXISTS test_quo1r6e6 
select 'LIKE';
INSERT INTO test_01193_18429.table_5_981 VALUES 
INSERT INTO test_01193_18429.table_5_66 VALUES 
select * from file(02483_data.capnp) settings format_schema='test_02483/02483_decimals.capnp:Message'
insert into ordinary_distinct select distinct * from distinct_cardinality_low settings optimize_distinct_in_order=0;
SELECT toDate('2015-02-05') <= '2015-02-04';
CREATE TABLE test_01193_18429.table_2_6 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP TABLE IF EXISTS replica2 SYNC;
CREATE TABLE test_522A21615B484B762B3E756172516A5A527171756F3B45277757787A66424F735854463D4F5F7B55(x UInt8) Engine=Memory;
SET allow_experimental_parallel_reading_from_replicas=1, max_parallel_replicas=2, use_hedged_requests=0, cluster_for_parallel_replicas='test_cluster_one_shard_three_replicas_localhost', parallel_replicas_for_non_replicated_merge_tree=1 ;
INSERT INTO test_01193_18429.table_2_995 VALUES 
EXPLAIN SYNTAX SELECT 1 IS NULL :: Int32;
select count() from t_delete_skip_index where y in (4, 5);
INSERT INTO test_01193_18429.table_7_685 VALUES 
CREATE TABLE test_01193_18429.table_2_773 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_54224321372B6D3F5A6C6B7B42783B723C423B626A7C4763372E236B4F4F7679552E544674246F73(x UInt8) Engine=Memory;
SELECT toStartOfMinute(toDateTime('2017-12-31 00:01:30', 'UTC'), 'UTC');
DROP DATABASE IF EXISTS test_jhmth0c5 
CREATE TABLE test_01193_18429.table_9_334 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_i46tru9s 
insert into table function file('data_02250.jsonl') select NULL as x settings engine_file_truncate_on_insert=1;
SELECT 'Running test stateless/00056_join_number_string.sql from pid=1718' 
CREATE TABLE test_01193_18429.table_7_20 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT polygonsSymDifferenceSpherical(NULL, NULL);
SELECT 'Running test stateless/01039_test_setting_parse.sql from pid=1724' 
CREATE TABLE test_01193_18429.table_7_947 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE IF NOT EXISTS defaults ( vals Int32 ) ENGINE = Memory;
select arrayConcat(emptyArrayUInt8(), emptyArrayUInt8());
CREATE TABLE test_655D505D246A4151437B5C304D7720377A4D31682E28657D277B57224C3B4D553B2C4F513B767D67(x UInt8) Engine=Memory;
SELECT Title, round(1000 * distance) FROM test_entry_distance ORDER BY ngramSearchUTF8(Title, Title) as distance, Title;
SELECT groupArrayInsertAt([123])(range(number), number * 2) FROM (SELECT * FROM system.numbers LIMIT 10);
DROP TABLE test_02099
CREATE TABLE test_51265A4F516D63577B7A7975717D3140394D4E356F22485A6571777443757C6276387B417A7A2748(x UInt8) Engine=Memory;
SELECT count() FROM ( SELECT f.id FROM test_grace_hash AS f LEFT JOIN test_grace_hash AS d ON f.id = d.id LIMIT 1000 );
INSERT INTO src VALUES /* (-62, 1) */ 
SELECT count() FROM t_cnf_fuzz WHERE (c8 AND (NOT c7)) SETTINGS convert_query_to_cnf = 1
CREATE INDEX idx_tab4_0 ON tab4 (col0 DESC,col3);
SELECT avg(b) * 3, sum(b) + 1 + count(b), count(b) * count(b), count() FROM (SELECT b FROM fuse_tbl);
SELECT minMap([number % 3, number % 4 - 1], [number, NULL]) FROM numbers(3) GROUP BY number WITH CUBE ORDER BY number;
SELECT 'Running test stateless/02896_optimize_array_exists_to_has_with_date.sql from pid=1713' 
select if(1, 42, y) from test;
SELECT constant_false ? constant_null : constant_null AS res FROM nullable_00431;
SHOW CREATE QUOTA q8_01297;
SELECT * FROM test ORDER BY x, y
SELECT 'Running test stateless/02724_jit_logical_functions.sql from pid=1713' 
SELECT toDaysSinceYearZero(toDateTime64('2023-09-08 11:11:11.123', 3), 'America/Los_Angeles');
SELECT age('second', toDateTime('2014-10-26 00:00:00', 'Asia/Istanbul'), toDateTime('2014-10-27 00:00:00', 'Asia/Istanbul'));
INSERT INTO test_01193_18429.table_2_135 VALUES 
INSERT INTO test_table_null_specifics VALUES 
insert into lc_str_0 select 'a';
INSERT INTO test_01193_18429.table_8_942 VALUES 
SELECT multiIf((number % 2) = 0, toInt8(1), (number % 3) = 0, toInt8(2), toInt32(3)) FROM system.numbers LIMIT 10;
SELECT sipHash128([], []);
CREATE TABLE test_2A3729533454687E5C78226E54254D7A276373377C7D766E70703D524D476F3A474254203563356E(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_qog9d9hp 
SELECT `x`, _CAST(`x` + 1, 'UInt32') AS `y` FROM `test_33excl4a`.`t4` ORDER BY `x` ASC
CREATE TABLE test_70567225356C23647A483549663E726172494A3A265F6F7C2B6A4C4D2577522046403B5632395D2C(x UInt8) Engine=Memory;
SELECT arrayFilter(NULL, NULL, NULL);
SELECT arraySort(bitmapToArray(groupBitmapMergeState(z))) FROM bitmap_column_expr_test2 WHERE like(tag_id, 'tag%');
CREATE TABLE test_28474130732F20435A4F616C4630657348602668492A412657296D692C3C444E62284B3B4668415B(x UInt8) Engine=Memory;
CREATE TABLE test_6D3C4F7C776B6F2D654D317874634C713D492953694E593A4331446C4F7A277A437D7E6E39405959(x UInt8) Engine=Memory;
select format('{}{}{}', 'a', toFixedString('b', 1), toFixedString('c', 1)) == 'abc' from system.numbers limit 5;
SELECT 'Window functions';
CREATE TABLE test_02908_r2_227 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_227', 'r2') ORDER BY tuple()
CREATE TABLE test_01383.fact (`id1` Int64, `id2` Int64, `value` Int64) ENGINE = MergeTree ORDER BY id1 SETTINGS index_granularity = 22849, min_bytes_for_wide_part = 45712860, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 22160, prefer_fetch_merged_part_size_threshold = 3623640327, vertical_merge_algorithm_min_rows_to_activate = 197935, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 366864134, index_granularity_bytes = 19262345, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 62260, primary_key_compress_block_size = 21271
CREATE TABLE test_01193_18429.table_6_636 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_24493C325D602163673E733D545A7149673E41547E30302B6E5C685440343E794D713E57504D4366(x UInt8) Engine=Memory;
CREATE TABLE test_645A523D7C22247A7E3C7B7C3A767D615D71544E343939697737546055633252232271244E262478(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01654_bar_nan.sql from pid=1718' 
SELECT timestamp('2013-12-31 12:00:00', '12:01:02');
WITH substring('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 1, number) AS prefix, prefix || 'x' AS a, prefix || 'y' AS b SELECT a = b, a < b, a > b, a <= b, a >= b FROM numbers(40);
EXPLAIN SYNTAX (SELECT (sum(uint64) + 2 * count(uint64)) - (sum(uint64) + 3 * count(uint64)) From test_table);
CREATE TABLE test_01193_18429.table_5_745 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_2_89 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT * FROM (SELECT toLowCardinality(toNullable(dummy)) AS val FROM system.one) s1 ANY LEFT JOIN (SELECT dummy AS rval FROM system.one) s2 ON val + 0 = rval * 1 ORDER BY val;
SELECT CAST('hello' AS FixedString(5)) LIKE 'hello%';
INSERT INTO test_01193_18429.table_2_389 VALUES 
SELECT multiIf((col1 % 2) = 0, col2, 1, 'bar', toFixedString('baz', 16)) FROM multi_if_check;
CREATE TABLE test_7B3948387E4A223426403D642D575778794778337A3A26263C7D3824434E724D284C367729335373(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01350_intdiv_nontrivial_fpe.sql from pid=1714' 
SELECT less(NULL, NULL);
DROP TABLE test_max_size_drop;
INSERT INTO test_01193_18429.table_7_599 VALUES 
create table out_02231 as buffer_02231 engine=Null();
/* ddl_entry=query-0000000006 */ RESTORE TABLE test_84btwo5w.test FROM Disk('backups', '02907_backup_restore_default_nullable_test_84btwo5w') SETTINGS restore_uuid = 'c3de5b3f-97dc-455a-b92b-15c2a75a44ca', internal = true, async = true, host_id = 'localhost:9000', cluster_host_ids = [['localhost:9000']]
CREATE INDEX idx_tab4_4 ON tab4 (col4 DESC);
SELECT 'ÃÂ¿ÃÂÃÂ¸ÃÂ²ÃÂµÃÂ ÃÂ¿ÃÂ' AS x, lengthUTF8(x) AS y;
SELECT formatDateTime(toDateTime('2018-01-02 22:33:44'), '%W'), formatDateTime(toDate32('2018-01-02'), '%W');
INSERT INTO test_01193_18429.table_9_461 VALUES 
GRANT CURRENT GRANTS ON *.* TO admin WITH GRANT OPTION
INSERT INTO test_01193_18429.table_3_8 VALUES 
SELECT 'The results of query: SELECT id, mapExtractKeyLike(map, \'5-K1\') FROM map_extractKeyLike_test ORDER BY id;';
SELECT arrayEnumerateUniqRanked(2, [1,2,1],1,[[[1,2,3],[1,2,3],[1,2,3]],[[1,2,3],[1,2,3],[1,2,3]],[[1,2]]],2);
CREATE USER IF NOT EXISTS `02833_HTTP_WITH_SESSION_ID_USER_25955` IDENTIFIED WITH plaintext_password
CREATE DATABASE IF NOT EXISTS test_diz2mq6x 
select [4] = multiSearchAllPositions(materialize('abcdefgh'), ['def']) from system.numbers limit 10;
SELECT 7, 5, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (7 < 13 AND 5 > 0 ? 7 : 0)), throwIf(last != (7 < 13 AND 5 > 0 ? least(13 - 1, 7 + 5 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 7, 5);
select [0] = multiSearchAllPositions(materialize('abc'), ['bcde']);
SELECT toDayOfYear(NULL);
SELECT 'Running test stateless/01451_detach_drop_part.sql from pid=1720' 
DROP DATABASE IF EXISTS test_yz9uirrg 
CREATE DATABASE IF NOT EXISTS test_0p2pxqsz 
SELECT cutIPv6(IPv6StringToNum('2001:0DB8:AC10:FE01:FEED:BABE:CAFE:F00D'), 0, 9);
EXPLAIN QUERY TREE SELECT count() FROM regression_for_in_operator_view WHERE g = '5' OR g = '6' SETTINGS allow_experimental_analyzer = 1;
SELECT * FROM set_idx WHERE NOT (i32 = 5 AND i32 + f64 < 12 AND 3 < d AND d < 7 AND (s = 'bac' OR s = 'cba')) ORDER BY dt FORMAT JSON
CREATE TABLE test_01193_18429.table_7_67 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT multiIf((col1 % 2) = 0, toFixedString(col2, 16), (col1 % 3) = 0, 'bar', col4) FROM multi_if_check;
INSERT INTO test_01193_18429.table_10_980 VALUES 
select log2(1) = 0;
SELECT * FROM arrow_types2 ORDER BY int8 FORMAT ArrowStream
SELECT c, b, e FROM t_fixed_prefix WHERE bitNot(a) = 1 ORDER BY c, b, e SETTINGS optimize_read_in_order = 0
DROP TABLE IF EXISTS testx;
SELECT 59;
SELECT toTypeName(f32), toTypeName(f64) FROM generateRandom('f32 Float32, f64 Float64') LIMIT 1;
SELECT 'Running test stateless/02293_h3_line.sql from pid=1722' 
select splitByString('ababab', 'ababab');
CREATE TABLE test_4F5C4F3F464230673C664B3F25635F49392E4E634F3E40673D2C34323A3C264C6E695E2863565646(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_us6qzm3y 
CREATE TABLE test_01193_18429.table_8_715 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT quantile(0.5)(NULL), quantile(0.9)(NULL), quantiles(0.1, 0.2)(CAST(NULL, 'Nullable(UInt32)')) FROM `test_1373z71y`.`t1` WITH TOTALS
INSERT INTO t_sparse_s3 SELECT 14, number % 2, 'foo' FROM numbers(8192);
CREATE USER user_test_02337 IDENTIFIED WITH plaintext_password
DROP DATABASE IF EXISTS test_5z8z4jov 
SELECT 'SELECT toInt8(-1) == N';
OPTIMIZE TABLE dst;
ALTER TABLE concurrent_alter_column ADD COLUMN c253 DOUBLE;
select '-- empty';
SELECT 'First JOIN FULL second JOIN RIGHT';
CREATE TABLE test_02908_r2_9 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_9', 'r2') ORDER BY tuple()
CREATE TABLE test_01193_18429.table_6_77 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_282B507341795A7A635453282F742275495D4A72786E474455422F3D2441654C2866543C2553633E(x UInt8) Engine=Memory;
SELECT count() == 2 FROM null_in WHERE i not in test_set;
INSERT INTO r1 SELECT 73
EXPLAIN AST ALTER TABLE t REPLACE PARTITION 'p' FROM t2;
DROP TABLE IF EXISTS mutations_cleaner_r1 SYNC
CREATE TABLE test_01193_18429.table_3_520 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT throwIf(count() != 4) FROM `test_6rksvzqh`.`t3` GROUP BY `a`
SELECT `UserID` FROM `test_c5zukzwt`.`users` WHERE `UserID` IN ((SELECT arrayJoin([1468013291393583084, 1321770221388956068])) AS `_subquery3807`)
insert into distinct_in_order select distinct * from distinct_cardinality_low order by high settings optimize_distinct_in_order=1;
SELECT COUNT() FROM bloom_filter_array_lc_null_types_test WHERE has(u32, 100);
CREATE TABLE primary (`primary` String) ENGINE = MergeTree ORDER BY primary SETTINGS min_bytes_for_wide_part = 0, min_bytes_for_wide_part = 0, index_granularity = 50676, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 4, merge_max_block_size = 12062, prefer_fetch_merged_part_size_threshold = 4333686504, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 24437650, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 40001, primary_key_compress_block_size = 10685 AS SELECT * FROM numbers(1000)
INSERT INTO test_01193_18429.table_7_443 VALUES 
CREATE INDEX idx_tab3_2 ON tab3 (col1 DESC,col0 DESC);
SELECT DISTINCT number FROM ( (SELECT DISTINCT number FROM numbers(1)) UNION ALL (SELECT DISTINCT number FROM numbers(2)) ) ORDER BY number
CREATE TABLE literal_alias_misclassification (`id` Int64, `a` Nullable(String), `b` Nullable(Int64)) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 27603, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 3132, prefer_fetch_merged_part_size_threshold = 1262067950, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 7092012, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 52178, primary_key_compress_block_size = 40975
SELECT arrayEnumerateUniq( ['a','b','c']);
SELECT materialize('Hello') LIKE '%_%';
SELECT arrayEnumerateUniq( [['a','b','a'],['a','b','a'],['c']]);
CREATE TABLE test_01193_18429.table_4_496 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT hex(toString(uniqExactState(x))) FROM (SELECT quantileState(number) AS x FROM numbers(1000));
INSERT INTO test_01193_18429.table_6_736 VALUES 
SYSTEM STOP MERGES replacing_m3;
DROP TABLE constraint_constant_nullable_expression_that_contains_null;
attach table shard_1.to;
CREATE INDEX idx_tab2_2 ON tab2 (col3);
DROP TABLE IF EXISTS table_for_rename_pk;
SELECT table, name, type FROM system.data_skipping_indices WHERE database = currentDatabase() AND table = 'tab';
CREATE TABLE test_01193_18429.table_4_605 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_4_914 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT count() FROM test_02559 PREWHERE id2>=0 AND (1 OR ignore(id1)) WHERE ignore(id1)=0;
SELECT 'Running test stateless/00098_2_union_all.sql from pid=1714' 
INSERT INTO test_01193_18429.table_4_909 VALUES 
CREATE TABLE test_02908_r3_99 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_99', 'r3') ORDER BY tuple()
insert into function hdfs('hdfs://localhost:12222/02368_data_5.jsonl') select range(number % 1000) from numbers(100000) settings hdfs_truncate_on_insert=1, output_format_parallel_formatting=0
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt16(1), toUInt16(2)] WHEN (number % 3) = 0 THEN [toInt8(2), toInt8(3)] ELSE [toFloat64(3), toFloat64(3)] END FROM system.numbers LIMIT 10;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c9) AND c3) OR ((NOT c9) AND c9 AND (NOT c7) AND c7) OR (c2 AND c0 AND (NOT c1) AND c8 AND c6) OR (c3) SETTINGS convert_query_to_cnf = 0
INSERT INTO mt VALUES /* (5, 1) */ 
DROP DATABASE IF EXISTS test_gt39ds9z 
SELECT number, 'Hello, world!' FROM numbers(6000) INTO OUTFILE '/var/lib/clickhouse/user_files/test_ppeg0s5q/zst_1.zst' COMPRESSION 'zst' LEVEL 1
alter table many_mutations delete where y = 231 * 2 settings mutations_sync = 0;
select b as c, d as a from t1 join t2 on c = a;
SELECT k1, k2, k3, sum(value) v FROM t_proj_external GROUP BY k1, k2, k3 ORDER BY k1, k2, k3;
insert into morton_numbers_02457 select n1.number, n2.number, 0, 0, 0, 0, 0, 0 from numbers(pow(2, 32)-8,8) n1 cross join numbers(pow(2, 32)-8, 8) n2 cross join numbers(pow(2, 32)-8, 8) n3 cross join numbers(pow(2, 32)-8, 8) n4 ;
select 3 = countEqual(materialize([0 as x, 1, x, x]), materialize(x)) from system.numbers limit 10;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (90 < 17 AND 57 > 0 ? 90 : 0)), throwIf(last != (90 < 17 AND 57 > 0 ? least(17 - 1, 90 + 57 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(17) LIMIT 90, 57);
SELECT 'Constant result';
CREATE TABLE test_01193_18429.table_8_234 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_337340474B3C3848305A67606922376C757851587858595F2B2E772A7E605578254C72553D4F2F45(x UInt8) Engine=Memory;
DETACH TABLE t_large;
select arraySlice([1, 2, 3, 4, 5, 6], 2, 0);
select 2, * from rmt2 order by n;
DROP DATABASE IF EXISTS test_uk8fsp19 
EXPLAIN PIPELINE SELECT a, b FROM t_fixed_prefix WHERE bitNot(c) = 1 ORDER BY a, b SETTINGS optimize_read_in_order = 1
SELECT * FROM test_02559 ORDER BY x;
CREATE TABLE test_01193_18429.table_10_595 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_5_191 VALUES 
SELECT 't1 ALL INNER JOIN t2 | bs = 1';
CREATE DATABASE IF NOT EXISTS test_hozypild 
DETACH TABLE replicated_table_for_reset_setting2;
SELECT avgWeighted(x, w) FROM values('x UInt8, w Float32', (4, 1), (1, 0), (10, 2));
CREATE TABLE test_02908_r2_76 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_76', 'r2') ORDER BY tuple()
SELECT argMax(number, 1) FROM (Select number as number from numbers(10, 10000)) settings max_threads=1, max_block_size=20000;
CREATE TABLE test_2B40557B6B49576B2C4F7275535E47474B365E354F5D6F51542D502F264164582E563D2C4F647143(x UInt8) Engine=Memory;
SELECT * FROM t64 ORDER BY u64;
INSERT INTO test_01193_18429.table_1_763 VALUES 
INSERT INTO test_01193_18429.table_3_508 VALUES 
CREATE TABLE test_4048694934342125237E34315C244D2728684B47387C4D53605F4C2E225A3E42513624664072587A(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_9_477 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT CASE WHEN 1 THEN [col2, 'bar'] WHEN (col1 % 3) = 0 THEN ['foo', col5] ELSE [col6, 'bar'] END FROM multi_if_check;
DROP TABLE IF EXISTS lc_empty_part_bug;
DROP TABLE 02339_db.test_table;
SELECT * FROM system.parts FORMAT Null
CREATE TABLE test_2C5F4B386D346B2171536D656643206D3671432C37344F52647D324F71425A2858434C432E676273(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_1_17 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
insert into funnel_test2(timestamp, event) values 
select * from file('test_02167.TSVWithNamesAndTypes', 'TSVWithNamesAndTypes')
create table t_avro_5 (x UInt32, s String) engine=File(Avro)
SELECT arrayJoin([nan, nan, nan]) SETTINGS extremes = 1;
CREATE TABLE test_4660345D237244222C3B2C61255337614D3E65286C7448744827296525305C225B7A612C59744A2C(x UInt8) Engine=Memory;
create table distr (number UInt64) engine = Distributed(test_cluster_two_shards_different_databases, '', num_01232);
INSERT INTO test_01193_18429.table_10_879 VALUES 
CREATE DATABASE IF NOT EXISTS test_r4jaasxc 
EXPLAIN QUERY TREE run_passes=1 SELECT value1 FROM date_t WHERE toYear(date1) < 1993 AND id BETWEEN 1 AND 3 SETTINGS allow_experimental_analyzer=1;
select sipHash128Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55)) == sipHash128(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55));
SELECT x, (SELECT 1 WHERE NULL) AS x FORMAT Null;
CREATE DATABASE IF NOT EXISTS test_dajwr4ej 
SET parallel_replicas_for_non_replicated_merge_tree=1;
CREATE TABLE test_01193_18429.table_1_467 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
explain header = 1 select 1 as x;
select quantilesGK(1000, 100/1000, 200/1000, 250/1000, 314/1000, 777/1000)(number + 1) from numbers(1000);
DROP DATABASE 01720_dictionary_db;
SELECT CASE WHEN (number % 2) = 0 THEN toFloat32(1) WHEN (number % 3) = 0 THEN toUInt16(2) ELSE toInt32(3) END FROM system.numbers LIMIT 10;
SELECT '8', peak_threads_usage, (select count() from system.query_thread_log WHERE system.query_thread_log.query_id = '02871_1_215652_8' AND current_database = currentDatabase()) = length(thread_ids), length(thread_ids) >= peak_threads_usage FROM system.query_log WHERE type = 'QueryFinish' AND query_id = '02871_1_215652_8' AND current_database = currentDatabase()
SELECT -1, 32769, -1 = 32769, -1 != 32769, -1 < 32769, -1 <= 32769, -1 > 32769, -1 >= 32769, 32769 = -1, 32769 != -1, 32769 < -1, 32769 <= -1, 32769 > -1, 32769 >= -1 , toInt8(-1) = toUInt16(32769), toInt8(-1) != toUInt16(32769), toInt8(-1) < toUInt16(32769), toInt8(-1) <= toUInt16(32769), toInt8(-1) > toUInt16(32769), toInt8(-1) >= toUInt16(32769), toUInt16(32769) = toInt8(-1), toUInt16(32769) != toInt8(-1), toUInt16(32769) < toInt8(-1), toUInt16(32769) <= toInt8(-1), toUInt16(32769) > toInt8(-1), toUInt16(32769) >= toInt8(-1) , toInt8(-1) = toUInt32(32769), toInt8(-1) != toUInt32(32769), toInt8(-1) < toUInt32(32769), toInt8(-1) <= toUInt32(32769), toInt8(-1) > toUInt32(32769), toInt8(-1) >= toUInt32(32769), toUInt32(32769) = toInt8(-1), toUInt32(32769) != toInt8(-1), toUInt32(32769) < toInt8(-1), toUInt32(32769) <= toInt8(-1), toUInt32(32769) > toInt8(-1), toUInt32(32769) >= toInt8(-1) , toInt8(-1) = toInt32(32769), toInt8(-1) != toInt32(32769), toInt8(-1) < toInt32(32769), toInt8(-1) <= toInt32(32769), toInt8(-1) > toInt32(32769), toInt8(-1) >= toInt32(32769), toInt32(32769) = toInt8(-1), toInt32(32769) != toInt8(-1), toInt32(32769) < toInt8(-1), toInt32(32769) <= toInt8(-1), toInt32(32769) > toInt8(-1), toInt32(32769) >= toInt8(-1) , toInt8(-1) = toUInt64(32769), toInt8(-1) != toUInt64(32769), toInt8(-1) < toUInt64(32769), toInt8(-1) <= toUInt64(32769), toInt8(-1) > toUInt64(32769), toInt8(-1) >= toUInt64(32769), toUInt64(32769) = toInt8(-1), toUInt64(32769) != toInt8(-1), toUInt64(32769) < toInt8(-1), toUInt64(32769) <= toInt8(-1), toUInt64(32769) > toInt8(-1), toUInt64(32769) >= toInt8(-1) , toInt8(-1) = toInt64(32769), toInt8(-1) != toInt64(32769), toInt8(-1) < toInt64(32769), toInt8(-1) <= toInt64(32769), toInt8(-1) > toInt64(32769), toInt8(-1) >= toInt64(32769), toInt64(32769) = toInt8(-1), toInt64(32769) != toInt8(-1), toInt64(32769) < toInt8(-1), toInt64(32769) <= toInt8(-1), toInt64(32769) > toInt8(-1), toInt64(32769) >= toInt8(-1) , toInt16(-1) = toUInt16(32769), toInt16(-1) != toUInt16(32769), toInt16(-1) < toUInt16(32769), toInt16(-1) <= toUInt16(32769), toInt16(-1) > toUInt16(32769), toInt16(-1) >= toUInt16(32769), toUInt16(32769) = toInt16(-1), toUInt16(32769) != toInt16(-1), toUInt16(32769) < toInt16(-1), toUInt16(32769) <= toInt16(-1), toUInt16(32769) > toInt16(-1), toUInt16(32769) >= toInt16(-1) , toInt16(-1) = toUInt32(32769), toInt16(-1) != toUInt32(32769), toInt16(-1) < toUInt32(32769), toInt16(-1) <= toUInt32(32769), toInt16(-1) > toUInt32(32769), toInt16(-1) >= toUInt32(32769), toUInt32(32769) = toInt16(-1), toUInt32(32769) != toInt16(-1), toUInt32(32769) < toInt16(-1), toUInt32(32769) <= toInt16(-1), toUInt32(32769) > toInt16(-1), toUInt32(32769) >= toInt16(-1) , toInt16(-1) = toInt32(32769), toInt16(-1) != toInt32(32769), toInt16(-1) < toInt32(32769), toInt16(-1) <= toInt32(32769), toInt16(-1) > toInt32(32769), toInt16(-1) >= toInt32(32769), toInt32(32769) = toInt16(-1), toInt32(32769) != toInt16(-1), toInt32(32769) < toInt16(-1), toInt32(32769) <= toInt16(-1), toInt32(32769) > toInt16(-1), toInt32(32769) >= toInt16(-1) , toInt16(-1) = toUInt64(32769), toInt16(-1) != toUInt64(32769), toInt16(-1) < toUInt64(32769), toInt16(-1) <= toUInt64(32769), toInt16(-1) > toUInt64(32769), toInt16(-1) >= toUInt64(32769), toUInt64(32769) = toInt16(-1), toUInt64(32769) != toInt16(-1), toUInt64(32769) < toInt16(-1), toUInt64(32769) <= toInt16(-1), toUInt64(32769) > toInt16(-1), toUInt64(32769) >= toInt16(-1) , toInt16(-1) = toInt64(32769), toInt16(-1) != toInt64(32769), toInt16(-1) < toInt64(32769), toInt16(-1) <= toInt64(32769), toInt16(-1) > toInt64(32769), toInt16(-1) >= toInt64(32769), toInt64(32769) = toInt16(-1), toInt64(32769) != toInt16(-1), toInt64(32769) < toInt16(-1), toInt64(32769) <= toInt16(-1), toInt64(32769) > toInt16(-1), toInt64(32769) >= toInt16(-1) , toInt32(-1) = toUInt16(32769), toInt32(-1) != toUInt16(32769), toInt32(-1) < toUInt16(32769), toInt32(-1) <= toUInt16(32769), toInt32(-1) > toUInt16(32769), toInt32(-1) >= toUInt16(32769), toUInt16(32769) = toInt32(-1), toUInt16(32769) != toInt32(-1), toUInt16(32769) < toInt32(-1), toUInt16(32769) <= toInt32(-1), toUInt16(32769) > toInt32(-1), toUInt16(32769) >= toInt32(-1) , toInt32(-1) = toUInt32(32769), toInt32(-1) != toUInt32(32769), toInt32(-1) < toUInt32(32769), toInt32(-1) <= toUInt32(32769), toInt32(-1) > toUInt32(32769), toInt32(-1) >= toUInt32(32769), toUInt32(32769) = toInt32(-1), toUInt32(32769) != toInt32(-1), toUInt32(32769) < toInt32(-1), toUInt32(32769) <= toInt32(-1), toUInt32(32769) > toInt32(-1), toUInt32(32769) >= toInt32(-1) , toInt32(-1) = toInt32(32769), toInt32(-1) != toInt32(32769), toInt32(-1) < toInt32(32769), toInt32(-1) <= toInt32(32769), toInt32(-1) > toInt32(32769), toInt32(-1) >= toInt32(32769), toInt32(32769) = toInt32(-1), toInt32(32769) != toInt32(-1), toInt32(32769) < toInt32(-1), toInt32(32769) <= toInt32(-1), toInt32(32769) > toInt32(-1), toInt32(32769) >= toInt32(-1) , toInt32(-1) = toUInt64(32769), toInt32(-1) != toUInt64(32769), toInt32(-1) < toUInt64(32769), toInt32(-1) <= toUInt64(32769), toInt32(-1) > toUInt64(32769), toInt32(-1) >= toUInt64(32769), toUInt64(32769) = toInt32(-1), toUInt64(32769) != toInt32(-1), toUInt64(32769) < toInt32(-1), toUInt64(32769) <= toInt32(-1), toUInt64(32769) > toInt32(-1), toUInt64(32769) >= toInt32(-1) , toInt32(-1) = toInt64(32769), toInt32(-1) != toInt64(32769), toInt32(-1) < toInt64(32769), toInt32(-1) <= toInt64(32769), toInt32(-1) > toInt64(32769), toInt32(-1) >= toInt64(32769), toInt64(32769) = toInt32(-1), toInt64(32769) != toInt32(-1), toInt64(32769) < toInt32(-1), toInt64(32769) <= toInt32(-1), toInt64(32769) > toInt32(-1), toInt64(32769) >= toInt32(-1) , toInt64(-1) = toUInt16(32769), toInt64(-1) != toUInt16(32769), toInt64(-1) < toUInt16(32769), toInt64(-1) <= toUInt16(32769), toInt64(-1) > toUInt16(32769), toInt64(-1) >= toUInt16(32769), toUInt16(32769) = toInt64(-1), toUInt16(32769) != toInt64(-1), toUInt16(32769) < toInt64(-1), toUInt16(32769) <= toInt64(-1), toUInt16(32769) > toInt64(-1), toUInt16(32769) >= toInt64(-1) , toInt64(-1) = toUInt32(32769), toInt64(-1) != toUInt32(32769), toInt64(-1) < toUInt32(32769), toInt64(-1) <= toUInt32(32769), toInt64(-1) > toUInt32(32769), toInt64(-1) >= toUInt32(32769), toUInt32(32769) = toInt64(-1), toUInt32(32769) != toInt64(-1), toUInt32(32769) < toInt64(-1), toUInt32(32769) <= toInt64(-1), toUInt32(32769) > toInt64(-1), toUInt32(32769) >= toInt64(-1) , toInt64(-1) = toInt32(32769), toInt64(-1) != toInt32(32769), toInt64(-1) < toInt32(32769), toInt64(-1) <= toInt32(32769), toInt64(-1) > toInt32(32769), toInt64(-1) >= toInt32(32769), toInt32(32769) = toInt64(-1), toInt32(32769) != toInt64(-1), toInt32(32769) < toInt64(-1), toInt32(32769) <= toInt64(-1), toInt32(32769) > toInt64(-1), toInt32(32769) >= toInt64(-1) , toInt64(-1) = toUInt64(32769), toInt64(-1) != toUInt64(32769), toInt64(-1) < toUInt64(32769), toInt64(-1) <= toUInt64(32769), toInt64(-1) > toUInt64(32769), toInt64(-1) >= toUInt64(32769), toUInt64(32769) = toInt64(-1), toUInt64(32769) != toInt64(-1), toUInt64(32769) < toInt64(-1), toUInt64(32769) <= toInt64(-1), toUInt64(32769) > toInt64(-1), toUInt64(32769) >= toInt64(-1) , toInt64(-1) = toInt64(32769), toInt64(-1) != toInt64(32769), toInt64(-1) < toInt64(32769), toInt64(-1) <= toInt64(32769), toInt64(-1) > toInt64(32769), toInt64(-1) >= toInt64(32769), toInt64(32769) = toInt64(-1), toInt64(32769) != toInt64(-1), toInt64(32769) < toInt64(-1), toInt64(32769) <= toInt64(-1), toInt64(32769) > toInt64(-1), toInt64(32769) >= toInt64(-1) 
INSERT INTO 01754_dictionary_db.complex_key_simple_attributes_source_table VALUES
SELECT arraySort(x -> x.2, [tuple('a', 10)]) AS X FROM ttt01746 WHERE d >= toDate('2021-03-03') - 2 ORDER BY n LIMIT 1;
SELECT test_table.a FROM test_table ORDER BY (test_table.a != test_table.a) + 1;
select count() from system.columns where table='concurrent_alter_add_drop_1' and database='test_acn9rii2'
SELECT CASE WHEN (number % 2) = 0 THEN [toInt64(1), toInt64(2)] WHEN (number % 3) = 0 THEN [toUInt32(2), toUInt32(3)] ELSE [toInt32(3), toInt32(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_6F7A6D7A2A6620684755643242703B3827574D27267D204C39492E323D7267574E7D6A37266A2B34(x UInt8) Engine=Memory;
CREATE TABLE b (`i` int) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 2, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 41, merge_max_block_size = 4855, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 853552, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 7321140561, index_granularity_bytes = 25129124, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 60512, primary_key_compress_block_size = 9690
CREATE DATABASE IF NOT EXISTS test_piqni1xe 
ALTER TABLE defaults ADD COLUMN n.c Array(UInt8) DEFAULT arrayMap(x -> 0, n.a) AFTER n.a;
SELECT name, column, serialization_kind FROM system.parts_columns WHERE table = 't_sparse_full' AND database = currentDatabase() AND active ORDER BY name, column;
INSERT INTO test_01193_18429.table_9_363 VALUES 
set optimize_if_transform_strings_to_enum = 1;
SELECT toStartOfInterval(toDate(17933), INTERVAL 1 week);
CREATE DATABASE IF NOT EXISTS test_fecpbtvt 
DROP TABLE IF EXISTS t_sparse_intersect;
SELECT toUInt8(0) AS x, toUInt32(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
SELECT sipHash128ReferenceKeyed(NULL);
CREATE TEMPORARY TABLE table_gcd_codec_int128 (n Int128 CODEC(GCD, LZ4)) ENGINE = Memory;
select makeDate(1969,12,1);
INSERT INTO test_01193_18429.table_3_981 VALUES 
DROP DATABASE IF EXISTS test_ntg6zdph 
CREATE DATABASE IF NOT EXISTS test_dow316rf 
ALTER TABLE concurrent_alter_column ADD COLUMN c261 DOUBLE;
SELECT format('The {0} to all questions is {1}.', 'answer', materialize(44.44 :: Decimal(2)));
SELECT id as shift_right_bit,fixedStr as arg,bin(bitShiftRight(fixedStr, id)) as fixed_string_res FROM test_bit_shift_right_string_integer;
INSERT INTO test_01193_18429.table_9_228 VALUES 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (13 < 37 AND 94 > 0 ? 13 : 0)), throwIf(last != (13 < 37 AND 94 > 0 ? least(37 - 1, 13 + 94 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(37) LIMIT 13, 94);
CREATE TABLE test_2B3C2A7330754B2E73404C4D2857644C2161727C5967685D635951574C332941742D43214D302960(x UInt8) Engine=Memory;
SELECT number FROM system.numbers LIMIT 1
CREATE TABLE test_54406D23407E494A2F76766A5C5258436D27683B5F6E787B6E2A606F5E5C5D385D7A2E2366383C79(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_8_806 VALUES 
DROP TABLE dist_test_01040;
INSERT INTO test_01193_18429.table_10_836 VALUES 
create database test_01600;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (90 < 41 AND 15 > 0 ? 90 : 0)), throwIf(last != (90 < 41 AND 15 > 0 ? least(41 - 1, 90 + 15 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(41) LIMIT 90, 15);
CREATE DATABASE IF NOT EXISTS test_sxdegpwo 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c0) AND (NOT c0) AND (NOT c0) AND (NOT c4) AND (NOT c4)) OR (c7 AND c8 AND (NOT c0) AND c3 AND (NOT c2)) OR (c2) OR ((NOT c0) AND (NOT c1)) OR ((NOT c6) AND c0) SETTINGS convert_query_to_cnf = 1
SELECT toDate32('2022-08-22 01:02:03');
INSERT INTO test_01193_18429.table_10_275 VALUES 
INSERT INTO r5 SELECT 89
SELECT * FROM remote('127.0.0.{1,1}', system, one);
SELECT 'Running test stateless/02967_http_compressed.sh from pid=1724' 
CREATE DATABASE database_for_dict_01018;
SELECT 'Running test stateless/01010_low_cardinality_and_native_http.sh from pid=1724' 
SELECT CASE WHEN (col1 % 2) = 0 THEN [col2, col3] WHEN (col1 % 3) = 0 THEN [col4, 'bar'] ELSE ['foo', col7] END FROM multi_if_check;
EXPLAIN QUERY TREE SELECT count() FROM constraint_test_constants WHERE (a > 100 OR b > 100 OR c > 100) AND (a <= 100 OR b > 100 OR c > 100) AND (NOT b > 100 OR c > 100) AND (c > 100) SETTINGS allow_experimental_analyzer = 1;
SELECT h3HexAreaKm2(8);
alter table data_01900_2 update s = 'bar_9' where 1;
CREATE TABLE test_01193_18429.table_2_538 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 15, 10, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (15 < 13 AND 10 > 0 ? 15 : 0)), throwIf(last != (15 < 13 AND 10 > 0 ? least(13 - 1, 15 + 10 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 15, 10);
insert into test format Arrow
SELECT t1.id, t1.value, t2.id, t2.value, t3.id, t3.value FROM test_table_join_1 AS t1 INNER JOIN test_table_join_2 AS t2 ON test_table_join_1.id = test_table_join_2.id FULL JOIN test_table_join_3 AS t3 ON test_table_join_2.id = test_table_join_3.id;
CREATE TABLE test_01193_18429.table_10_551 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_tuple_nested_in_array VALUES 
DROP TABLE IF EXISTS TestTbl;
SELECT '[[1,1,1],[1,1,1],[1]] =';
select makeDate32(cast(1980.1 as Decimal(20,5)), 9, 17);
CREATE TABLE test_01193_18429.table_8_820 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT s FROM mergetree_00712 PREWHERE x AND y ORDER BY s;
select 0 = multiSearchAny(materialize('abcd'), ['cdef']) from system.numbers limit 10;
SELECT sumIfArray([1, NULL], [1, 0]) AS `x` FROM numbers(3)
CREATE TABLE test_01193_18429.table_7_248 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SET max_block_size = 129;
CREATE DATABASE IF NOT EXISTS test_qkj51l3p 
SELECT name FROM (SELECT path, name FROM system.zookeeper WHERE path LIKE '/clickhouse%' ORDER BY name) WHERE path LIKE '%02221_system_zookeeper_unrestricted_like_test_90m2pvar/02221_system_zookeeper_unrestricted_like%'
CREATE TABLE test_01193_18429.table_7_805 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO r4 SELECT 1 % 10 = 4 ? 1 - 1 : 1
CREATE DATABASE IF NOT EXISTS test_jg0u1w78 
CREATE DATABASE IF NOT EXISTS test_ilownhd8 
SELECT arrayEnumerateUniqRanked(2, [[], [1, 2, 3, 4], [3, 4, 5, 6]]);
CREATE TABLE test_523E71337678565C57617729432B372C3C6477572E60485B6342353A35275A31756B337928432F2C(x UInt8) Engine=Memory;
SELECT mapExtractKeyLike(NULL);
CREATE TABLE test_01193_18429.table_7_6 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE multidimensional ENGINE = MergeTree ORDER BY number SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.8851813673973083, replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 20777, prefer_fetch_merged_part_size_threshold = 5935570927, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 31, min_merge_bytes_to_use_direct_io = 1, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 64821, primary_key_compress_block_size = 64717 AS SELECT number, arrayMap(x -> (x, [x], [[x]], (x, toString(x))), arrayMap(x -> range(x), range(number % 10))) AS value FROM system.numbers LIMIT 100000
SELECT polygonsDistanceCartesian(NULL, NULL);
SELECT CASE WHEN (number % 2) = 0 THEN toInt16(1) WHEN (number % 3) = 0 THEN toUInt16(2) ELSE toFloat64(3) END FROM system.numbers LIMIT 10;
ALTER TABLE replicated_constraints2 ADD CONSTRAINT a_constraint CHECK a < 10;
CREATE DATABASE IF NOT EXISTS test_kgt8vnub 
SELECT 'Running test stateless/01031_mutations_interpreter_and_context.sh from pid=1718' 
INSERT INTO test_01193_18429.table_2_871 VALUES 
SELECT `x` FROM generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))', 1, 1, 1) LIMIT 1
CREATE DATABASE IF NOT EXISTS test_c0lgqht4 
DROP DATABASE IF EXISTS test_gwnxwds7 
CREATE TABLE test_594E3D794D6D375E67352A7E2B79547D293E2E4251286A705E60502B456A4C727B347B6A35472461(x UInt8) Engine=Memory;
INSERT INTO src_7 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 66
SELECT globalNullIn([], []);
DROP TABLE IF EXISTS constraint_constant_number_expression_non_uint8;
CREATE TABLE test_01193_18429.table_5_311 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO t_read_in_order VALUES 
SELECT 'Running test stateless/01271_http_code_parse_error.sh from pid=1724' 
SELECT s, replaceOne(s, '_', 'oo') AS a, replaceRegexpOne(s, '_', 'oo') AS b, a = b FROM (SELECT arrayJoin(['._', '.']) AS s);
CREATE TABLE test_37634764616E452260247C66527054655F383452216C5449712068767851406A7E42507B54723672(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS window_view_02342;
drop view if exists agg_view01747;
SELECT toStartOfWeek(toDateTime('1970-01-01 00:00:00', 'Canada/Atlantic'));
select (b, b) in tuple('a', 'a') from tab_00386
SELECT 'SELECT toStartOfQuarter(N, \'Asia/Istanbul\')';
SELECT name, active FROM system.parts WHERE database = currentDatabase() AND table = 'data_01660';
SELECT hopEnd(toDateTime('2020-01-09 12:00:01', 'US/Samoa'), INTERVAL '1' DAY, INTERVAL '3' DAY, 'US/Samoa');
SELECT multiIf((col1 % 2) = 0, ['foo', col3], 1, ['foo', 'bar'], ['foo', 'bar']) FROM multi_if_check;
SELECT 'Running test stateless/02920_alter_column_of_projections.sql from pid=1718' 
SET ROLE user_role_1;
DROP DATABASE IF EXISTS test_vz1nad65 
SELECT 'Running test stateless/02355_control_block_size_in_array_join.sql from pid=1714' 
SELECT * FROM test_r2;
SELECT * FROM (SELECT materialize(1) AS x) AS t1 ALL RIGHT JOIN (SELECT 2 AS x) AS t2 ON t1.x = t2.x;
INSERT INTO `table` FORMAT Values 
SELECT CASE WHEN (number % 2) = 0 THEN [toInt64(1), toInt64(2)] WHEN (number % 3) = 0 THEN [toUInt32(2), toUInt32(3)] ELSE [toInt16(3), toInt16(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE subcolumns (`t` Tuple(a Array(Nullable(UInt32)), u UInt32, s Nullable(String)), `arr` Array(Nullable(String)), `arr2` Array(Array(Nullable(String))), `lc` LowCardinality(String), `nested` Nested(col1 String, col2 Nullable(UInt32))) ENGINE = MergeTree ORDER BY tuple() SETTINGS min_bytes_for_wide_part = '10M', index_granularity = 4544, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 14236, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 103842, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 8900937446, index_granularity_bytes = 382210, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 92237, primary_key_compress_block_size = 11477
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (91 < 28 AND 52 > 0 ? 91 : 0)), throwIf(last != (91 < 28 AND 52 > 0 ? least(28 - 1, 91 + 52 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(28) LIMIT 91, 52);
SELECT * FROM url('http://[2001:db8:1::242:ac11:2]:40865/','JSONAsString') SETTINGS max_download_buffer_size=10,max_download_threads=2;
insert into tp_1 select number, number from numbers(3);
select * from data_01801 where key = 0 order by key settings max_rows_to_read=10 format Null;
select * from test_tab
CREATE TABLE test_1 (`a` Int32) ENGINE = MergeTree ORDER BY tuple() SETTINGS disk = disk(type = cache, max_size = '1Mi', path = '/var/lib/clickhouse/filesystem_caches/kek', disk = 'local_disk'), index_granularity = 19497, min_bytes_for_wide_part = 392389345, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 20280, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 10370067, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 13935, primary_key_compress_block_size = 51992
INSERT INTO test_01193_18429.table_10_383 VALUES 
CREATE TABLE test_01193_18429.table_9_748 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select 0 = positionCaseInsensitive(materialize(''), 'ÃÂ°ÃÂÃÂ²') from system.numbers limit 10;
INSERT INTO mt_00160 (x, y, z) SELECT number AS x, number + 10 AS y, number / 2 AS z FROM system.numbers LIMIT 100000;
CREATE DATABASE IF NOT EXISTS test_ohuayr9m 
CREATE TABLE test_29684C4E6439415028202B2E2977482625393B7A45364C34733D274B307439432E5C5255777C735F(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_vyhrje07 
SELECT x FROM test1 WHERE x IN (SELECT x FROM remote('127.0.0.2', 'test_q0imjckn', test1))
SELECT * FROM temp WHERE x IN (toDecimal64(64, 2));
CREATE DATABASE IF NOT EXISTS test_naq8resb 
alter table many_mutations delete where y = 155 * 2 settings mutations_sync = 0;
CREATE DATABASE IF NOT EXISTS test_fse271ob 
EXPLAIN SYNTAX SELECT x FROM ( SELECT 1 AS x UNION ALL ( SELECT 1 UNION DISTINCT ( SELECT 1 UNION ALL SELECT 1 ) UNION ALL SELECT 1 ) );
INSERT INTO test_01193_18429.table_4_899 VALUES 
SELECT untuple(tuple(1 as a)) as t FORMAT Vertical SETTINGS allow_experimental_analyzer = 1;
CREATE TABLE test_01193_18429.table_2_415 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 10, 2, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (10 < 13 AND 2 > 0 ? 10 : 0)), throwIf(last != (10 < 13 AND 2 > 0 ? least(13 - 1, 10 + 2 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 10, 2);
SELECT wordShingleMinHashArgCaseInsensitiveUTF8(NULL, NULL);
insert into test select arrayJoin(range(10000));
insert into test select number, number::Variant(UInt64)::Variant(UInt64, Array(UInt64)) from numbers(1000000) settings max_insert_block_size = 100000, min_insert_block_size_rows=100000
CREATE DATABASE IF NOT EXISTS test_mpmi3jaz 
select 2 = position('abcdefgh', materialize('b')) from system.numbers limit 10;
DROP TABLE IF EXISTS mutate_and_zero_copy_replication2;
select format('{}{}{}', materialize(toFixedString('a', 1)), materialize(toFixedString('b', 1)), materialize('c')) == 'abc';
INSERT INTO test_01193_18429.table_2_455 VALUES 
SYSTEM STOP MERGES t_json_wide_parts;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c2) AND c0) OR (c6 AND (NOT c2)) OR (c7) OR (c6) OR (c0 AND (NOT c5)) OR (c4 AND c7) OR (c3 AND (NOT c2) AND c5 AND (NOT c0)) SETTINGS convert_query_to_cnf = 1
SELECT minMap(statusMap) FROM map_comb;
CREATE INDEX idx_tab2_2 ON tab2 (col4 DESC,col1 DESC);
SELECT arrayStringConcat(arr, '; ') FROM (SELECT [toDate('2021-10-01'), Null, toDate('2021-10-02')] AS arr);
CREATE TABLE test_01193_18429.table_3_251 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DATABASE IF NOT EXISTS test_la7y1vpf 
CREATE TABLE test_2443593D4C6237205D6F562D416C7148477257513A3C6023654E43745F5B672B5C7860686D644B3C(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01860_Distributed__shard_num_GROUP_BY.sql from pid=1715' 
DROP DATABASE IF EXISTS test_39sw43bh 
select toStartOfYear(x1) from t1;
CREATE INDEX idx_tab2_0 ON tab2 (col4,col0);
SELECT CASE WHEN (number % 2) = 0 THEN toInt16(1) WHEN (number % 3) = 0 THEN toInt32(2) ELSE toFloat64(3) END FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/02906_force_optimize_projection_name.sql from pid=1718' 
select 'arrayPushFront([1, 2, 3], l)';
alter table many_mutations delete where y = 954 * 2 settings mutations_sync = 0;
SELECT multiplyDecimal(toDecimal32(123.123, 3), toDecimal128(11.4, 1), 2);
INSERT INTO t_update_empty_nested SELECT 1, range(number % 10) FROM numbers(100000);
ALTER TABLE table_for_alter ADD COLUMN order UInt32, MODIFY ORDER BY (d, order);
SELECT 'Running test stateless/01362_year_of_ISO8601_week_modificators_for_formatDateTime.sql from pid=1724' 
SELECT 'ab\ndef' ILIKE '%Abc%def%';
SELECT multiIf((number % 2) = 0, toFloat32(1), (number % 3) = 0, toUInt8(2), toInt32(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_3_984 VALUES 
DROP DATABASE IF EXISTS test_tmjzjbym 
ATTACH TABLE new_syntax_01071_test;
CREATE DATABASE IF NOT EXISTS test_bkpobfc3 
SELECT singleValueOrNull((SELECT 'Hello'));
create table data_01223 (key Int) Engine=Memory();
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (3 < 20 AND 14 > 0 ? 3 : 0)), throwIf(last != (3 < 20 AND 14 > 0 ? least(20 - 1, 3 + 14 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(20) LIMIT 3, 14);
create table Y (id Int32, y_name String) engine Memory;
select count(), sum(number) from file('02841.parquet') where indexHint(dt64_ms between '2000-01-01' and '2005-01-01');
EXPLAIN SYNTAX (SELECT (sum(float64) + 2 * count(float64)) + (sum(float64) + 3 * count(float64)) From test_table);
DROP DATABASE IF EXISTS test_aveqenpl 
SELECT ifNull(1, NULL) AS res, toTypeName(res);
SELECT arrayReverseFill(NULL);
INSERT INTO test_01193_18429.table_10_399 VALUES 
SELECT * FROM products AS p GLOBAL LEFT JOIN cat_hist AS c USING (categoryId);
INSERT INTO test_01193_18429.table_1_190 VALUES 
SELECT product_name, group_name, price, rank() OVER (PARTITION BY group_name ORDER BY price) rank FROM products INNER JOIN product_groups USING (group_id) order by group_name, rank, price, product_name;
CREATE VIEW view1_00270 AS SELECT number FROM system.numbers LIMIT 10;
CREATE TABLE test_6B32393F432647356324343D236A3761782F40236D5A407B47773927277355203E4D75663C544D72(x UInt8) Engine=Memory;
SELECT space(3::Int16), length(space(3::Int16));
CREATE INDEX idx_tab2_2 ON tab2 (col1 DESC,col0,col3 DESC);
CREATE TABLE IF NOT EXISTS right_table (`id` UInt64, `val_right` String) ENGINE = ReplacingMergeTree ORDER BY id SETTINGS index_granularity = 53916, min_bytes_for_wide_part = 75575527, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 21770, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 107786, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10174945113, index_granularity_bytes = 15145779, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 14436, primary_key_compress_block_size = 57717
CREATE TABLE test_01193_18429.table_5_412 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_9_264 VALUES 
SELECT 'Running test stateless/01764_table_function_dictionary.sql from pid=1705' 
INSERT INTO r2 SELECT 63 % 10 = 2 ? 63 - 1 : 63
SELECT toDateTime64('2002-12-12 23:23:23.123', 3) AS dt64, toString(dt64) SETTINGS session_timezone = 'Asia/Phnom_Penh';
CREATE DATABASE IF NOT EXISTS test_9v7ulb4q 
INSERT INTO r1 SELECT 46
CREATE DATABASE IF NOT EXISTS test_7dflpfez 
SELECT date_trunc('hour', toDateTime64('2020-01-01 04:11:22.123', 3, 'Europe/London'), 'America/Vancouver');
INSERT INTO test_x833jibq.t_async_insert_native_1 FORMAT Native
CREATE DATABASE IF NOT EXISTS test_gy6r6piq 
SELECT 'SELECT t1.a, t2.a FROM t1, t2 WHERE t1.b = t2.b';
CREATE DATABASE IF NOT EXISTS test_4q4ywjcz 
select toStartOfWeek(toDateTime(0, 'Africa/Monrovia'));
select type, new_part_name, parts_to_merge from system.replication_queue where database=currentDatabase() and table='mut';
SELECT number % 2 ? materialize(toFixedString('hello', 5)) : toFixedString('world', 5) FROM system.numbers LIMIT 5;
CREATE TABLE 01720_dictionary_db.dictionary_source_table ( key UInt8, value String ) ENGINE = TinyLog;
CREATE DATABASE IF NOT EXISTS test_z9wrpn2a 
CREATE DATABASE IF NOT EXISTS test_nal0nrqf 
INSERT INTO test_01193_18429.table_10_159 VALUES 
CREATE TABLE test_01193_18429.table_9_178 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT time, round(exp_smooth, 10), bar(exp_smooth, -9223372036854775807, 1048575, 50) AS bar FROM (SELECT 2 OR (number = 0) OR (number >= 1) AS value, number AS time, exponentialTimeDecayedSum(2147483646)(value, time) OVER (RANGE BETWEEN CURRENT ROW AND CURRENT ROW) AS exp_smooth FROM numbers(1) WHERE 10) WHERE 25;
SELECT number % 2 ? toFixedString(toString(number), 2) : 'Hello' FROM system.numbers LIMIT 10;
SELECT domain('//foo:bar%41%40@e-%41-example1.com') AS Host;
select 3 = positionCaseInsensitive(materialize('abc'), 'C');
DROP TABLE t;
SELECT 'Running test stateless/02011_http_parsing.sh from pid=1722' 
SELECT quantileDeterministic(0.2)(d, 1) FROM datetime;
CREATE TABLE test_3647434C716A5D3661785F603034255E21234A6941545B5779627B7E783D3E2C397E3049754C5350(x UInt8) Engine=Memory;
CREATE VIEW g (`x` Int64) AS SELECT count() FROM s3('https://example.s3.amazonaws.com/a.csv', CSV, headers('foo' = '[HIDDEN]'))
select t1.a as c, t2.c as a from t1 join t2 on t1.a = t2.c;
CREATE TABLE test_01193_18429.table_7_599 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_4_849 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_2_128 VALUES 
CREATE TABLE test_3A2856465D6232655D2A4F36637D7B717B3D2C6A3C6A2C3E41444830472D233C2477723C414E2A42(x UInt8) Engine=Memory;
INSERT INTO test_02908_r1_190 SELECT rand64() FROM numbers(5);
SELECT CASE WHEN (number % 2) = 0 THEN [toInt64(1), toInt64(2)] WHEN (number % 3) = 0 THEN [toUInt32(2), toUInt32(3)] ELSE [toUInt8(3), toUInt8(3)] END FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/01917_distinct_on.sql from pid=1720' 
CREATE TABLE test_5C297630433753797E714135546539337C2B49707E20276D4B753674737C4E54217665552C487A53(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_e3xjjo2f 
SELECT 'Running test stateless/02903_empty_order_by_throws_error.sh from pid=1713' 
CREATE TABLE `02681_undrop_detach` (`id` Int32, `num` Int32) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 58712, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.05060265585780144, replace_long_file_name_to_hash = false, max_file_name_length = 101, merge_max_block_size = 11257, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 51189, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1461387197, index_granularity_bytes = 12168816, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 33154, primary_key_compress_block_size = 77258
drop table nested_map_multiple_values;
DROP DICTIONARY IF EXISTS simple_key_dictionary;
SELECT 'Running test stateless/00534_filimonov.sh from pid=1722' 
INSERT INTO test_01193_18429.table_3_15 VALUES 
DROP DATABASE IF EXISTS test_v4jvcr1h 
with groupUniqArrayArraySimpleState([number]) as c select toTypeName(c), c from numbers(1);
DROP DATABASE IF EXISTS test_d9n1md6p 
SELECT multiIf((number % 2) = 0, toFloat32(1), (number % 3) = 0, toInt8(2), toUInt8(3)) FROM system.numbers LIMIT 10;
ALTER TABLE concurrent_alter_column ADD COLUMN c290 DOUBLE;
select '#45440';
SELECT multiIf((col1 % 2) = 0, 'foo', 1, col3, col4) FROM multi_if_check;
SELECT 'check invalid params';
SELECT toTypeName(_CAST(42, 'UInt64')), toTypeName('hello'), toTypeName(_CAST(1659652253, 'DateTime')), toTypeName(_CAST([('2b95a497-3a5d-49af-bf85-15763318cde7', [1.2000000476837158, 3.4000000953674316])], 'Map(UUID, Array(Float32))'))
CREATE TABLE test_54795B7573664B59243A2E5A7462682F4B205E4B3E7347735B443D24325C2B3E262F7744635E6052(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt32(1), toUInt32(2)] WHEN (number % 3) = 0 THEN [toFloat64(2), toFloat64(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
set session_timezone = 'UTC';
DROP DATABASE IF EXISTS test_dihpv4am 
DROP TABLE IF EXISTS t_02147;
SELECT 'Running test stateless/01342_query_parameters_alias.sh from pid=1724' 
DROP TABLE IF EXISTS parquet_types5
CREATE TABLE alter_table_0 (`a` UInt8, `b` Int16, `c` Float32, `d` String, `e` Array(UInt8), `f` Nullable(UUID), `g` Tuple(UInt8, UInt16)) ENGINE = ReplicatedMergeTree('/clickhouse/tables/00993_system_parts_race_condition_drop_zookeeper_test_zoczfe66/alter_table', 'r_0') PARTITION BY b % 10 ORDER BY a SETTINGS old_parts_lifetime = 1, cleanup_delay_period = 0, cleanup_delay_period_random_add = 0, cleanup_thread_preferred_points_per_iteration = 0, replicated_max_mutations_in_one_entry = 315, index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 17222, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 5082719006, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75985, primary_key_compress_block_size = 73298
select '-------subtractSeconds---------';
CREATE TABLE test_01193_18429.table_5_887 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_3_912 VALUES 
DROP DATABASE IF EXISTS test_oqbfqhr8 
select arrayRotateRight([[[1, 2], [3, 4]], [[5, 6], [7, 8]]], 1);
DROP DICTIONARY 02183_direct_dictionary;
DROP DATABASE IF EXISTS test_e7uvcv0d 
SELECT [1,2] AS other, arr, round(arrayJaccardIndex(other, arr), 2) FROM array_jaccard_index ORDER BY arr;
INSERT INTO test_01193_18429.table_2_217 VALUES 
SYSTEM SYNC REPLICA replicated_deduplicate_by_columns_r1;
SELECT greatest([], []);
CREATE TABLE test_70646E582E7C762A555F355A526F724A2D41325E3370516820357B3D444D4F4C734D28443F543761(x UInt8) Engine=Memory;
select 0 = multiSearchAny(materialize('abc'), ['bcdefg']);
DROP DATABASE IF EXISTS test_lcvzumfa 
CREATE TABLE optimize_sorting (`a` UInt64, `b` UInt64, `c` UInt64) ENGINE = MergeTree ORDER BY (a, b) SETTINGS index_granularity = 56587, min_bytes_for_wide_part = 208410411, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 17, merge_max_block_size = 16701, prefer_fetch_merged_part_size_threshold = 9998690446, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1246654885, index_granularity_bytes = 19032732, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 73385, primary_key_compress_block_size = 78110
SELECT CAST('true', 'Bool') format Vertical;
DROP DICTIONARY IF EXISTS hierarchy_hashed_array_dictionary;
select dictGetAll('regexp_dict3', ('tag', 'topological_index', 'captured', 'parent'), 'clickhouse.com/docs/en');
DROP DATABASE IF EXISTS test_nps70ppy 
CREATE INDEX idx_tab3_5 ON tab3 (col3,col0 DESC);
select arrayIntersect([[1, 2], [1, 1]], [[2, 1], [1, 1]]);
 INSERT INTO set_idx SELECT number, number FROM system.numbers LIMIT 100
CREATE OR REPLACE FUNCTION 02148_test_function AS () -> (SELECT 2);
SELECT BIT_AND(-1);
CREATE TABLE 02661_archive_table Engine=File('CSV', '/var/lib/clickhouse/user_files/02661_read_from_archive_test_fv9w6ph7_zip_archive{1..2}.zip :: 02661_read_from_archive_test_fv9w6ph7_zip_data1.csv')
set empty_result_for_aggregation_by_empty_set = 0;
SELECT 1 FROM range_dictionary_nullable ORDER BY CountryID, StartDate, EndDate;
SELECT bin(toInt32(100)) AS res;
drop table m3;
WITH splitByChar('_', _file)[3]::UInt64 AS num SELECT count(), min(num), max(num) FROM s3(s3_conn, filename = 'test_02495_*', format = Parquet) WHERE num >= 5;
select format('{}{}', materialize(toFixedString('a', 1)), materialize('b')) == 'ab';
SELECT t1.a, t1.val, t2.a, t2.val FROM t1 FULL JOIN t2 ON t1.a <=> t2.a AND t1.b < 2 OR t1.a == t2.a ORDER BY t1.val NULLS FIRST, t2.val NULLS FIRST ;
SELECT 11,toFixedString('Hello', 10), bin(bitShiftRight(toFixedString('Hello', 10), 11));
create table data_02051 (key Int, value String) engine=MergeTree() order by key settings index_granularity_bytes=0, /* to suppress "Table can't create parts with adaptive granularity, but settings ..." warning */ min_bytes_for_wide_part=0 as select number, repeat(toString(number), 5) from numbers(1e6);
INSERT INTO tmp SELECT * FROM system.numbers LIMIT 20;
SELECT toDateTime('2017-01-01 00:00:00') - INTERVAL 13 MONTH AS x;
SELECT 'Running test stateless/00043_summing_empty_part.sql from pid=1718' 
CREATE DATABASE IF NOT EXISTS test_6jt6af78 
select toTime(toDateTime(0, 'America/Paramaribo'), 'America/Paramaribo');
CREATE TABLE test_01193_18429.table_4_829 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT x AS y, y FROM merge_tree;
INSERT INTO test_01193_18429.table_4_506 VALUES 
CREATE TABLE two_00458 (x FixedString(16)) ENGINE = Memory;
CREATE TABLE test_01193_18429.table_9_292 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
create table dist_01223 as data_01223 Engine=Distributed(test_cluster_two_shards, currentDatabase(), dist_layer_01223);
DROP DATABASE IF EXISTS test_vq2598we 
CREATE TABLE test_01193_18429.table_2_864 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT ' -- subtract';
SELECT multiIf(1, [col2, col3], (col1 % 3) = 0, ['foo', col5], ['foo', 'bar']) FROM multi_if_check;
SELECT multiIf(1, toFixedString('foo', 16), (col1 % 3) = 0, toFixedString('bar', 16), toFixedString(col4, 16)) FROM multi_if_check;
SELECT s, replaceAll(s, '_', 'o') AS a, REGEXP_REPLACE(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['_.', '_._']) AS s);
DROP DATABASE IF EXISTS test_02971
CREATE TABLE test_78344F496126764F615F4B326E4656707C6636557C3C5D6D462E39693777707C3A40317B533E4655(x UInt8) Engine=Memory;
SELECT multiIf((number % 2) = 0, toInt8(1), (number % 3) = 0, toFloat64(2), toUInt32(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_8_167 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/02124_insert_deduplication_token_replica.sql from pid=1722' 
CREATE TABLE test_string (`c1` String, `c2` String) ENGINE = MergeTree ORDER BY c1 SETTINGS index_granularity = 56458, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.2332829385995865, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 12744, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 940193, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10034940622, index_granularity_bytes = 13539197, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 22577, primary_key_compress_block_size = 36524
INSERT INTO r10 SELECT 84
SELECT * FROM userid_test WHERE (userid, name) IN (userid_set);
select makeDate(cast(1980.1 as Float32), 9, 19);
SELECT count() FROM mt_match_pk WHERE match(v, '^a');
CREATE DATABASE IF NOT EXISTS test_fa9bh3bz 
system drop database replica 'r1' from shard 's1' from zkpath '/test/test_5mr53c62/rdb/'
SELECT skewSamp(NULL, NULL);
SET min_count_to_compile_expression = 1;
DROP DATABASE IF EXISTS test_0njk7jlu 
SELECT maxForEach(sketch) FROM data;
SELECT 'Running test stateless/02884_parallel_window_functions.sql from pid=1714' 
INSERT INTO test_01193_18429.table_3_69 VALUES 
select v, variantElement(v, 'UInt128') from format(CSV, 'v Variant(String, UInt128, Int256)', '\\N\n"string"\n-1\n0\n42d42') format CSV;
INSERT INTO test_y9d6pdpj.t_async_insert FORMAT Avro
select * from test1 where i not in (1,2,3,4,5) order by i;
SELECT count() FROM low_card_buffer_test GROUP BY test_text format Null
INSERT INTO test_01193_18429.table_2_890 VALUES 
SELECT toMonday(NULL, NULL);
SELECT dictHas('02185_range_dictionary', 0, 0);
CREATE TABLE test_445A66402A713255486B34755F2A4F5A5143376D662C247E7E21423F444B34414C3A4F203841425C(x UInt8) Engine=Memory;
select sumIf(42, (a % 2) = 0) from remote('127.0.0.{1,2}', currentDatabase(), T);
DROP TABLE join_test;
SELECT distinct(value) FROM replicated_mutation_table ORDER BY value
DROP TABLE IF EXISTS series__fuzz_35;
DROP DATABASE IF EXISTS test_yhkt8hti 
SELECT roundBankers(meanZTest(833.0, 800.0, 0.95)(v, s).1, 16) as z_stat, roundBankers(meanZTest(833.0, 800.0, 0.95)(v, s).2, 16) as p_value, roundBankers(meanZTest(833.0, 800.0, 0.95)(v, s).3, 16) as ci_low, roundBankers(meanZTest(833.0, 800.0, 0.95)(v, s).4, 16) as ci_high FROM mean_ztest;
CREATE TABLE test_2F2C6C567C2A466F4A4D2857336728464A463D6072795962362A5D685639793A39206A73633F742D(x UInt8) Engine=Memory;
SELECT hasToken('hay>hay>hay>hay>hay>hay>hay>hay>hay>needle>hay>hay>hay>hay>hay>hay>hay>hay>hay', 'needle'), ' expecting ', 1;
EXPLAIN SELECT * FROM ( SELECT * FROM ( SELECT * FROM numbers(3) ORDER BY number ASC ) ORDER BY number DESC ) ORDER BY number ASC
CREATE TABLE test_5537714C2E3E34593F66576A71733F61743B347C553074702078414E3361264E4F30586456584E62(x UInt8) Engine=Memory;
INSERT INTO src_1 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 48
SELECT '> 127.0.0.1', ipv4_ FROM ipv4_test WHERE ipv4_ > toIPv4('127.0.0.1') ORDER BY ipv4_;
EXPLAIN SYNTAX SELECT roundToExp2(number) AS x FROM numbers(3) ORDER BY x DESC, toFloat32(x) DESC;
select '-- distinct with primary key prefix only';
SELECT endsWithUTF8('123', '');
CREATE TABLE test_307740342366483474564C2C4D5054693C6767635729273C5F784226324371313554673B366A3D6B(x UInt8) Engine=Memory;
CREATE TABLE test_00210 (x UInt8) ENGINE = Log
CREATE TABLE test_33336130432E5E6F325956436B743D507D2E4473525B31215A323463243E205B285E4F5165247443(x UInt8) Engine=Memory;
# Test INTERPOLATE with Nullable in source SELECT n, source, inter AS inter_p FROM ( SELECT toFloat32(number % 10) AS n, 'original' AS source, number + NULL AS inter FROM numbers(10) WHERE (number % 3) = 1 ) ORDER BY n ASC WITH FILL FROM 0 TO 11.51 STEP 0.5 INTERPOLATE ( inter_p AS inter_p + 1 );
SELECT '= full using =';
SELECT x, txt FROM 02540_date WHERE txt == 'CAST(65534 as Int32)';
SELECT arrayFirst(x -> materialize(0), arrayMap(x -> toString(x), range(number))) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_10_688 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt16(1), toInt16(2)] WHEN (number % 3) = 0 THEN [toInt8(2), toInt8(3)] ELSE [toInt8(3), toInt8(3)] END FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_83ycb8jf 
SELECT 'Running test stateless/02892_input_csv_cr_end_count_many_rows.sh from pid=1726' 
CREATE TABLE concurrent_mutate_mt_3 (`key` UInt64, `value1` UInt64, `value2` String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/01076_parallel_alter_replicated_zookeeper_test_wv410ck4/concurrent_mutate_mt', '3') ORDER BY key SETTINGS max_replicated_mutations_in_queue = 1000, number_of_free_entries_in_pool_to_execute_mutation = 0, max_replicated_merges_in_queue = 1000, temporary_directories_lifetime = 10, cleanup_delay_period = 3, cleanup_delay_period_random_add = 0, cleanup_thread_preferred_points_per_iteration = 0, index_granularity = 36899, min_bytes_for_wide_part = 610320463, ratio_of_defaults_for_sparse_serialization = 0.18114601075649261, replace_long_file_name_to_hash = true, max_file_name_length = 20, merge_max_block_size = 52, prefer_fetch_merged_part_size_threshold = 2825925533, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 8898561432, index_granularity_bytes = 4539143, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 45816, primary_key_compress_block_size = 84236
drop table test;
alter table data_01900_2 update s = 'bar_2' where 1;
select 1 = multiSearchAny(materialize('abcdefgh'), ['def']);
SELECT * FROM (SELECT 1 AS a UNION ALL SELECT 2 as a) ORDER BY a FORMAT Pretty;
CREATE INDEX idx_tab3_5 ON tab3 (col0,col3 DESC);
SET replication_alter_partitions_sync = 2;
INSERT INTO test_01778 SELECT toString('xxx'), today() FROM numbers(100);
CREATE TABLE test_736C3B5F446B4932362C6B62214E6C2945782846282670724B4D62694635594C6F5978684E46706D(x UInt8) Engine=Memory;
SELECT CAST('[1, 2, 3]' AS Array(UInt8));
INSERT INTO r1 SELECT 7
INSERT INTO recompression_table_compact SELECT now() - INTERVAL 2 YEAR, 3, toString(number) from numbers(2000, 1000);
CREATE TABLE test_44796524217B7576685F753B3835707564444C5D3C265C2E406B4C5C59325A2F21745A65744E362A(x UInt8) Engine=Memory;
CREATE TABLE test_77612E2030522573302F704B2722252B28622558286E3C7033284479307D38556352596A292C6E29(x UInt8) Engine=Memory;
INSERT INTO r6 SELECT 61 % 10 = 6 ? 61 - 1 : 61
CREATE TABLE m0 (`id` UInt64) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 1, ratio_of_defaults_for_sparse_serialization = 1., min_bytes_for_wide_part = 1073741824, replace_long_file_name_to_hash = true, max_file_name_length = 70, merge_max_block_size = 2837, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 86, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 19618240, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 15387, primary_key_compress_block_size = 73750
SELECT 'Running test stateless/02990_format_not_precedence.sql from pid=1724' 
SELECT toTypeName(res), sumMap(statusMap) as res FROM map_comb;
INSERT INTO test_01193_18429.table_3_466 VALUES 
SELECT count() > 3 FROM (EXPLAIN PIPELINE header = 1 SELECT * FROM system.numbers ORDER BY number DESC) WHERE explain LIKE '%Header: number UInt64%';
ALTER TABLE concurrent_alter_column ADD COLUMN c429 DOUBLE;
DROP DATABASE IF EXISTS test_6xzbr8hs 
INSERT INTO test_01193_18429.table_4_596 VALUES 
select exists(select 1 except select 1);
SELECT s, replaceAll(s, '_', 'oo') AS a, replaceRegexpAll(s, '_', 'oo') AS b, a = b FROM (SELECT arrayJoin(['._', '_.']) AS s);
select minMap([1, 1, 1], [(1, 2), (1, 1), (1, 3)]);
RENAME TABLE test_5qyz18pn.r1 TO test_5qyz18pn.r1_bak
OPTIMIZE TABLE partitioned_by_tuple PARTITION ('2000-01-01', 1) FINAL;
SELECT message LIKE '%Stack trace%' FROM system.text_log WHERE level = 'Error' AND message LIKE '%Exception%throwIf%' AND query_id = (SELECT query_id FROM system.query_log WHERE current_database = currentDatabase() AND query LIKE '%SELECT \'World\', throwIf(1)%' AND query NOT LIKE '%system%' ORDER BY event_time_microseconds DESC LIMIT 1) ORDER BY event_time_microseconds DESC LIMIT 10;
SELECT CASE WHEN 1 THEN 'foo' WHEN (col1 % 3) = 0 THEN toFixedString(col3, 16) ELSE col4 END FROM multi_if_check;
DROP DATABASE IF EXISTS test_r8qqkt8r 
DROP DATABASE IF EXISTS test_vuhymhsd 
CREATE TABLE test_table_for_01070_exception_code_in_query_log_table (value UInt64) ENGINE=Memory();
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (75 < 75 AND 61 > 0 ? 75 : 0)), throwIf(last != (75 < 75 AND 61 > 0 ? least(75 - 1, 75 + 61 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(75) LIMIT 75, 61);
SELECT id, L1Norm(v), L2Norm(v), L2SquaredNorm(v), LpNorm(v, 2.7), LinfNorm(v) FROM vec1f;
CREATE INDEX idx_tab2_3 ON tab2 (col4 DESC,col0,col1 DESC);
SELECT wordShingleMinHash(s) FROM defaults;
CREATE TABLE test_01193_18429.table_3_453 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_6_506 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE INDEX idx_tab2_5 ON tab2 (col3 DESC,col4,col1 DESC);
SELECT toDayOfMonth(toDateTime(1412106600), 'Pacific/Pitcairn');
CREATE TABLE test_7848306B5B3A547D20314E362F68403C774641632E63515B4C403447477B5B2D51356E4274313B70(x UInt8) Engine=Memory;
SELECT * FROM system.tables
INSERT INTO test_01193_18429.table_9_223 VALUES 
SELECT multiIf((number % 2) = 0, [toInt16(1), toInt16(2)], (number % 3) = 0, [toInt64(2), toInt64(3)], [toInt8(3), toInt8(3)]) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_6_825 VALUES 
select toUInt8OrDefault('1', cast(2 as UInt8));
SELECT dictHas('range_dictionary_nullable', (toUInt64(1), '1'), toDate('2019-05-15'));
CREATE DATABASE IF NOT EXISTS test_4ij4ey7t 
SELECT dateDiff('day', materialize(toDateTime64('1927-01-01 00:00:00', 3, 'UTC')), toDate32('1927-01-02', 'UTC'), 'UTC');
SELECT sipHash64Keyed((key0, key1), 4::UInt64) FROM sipHashKeyed_keys ORDER by key0;
SELECT multiIf((col1 % 2) = 0, toFixedString('foo', 16), 1, 'bar', 'baz') FROM multi_if_check;
SELECT dictHas('02183_hashed_array_dictionary', 2);
SELECT toIntervalSecond(5) AS interval, toDateTime('2017-01-01 00:00:00') + interval AS res;
INSERT INTO t_json_desc FORMAT JSONAsObject 
CREATE TABLE test_672B3355425160516F67752D7E7142786760553D3B74312D533B45565139384157743D5A33327755(x UInt8) Engine=Memory;
INSERT INTO test2_00550 VALUES 
SELECT test_table.a FROM test_table ORDER BY (test_table.a >= test_table.b) + 1 AND (test_table.a >= test_table.c) + 1;
CREATE TABLE test_642B3F632F785B242F275553285D2B34713449497A275E6F5A3E6759285D58632765363E5059795D(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_8_365 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT toInt8(0) AS x, toFloat32(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
CREATE TABLE test_296B623A6D292279475B7E32485B3730263C6A4C767E264D5E357A2C394E50414C4F5A4F2563786D(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02111_modify_table_comment.sql from pid=1705' 
ALTER TABLE concurrent_alter_column ADD COLUMN c499 DOUBLE;
DROP DATABASE IF EXISTS test_h5za3klm 
SELECT has(materialize(['a', 'b']), materialize('a'));
drop database rdb_test_5mr53c62_3
SELECT CAST(toDate('2000-01-01') AS DateTime64(5, 'UTC')) AS x, toTypeName(x);
select multiFuzzyMatchAny(materialize('string'), 1, materialize(['zorro$', '^tring', 'ip$', 'how.*', 'it{2}', 'works']));
DROP TABLE IF EXISTS t_leading_zeroes;
CREATE TABLE test_4F2054223F5656495172797C43532B597D35773A34374B632A414272654F6074715F6C526A534A3C(x UInt8) Engine=Memory;
SELECT addMonths(materialize(toDateTime('2017-11-05 08:07:47')), -1);
SELECT arrayCount(x -> materialize(1), [1, 2, 3]);
SELECT d1, f2, d1 - f2 FROM t ORDER BY f2;
CREATE TABLE test_3E4F3D683F4A2A4E7B7D5461716D52437D493D622A5B6D64782138775F5D41786B75242930467772(x UInt8) Engine=Memory;
select hex(sipHash64Keyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22)));
SELECT * FROM secure2 ORDER BY a;
SELECT s, replaceOne(s, '_', 'oo') AS a, replaceRegexpOne(s, '_', 'oo') AS b, a = b FROM (SELECT arrayJoin(['.', '_.']) AS s);
CREATE TABLE test_01193_18429.table_5_436 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_5_458 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select countSubstringsCaseInsensitiveUTF8(haystack, pattern) from tab where id = 1;
select [1, 1, 0, 0, 0, 1, 1, 1, 4, 0, 6, 6, 0, 10, 1, 5] = multiSearchAllPositions(materialize('mpswgtljbbrmivkcglamemayfn'), ['', 'm', 'saejhpnfgfq', 'rzanrkdssmmkanqjpfi', 'oputeneprgoowg', 'mp', '', '', 'wgtljbbrmivkcglamemay', 'cbpthtrgrmgfypizi', 'tl', 'tlj', 'xuhs', 'brmivkcglamemayfn', '', 'gtljb']) from system.numbers limit 10;
INSERT INTO test_01193_18429.table_10_191 VALUES 
select round(1000 * ngramDistanceUTF8(materialize(''), '')) from system.numbers limit 5;
CREATE TABLE test_01193_18429.table_1_350 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_4_695 VALUES 
SELECT COUNT() from wikistat2 WHERE NOT ignore(*);
CREATE TABLE test_01193_18429.table_5_209 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT type, new_part_name FROM system.replication_queue WHERE table='mutation_table' and database='test_v0nq0hvy'
INSERT INTO dst VALUES /* (1, 4) */ 
SELECT reinterpretAsInt256('');
SELECT multiIf(1, ['foo', 'bar'], (col1 % 3) = 0, [col4, 'bar'], ['foo', col7]) FROM multi_if_check;
CREATE TABLE test_01193_18429.table_5_375 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SET input_format_ipv6_default_on_conversion_error = 1;
SELECT 'SELECT N - toInt64(-1)';
SELECT 'Running test stateless/02417_opentelemetry_insert_on_distributed_table.sh from pid=1715' 
set query_plan_remove_redundant_sorting=0;
insert into t3 values 
SELECT 'Running test stateless/02560_count_digits.sql from pid=1720' 
CREATE TABLE test_01193_18429.table_5_939 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_7_107 VALUES 
CREATE TABLE test_01193_18429.table_6_437 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP TABLE IF EXISTS secure3;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), N < DT64 as r FORMAT CSV;
INSERT INTO ngrambf_tab VALUES 
CREATE TABLE test_3F2C294A5C575D7E5674683B63633B36705070267A2D347E29236E6C22647E5C2C4A522346575B63(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00604_shard_remote_and_columns_with_defaults.sql from pid=1722' 
CREATE TABLE test_01193_18429.table_3_187 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT multiIf((number % 2) = 0, [toInt8(1), toInt8(2)], (number % 3) = 0, [toFloat64(2), toFloat64(3)], [toInt8(3), toInt8(3)]) FROM system.numbers LIMIT 10;
SELECT uniqCombined(20)(dummy) FROM remote('127.0.0.{2,3}', system.one);
SELECT min(id) FROM t FORMAT Null;
select 'constants:', toTypeName([tuple(NULL, []), tuple(toNullable(toFixedString('a',4)), []), tuple(toNullable(toFixedString('a',4)), [tuple(NULL, 'a')]), tuple(toNullable(toFixedString('a',4)), [tuple(NULL, 'a'), tuple(NULL, 'a')])]);
CREATE TABLE test_01193_18429.table_7_932 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT dictHas(NULL, NULL, NULL);
SELECT round(quantileDD(0.01, 0.5)(number), 2) FROM ( SELECT arrayJoin([toFloat32(number), NaN * number]) AS number FROM numbers(0, 10) );
CREATE INDEX idx_tab3_0 ON tab3 (col4,col3 DESC);
CREATE TABLE test_02908_r2_103 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_103', 'r2') ORDER BY tuple()
SELECT 'Running test stateless/02477_age.sql from pid=1722' 
CREATE TABLE test_3F296779623E5B4E652A3B3C73606B247E216A366C20742A6D335A5F323C564A7D242E524B5E562A(x UInt8) Engine=Memory;
ALTER TABLE src_1 MOVE PARTITION 8 TO TABLE dst_11
INSERT INTO test_01193_18429.table_3_907 VALUES 
CREATE TABLE test_5A25213A6F28647C56405F404C3068627E366551312553227D6E3258784B5A643465777B27482A2F(x UInt8) Engine=Memory;
INSERT INTO t_json SELECT number, ( arrayMap(x -> 'col' || toString(x), range(number % 10)), range(number % 10) )::Map(FixedString(4), UInt64) FROM numbers(1000000);
INSERT INTO test_01193_18429.table_7_946 VALUES 
SELECT left('Hello', 0);
CREATE DATABASE IF NOT EXISTS test_7qns6778 
CREATE DATABASE IF NOT EXISTS test_d9bd511h 
ALTER TABLE concurrent_alter_column ADD COLUMN c169 DOUBLE;
alter table many_mutations delete where y = 972 * 2 settings mutations_sync = 0;
CREATE TABLE test_236850363F4E473F4B225626312C5F4524514C3744316D5526606549745160693D722C4A4B4F465D(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS md;
SELECT t as e, toTypeName(e) FROM ttta FULL JOIN tttb USING (t.t.t);
INSERT INTO t_source (x) VALUES 
SELECT multiIf((number % 2) = 0, toFloat32(1), (number % 3) = 0, toFloat64(2), toInt8(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_5347716E47365C5227303875462333404E3D77522D5F2831224129304C5628427C533C655D6D5038(x UInt8) Engine=Memory;
SELECT JSONExtract(materialize('{"key":"value"}'), 'Tuple(key LowCardinality(Nullable(String)))');
INSERT INTO r10 SELECT 65
INSERT INTO test_01193_18429.table_8_499 VALUES 
CREATE TABLE test_01193_18429.table_8_785 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_72723A726A757B424836336044453B3C6B494069746826663328436862615B2D385A6C5179534E3B(x UInt8) Engine=Memory;
SELECT * FROM 02526_keeper_map WHERE key in (SELECT number * 5 FROM numbers(1000)) FORMAT Null;
INSERT INTO test_collate VALUES 
select last_refresh_result from refreshes -- 28
SELECT 'a{' AS x, x LIKE (concat(x, '%') AS pat), materialize(x) LIKE pat;
SELECT toTypeName(level) FROM errors_local FINAL PREWHERE isNotNull(level) WHERE isNotNull(level) LIMIT 1;
select sleepEachRow(0.01)from numbers(10) FORMAT Native 
CREATE TABLE order_by_const (`a` UInt64, `b` UInt64, `c` UInt64, `d` UInt64) ENGINE = MergeTree ORDER BY (a, b) SETTINGS index_granularity = 8192, min_bytes_for_wide_part = 803884078, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 19429, prefer_fetch_merged_part_size_threshold = 7563326091, vertical_merge_algorithm_min_rows_to_activate = 265205, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 5843086369, index_granularity_bytes = 6858283, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 48040, primary_key_compress_block_size = 82325
drop table another_mt
SELECT normalizedQueryHash('SELECT 1 AS xyz111') = normalizedQueryHash('SELECT 2 AS xyz234');
INSERT INTO r8 SELECT 28
SELECT substringUTF8('hello, ÃÂ¿ÃÂÃÂ¸ÃÂ²ÃÂµÃÂ', 1) FROM numbers(3);
INSERT INTO test_01193_18429.table_3_189 VALUES 
SELECT current_schemas(false) AS result;
CREATE TABLE test_323E26545A4B682F5A3E4064665E49627B75612524356E5B5F4A5A71665C7B2D7D227A65325E2134(x UInt8) Engine=Memory;
CREATE TABLE test_5242306F40695E20767A23672E62717849633C385A71674D3C4B354B6A4325752554727654314B74(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_9_797 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select [4, 0, 0, 13, 1, 0, 3, 13, 16, 1, 0, 1, 16, 1, 12, 0, 0, 0] = multiSearchAllPositionsCaseInsensitive(materialize('SoVPMQNqmaTGuzYxDvZvapSuPiaP'), ['pMqNQMAtGuzYxDVz', 'TEJtgLhyredMnIpoZfmWvNwpkxnm', 'XRWmsfWVOCHhk', 'u', '', 'HvkXtxFdhVIyccpzFFSL', 'VPM', 'uZyXDVzvAPsUpIaP', 'xDvzV', 'sovpmqNQmATguZYx', 'wEG', 'soVPmQnQ', 'XDVzV', '', 'GUZyXdvzva', 'FetUahWwGtwEpVdlJCJntL', 'B', 'lSCUttZM']) from system.numbers limit 10;
insert into table_to_merge_c values 
CREATE TABLE test_01193_18429.table_6_749 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_2_725 VALUES 
drop table if exists mv_01278_1;
CREATE DATABASE IF NOT EXISTS test_kkkczhck 
CREATE TABLE test_01193_18429.table_4_672 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT `a`, count() FROM `t_different_dbs` GROUP BY `a`, `b` ORDER BY `a` ASC LIMIT 500, 5
INSERT INTO src_4 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 88
CREATE TABLE test_01193_18429.table_1_339 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP TABLE IF EXISTS data_01917;
SELECT dictGetDateTimeOrDefault(NULL, NULL, NULL);
SELECT CASE WHEN (number % 2) = 0 THEN toFloat64(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
INSERT INTO r10 SELECT 36
OPTIMIZE TABLE collapsing_table FINAL;
CREATE TABLE test_4458225E28634D5946754B6660343E583A365D5F592045207364595F732B2A7D674F5A224B294569(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_9_936 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT count() FROM test_r2;
SELECT arrayJoin(CAST(['hello', 'world'] AS Array(FixedString(5)))) LIKE '%hello';
INSERT INTO test_01193_18429.table_4_273 VALUES 
DROP DATABASE IF EXISTS test_hl34ybmc 
INSERT INTO test_01193_18429.table_10_258 VALUES 
CREATE TABLE test_782B5644494077262E356A4B6121437C60453E776639212E354674237C3669755E3E4B75485E7643(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_1_277 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select concat(materialize('a'), materialize('b'), toFixedString('c', 1)) == 'abc';
CREATE TABLE test_01193_18429.table_4_19 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Running test stateless/00004_shard_format_ast_and_remote_table.sql from pid=1713' 
DROP DATABASE IF EXISTS test_ej43mnol 
CREATE TABLE test ( A Int32, B Int32 ) ENGINE = Memory();
SELECT 'Running test stateless/00117_parsing_arrays.sql from pid=1713' 
DROP DATABASE IF EXISTS dict_db_01224;
SELECT `EventDate` FROM `test_vj3nh4tx`.`open_events_tmp` AS `t2` WHERE (`EventDate` >= toDate('2020-07-10')) AND (`EventDate` <= toDate('2020-07-11')) AND (`APIKey` = 2) GROUP BY `EventDate` WITH TOTALS
SELECT h3IsValid(581276613233082367);
SELECT id, ary[indexOf(ary, 'value3')] FROM test_bf_indexOf WHERE ary[indexOf(ary, 'value3')] = 'value3' ORDER BY id FORMAT TSV;
with '2018-01-12 22:33:44' as s, toDateTime(s) as datetime, toDateTime64(s, 6) as datetime64, toDate(s) as date, toDate32(s) as date32 SELECT formatDateTimeInJodaSyntax(datetime, 'G123DDD'), formatDateTimeInJodaSyntax(datetime64, 'G123DDD'), formatDateTimeInJodaSyntax(date, 'G123DDD'), formatDateTimeInJodaSyntax(date32, 'G123DDD');
SELECT 'Running test stateless/02383_array_signed_const_positive_index.sql from pid=1713' 
INSERT INTO r9 SELECT 4 % 10 = 9 ? 4 - 1 : 4
SHOW CREATE USER 'test_user_01075_x@192.168.23.15';
INSERT INTO test_01193_18429.table_9_161 VALUES 
CREATE TABLE test_736B5A4B2D5352545E58565B443B7152286F7023695060764E5A466F6753612A6F52604E7A4F374C(x UInt8) Engine=Memory;
SELECT number, dictGet('executable_complex_direct', 'a', (number, number)) AS a, dictGet('executable_complex_direct', 'b', (number, number)) AS b FROM numbers(1000000) WHERE number = 999999;
CREATE TABLE test_2B522D372C4D2B634624244A3D7234507B423D4D307434274E2B23785E36363D557D2D28392B4364(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_b5q8dsm2 
CREATE TABLE test_5F67452377622847663A6C7A24712E7A476A4476477A772A783F343C4F7A716927737A203066524D(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_2_790 VALUES 
CREATE TABLE test_01193_18429.table_6_522 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO agg_func_col (k, af_avg1) VALUES 
CREATE TABLE test_01193_18429.table_4_222 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT groupArraySorted(10)(toInt64(number/2)) FROM numbers(100);
CREATE TABLE test_2B4E27553B75614C5F7E4C44643C256929302354427971414F273473243C652355242B287C586E5D(x UInt8) Engine=Memory;
INSERT INTO tuples FORMAT Arrow
CREATE TABLE test_2929347E77202625322222577A636F576C5169425B6D2D7C5D4674542728583A20246521774C6664(x UInt8) Engine=Memory;
select sum(upper(materialize('aaaaÃÂÃÂÃÂÃÂAAAAaaAA')) = materialize('AAAAÃÂÃÂÃÂÃÂAAAAAAAA')) = count() from system.one array join range(16384) as n;
SELECT 'Polygon dictionary';
DROP DATABASE IF EXISTS test_eqjzlbfx 
CREATE TABLE comment_test_table ( k UInt64, s String ) ENGINE = MergeTree() ORDER BY k COMMENT 'Test table with comment';
SELECT SUM(number) FROM ( SELECT 10 AS number ) GROUP BY number HAVING 1 AND sin(SUMOrNull(number)) SETTINGS enable_optimize_predicate_expression = 0;
SELECT dictGetUInt32OrDefault(NULL, NULL, NULL);
SELECT 'Running test stateless/00688_low_cardinality_defaults.sql from pid=1714' 
CREATE TABLE endsWith_test(S1 String, S2 String, S3 FixedString(2)) ENGINE=Memory;
SELECT sum(Sign), count() from collapsing_table;
SELECT 'SELECT toStartOfYear(N, \'Asia/Istanbul\')';
SELECT if(number % 2 = 0, [toUUID('00000000-e1fe-11e9-bb8f-853d60c00749')], [toUUID('11111111-e1fe-11e9-bb8f-853d60c00749')]) FROM numbers(5);
CREATE TABLE test_01193_18429.table_2_183 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
ALTER TABLE table_for_rename RENAME COLUMN value1 to renamed_value1;
CREATE TABLE test_7445602B6631273946546A28366A7976433F666763313F7D5F5D7025486C7324213F4A262F7E7267(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_1_463 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT * FROM ( SELECT number, number, number, number, number FROM numbers(5) ) as t1 FULL JOIN ( SELECT number, number, number, FROM numbers(3, 8) ) as t2 ON t1.number = t2.number ORDER BY t1.number, t2.number ;
CREATE TABLE test_437E245F3C7024344B3B2F2C685B37284A57606D444E33546B66215A41274E6B482023604F464939(x UInt8) Engine=Memory;
SELECT toDecimal256OrNull ('1.1111111111111111111111111111111111111', 4);
SELECT a, b, c, d, e FROM t_fixed_prefix WHERE bitNot(a) = 1 AND bitNot(c) = 1 ORDER BY a, b, c, d, e SETTINGS optimize_read_in_order = 1
INSERT INTO test_01193_18429.table_8_327 VALUES 
SELECT 'Running test stateless/02765_queries_with_subqueries_profile_events.sh from pid=1718' 
SELECT multiIf((number % 2) = 0, toFloat32(1), (number % 3) = 0, toUInt8(2), toInt8(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_5E7C3D5C2445337C4A4858323751426843707A762A56393C4B4B292D4540233E304547385A296E59(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_4_456 VALUES 
CREATE TABLE test_6A4F6A2D584D73236264617A4D3A465665586428767147355F2220626329263528793B4349466C22(x UInt8) Engine=Memory;
INSERT INTO r4 SELECT 0 % 10 = 4 ? 0 - 1 : 0
INSERT INTO minmax_idx VALUES 
INSERT INTO 02703_keeper_map_concurrent_7 VALUES 
CREATE DATABASE IF NOT EXISTS test_a530nthp 
CREATE TABLE landing (`timestamp` UInt64, `value` UInt64) ENGINE = MergeTree ORDER BY tuple() SETTINGS non_replicated_deduplication_window = 1000, index_granularity = 35314, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 5211, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 78281, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 29859531, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 15770, primary_key_compress_block_size = 97590
insert into many_mutations select number, number + 1 from numbers(2000);
INSERT INTO test_01193_18429.table_1_679 VALUES 
SELECT JSONExtractInt(NULL, NULL);
INSERT INTO left_join (x, s) VALUES 
CREATE DATABASE IF NOT EXISTS test_4u28c2l5 
SELECT dictGetFloat64(concat('test_6ztqwvhd', '.dict2'), 'Tax', toUInt64(2), toDateTime('2019-05-29 00:00:00'))
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat64(1), toFloat64(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toFloat64(3), toFloat64(3)] END FROM system.numbers LIMIT 10;
insert into table function file('/dev/null', 'ORC', 'number UInt64') select * from numbers(10);
INSERT INTO elog_cut (uts, pr, ya_uid, adf_uid, owner_id) VALUES 
CREATE DATABASE IF NOT EXISTS test_4cwkptlb 
SELECT 10;
SELECT 26,toFixedString('Hello', 10), bin(bitShiftRight(toFixedString('Hello', 10), 26));
CREATE TABLE test_01193_18429.table_3_248 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_8_622 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt16(1), toUInt16(2)] WHEN (number % 3) = 0 THEN [toUInt8(2), toUInt8(3)] ELSE [toUInt16(3), toUInt16(3)] END FROM system.numbers LIMIT 10;
CREATE INDEX idx_tab2_3 ON tab2 (col1 DESC,col4 DESC,col0);
DROP DATABASE IF EXISTS test_wf1kdlyw 
CREATE DATABASE IF NOT EXISTS test_mcsy1nfu 
CREATE TABLE test_6A222248233E437C6A6651392B75676A5A5040473F4E4D4566327C6C66762D7A2E51773C3258716A(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01710_projection_detach_part.sql from pid=1715' 
select (1, 2) in array(tuple(1, 2), tuple(3, 4), tuple(5, 6), tuple(7, 8), tuple(9, 10)) settings max_temporary_columns = 4;
INSERT INTO test_01193_18429.table_2_383 VALUES 
EXPLAIN QUERY TREE (SELECT sum((1 AS m) + (uint64 AS n)) j from test_table where m > 0 and n > 0 having j > 0);
SELECT '(forward, head, D)', id, sequenceNextNode('forward', 'head')(dt, action, 1, action = 'D') AS next_node FROM test_sequenceNextNode_Nullable GROUP BY id ORDER BY id;
CREATE TABLE test_01193_18429.table_4_913 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_4_4 VALUES 
EXPLAIN AST ALTER TABLE t ATTACH PART 'p';
SELECT 'Running test stateless/00098_9_union_all.sql from pid=1718' 
kill query where query_id = '02450_kill_distributed_query_deadlock_test_ft363ahb-29' sync
CREATE TABLE test_01193_18429.table_7_258 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'SELECT toHour(N, \'Asia/Istanbul\')';
INSERT INTO test_01193_18429.table_4_315 VALUES 
SELECT COUNT(1) == 1 FROM 01504_test;
SELECT * FROM t64 WHERE u32 != t_u32;
SELECT kql_array_sort_desc(NULL, NULL);
CREATE TABLE test_7050296F2742397B26465564682D6C645A31555A3F58554D3A6F7572575A38626D6F3E475A716327(x UInt8) Engine=Memory;
INSERT INTO r2 VALUES
SELECT LinfNorm([0, 0, 2]);
select 'select 2';
DROP DATABASE IF EXISTS 01684_database_for_cache_dictionary;
alter table many_mutations delete where y = 441 * 2 settings mutations_sync = 0;
select v, variantElement(v, 'Int64') from format(CSV, 'v Variant(String, Int64, Int128)', '\\N\n"string"\n-1\n0\n10000000000000000000000\n42d42') format CSV;
INSERT INTO test_01193_18429.table_1_904 VALUES 
DROP DATABASE test_01150
CREATE DATABASE IF NOT EXISTS test_n19ahqy6 
INSERT INTO agg_func_col (k, d) SELECT 1 AS k, arrayReduce('sumState', [toUInt64(100)]) AS d;
INSERT INTO test_01193_18429.table_6_214 VALUES 
INSERT INTO test_01193_18429.table_3_441 VALUES 
CREATE TABLE test_756E65356C56296C606B53674B286C3A6E597471554F3673462659485E42615F665F235156242535(x UInt8) Engine=Memory;
SELECT cutFragment('');
SELECT CASE WHEN (number % 2) = 0 THEN toUInt8(1) WHEN (number % 3) = 0 THEN toInt16(2) ELSE toFloat32(3) END FROM system.numbers LIMIT 10;
SELECT * FROM system.filesystem_cache LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
CREATE TABLE test_01193_18429.table_7_592 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
ALTER TABLE dst_6 DROP PART '2_26_26_0'
SET output_format_pretty_grid_charset = 'ASCII';
CREATE TABLE test_01193_18429.table_5_718 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT materialize((1, 2.0, 3.1)) * 3;
INSERT INTO src_12 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 18
CREATE TABLE test_6F437265574D742D4A22456E2221446D6C3D667A6E7E3E5D45757E392F713478384C47247326516C(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_933qn7af 
INSERT INTO test_01193_18429.table_10_350 VALUES 
INSERT INTO test_01193_18429.table_8_179 VALUES 
DROP DATABASE IF EXISTS test_n4azjlsa 
INSERT INTO test_02098 FORMAT JSONCompactEachRowWithNamesAndTypes
SELECT number = age('month', now() - INTERVAL number MONTH, now()) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_3_728 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT bitmaskToArray(toInt64(7));
alter table many_mutations delete where y = 752 * 2 settings mutations_sync = 0;
SELECT `one`.`dummy` FROM `system`.`one` WHERE (`dummy` NOT IN (2, 3)) AND (`dummy` IN tuple(2))
insert into test_local values 
DROP TABLE t_json_8
INSERT INTO tokenbf_v1_hasany_test VALUES 
SELECT 68;
SELECT *, * APPLY (toTypeName) FROM ( SELECT bl, anyIf(n, cond) IGNORE NULLS AS any_ignore, anyIf(n, cond) RESPECT NULLS AS any_respect, anyLastIf(n, cond) IGNORE NULLS AS last_ignore, anyLastIf(n, cond) RESPECT NULLS AS last_respect, anyIf(nullable_n, cond) IGNORE NULLS AS any_nullable_ignore, anyIf(nullable_n, cond) RESPECT NULLS AS any_nullable_respect, anyLastIf(nullable_n, cond) IGNORE NULLS AS last_nullable_ignore, anyLastIf(nullable_n, cond) RESPECT NULLS AS last_nullable_respect FROM ( SELECT number AS n, rand() > pow(2, 31) as cond, if(cond, NULL, n) as nullable_n, blockNumber() AS bl FROM numbers(10000) ) GROUP BY bl ) WHERE any_ignore != any_respect OR toTypeName(any_ignore) != toTypeName(any_respect) OR last_ignore != last_respect OR toTypeName(last_ignore) != toTypeName(last_respect) OR any_nullable_ignore != any_nullable_respect OR toTypeName(any_nullable_ignore) != toTypeName(any_nullable_respect) OR last_nullable_ignore != last_nullable_respect OR toTypeName(last_nullable_ignore) != toTypeName(last_nullable_respect);
SELECT multiIf((col1 % 2) = 0, toFixedString(col2, 16), (col1 % 3) = 0, toFixedString(col3, 16), 'baz') FROM multi_if_check;
select 'ORDER BY LIMIT';
CREATE TABLE test (`id` UInt64, `date` Date) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 58150, min_bytes_for_wide_part = 1009042258, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 5494, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 3138783, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 33328, primary_key_compress_block_size = 95692
CREATE TABLE test_01193_18429.table_6_930 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'Running test stateless/01866_split_by_regexp.sql from pid=1715' 
DROP TABLE IF EXISTS optimize_sorting;
CREATE TABLE test_01193_18429.table_4_483 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE OR REPLACE FUNCTION 02101_test_function AS x -> x + 1;
select '-- distinct with non-key prefix and non-sorted column, order by non-sorted desc';
SELECT hasToken('hay hay hay hay hay hay hay hay hay Ã¦ÂÂÃ©ÂÂ hay hay hay hay hay hay hay hay hay', 'Ã¦ÂÂÃ©ÂÂ'), ' expecting ', 1;
INSERT INTO test_01193_18429.table_8_563 VALUES 
select format('{}{}{}', toFixedString('a', 1), 'b', 'c') == 'abc' from system.numbers limit 5;
SET receive_timeout = 33
CREATE TABLE test_01193_18429.table_1_149 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE VIEW 02428_parameterized_view_test_0zmj5798.pv1 AS SELECT * FROM 02428_parameterized_view_test_0zmj5798.Catalog WHERE Price={price:UInt64}
INSERT INTO test_01193_18429.table_3_158 VALUES 
CREATE TABLE test_762C613A3E204E263E367C2E3166426B6F5F745D3955364C29392E5063797B64742A286623515147(x UInt8) Engine=Memory;
CREATE TABLE test_6A507C5F757056557B345A7A3567685069734241277A5C562A5A6E785E4453535A217A724A476562(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_3_435 VALUES 
select sipHash128Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6)) == sipHash128(char(0, 1, 2, 3, 4, 5, 6));
DROP TABLE IF EXISTS column_swap_test_test;
CREATE DATABASE IF NOT EXISTS test_gsdzxt41 
SELECT '1', '4503599627370496.000000000', 1 = 4503599627370496.000000000, 1 != 4503599627370496.000000000, 1 < 4503599627370496.000000000, 1 <= 4503599627370496.000000000, 1 > 4503599627370496.000000000, 1 >= 4503599627370496.000000000, 4503599627370496.000000000 = 1, 4503599627370496.000000000 != 1, 4503599627370496.000000000 < 1, 4503599627370496.000000000 <= 1, 4503599627370496.000000000 > 1, 4503599627370496.000000000 >= 1 , toUInt8(1) = 4503599627370496.000000000, toUInt8(1) != 4503599627370496.000000000, toUInt8(1) < 4503599627370496.000000000, toUInt8(1) <= 4503599627370496.000000000, toUInt8(1) > 4503599627370496.000000000, toUInt8(1) >= 4503599627370496.000000000, 4503599627370496.000000000 = toUInt8(1), 4503599627370496.000000000 != toUInt8(1), 4503599627370496.000000000 < toUInt8(1), 4503599627370496.000000000 <= toUInt8(1), 4503599627370496.000000000 > toUInt8(1), 4503599627370496.000000000 >= toUInt8(1) , toInt8(1) = 4503599627370496.000000000, toInt8(1) != 4503599627370496.000000000, toInt8(1) < 4503599627370496.000000000, toInt8(1) <= 4503599627370496.000000000, toInt8(1) > 4503599627370496.000000000, toInt8(1) >= 4503599627370496.000000000, 4503599627370496.000000000 = toInt8(1), 4503599627370496.000000000 != toInt8(1), 4503599627370496.000000000 < toInt8(1), 4503599627370496.000000000 <= toInt8(1), 4503599627370496.000000000 > toInt8(1), 4503599627370496.000000000 >= toInt8(1) , toUInt16(1) = 4503599627370496.000000000, toUInt16(1) != 4503599627370496.000000000, toUInt16(1) < 4503599627370496.000000000, toUInt16(1) <= 4503599627370496.000000000, toUInt16(1) > 4503599627370496.000000000, toUInt16(1) >= 4503599627370496.000000000, 4503599627370496.000000000 = toUInt16(1), 4503599627370496.000000000 != toUInt16(1), 4503599627370496.000000000 < toUInt16(1), 4503599627370496.000000000 <= toUInt16(1), 4503599627370496.000000000 > toUInt16(1), 4503599627370496.000000000 >= toUInt16(1) , toInt16(1) = 4503599627370496.000000000, toInt16(1) != 4503599627370496.000000000, toInt16(1) < 4503599627370496.000000000, toInt16(1) <= 4503599627370496.000000000, toInt16(1) > 4503599627370496.000000000, toInt16(1) >= 4503599627370496.000000000, 4503599627370496.000000000 = toInt16(1), 4503599627370496.000000000 != toInt16(1), 4503599627370496.000000000 < toInt16(1), 4503599627370496.000000000 <= toInt16(1), 4503599627370496.000000000 > toInt16(1), 4503599627370496.000000000 >= toInt16(1) , toUInt32(1) = 4503599627370496.000000000, toUInt32(1) != 4503599627370496.000000000, toUInt32(1) < 4503599627370496.000000000, toUInt32(1) <= 4503599627370496.000000000, toUInt32(1) > 4503599627370496.000000000, toUInt32(1) >= 4503599627370496.000000000, 4503599627370496.000000000 = toUInt32(1), 4503599627370496.000000000 != toUInt32(1), 4503599627370496.000000000 < toUInt32(1), 4503599627370496.000000000 <= toUInt32(1), 4503599627370496.000000000 > toUInt32(1), 4503599627370496.000000000 >= toUInt32(1) , toInt32(1) = 4503599627370496.000000000, toInt32(1) != 4503599627370496.000000000, toInt32(1) < 4503599627370496.000000000, toInt32(1) <= 4503599627370496.000000000, toInt32(1) > 4503599627370496.000000000, toInt32(1) >= 4503599627370496.000000000, 4503599627370496.000000000 = toInt32(1), 4503599627370496.000000000 != toInt32(1), 4503599627370496.000000000 < toInt32(1), 4503599627370496.000000000 <= toInt32(1), 4503599627370496.000000000 > toInt32(1), 4503599627370496.000000000 >= toInt32(1) , toUInt64(1) = 4503599627370496.000000000, toUInt64(1) != 4503599627370496.000000000, toUInt64(1) < 4503599627370496.000000000, toUInt64(1) <= 4503599627370496.000000000, toUInt64(1) > 4503599627370496.000000000, toUInt64(1) >= 4503599627370496.000000000, 4503599627370496.000000000 = toUInt64(1), 4503599627370496.000000000 != toUInt64(1), 4503599627370496.000000000 < toUInt64(1), 4503599627370496.000000000 <= toUInt64(1), 4503599627370496.000000000 > toUInt64(1), 4503599627370496.000000000 >= toUInt64(1) , toInt64(1) = 4503599627370496.000000000, toInt64(1) != 4503599627370496.000000000, toInt64(1) < 4503599627370496.000000000, toInt64(1) <= 4503599627370496.000000000, toInt64(1) > 4503599627370496.000000000, toInt64(1) >= 4503599627370496.000000000, 4503599627370496.000000000 = toInt64(1), 4503599627370496.000000000 != toInt64(1), 4503599627370496.000000000 < toInt64(1), 4503599627370496.000000000 <= toInt64(1), 4503599627370496.000000000 > toInt64(1), 4503599627370496.000000000 >= toInt64(1) ;
DROP DATABASE IF EXISTS test_u8px2d6q 
SELECT constant_null ? then_constant : constant_null AS res FROM nullable_00431;
INSERT INTO test_01193_18429.table_3_391 VALUES 
DROP TABLE IF EXISTS im;
DROP DATABASE IF EXISTS test_t8x1m9d6 
EXPLAIN SYNTAX SELECT x FROM ( SELECT 1 AS x UNION ALL ( SELECT 1 UNION ALL SELECT 1 ) );
SELECT DISTINCT sum(`number`) OVER w AS `x`, max(`number`) OVER w AS `y` FROM `test_9l2822ul`.`t_01568` WINDOW w AS (PARTITION BY `p`) ORDER BY `x` ASC, `y` ASC
CREATE VIEW test_02428_pv10 AS SELECT Price FROM test_02428_Catalog WHERE Price={Pri:UInt64} ORDER BY Price
drop dictionary db_01501.cache_dict;
DROP ROLE IF exists AWD;
SELECT t1.id, t1.value, t2.id, t2.value FROM test_table_join_1 AS t1 INNER JOIN test_table_join_2 AS t2 ON t1.id = t2.id OR t1.id = t2.id;
SELECT * FROM decimal ORDER BY a FORMAT JSONEachRow;
CREATE TABLE test_28455422765B4B5E777623252A696B6A25287E45486732732A307D7E704962315E302B535F27462B(x UInt8) Engine=Memory;
select tgamma(4) = 6;
SELECT UUIDStringToNum(NULL, NULL, NULL);
SELECT * FROM remote('[::1]', system.one) FORMAT Null;
CREATE TABLE minmax_idx ( u64 UInt64, i32 Int32 ) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00836/indices_alter1', 'r1') ORDER BY u64;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c6) AND c8 AND c9 AND c3) OR (c9 AND (NOT c8) AND (NOT c5)) OR (c8) OR (c4) OR ((NOT c9)) OR ((NOT c0) AND (NOT c9) AND c6 AND c8) OR ((NOT c9)) SETTINGS convert_query_to_cnf = 0
CREATE DATABASE IF NOT EXISTS test_s4294wnz 
SELECT count() from tab_02473 PREWHERE b > 0 AND b <= 70 AND c > 0 AND c <= 51 WHERE a == 0;
SELECT count() FROM arrow_dicts
CREATE TABLE test_01193_18429.table_10_809 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Running test stateless/02735_asof_join_right_null.sql from pid=1726' 
CREATE TABLE test_01193_18429.table_10_513 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO 01062_window_view_event_hop_watch_asc.mt VALUES 
CREATE TABLE test_01193_18429.table_4_457 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_3_644 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_5vkp34v6 
INSERT INTO ttta VALUES 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (108 < 42 AND 82 > 0 ? 108 : 0)), throwIf(last != (108 < 42 AND 82 > 0 ? least(42 - 1, 108 + 82 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(42) LIMIT 108, 82);
INSERT INTO test_02117 SETTINGS format_custom_row_before_delimiter='<row_before_delimiter>', format_custom_row_after_delimiter='<row_after_delimieter>\n', format_custom_row_between_delimiter='<row_between_delimiter>\n', format_custom_result_before_delimiter='<result_before_delimiter>\n', format_custom_result_after_delimiter='<result_after_delimiter>\n', format_custom_field_delimiter='<field_delimiter>', format_custom_escaping_rule='CSV' FORMAT CustomSeparatedWithNames
CREATE TABLE test_01193_18429.table_5_79 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DETACH TABLE merge_table_standard_delete;
INSERT INTO test_01193_18429.table_7_691 VALUES 
SELECT 'Running test stateless/02949_parallel_replicas_in_subquery.sql from pid=1726' 
INSERT INTO r1 SELECT 26
INSERT INTO src_9 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 66
select * from dist_01755 where 1 settings enable_early_constant_folding = 0;
SELECT arrayJoin(['hello', 'world']) LIKE '%hello';
INSERT INTO test_01193_18429.table_4_320 VALUES 
INSERT INTO r8 SELECT 65
CREATE TABLE test_01193_18429.table_7_679 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_02908_r3_109 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_109', 'r3') ORDER BY tuple()
SELECT multiIf((number % 2) = 0, toUInt16(1), (number % 3) = 0, toUInt64(2), toUInt8(3)) FROM system.numbers LIMIT 10;
DROP TABLE IF EXISTS mass_table_312;
SELECT 'Running test stateless/01493_alter_remove_properties.sql from pid=1715' 
CREATE INDEX idx_tab4_5 ON tab4 (col3,col1);
CREATE DATABASE IF NOT EXISTS test_icdd499r 
CREATE TABLE test_01193_18429.table_6_92 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_203A353B552B4B25337645535A703240595F2175547C7A486B7E497C705F4D3427504478446B482E(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN toFloat64(1) WHEN (number % 3) = 0 THEN toFloat64(2) ELSE toUInt16(3) END FROM system.numbers LIMIT 10;
DROP QUOTA q1_01297, q2_01297;
SELECT 'SELECT toUInt32(1) < N';
CREATE TABLE mann_whitney_test (left Float64, right UInt8) ENGINE = Memory;
DROP TABLE t_create_as_tuple;
CREATE TABLE test_01193_18429.table_8_545 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP TABLE test_01915_db.test_source_table_2;
select KeyID from t_async_insert_dedup order by KeyID
SELECT * FROM data_02771 SETTINGS ignore_data_skipping_indices='na_idx';
DROP TABLE IF EXISTS table_function_dictionary_source_table;
SELECT count(n), sum(n) FROM test_01192.mv
CREATE TABLE test_01193_18429.table_3_690 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_1_304 VALUES 
DROP TABLE max_length_alias_14053;
SELECT accurateCast(5, 'UInt64');
SYSTEM FLUSH DISTRIBUTED test_dist_02536;
CREATE DICTIONARY test_dictionary ( id UInt64, value String ) PRIMARY KEY id LAYOUT(FLAT()) SOURCE(CLICKHOUSE(TABLE 'dictionary_source_table')) LIFETIME(0);
SELECT multiIf((number % 2) = 0, toUInt16(1), (number % 3) = 0, toFloat64(2), toUInt32(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_4_705 VALUES 
ALTER TABLE new_syntax_01071_test ADD INDEX id_minmax id TYPE minmax GRANULARITY 1;
SELECT byteSize('');
INSERT INTO test_01193_18429.table_6_854 VALUES 
INSERT INTO r6 SELECT 15
CREATE TABLE test_01193_18429.table_9_257 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE VIEW vcounter AS SELECT intDiv(id, 10) AS tens, max(createdAt) AS maxid FROM counter GROUP BY tens;
CREATE INDEX idx_tab2_3 ON tab2 (col1 DESC,col3);
SELECT array([], [], []);
SELECT wordShingleMinHashArgUTF8(NULL, NULL);
CREATE TABLE test_76353D7D69464B7764596B2B2071644E395A2E232C346D32335D2C76495B374F6B413679675F775E(x UInt8) Engine=Memory;
SELECT toDecimal32OrNull ('1.1111111111111111111111111111111111111', 4);
INSERT INTO test_01193_18429.table_6_522 VALUES 
SELECT 'Running test stateless/02710_show_table.sql from pid=1705' 
CREATE TABLE test_39362B3B5C4479673228324450204F4F2B58436F533B51243F6B57546835692B3D6A25772B375F6C(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_4_652 VALUES 
SELECT 'Running test stateless/00227_quantiles_timing_arbitrary_order.sql from pid=1720' 
select x from (select toDecimal64(2.3, 4) x) group by x;
CREATE TABLE test_5D5C5B7620547C622C646752682D4C443E373645463D2C57482E4B647D2B39413E51667C353E393B(x UInt8) Engine=Memory;
SELECT count(*) FROM test_insert_t3;
SELECT * FROM rename_table_multiple_compact ORDER BY key FORMAT TSVWithNames;
INSERT INTO r4 SELECT 31
CREATE TABLE test_01193_18429.table_3_404 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT tuple((2147483648, (-0., 1.1754943508222875e-38, 2147483646, '-9223372036854775808', NULL))), toInt128(0.0001) GROUP BY ((256, toInt64(1.1754943508222875e-38), NULL), NULL, -0., ((65535, '-92233720368547758.07'), 0.9999), tuple(((1., 3.4028234663852886e38, '1', 0.5), NULL, tuple('0.1')))) WITH CUBE WITH TOTALS;
SET check_referential_table_dependencies = 0;
CREATE TABLE 02706_keeper_map_insert_strict (key UInt64, value Float64) Engine=KeeperMap('/' || currentDatabase() || '/test_02706_keeper_map_insert_strict') PRIMARY KEY(key);
SELECT hasToken('NEEDLE hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay', 'NEEDLE'), ' expecting ', 1;
SELECT geohashesInBox(100.0000991821289, 100.0000991821289, 1000.0001220703125, 1000.0001220703125, 0);
INSERT INTO test_01193_18429.table_1_872 VALUES 
SELECT table, engine FROM system.dropped_tables WHERE database = currentDatabase() LIMIT 1;
SELECT 'Running test stateless/02457_datediff_via_unix_epoch.sql from pid=1718' 
SELECT constant_false ? then_non_constant : else_non_constant AS res FROM nullable_00431;
select '1'
alter table data_01900_1 update s = 'foo_28' where 1;
SELECT any([`number`, 1]) AS `k` FROM numbers(10)
CREATE TABLE test_2A27756473257E3C4541703E77245B587737326B557C30207E6F4D2F2E5D615F402E26457D73512F(x UInt8) Engine=Memory;
INSERT INTO mt VALUES /* (-16, 1) */ 
DROP DATABASE IF EXISTS test_uf2u4e5h 
SELECT DISTINCT total, domain FROM ( SELECT sum(total_count) AS total, sum(facebookHits) AS facebook, domain FROM ( SELECT COUNT(*) AS total_count, toUInt64(0) AS facebookHits, domain FROM transactions GROUP BY domain UNION ALL SELECT COUNT(*) AS total_count, SUM(if(domain = 'facebook.com', 1, 0)) AS facebookHits, domain FROM clicks GROUP BY domain ) GROUP BY domain ORDER BY domain LIMIT 10 UNION ALL SELECT sum(total_count) AS total, max(facebookHits) AS facebook, domain FROM ( SELECT COUNT(*) AS total_count, SUM(if(domain = 'facebook.com', 1, 0)) AS facebookHits, domain FROM clicks GROUP BY domain UNION ALL SELECT COUNT(*) AS total_count, toUInt64(0) AS facebookHits, domain FROM transactions GROUP BY domain ) GROUP BY domain ORDER BY domain LIMIT 10 ) ORDER BY domain, total;
DROP DATABASE IF EXISTS test_lfzra6h0 
INSERT INTO test_01193_18429.table_2_315 VALUES 
INSERT INTO TESTTABLE4 VALUES 
SELECT sum(e) from tab_02473 PREWHERE b > 0 AND b <= 70 AND c > 23 AND c <= 74 AND d > 5 AND d <= 35 WHERE a == 0;
DROP DATABASE IF EXISTS test_hqul81fi 
select arr1, 2, nl, arraySlice(arr1, -4, nl) from array_functions;
CREATE DATABASE IF NOT EXISTS test_q2xslihk 
alter table many_mutations delete where y = 701 * 2 settings mutations_sync = 0;
INSERT INTO test_01193_18429.table_3_228 VALUES 
CREATE TABLE test_01193_18429.table_3_21 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
EXPLAIN QUERY TREE (SELECT sum(float64 - 2) - sum(float64 - 3) From test_table);
select 0 = isValidUTF8(toFixedString('\xf8\x90\x80\x80\x80', 5)) from system.numbers limit 10;
select parseDateTimeInJodaSyntax('69', 'xx', 'UTC') = toDateTime('2068-12-31', 'UTC');
SELECT id, sum(value1), sum(value2) FROM test_table_float_values GROUP BY id ORDER BY id;
INSERT INTO test_01193_18429.table_5_537 VALUES 
select t.*, s.a, s.b, s.c from t right join s on (s.a = t.a and s.b = t.b) SETTINGS join_use_nulls = 1;
INSERT INTO test_01193_18429.table_1_538 VALUES 
CREATE TABLE test_01193_18429.table_10_397 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select 1 = multiMatchAny(materialize('abc'), materialize(['a'])) from system.numbers limit 10;
CREATE TABLE test_4D302B6E34675D785E5B302E62253E562B712D2E4E4F74442679487C2E442D7D3328576A7859637C(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_jgs9ouhi 
CREATE DATABASE IF NOT EXISTS test_w7t2ijy0 
SELECT dictHas('02183_direct_dictionary', 2);
SELECT multiIf((number % 2) = 0, [toUInt16(1), toUInt16(2)], (number % 3) = 0, [toUInt32(2), toUInt32(3)], [toInt64(3), toInt64(3)]) FROM system.numbers LIMIT 10;
INSERT INTO parquet_arrays FORMAT Parquet
SELECT number % 2 ? toDecimal64('64.1', 5) : toDecimal64('64.2', 5) FROM system.numbers LIMIT 2;
SELECT 'Running test stateless/00366_multi_statements.sh from pid=1720' 
CREATE TABLE parallel_q1 (`x` UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/tables/01509_parallel_quorum_and_merge_long_test_63cb2vfg/parallel_q', 'r1') ORDER BY tuple() SETTINGS old_parts_lifetime = 1, cleanup_delay_period = 0, cleanup_delay_period_random_add = 0, cleanup_thread_preferred_points_per_iteration = 0, index_granularity = 25021, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.8067032694816589, replace_long_file_name_to_hash = true, max_file_name_length = 55, merge_max_block_size = 5047, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 248106, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 18359937, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 55014, primary_key_compress_block_size = 60741
INSERT INTO test_01193_18429.table_5_620 VALUES 
CREATE TABLE test_01193_18429.table_5_731 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP DATABASE IF EXISTS test_vuxnuupq 
CREATE TABLE test_01193_18429.table_6_315 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP DATABASE IF EXISTS test_n4slf726 
SELECT leftPad('abc', 5, '*.'), leftPad('abc', 5::Int32, '*.');
select * from dist_01223 group by key order by key settings group_by_two_level_threshold=1, group_by_two_level_threshold_bytes=1, distributed_aggregation_memory_efficient=1;
select count(), sum(number) from file('02841.parquet') where indexHint(d64 between '-0.0000011'::Decimal64(7) and 0.0000006::Decimal64(9));
INSERT INTO sample_00276 (x) SELECT toUInt8(number) AS x FROM system.numbers LIMIT 256;
CREATE DICTIONARY `foo 1234`.dict (`key` UInt64 DEFAULT 0, `val` UInt64 DEFAULT 10) PRIMARY KEY key SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'dict_data' PASSWORD '[HIDDEN]' DB 'foo 1234')) LIFETIME(MIN 0 MAX 0) LAYOUT(FLAT())
CREATE TABLE test_67427B4B6A57745B2E20362771416275534650557761494120285B4C6D4B3C73317D4E526D2E5C64(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_2_762 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
insert into table function file('uuid_str.msgpack', 'MsgPack', 'uuid UUID') select toUUID('5e7084e0-019f-461f-9e70-84e0019f561f') settings output_format_msgpack_uuid_representation='str', engine_file_truncate_on_insert=1
EXPLAIN SELECT DISTINCT * FROM ( SELECT DISTINCT * FROM values('id UInt8', 0, 2) ORDER BY id ASC WITH FILL )
SELECT multiIf((number % 2) = 0, [toInt64(1), toInt64(2)], (number % 3) = 0, [toInt32(2), toInt32(3)], [toInt8(3), toInt8(3)]) FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_uq4ssygq 
CREATE TABLE test_567557435F2B5D46327A2D5B58445622293932202F5B6720646675792572293D646F6C50773C7A44(x UInt8) Engine=Memory;
CREATE TABLE summing_table (`id` UInt32, `ip4Map.value` Array(IPv4), `ip4Map.total` Array(UInt32), `ip6Map.value` Array(IPv6), `ip6Map.total` Array(UInt32), `uuidMap.value` Array(UUID), `uuidMap.total` Array(UInt32)) ENGINE = SummingMergeTree ORDER BY id SETTINGS index_granularity = 50717, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 113, merge_max_block_size = 15638, prefer_fetch_merged_part_size_threshold = 1605515076, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 23712000, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 70373, primary_key_compress_block_size = 95170
SELECT e FROM alter_update_00806 ORDER BY d;
SELECT 'Running test stateless/01780_column_sparse_filter.sql from pid=1715' 
SELECT multiIf((number % 2) = 0, [toUInt8(1), toUInt8(2)], (number % 3) = 0, [toInt8(2), toInt8(3)], [toFloat32(3), toFloat32(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_61575F29617D402A4176705C496F5843787556622129306A65296D39217B6B3F3B57652F76705B21(x UInt8) Engine=Memory;
SELECT arrayPartialShuffle([[1,2,3,4],[-1,-2,-3,-4],[10,20,30,40],[100,200,300,400,500,600,700,800,900],[2,4,8,16,32,64]], 2, 0xbad_cafe);
insert into mt select * from numbers(100);
INSERT INTO test_01193_18429.table_3_888 VALUES 
SELECT * FROM system.tables WHERE 1 in (SELECT number from numbers(2)) AND database = currentDatabase() format Null
SELECT dateDiff('seconds', toDateTime('2017-12-31', 'UTC'), toDateTime('2016-01-01', 'UTC'));
INSERT INTO stored_aggregates SELECT toDate('2014-06-01') AS d, intDiv(number, 100) AS k1, toString(intDiv(number, 10)) AS k2, uniqState(toUInt64(number % 7)) AS Uniq, uniqThetaState(toUInt64(number % 7)) AS UniqThetaSketch FROM ( SELECT * FROM system.numbers LIMIT 1000 ) GROUP BY d, k1, k2 ORDER BY d, k1, k2;
select 0 = multiSearchFirstIndexCaseInsensitive(materialize('kOzLaInSCOFHikwfkXaBfkyjdQ'), ['t', 'emHGfAiZSkZaVTSfplxRiPoDZUTT', 'YHnGJDTzxsboDsLPGHChMHwrHHICBIs', 'gbcbVHSlVeVDOeILWtSLkKfVVjG', 'fPaJjbnNthEwWZyg', 'qS', 'PCQxoLaSdQOjioMKPglmoWR', 'KLMNszm', 'TCErEFyxOvqnHs', 'dRbGzEJqvIGAcilZoHlXtZpjmLLZfsYueKqo', 'iKHmNSbGgaJYJEdMkbobXTdlFgAGEJMQ', 'mUGB']) from system.numbers limit 10;
INSERT INTO src_15 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 26
INSERT INTO test_01193_18429.table_10_997 VALUES 
INSERT INTO test_01193_18429.table_5_994 VALUES 
SELECT CASE WHEN (col1 % 2) = 0 THEN toFixedString(col2, 16) WHEN 1 THEN col3 ELSE toFixedString(col4, 16) END FROM multi_if_check;
INSERT INTO test_01193_18429.table_8_698 VALUES 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c4) AND c4) OR ((NOT c1) AND (NOT c2)) OR ((NOT c1) AND (NOT c4) AND (NOT c2)) OR ((NOT c1) AND (NOT c7) AND (NOT c6) AND c0) OR ((NOT c9) AND c9 AND c9 AND (NOT c9) AND (NOT c8)) OR ((NOT c2) AND c9 AND c2 AND c8 AND c1) OR (c8 AND c4 AND c9 AND c8 AND c2) OR ((NOT c9) AND c5 AND (NOT c4) AND c8 AND (NOT c4)) SETTINGS convert_query_to_cnf = 1
SELECT 'Running test stateless/02563_async_insert_bad_data.sh from pid=1720' 
SELECT (x == CAST(65536 as Date)), txt FROM 02540_date WHERE txt == 'CAST(65536 as UInt32)';
select 8 as x format Native 
INSERT INTO src_8 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 16
CREATE TABLE test1__fuzz_36 (`pt` Array(Array(LowCardinality(Int256))), `exposure_uv` UInt32) ENGINE = Memory;
SELECT uniq(number) u FROM remote('127.0.0.{2,3}', currentDatabase(), data_00184) GROUP BY number ORDER BY u DESC SETTINGS distributed_group_by_no_merge=2;
CREATE DATABASE IF NOT EXISTS test_kx7ajf9r 
SELECT 'Running test stateless/02478_window_frame_type_groups.sql from pid=1722' 
SET send_logs_level = 'fatal';
drop table if exists buffer_01811;
CREATE TABLE test_2838706738676D6D762D7C24263A565C4330433A757C366C705F5A4A667C59343C45615E365F4C51(x UInt8) Engine=Memory;
select toTypeName([toUInt64(1), toUInt256(1)]);
INSERT INTO test_01193_18429.table_3_839 VALUES 
alter table many_mutations delete where y = 812 * 2 settings mutations_sync = 0;
CREATE DATABASE IF NOT EXISTS test_gcpote3e 
SELECT now() = current_TIMESTAMP();
DROP DATABASE IF EXISTS test_l41ioljv 
INSERT INTO r9 SELECT 30
SELECT dt FROM ps WHERE da = _CAST([[1, 1], [2, 2]], 'Array(Array(UInt8))')
INSERT INTO test_01193_18429.table_4_408 VALUES 
CREATE TABLE data (`key` Int) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 963, min_bytes_for_wide_part = 9453757, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 122, merge_max_block_size = 5585, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 948859449, index_granularity_bytes = 19230897, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 19694, primary_key_compress_block_size = 9385
DROP DATABASE IF EXISTS test_y9d6pdpj 
DROP DATABASE IF EXISTS test_5ksz6fca 
INSERT INTO t_json_field VALUES 
SELECT * FROM ( EXPLAIN PLAN indexes = 1 SELECT * FROM ngrambf_tab WHERE match(str, 'OLAP (.*?)*') ORDER BY id ) WHERE explain LIKE '%Granules: %' SETTINGS allow_experimental_analyzer = 1;
DROP TABLE using1;
INSERT INTO test_01193_18429.table_9_979 VALUES 
SELECT multiIf((number % 2) = 0, toInt8(1), (number % 3) = 0, toUInt8(2), toFloat64(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_2_984 VALUES 
SELECT 'Running test stateless/01547_query_log_current_database.sql from pid=1720' 
CREATE DATABASE IF NOT EXISTS test_995b0bjm 
SELECT COUNT() FROM bloom_filter_types_test WHERE date = '1970-01-02' SETTINGS max_rows_to_read = 6;
INSERT INTO test_01193_18429.table_6_249 VALUES 
CREATE DICTIONARY test_dictionary_hashed_load_factor ( key UInt64, value UInt16 ) PRIMARY KEY key SOURCE(CLICKHOUSE(TABLE test_table)) LAYOUT(hashed(MAX_LOAD_FACTOR 0.98)) LIFETIME(0);
CREATE TABLE t_array_index (`n` Nested(key String, value String)) ENGINE = MergeTree ORDER BY n.key SETTINGS index_granularity = 65385, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 12753, prefer_fetch_merged_part_size_threshold = 1692428123, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 10005994, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 98902, primary_key_compress_block_size = 15814
CREATE TABLE test_32263F554F5B657A316B55305C485D623435795E692C2A3E722A7743282F33736D58433F29607574(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02169_map_functions.sql from pid=1724' 
CREATE TABLE ipv6_test (`id` UInt64, `value` String) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 13531, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 86, merge_max_block_size = 12812, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 63, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 22822525, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 57003, primary_key_compress_block_size = 19910
SELECT 1 FROM distributed_table_merged;
CREATE TABLE test_01193_18429.table_2_176 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/01483_merge_table_join_and_group_by.sql from pid=1722' 
SELECT sleep(0.7) Format Null;
CREATE TABLE test_01193_18429.table_7_761 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_5D314E4A556B3B48544E236E7D5350743233456F5F6E674D7A4D4168397D64305B7472697A247663(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_e22sof8e 
CREATE TABLE test_02908_r3_29 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_29', 'r3') ORDER BY tuple()
INSERT INTO test_01193_18429.table_9_315 VALUES 
INSERT INTO t64 SELECT (1 - toInt64(intExp2(32)) + number) AS x, x, x, x, x, x, x, x FROM numbers(65);
SELECT formatQuerySingleLine('SeLeCt 1;');
INSERT INTO test_01193_18429.table_9_930 VALUES 
INSERT INTO test_01193_18429.table_7_366 VALUES 
INSERT INTO r1 SELECT 21
CREATE TABLE file (s String, n UInt32) ENGINE = File(CSVWithNames);
SELECT value.* FROM test_table;
CREATE TABLE join_table_mutation(id Int32, name String) ENGINE = Join(ANY, LEFT, id);
INSERT INTO test_01193_18429.table_1_976 VALUES 
CREATE TABLE test_2D5B7327355F4B36657D7879347B5078692B3D49512B2D405A68262F687240755F70737721436B5A(x UInt8) Engine=Memory;
insert into lc_left_aj values 
SELECT count() FROM lc_nullable WHERE has(fixed_string, toFixedString('10', 5));
SELECT * from test_progress FORMAT JSONEachRowWithProgress
SELECT detectTonality('ÃÂ½ÃÂµÃÂ½ÃÂ°ÃÂ²ÃÂ¸ÃÂÃÂÃÂ ÃÂº ÃÂ»ÃÂÃÂ´ÃÂÃÂ¼');
CREATE DICTIONARY 01682_database_for_cache_dictionary.cache_dictionary_complex_key_complex_attributes ( id UInt64, id_key String, value_first String DEFAULT 'value_first_default', value_second Nullable(String) DEFAULT 'value_second_default' ) PRIMARY KEY id, id_key SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'complex_key_complex_attributes_source_table' DB '01682_database_for_cache_dictionary')) LIFETIME(MIN 1 MAX 1000) LAYOUT(COMPLEX_KEY_CACHE(SIZE_IN_CELLS 10));
INSERT INTO test_01193_18429.table_5_102 VALUES 
select position('ÃÂ°ÃÂ±ÃÂ²' as h, lower('' as n)) = positionCaseInsensitive(h, n);
CREATE DATABASE IF NOT EXISTS test_2q4re005 
DROP DATABASE IF EXISTS test_45vtnsgl 
SELECT 7, toFixedString('Hello', 10), bin(bitShiftLeft(toFixedString('Hello', 10), 7));
CREATE TABLE test_427B666F3961774173407E732D57747127674A3922545C575335616E436426794D23372A535B2062(x UInt8) Engine=Memory;
SET output_format_write_statistics = 0;
SELECT 'Running test stateless/01602_array_aggregation.sql from pid=1715' 
SELECT count() FROM lc_nullable WHERE has(u32, 5);
CREATE DATABASE IF NOT EXISTS test_aevrgero 
SELECT 2147483649, 9223372036854775807, 2147483649 = 9223372036854775807, 2147483649 != 9223372036854775807, 2147483649 < 9223372036854775807, 2147483649 <= 9223372036854775807, 2147483649 > 9223372036854775807, 2147483649 >= 9223372036854775807, 9223372036854775807 = 2147483649, 9223372036854775807 != 2147483649, 9223372036854775807 < 2147483649, 9223372036854775807 <= 2147483649, 9223372036854775807 > 2147483649, 9223372036854775807 >= 2147483649 , toUInt32(2147483649) = toUInt64(9223372036854775807), toUInt32(2147483649) != toUInt64(9223372036854775807), toUInt32(2147483649) < toUInt64(9223372036854775807), toUInt32(2147483649) <= toUInt64(9223372036854775807), toUInt32(2147483649) > toUInt64(9223372036854775807), toUInt32(2147483649) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toUInt32(2147483649), toUInt64(9223372036854775807) != toUInt32(2147483649), toUInt64(9223372036854775807) < toUInt32(2147483649), toUInt64(9223372036854775807) <= toUInt32(2147483649), toUInt64(9223372036854775807) > toUInt32(2147483649), toUInt64(9223372036854775807) >= toUInt32(2147483649) , toUInt32(2147483649) = toInt64(9223372036854775807), toUInt32(2147483649) != toInt64(9223372036854775807), toUInt32(2147483649) < toInt64(9223372036854775807), toUInt32(2147483649) <= toInt64(9223372036854775807), toUInt32(2147483649) > toInt64(9223372036854775807), toUInt32(2147483649) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toUInt32(2147483649), toInt64(9223372036854775807) != toUInt32(2147483649), toInt64(9223372036854775807) < toUInt32(2147483649), toInt64(9223372036854775807) <= toUInt32(2147483649), toInt64(9223372036854775807) > toUInt32(2147483649), toInt64(9223372036854775807) >= toUInt32(2147483649) , toUInt64(2147483649) = toUInt64(9223372036854775807), toUInt64(2147483649) != toUInt64(9223372036854775807), toUInt64(2147483649) < toUInt64(9223372036854775807), toUInt64(2147483649) <= toUInt64(9223372036854775807), toUInt64(2147483649) > toUInt64(9223372036854775807), toUInt64(2147483649) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toUInt64(2147483649), toUInt64(9223372036854775807) != toUInt64(2147483649), toUInt64(9223372036854775807) < toUInt64(2147483649), toUInt64(9223372036854775807) <= toUInt64(2147483649), toUInt64(9223372036854775807) > toUInt64(2147483649), toUInt64(9223372036854775807) >= toUInt64(2147483649) , toUInt64(2147483649) = toInt64(9223372036854775807), toUInt64(2147483649) != toInt64(9223372036854775807), toUInt64(2147483649) < toInt64(9223372036854775807), toUInt64(2147483649) <= toInt64(9223372036854775807), toUInt64(2147483649) > toInt64(9223372036854775807), toUInt64(2147483649) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toUInt64(2147483649), toInt64(9223372036854775807) != toUInt64(2147483649), toInt64(9223372036854775807) < toUInt64(2147483649), toInt64(9223372036854775807) <= toUInt64(2147483649), toInt64(9223372036854775807) > toUInt64(2147483649), toInt64(9223372036854775807) >= toUInt64(2147483649) , toInt64(2147483649) = toUInt64(9223372036854775807), toInt64(2147483649) != toUInt64(9223372036854775807), toInt64(2147483649) < toUInt64(9223372036854775807), toInt64(2147483649) <= toUInt64(9223372036854775807), toInt64(2147483649) > toUInt64(9223372036854775807), toInt64(2147483649) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toInt64(2147483649), toUInt64(9223372036854775807) != toInt64(2147483649), toUInt64(9223372036854775807) < toInt64(2147483649), toUInt64(9223372036854775807) <= toInt64(2147483649), toUInt64(9223372036854775807) > toInt64(2147483649), toUInt64(9223372036854775807) >= toInt64(2147483649) , toInt64(2147483649) = toInt64(9223372036854775807), toInt64(2147483649) != toInt64(9223372036854775807), toInt64(2147483649) < toInt64(9223372036854775807), toInt64(2147483649) <= toInt64(9223372036854775807), toInt64(2147483649) > toInt64(9223372036854775807), toInt64(2147483649) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toInt64(2147483649), toInt64(9223372036854775807) != toInt64(2147483649), toInt64(9223372036854775807) < toInt64(2147483649), toInt64(9223372036854775807) <= toInt64(2147483649), toInt64(9223372036854775807) > toInt64(2147483649), toInt64(9223372036854775807) >= toInt64(2147483649) 
SELECT CASE WHEN (col1 % 2) = 0 THEN 'foo' WHEN (col1 % 3) = 0 THEN 'bar' ELSE col4 END FROM multi_if_check;
SELECT element_count FROM system.dictionaries WHERE database = currentDatabase() AND name = 'test_dictionary_load_factor_nullable';
CREATE DATABASE IF NOT EXISTS test_ptcq4qg5 
INSERT INTO test_01193_18429.table_9_221 VALUES 
DROP DATABASE IF EXISTS test_x5r6lol0 
EXPLAIN SYNTAX SELECT mapKeys(m), mapValues(m) FROM t_func_to_subcolumns;
select [0, 0, 0, 0, 5, 1, 0, 6, 0, 1, 17, 15, 1, 0] = multiSearchAllPositionsCaseInsensitiveUTF8(materialize('ÃÂÃÂ¤ÃÂ¨ÃÂÃÂ±ÃÂ¨ÃÂ¢ÃÂ¾ÃÂ¥ÃÂÃÂ±ÃÂ·ÃÂ¦ÃÂÃÂÃÂÃÂÃÂÃÂ¢ÃÂ»ÃÂÃÂ ÃÂ½ÃÂÃÂ'), ['ÃÂÃÂ', 'ÃÂÃÂÃÂ', 'ÃÂ¢ÃÂÃÂ³ÃÂÃÂ¾ÃÂ»ÃÂÃÂ¤ÃÂÃÂ¸ÃÂ±ÃÂÃÂÃÂÃÂ½ÃÂµÃÂÃÂºÃÂ²ÃÂ¦ÃÂÃÂ©ÃÂÃÂÃÂºÃÂºÃÂ¹ÃÂ½', 'ÃÂ¾ÃÂ¤ÃÂÃÂ°ÃÂÃÂ¾ÃÂ³ÃÂÃÂ¥ÃÂ§ÃÂ¦ÃÂ¾ÃÂ¾ÃÂÃÂ¢ÃÂÃÂ ÃÂ±', 'ÃÂ±ÃÂ¨ÃÂÃÂÃÂ¥ÃÂÃÂ±ÃÂÃÂÃÂ¦ÃÂÃÂ¾ÃÂÃÂÃÂÃÂ', 'ÃÂÃÂÃÂ¨ÃÂ¹ÃÂ±ÃÂ¨ÃÂÃÂ¾ÃÂ¥', 'ÃÂÃÂ´ÃÂÃÂÃÂÃÂ¤ÃÂÃÂ¦ÃÂÃÂÃÂ¸ÃÂ³ÃÂ´ÃÂÃÂ£ÃÂ ÃÂÃÂÃÂ½ÃÂ¥ÃÂÃÂ¦ÃÂ»', 'ÃÂ¨ÃÂÃÂ', 'ÃÂÃÂÃÂºÃÂÃÂ¢ÃÂÃÂ±ÃÂ¤ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ·ÃÂÃÂ¼ÃÂÃÂ½ÃÂÃÂÃÂÃÂÃÂÃÂ¿ÃÂ©ÃÂÃÂÃÂºÃÂµÃÂÃÂ ÃÂºÃÂ ', 'ÃÂÃÂÃÂ¨ÃÂÃÂÃÂ', 'ÃÂµÃÂºÃÂ¢ÃÂ»ÃÂ', 'ÃÂÃÂ¾ÃÂµÃÂºÃÂ¢ÃÂ»', 'ÃÂÃÂÃÂ¨ÃÂ¹ÃÂÃÂÃÂ¢ÃÂ¾ÃÂ¥ÃÂ²ÃÂ±ÃÂ·', 'ÃÂ¢ÃÂÃÂÃÂ ÃÂ´ÃÂÃÂ¼ÃÂ³ÃÂ¤ÃÂµÃÂ¢ÃÂ°ÃÂ°ÃÂÃÂÃÂ¼']) from system.numbers limit 10;
INSERT INTO r9 SELECT 39
INSERT INTO test_02908_r1_159 SELECT rand64() FROM numbers(5);
SELECT repeat(strings, i8) FROM defaults;
SELECT 'OHello' NOT ILIKE '%lhell%';
DROP DATABASE IF EXISTS test_7v4hwln9 
WITH - INTERVAL 1 HOUR - INTERVAL 1 SECOND - INTERVAL 1 SECOND as expr SELECT expr, toTypeName(expr);
INSERT INTO FUNCTION remote('127.0.0.1', 'test_xp4qylap', 't_async_insert_table_function') FORMAT Values
SELECT groupArraySorted(5)(data) FROM test;
SELECT 'Running test stateless/02131_skip_index_not_materialized.sql from pid=1726' 
CREATE TABLE test_01193_18429.table_9_338 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT materialize('a\xFF\xFEb') LIKE materialize('%a\xFF\xFEb');
SELECT topLevelDomain('http://paul@www.example.com:80/') AS Domain;
CREATE TABLE test_02908_r1_87 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_87', 'r1') ORDER BY tuple()
 CREATE TABLE test_lazy_01294_concurrent_test_qna5lrny.tlog2 (a UInt64, b UInt64) ENGINE = TinyLog; 
INSERT INTO defaults SELECT * FROM numbers(10);
CREATE TABLE test_3058634A4E5D2D6F6C65325351523443315C682622654551667537673069263B6F6C693476704753(x UInt8) Engine=Memory;
select 1 = isValidUTF8('\xEF\x80\xBF') from system.numbers limit 10;
SELECT CASE WHEN (number % 2) = 0 THEN toInt8(1) WHEN (number % 3) = 0 THEN toFloat64(2) ELSE toInt32(3) END FROM system.numbers LIMIT 10;
INSERT INTO distinct_two_level SELECT 1546300800000, concat('test.com', toString(number / 10000)) , concat('foo', toString(number % 10000)) from numbers(10000);
CREATE TABLE test_01193_18429.table_1_153 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT partitionId([NULL], [NULL], [NULL]);
CREATE DATABASE test_ixtnzg7k_ordinary Engine=Ordinary
CREATE TABLE test_59605E3A775B34267251273A673F48557C60375D594D205E6A44364B7D3667442B3D4B332620683E(x UInt8) Engine=Memory;
CREATE TABLE test_7775494B5B51364965383731482748384B41354C2127342E5B2D2F2A6170584B3C74795C4C7A372E(x UInt8) Engine=Memory;
select unbin(toLowCardinality(materialize('00110000')));
CREATE TABLE test_71594C56653C727A7162683039682F7343673855367164356B4D6868477B5D357E674961214A604D(x UInt8) Engine=Memory;
SELECT multiIf(1, toFixedString('A', 16), 1, NULL, toFixedString('DEF', 16));
SELECT 'Running test stateless/02832_alter_max_sessions_for_user.sh from pid=1718' 
CREATE TABLE test_02908_r1_166 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_166', 'r1') ORDER BY tuple()
SELECT maxMap([number % 3, number % 4 - 1], [number :: Float64, NULL]) FROM numbers(3) GROUP BY number WITH TOTALS ORDER BY number;
insert into data_order_by_proj_comp values 
INSERT INTO mt VALUES /* (-1, 1) */ 
DROP TABLE IF EXISTS database_for_dict.dict_source;
SELECT -2147483647, -9223372036854775808, -2147483647 = -9223372036854775808, -2147483647 != -9223372036854775808, -2147483647 < -9223372036854775808, -2147483647 <= -9223372036854775808, -2147483647 > -9223372036854775808, -2147483647 >= -9223372036854775808, -9223372036854775808 = -2147483647, -9223372036854775808 != -2147483647, -9223372036854775808 < -2147483647, -9223372036854775808 <= -2147483647, -9223372036854775808 > -2147483647, -9223372036854775808 >= -2147483647 , toInt32(-2147483647) = toInt64(-9223372036854775808), toInt32(-2147483647) != toInt64(-9223372036854775808), toInt32(-2147483647) < toInt64(-9223372036854775808), toInt32(-2147483647) <= toInt64(-9223372036854775808), toInt32(-2147483647) > toInt64(-9223372036854775808), toInt32(-2147483647) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toInt32(-2147483647), toInt64(-9223372036854775808) != toInt32(-2147483647), toInt64(-9223372036854775808) < toInt32(-2147483647), toInt64(-9223372036854775808) <= toInt32(-2147483647), toInt64(-9223372036854775808) > toInt32(-2147483647), toInt64(-9223372036854775808) >= toInt32(-2147483647) , toInt64(-2147483647) = toInt64(-9223372036854775808), toInt64(-2147483647) != toInt64(-9223372036854775808), toInt64(-2147483647) < toInt64(-9223372036854775808), toInt64(-2147483647) <= toInt64(-9223372036854775808), toInt64(-2147483647) > toInt64(-9223372036854775808), toInt64(-2147483647) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toInt64(-2147483647), toInt64(-9223372036854775808) != toInt64(-2147483647), toInt64(-9223372036854775808) < toInt64(-2147483647), toInt64(-9223372036854775808) <= toInt64(-2147483647), toInt64(-9223372036854775808) > toInt64(-2147483647), toInt64(-9223372036854775808) >= toInt64(-2147483647) 
select round(h3PointDistM(lat1, lon1,lat2, lon2), 2) AS k from table1 order by k;
SELECT 'Running test stateless/01916_low_cardinality_interval.sql from pid=1713' 
OPTIMIZE TABLE alter_00061;
alter table many_mutations delete where y = 221 * 2 settings mutations_sync = 0;
select startsWithUTF8('Ã¥Â¯ÂÃ¥Â¼ÂºÃ¦Â°ÂÃ¤Â¸Â»Ã¦ÂÂÃ¦ÂÂÃ¥ÂÂÃ¨Â°Â', '\xe5');
SELECT YYYYMMDDhhmmssToDateTime(21060207062815);
CREATE TABLE test_4720343E743356556A2233706A3A3E775030655F395B726B2930213D6E702028263D5C5C7B29596A(x UInt8) Engine=Memory;
select 6;
SELECT UUIDNumToString(NULL, NULL, NULL);
WITH _CAST('test_pqmm0fjx', 'Nullable(String)') AS `id_02` SELECT `one`.`dummy`, ignore(`id_02`) FROM `system`.`one` WHERE `dummy` IN tuple(2)
select toTypeName([assumeNotNull(materialize(NULL))]);
CREATE TABLE test_5C7A3B41745C622361457266765C74323A2438667D652D726A4630616246795541224C5028304C4F(x UInt8) Engine=Memory;
SELECT 9, 10, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (9 < 13 AND 10 > 0 ? 9 : 0)), throwIf(last != (9 < 13 AND 10 > 0 ? least(13 - 1, 9 + 10 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 9, 10);
ALTER USER test_user_01075 DROP HOST NAME 'localhost';
SELECT 'Running test stateless/01527_dist_sharding_key_dictGet_reload.sql from pid=1705' 
CREATE DATABASE IF NOT EXISTS test_27ed569a 
CREATE TABLE test_4F667064603D5E3A747336482452794E4F7A6D464A434C75692358216762264747264356276B4D77(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_1_870 VALUES 
INSERT INTO 02535_custom_key SELECT toString(number), number % 3 FROM numbers(1000)
CREATE TABLE test_66286A4D68282F263871692F2A4E73566838353E5D2C3E643F603F4667744A235B4C7362354D3A5B(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_2_295 VALUES 
select countIf(1, NULL);
INSERT INTO test_01193_18429.table_9_629 VALUES 
CREATE TABLE test_01193_18429.table_9_996 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_9_193 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
GRANT SELECT ON db2.table TO test_user_01073;
select * from (Ã£ÂÂ( select *, count() over () cnt fromÃ£ÂÂ( select * from numbers(10000000) )Ã£ÂÂ)Ã£ÂÂ) order by number limit 3Ã£ÂÂ;
CREATE TABLE set_idx (`u64` UInt64, `i32` Int32, INDEX idx i32 TYPE set(2) GRANULARITY 1) ENGINE = MergeTree ORDER BY u64 SETTINGS index_granularity = 6, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 11331, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 2112643977, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 81907, primary_key_compress_block_size = 27371
CREATE TABLE test_01193_18429.table_4_420 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
set input_format_max_rows_to_read_for_schema_inference=2;
DROP DATABASE IF EXISTS test_bsjvbs7p 
INSERT INTO test_01193_18429.table_1_935 VALUES 
SELECT number, neighbor('ClickHouse', -5) FROM numbers(10);
WITH CAST(1426860704886947840 AS Int64) AS i64, 'UTC' AS tz SELECT tz, i64, snowflakeToDateTime(i64, tz) as dt, toTypeName(dt), snowflakeToDateTime64(i64, tz) as dt64, toTypeName(dt64);
SELECT 'Running test stateless/00048_a_stored_aggregates_merge.sql from pid=1720' 
select toStartOfWeek(toDate(0));
SELECT 'First JOIN RIGHT second JOIN RIGHT';
select B'';
DROP DATABASE IF EXISTS test_ex7s2jh8 
SELECT CAST('hello' AS FixedString(5)) LIKE '%hell_';
DROP TABLE IF EXISTS simple_agf_summing_mt;
CREATE TABLE test_68373829685C2F3B755024396663412255374B504D592F69504D54767A35262940344462433E4333(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_6_997 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT hex(toString(anyState(x))), hex(toString(any(x))) FROM (SELECT uniqState(number) AS x FROM numbers(1000)) FORMAT Vertical;
CREATE TABLE test_467A6A702F3A7C2F376945786C6852233F3969302E732A494E573654383A6966497C2264767D484D(x UInt8) Engine=Memory;
SELECT least([]);
INSERT INTO test_01193_18429.table_6_970 VALUES 
alter table defaulted modify column payload_length UInt16 default length(payload);
SELECT a, b FROM t_vertical_merges;
INSERT INTO r2 SELECT 22
select concat(materialize(toFixedString('a', 1)), materialize('b'), 'c') == 'abc' from system.numbers limit 5;
SELECT * FROM test_02099 FORMAT TSVRaw
SELECT count() == 33333 FROM null_in_subquery WHERE i global in (SELECT i FROM null_in_subquery WHERE dt = 2);
select hex(sipHash128ReferenceKeyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16)));
SELECT COUNT() FROM bloom_filter_null_array WHERE not has(v, 0);
CREATE TABLE test_5B2E616856547D5E50274665246178516057697C664D5C3156206028314860247736336B25683E6F(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_8_753 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TEMPORARY TABLE b (x LowCardinality(String));
CREATE TABLE test_01193_18429.table_8_789 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select [2, 2, 2, 5, 5, 5, 0, 0, 0, 0] = groupArray(positionUTF8(materialize('ÃÂ°ÃÂ±ÃÂ²ÃÂ°ÃÂ±ÃÂ²'), materialize('ÃÂ±'), number)) from numbers(10);
select -15 as offset, 15 as length, toFixedString('Hello', 6) as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
DROP DATABASE IF EXISTS test_nbw4s0i3 
 CREATE TABLE IF NOT EXISTS system.coverage_log ( time DateTime COMMENT 'The time of test run', test_name String COMMENT 'The name of the test', coverage Array(UInt64) COMMENT 'An array of addresses of the code (a subset of addresses instrumented for coverage) that were encountered during the test run' ) ENGINE = Null COMMENT 'Contains information about per-test coverage from the CI, but used only for exporting to the CI cluster' 
INSERT INTO r9 SELECT 8
CREATE TABLE test_01193_18429.table_8_351 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SET max_rows_to_read = 5;
INSERT INTO test_01193_18429.table_2_486 VALUES 
CREATE TABLE test_455E763C53253D5C4E31355E2B2F5345317C366A35466C734F5A294C7A7048352B2262312F554970(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_8_56 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
alter table data_01900_2 update s = 'bar_93' where 1;
SELECT 'Running test stateless/01030_incorrect_count_summing_merge_tree.sql from pid=1724' 
CREATE ROW POLICY 02131_filter_5 ON 02131_rptable USING x>=2 AS restrictive TO ALL;
insert into data_r1 (key) values 
INSERT INTO test_02908_r1_194 SELECT rand64() FROM numbers(5);
CREATE DATABASE IF NOT EXISTS test_2bvadt7r 
CREATE TABLE summing_merge_tree_with_list_of_columns_to_sum (d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = SummingMergeTree(d, (a, b), 111, (y, z));
CREATE INDEX idx_tab4_0 ON tab4 (col1 DESC,col0 DESC);
SELECT * FROM remote('127.0.0.{1,2}', generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8)))))))))))))))))))))))))))))))))))))))))))))))))))', 1, 1, 1)) LIMIT 1 FORMAT Null
CREATE TABLE test_01193_18429.table_8_424 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SHOW CREATE TABLE test;
SELECT * FROM test2 ORDER BY x;
SELECT rightPad('abc', 4), rightPad('abc', 4::Int32);
CREATE TABLE test_64217764634A705D664B61775E4A746672604F2D792C3F65637833553B565C4A4B316E5D75323239(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00588_shard_distributed_prewhere.sql from pid=1726' 
SELECT multiIf(1, col2, 1, col3, col4) FROM multi_if_check;
DROP TABLE insert_values_parametrized
SELECT arrayCumSum(x -> 10, emptyArrayUInt8());
CREATE DICTIONARY 02162_test_dictionary ( id UInt64, value String, range_value UInt64, start UInt64 EXPRESSION range_value, end UInt64 EXPRESSION range_value ) PRIMARY KEY id SOURCE(CLICKHOUSE(TABLE '02162_test_table')) LAYOUT(RANGE_HASHED()) RANGE(MIN start MAX end) LIFETIME(0);
SELECT YYYYMMDDhhmmssToDateTime64(20200229111111);
 INSERT INTO t02982 SELECT number, 'a' FROM numbers_mt(1000000); 
CREATE TABLE bad_skip_idx (`id` UInt64, `value` String) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity_bytes = 64, min_index_granularity_bytes = 10, vertical_merge_algorithm_min_rows_to_activate = 0, vertical_merge_algorithm_min_columns_to_activate = 0, index_granularity = 57799, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 51, merge_max_block_size = 23699, prefer_fetch_merged_part_size_threshold = 1, min_merge_bytes_to_use_direct_io = 10737418240, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 92066, primary_key_compress_block_size = 92218
CREATE TABLE test_56717D554B24572C7A50676F222C5777634D64464F4D46467C626D35212F5D42254C30327C764959(x UInt8) Engine=Memory;
select arr1, no, 2, arraySlice(arr1, no, 2) from array_functions;
INSERT INTO src VALUES /* (8, 2) */ 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c0) AND (NOT c2) AND c0) OR ((NOT c8) AND c8 AND c9 AND c9 AND (NOT c6)) OR (c5 AND (NOT c9)) OR ((NOT c8) AND c0) OR (c8 AND c9 AND (NOT c0) AND (NOT c8) AND c1) OR (c9) OR (c5 AND (NOT c5) AND c9 AND c3) OR ((NOT c5) AND (NOT c4) AND (NOT c9) AND (NOT c8)) OR (c3) SETTINGS convert_query_to_cnf = 1
select hypot(1, 0) = 1;
alter table 02900_buffer add column v String
SELECT _part, count() FROM test_not_found_column_nothing PREWHERE col001 % 3 != 0 GROUP BY _part ORDER BY _part;
DROP TABLE 01785_db.complex_key_source_table;
CREATE INDEX idx_tab4_3 ON tab4 (col3 DESC,col4 DESC);
CREATE TABLE test_2069345E6456352C7D4577777073537D3A404C2272674E76647E4B7A66302B6D3F6E452D5E3E667B(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_3_754 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_1_431 VALUES 
INSERT INTO test_01193_18429.table_8_724 VALUES 
CREATE INDEX idx_tab3_5 ON tab3 (col4,col3);
SELECT MONTH(NULL, NULL);
drop table if exists ints;
DROP DATABASE IF EXISTS 01053_db;
INSERT INTO test_01193_18429.table_8_302 VALUES 
CREATE DATABASE IF NOT EXISTS test_wtkckh5h 
select if(0, y, 42) from test;
CREATE TABLE test_01193_18429.table_10_401 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_3_415 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP DATABASE IF EXISTS test_7glosn58 
INSERT INTO test_01193_18429.table_5_344 VALUES 
RESTORE TABLE data AS data_no_native_copy FROM S3(s3_conn, 'backups/test_s5wpyi15/data_no_native_copy') SETTINGS allow_s3_native_copy=false
INSERT INTO check_system_tables SELECT * FROM numbers(1) SETTINGS prefer_localhost_replica=0;
CREATE TABLE test_01193_18429.table_3_72 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/02374_analyzer_array_join.sql from pid=1715' 
DROP DATABASE IF EXISTS test_03hogo8o 
SELECT '-----Check that select and merge with lightweight delete.-----';
alter table data_01900_1 update s = 'foo_7' where 1;
attach database db_01870;
SELECT count(x) FROM (SELECT nullIf(number, 5) AS x FROM system.numbers LIMIT 10);
create table t_json_merge (id UInt64, s1 String, s2 String) engine = Memory;
SELECT 'Check total_bytes/total_rows for StripeLog';
INSERT INTO test_01193_18429.table_1_868 VALUES 
CREATE TABLE test_01193_18429.table_9_695 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_3D65247C4D786E744C38265548665A29245B27507A61436321674C6F715B67732B4A552D24233133(x UInt8) Engine=Memory;
set distributed_product_mode = 'global';
DROP TABLE IF EXISTS table_map_with_key_integer;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), N >= DT as r FORMAT CSV;
SELECT count() FROM t_cnf_fuzz WHERE (c6 AND c9 AND c5) OR (c2 AND (NOT c8) AND c5 AND c2) SETTINGS convert_query_to_cnf = 0
CREATE DATABASE IF NOT EXISTS test_g7eprkd8 
CREATE TABLE test_01193_18429.table_9_276 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_9_279 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT basename('');
select * from xp_d where i global in [0, 1];
DROP DATABASE IF EXISTS test_hsse8l8p 
alter table many_mutations delete where y = 8 * 2 settings mutations_sync = 0;
CREATE TABLE test_2557737845377A577E7828595B725057634B24326D335451675E76663C3A27654B30532F3D56394D(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_1_737 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP TABLE numbers_10_00223;
DROP TABLE fetches_r2 SYNC
CREATE TABLE test_353F24594642713752623D75424A3F49315622564534606B6660266F4E254C2258354A6C70677A6F(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_4_280 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE IF NOT EXISTS sample_correct (`x` String) ENGINE = MergeTree ORDER BY tuple(sipHash64(x)) SAMPLE BY sipHash64(x) SETTINGS index_granularity = 1462, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 81, merge_max_block_size = 21015, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 10519536, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 68186, primary_key_compress_block_size = 15699
CREATE POLICY p5_01295 ON db.table TO r1_01295, u1_01295;
CREATE DATABASE IF NOT EXISTS test_kcne9szs 
CREATE TABLE test_01193_18429.table_4_39 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_10_69 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
insert into function file('02268_data.jsonCompactEachRow', 'TSV') select 1;
CREATE TABLE test_null_as_default (a String DEFAULT 'WORLD') ENGINE = Memory;
CREATE TABLE test_01193_18429.table_5_193 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_3A2E4D717D2A4A6542632344347A27306064334B333658736A52685239422C33363F6C63332C5934(x UInt8) Engine=Memory;
select arraySlice(Null, 1, 2);
CREATE TABLE test_45673A75693652366F25652260226B4A6167632E2050447C6769437B53633461623A5A2667414859(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_3_119 VALUES 
CREATE DATABASE IF NOT EXISTS test_h4726bf3 
SELECT multiIf((number % 2) = 0, [toInt16(1), toInt16(2)], (number % 3) = 0, [toInt64(2), toInt64(3)], [toUInt8(3), toUInt8(3)]) FROM system.numbers LIMIT 10;
select arraySlice(materialize([1, 2, 3, 4, 5, 6, 7, 8]), -2, -2);
WITH 'number: 2' as mm SELECT extract(mm, '\\d+');
DROP TABLE IF EXISTS right_join;
OPTIMIZE TABLE test_table_9 FINAL
alter table data_01900_2 update s = 'bar_14' where 1;
SELECT toYearWeek(d), toYearWeek(dt), toYearWeek(dt64), toYearWeek(str_d), toYearWeek(str_dt), toYearWeek(str_dt64) FROM tab ORDER BY d;
SELECT id, haystack, needle, 'x', replaceOne(haystack, needle, 'x') FROM test_tab ORDER BY id;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), N >= DT64 as r FORMAT CSV;
select '<27: cancelled>', view, status from refreshes;
SELECT decodeURLComponent(queryString('http://127.0.0.1/'));
DROP DATABASE IF EXISTS test_2x8bdiwt 
CREATE TABLE alter_table_2 (`a` UInt8, `b` Int16, `c` Float32, `d` String, `e` Array(UInt8), `f` Nullable(UUID), `g` Tuple(UInt8, UInt16)) ENGINE = ReplicatedMergeTree('/clickhouse/tables/00993_system_parts_race_condition_drop_zookeeper_test_zoczfe66/alter_table', 'r_2') PARTITION BY b % 10 ORDER BY a SETTINGS old_parts_lifetime = 1, cleanup_delay_period = 0, cleanup_delay_period_random_add = 0, cleanup_thread_preferred_points_per_iteration = 0, replicated_max_mutations_in_one_entry = 178, index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 17222, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 5082719006, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75985, primary_key_compress_block_size = 73298
CREATE TABLE test_4F6D3E5E362271372C436E393E326F65597777394F326535323B566B2F317B24696E67715C343976(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00298_enum_width_and_cast.sql from pid=1726' 
select -3 as offset, -14 as length, 'Hello' as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
SELECT count() FROM totimezone_op_mono WHERE toTimeZone(create_time, 'UTC') = '2020-09-01 00:00:00';
DROP TABLE IF EXISTS arr_tests_visits;
INSERT INTO test_01193_18429.table_9_678 VALUES 
SELECT count() - sum(is_readonly) FROM system.replicas WHERE database=currentDatabase() AND table LIKE 'test_table_%'
CREATE DATABASE test_01037;
INSERT INTO test_01193_18429.table_6_343 VALUES 
INSERT INTO r4 SELECT 66 % 10 = 4 ? 66 - 1 : 66
CREATE TABLE test_49203A7C376E59343C5B3E4D743C235E72633073416334314B2A7334273630373620693127644276(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS table_tsv_01375;
SELECT value FROM 02703_keeper_map_concurrent_8 WHERE key = 8
select makeDate32(True, 3, 24);
CREATE TABLE test_01193_18429.table_7_58 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select * from file(02475_data.bsonEachRow, auto, 'lc LowCardinality(Nullable(String))')
INSERT INTO test_01193_18429.table_2_237 VALUES 
SELECT CAST(arrayJoin(['', 'abc', '123', '123a', '-123']) AS Nullable(String));
SELECT subtractHours(NULL, NULL);
drop table if exists sessions;
EXPLAIN SYNTAX SELECT sum(abs(2) + 1), sum(abs(2) + n), sum(n - abs(2)), sum(1 - abs(2)) FROM (SELECT number n FROM numbers(10));
select arrayConcat([1, 2], [-1, -2], [0.3, 0.7], [Null]);
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toInt64(-1) >= N as r FORMAT CSV;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c4)) OR (c9) OR ((NOT c4) AND c0 AND c6) OR (c4 AND c7 AND c1) OR ((NOT c1)) OR (c0) OR ((NOT c6) AND c8 AND (NOT c5) AND (NOT c1)) OR ((NOT c6) AND (NOT c2) AND (NOT c6)) SETTINGS convert_query_to_cnf = 1
CREATE TABLE test_393C7B7B7C556B3B315C21323B277563532F20463A67253168367C2045777E272C38474949254E5A(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_3_990 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'Running test stateless/00500_point_in_polygon_2d_const.sql from pid=1714' 
SELECT DISTINCT bitXor(toFixedString('\x00\x01\x02', 3), materialize(toFixedString('abc', 3))) FROM numbers(10);
CREATE TABLE test_44742D317E58576B77635A557D7E6344786C242B235B70602D70372F61637E647B2D62442E2F6558(x UInt8) Engine=Memory;
SELECT gccMurmurHash('\x01');
CREATE TABLE test_2B6C534A20776E492044655B42515178474C2A2246344F454C436D2A3E74636E384D257248762470(x UInt8) Engine=Memory;
select 'test types'
SET optimize_min_equality_disjunction_chain_length = 1;
drop dictionary if exists db_01721.decimal_dict;
DROP DATABASE IF EXISTS test_p8nw3opc 
CREATE TABLE test_65477D5543492142347168715C3B315A4341205A39227323386B49615F7333575F55365A5F6C243F(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_q4ju3htv 
SELECT addMinutes(materialize('2023-10-22'), 1), addMinutes(materialize('2023-10-22 12:34:56.123'), 1);
SELECT 'Running test stateless/02835_nested_array_lowcardinality.sql from pid=1718' 
INSERT INTO test_01193_18429.table_6_428 VALUES 
SELECT toStartOfNanosecond(NULL, NULL);
SELECT 1 FROM mysql('127.0.0.1:9004', 'system', 'one', 'session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_double_sha1_password_two_profiles_two_roles', '[HIDDEN]') LIMIT 1 FORMAT `Null`
SELECT sin(a) > 2 FROM t_02559 PREWHERE sin(a) < b AND sin(a) < c;
CREATE DATABASE IF NOT EXISTS test_9oymtt5p 
ALTER TABLE src_2 REPLACE PARTITION 7 FROM src_2
SELECT 'Running test stateless/00944_ml_test.sql from pid=1726' 
INSERT INTO test_01193_18429.table_6_0 VALUES 
ALTER TABLE concurrent_alter_column ADD COLUMN c236 DOUBLE;
CREATE TABLE test_2D70236543507E3F5932326460677A32373D6A335F7A5D475F2E44543F4A4A2279436E28267B5230(x UInt8) Engine=Memory;
CREATE TABLE test_5B4F4B3E78444579494F74696D66563D604C4D5973393049703149264D3A3B5275517569722A576C(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_7_706 VALUES 
DROP TABLE IF EXISTS numbers_mt;
CREATE TABLE test_472F7A703B23474B773D597C6226326C44726A385761242D594652623C20262C364E437B38347B70(x UInt8) Engine=Memory;
SELECT CAST(-1 AS DateTime64(0, 'Asia/Istanbul'));
DESCRIBE (SELECT * EXCEPT (id) FROM test_table);
CREATE TABLE test_20313D5029583E435C4D22407D3F79214C4550603553524D7849452C2A5C244A703F307E462A5B56(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_6_794 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_6_452 VALUES 
SELECT h3HexAreaKm2(7);
SELECT 7, 3, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (7 < 13 AND 3 > 0 ? 7 : 0)), throwIf(last != (7 < 13 AND 3 > 0 ? least(13 - 1, 7 + 3 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 7, 3);
SELECT 'ArrayLastIndex non constant predicate';
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (93 < 1 AND 104 > 0 ? 93 : 0)), throwIf(last != (93 < 1 AND 104 > 0 ? least(1 - 1, 93 + 104 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(1) LIMIT 93, 104);
CREATE TABLE numbers3 ENGINE = Log AS SELECT number FROM numbers(1000);
CREATE DATABASE IF NOT EXISTS test_55b6bp6c 
CREATE TABLE test_01193_18429.table_3_94 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
ALTER TABLE table_for_rename RENAME COLUMN value1 TO value4;
INSERT INTO r3 SELECT 5 % 10 = 3 ? 5 - 1 : 5
alter table many_mutations delete where y = 194 * 2 settings mutations_sync = 0;
DROP TABLE IF EXISTS full_join__fuzz_4;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c8) AND (NOT c6)) OR ((NOT c3)) OR (c3 AND c2 AND c0) OR ((NOT c0)) SETTINGS convert_query_to_cnf = 1
select format('{}{}{}', toFixedString('a', 1), toFixedString('b', 1), materialize('c')) == 'abc' from system.numbers limit 5;
SELECT a, min(b), max(b) FROM data_02295 GROUP BY a WITH TOTALS ORDER BY a, count() SETTINGS optimize_aggregation_in_order = 1;
CREATE TABLE test_01193_18429.table_9_291 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT -129, 65536, -129 = 65536, -129 != 65536, -129 < 65536, -129 <= 65536, -129 > 65536, -129 >= 65536, 65536 = -129, 65536 != -129, 65536 < -129, 65536 <= -129, 65536 > -129, 65536 >= -129 , toInt16(-129) = toUInt32(65536), toInt16(-129) != toUInt32(65536), toInt16(-129) < toUInt32(65536), toInt16(-129) <= toUInt32(65536), toInt16(-129) > toUInt32(65536), toInt16(-129) >= toUInt32(65536), toUInt32(65536) = toInt16(-129), toUInt32(65536) != toInt16(-129), toUInt32(65536) < toInt16(-129), toUInt32(65536) <= toInt16(-129), toUInt32(65536) > toInt16(-129), toUInt32(65536) >= toInt16(-129) , toInt16(-129) = toInt32(65536), toInt16(-129) != toInt32(65536), toInt16(-129) < toInt32(65536), toInt16(-129) <= toInt32(65536), toInt16(-129) > toInt32(65536), toInt16(-129) >= toInt32(65536), toInt32(65536) = toInt16(-129), toInt32(65536) != toInt16(-129), toInt32(65536) < toInt16(-129), toInt32(65536) <= toInt16(-129), toInt32(65536) > toInt16(-129), toInt32(65536) >= toInt16(-129) , toInt16(-129) = toUInt64(65536), toInt16(-129) != toUInt64(65536), toInt16(-129) < toUInt64(65536), toInt16(-129) <= toUInt64(65536), toInt16(-129) > toUInt64(65536), toInt16(-129) >= toUInt64(65536), toUInt64(65536) = toInt16(-129), toUInt64(65536) != toInt16(-129), toUInt64(65536) < toInt16(-129), toUInt64(65536) <= toInt16(-129), toUInt64(65536) > toInt16(-129), toUInt64(65536) >= toInt16(-129) , toInt16(-129) = toInt64(65536), toInt16(-129) != toInt64(65536), toInt16(-129) < toInt64(65536), toInt16(-129) <= toInt64(65536), toInt16(-129) > toInt64(65536), toInt16(-129) >= toInt64(65536), toInt64(65536) = toInt16(-129), toInt64(65536) != toInt16(-129), toInt64(65536) < toInt16(-129), toInt64(65536) <= toInt16(-129), toInt64(65536) > toInt16(-129), toInt64(65536) >= toInt16(-129) , toInt32(-129) = toUInt32(65536), toInt32(-129) != toUInt32(65536), toInt32(-129) < toUInt32(65536), toInt32(-129) <= toUInt32(65536), toInt32(-129) > toUInt32(65536), toInt32(-129) >= toUInt32(65536), toUInt32(65536) = toInt32(-129), toUInt32(65536) != toInt32(-129), toUInt32(65536) < toInt32(-129), toUInt32(65536) <= toInt32(-129), toUInt32(65536) > toInt32(-129), toUInt32(65536) >= toInt32(-129) , toInt32(-129) = toInt32(65536), toInt32(-129) != toInt32(65536), toInt32(-129) < toInt32(65536), toInt32(-129) <= toInt32(65536), toInt32(-129) > toInt32(65536), toInt32(-129) >= toInt32(65536), toInt32(65536) = toInt32(-129), toInt32(65536) != toInt32(-129), toInt32(65536) < toInt32(-129), toInt32(65536) <= toInt32(-129), toInt32(65536) > toInt32(-129), toInt32(65536) >= toInt32(-129) , toInt32(-129) = toUInt64(65536), toInt32(-129) != toUInt64(65536), toInt32(-129) < toUInt64(65536), toInt32(-129) <= toUInt64(65536), toInt32(-129) > toUInt64(65536), toInt32(-129) >= toUInt64(65536), toUInt64(65536) = toInt32(-129), toUInt64(65536) != toInt32(-129), toUInt64(65536) < toInt32(-129), toUInt64(65536) <= toInt32(-129), toUInt64(65536) > toInt32(-129), toUInt64(65536) >= toInt32(-129) , toInt32(-129) = toInt64(65536), toInt32(-129) != toInt64(65536), toInt32(-129) < toInt64(65536), toInt32(-129) <= toInt64(65536), toInt32(-129) > toInt64(65536), toInt32(-129) >= toInt64(65536), toInt64(65536) = toInt32(-129), toInt64(65536) != toInt32(-129), toInt64(65536) < toInt32(-129), toInt64(65536) <= toInt32(-129), toInt64(65536) > toInt32(-129), toInt64(65536) >= toInt32(-129) , toInt64(-129) = toUInt32(65536), toInt64(-129) != toUInt32(65536), toInt64(-129) < toUInt32(65536), toInt64(-129) <= toUInt32(65536), toInt64(-129) > toUInt32(65536), toInt64(-129) >= toUInt32(65536), toUInt32(65536) = toInt64(-129), toUInt32(65536) != toInt64(-129), toUInt32(65536) < toInt64(-129), toUInt32(65536) <= toInt64(-129), toUInt32(65536) > toInt64(-129), toUInt32(65536) >= toInt64(-129) , toInt64(-129) = toInt32(65536), toInt64(-129) != toInt32(65536), toInt64(-129) < toInt32(65536), toInt64(-129) <= toInt32(65536), toInt64(-129) > toInt32(65536), toInt64(-129) >= toInt32(65536), toInt32(65536) = toInt64(-129), toInt32(65536) != toInt64(-129), toInt32(65536) < toInt64(-129), toInt32(65536) <= toInt64(-129), toInt32(65536) > toInt64(-129), toInt32(65536) >= toInt64(-129) , toInt64(-129) = toUInt64(65536), toInt64(-129) != toUInt64(65536), toInt64(-129) < toUInt64(65536), toInt64(-129) <= toUInt64(65536), toInt64(-129) > toUInt64(65536), toInt64(-129) >= toUInt64(65536), toUInt64(65536) = toInt64(-129), toUInt64(65536) != toInt64(-129), toUInt64(65536) < toInt64(-129), toUInt64(65536) <= toInt64(-129), toUInt64(65536) > toInt64(-129), toUInt64(65536) >= toInt64(-129) , toInt64(-129) = toInt64(65536), toInt64(-129) != toInt64(65536), toInt64(-129) < toInt64(65536), toInt64(-129) <= toInt64(65536), toInt64(-129) > toInt64(65536), toInt64(-129) >= toInt64(65536), toInt64(65536) = toInt64(-129), toInt64(65536) != toInt64(-129), toInt64(65536) < toInt64(-129), toInt64(65536) <= toInt64(-129), toInt64(65536) > toInt64(-129), toInt64(65536) >= toInt64(-129) 
INSERT INTO test_01193_18429.table_8_653 VALUES 
SELECT format('The answer to all questions is {0}.', 'foo');
SELECT roundBankers(proportionsZTest(16, 16, 16, 18, 0.95, 'unpooled').1, 16) as z_stat, roundBankers(proportionsZTest(16, 16, 16, 18, 0.95, 'unpooled').2, 16) as p_value, roundBankers(proportionsZTest(16, 16, 16, 18, 0.95, 'unpooled').3, 16) as ci_lower, roundBankers(proportionsZTest(16, 16, 16, 18, 0.95, 'unpooled').4, 16) as ci_upper FORMAT TabSeparatedWithNames;
CREATE TABLE data_01917 (`key` Int, `d1` Int, `d1_null` Nullable(Int), INDEX d1_idx d1 TYPE minmax GRANULARITY 1, INDEX d1_null_idx assumeNotNull(d1_null) TYPE minmax GRANULARITY 1) ENGINE = MergeTree ORDER BY key SETTINGS index_granularity = 21660, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 16, merge_max_block_size = 9995, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 71777, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 3615193486, index_granularity_bytes = 3014550, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 96242, primary_key_compress_block_size = 31719
insert into t2 select number, number from numbers(5000, 1000);
CREATE TABLE test_01193_18429.table_9_753 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_gg179ztg 
INSERT INTO test_01193_18429.table_6_798 VALUES 
insert into test (data) select 1;
INSERT INTO test_01193_18429.table_6_108 VALUES 
INSERT INTO test_01193_18429.table_7_178 VALUES 
DROP TABLE IF EXISTS t_read_in_order;
SELECT arrayEnumerateUniqRanked(1, [1,1,2,2,1,1], 1, [1,2,1,2,2,2],1);
SELECT 'DELETE all';
SELECT count() from h ARRAY JOIN [1] AS a PREWHERE WatchID IN (SELECT toUInt64(1)) WHERE (EventDate = '2020-06-10') AND (CounterID = 16671268);
CREATE TABLE 01766_db.complex_key_complex_attributes_source_table ( id UInt64, id_key String, value_first String, value_second Nullable(String) ) ENGINE = TinyLog;
SELECT sum(1 + uint64) AS j from test_table having j > 0;
SELECT 'Table array int sum';
SELECT cityHash64(groupArray(x)) FROM enum_pk WHERE x != '0';
SELECT age('month', toDate32('2015-08-18', 'UTC'), toDate('2015-09-18', 'UTC'), 'UTC');
CREATE TABLE test_01193_18429.table_10_695 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT sin(a) < a FROM t_02559 PREWHERE sin(a) < b AND a <= c AND sin(a) > -a;
select hasAny([1, 2, 3, 4], [1, 3, 5]);
CREATE TABLE test_425D7C344328372C6D2D6A7B706F6A6A2C533D7D3555266B53677D7445352D61676947566A4D575F(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_xi7dhmln 
INSERT INTO dictdb_01376.table_for_dict VALUES 
ALTER TABLE test_table_8 DELETE WHERE key % 2 = 0
SYSTEM START MERGES ttl;
SELECT * FROM test WHERE timestamp > '2020-10-15' ORDER BY timestamp;
CREATE TABLE test_01193_18429.table_4_690 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'R2, R3, R4, R5: ((x == 2) OR (x == 3)) AND (x <= 2) AND (y >= 20)';
create table null_02230_column_ttl engine=Null() as data_02230_column_ttl;
CREATE TABLE test_2A607C573E3A25427767452A2D596B2A202F463D4B6F3D662D417A5D2160443A23307C566029612D(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_1_307 VALUES 
CREATE TABLE test_table_string ( key String, value UInt16 ) ENGINE=Memory() AS SELECT 'foo' || number::String, number FROM numbers(1e5);
SELECT 'Running test stateless/02536_system_sync_file_cache.sql from pid=1715' 
create table X (id Int64) Engine = Memory;
CREATE TABLE test_74725B4D4D576C5D256A2E3F644C4E3B7A2575296B7A774F7737653238285A3D4E2F676972792335(x UInt8) Engine=Memory;
SELECT sum(isNull(t1.x)), count(t1.x) FROM nt AS t1 INNER JOIN nt AS t2 USING(x);
CREATE TABLE test_3878522C7D657A3C2D2B3C6370415A5167445B213E57736F3756686A3B5A3640633866774E63506F(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_6_668 VALUES 
SELECT count() FROM t_cnf_fuzz WHERE (c7) OR ((NOT c2) AND (NOT c8) AND (NOT c6)) OR (c7 AND c8 AND (NOT c9) AND (NOT c7)) SETTINGS convert_query_to_cnf = 1
DROP DATABASE IF EXISTS test_qzty3182 
SELECT data, toTypeName(data) FROM t_json_8
SELECT 'Running test stateless/02563_progress_when_no_rows_from_prewhere.sh from pid=1713' 
SELECT COUNT() FROM bloom_filter_array_types_test WHERE has(i8, 5);
DROP DATABASE IF EXISTS test_xiw4dzxg 
CREATE TABLE test_47514F3A5A5B6F7B6F335E2A602F235E7C3A305274486B2B567C6F4763523833507A46702C494F5C(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt16(1) WHEN (number % 3) = 0 THEN toInt64(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
CREATE TABLE table_with_gap (`v` UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS old_parts_lifetime = 10000, index_granularity = 58168, min_bytes_for_wide_part = 300112141, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 9658, prefer_fetch_merged_part_size_threshold = 7310398658, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 3637559, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 92763, primary_key_compress_block_size = 76533
SELECT dictGetFloat64(concat('test_6ztqwvhd', '.dict1'), 'Tax', toUInt64(2), toDate('2019-05-29'))
INSERT INTO test_01193_18429.table_2_44 VALUES 
DROP DATABASE IF EXISTS test_yeg40hk8 
SELECT CASE WHEN (number % 2) = 0 THEN toFloat64(1) WHEN (number % 3) = 0 THEN toInt8(2) ELSE toUInt32(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_3_341 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT (materialize('1'),2) AS t, t.1, t.2;
SELECT quantilesTDigestArray(0.01, 0.1, 0.25, 0.5, 0.75, 0.9, 0.99)(arrayResize(arrayResize([inf], 500000, -inf), 1000000, 0));
SELECT age('minute', toDate32('2015-08-18', 'UTC'), toDate('2015-08-19', 'UTC'), 'UTC');
CREATE TABLE test_2B49616E4576464273462F4D4B5F6F573D5B5B65227C2E6E626A44376D503C3A7776204858652C20(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01327_decimal_cut_extra_digits_after_point.sql from pid=1714' 
SELECT toDecimal64OrZero('100000000000000000000000000000000000000', 0);
CREATE TABLE test_01193_18429.table_3_652 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_02908_r3_194 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_194', 'r3') ORDER BY tuple()
CREATE TABLE test_68323D793E49787740246046254B2C4C606A525F5D3C29462B2A6A3A29446557597938336D575351(x UInt8) Engine=Memory;
SELECT corrStable(x_value, y_value) FROM (SELECT x_value, y_value FROM series LIMIT 1);
INSERT INTO test_01193_18429.table_8_640 VALUES 
CREATE TABLE test_4E7D5C494862424D664A603376493137756D3B4D287B2D6B2959703750692169202A265A6B747A25(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_3_67 VALUES 
DROP TABLE IF EXISTS view2_00270;
DROP TABLE polygon_dictionary_array_source_table;
SELECT murmurHash2_32([]);
SELECT 'Running test stateless/01404_roundUpToPowerOfTwoOrZero_safety.sql from pid=1724' 
select abs(0) = 0;
SELECT val FROM t1 ALL RIGHT JOIN tj ON t1.id1 == tj.key1 AND t1.id2 == tj.key2 ORDER BY key1 FORMAT TSVWithNames;
CREATE TABLE test_01193_18429.table_2_561 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test (`undefined` String, `undef` String, `null` String, `NULL` String, `(null)` String, `nil` String, `NIL` String, `true` String, `false` String, `True` String, `False` String, `TRUE` String, `FALSE` String, `None` String, `hasOwnProperty` String, `then` String, `\\` String, `\\\\` String, `0` String, `1` String, `1.00` String, `$1.00` String, `1/2` String, `1E2` String, `1E02` String, `1E+02` String, `-1` String, `-1.00` String, `-$1.00` String, `-1/2` String, `-1E2` String, `-1E02` String, `-1E+02` String, `1/0` String, `0/0` String, `-2147483648/-1` String, `-9223372036854775808/-1` String, `-0` String, `-0.0` String, `+0` String, `+0.0` String, `0.00` String, `0..0` String, `.` String, `0.0.0` String, `0,00` String, `0,,0` String, `,` String, `0,0,0` String, `0.0/0` String, `1.0/0.0` String, `0.0/0.0` String, `1,0/0,0` String, `0,0/0,0` String, `--1` String, `-` String, `-.` String, `-,` String, `999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999` String, `NaN` String, `Infinity` String, `-Infinity` String, `INF` String, `1#INF` String, `-1#IND` String, `1#QNAN` String, `1#SNAN` String, `1#IND` String, `0x0` String, `0xffffffff` String, `0xffffffffffffffff` String, `0xabad1dea` String, `123456789012345678901234567890123456789` String, `1,000.00` String, `1 000.00` String, `1'000.00` String, `1,000,000.00` String, `1 000 000.00` String, `1'000'000.00` String, `1.000,00` String, `1 000,00` String, `1'000,00` String, `1.000.000,00` String, `1 000 000,00` String, `1'000'000,00` String, `01000` String, `08` String, `09` String, `2.2250738585072011e-308` String, `,./;'[]\\-=` String, `<>?:"{}|_+` String, `!@#$%^&*()\`~` String, `\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\b\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f` String, `ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ` String, `\t\\u000b\f ÃÂ ÃÂ Ã¡ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂ Ã¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂ¨Ã¢ÂÂ©Ã¢ÂÂ¯Ã¢ÂÂÃ£ÂÂ` String, `ÃÂ­ÃÂÃÂÃÂÃÂÃÂÃÂ ÃÂÃÂÃÂÃ¡Â ÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂªÃ¢ÂÂ«Ã¢ÂÂ¬Ã¢ÂÂ­Ã¢ÂÂ®Ã¢ÂÂ Ã¢ÂÂ¡Ã¢ÂÂ¢Ã¢ÂÂ£Ã¢ÂÂ¤Ã¢ÂÂ¦Ã¢ÂÂ§Ã¢ÂÂ¨Ã¢ÂÂ©Ã¢ÂÂªÃ¢ÂÂ«Ã¢ÂÂ¬Ã¢ÂÂ­Ã¢ÂÂ®Ã¢ÂÂ¯Ã¯Â»Â¿Ã¯Â¿Â¹Ã¯Â¿ÂºÃ¯Â¿Â»Ã°ÂÂÂ½Ã°ÂÂ²Â Ã°ÂÂ²Â¡Ã°ÂÂ²Â¢Ã°ÂÂ²Â£Ã°ÂÂ Â³Ã°ÂÂ Â´Ã°ÂÂ ÂµÃ°ÂÂ Â¶Ã°ÂÂ Â·Ã°ÂÂ Â¸Ã°ÂÂ Â¹Ã°ÂÂ ÂºÃ³Â ÂÂÃ³Â ÂÂ Ã³Â ÂÂ¡Ã³Â ÂÂ¢Ã³Â ÂÂ£Ã³Â ÂÂ¤Ã³Â ÂÂ¥Ã³Â ÂÂ¦Ã³Â ÂÂ§Ã³Â ÂÂ¨Ã³Â ÂÂ©Ã³Â ÂÂªÃ³Â ÂÂ«Ã³Â ÂÂ¬Ã³Â ÂÂ­Ã³Â ÂÂ®Ã³Â ÂÂ¯Ã³Â ÂÂ°Ã³Â ÂÂ±Ã³Â ÂÂ²Ã³Â ÂÂ³Ã³Â ÂÂ´Ã³Â ÂÂµÃ³Â ÂÂ¶Ã³Â ÂÂ·Ã³Â ÂÂ¸Ã³Â ÂÂ¹Ã³Â ÂÂºÃ³Â ÂÂ»Ã³Â ÂÂ¼Ã³Â ÂÂ½Ã³Â ÂÂ¾Ã³Â ÂÂ¿Ã³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂ Ã³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂ Ã³Â ÂÂ¡Ã³Â ÂÂ¢Ã³Â ÂÂ£Ã³Â ÂÂ¤Ã³Â ÂÂ¥Ã³Â ÂÂ¦Ã³Â ÂÂ§Ã³Â ÂÂ¨Ã³Â ÂÂ©Ã³Â ÂÂªÃ³Â ÂÂ«Ã³Â ÂÂ¬Ã³Â ÂÂ­Ã³Â ÂÂ®Ã³Â ÂÂ¯Ã³Â ÂÂ°Ã³Â ÂÂ±Ã³Â ÂÂ²Ã³Â ÂÂ³Ã³Â ÂÂ´Ã³Â ÂÂµÃ³Â ÂÂ¶Ã³Â ÂÂ·Ã³Â ÂÂ¸Ã³Â ÂÂ¹Ã³Â ÂÂºÃ³Â ÂÂ»Ã³Â ÂÂ¼Ã³Â ÂÂ½Ã³Â ÂÂ¾Ã³Â ÂÂ¿` String, `Ã¯Â»Â¿` String, `Ã¯Â¿Â¾` String, `ÃÂ©Ã¢ÂÂÃÂ§Ã¢ÂÂÃ¢ÂÂ«ÃÂÃÂµÃ¢ÂÂ¤Ã¢ÂÂ¥ÃÂ·` String, `ÃÂ¥ÃÂÃ¢ÂÂÃÂÃÂ©ÃÂÃ¢ÂÂÃÂÃÂ¬Ã¢ÂÂ¦ÃÂ¦` String, `Ã ÂÃ¢ÂÂÃÂ´ÃÂ®Ã¢ÂÂ ÃÂ¥ÃÂ¨ÃÂÃÂ¸ÃÂÃ¢ÂÂÃ¢ÂÂ` String, `ÃÂ¡Ã¢ÂÂ¢ÃÂ£ÃÂ¢Ã¢ÂÂÃÂ§ÃÂ¶Ã¢ÂÂ¢ÃÂªÃÂºÃ¢ÂÂÃ¢ÂÂ ` String, `ÃÂ¸ÃÂÃÂÃ¢ÂÂÃÂ±ÃÂÃÂÃÂ¯ÃÂÃÂ¿` String, `ÃÂ ÃÂÃÂÃÂÃÂÃÂÃÂÃ¯Â£Â¿ÃÂÃÂÃÂÃ¢ÂÂ` String, `Ã ÂÃ¢ÂÂÃÂ´Ã¢ÂÂ°ÃÂÃÂÃÂ¨ÃÂÃÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂ` String, `\`Ã¢ÂÂÃ¢ÂÂ¬Ã¢ÂÂ¹Ã¢ÂÂºÃ¯Â¬ÂÃ¯Â¬ÂÃ¢ÂÂ¡ÃÂ°ÃÂ·Ã¢ÂÂÃ¢ÂÂÃÂ±` String, `Ã¢Â ÂÃ¢Â ÂÃ¢Â ÂÃ¢Â Â` String, `ÃÂÃÂÃÂÃÂÃÂ ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ ÃÂ¡ÃÂ¢ÃÂ£ÃÂ¤ÃÂ¥ÃÂ¦ÃÂ§ÃÂ¨ÃÂ©ÃÂªÃÂ«ÃÂ¬ÃÂ­ÃÂ®ÃÂ¯ÃÂ°ÃÂ±ÃÂ²ÃÂ³ÃÂ´ÃÂµÃÂ¶ÃÂ·ÃÂ¸ÃÂ¹ÃÂºÃÂ»ÃÂ¼ÃÂ½ÃÂ¾ÃÂ¿ÃÂÃÂÃÂÃÂÃÂÃÂ ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ` String, `ÃÂ ÃÂ¡ÃÂ¢ÃÂ£ÃÂ¤ÃÂ¥ÃÂ¦ÃÂ§ÃÂ¨ÃÂ©` String, `Ã¢ÂÂ°Ã¢ÂÂ´Ã¢ÂÂµ` String, `Ã¢ÂÂÃ¢ÂÂÃ¢ÂÂ` String, `Ã¢ÂÂ°Ã¢ÂÂ´Ã¢ÂÂµÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂ` String, `Ã Â¸ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹Â Ã Â¸ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹Â Ã Â¸ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹Â` String, `'` String, `"` String, `''` String, `""` String, `'"'` String, `"''''"'"` String, `"'"'"''''"` String, `<foo val=Ã¢ÂÂbarÃ¢ÂÂ />` String, `<foo val=Ã¢ÂÂbarÃ¢ÂÂ />` String, `<foo val=\`bar' />` String, `Ã§ÂÂ°Ã¤Â¸Â­Ã£ÂÂÃ£ÂÂÃ£ÂÂ«Ã£ÂÂÃ£ÂÂÃ£ÂÂ¦Ã¤Â¸ÂÃ£ÂÂÃ£ÂÂ` String, `Ã£ÂÂÃ£ÂÂ¼Ã£ÂÂÃ£ÂÂ£Ã£ÂÂ¼Ã£ÂÂ¸Ã¨Â¡ÂÃ£ÂÂÃ£ÂÂªÃ£ÂÂÃ£ÂÂ` String, `Ã¥ÂÂÃ¨Â£Â½Ã¦Â¼Â¢Ã¨ÂªÂ` String, `Ã©ÂÂ¨Ã¨ÂÂ½Ã¦Â Â¼` String, `Ã¬ÂÂ¬Ã­ÂÂÃªÂ³Â¼Ã­ÂÂÃ¬ÂÂ Ã¬ÂÂ´Ã­ÂÂÃ¬ÂÂ°ÃªÂµÂ¬Ã¬ÂÂ` String, `Ã¬Â°Â¦Ã¬Â°Â¨Ã«Â¥Â¼ Ã­ÂÂÃªÂ³Â Ã¬ÂÂ¨ Ã­ÂÂ²Ã¬ÂÂÃ«Â§Â¨ÃªÂ³Â¼ Ã¬ÂÂÃ«ÂÂ¤Ã«Â¦Â¬ Ã«ÂÂ Ã«Â°Â©ÃªÂ°ÂÃ­ÂÂ` String, `Ã§Â¤Â¾Ã¦ÂÂÃ§Â§ÂÃ¥Â­Â¸Ã©ÂÂ¢Ã¨ÂªÂÃ¥Â­Â¸Ã§Â ÂÃ§Â©Â¶Ã¦ÂÂ` String, `Ã¬ÂÂ¸Ã«ÂÂÃ«Â°ÂÃ­ÂÂ Ã«Â¥Â´` String, `Ã°Â ÂÂÃ°Â ÂÂ±Ã°Â ÂÂ¹Ã°Â Â±ÂÃ°Â Â±Â¸Ã°Â Â²ÂÃ°Â Â³Â` String, `Ã°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ¡Ã°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ¡Ã°ÂÂÂÃ°ÂÂÂ/Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ¤Ã°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ¡Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ¤Ã°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂ±Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ¡Ã°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂ¤Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ¡Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ` String, `Ã¨Â¡Â¨Ã£ÂÂÃ£ÂÂAÃ©Â·ÂÃ ÂÃÂ©Ã¯Â¼Â¢Ã©ÂÂÃÂÃÂÃÂªÃÂ ÃÂ±Ã¤Â¸ÂÃ£ÂÂÃ°Â ÂÂ` String, `ÃÂº` String, `ÃÂ¾` String, `Ã£ÂÂ½Ã Â¼Â¼Ã ÂºÂÃÂÃÂÃ ÂºÂÃ Â¼Â½Ã¯Â¾Â Ã£ÂÂ½Ã Â¼Â¼Ã ÂºÂÃÂÃÂÃ ÂºÂÃ Â¼Â½Ã¯Â¾Â` String, `(Ã¯Â½Â¡Ã¢ÂÂ Ã¢ÂÂ Ã¢ÂÂÃ¯Â½Â¡)` String, `Ã¯Â½ÂÃ¯Â½Â¨(ÃÂ´Ã¢ÂÂÃ¯Â½ÂÃ¢ÂÂ©` String, `__Ã¯Â¾Â(,_,*)` String, `Ã£ÂÂ»(Ã¯Â¿Â£Ã¢ÂÂÃ¯Â¿Â£)Ã£ÂÂ»:*:` String, `Ã¯Â¾ÂÃ¯Â½Â¥Ã¢ÂÂ¿Ã£ÂÂ¾Ã¢ÂÂ²(Ã¯Â½Â¡Ã¢ÂÂÃ¢ÂÂ¿Ã¢ÂÂÃ¯Â½Â¡)Ã¢ÂÂ±Ã¢ÂÂ¿Ã¯Â½Â¥Ã¯Â¾Â` String, `,Ã£ÂÂÃ£ÂÂ»:*:Ã£ÂÂ»Ã£ÂÂÃ¢ÂÂ( Ã¢ÂÂ» ÃÂ Ã¢ÂÂ» )Ã£ÂÂÃ£ÂÂ»:*:Ã£ÂÂ»Ã£ÂÂÃ¢ÂÂ` String, `(Ã¢ÂÂ¯ÃÂ°Ã¢ÂÂ¡ÃÂ°Ã¯Â¼ÂÃ¢ÂÂ¯Ã¯Â¸Âµ Ã¢ÂÂ»Ã¢ÂÂÃ¢ÂÂ»)` String, `(Ã¯Â¾ÂÃ Â²Â¥Ã§ÂÂÃ Â²Â¥Ã¯Â¼ÂÃ¯Â¾ÂÃ¯Â»Â¿ Ã¢ÂÂ»Ã¢ÂÂÃ¢ÂÂ»` String, `Ã¢ÂÂ¬Ã¢ÂÂÃ¢ÂÂ¬Ã£ÂÂ( ÃÂº _ ÃÂºÃ£ÂÂ)` String, `( ÃÂ¡ÃÂ° ÃÂÃÂ ÃÂ¡ÃÂ°)` String, `ÃÂ¯\\_(Ã£ÂÂ)_/ÃÂ¯` String, `Ã°ÂÂÂ` String, `Ã°ÂÂÂ©Ã°ÂÂÂ½` String, `Ã°ÂÂÂ¨Ã¢ÂÂÃ°ÂÂ¦Â° Ã°ÂÂÂ¨Ã°ÂÂÂ¿Ã¢ÂÂÃ°ÂÂ¦Â° Ã°ÂÂÂ¨Ã¢ÂÂÃ°ÂÂ¦Â± Ã°ÂÂÂ¨Ã°ÂÂÂ¿Ã¢ÂÂÃ°ÂÂ¦Â± Ã°ÂÂ¦Â¹Ã°ÂÂÂ¿Ã¢ÂÂÃ¢ÂÂÃ¯Â¸Â` String, `Ã°ÂÂÂ¾ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ` String, `Ã°ÂÂÂµ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ` String, `Ã¢ÂÂ¤Ã¯Â¸Â Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ` String, `Ã¢ÂÂÃ°ÂÂÂ¿ Ã°ÂÂÂªÃ°ÂÂÂ¿ Ã°ÂÂÂÃ°ÂÂÂ¿ Ã°ÂÂÂÃ°ÂÂÂ¿ Ã°ÂÂÂÃ°ÂÂÂ¿ Ã°ÂÂÂÃ°ÂÂÂ¿` String, `Ã°ÂÂÂ¨Ã¢ÂÂÃ°ÂÂÂ©Ã¢ÂÂÃ°ÂÂÂ¦ Ã°ÂÂÂ¨Ã¢ÂÂÃ°ÂÂÂ©Ã¢ÂÂÃ°ÂÂÂ§Ã¢ÂÂÃ°ÂÂÂ¦ Ã°ÂÂÂ¨Ã¢ÂÂÃ°ÂÂÂ¨Ã¢ÂÂÃ°ÂÂÂ¦ Ã°ÂÂÂ©Ã¢ÂÂÃ°ÂÂÂ©Ã¢ÂÂÃ°ÂÂÂ§ Ã°ÂÂÂ¨Ã¢ÂÂÃ°ÂÂÂ¦ Ã°ÂÂÂ¨Ã¢ÂÂÃ°ÂÂÂ§Ã¢ÂÂÃ°ÂÂÂ¦ Ã°ÂÂÂ©Ã¢ÂÂÃ°ÂÂÂ¦ Ã°ÂÂÂ©Ã¢ÂÂÃ°ÂÂÂ§Ã¢ÂÂÃ°ÂÂÂ¦` String, `Ã°ÂÂÂ¾ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ§` String, `0Ã¯Â¸ÂÃ¢ÂÂ£ 1Ã¯Â¸ÂÃ¢ÂÂ£ 2Ã¯Â¸ÂÃ¢ÂÂ£ 3Ã¯Â¸ÂÃ¢ÂÂ£ 4Ã¯Â¸ÂÃ¢ÂÂ£ 5Ã¯Â¸ÂÃ¢ÂÂ£ 6Ã¯Â¸ÂÃ¢ÂÂ£ 7Ã¯Â¸ÂÃ¢ÂÂ£ 8Ã¯Â¸ÂÃ¢ÂÂ£ 9Ã¯Â¸ÂÃ¢ÂÂ£ Ã°ÂÂÂ` String, `Ã°ÂÂÂºÃ°ÂÂÂ¸Ã°ÂÂÂ·Ã°ÂÂÂºÃ°ÂÂÂ¸ Ã°ÂÂÂ¦Ã°ÂÂÂ«Ã°ÂÂÂ¦Ã°ÂÂÂ²Ã°ÂÂÂ¸` String, `Ã°ÂÂÂºÃ°ÂÂÂ¸Ã°ÂÂÂ·Ã°ÂÂÂºÃ°ÂÂÂ¸Ã°ÂÂÂ¦Ã°ÂÂÂ«Ã°ÂÂÂ¦Ã°ÂÂÂ²` String, `Ã°ÂÂÂºÃ°ÂÂÂ¸Ã°ÂÂÂ·Ã°ÂÂÂºÃ°ÂÂÂ¸Ã°ÂÂÂ¦` String, `Ã¯Â¼ÂÃ¯Â¼ÂÃ¯Â¼Â` String, `ÃÂ¡ÃÂ¢ÃÂ£` String, `ÃÂ«ÃÂ ÃÂÃÂÃÂ³ ÃÂ³ÃÂÃÂ·ÃÂª ÃÂÃÂ¨ÃÂ§ÃÂÃÂªÃÂ­ÃÂ¯ÃÂÃÂ¯ÃÂ, ÃÂ¬ÃÂ²ÃÂÃÂ±ÃÂªÃÂ ÃÂ¨ÃÂ§ÃÂ³ÃÂªÃÂ®ÃÂ¯ÃÂ§ÃÂ ÃÂ£ÃÂ ÃÂ¯ÃÂÃÂ. ÃÂ¥ÃÂ° ÃÂÃÂÃÂ§ÃÂ ÃÂ§ÃÂÃÂ³ÃÂªÃÂ§ÃÂ± ÃÂÃÂªÃÂÃÂµÃÂÃÂ¨ ÃÂÃÂ§ÃÂ. ÃÂ£ÃÂÃÂÃÂ ÃÂ§ÃÂÃÂ·ÃÂ§ÃÂÃÂÃÂ§ÃÂ ÃÂ¨ÃÂ±ÃÂÃÂ·ÃÂ§ÃÂÃÂÃÂ§-ÃÂÃÂ±ÃÂÃÂ³ÃÂ§ ÃÂÃÂ¯ ÃÂ£ÃÂ®ÃÂ°. ÃÂ³ÃÂÃÂÃÂ ÃÂ§ÃÂÃÂ ÃÂ¥ÃÂªÃÂÃÂ§ÃÂÃÂÃÂ© ÃÂ¨ÃÂÃÂ ÃÂ ÃÂ§ , ÃÂÃÂ°ÃÂÃÂ± ÃÂ§ÃÂÃÂ­ÃÂ¯ÃÂÃÂ¯ ÃÂ£ÃÂ ÃÂ¨ÃÂ¹ÃÂ¯, ÃÂ ÃÂ¹ÃÂ§ÃÂ ÃÂÃÂ© ÃÂ¨ÃÂÃÂÃÂÃÂ¯ÃÂ§ÃÂ ÃÂ§ÃÂÃÂ¥ÃÂ·ÃÂÃÂ§ÃÂ ÃÂ¹ÃÂ ÃÂ¥ÃÂÃÂ.` String, `ÃÂÃÂ°ÃÂ¼ÃÂ¨ÃÂµÃÂÃÂ©ÃÂ´ÃÂÃÂÃÂª, ÃÂÃÂ¸ÃÂ¼ÃÂ¨ÃÂ¸ÃÂ ÃÂÃÂ±ÃÂÃÂ¹ÃÂÃÂ´ÃÂÃÂ, ÃÂÃÂµÃÂª ÃÂÃÂ·ÃÂ©ÃÂ¸ÃÂ¼ÃÂÃÂÃÂ·ÃÂÃÂ´ÃÂ, ÃÂÃÂ°ÃÂÃÂµÃÂª ÃÂÃÂ¸ÃÂÃÂ¸ÃÂ¨ÃÂ¶ÃÂ¥` String, `ÃÂÃÂ¸ÃÂÃÂ°ÃÂªÃÂ¸ÃÂtestÃÂ§ÃÂÃÂµÃÂÃÂ­ÃÂ§ÃÂª ÃÂ§ÃÂÃÂªÃÂÃÂ­ÃÂÃÂ` String, `Ã¯Â·Â½` String, `Ã¯Â·Âº` String, `ÃÂ ÃÂÃÂÃÂÃÂ§ÃÂÃÂÃÂ´ÃÂÃÂ©ÃÂ ÃÂ³ÃÂÃÂ¨ÃÂÃÂÃÂ ÃÂ§ÃÂÃÂ³ÃÂÃÂªÃÂÃÂ®ÃÂÃÂ¯ÃÂÃÂ§ÃÂ ÃÂ ÃÂ§ÃÂÃÂÃÂÃÂÃÂºÃÂÃÂ©ÃÂ ÃÂÃÂÃÂ ÃÂ§ÃÂÃÂÃÂÃÂÃÂ¸ÃÂÃÂ ÃÂ ÃÂ§ÃÂÃÂÃÂÃÂÃÂ§ÃÂ¦ÃÂÃÂ ÃÂÃÂ©ÃÂ ÃÂÃÂÃÂÃÂÃÂÃÂ ÃÂÃÂÃÂ®ÃÂÃÂµÃÂÃÂ ÃÂ§ÃÂÃÂªÃÂÃÂÃÂ·ÃÂÃÂ¨ÃÂÃÂÃÂÃÂÃÂ§ÃÂªÃÂ ÃÂ§ÃÂÃÂÃÂ­ÃÂ§ÃÂ³ÃÂÃÂÃÂ¨ÃÂÃÂÃÂÃÂÃÂ©ÃÂÃÂ ` String, `Ã¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂ Ã¡ÂÂÃ¢ÂÂªÃ¢ÂÂªÃ¢ÂÂª` String, `Ã¢ÂÂªÃ¢ÂÂªÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¢ÂÂª` String, `Ã¢ÂÂªÃ¢ÂÂªtestÃ¢ÂÂª` String, `Ã¢ÂÂ«testÃ¢ÂÂ«` String, `Ã¢ÂÂ©testÃ¢ÂÂ©` String, `testÃ¢ÂÂ testÃ¢ÂÂ«` String, `Ã¢ÂÂ¦testÃ¢ÂÂ§` String, `Ã¡Â¹Â°ÃÂºÃÂºÃÂoÃÂ ÃÂ·iÃÂ²ÃÂ¬ÃÂÃÂªÃÂnÃÂÃÂÃÂvÃÂÃÂÃÂÃÂ¦ÃÂoÃÂ¶ÃÂÃÂ°ÃÂ kÃÂ¨ÃÂÃÂ®ÃÂºÃÂªÃÂ¹ÃÂ±ÃÂ¤ ÃÂtÃÂÃÂÃÂ³ÃÂ£ÃÂ»ÃÂªÃÂhÃÂ¼ÃÂÃÂ²ÃÂ¦ÃÂ³ÃÂÃÂ²eÃÂÃÂ£ÃÂ°ÃÂ¦ÃÂ¬ÃÂ ÃÂ¢ÃÂ¼ÃÂ»ÃÂ±ÃÂhÃÂÃÂÃÂÃÂÃÂ£ÃÂ²ÃÂ iÃÂ¦ÃÂ²ÃÂ£ÃÂ°ÃÂ¤vÃÂ»ÃÂeÃÂºÃÂ­ÃÂ³ÃÂªÃÂ°-mÃÂ¢iÃÂ nÃÂÃÂºÃÂÃÂ²ÃÂ¯ÃÂ°dÃÂµÃÂ¼ÃÂÃÂÃÂ©ÃÂ¼ÃÂÃÂ³ ÃÂÃÂ¥ÃÂ±ÃÂ³ÃÂ­rÃÂÃÂÃÂeÃÂpÃÂ rÃÂ¼ÃÂÃÂ»ÃÂ­ÃÂeÃÂºÃÂ ÃÂ£ÃÂsÃÂÃÂÃÂ³ÃÂÃÂÃÂeÃÂÃÂ¥ÃÂ¯ÃÂÃÂ²ÃÂÃÂ¬ÃÂÃÂ¹ÃÂ¬ÃÂÃÂÃÂÃÂÃÂÃÂ¤tÃÂÃÂ¬ÃÂ¤ÃÂÃÂ¼ÃÂ­ÃÂÃÂ iÃÂªÃÂ±nÃÂ gÃÂ´ÃÂ ÃÂÃÂÃÂ cÃÂ¬ÃÂhÃÂ¡aÃÂ«ÃÂ»ÃÂ¯ÃÂoÃÂ«ÃÂÃÂÃÂÃÂÃÂÃÂsÃÂÃÂ¦ÃÂ².ÃÂ¨ÃÂ¹ÃÂÃÂ£` String, `ÃÂ¡ÃÂÃÂÃÂ IÃÂÃÂÃÂ¦ÃÂnÃÂÃÂÃÂvÃÂ®ÃÂ«okÃÂ²ÃÂ«ÃÂÃÂiÃÂÃÂÃÂ­ÃÂ¹ÃÂ ÃÂnÃÂ¡ÃÂ»ÃÂ®ÃÂ£ÃÂºgÃÂ²ÃÂÃÂÃÂ­ÃÂÃÂ¬ÃÂ ÃÂ°tÃÂÃÂ¦hÃÂÃÂ²eÃÂ¢ÃÂ¤ ÃÂÃÂ¬ÃÂ²ÃÂfÃÂ´ÃÂÃÂÃÂ£ÃÂ¨ÃÂÃ¡ÂºÂ¹ÃÂ¥ÃÂ©lÃÂÃÂÃÂiÃÂÃÂÃÂ¦ÃÂ nÃÂÃÂÃÂÃÂÃÂ³ÃÂ®gÃÂ ÃÂ¨oÃÂÃÂªÃÂ¡fÃÂÃÂ£ÃÂ¬ ÃÂÃÂÃÂÃÂÃÂÃÂ®cÃÂÃÂÃÂ«ÃÂÃÂÃÂÃÂÃÂ hÃÂµÃÂ¤ÃÂ£ÃÂÃÂÃÂ¡ÃÂÃÂ¼ÃÂÃÂ oÃÂ¼ÃÂ£ÃÂ¥sÃÂ±ÃÂÃÂºÃÂÃÂ¦ÃÂ»ÃÂ¢.ÃÂÃÂÃÂÃÂ ÃÂ«ÃÂ°` String, `ÃÂÃÂºÃÂÃÂ¹ÃÂ¯ÃÂÃ¡Â¹Â®ÃÂ¤ÃÂÃÂ¥ÃÂÃÂhÃÂ²ÃÂeÃÂÃÂÃÂ¼ÃÂÃÂÃÂ¼ÃÂ£ÃÂ ÃÂÃÂÃÂ±ÃÂ ÃÂÃÂÃÂ NÃÂÃÂ eÃÂÃÂ±zÃÂÃÂÃÂÃÂºÃÂpÃÂ¤ÃÂºÃÂ¹ÃÂÃÂ¯ÃÂeÃÂ ÃÂ»ÃÂ ÃÂrÃÂ¨ÃÂ¤ÃÂÃÂºÃÂÃÂÃÂÃÂdÃÂ ÃÂÃÂ­ÃÂ¬ÃÂÃÂiÃÂ¦ÃÂÃÂ©ÃÂÃÂÃÂ¤aÃÂ ÃÂÃÂ¬ÃÂÃÂnÃÂÃÂ ÃÂ»ÃÂÃÂ°ÃÂÃÂ hÃÂµÃÂiÃÂ³ÃÂvÃÂ¢ÃÂÃ¡Â¸ÂÃÂÃÂ-ÃÂÃÂ­ÃÂ©ÃÂ¼ÃÂmÃÂ¤ÃÂ­ÃÂ«iÃÂÃÂÃÂÃÂ¦nÃÂÃÂÃ¡Â¸ÂÃÂ ÃÂ¯ÃÂ²ÃÂÃÂÃÂ«ÃÂÃÂ¯ÃÂ°ÃÂ²ÃÂÃÂ»ÃÂf ÃÂªÃÂ°ÃÂ°ÃÂÃÂÃÂ­ÃÂÃÂcÃÂ¦ÃÂÃÂ²ÃÂÃÂÃÂ©ÃÂÃ¡Â¸Â¥ÃÂaÃÂ®ÃÂÃÂÃÂÃÂÃÂ¡ÃÂ©ÃÂ¹ÃÂsÃÂ¤.ÃÂÃÂ ÃÂZÃÂ¡ÃÂÃÂÃÂÃÂ°ÃÂ£ÃÂÃÂaÃÂÃÂ°ÃÂÃÂ¬ÃÂ¡lÃÂ²ÃÂ«ÃÂ³ÃÂÃÂ©gÃÂ¡ÃÂÃÂ¼ÃÂ±ÃÂÃÂÃÂ¬ÃÂ oÃÂÃÂ.ÃÂ` String, `ÃÂ¦HÃÂ¬ÃÂ¤ÃÂÃÂ¤ÃÂeÃÂ ÃÂÃÂ¥ÃÂÃÂ»ÃÂÃÂÃÂwÃÂhÃÂÃÂ¯ÃÂoÃÂÃÂÃÂÃÂÃÂ±ÃÂ® ÃÂÃÂºÃÂÃÂÃÂÃÂWÃÂ·ÃÂ¼ÃÂ­aÃÂºÃÂªÃÂÃÂ¯ÃÂÃÂÃÂ­ÃÂÃÂ¯ÃÂtÃÂ¶ÃÂ¼ÃÂ®sÃÂÃÂÃÂÃÂ ÃÂ ÃÂ«ÃÂ BÃÂ»ÃÂÃÂÃÂÃÂ³ÃÂ eÃÂµhÃÂµÃÂ¬ÃÂÃÂ«ÃÂiÃÂ¹ÃÂÃÂ³ÃÂ³ÃÂ®ÃÂÃÂ«ÃÂnÃÂdÃÂ´ÃÂªÃÂÃÂ ÃÂ°ÃÂÃÂ©ÃÂÃÂÃÂ²ÃÂÃÂ TÃÂÃÂ¼ÃÂÃÂªÃÂ¢hÃÂÃÂÃÂ®ÃÂ»eÃÂ¬ÃÂÃÂÃÂ ÃÂ¤ÃÂ¹ÃÂWÃÂÃÂÃÂÃÂÃÂÃÂÃÂ aÃÂÃÂÃÂÃÂ¹ÃÂ¼ÃÂ£lÃÂ´ÃÂÃÂ°ÃÂ¤ÃÂÃÂÃ¡Â¸Â½ÃÂ«.ÃÂ` String, `ZÃÂ®ÃÂÃÂ ÃÂÃÂÃÂ Ã¡Â¸ÂÃÂÃÂÃÂÃÂ»ÃÂÃ¡Â¸Â¶ÃÂÃÂÃÂ¯ÃÂ¹ÃÂÃÂGÃÂ»OÃÂ­ÃÂÃÂ®` String, `ÃÂÃÂnbÃ¡Â´ÂlÃÂ ÃÂuÃÂÃÂÃÂ¯ ÃÂÃÂ¹olop ÃÂÃÂ ÃÂÃÂ¹oqÃÂl ÃÂn ÃÂunpÃ¡Â´ÂpÃ¡Â´ÂÃÂuÃ¡Â´Â ÃÂ¹odÃÂ¯ÃÂÃÂ poÃÂ¯snÃ¡Â´ÂÃÂ op pÃÂs 'ÃÂÃ¡Â´ÂlÃÂ ÃÂuÃ¡Â´ÂÃÂsÃ¡Â´ÂdÃ¡Â´ÂpÃÂ ÃÂ¹nÃÂÃÂÃÂÃÂÃÂsuoÃÂ 'ÃÂÃÂÃÂ¯ÃÂ ÃÂÃ¡Â´Âs ÃÂ¹olop ÃÂ¯nsdÃ¡Â´Â ÃÂ¯ÃÂÃÂ¹oÃÂ¥` String, `00ÃÂÃÂ$-` String, `Ã¯Â¼Â´Ã¯Â½ÂÃ¯Â½Â Ã¯Â½ÂÃ¯Â½ÂÃ¯Â½ÂÃ¯Â½ÂÃ¯Â½Â Ã¯Â½ÂÃ¯Â½ÂÃ¯Â½ÂÃ¯Â½ÂÃ¯Â½Â Ã¯Â½ÂÃ¯Â½ÂÃ¯Â½Â Ã¯Â½ÂÃ¯Â½ÂÃ¯Â½ÂÃ¯Â½ÂÃ¯Â½Â Ã¯Â½ÂÃ¯Â½ÂÃ¯Â½Â Ã¯Â½Â Ã¯Â½ÂÃ¯Â½ÂÃ¯Â½Â Ã¯Â½ÂÃ¯Â½ÂÃ¯Â½ÂÃ¯Â½Â Ã¯Â½ÂÃ¯Â½ÂÃ¯Â½Â` String, `Ã°ÂÂÂÃ°ÂÂÂ¡Ã°ÂÂÂ Ã°ÂÂÂªÃ°ÂÂÂ®Ã°ÂÂÂ¢Ã°ÂÂÂÃ°ÂÂÂ¤ Ã°ÂÂÂÃ°ÂÂÂ«Ã°ÂÂÂ¨Ã°ÂÂÂ°Ã°ÂÂÂ§ Ã°ÂÂÂÃ°ÂÂÂ¨Ã°ÂÂÂ± Ã°ÂÂÂ£Ã°ÂÂÂ®Ã°ÂÂÂ¦Ã°ÂÂÂ©Ã°ÂÂÂ¬ Ã°ÂÂÂ¨Ã°ÂÂÂ¯Ã°ÂÂÂÃ°ÂÂÂ« Ã°ÂÂÂ­Ã°ÂÂÂ¡Ã°ÂÂÂ Ã°ÂÂÂ¥Ã°ÂÂÂÃ°ÂÂÂ³Ã°ÂÂÂ² Ã°ÂÂÂÃ°ÂÂÂ¨Ã°ÂÂÂ ` String, `Ã°ÂÂÂ¿Ã°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ` String, `Ã°ÂÂÂ»Ã°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂ` String, `Ã°ÂÂÂ£Ã°ÂÂÂ±Ã°ÂÂÂ® Ã°ÂÂÂºÃ°ÂÂÂ¾Ã°ÂÂÂ²Ã°ÂÂÂ¬Ã°ÂÂÂ´ Ã°ÂÂÂ«Ã°ÂÂÂ»Ã°ÂÂÂ¸Ã°ÂÂÂÃ°ÂÂÂ· Ã°ÂÂÂ¯Ã°ÂÂÂ¸Ã°ÂÂÂ Ã°ÂÂÂ³Ã°ÂÂÂ¾Ã°ÂÂÂ¶Ã°ÂÂÂ¹Ã°ÂÂÂ¼ Ã°ÂÂÂ¸Ã°ÂÂÂ¿Ã°ÂÂÂ®Ã°ÂÂÂ» Ã°ÂÂÂ½Ã°ÂÂÂ±Ã°ÂÂÂ® Ã°ÂÂÂµÃ°ÂÂÂªÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂ­Ã°ÂÂÂ¸Ã°ÂÂÂ°` String, `Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂ¢Ã°ÂÂÂ¦Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂ£Ã°ÂÂÂ Ã°ÂÂÂ¨Ã°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂ© Ã°ÂÂÂÃ°ÂÂÂ¦Ã°ÂÂÂÃ°ÂÂÂ¡Ã°ÂÂÂ¤ Ã°ÂÂÂ Ã°ÂÂÂ§Ã°ÂÂÂÃ°ÂÂÂ£ Ã°ÂÂÂ¥Ã°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ«Ã°ÂÂÂª Ã°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂ` String, `Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ¡ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ£Ã°ÂÂÂ¢ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ` String, `Ã¢ÂÂ¯Ã¢ÂÂ£Ã¢ÂÂ Ã¢ÂÂ¬Ã¢ÂÂ°Ã¢ÂÂ¤Ã¢ÂÂÃ¢ÂÂ¦ Ã¢ÂÂÃ¢ÂÂ­Ã¢ÂÂªÃ¢ÂÂ²Ã¢ÂÂ© Ã¢ÂÂ¡Ã¢ÂÂªÃ¢ÂÂ³ Ã¢ÂÂ¥Ã¢ÂÂ°Ã¢ÂÂ¨Ã¢ÂÂ«Ã¢ÂÂ® Ã¢ÂÂªÃ¢ÂÂ±Ã¢ÂÂ Ã¢ÂÂ­ Ã¢ÂÂ¯Ã¢ÂÂ£Ã¢ÂÂ Ã¢ÂÂ§Ã¢ÂÂÃ¢ÂÂµÃ¢ÂÂ´ Ã¢ÂÂÃ¢ÂÂªÃ¢ÂÂ¢` String, `<script>alert(123)</script>` String, `&lt;script&gt;alert(&#39;123&#39;);&lt;/script&gt;` String, `<img src=x onerror=alert(123) />` String, `<svg><script>123<1>alert(123)</script>` String, `"><script>alert(123)</script>` String, `'><script>alert(123)</script>` String, `><script>alert(123)</script>` String, `</script><script>alert(123)</script>` String, `< / script >< script >alert(123)< / script >` String, ` onfocus=JaVaSCript:alert(123) autofocus` String, `" onfocus=JaVaSCript:alert(123) autofocus` String, `' onfocus=JaVaSCript:alert(123) autofocus` String, `Ã¯Â¼ÂscriptÃ¯Â¼Âalert(123)Ã¯Â¼Â/scriptÃ¯Â¼Â` String, `<sc<script>ript>alert(123)</sc</script>ript>` String, `--><script>alert(123)</script>` String, `";alert(123);t="` String, `';alert(123);t='` String, `JavaSCript:alert(123)` String, `;alert(123);` String, `src=JaVaSCript:prompt(132)` String, `"><script>alert(123);</script x="` String, `'><script>alert(123);</script x='` String, `><script>alert(123);</script x=` String, `" autofocus onkeyup="javascript:alert(123)` String, `' autofocus onkeyup='javascript:alert(123)` String, `<script\\x20type="text/javascript">javascript:alert(1);</script>` String, `<script\\x3Etype="text/javascript">javascript:alert(1);</script>` String, `<script\\x0Dtype="text/javascript">javascript:alert(1);</script>` String, `<script\\x09type="text/javascript">javascript:alert(1);</script>` String, `<script\\x0Ctype="text/javascript">javascript:alert(1);</script>` String, `<script\\x2Ftype="text/javascript">javascript:alert(1);</script>` String, `<script\\x0Atype="text/javascript">javascript:alert(1);</script>` String, `'\`"><\\x3Cscript>javascript:alert(1)</script>` String, `'\`"><\\x00script>javascript:alert(1)</script>` String, `ABC<div style="x\\x3Aexpression(javascript:alert(1)">DEF` String, `ABC<div style="x:expression\\x5C(javascript:alert(1)">DEF` String, `ABC<div style="x:expression\\x00(javascript:alert(1)">DEF` String, `ABC<div style="x:exp\\x00ression(javascript:alert(1)">DEF` String, `ABC<div style="x:exp\\x5Cression(javascript:alert(1)">DEF` String, `ABC<div style="x:\\x0Aexpression(javascript:alert(1)">DEF` String, `ABC<div style="x:\\x09expression(javascript:alert(1)">DEF` String, `ABC<div style="x:\\xE3\\x80\\x80expression(javascript:alert(1)">DEF` String, `ABC<div style="x:\\xE2\\x80\\x84expression(javascript:alert(1)">DEF` String, `ABC<div style="x:\\xC2\\xA0expression(javascript:alert(1)">DEF` String, `ABC<div style="x:\\xE2\\x80\\x80expression(javascript:alert(1)">DEF` String, `ABC<div style="x:\\xE2\\x80\\x8Aexpression(javascript:alert(1)">DEF` String, `ABC<div style="x:\\x0Dexpression(javascript:alert(1)">DEF` String, `ABC<div style="x:\\x0Cexpression(javascript:alert(1)">DEF` String, `ABC<div style="x:\\xE2\\x80\\x87expression(javascript:alert(1)">DEF` String, `ABC<div style="x:\\xEF\\xBB\\xBFexpression(javascript:alert(1)">DEF` String, `ABC<div style="x:\\x20expression(javascript:alert(1)">DEF` String, `ABC<div style="x:\\xE2\\x80\\x88expression(javascript:alert(1)">DEF` String, `ABC<div style="x:\\x00expression(javascript:alert(1)">DEF` String, `ABC<div style="x:\\xE2\\x80\\x8Bexpression(javascript:alert(1)">DEF` String, `ABC<div style="x:\\xE2\\x80\\x86expression(javascript:alert(1)">DEF` String, `ABC<div style="x:\\xE2\\x80\\x85expression(javascript:alert(1)">DEF` String, `ABC<div style="x:\\xE2\\x80\\x82expression(javascript:alert(1)">DEF` String, `ABC<div style="x:\\x0Bexpression(javascript:alert(1)">DEF` String, `ABC<div style="x:\\xE2\\x80\\x81expression(javascript:alert(1)">DEF` String, `ABC<div style="x:\\xE2\\x80\\x83expression(javascript:alert(1)">DEF` String, `ABC<div style="x:\\xE2\\x80\\x89expression(javascript:alert(1)">DEF` String, `<a href="\\x0Bjavascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x0Fjavascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\xC2\\xA0javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x05javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\xE1\\xA0\\x8Ejavascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x18javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x11javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\xE2\\x80\\x88javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\xE2\\x80\\x89javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\xE2\\x80\\x80javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x17javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x03javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x0Ejavascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x1Ajavascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x00javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x10javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\xE2\\x80\\x82javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x20javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x13javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x09javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\xE2\\x80\\x8Ajavascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x14javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x19javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\xE2\\x80\\xAFjavascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x1Fjavascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\xE2\\x80\\x81javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x1Djavascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\xE2\\x80\\x87javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x07javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\xE1\\x9A\\x80javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\xE2\\x80\\x83javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x04javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x01javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x08javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\xE2\\x80\\x84javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\xE2\\x80\\x86javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\xE3\\x80\\x80javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x12javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x0Djavascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x0Ajavascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x0Cjavascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x15javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\xE2\\x80\\xA8javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x16javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x02javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x1Bjavascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x06javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\xE2\\x80\\xA9javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\xE2\\x80\\x85javascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x1Ejavascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\xE2\\x81\\x9Fjavascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="\\x1Cjavascript:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="javascript\\x00:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="javascript\\x3A:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="javascript\\x09:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="javascript\\x0D:javascript:alert(1)" id="fuzzelement1">test</a>` String, `<a href="javascript\\x0A:javascript:alert(1)" id="fuzzelement1">test</a>` String, `\`"'><img src=xxx:x \\x0Aonerror=javascript:alert(1)>` String, `\`"'><img src=xxx:x \\x22onerror=javascript:alert(1)>` String, `\`"'><img src=xxx:x \\x0Bonerror=javascript:alert(1)>` String, `\`"'><img src=xxx:x \\x0Donerror=javascript:alert(1)>` String, `\`"'><img src=xxx:x \\x2Fonerror=javascript:alert(1)>` String, `\`"'><img src=xxx:x \\x09onerror=javascript:alert(1)>` String, `\`"'><img src=xxx:x \\x0Conerror=javascript:alert(1)>` String, `\`"'><img src=xxx:x \\x00onerror=javascript:alert(1)>` String, `\`"'><img src=xxx:x \\x27onerror=javascript:alert(1)>` String, `\`"'><img src=xxx:x \\x20onerror=javascript:alert(1)>` String, `"\`'><script>\\x3Bjavascript:alert(1)</script>` String, `"\`'><script>\\x0Djavascript:alert(1)</script>` String, `"\`'><script>\\xEF\\xBB\\xBFjavascript:alert(1)</script>` String, `"\`'><script>\\xE2\\x80\\x81javascript:alert(1)</script>` String, `"\`'><script>\\xE2\\x80\\x84javascript:alert(1)</script>` String, `"\`'><script>\\xE3\\x80\\x80javascript:alert(1)</script>` String, `"\`'><script>\\x09javascript:alert(1)</script>` String, `"\`'><script>\\xE2\\x80\\x89javascript:alert(1)</script>` String, `"\`'><script>\\xE2\\x80\\x85javascript:alert(1)</script>` String, `"\`'><script>\\xE2\\x80\\x88javascript:alert(1)</script>` String, `"\`'><script>\\x00javascript:alert(1)</script>` String, `"\`'><script>\\xE2\\x80\\xA8javascript:alert(1)</script>` String, `"\`'><script>\\xE2\\x80\\x8Ajavascript:alert(1)</script>` String, `"\`'><script>\\xE1\\x9A\\x80javascript:alert(1)</script>` String, `"\`'><script>\\x0Cjavascript:alert(1)</script>` String, `"\`'><script>\\x2Bjavascript:alert(1)</script>` String, `"\`'><script>\\xF0\\x90\\x96\\x9Ajavascript:alert(1)</script>` String, `"\`'><script>-javascript:alert(1)</script>` String, `"\`'><script>\\x0Ajavascript:alert(1)</script>` String, `"\`'><script>\\xE2\\x80\\xAFjavascript:alert(1)</script>` String, `"\`'><script>\\x7Ejavascript:alert(1)</script>` String, `"\`'><script>\\xE2\\x80\\x87javascript:alert(1)</script>` String, `"\`'><script>\\xE2\\x81\\x9Fjavascript:alert(1)</script>` String, `"\`'><script>\\xE2\\x80\\xA9javascript:alert(1)</script>` String, `"\`'><script>\\xC2\\x85javascript:alert(1)</script>` String, `"\`'><script>\\xEF\\xBF\\xAEjavascript:alert(1)</script>` String, `"\`'><script>\\xE2\\x80\\x83javascript:alert(1)</script>` String, `"\`'><script>\\xE2\\x80\\x8Bjavascript:alert(1)</script>` String, `"\`'><script>\\xEF\\xBF\\xBEjavascript:alert(1)</script>` String, `"\`'><script>\\xE2\\x80\\x80javascript:alert(1)</script>` String, `"\`'><script>\\x21javascript:alert(1)</script>` String, `"\`'><script>\\xE2\\x80\\x82javascript:alert(1)</script>` String, `"\`'><script>\\xE2\\x80\\x86javascript:alert(1)</script>` String, `"\`'><script>\\xE1\\xA0\\x8Ejavascript:alert(1)</script>` String, `"\`'><script>\\x0Bjavascript:alert(1)</script>` String, `"\`'><script>\\x20javascript:alert(1)</script>` String, `"\`'><script>\\xC2\\xA0javascript:alert(1)</script>` String, `<img \\x00src=x onerror="alert(1)">` String, `<img \\x47src=x onerror="javascript:alert(1)">` String, `<img \\x11src=x onerror="javascript:alert(1)">` String, `<img \\x12src=x onerror="javascript:alert(1)">` String, `<img\\x47src=x onerror="javascript:alert(1)">` String, `<img\\x10src=x onerror="javascript:alert(1)">` String, `<img\\x13src=x onerror="javascript:alert(1)">` String, `<img\\x32src=x onerror="javascript:alert(1)">` String, `<img\\x11src=x onerror="javascript:alert(1)">` String, `<img \\x34src=x onerror="javascript:alert(1)">` String, `<img \\x39src=x onerror="javascript:alert(1)">` String, `<img \\x00src=x onerror="javascript:alert(1)">` String, `<img src\\x09=x onerror="javascript:alert(1)">` String, `<img src\\x10=x onerror="javascript:alert(1)">` String, `<img src\\x13=x onerror="javascript:alert(1)">` String, `<img src\\x32=x onerror="javascript:alert(1)">` String, `<img src\\x12=x onerror="javascript:alert(1)">` String, `<img src\\x11=x onerror="javascript:alert(1)">` String, `<img src\\x00=x onerror="javascript:alert(1)">` String, `<img src\\x47=x onerror="javascript:alert(1)">` String, `<img src=x\\x09onerror="javascript:alert(1)">` String, `<img src=x\\x10onerror="javascript:alert(1)">` String, `<img src=x\\x11onerror="javascript:alert(1)">` String, `<img src=x\\x12onerror="javascript:alert(1)">` String, `<img src=x\\x13onerror="javascript:alert(1)">` String, `<img[a][b][c]src[d]=x[e]onerror=[f]"alert(1)">` String, `<img src=x onerror=\\x09"javascript:alert(1)">` String, `<img src=x onerror=\\x10"javascript:alert(1)">` String, `<img src=x onerror=\\x11"javascript:alert(1)">` String, `<img src=x onerror=\\x12"javascript:alert(1)">` String, `<img src=x onerror=\\x32"javascript:alert(1)">` String, `<img src=x onerror=\\x00"javascript:alert(1)">` String, `<a href=java&#1&#2&#3&#4&#5&#6&#7&#8&#11&#12script:javascript:alert(1)>XXX</a>` String, `<img src="x\` \`<script>javascript:alert(1)</script>"\` \`>` String, `<img src onerror /" '"= alt=javascript:alert(1)//">` String, `<title onpropertychange=javascript:alert(1)></title><title title=>` String, `<a href=http://foo.bar/#x=\`y></a><img alt="\`><img src=x:x onerror=javascript:alert(1)></a>">` String, `<!--[if]><script>javascript:alert(1)</script -->` String, `<!--[if<img src=x onerror=javascript:alert(1)//]> -->` String, `<script src="/\\%(jscript)s"></script>` String, `<script src="\\\\%(jscript)s"></script>` String, `<IMG """><SCRIPT>alert("XSS")</SCRIPT>">` String, `<IMG SRC=javascript:alert(String.fromCharCode(88,83,83))>` String, `<IMG SRC=# onmouseover="alert('xxs')">` String, `<IMG SRC= onmouseover="alert('xxs')">` String, `<IMG onmouseover="alert('xxs')">` String, `<IMG SRC=&#106;&#97;&#118;&#97;&#115;&#99;&#114;&#105;&#112;&#116;&#58;&#97;&#108;&#101;&#114;&#116;&#40;&#39;&#88;&#83;&#83;&#39;&#41;>` String, `<IMG SRC=&#0000106&#0000097&#0000118&#0000097&#0000115&#0000099&#0000114&#0000105&#0000112&#0000116&#0000058&#0000097&#0000108&#0000101&#0000114&#0000116&#0000040&#0000039&#0000088&#0000083&#0000083&#0000039&#0000041>` String, `<IMG SRC=&#x6A&#x61&#x76&#x61&#x73&#x63&#x72&#x69&#x70&#x74&#x3A&#x61&#x6C&#x65&#x72&#x74&#x28&#x27&#x58&#x53&#x53&#x27&#x29>` String, `<IMG SRC="jav ascript:alert('XSS');">` String, `<IMG SRC="jav&#x09;ascript:alert('XSS');">` String, `<IMG SRC="jav&#x0A;ascript:alert('XSS');">` String, `<IMG SRC="jav&#x0D;ascript:alert('XSS');">` String, `perl -e 'print "<IMG SRC=java\\0script:alert(\\"XSS\\")>";' > out` String, `<IMG SRC=" &#14; javascript:alert('XSS');">` String, `<SCRIPT/XSS SRC="http://ha.ckers.org/xss.js"></SCRIPT>` String, `<BODY onload!#$%&()*~+-_.,:;?@[/|\\]^\`=alert("XSS")>` String, `<SCRIPT/SRC="http://ha.ckers.org/xss.js"></SCRIPT>` String, `<<SCRIPT>alert("XSS");//<</SCRIPT>` String, `<SCRIPT SRC=http://ha.ckers.org/xss.js?< B >` String, `<SCRIPT SRC=//ha.ckers.org/.j>` String, `<IMG SRC="javascript:alert('XSS')"` String, `<iframe src=http://ha.ckers.org/scriptlet.html <` String, `\\";alert('XSS');//` String, `<u oncopy=alert()> Copy me</u>` String, `<i onwheel=alert(1)> Scroll over me </i>` String, `<plaintext>` String, `http://a/%%30%30` String, `</textarea><script>alert(123)</script>` String, `1;DROP TABLE users` String, `1'; DROP TABLE users-- 1` String, `' OR 1=1 -- 1` String, `' OR '1'='1` String, `'; EXEC sp_MSForEachTable 'DROP TABLE ?'; --` String, ` ` String, `%` String, `_` String, `--` String, `--version` String, `--help` String, `$USER` String, `/dev/null; touch /tmp/blns.fail ; echo` String, `\`touch /tmp/blns.fail\`` String, `$(touch /tmp/blns.fail)` String, `@{[system "touch /tmp/blns.fail"]}` String, `eval("puts 'hello world'")` String, `System("ls -al /")` String, `\`ls -al /\`` String, `Kernel.exec("ls -al /")` String, `Kernel.exit(1)` String, `%x('ls -al /')` String, `<?xml version="1.0" encoding="ISO-8859-1"?><!DOCTYPE foo [ <!ELEMENT foo ANY ><!ENTITY xxe SYSTEM "file:///etc/passwd" >]><foo>&xxe;</foo>` String, `$HOME` String, `$ENV{'HOME'}` String, `%d` String, `%s%s%s%s%s` String, `{0}` String, `%*.*s` String, `%@` String, `%n` String, `File:///` String, `../../../../../../../../../../../etc/passwd%00` String, `../../../../../../../../../../../etc/hosts` String, `() { 0; }; touch /tmp/blns.shellshock1.fail;` String, `() { _; } >_[$($())] { touch /tmp/blns.shellshock2.fail; }` String, `<<< %s(un='%s') = %u` String, `+++ATH0` String, `CON` String, `PRN` String, `AUX` String, `CLOCK$` String, `NUL` String, `A:` String, `ZZ:` String, `COM1` String, `LPT1` String, `LPT2` String, `LPT3` String, `COM2` String, `COM3` String, `COM4` String, `DCC SEND STARTKEYLOGGER 0 0 0` String, `Scunthorpe General Hospital` String, `Penistone Community Church` String, `Lightwater Country Park` String, `Jimmy Clitheroe` String, `Horniman Museum` String, `shitake mushrooms` String, `RomansInSussex.co.uk` String, `http://www.cum.qc.ca/` String, `Craig Cockburn, Software Specialist` String, `Linda Callahan` String, `Dr. Herman I. Libshitz` String, `magna cum laude` String, `Super Bowl XXX` String, `medieval erection of parapets` String, `evaluate` String, `mocha` String, `expression` String, `Arsenal canal` String, `classic` String, `Tyson Gay` String, `Dick Van Dyke` String, `basement` String, `If you're reading this, you've been in a coma for almost 20 years now. We're trying a new technique. We don't know where this message will end up in your dream, but we hope it works. Please wake up, we miss you.` String, `Roses are \\u001b[0;31mred\\u001b[0m, violets are \\u001b[0;34mblue. Hope you enjoy terminal hue` String, `But now...\\u001b[20Cfor my greatest trick...\\u001b[8m` String, `The quic\b\b\b\b\b\bk brown fo\\u0007\\u0007\\u0007\\u0007\\u0007\\u0007\\u0007\\u0007\\u0007\\u0007\\u0007x... [Beeeep]` String, `PowerÃÂÃÂÃÂÃÂÃÂµÃÂÃÂ¨ÃÂÃÂÃÂÃÂÃÂµÃÂÃÂ¨ÃÂÃÂ±ÃÂ±ÃÂ Ã Â¥Â£ Ã Â¥Â£h Ã Â¥Â£ Ã Â¥Â£Ã¥ÂÂ` String, `Ã°ÂÂÂ³0Ã°ÂÂÂÃ¯Â¸Â` String, `Ã Â°ÂÃ Â±ÂÃ Â°ÂÃ¢ÂÂÃ Â°Â¾` String, `ÃÂ¯ÃÂÃÂ¾ÃÂ` String, `{% print 'x' * 64 * 1024**3 %}` String, `{{ "".__class__.__mro__[2].__subclasses__()[40]("/etc/passwd").read() }}` String) ENGINE = MergeTree ORDER BY `{{ "".__class__.__mro__[2].__subclasses__()[40]("/etc/passwd").read() }}` SETTINGS min_bytes_for_wide_part = '100G', index_granularity = 50908, ratio_of_defaults_for_sparse_serialization = 0.3249889314174652, replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 18822, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 7780398032, index_granularity_bytes = 4946950, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 69480, primary_key_compress_block_size = 93779
SELECT argMaxIf(number, number::Float64, number > 2030) from numbers(2029);
CREATE DATABASE IF NOT EXISTS test_68nnloj4 
select arrayPushFront(['a', 'b', 'c'], val2) from array_functions;
INSERT INTO alter_compression_codec1 VALUES
CREATE TABLE test_01193_18429.table_6_224 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_5_7 VALUES 
SELECT 'Running test stateless/01716_decimal_comparison_ubsan.sql from pid=1720' 
SELECT sum(e) from tab_02473 PREWHERE b > 10 AND b <= 70 AND c > 0 AND c <= 30 AND d > 32 AND d <= 62 WHERE a == 0;
ALTER TABLE defaults DELETE WHERE n = 100;
INSERT INTO src_11 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 54
INSERT INTO test_01193_18429.table_7_378 VALUES 
INSERT INTO test_01193_18429.table_7_662 VALUES 
CREATE TABLE data_02053 (`id` Int64, `A` Nullable(Int64), `X` Int64 MATERIALIZED coalesce(A, -1)) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 27099, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 89, merge_max_block_size = 19393, prefer_fetch_merged_part_size_threshold = 6302919465, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 2171115518, index_granularity_bytes = 15043745, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 19033, primary_key_compress_block_size = 70919
INSERT INTO test_01193_18429.table_4_987 VALUES 
OPTIMIZE TABLE test_alter_on_mutation FINAL;
CREATE DATABASE IF NOT EXISTS test_gzatkuha 
DROP DATABASE IF EXISTS test_8gk7icay 
INSERT INTO test_01193_18429.table_1_715 VALUES 
CREATE TABLE test_01193_18429.table_10_626 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP TABLE IF EXISTS ttl_with_default;
CREATE TEMPORARY TABLE t (x UInt64);
SELECT 26;
SELECT 'SETTINGS optimize_move_to_prewhere= 0';
alter table rmt2 drop part 'all_19_19_0';
SELECT count() FROM null_subcolumns WHERE n.null;
SELECT wordShingleSimHashCaseInsensitiveUTF8('');
INSERT INTO root VALUES 
DROP DATABASE IF EXISTS test_avsfuot9 
CREATE TABLE db_test_16wuveew.`ÃÂÃÂ°ÃÂ±ÃÂ»ÃÂ¸ÃÂÃÂ°_ÃÂÃÂ¾_ÃÂÃÂÃÂÃÂ°ÃÂ½ÃÂ½ÃÂÃÂ¼_ÃÂ½ÃÂ°ÃÂ·ÃÂ²ÃÂ°ÃÂ½ÃÂ¸ÃÂµÃÂ¼` (a UInt64, b UInt64) ENGINE = Log;
SELECT multiIf((number % 2) = 0, [toInt8(1), toInt8(2)], (number % 3) = 0, [toUInt32(2), toUInt32(3)], [toUInt32(3), toUInt32(3)]) FROM system.numbers LIMIT 10;
DROP TABLE test_02536;
CREATE TABLE test_01193_18429.table_6_796 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT COUNT(*) FROM huge_granularity_small_blocks;
insert into data_02293 select 1 a, groupArrayArrayState([toUInt64(number)]), groupArrayArray([toUInt64(number)]) from numbers(2) group by a;
WITH minSampleSizeContinous(20.0, 10, 0.05, 0.8, 0.05) AS res SELECT 'continous const 4', roundBankers(res.1, 2), roundBankers(res.2, 2), roundBankers(res.3, 2);
SELECT dictGetInt32(NULL, NULL, NULL);
select t1.a, t2.c from t1 join t2 on a = c;
CREATE TABLE test_01193_18429.table_7_331 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/02551_obfuscator_keywords.sh from pid=1715' 
CREATE TABLE test_7B3743627143266D6D4E303E6F4D3226425D293A433455607D2A6B5F245A2D7E2B2F5E38422D2E27(x UInt8) Engine=Memory;
DROP DICTIONARY test_complex_dictionary_load_factor;
SET max_bytes_before_external_group_by=1;
CREATE TABLE mem3 (key Int, _shard_num String) Engine=Memory();
SELECT categoricalInformationValue(x.1, x.2) FROM ( SELECT arrayJoin([(0, 0), (0, 1), (1, 1), (1, 1)]) as x );
CREATE TABLE test_70633D68507820733B4B7836352E4E41342443526038667A5B214D79325C563C4D7E2E5B31693350(x UInt8) Engine=Memory;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (65 < 28 AND 53 > 0 ? 65 : 0)), throwIf(last != (65 < 28 AND 53 > 0 ? least(28 - 1, 65 + 53 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(28) LIMIT 65, 53);
SELECT materialize('Hello') LIKE '%%%';
SELECT multiIf((number % 2) = 0, toInt32(1), (number % 3) = 0, toUInt8(2), toInt8(3)) FROM system.numbers LIMIT 10;
/* all_0_0_7 - same */ OPTIMIZE TABLE execute_on_single_replica_r1 FINAL;
SELECT 'Running test stateless/02475_precise_decimal_arithmetics.sql from pid=1714' 
INSERT INTO ngrambf_v1_hasany_test VALUES 
INSERT INTO r8 SELECT 10 % 10 = 8 ? 10 - 1 : 10
SELECT `A`, minMap(CAST(arrayMap(`x` -> (`x`, 1), `r`), 'Map(UInt8,Int64)')) AS `x` FROM view(SELECT `number` AS `A`, range(150) AS `r` FROM numbers(60) WHERE (`A` % 2) = shardNum()) GROUP BY `A` LIMIT 100000000
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 12763, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE TABLE test_01193_18429.table_2_98 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'Running test stateless/02932_materialized_view_with_dropped_target_table_no_exception.sql from pid=1714' 
DROP DATABASE IF EXISTS test_nj11nxir 
SELECT arrayShuffle([1,2,3,4,5,6,7,8,9,10], 0xbad_cafe);
alter table many_mutations delete where y = 794 * 2 settings mutations_sync = 0;
SELECT throwIf((SELECT (count(), sum(n)) FROM merge(currentDatabase(), '') WHERE type=4) != (toUInt8(6/2 + 1), (select sum(number) from numbers(1, 6) where number % 2 or number=6))) FORMAT Null;
ALTER TABLE concurrent_alter_column ADD COLUMN c416 DOUBLE;
SELECT splitByNonAlpha('128.0.0.1', 4) SETTINGS splitby_max_substrings_includes_remaining_string = 1;
drop table if exists projection_broken_parts_1 sync;
SHOW TABLES FROM system LIKE '%\_log'
SELECT * FROM map_test_index_map_keys WHERE mapContains(map, 'K0') SETTINGS force_data_skipping_indices='map_bloom_filter_keys';
DROP DATABASE IF EXISTS test_0mvbx0tn 
INSERT INTO test_02102 FORMAT RowBinaryWithNamesAndTypes
alter table many_mutations delete where y = 997 * 2 settings mutations_sync = 0;
select regexpExtract('100-200', '(\\d+)-(\\d+)', materialize(2));
INSERT INTO test_01193_18429.table_4_813 VALUES 
INSERT INTO test_01193_18429.table_7_52 VALUES 
CREATE TABLE test_01193_18429.table_5_156 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP DATABASE IF EXISTS test_2xk28gdw 
SELECT 'Running test stateless/01131_max_rows_to_sort.sql from pid=1724' 
DROP TABLE 02417_test SYNC;
CREATE TABLE nested (`x` UInt8, `n` Nested(a UInt64, b String)) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 51094, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 116, merge_max_block_size = 8867, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 2627368, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 49134, primary_key_compress_block_size = 29981
CREATE TABLE test_02908_r2_239 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_239', 'r2') ORDER BY tuple()
CREATE TABLE tab (`row_id` UInt32, `str` String, INDEX idx str TYPE inverted GRANULARITY 1) ENGINE = MergeTree ORDER BY row_id SETTINGS index_granularity = 52866, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 15518, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 2202159932, index_granularity_bytes = 13162386, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 8613, primary_key_compress_block_size = 54302
SELECT 'Running test stateless/01107_tuples_arrays_parsing_exceptions.sh from pid=1715' 
select length(b) as l from tab_00717 group by l, l + 1;
SELECT * FROM replicated_collapsing;
SELECT avgWeighted(x, w) FROM values('x Float32, w Float64', (0, 0), (1, 0));
CREATE TABLE collapsing_merge_tree (`key` UInt32, `sign` Int8, `date` Datetime) ENGINE = CollapsingMergeTree(sign) PARTITION BY date ORDER BY key SETTINGS index_granularity = 30300, min_bytes_for_wide_part = 281321780, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 15968, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 788243, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 878983389, index_granularity_bytes = 24243420, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 63220, primary_key_compress_block_size = 81933
EXPLAIN PIPELINE SELECT a, b, c FROM t_fixed_prefix WHERE a = 1 AND c = 1 ORDER BY a, b, c SETTINGS optimize_read_in_order = 1
DROP DATABASE IF EXISTS test_65x3yg9q 
SELECT '-1', '2251799813685248.000000000', -1 = 2251799813685248.000000000, -1 != 2251799813685248.000000000, -1 < 2251799813685248.000000000, -1 <= 2251799813685248.000000000, -1 > 2251799813685248.000000000, -1 >= 2251799813685248.000000000, 2251799813685248.000000000 = -1, 2251799813685248.000000000 != -1, 2251799813685248.000000000 < -1, 2251799813685248.000000000 <= -1, 2251799813685248.000000000 > -1, 2251799813685248.000000000 >= -1 , toInt8(-1) = 2251799813685248.000000000, toInt8(-1) != 2251799813685248.000000000, toInt8(-1) < 2251799813685248.000000000, toInt8(-1) <= 2251799813685248.000000000, toInt8(-1) > 2251799813685248.000000000, toInt8(-1) >= 2251799813685248.000000000, 2251799813685248.000000000 = toInt8(-1), 2251799813685248.000000000 != toInt8(-1), 2251799813685248.000000000 < toInt8(-1), 2251799813685248.000000000 <= toInt8(-1), 2251799813685248.000000000 > toInt8(-1), 2251799813685248.000000000 >= toInt8(-1) , toInt16(-1) = 2251799813685248.000000000, toInt16(-1) != 2251799813685248.000000000, toInt16(-1) < 2251799813685248.000000000, toInt16(-1) <= 2251799813685248.000000000, toInt16(-1) > 2251799813685248.000000000, toInt16(-1) >= 2251799813685248.000000000, 2251799813685248.000000000 = toInt16(-1), 2251799813685248.000000000 != toInt16(-1), 2251799813685248.000000000 < toInt16(-1), 2251799813685248.000000000 <= toInt16(-1), 2251799813685248.000000000 > toInt16(-1), 2251799813685248.000000000 >= toInt16(-1) , toInt32(-1) = 2251799813685248.000000000, toInt32(-1) != 2251799813685248.000000000, toInt32(-1) < 2251799813685248.000000000, toInt32(-1) <= 2251799813685248.000000000, toInt32(-1) > 2251799813685248.000000000, toInt32(-1) >= 2251799813685248.000000000, 2251799813685248.000000000 = toInt32(-1), 2251799813685248.000000000 != toInt32(-1), 2251799813685248.000000000 < toInt32(-1), 2251799813685248.000000000 <= toInt32(-1), 2251799813685248.000000000 > toInt32(-1), 2251799813685248.000000000 >= toInt32(-1) , toInt64(-1) = 2251799813685248.000000000, toInt64(-1) != 2251799813685248.000000000, toInt64(-1) < 2251799813685248.000000000, toInt64(-1) <= 2251799813685248.000000000, toInt64(-1) > 2251799813685248.000000000, toInt64(-1) >= 2251799813685248.000000000, 2251799813685248.000000000 = toInt64(-1), 2251799813685248.000000000 != toInt64(-1), 2251799813685248.000000000 < toInt64(-1), 2251799813685248.000000000 <= toInt64(-1), 2251799813685248.000000000 > toInt64(-1), 2251799813685248.000000000 >= toInt64(-1) ;
select positionUTF8('ÃÂ°ÃÂ±ÃÂ²' as h, lowerUTF8('' as n)) = positionCaseInsensitiveUTF8(h, n);
SELECT `y`, count() FROM `test_6sl9qpyr`.`02535_custom_key` GROUP BY `y` ORDER BY `y` ASC
INSERT INTO r3 SELECT 61 % 10 = 3 ? 61 - 1 : 61
CREATE TABLE test_6F3A612A3A6A2F5B2054207257763C2B27323A6A65713C397B59402844695C265848653B6F423258(x UInt8) Engine=Memory;
SELECT 6, 1, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (6 < 13 AND 1 > 0 ? 6 : 0)), throwIf(last != (6 < 13 AND 1 > 0 ? least(13 - 1, 6 + 1 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 6, 1);
SELECT min(NULL, NULL, NULL);
CREATE DATABASE IF NOT EXISTS test_oqbfqhr8 
WITH minSampleSizeContinous(20, 10.0, 0.05, 0.8, 0.05) AS res SELECT 'continous const 3', roundBankers(res.1, 2), roundBankers(res.2, 2), roundBankers(res.3, 2);
SELECT toDate('2105-12-31') + INTERVAL number MONTH FROM system.numbers LIMIT 25000 FORMAT Null;
RENAME TABLE test_01148_atomic.rmt4 to test_01148_atomic.rmt3;
CREATE TABLE test_01193_18429.table_2_770 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
create table part_01278_6 as data_01278 Engine=Buffer('test_frugcm3n', null_01278, 1, 86400, 86400, 1e5, 1e6, 10e6, 100e6);
CREATE FUNCTION 02148_test_function_nested AS (x) -> 02148_test_function(x + 2);
SELECT CASE WHEN (col1 % 2) = 0 THEN ['foo', 'bar'] WHEN (col1 % 3) = 0 THEN ['foo', col5] ELSE [col6, col7] END FROM multi_if_check;
CREATE DATABASE IF NOT EXISTS test_diq7bzeu 
CREATE DICTIONARY dict_db_02179.dict (`key` UInt64 DEFAULT 0, `val` UInt64 DEFAULT 10) PRIMARY KEY key SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'dict_data' PASSWORD '[HIDDEN]' DB 'dict_db_02179')) LIFETIME(MIN 0 MAX 0) LAYOUT(FLAT())
CREATE TABLE test_01193_18429.table_6_789 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE codecTest (`key` UInt64, `name` String, `ref_valueF64` Float64, `ref_valueF32` Float32, `valueF64` Float64 CODEC(FPC(4)), `valueF32` Float32 CODEC(FPC(4))) ENGINE = MergeTree ORDER BY key SETTINGS index_granularity = 8758, min_bytes_for_wide_part = 313620912, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 24195, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 9704049, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 9076, primary_key_compress_block_size = 55366
INSERT INTO tlb (k) SELECT 1;
DROP TABLE startsWith_test;
alter table many_mutations delete where y = 894 * 2 settings mutations_sync = 0;
select 'join on OR chain (all right)';
DROP TABLE t1_00856;
drop table if exists ordinary_distinct sync;
SELECT multiIf((col1 % 2) = 0, [col2, 'bar'], (col1 % 3) = 0, ['foo', 'bar'], ['foo', 'bar']) FROM multi_if_check;
SELECT count() FROM 02918_table_obj1;
SELECT obj.key_1.key_3 FROM t_json_11 ORDER BY obj.id FORMAT JSONEachRow
CREATE DATABASE IF NOT EXISTS test_tqg6l3k0 
SELECT concatWithSeparator('|', 'a', materialize(true :: Bool)) == 'a|true';
INSERT INTO test_01193_18429.table_6_89 VALUES 
select replaceRegexpOne(explain, '^[ ]*(.*)', '\\1') from ( explain actions=1 select intDiv(a, 2) as a1 from t7 group by a1 ) where explain like '%Skip merging: %';
CREATE DATABASE IF NOT EXISTS test_yuucdz58 
SELECT throwIf((SELECT sum(nm) FROM mv) != 182) FORMAT Null;
DROP TABLE 02843_source;
CREATE TABLE test_01193_18429.table_2_989 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE DATABASE IF NOT EXISTS test_rw64vwov 
CREATE TABLE test_01193_18429.table_10_713 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_1_88 VALUES 
CREATE TABLE test_01193_18429.table_6_426 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_10_661 VALUES 
CREATE TABLE test_01193_18429.table_4_150 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'Running test stateless/02375_system_schema_inference_cache.sql from pid=1705' 
SELECT * FROM numbers(10) FORMAT PrettySpaceNoEscapes;
SELECT 'Running test stateless/02918_parallel_replicas_custom_key_unavailable_replica.sql from pid=1714' 
SELECT '(forward, head, B)', id, sequenceNextNode('forward', 'head')(dt, action, 1, action = 'B') AS next_node FROM test_sequenceNextNode_Nullable GROUP BY id ORDER BY id;
SELECT sum(e) from tab_02473 PREWHERE b > 0 AND b <= 70 AND c > 23 AND c <= 74 AND d > 5 AND d <= 79 WHERE a == 0;
SELECT * FROM ( WITH ( SELECT groupArray(a) FROM ( SELECT 1 AS a ) ) AS keys, ( SELECT groupArray(a) FROM ( SELECT 2 AS a ) ) AS values SELECT * FROM ( SELECT 1 AS a ) WHERE transform(a, keys, values, 0) ) AS wrap;
CREATE TABLE test_01193_18429.table_7_707 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT multiIf((number % 2) = 0, toUInt16(1), (number % 3) = 0, toUInt64(2), toUInt16(3)) FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_xtvcg8ld 
CREATE INDEX idx_tab4_0 ON tab4 (col3 DESC,col1);
SELECT if(number % 2, materialize([9223372036854775806]), [2, 65537, -9223372036854775808]) AS res FROM numbers(2);
CREATE TABLE test_01193_18429.table_10_141 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT toTypeName(arrayMin([toInt8(0)])), toTypeName(arrayMin([toInt16(0)])), toTypeName(arrayMin([toInt32(0)])), toTypeName(arrayMin([toInt64(0)]));
CREATE TABLE test_30467970343F6D6D337A543E56272A713374443969314B6D2B656474252B6A71452232552C432E3F(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_c8ua2409 
CREATE TABLE test_01193_18429.table_8_808 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'Running test stateless/02316_literal_no_octal.sql from pid=1720' 
INSERT INTO mt VALUES /* (-41, 2) */ 
CREATE TABLE test_01193_18429.table_4_149 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Running test stateless/01300_read_wkt.sql from pid=1722' 
INSERT INTO bloom_filter_nullable_index__fuzz_0 VALUES 
CREATE TABLE test_273E47622C563465444242432968322F354F2A3E283772476562204C39285C445A516E3B6B39302C(x UInt8) Engine=Memory;
CREATE TABLE join_table_race(id Int32, name String) ENGINE = Join(ANY, LEFT, id)
drop table funnel_test_strict;
select atan2(1, 0) = pi() / 2;
select position(materialize('ÃÂ°ÃÂ±ÃÂ²') as h, lower('ÃÂ°ÃÂÃÂ²' as n)) = positionCaseInsensitive(h, n);
SELECT multiIf((col1 % 2) = 0, ['foo', 'bar'], 1, ['foo', col5], ['foo', 'bar']) FROM multi_if_check;
INSERT INTO view VALUES 
SELECT multiIf((number % 2) = 0, [toUInt32(1), toUInt32(2)], (number % 3) = 0, [toUInt16(2), toUInt16(3)], [toInt16(3), toInt16(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_444E442B295047276D5F3F5C66657C7A6A524561593E6E544F306936215424587A30483C62607E6C(x UInt8) Engine=Memory;
SELECT medianExact(-1);
CREATE TABLE optimize_sorting (`a` UInt64, `b` UInt64, `c` UInt64) ENGINE = MergeTree ORDER BY (a, b) SETTINGS index_granularity = 38222, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 77, merge_max_block_size = 7676, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 5943317818, index_granularity_bytes = 23040357, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 38981, primary_key_compress_block_size = 73805
insert into function file(02404_data.Values) select number, toDate(number) from numbers(10);
select count() from (select fromUnixTimestamp64Milli(time, 'UTC') time_fmt, name from test where time_fmt > '2022-09-05 00:00:00');
SELECT throwIf((SELECT sum(nm) FROM mv) != 23) FORMAT Null;
SELECT 'Running test stateless/02047_log_family_data_file_sizes.sh from pid=1713' 
alter table t detach partition 1;
INSERT INTO secure2 VALUES 
INSERT INTO test_01193_18429.table_4_874 VALUES 
SELECT 65536, 32767, 65536 = 32767, 65536 != 32767, 65536 < 32767, 65536 <= 32767, 65536 > 32767, 65536 >= 32767, 32767 = 65536, 32767 != 65536, 32767 < 65536, 32767 <= 65536, 32767 > 65536, 32767 >= 65536 , toUInt32(65536) = toUInt16(32767), toUInt32(65536) != toUInt16(32767), toUInt32(65536) < toUInt16(32767), toUInt32(65536) <= toUInt16(32767), toUInt32(65536) > toUInt16(32767), toUInt32(65536) >= toUInt16(32767), toUInt16(32767) = toUInt32(65536), toUInt16(32767) != toUInt32(65536), toUInt16(32767) < toUInt32(65536), toUInt16(32767) <= toUInt32(65536), toUInt16(32767) > toUInt32(65536), toUInt16(32767) >= toUInt32(65536) , toUInt32(65536) = toInt16(32767), toUInt32(65536) != toInt16(32767), toUInt32(65536) < toInt16(32767), toUInt32(65536) <= toInt16(32767), toUInt32(65536) > toInt16(32767), toUInt32(65536) >= toInt16(32767), toInt16(32767) = toUInt32(65536), toInt16(32767) != toUInt32(65536), toInt16(32767) < toUInt32(65536), toInt16(32767) <= toUInt32(65536), toInt16(32767) > toUInt32(65536), toInt16(32767) >= toUInt32(65536) , toUInt32(65536) = toUInt32(32767), toUInt32(65536) != toUInt32(32767), toUInt32(65536) < toUInt32(32767), toUInt32(65536) <= toUInt32(32767), toUInt32(65536) > toUInt32(32767), toUInt32(65536) >= toUInt32(32767), toUInt32(32767) = toUInt32(65536), toUInt32(32767) != toUInt32(65536), toUInt32(32767) < toUInt32(65536), toUInt32(32767) <= toUInt32(65536), toUInt32(32767) > toUInt32(65536), toUInt32(32767) >= toUInt32(65536) , toUInt32(65536) = toInt32(32767), toUInt32(65536) != toInt32(32767), toUInt32(65536) < toInt32(32767), toUInt32(65536) <= toInt32(32767), toUInt32(65536) > toInt32(32767), toUInt32(65536) >= toInt32(32767), toInt32(32767) = toUInt32(65536), toInt32(32767) != toUInt32(65536), toInt32(32767) < toUInt32(65536), toInt32(32767) <= toUInt32(65536), toInt32(32767) > toUInt32(65536), toInt32(32767) >= toUInt32(65536) , toUInt32(65536) = toUInt64(32767), toUInt32(65536) != toUInt64(32767), toUInt32(65536) < toUInt64(32767), toUInt32(65536) <= toUInt64(32767), toUInt32(65536) > toUInt64(32767), toUInt32(65536) >= toUInt64(32767), toUInt64(32767) = toUInt32(65536), toUInt64(32767) != toUInt32(65536), toUInt64(32767) < toUInt32(65536), toUInt64(32767) <= toUInt32(65536), toUInt64(32767) > toUInt32(65536), toUInt64(32767) >= toUInt32(65536) , toUInt32(65536) = toInt64(32767), toUInt32(65536) != toInt64(32767), toUInt32(65536) < toInt64(32767), toUInt32(65536) <= toInt64(32767), toUInt32(65536) > toInt64(32767), toUInt32(65536) >= toInt64(32767), toInt64(32767) = toUInt32(65536), toInt64(32767) != toUInt32(65536), toInt64(32767) < toUInt32(65536), toInt64(32767) <= toUInt32(65536), toInt64(32767) > toUInt32(65536), toInt64(32767) >= toUInt32(65536) , toInt32(65536) = toUInt16(32767), toInt32(65536) != toUInt16(32767), toInt32(65536) < toUInt16(32767), toInt32(65536) <= toUInt16(32767), toInt32(65536) > toUInt16(32767), toInt32(65536) >= toUInt16(32767), toUInt16(32767) = toInt32(65536), toUInt16(32767) != toInt32(65536), toUInt16(32767) < toInt32(65536), toUInt16(32767) <= toInt32(65536), toUInt16(32767) > toInt32(65536), toUInt16(32767) >= toInt32(65536) , toInt32(65536) = toInt16(32767), toInt32(65536) != toInt16(32767), toInt32(65536) < toInt16(32767), toInt32(65536) <= toInt16(32767), toInt32(65536) > toInt16(32767), toInt32(65536) >= toInt16(32767), toInt16(32767) = toInt32(65536), toInt16(32767) != toInt32(65536), toInt16(32767) < toInt32(65536), toInt16(32767) <= toInt32(65536), toInt16(32767) > toInt32(65536), toInt16(32767) >= toInt32(65536) , toInt32(65536) = toUInt32(32767), toInt32(65536) != toUInt32(32767), toInt32(65536) < toUInt32(32767), toInt32(65536) <= toUInt32(32767), toInt32(65536) > toUInt32(32767), toInt32(65536) >= toUInt32(32767), toUInt32(32767) = toInt32(65536), toUInt32(32767) != toInt32(65536), toUInt32(32767) < toInt32(65536), toUInt32(32767) <= toInt32(65536), toUInt32(32767) > toInt32(65536), toUInt32(32767) >= toInt32(65536) , toInt32(65536) = toInt32(32767), toInt32(65536) != toInt32(32767), toInt32(65536) < toInt32(32767), toInt32(65536) <= toInt32(32767), toInt32(65536) > toInt32(32767), toInt32(65536) >= toInt32(32767), toInt32(32767) = toInt32(65536), toInt32(32767) != toInt32(65536), toInt32(32767) < toInt32(65536), toInt32(32767) <= toInt32(65536), toInt32(32767) > toInt32(65536), toInt32(32767) >= toInt32(65536) , toInt32(65536) = toUInt64(32767), toInt32(65536) != toUInt64(32767), toInt32(65536) < toUInt64(32767), toInt32(65536) <= toUInt64(32767), toInt32(65536) > toUInt64(32767), toInt32(65536) >= toUInt64(32767), toUInt64(32767) = toInt32(65536), toUInt64(32767) != toInt32(65536), toUInt64(32767) < toInt32(65536), toUInt64(32767) <= toInt32(65536), toUInt64(32767) > toInt32(65536), toUInt64(32767) >= toInt32(65536) , toInt32(65536) = toInt64(32767), toInt32(65536) != toInt64(32767), toInt32(65536) < toInt64(32767), toInt32(65536) <= toInt64(32767), toInt32(65536) > toInt64(32767), toInt32(65536) >= toInt64(32767), toInt64(32767) = toInt32(65536), toInt64(32767) != toInt32(65536), toInt64(32767) < toInt32(65536), toInt64(32767) <= toInt32(65536), toInt64(32767) > toInt32(65536), toInt64(32767) >= toInt32(65536) , toUInt64(65536) = toUInt16(32767), toUInt64(65536) != toUInt16(32767), toUInt64(65536) < toUInt16(32767), toUInt64(65536) <= toUInt16(32767), toUInt64(65536) > toUInt16(32767), toUInt64(65536) >= toUInt16(32767), toUInt16(32767) = toUInt64(65536), toUInt16(32767) != toUInt64(65536), toUInt16(32767) < toUInt64(65536), toUInt16(32767) <= toUInt64(65536), toUInt16(32767) > toUInt64(65536), toUInt16(32767) >= toUInt64(65536) , toUInt64(65536) = toInt16(32767), toUInt64(65536) != toInt16(32767), toUInt64(65536) < toInt16(32767), toUInt64(65536) <= toInt16(32767), toUInt64(65536) > toInt16(32767), toUInt64(65536) >= toInt16(32767), toInt16(32767) = toUInt64(65536), toInt16(32767) != toUInt64(65536), toInt16(32767) < toUInt64(65536), toInt16(32767) <= toUInt64(65536), toInt16(32767) > toUInt64(65536), toInt16(32767) >= toUInt64(65536) , toUInt64(65536) = toUInt32(32767), toUInt64(65536) != toUInt32(32767), toUInt64(65536) < toUInt32(32767), toUInt64(65536) <= toUInt32(32767), toUInt64(65536) > toUInt32(32767), toUInt64(65536) >= toUInt32(32767), toUInt32(32767) = toUInt64(65536), toUInt32(32767) != toUInt64(65536), toUInt32(32767) < toUInt64(65536), toUInt32(32767) <= toUInt64(65536), toUInt32(32767) > toUInt64(65536), toUInt32(32767) >= toUInt64(65536) , toUInt64(65536) = toInt32(32767), toUInt64(65536) != toInt32(32767), toUInt64(65536) < toInt32(32767), toUInt64(65536) <= toInt32(32767), toUInt64(65536) > toInt32(32767), toUInt64(65536) >= toInt32(32767), toInt32(32767) = toUInt64(65536), toInt32(32767) != toUInt64(65536), toInt32(32767) < toUInt64(65536), toInt32(32767) <= toUInt64(65536), toInt32(32767) > toUInt64(65536), toInt32(32767) >= toUInt64(65536) , toUInt64(65536) = toUInt64(32767), toUInt64(65536) != toUInt64(32767), toUInt64(65536) < toUInt64(32767), toUInt64(65536) <= toUInt64(32767), toUInt64(65536) > toUInt64(32767), toUInt64(65536) >= toUInt64(32767), toUInt64(32767) = toUInt64(65536), toUInt64(32767) != toUInt64(65536), toUInt64(32767) < toUInt64(65536), toUInt64(32767) <= toUInt64(65536), toUInt64(32767) > toUInt64(65536), toUInt64(32767) >= toUInt64(65536) , toUInt64(65536) = toInt64(32767), toUInt64(65536) != toInt64(32767), toUInt64(65536) < toInt64(32767), toUInt64(65536) <= toInt64(32767), toUInt64(65536) > toInt64(32767), toUInt64(65536) >= toInt64(32767), toInt64(32767) = toUInt64(65536), toInt64(32767) != toUInt64(65536), toInt64(32767) < toUInt64(65536), toInt64(32767) <= toUInt64(65536), toInt64(32767) > toUInt64(65536), toInt64(32767) >= toUInt64(65536) , toInt64(65536) = toUInt16(32767), toInt64(65536) != toUInt16(32767), toInt64(65536) < toUInt16(32767), toInt64(65536) <= toUInt16(32767), toInt64(65536) > toUInt16(32767), toInt64(65536) >= toUInt16(32767), toUInt16(32767) = toInt64(65536), toUInt16(32767) != toInt64(65536), toUInt16(32767) < toInt64(65536), toUInt16(32767) <= toInt64(65536), toUInt16(32767) > toInt64(65536), toUInt16(32767) >= toInt64(65536) , toInt64(65536) = toInt16(32767), toInt64(65536) != toInt16(32767), toInt64(65536) < toInt16(32767), toInt64(65536) <= toInt16(32767), toInt64(65536) > toInt16(32767), toInt64(65536) >= toInt16(32767), toInt16(32767) = toInt64(65536), toInt16(32767) != toInt64(65536), toInt16(32767) < toInt64(65536), toInt16(32767) <= toInt64(65536), toInt16(32767) > toInt64(65536), toInt16(32767) >= toInt64(65536) , toInt64(65536) = toUInt32(32767), toInt64(65536) != toUInt32(32767), toInt64(65536) < toUInt32(32767), toInt64(65536) <= toUInt32(32767), toInt64(65536) > toUInt32(32767), toInt64(65536) >= toUInt32(32767), toUInt32(32767) = toInt64(65536), toUInt32(32767) != toInt64(65536), toUInt32(32767) < toInt64(65536), toUInt32(32767) <= toInt64(65536), toUInt32(32767) > toInt64(65536), toUInt32(32767) >= toInt64(65536) , toInt64(65536) = toInt32(32767), toInt64(65536) != toInt32(32767), toInt64(65536) < toInt32(32767), toInt64(65536) <= toInt32(32767), toInt64(65536) > toInt32(32767), toInt64(65536) >= toInt32(32767), toInt32(32767) = toInt64(65536), toInt32(32767) != toInt64(65536), toInt32(32767) < toInt64(65536), toInt32(32767) <= toInt64(65536), toInt32(32767) > toInt64(65536), toInt32(32767) >= toInt64(65536) , toInt64(65536) = toUInt64(32767), toInt64(65536) != toUInt64(32767), toInt64(65536) < toUInt64(32767), toInt64(65536) <= toUInt64(32767), toInt64(65536) > toUInt64(32767), toInt64(65536) >= toUInt64(32767), toUInt64(32767) = toInt64(65536), toUInt64(32767) != toInt64(65536), toUInt64(32767) < toInt64(65536), toUInt64(32767) <= toInt64(65536), toUInt64(32767) > toInt64(65536), toUInt64(32767) >= toInt64(65536) , toInt64(65536) = toInt64(32767), toInt64(65536) != toInt64(32767), toInt64(65536) < toInt64(32767), toInt64(65536) <= toInt64(32767), toInt64(65536) > toInt64(32767), toInt64(65536) >= toInt64(32767), toInt64(32767) = toInt64(65536), toInt64(32767) != toInt64(65536), toInt64(32767) < toInt64(65536), toInt64(32767) <= toInt64(65536), toInt64(32767) > toInt64(65536), toInt64(32767) >= toInt64(65536) 
DROP DICTIONARY table_function_dictionary_test_dictionary;
insert into 02681_undrop_log values 
drop table dest_table_mv;
INSERT INTO test_jit_nullable VALUES 
DROP DATABASE 2025_test_db;
CREATE DATABASE IF NOT EXISTS test_hnpaw5sw 
SELECT L1Distance(v, [0, 0, 0]) FROM vec1;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toInt32(3) END FROM system.numbers LIMIT 10;
EXPLAIN SYNTAX INSERT INTO test FROM INFILE 'data.file' WITH number AS x SELECT number FROM input('number UInt32');
SELECT CASE WHEN (number % 2) = 0 THEN [toInt64(1), toInt64(2)] WHEN (number % 3) = 0 THEN [toInt64(2), toInt64(3)] ELSE [toInt16(3), toInt16(3)] END FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/00999_join_on_expression.sql from pid=1715' 
CREATE TABLE test_7A682D29412B237E76627A5A2759547C2F5B6A773D523D4E7C4A556C396D49333E536525486E7E3E(x UInt8) Engine=Memory;
select intDiv(toInt128(-1), toUInt32(1)) x, intDiv(toInt256(-1), toUInt32(1)) y, toTypeName(x), toTypeName(y);
SELECT dummy IN (SELECT 0) FROM remote('127.0.0.1', system.one);
SELECT (k = 2) OR (k = 1) OR ((NULL OR 1) = k) FROM (SELECT 1 AS k);
SELECT 65536 AND 2147483647, throwIf((((1048575 AND throwIf((0. AND NULL) AND (((65536 AND 257) AND (1.1754943508222875e-38 AND 1024) AND -2147483649) AND NULL) AND (10 AND NULL)) AND (((65536 AND 257) AND (1.1754943508222875e-38 AND 1024) AND -1) AND NULL) AND 65535) AND -1) AND NULL) AND (NULL AND NULL), NULL < number) FROM numbers(10);
SELECT count(n) FROM defaults;
SELECT x + 1 FROM tab where plus(x, 1) <= toDateTime('2022-02-02') + 2 order by x;
select v, variantElement(v, 'Enum(''a'' = 1)') from format(TSV, 'v Variant(String, UInt32, Enum(''a'' = 1))', '\\N\nstring\na\n1\n2\naa') format TSV;
CREATE TABLE test_2E3C6F2B26557B262B79257842535F5B775833286B7958322832606B654D7A426A2D593A234F5331(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_7_991 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT count() FROM t_cnf_fuzz WHERE (c4 AND (NOT c8) AND (NOT c0) AND (NOT c0)) OR (c6 AND c1 AND (NOT c2) AND (NOT c7)) OR (c9 AND (NOT c8)) OR (c6 AND c2 AND (NOT c6)) OR (c0 AND c2 AND (NOT c1) AND (NOT c3) AND c6) OR (c6 AND (NOT c6) AND (NOT c1)) OR ((NOT c9) AND c4 AND c3 AND (NOT c3) AND (NOT c5)) OR ((NOT c2) AND (NOT c5) AND c4) OR ((NOT c4)) OR ((NOT c7)) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_01193_18429.table_10_186 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT DATE_FORMAT(toDateTime('2018-01-02 22:33:44'), '%D'), DATE_FORMAT(toDate32('2018-01-02'), '%D');
SELECT 'Running test stateless/01836_date_time_keep_default_timezone_on_operations_den_crane.sql from pid=1722' 
CREATE TABLE aggregating_merge_tree (`key` UInt32, `val` SimpleAggregateFunction(max, UInt32), `date` Datetime) ENGINE = AggregatingMergeTree PARTITION BY date ORDER BY key SETTINGS index_granularity = 30300, min_bytes_for_wide_part = 281321780, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 15968, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 788243, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 878983389, index_granularity_bytes = 24243420, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 63220, primary_key_compress_block_size = 81933
CREATE TABLE stripe10 ENGINE = StripeLog AS SELECT number AS x FROM system.numbers LIMIT 10;
SELECT format(NULL, NULL, NULL);
INSERT INTO test_table SELECT 5, '5';
SELECT 7, 1, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (7 < 13 AND 1 > 0 ? 7 : 0)), throwIf(last != (7 < 13 AND 1 > 0 ? least(13 - 1, 7 + 1 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 7, 1);
alter table many_mutations delete where y = 646 * 2 settings mutations_sync = 0;
SELECT materialize(3), substr(_table, 1, 10), s FROM merge('test_01155_ordinary', '') ORDER BY _table, s;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), toUInt32(1) < N as r FORMAT CSV;
SELECT addMonths(materialize('2023-10-22'), materialize(1)), addMonths(materialize('2023-10-22 12:34:56.123'), materialize(1));
SELECT extractTextFromHTML('Hello<!-- -->World');
INSERT INTO test_01193_18429.table_2_855 VALUES 
SELECT 'IN with non existing key and default value';
select ' 1:';
ALTER TABLE concurrent_alter_column ADD COLUMN c317 DOUBLE;
with (select currentDatabase()) as key_signed select *, ignore(key_signed) from cluster(test_cluster_two_shards, currentDatabase(), data_01756_signed, key) where key in (-1, -2);
INSERT INTO test_01193_18429.table_10_161 VALUES 
CREATE TABLE test_01193_18429.table_8_358 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT toDecimal32(12345.6789, 4) AS x, roundBankers(x), roundBankers(x, 1), roundBankers(x, 2), roundBankers(x, 3), roundBankers(x, 4), roundBankers(x, 5);
SELECT 'Running test stateless/02122_parallel_formatting_Markdown.sh from pid=1714' 
DROP DATABASE IF EXISTS test_24ix0r86 
CREATE TABLE test_01193_18429.table_4_439 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_4_508 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_4_496 VALUES 
SELECT 1 SETTINGS use_query_cache = true, enable_writes_to_query_cache = false, max_threads = 16;
INSERT INTO t_async_insert FORMAT ArrowStream 
select javaHash(toInt16(123));
INSERT INTO test_01193_18429.table_8_401 VALUES 
CREATE TABLE test_01193_18429.table_10_694 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE DATABASE IF NOT EXISTS test_7anszc7b 
CREATE TABLE test_40745A29267C6D38525D765B41642066747A3F486338363D4A477D6776556A52716638694B495A6C(x UInt8) Engine=Memory;
SELECT ngramSearch(NULL, NULL);
SELECT 34
DROP DATABASE IF EXISTS test_8o6567jy 
INSERT INTO distributed SELECT number FROM numbers(256) WHERE number < 128;
CREATE TABLE test_01193_18429.table_4_404 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_3_40 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_2A63506727286E36352C4B6F533F432B51624331334848583D482C7559727B3F2D656E2740577246(x UInt8) Engine=Memory;
CREATE TABLE IF NOT EXISTS 02703_keeper_map_concurrent_1 (key UInt64, value UInt64) ENGINE = KeeperMap('/02703_keeper_map/test_v80w9u9h') PRIMARY KEY(key)
select 0 = position('abc', materialize('de'));
SELECT age('minute', toDate32('1927-01-01', 'UTC'), toDateTime64('1927-01-02 00:00:00', 3, 'UTC'), 'UTC');
select 0 = multiSearchFirstIndexCaseInsensitive(materialize('EUzxPFYxMsJaTDzAKRXgZIVSFXU'), ['TDKAgICICjzBKHRqgFAuPCSODemldGGd', 'LvMluSJTIlgL', 'srbRhQKjPIchsipVHsjxwhK', 'vdurVsYkUWiFQVaDOnoNIJEX', 'UzZsZqAUNjMvWJaTqSWMHpzlDhVOaLzHPZfV', 'XcnnPXXEJJv', 'JSwFBNnYzNbIRZdeMfYiAfxzWfnCQFqoTUjns', 'HBMeqdLkrhebQeYfPzfJKAZgtuWHl', 'cMfSOnWgJvGhFPjgZdMBncnqdX', 'orDafpQXkrADEikyLVTHYmbVxtD', 'Vz', 'bfYwQkUC', 'q', 'YqomKpmYpHGv']) from system.numbers limit 10;
CREATE INDEX idx_tab3_5 ON tab3 (col1 DESC,col3 DESC);
CREATE TABLE test_01193_18429.table_8_428 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE DATABASE IF NOT EXISTS test_gibdikh1 
DROP DATABASE IF EXISTS test_zz099mn9 
SELECT toDecimal64(12345.6789, 4) AS x, round(x), round(x, 1), round(x, 2), round(x, 3), round(x, 4), round(x, 5);
SELECT * FROM ( SELECT ['left'] as ar, 42 AS left_number ) js1 FULL JOIN ( SELECT ['right'] as ar, 42 AS right_number ) js2 USING(ar) ORDER BY left_number;
SELECT count() FROM t_async_insert_empty_data
SELECT *, toTypeName(t1.id), toTypeName(t3.id) FROM t1_00848 t1 ANY LEFT JOIN t3_00848 t3 USING(id) ORDER BY t1.id, t3.id;
CREATE TABLE test_46707A3072262B456B245A26266F7E747B6C66576940445060246857745A485D466B2C4C6B354771(x UInt8) Engine=Memory;
select dictGet('regexp_dict3', 'tag', '/docs');
DROP TABLE 02176_test_simple_key_table;
DROP DATABASE IF EXISTS test_lywnzkb5 
select -3 as offset, 'Hello' as s, subString(bin(s), offset), bin(bitSlice(s, offset));
SELECT `x` FROM generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8)))))))))))', 1, 1, 1) LIMIT 1
SELECT normLp(NULL, NULL);
select (1 ? (toInt16(0) as i) : toUInt16(1)) = i;
CREATE TABLE test_01193_18429.table_2_196 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO sum_map_overflow VALUES 
SYSTEM STOP MERGES arrow_dicts
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (50 < 29 AND 14 > 0 ? 50 : 0)), throwIf(last != (50 < 29 AND 14 > 0 ? least(29 - 1, 50 + 14 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(29) LIMIT 50, 14);
SELECT multiIf((number % 2) = 0, [toUInt32(1), toUInt32(2)], (number % 3) = 0, [toInt32(2), toInt32(3)], [toInt64(3), toInt64(3)]) FROM system.numbers LIMIT 10;
INSERT INTO 01053_db.keys_table SELECT intHash64(number) FROM system.numbers LIMIT 700, 370;
CREATE TABLE test_395F7060304C3C675A7B776373374B463852237D74695A6847596C366C5347505C5C72213B41736B(x UInt8) Engine=Memory;
select '--- ASC NULLS LAST, DESC';
DROP DATABASE IF EXISTS memory_db;
SELECT multiIf((col1 % 2) = 0, [col2, col3], 1, ['foo', 'bar'], ['foo', 'bar']) FROM multi_if_check;
DROP DATABASE IF EXISTS test_nbrh5u7a 
INSERT INTO arr SELECT [], NULL, [[], [NULL], [NULL, 'Hello']];
SELECT x, txt FROM 02540_date WHERE txt == 'CAST(0 as Date)';
SELECT * FROM numbers(34630)
SELECT sum(number) FROM (SELECT number FROM test_parallel_replicas_automatic_count LIMIT 1_000_000) format Null
CREATE USER '02832_alter_max_sessions_user_26536' SETTINGS PROFILE '02832_alter_max_sessions_profile_26536'
DESCRIBE (SELECT value.value_0_level_0.value_0_level_1, value.value_0_level_0.value_1_level_1 FROM test_table);
SELECT toTypeName(x) FROM (SELECT toDecimal128('12345.00', 4) AS x UNION ALL SELECT toUInt16(0) AS x) WHERE x = 0;
DROP DATABASE IF EXISTS test_tp7ql1jt 
SELECT s, replaceAll(s, '_', 'o') AS a, REGEXP_REPLACE(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['._', '_._']) AS s);
CREATE TABLE enum_alter_issue (`a` Enum8('one' = 1, 'two' = 2), `b` Int) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_02012/enum_alter_issue', 'r1') ORDER BY a SETTINGS index_granularity = 1495, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 13408, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 14376521, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 62213, primary_key_compress_block_size = 18554
SELECT dictGet('test_01192.dict', '_part', toUInt64(1))
OPTIMIZE TABLE quorum1 PARTITION '2018-11-15' FINAL;
SELECT a, count() FROM low_null_float GROUP BY a ORDER BY count() desc, a LIMIT 10;
CREATE TABLE test_01193_18429.table_5_368 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'Running test stateless/01030_storage_hdfs_syntax.sql from pid=1715' 
SELECT extractURLParameter('ZiqSZeh?', '\0');
create view v2 as select * from d2;
CREATE DATABASE IF NOT EXISTS test_z5wqwjwj 
INSERT INTO test_01193_18429.table_6_761 VALUES 
DROP DATABASE IF EXISTS test_2we9kv3g 
SELECT _CAST('Hello,\tWorld', 'Nullable(String)')
SELECT toTypeName(CAST('a', 'Enum(\'a\' = 2, \'b\' = 127)'));
SELECT formatDateTime((SELECT materialize(date) FROM Dates), '%H%i%S', number % 2 ? 'America/Los_Angeles' : 'Europe/Amsterdam') FROM numbers(5);
SELECT 2, 0, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (2 < 13 AND 0 > 0 ? 2 : 0)), throwIf(last != (2 < 13 AND 0 > 0 ? least(13 - 1, 2 + 0 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 2, 0);
DROP DATABASE IF EXISTS test_mhxfxcl6 
CREATE TABLE test_01193_18429.table_3_889 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP TABLE IF EXISTS alter_table_7;
SELECT mapPopulateSeries(key, value, materialize(20)) FROM 02005_test_table;
SELECT 4294967295, -9223372036854775807, 4294967295 = -9223372036854775807, 4294967295 != -9223372036854775807, 4294967295 < -9223372036854775807, 4294967295 <= -9223372036854775807, 4294967295 > -9223372036854775807, 4294967295 >= -9223372036854775807, -9223372036854775807 = 4294967295, -9223372036854775807 != 4294967295, -9223372036854775807 < 4294967295, -9223372036854775807 <= 4294967295, -9223372036854775807 > 4294967295, -9223372036854775807 >= 4294967295 , toUInt32(4294967295) = toInt64(-9223372036854775807), toUInt32(4294967295) != toInt64(-9223372036854775807), toUInt32(4294967295) < toInt64(-9223372036854775807), toUInt32(4294967295) <= toInt64(-9223372036854775807), toUInt32(4294967295) > toInt64(-9223372036854775807), toUInt32(4294967295) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toUInt32(4294967295), toInt64(-9223372036854775807) != toUInt32(4294967295), toInt64(-9223372036854775807) < toUInt32(4294967295), toInt64(-9223372036854775807) <= toUInt32(4294967295), toInt64(-9223372036854775807) > toUInt32(4294967295), toInt64(-9223372036854775807) >= toUInt32(4294967295) , toUInt64(4294967295) = toInt64(-9223372036854775807), toUInt64(4294967295) != toInt64(-9223372036854775807), toUInt64(4294967295) < toInt64(-9223372036854775807), toUInt64(4294967295) <= toInt64(-9223372036854775807), toUInt64(4294967295) > toInt64(-9223372036854775807), toUInt64(4294967295) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toUInt64(4294967295), toInt64(-9223372036854775807) != toUInt64(4294967295), toInt64(-9223372036854775807) < toUInt64(4294967295), toInt64(-9223372036854775807) <= toUInt64(4294967295), toInt64(-9223372036854775807) > toUInt64(4294967295), toInt64(-9223372036854775807) >= toUInt64(4294967295) , toInt64(4294967295) = toInt64(-9223372036854775807), toInt64(4294967295) != toInt64(-9223372036854775807), toInt64(4294967295) < toInt64(-9223372036854775807), toInt64(4294967295) <= toInt64(-9223372036854775807), toInt64(4294967295) > toInt64(-9223372036854775807), toInt64(4294967295) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toInt64(4294967295), toInt64(-9223372036854775807) != toInt64(4294967295), toInt64(-9223372036854775807) < toInt64(4294967295), toInt64(-9223372036854775807) <= toInt64(4294967295), toInt64(-9223372036854775807) > toInt64(4294967295), toInt64(-9223372036854775807) >= toInt64(4294967295) 
CREATE TABLE test_02908_r3_84 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_84', 'r3') ORDER BY tuple()
DROP TABLE test_collation;
select count(ignore(*)) from data_02051 settings min_bytes_to_use_direct_io=1, local_filesystem_read_method='read', local_filesystem_read_prefetch=0, read_priority=0, max_read_buffer_size=1048576 ;
INSERT into argmaxstate_hex_empty VALUES 
select ' ---- select row with nulls without states ---- ';
DROP DATABASE IF EXISTS test_m517tcmk 
CREATE DATABASE IF NOT EXISTS test_kd5qpt7i 
CREATE TABLE test_4F6C3A34593D437C4E417534267D7B494740727B722F2A2B4140782D6421756B3D502243715C7964(x UInt8) Engine=Memory;
SELECT argMax(number, now() + number) FROM (Select number as number from numbers(10, 10000)) settings max_threads=1, max_block_size=20000;
SELECT array(-1);
SELECT toDecimal128OrDefault ('1.1111111111111111111111111111111111111', 4);
DROP DATABASE IF EXISTS test_7hr2yh2j 
SELECT toFloat32(9999999) as x, toDecimal32(x, 0), toDecimal32(-x, 0), toDecimal64(x, 0), toDecimal64(-x, 0);
WITH 'UTC' as timezone SELECT timezone, timeZoneOf(now64(3, timezone)) == timezone;
CREATE TABLE test_01193_18429.table_6_775 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP DATABASE IF EXISTS test_5r3jvrw2 
CREATE TABLE test_64384F6576272C4A35647E72295970405D3933564B3A79226B413658737B794B4D20424F732F592D(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_10_723 VALUES 
select round(1000 * ngramSearchCaseInsensitiveUTF8(materialize('ÃÂ°ÃÂ±ÃÂ²'), '')) from system.numbers limit 5;
DROP DATABASE IF EXISTS test_fczjqkv5 
/* not existing column */ SELECT hasColumnInTable(currentDatabase(), 'has_column_in_table', 'nest');
DROP TABLE IF EXISTS test_dictionary_view;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt16(1) WHEN (number % 3) = 0 THEN toInt64(2) ELSE toUInt16(3) END FROM system.numbers LIMIT 10;
desc s3Cluster('test_cluster_one_shard_three_replicas_localhost', 'http://localhost:11111/test/{a,b}.tsv', 'auto');
SELECT SUM(trades.price - tvs.tv) FROM (SELECT k, t, t as price FROM (SELECT toUInt32(number) AS k FROM numbers(1000)) keys CROSS JOIN (SELECT toUInt32(number * 10) AS t FROM numbers(3000)) trade_times) trades ASOF LEFT JOIN tvs USING(k,t);
CREATE TABLE with_fill_date (d Date, d32 Date32) ENGINE = Memory;
WITH x -> x + 1 AS lambda SELECT arrayMap(lambda, [1,2,3]);
SELECT count() FROM t_cnf_fuzz WHERE (c1 AND (NOT c7) AND c5 AND c5) OR ((NOT c3) AND (NOT c0) AND c6 AND c8) OR (c4 AND c6 AND (NOT c8) AND (NOT c4) AND (NOT c6)) OR (c5 AND c6 AND (NOT c3)) SETTINGS convert_query_to_cnf = 1
CREATE TABLE test_01193_18429.table_4_444 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT EventDate FROM ( SELECT EventDate FROM tracking_events_tmp AS t1 WHERE (EventDate >= toDate('2020-07-10')) AND (EventDate <= toDate('2020-07-11')) AND (APIKey = 2) GROUP BY EventDate ) FULL OUTER JOIN ( SELECT EventDate FROM remote('127.0.0.{1,3}', currentDatabase(), open_events_tmp) AS t2 WHERE (EventDate >= toDate('2020-07-10')) AND (EventDate <= toDate('2020-07-11')) AND (APIKey = 2) GROUP BY EventDate WITH TOTALS ) USING EventDate ORDER BY EventDate settings totals_mode = 'after_having_auto', group_by_overflow_mode = 'any', max_rows_to_group_by = 10000000, joined_subquery_requires_alias=0;
select 1 = multiMatchAny(materialize('a\0bc'), ['a.bc']) from system.numbers limit 10;
INSERT INTO test_01193_18429.table_2_196 VALUES 
CREATE TABLE test_6954372E652F6A672B7B54695F4C76283D3F712D613C4177204F77527C785B3A4874682B605E3D4B(x UInt8) Engine=Memory;
CREATE TABLE t_random_1 ( `ordinary_1` UInt32 ) ENGINE = GenerateRandom(1, 5, 3);
select parseDateTime('jun', '%b', 'UTC') = toDateTime('2000-06-01', 'UTC');
INSERT INTO t_subcolumns_sizes FORMAT JSONEachRow 
CREATE TABLE test_alias (a UInt8 ALIAS b, b UInt8) ENGINE Log;
CREATE TABLE test_01193_18429.table_1_894 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_444F4D306D3C403B283D7A4E364C2E7D5176336F414F2F2D6A2E677675685A4A3A40623721424A65(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_zgnmg0k1 
CREATE TABLE test_2D7B693E4F363C234E3A643A255B24784E6B3C33214C4D45495A532B5A702574633F7164343B6375(x UInt8) Engine=Memory;
SELECT 'after row policy with plaintext_password';
CREATE TABLE test_73514D7C7A506D5D7A746352655E6E224B3E4123325E43734E6B587B76576C5A2746617C4257606F(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_7_638 VALUES 
DROP DATABASE IF EXISTS test_n991ew27 
CREATE TABLE test_01193_18429.table_8_635 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT COUNT() == 1 FROM test_index WHERE key_uint32 = 1;
SELECT 'tn1 ALL FULL JOIN USING t2 | bs = 5';
SELECT 'Running test stateless/01323_redundant_functions_in_order_by.sql from pid=1713' 
SELECT 'Running test stateless/02454_json_object_each_row_column_for_object_name.sql from pid=1705' 
CREATE TABLE t3 ( `n` Int8 ) ENGINE = Log COMMENT 'this is a Log table';
INSERT INTO test_startsWith (a) values 
SELECT CASE WHEN (col1 % 2) = 0 THEN toFixedString(col2, 16) WHEN (col1 % 3) = 0 THEN toFixedString('bar', 16) ELSE 'baz' END FROM multi_if_check;
select (toInt128(-1) - toUInt64(1)) x, (toInt256(-1) - toUInt64(1)) y, toTypeName(x), toTypeName(y);
SELECT name FROM system.build_options WHERE name like 'USE_%' AND value in ('ON', '1') 
create table child3 (id int, pid int, primary key(id), foreign key(pid) references parent(pid) on delete cascade on update restrict) engine MergeTree;
SELECT 'Running test stateless/00732_quorum_insert_select_with_old_data_and_without_quorum_zookeeper_long.sql from pid=1720' 
EXPLAIN PLAN actions = 1 SELECT toStartOfMinute(t) AS s, c1 FROM t_order_by_monotonic AS test ORDER BY s
CREATE TABLE test_01193_18429.table_7_375 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_2_325 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO r1 SELECT 97
INSERT INTO 02918_table_str SELECT * FROM fuzzJSON( 02918_json_fuzzer, json_str='{"name": "John Doe", "age": 30, "address": {"city": "Citiville", "zip": "12345"}, "hobbies": ["reading", "traveling", "coding"]}', random_seed=6666, reuse_output=1, probability=0.5, max_output_length=65536, max_nesting_level=18446744073709551615, max_array_size=18446744073709551615, max_object_size=18446744073709551615, max_key_length=65536, max_string_value_length=65536) LIMIT 100;
SELECT * FROM m WHERE f = 0 SETTINGS optimize_move_to_prewhere=0;
INSERT INTO test_01193_18429.table_9_268 VALUES 
CREATE TABLE tt_m (a UInt32, b UInt32) ENGINE = Merge(currentDatabase(), 'tt1|tt2|tt3|tt4');
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (26 < 34 AND 88 > 0 ? 26 : 0)), throwIf(last != (26 < 34 AND 88 > 0 ? least(34 - 1, 26 + 88 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(34) LIMIT 26, 88);
SELECT count() = sum(v) FROM replacing_00155 where x % 3 == 0 and x < 8192
SELECT transform(null, [null, null, null], [null, null, null], null) FROM system.numbers LIMIT 10;
SELECT n1.number, n2.number, n3.number FROM numbers(2) AS n1, numbers(3) AS n2, numbers(4) AS n3 ORDER BY n1.number, n2.number, n3.number;
INSERT INTO t0 SELECT sipHash64(number), randomPrintableASCII(1000) FROM numbers(1000)
DROP DATABASE IF EXISTS test_mmkymkur 
CREATE DATABASE IF NOT EXISTS test_e29y0gcw 
SET allow_experimental_object_type = 1;
SELECT 'Running test stateless/01132_max_rows_to_read.sql from pid=1722' 
CREATE TABLE test_35672026292B796B254E63586C3B213C675C71607B3B697B644B592B54594A24385044532B663421(x UInt8) Engine=Memory;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 45065, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT 'Running test stateless/00539_functions_for_working_with_json.sql from pid=1718' 
CREATE TABLE range_dictionary_array_source_table ( key UInt64, start_date Date, end_date Date, array_value Array(Int64) ) ENGINE = TinyLog;
EXPLAIN PIPELINE SELECT * FROM data FINAL WHERE v1 >= now() - INTERVAL 180 DAY SETTINGS max_threads=2, max_final_threads=2, force_data_skipping_indices='v1_index', use_skip_indexes_if_final=0 FORMAT LineAsString;
DROP TABLE map_containsKeyLike_test;
CREATE TABLE test_01193_18429.table_4_403 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
WITH 'CREATE TABLE test_01193_18429.table_5_' AS create1, ' (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=' AS create2, ['Memory', 'File(CSV)', 'Log', 'StripeLog', 'MergeTree ORDER BY i'] AS engines, 'INSERT INTO test_01193_18429.table_5_' AS insert1, ' VALUES (0, ''2020-06-25'', ''hello'', [1, 2], [3, 4]), (1, ''2020-06-26'', ''word'', [10, 20], [30, 40])' AS insert2 SELECT arrayStringConcat( groupArray( create1 || toString(number) || create2 || engines[1 + number % length(engines)] || ';\n' || insert1 || toString(number) || insert2 ), ';\n') FROM numbers(1000) SETTINGS max_bytes_before_external_group_by = 0 FORMAT TSVRaw;
drop table r;
SELECT 'SELECT * FROM merge(currentDatabase(), 02763_merge_merge) WHERE x>1 -- with y>12';
INSERT INTO test_01193_18429.table_10_560 VALUES 
SELECT '5', peak_threads_usage, (select count() from system.query_thread_log WHERE system.query_thread_log.query_id = '02871_1_215652_5' AND current_database = currentDatabase()) = length(thread_ids), length(thread_ids) >= peak_threads_usage FROM system.query_log WHERE type = 'QueryFinish' AND query_id = '02871_1_215652_5' AND current_database = currentDatabase()
CREATE DATABASE IF NOT EXISTS test_t14s1esx 
CREATE DATABASE IF NOT EXISTS test_1ugsx698 
SELECT toNullable(toDecimal32(32, 0)) AS x, assumeNotNull(x);
DROP TABLE IF EXISTS 02428_otel_traces
CREATE TABLE test_01193_18429.table_6_644 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
ALTER TABLE concurrent_alter_column ADD COLUMN c60 DOUBLE;
DROP TABLE IF EXISTS r_prop_table1;
SELECT map(toFixedString('1',1),1) AS m, m[toFixedString('1',1)],m[toFixedString('1',2)];
CREATE TABLE root (`d` UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/00633_materialized_view_and_too_many_parts_zookeeper_test_v38tglw3/root', '1') ORDER BY d SETTINGS index_granularity = 62634, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 11276, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 23154231, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 40425, primary_key_compress_block_size = 31489
SELECT count() FROM decimal WHERE d IS NULL;
SELECT COUNT() FROM bloom_filter_array_lc_null_types_test WHERE has(str, NULL);
CREATE DATABASE IF NOT EXISTS test_fp1q0b9b 
SELECT 'Running test stateless/01702_bitmap_native_integers.sql from pid=1726' 
DROP TABLE fct_rt_dc_shop_sku_vender_day;
SELECT argMin((n, n), n) t, toTypeName(t) FROM (SELECT if(number % 5 == 0, NULL, number) as n from numbers(5, 10));
SELECT 'Running test stateless/02907_backup_mv_with_no_source_table.sh from pid=1722' 
CREATE TABLE test_305C3F756864312640274A23422B353024542E74437A70266F736D46675751202240345965782F4D(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_1yrqxa8p 
DROP TABLE IF EXISTS dst;
SELECT 0, 0, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (0 < 13 AND 0 > 0 ? 0 : 0)), throwIf(last != (0 < 13 AND 0 > 0 ? least(13 - 1, 0 + 0 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 0, 0);
DROP DATABASE IF EXISTS test_9o65537e 
SELECT nullIf(number, 4) IN (SELECT nullIf(number, 2) FROM system.numbers LIMIT 1, 3) AS res FROM system.numbers LIMIT 5;
INSERT INTO dictionary_nullable_source_table VALUES 
CREATE TABLE test_01193_18429.table_9_893 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_10_353 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT COUNT(*) FROM system.quotas WHERE name = '2884_quota_215526'
INSERT INTO src_0 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 72
drop table if exists optimize_sorting sync
CREATE INDEX idx_tab2_0 ON tab2 (col1,col4 DESC,col3);
SELECT 'on';
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (39 < 96 AND 41 > 0 ? 39 : 0)), throwIf(last != (39 < 96 AND 41 > 0 ? least(96 - 1, 39 + 41 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(96) LIMIT 39, 41);
CREATE TABLE 02162_test_table ( id UInt64, value String, range_value UInt64 ) ENGINE=TinyLog;
SELECT JSONExtractRaw(NULL, NULL, NULL);
CREATE TABLE test_386F7635732B6F4348585828644C4F68682E7733262E783D2C6C222C792350513450507D4B683D77(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_k9mvk3dk 
CREATE TABLE test_2D4D51742F215C3F6B352F787374483D74213C21413C7D712D5D6D617B5E4175713B2160296F7E63(x UInt8) Engine=Memory;
SELECT cityHash64(CAST(NULL AS Nullable(UInt64)));
ALTER TABLE replicated_alter1 ADD COLUMN n.s Array(String), ADD COLUMN n.d Array(Date);
DROP DATABASE IF EXISTS test_ny0m33h7 
CREATE TABLE test (`c_id` String, `p_id` String, `d` UInt32) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test/test_table', '1') ORDER BY (c_id, p_id) SETTINGS index_granularity = 28291, min_bytes_for_wide_part = 1025320152, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 7336, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 31, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 21050313, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 34905, primary_key_compress_block_size = 51772
CREATE TABLE source_null AS source ENGINE=Null;
select toDateTime64OrDefault('Aaaa e a.a.aaaaaaaaa', 9, 'UTC');
INSERT INTO test_01193_18429.table_5_622 VALUES 
CREATE TABLE test_01193_18429.table_1_890 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT subtractHours(materialize('2023-10-22'), 1), subtractHours(materialize('2023-10-22 12:34:56.123'), 1);
SELECT materialize(toDateTime('2000-01-01 00:00:00', 'Asia/Istanbul')) AS x, toDate('2000-01-02') AS y, 0 ? x : y AS z;
CREATE TABLE test_334D69616C526736444A3161615D51455E6F252C3C43332E2D655E3B73685454315C3D6F43766F26(x UInt8) Engine=Memory;
SELECT generateULID();
SELECT ngramDistance(NULL, NULL);
SELECT lon/5 - 40 AS lon1, lat/5 - 20 AS lat1, lon1 AS lon2, lat1 AS lat2, geohashesInBox(lon1, lat1, lon2, lat2, 12) AS g FROM (SELECT arrayJoin(range(80*5)) AS lon, arrayJoin(range(10*5)) AS lat) WHERE length(g) != 1;
insert into test_02245_s3_nested_arrow2 values 
SELECT stddevSampStable(-1);
SELECT '(0, C) id = 11', count() FROM (SELECT id, sequenceNextNode('forward', 'head')(dt, action, 1, action = 'C') AS next_node FROM test_sequenceNextNode_Nullable WHERE id = 11 GROUP BY id HAVING next_node = 'D');
CREATE DATABASE IF NOT EXISTS test_lyaddfhw 
DROP DATABASE IF EXISTS test_rd608tcj 
SELECT 'INITIALIZING DICTIONARY';
ALTER TABLE dst_2 MODIFY SETTING max_replicated_merges_in_queue=0
SELECT 1 AS a UNION ALL SELECT 1 AS b;
SELECT [CAST('abc' AS LowCardinality(String)), CAST('def' AS FixedString(3))];
INSERT INTO test_01193_18429.table_9_19 VALUES 
select 'dictGet', 'hashed_strings' as dict_name, toUInt64(1) as k, dictGet(dict_name, 'str', k), dictGet(dict_name, ('str'), k);
CREATE TABLE test_01193_18429.table_2_180 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
ATTACH TABLE compression_codec;
CREATE TABLE test5 (`a` UInt32, `b` Int64) ENGINE = MergeTree PARTITION BY (a, b) ORDER BY tuple() SETTINGS index_granularity = 36046, min_bytes_for_wide_part = 225511602, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 6, merge_max_block_size = 14961, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 11220378, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 88109, primary_key_compress_block_size = 48201
INSERT INTO test_01193_18429.table_3_148 VALUES 
INSERT INTO test_01193_18429.table_3_745 VALUES 
CREATE TABLE test_01193_18429.table_8_959 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_02908_r2_283 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_283', 'r2') ORDER BY tuple()
DROP TABLE IF EXISTS table_set;
SELECT toNullable(toString(number)) as nullable2 FROM numbers(5) FORMAT CapnProto SETTINGS format_schema='/usr/share/clickhouse-test/queries/0_stateless/format_schemas/02030_capnp_fake_nullable:Message'
DROP TABLE r1
INSERT INTO test_01193_18429.table_6_362 VALUES 
DROP DATABASE IF EXISTS test_ozgb710d 
SELECT ngramMinHash(NULL, NULL);
SELECT toUInt32(0) AS x, toUInt16(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
CREATE TABLE tab1 (`x` UInt32, `y` UInt32, `shard` UInt32) ENGINE = MergeTree ORDER BY shard SETTINGS index_granularity = 35188, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.36169716715812683, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 11545, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 5867478, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 36431, primary_key_compress_block_size = 28848
SELECT CASE WHEN 1 THEN [col2, 'bar'] WHEN 1 THEN ['foo', col5] ELSE [col6, 'bar'] END FROM multi_if_check;
CREATE INDEX idx_tab2_0 ON tab2 (col4,col1 DESC);
SHOW TABLES FROM test_yuucdz58
SET optimize_arithmetic_operations_in_aggregate_functions = 1;
SELECT domainRFC('http:/paul/example/com') AS Host;
SELECT 13 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'val', tuple(IPv4StringToNum('255.254.0.0')))
SELECT max2(NULL, NULL);
select if(number % 5 == 0, toFloat64OrZero(toString(number)), toFloat64OrZero(toString(number + 1))) from numbers(20);
INSERT INTO test_01193_18429.table_6_149 VALUES 
drop database if exists 02911_support_alias_column_in_indices;
desc format(JSONEachRow, '{"obj" : {"a" : {}}}, {"obj" : {"a" : {"b" : {"c" : 10}}}}');
CREATE TABLE test_71302B7C4C3955296239287B596964757A2D7C7E772D392E263A2D3D623E5D33516647615C4B592B(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS alter_bad_codec;
DROP DATABASE IF EXISTS test_ci80dxwt 
CREATE TABLE test_02908_r3_106 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_106', 'r3') ORDER BY tuple()
select 2 
SELECT xxh3(NULL, NULL);
CREATE TABLE test_01193_18429.table_7_713 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT '4 days test in batch comparing with manually computation result for Asia/Tehran:';
SELECT nothingUInt64ArrayIf([NULL], 0) AS x FROM remote('127.0.0.{1,2}', numbers(3));
SELECT toRelativeSecondNum(toDateTime(1412106600), 'Asia/Tokyo') - toRelativeSecondNum(toDateTime(0), 'Asia/Tokyo');
select sipHash64Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22)) == sipHash64(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22));
DROP TABLE IF EXISTS tableFile_00968;
drop table if exists t_avro_10
SELECT concat('With ', materialize('foo' :: LowCardinality(String)));
DROP TABLE t10;
CREATE TABLE test_wide_not_nested (`id` Int, `info.id` Int, `info.name` String, `info.age` Int) ENGINE = MergeTree ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0, index_granularity = 24944, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 16820, prefer_fetch_merged_part_size_threshold = 5484591099, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 37, min_merge_bytes_to_use_direct_io = 6038367040, index_granularity_bytes = 7713717, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 98312, primary_key_compress_block_size = 26175
SELECT CASE WHEN (number % 2) = 0 THEN [toInt8(1), toInt8(2)] WHEN (number % 3) = 0 THEN [toUInt32(2), toUInt32(3)] ELSE [toFloat32(3), toFloat32(3)] END FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_dxkcaa5m 
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toUInt32(2), toUInt32(3)] ELSE [toUInt8(3), toUInt8(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_5C2A6450623235392C284B6476266E355F75653E465672277B6E766540242F3D3555727A48514B4B(x UInt8) Engine=Memory;
CREATE QUOTA q12_01297 KEYED BY 'client key or ip address';
SELECT count(), max(x), avg(length(s)) FROM file('/var/lib/clickhouse/user_files/test_ppeg0s5q/gz_1.gz', 'TabSeparated', 'x UInt32, s String')
SELECT parseDateTimeBestEffort('Dec 15, 2021', 'UTC') AS a, toTypeName(a);
SELECT arrayAll(x -> 1, arrayMap(x -> toString(x), range(number))) FROM system.numbers LIMIT 10;
ALTER TABLE concurrent_alter_column ADD COLUMN c112 DOUBLE;
DROP TABLE bug
SELECT hasTokenCaseInsensitive(NULL, NULL);
CREATE TABLE test_01193_18429.table_7_596 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT CASE WHEN (col1 % 2) = 0 THEN ['foo', 'bar'] WHEN (col1 % 3) = 0 THEN ['foo', col5] ELSE ['foo', col7] END FROM multi_if_check;
CREATE TABLE test_63533B77612E52265E383837472A7C77423B374E3B442259655666584F5D38585A762F4A61693051(x UInt8) Engine=Memory;
SELECT a, b FROM t_fixed_prefix WHERE bitNot(a) = 1 AND bitNot(c) = 1 ORDER BY a, b SETTINGS optimize_read_in_order = 0
CREATE DATABASE IF NOT EXISTS test_rztdptjj 
SELECT anyLast_respect_nulls('');
INSERT INTO test_01193_18429.table_6_995 VALUES 
SELECT bitmapCardinality(day_today) AS today_users, bitmapCardinality(day_before) AS before_users, bitmapCardinality(bitmapOr(day_today, day_before)) AS ll_users, bitmapCardinality(bitmapAnd(day_today, day_before)) AS old_users, bitmapCardinality(bitmapAndnot(day_today, day_before)) AS new_users, bitmapCardinality(bitmapXor(day_today, day_before)) AS diff_users FROM ( SELECT city_id, groupBitmapState(uid) AS day_today FROM group_bitmap_data_test WHERE pickup_date = '2019-01-02' GROUP BY uid, city_id ) AS js1 ALL LEFT JOIN ( SELECT city_id, groupBitmapState(uid) AS day_before FROM group_bitmap_data_test WHERE pickup_date = '2019-01-01' GROUP BY city_id ) AS js2 USING (city_id) ORDER BY today_users, before_users, ll_users, old_users, new_users, diff_users;
INSERT INTO test_z516s93g.local_01099_b (number) VALUES
CREATE VIEW view AS SELECT toInt64(n) as n FROM (SELECT toString(n) as n from merge WHERE _table != 'qwerty' ORDER BY _table) UNION ALL SELECT * FROM file;
DROP DATABASE IF EXISTS test_fv67jgzd 
SELECT count() FROM decimal WHERE d1 = toDecimal32('4.2', 8);
CREATE TABLE test_01193_18429.table_10_444 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT * FROM enum_as_num ORDER BY Id;
CREATE TABLE test_01193_18429.table_1_617 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT tupleConcat((1, 'y'), (2, 'n'));
SELECT sum((1 AS m) - (uint64 AS n)) j from test_table;
DROP TABLE IF EXISTS test_r2;
SELECT max(-1);
ALTER TABLE concurrent_alter_column ADD COLUMN c384 DOUBLE;
OPTIMIZE TABLE ttl_table3 FINAl
CREATE TABLE test_5B7772644D38744058323F435F3D72765D237B534241216C6F7867364F343D2A7A784B5E7623593B(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_nr24ldnq 
SELECT arrayJoin(CAST(['hello', 'world'] AS Array(FixedString(5)))) LIKE 'hello';
SELECT 'Running test stateless/00975_sample_prewhere_distributed.sql from pid=1714' 
SELECT `x` FROM generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8))))))))))))))))))))))))', 1, 1, 1) LIMIT 1
SELECT 'Running test stateless/01043_categorical_iv.sql from pid=1724' 
select 'dst_to_src', 13, 'src', type, n, _part from src order by type, n
select transform(2, [1,2], [9,1], null);
DROP DATABASE IF EXISTS test_2g49hbch 
DETACH TABLE test_hklfjq8i.tablefunc04
SELECT sipHash64(-1);
CREATE TABLE test_02908_r2_8 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_8', 'r2') ORDER BY tuple()
CREATE TABLE test_02908_r1_216 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_216', 'r1') ORDER BY tuple()
insert into test_02293 select number, 'String', [(range(number % 3), 'String'), (range(number % 4), 'gnirtS')] from numbers(5) settings max_block_size=2
select count(), sum(number) from file('02841.parquet') where indexHint(date32 between '1992-01-01' and '2023-08-02');
DROP TABLE IF EXISTS t_s3_filter_02495;
INSERT INTO ws FORMAT RowBinary
SELECT toUInt16(0), bitPositionsToArray(toUInt16(0));
CREATE TABLE test_01193_18429.table_9_635 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_73535826687E2E6B6A22486D38626673305D6B22315F3A445F5A562D702A5146794A5D5B24476460(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS 02713_seqt;
insert into mult_tab select '2018-01-31', number, number + 128, 0, if(number < 64, -1, 1) from system.numbers limit 128;
CREATE DATABASE IF NOT EXISTS test_qf27ko4p 
DROP DATABASE IF EXISTS test_holn7q2v 
OPTIMIZE TABLE weird_partitions_02245;
INSERT INTO test_01193_18429.table_5_484 VALUES 
select if(number = 0, 0, toDecimal32(42, 2) / number) from numbers(5);
SELECT multiIf((number % 2) = 0, [toInt64(1), toInt64(2)], (number % 3) = 0, [toUInt16(2), toUInt16(3)], [toUInt8(3), toUInt8(3)]) FROM system.numbers LIMIT 10;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c5) AND (NOT c9) AND c5 AND c3 AND c5) SETTINGS convert_query_to_cnf = 0
SELECT max(val), count(*) FROM with_lonely FINAL;
CREATE TABLE test_01193_18429.table_3_144 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT * FROM 01914_db.dictionary_2;
SELECT (SELECT toIntervalSecond(5)) AS interval, toDateTime('2017-01-01 00:00:00') + interval AS res;
SELECT '1', '1152921504606846976.000000000', 1 = 1152921504606846976.000000000, 1 != 1152921504606846976.000000000, 1 < 1152921504606846976.000000000, 1 <= 1152921504606846976.000000000, 1 > 1152921504606846976.000000000, 1 >= 1152921504606846976.000000000, 1152921504606846976.000000000 = 1, 1152921504606846976.000000000 != 1, 1152921504606846976.000000000 < 1, 1152921504606846976.000000000 <= 1, 1152921504606846976.000000000 > 1, 1152921504606846976.000000000 >= 1 , toUInt8(1) = 1152921504606846976.000000000, toUInt8(1) != 1152921504606846976.000000000, toUInt8(1) < 1152921504606846976.000000000, toUInt8(1) <= 1152921504606846976.000000000, toUInt8(1) > 1152921504606846976.000000000, toUInt8(1) >= 1152921504606846976.000000000, 1152921504606846976.000000000 = toUInt8(1), 1152921504606846976.000000000 != toUInt8(1), 1152921504606846976.000000000 < toUInt8(1), 1152921504606846976.000000000 <= toUInt8(1), 1152921504606846976.000000000 > toUInt8(1), 1152921504606846976.000000000 >= toUInt8(1) , toInt8(1) = 1152921504606846976.000000000, toInt8(1) != 1152921504606846976.000000000, toInt8(1) < 1152921504606846976.000000000, toInt8(1) <= 1152921504606846976.000000000, toInt8(1) > 1152921504606846976.000000000, toInt8(1) >= 1152921504606846976.000000000, 1152921504606846976.000000000 = toInt8(1), 1152921504606846976.000000000 != toInt8(1), 1152921504606846976.000000000 < toInt8(1), 1152921504606846976.000000000 <= toInt8(1), 1152921504606846976.000000000 > toInt8(1), 1152921504606846976.000000000 >= toInt8(1) , toUInt16(1) = 1152921504606846976.000000000, toUInt16(1) != 1152921504606846976.000000000, toUInt16(1) < 1152921504606846976.000000000, toUInt16(1) <= 1152921504606846976.000000000, toUInt16(1) > 1152921504606846976.000000000, toUInt16(1) >= 1152921504606846976.000000000, 1152921504606846976.000000000 = toUInt16(1), 1152921504606846976.000000000 != toUInt16(1), 1152921504606846976.000000000 < toUInt16(1), 1152921504606846976.000000000 <= toUInt16(1), 1152921504606846976.000000000 > toUInt16(1), 1152921504606846976.000000000 >= toUInt16(1) , toInt16(1) = 1152921504606846976.000000000, toInt16(1) != 1152921504606846976.000000000, toInt16(1) < 1152921504606846976.000000000, toInt16(1) <= 1152921504606846976.000000000, toInt16(1) > 1152921504606846976.000000000, toInt16(1) >= 1152921504606846976.000000000, 1152921504606846976.000000000 = toInt16(1), 1152921504606846976.000000000 != toInt16(1), 1152921504606846976.000000000 < toInt16(1), 1152921504606846976.000000000 <= toInt16(1), 1152921504606846976.000000000 > toInt16(1), 1152921504606846976.000000000 >= toInt16(1) , toUInt32(1) = 1152921504606846976.000000000, toUInt32(1) != 1152921504606846976.000000000, toUInt32(1) < 1152921504606846976.000000000, toUInt32(1) <= 1152921504606846976.000000000, toUInt32(1) > 1152921504606846976.000000000, toUInt32(1) >= 1152921504606846976.000000000, 1152921504606846976.000000000 = toUInt32(1), 1152921504606846976.000000000 != toUInt32(1), 1152921504606846976.000000000 < toUInt32(1), 1152921504606846976.000000000 <= toUInt32(1), 1152921504606846976.000000000 > toUInt32(1), 1152921504606846976.000000000 >= toUInt32(1) , toInt32(1) = 1152921504606846976.000000000, toInt32(1) != 1152921504606846976.000000000, toInt32(1) < 1152921504606846976.000000000, toInt32(1) <= 1152921504606846976.000000000, toInt32(1) > 1152921504606846976.000000000, toInt32(1) >= 1152921504606846976.000000000, 1152921504606846976.000000000 = toInt32(1), 1152921504606846976.000000000 != toInt32(1), 1152921504606846976.000000000 < toInt32(1), 1152921504606846976.000000000 <= toInt32(1), 1152921504606846976.000000000 > toInt32(1), 1152921504606846976.000000000 >= toInt32(1) , toUInt64(1) = 1152921504606846976.000000000, toUInt64(1) != 1152921504606846976.000000000, toUInt64(1) < 1152921504606846976.000000000, toUInt64(1) <= 1152921504606846976.000000000, toUInt64(1) > 1152921504606846976.000000000, toUInt64(1) >= 1152921504606846976.000000000, 1152921504606846976.000000000 = toUInt64(1), 1152921504606846976.000000000 != toUInt64(1), 1152921504606846976.000000000 < toUInt64(1), 1152921504606846976.000000000 <= toUInt64(1), 1152921504606846976.000000000 > toUInt64(1), 1152921504606846976.000000000 >= toUInt64(1) , toInt64(1) = 1152921504606846976.000000000, toInt64(1) != 1152921504606846976.000000000, toInt64(1) < 1152921504606846976.000000000, toInt64(1) <= 1152921504606846976.000000000, toInt64(1) > 1152921504606846976.000000000, toInt64(1) >= 1152921504606846976.000000000, 1152921504606846976.000000000 = toInt64(1), 1152921504606846976.000000000 != toInt64(1), 1152921504606846976.000000000 < toInt64(1), 1152921504606846976.000000000 <= toInt64(1), 1152921504606846976.000000000 > toInt64(1), 1152921504606846976.000000000 >= toInt64(1) ;
SELECT 'Running test stateless/01086_modulo_or_zero.sql from pid=1715' 
DROP DATABASE IF EXISTS test_r7qbcaai 
SELECT topLevelDomain('');
INSERT INTO test_01193_18429.table_7_950 VALUES 
CREATE TABLE test_315D435B4C2636556F47296A362868422D722E243544233A67715C715863673F2B5F2D31682C4B4B(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_q3v4vrji 
select sipHash64Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59)) == sipHash64(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59));
select (b, c) in (select (b, c) from tab_00386) from tab_00386
SELECT avgWeightedIf(number, number, number % 10) t, toTypeName(t) FROM numbers(100);
CREATE DATABASE IF NOT EXISTS test_xl4gl73j 
INSERT INTO r6 SELECT 18 % 10 = 6 ? 18 - 1 : 18
SELECT 129, 9223372036854775809, 129 = 9223372036854775809, 129 != 9223372036854775809, 129 < 9223372036854775809, 129 <= 9223372036854775809, 129 > 9223372036854775809, 129 >= 9223372036854775809, 9223372036854775809 = 129, 9223372036854775809 != 129, 9223372036854775809 < 129, 9223372036854775809 <= 129, 9223372036854775809 > 129, 9223372036854775809 >= 129 , toUInt8(129) = toUInt64(9223372036854775809), toUInt8(129) != toUInt64(9223372036854775809), toUInt8(129) < toUInt64(9223372036854775809), toUInt8(129) <= toUInt64(9223372036854775809), toUInt8(129) > toUInt64(9223372036854775809), toUInt8(129) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toUInt8(129), toUInt64(9223372036854775809) != toUInt8(129), toUInt64(9223372036854775809) < toUInt8(129), toUInt64(9223372036854775809) <= toUInt8(129), toUInt64(9223372036854775809) > toUInt8(129), toUInt64(9223372036854775809) >= toUInt8(129) , toUInt16(129) = toUInt64(9223372036854775809), toUInt16(129) != toUInt64(9223372036854775809), toUInt16(129) < toUInt64(9223372036854775809), toUInt16(129) <= toUInt64(9223372036854775809), toUInt16(129) > toUInt64(9223372036854775809), toUInt16(129) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toUInt16(129), toUInt64(9223372036854775809) != toUInt16(129), toUInt64(9223372036854775809) < toUInt16(129), toUInt64(9223372036854775809) <= toUInt16(129), toUInt64(9223372036854775809) > toUInt16(129), toUInt64(9223372036854775809) >= toUInt16(129) , toInt16(129) = toUInt64(9223372036854775809), toInt16(129) != toUInt64(9223372036854775809), toInt16(129) < toUInt64(9223372036854775809), toInt16(129) <= toUInt64(9223372036854775809), toInt16(129) > toUInt64(9223372036854775809), toInt16(129) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toInt16(129), toUInt64(9223372036854775809) != toInt16(129), toUInt64(9223372036854775809) < toInt16(129), toUInt64(9223372036854775809) <= toInt16(129), toUInt64(9223372036854775809) > toInt16(129), toUInt64(9223372036854775809) >= toInt16(129) , toUInt32(129) = toUInt64(9223372036854775809), toUInt32(129) != toUInt64(9223372036854775809), toUInt32(129) < toUInt64(9223372036854775809), toUInt32(129) <= toUInt64(9223372036854775809), toUInt32(129) > toUInt64(9223372036854775809), toUInt32(129) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toUInt32(129), toUInt64(9223372036854775809) != toUInt32(129), toUInt64(9223372036854775809) < toUInt32(129), toUInt64(9223372036854775809) <= toUInt32(129), toUInt64(9223372036854775809) > toUInt32(129), toUInt64(9223372036854775809) >= toUInt32(129) , toInt32(129) = toUInt64(9223372036854775809), toInt32(129) != toUInt64(9223372036854775809), toInt32(129) < toUInt64(9223372036854775809), toInt32(129) <= toUInt64(9223372036854775809), toInt32(129) > toUInt64(9223372036854775809), toInt32(129) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toInt32(129), toUInt64(9223372036854775809) != toInt32(129), toUInt64(9223372036854775809) < toInt32(129), toUInt64(9223372036854775809) <= toInt32(129), toUInt64(9223372036854775809) > toInt32(129), toUInt64(9223372036854775809) >= toInt32(129) , toUInt64(129) = toUInt64(9223372036854775809), toUInt64(129) != toUInt64(9223372036854775809), toUInt64(129) < toUInt64(9223372036854775809), toUInt64(129) <= toUInt64(9223372036854775809), toUInt64(129) > toUInt64(9223372036854775809), toUInt64(129) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toUInt64(129), toUInt64(9223372036854775809) != toUInt64(129), toUInt64(9223372036854775809) < toUInt64(129), toUInt64(9223372036854775809) <= toUInt64(129), toUInt64(9223372036854775809) > toUInt64(129), toUInt64(9223372036854775809) >= toUInt64(129) , toInt64(129) = toUInt64(9223372036854775809), toInt64(129) != toUInt64(9223372036854775809), toInt64(129) < toUInt64(9223372036854775809), toInt64(129) <= toUInt64(9223372036854775809), toInt64(129) > toUInt64(9223372036854775809), toInt64(129) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toInt64(129), toUInt64(9223372036854775809) != toInt64(129), toUInt64(9223372036854775809) < toInt64(129), toUInt64(9223372036854775809) <= toInt64(129), toUInt64(9223372036854775809) > toInt64(129), toUInt64(9223372036854775809) >= toInt64(129) 
SELECT pointInPolygon((nan, 10.000100135803223), [(39.83154, 21.41527), (2., 1000.0001220703125), (39.90033, 21.37195), (1.000100016593933, 10.000100135803223), (39.83051, 21.42553), (39.82898, 21.41382), (39.83043, 21.41432), (39.83154, 21.41527)]);
INSERT INTO test_01193_18429.table_8_751 VALUES 
SELECT 0xe_e;
select sipHash128ReferenceKeyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13)) == sipHash128Reference(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13));
set data_type_default_nullable = 1;
insert into tt values 
DROP TABLE IF EXISTS i20203_1 SYNC;
SET timeout_overflow_mode = 'break';
DROP TABLE IF EXISTS ttl_empty_parts
CREATE TABLE t_02156_merge3 (k UInt32, v String) ENGINE = Merge(currentDatabase(), 't_02156_mt2|t_02156_dist');
select sumMerge(y) from ( select cast(x, 'AggregateFunction(sum, Decimal(50, 10))') y from ( select arrayReduce('sumState', [toDecimal256('0.000001', 10), toDecimal256('1.1', 10)]) x ) );
INSERT INTO test_01193_18429.table_1_54 VALUES 
CREATE TABLE test_01193_18429.table_3_603 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_1_223 VALUES 
CREATE TABLE test (`a` String) ENGINE = MergeTree PARTITION BY a ORDER BY a SETTINGS index_granularity = 41239, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 82, merge_max_block_size = 18109, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10205687676, index_granularity_bytes = 18379982, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 17604, primary_key_compress_block_size = 53102
SELECT geohashesInBox(1., 2., 3., 4., materialize(3));
CREATE TABLE test_01193_18429.table_2_188 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_4ocpmnd4 
SELECT 'Running test stateless/00926_adaptive_index_granularity_pk.sql from pid=1713' 
DROP DATABASE IF EXISTS test_4ka9re2o 
with 1 as x select x;
CREATE DATABASE IF NOT EXISTS test_yw6drgus 
INSERT INTO test_01193_18429.table_3_375 VALUES 
CREATE INDEX idx_tab1_1 on tab1 (col1);
INSERT INTO table_with_compact_parts SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number), toString(number) from numbers(9);
CREATE TABLE test_01193_18429.table_5_847 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DESCRIBE TABLE s3Cluster('test_cluster_one_shard_three_replicas_localhost', 'http://localhost:11111/test/{a,b}.tsv', 'test', '[HIDDEN]', 'auto')
SELECT 'ALL INNER | bs = 9';
INSERT INTO src_9 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 69
CREATE DICTIONARY hashed_array_dictionary_simple_key_simple_attributes ( id UInt64, value_first String DEFAULT 'value_first_default', value_second String DEFAULT 'value_second_default' ) PRIMARY KEY id SOURCE(CLICKHOUSE(TABLE 'simple_key_simple_attributes_source_table')) LAYOUT(HASHED_ARRAY()) LIFETIME(MIN 1 MAX 1000) SETTINGS(dictionary_use_async_executor=1, max_threads=8);
ATTACH TABLE stripe_log_02184;
INSERT INTO test_01193_18429.table_2_777 VALUES 
SELECT event, description FROM parquet_events WHERE event IN ('ContextLock', 'Query') ORDER BY event
DROP DATABASE IF EXISTS test_g8c30sbn 
CREATE TABLE test_01193_18429.table_5_518 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT count() FROM numbers(19);
CREATE TABLE test_01193_18429.table_1_822 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SET param_f='1';
CREATE DATABASE IF NOT EXISTS test_6k7hzqcs 
DROP DATABASE IF EXISTS test_mdbscm8n 
drop table test_source;
ALTER TABLE alter_compression_codec1 ADD COLUMN alter_column String DEFAULT 'default_value' CODEC(ZSTD);
SELECT 'Running test stateless/02763_row_policy_storage_merge_alias.gen.sql from pid=1722' 
CREATE TABLE r5 (`x` UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/tables/01459_manual_write_to_replicas_test_rtlzcyyu/r', 'r5') ORDER BY x SETTINGS index_granularity = 13972, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 16861, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 3148779030, index_granularity_bytes = 14261115, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 47059, primary_key_compress_block_size = 60410
SELECT 'Running test stateless/01281_alter_rename_and_other_renames.sql from pid=1722' 
INSERT INTO test_01193_18429.table_3_485 VALUES 
CREATE TABLE test_6924432A284E554F32775E394A61225342337970657C6D3A4A6C234E4B3672256932685F2C423527(x UInt8) Engine=Memory;
/* IPv4-mapped IPv6-ÃÂ°ÃÂ´ÃÂÃÂµÃÂÃÂ° */ DROP TABLE IF EXISTS addresses;
drop table if exists data_01801;
DROP DATABASE IF EXISTS test_3jf9fl6r 
SELECT regexpQuoteMeta('hel\\lo');
INSERT INTO test_01193_18429.table_8_451 VALUES 
CREATE USER user13_02713 IDENTIFIED WITH http SERVER 'basic_server' SCHEME 'Basic'
CREATE DATABASE IF NOT EXISTS test_ywulgd7v 
SELECT 1 IN _data
INSERT INTO test_01193_18429.table_7_560 VALUES 
DROP SETTINGS PROFILE IF EXISTS 02294_profile1, 02294_profile2;
desc format(JSONEachRow, '{"x" : "2020-01-01"}');
CREATE TABLE test_01193_18429.table_5_574 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT basename(NULL);
SELECT extractAllGroupsVertical('abc=111, def=222, ghi=333 "jkl mno"="444 foo bar"', '("[^"]+"|\\w+)=("[^"]+"|\\w+)');
CREATE DATABASE IF NOT EXISTS test_k0qz2a0c 
SELECT 'Running test stateless/02869_http_headers_elapsed_ns.sh from pid=1720' 
SELECT 'Running test stateless/01293_show_settings.sql from pid=1720' 
INSERT INTO test_anesxhpx.mt_buffer_00158 (x) SELECT number AS x FROM system.numbers LIMIT 1000000
DROP DATABASE IF EXISTS test_u3gisxem 
CREATE TABLE test_4A562D3F576A7964327D6B2449362A285949425D677E3C715824343F53334A4D693B574B76713E2C(x UInt8) Engine=Memory;
CREATE TABLE test_2C51753D4D707668666524404F415D395B272D545C70722D3F642B626B534E6723773C6773297174(x UInt8) Engine=Memory;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 9386, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE TABLE test_01193_18429.table_10_248 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
( select * from morton_numbers_mask_02457 union distinct select * from morton_numbers_mask_3_02457 ) except ( select * from morton_numbers_mask_02457 intersect select * from morton_numbers_mask_3_02457 );
DROP TABLE report2;
SELECT 'Running test stateless/01732_explain_syntax_union_query.sql from pid=1715' 
CREATE TABLE mt (`a` Int32, `market` Int32, `timestamp` DateTime) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 53279, min_bytes_for_wide_part = 371412619, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 24540, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 9182212, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 51865, primary_key_compress_block_size = 24921
CREATE TABLE test_3B6F2D274A63385B6767374972203A794E4A244F78793F777D5F7E5538497642605C42243E796832(x UInt8) Engine=Memory;
INSERT INTO src VALUES /* (27, 1) */ 
DROP DATABASE IF EXISTS test_fli3byoi 
SELECT count() FROM remote(remote2, database=merge(currentDatabase(), '^remote_test'));
INSERT INTO test_01193_18429.table_1_746 VALUES 
SELECT JSONExtract('["-a"]', toNullable(1), 'Nullable(Int)');
INSERT INTO test_01193_18429.table_3_251 VALUES 
 DETACH TABLE test_lazy_01014_concurrent_test_bo56il5m.slog; 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), N == D as r FORMAT CSV;
INSERT INTO test_01193_18429.table_2_171 VALUES 
CREATE TABLE test_02908_r1_258 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_258', 'r1') ORDER BY tuple()
alter table many_mutations delete where y = 430 * 2 settings mutations_sync = 0;
DROP DATABASE IF EXISTS test_9oy6fnfy 
INSERT INTO file_changes FORMAT TSV
SELECT 'Running test stateless/01685_ssd_cache_dictionary_complex_key.sh from pid=1705' 
SELECT DISTINCT shardNum() AS `_shard_num`, `id` FROM view(SELECT toInt16(`id`) AS `id` FROM `data` HAVING `id` IN (-1)) WHERE `id` IN (-1) ORDER BY `_shard_num` ASC, `id` ASC
SELECT count() FROM t_cnf_fuzz WHERE (c2 AND c8) OR (c4 AND (NOT c1) AND c1 AND (NOT c5)) OR ((NOT c8) AND (NOT c7) AND (NOT c9) AND (NOT c1) AND c8) OR ((NOT c9) AND c1 AND c2) OR ((NOT c8) AND (NOT c2) AND (NOT c9) AND (NOT c0) AND (NOT c1)) SETTINGS convert_query_to_cnf = 0
set max_distributed_connections=1;
CREATE TABLE test_01193_18429.table_10_854 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO mt VALUES /* (-27, 1) */ 
INSERT INTO r1 SELECT 0 % 10 = 1 ? 0 - 1 : 0
CREATE TABLE test_01193_18429.table_10_369 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select * from t_row_exists;
CREATE TABLE table_for_alter (`id` UInt64, `Data` String) ENGINE = MergeTree ORDER BY id SETTINGS parts_to_throw_insert = 1, parts_to_delay_insert = 1, index_granularity = 23496, min_bytes_for_wide_part = 654746293, ratio_of_defaults_for_sparse_serialization = 0.6823796033859253, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 23334, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 12474468, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 91428, primary_key_compress_block_size = 9661
INSERT INTO test_01193_18429.table_10_821 VALUES 
CREATE TABLE test_01193_18429.table_5_521 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO t64 SELECT (64 - toInt64(intExp2(56)) + number) AS x, x, x, x, x, x, x, x FROM numbers(2049);
INSERT INTO test_01193_18429.table_4_592 VALUES 
INSERT INTO test_01193_18429.table_1_921 VALUES 
ALTER TABLE t1 ADD STATISTIC b TYPE tdigest;
SELECT * FROM numbers(34598)
INSERT INTO test_01193_18429.table_8_775 VALUES 
CREATE TABLE test_01193_18429.table_3_719 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_2973447B5C2C58492B2F4E784C6F2B6F2A4B73782D54206C254455447A32705E5140504A225D7172(x UInt8) Engine=Memory;
SET limit = 4;
SELECT multiIf((number % 2) = 0, [toInt8(1), toInt8(2)], (number % 3) = 0, [toFloat32(2), toFloat32(3)], [toInt16(3), toInt16(3)]) FROM system.numbers LIMIT 10;
SELECT locate(NULL, NULL);
OPTIMIZE TABLE replicated_deduplicate_by_columns_r1 FINAL DEDUPLICATE BY id, val;
SELECT toString(toStartOfInterval(toDateTime(1549483055), INTERVAL 2 hour, 'Asia/Istanbul'), 'Asia/Istanbul');
CREATE TABLE test_01193_18429.table_3_217 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_7_587 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT multiIf((number % 2) = 0, [toInt32(1), toInt32(2)], (number % 3) = 0, [toFloat64(2), toFloat64(3)], [toFloat32(3), toFloat32(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_7_766 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO src_10 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 84
ALTER TABLE src_2 REPLACE PARTITION 0 FROM src_15
INSERT INTO test_rnqjfrq2.data_01555 (key) VALUES
CREATE TABLE test_7A505C695434263C726C35326147436939652A5A70322F70434A696B4C33514176593B3F2E6B7B20(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_4_97 VALUES 
SELECT id, haystack, 'l', replacement, replaceOne('Hello World', 'l', replacement) FROM test_tab ORDER BY id;
SELECT decodeXMLComponent('Hello, &ltt;&amp; world');
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (78 < 65 AND 70 > 0 ? 78 : 0)), throwIf(last != (78 < 65 AND 70 > 0 ? least(65 - 1, 78 + 70 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(65) LIMIT 78, 70);
CREATE TABLE file_engine_table (id UInt32) ENGINE=File(TSV);
DROP DATABASE IF EXISTS test_skr1wjm2 
SELECT ngrams('Test', 2);
CREATE TABLE bug_36995 (`time` DateTime, `product` String) ENGINE = MergeTree ORDER BY time SETTINGS index_granularity = 64540, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 5304, prefer_fetch_merged_part_size_threshold = 5121949662, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 6922916, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 89283, primary_key_compress_block_size = 8991 AS SELECT '2022-01-01 00:00:00', '1'
SELECT * FROM decimal2 ORDER BY a, b, c, d, e, f, g, h, i, j;
SELECT multiIf((number % 2) = 0, toUInt16(1), (number % 3) = 0, toInt16(2), toUInt16(3)) FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/00900_orc_arrow_parquet_tuples.sh from pid=1724' 
SELECT y, count() FROM cluster(test_cluster_one_shard_three_replicas_localhost, currentDatabase(), 02535_custom_key) GROUP BY y ORDER BY y SETTINGS max_parallel_replicas=3 , parallel_replicas_custom_key='y' , parallel_replicas_custom_key_filter_type='default' , prefer_localhost_replica=1
SELECT * FROM functional_index_mergetree WHERE x < 7.49;
SYSTEM STOP MERGES in_order_agg_partial_01710;
select parseDateTimeInJodaSyntax('1970', 'yyyy', 'UTC') = toDateTime('1970-01-01', 'UTC');
CREATE DATABASE IF NOT EXISTS test_ads6f89y 
CREATE TABLE dm_metric_small2 (`x` Nullable(Int64), `y` Nullable(Int64), `z` Nullable(Int64)) ENGINE = MergeTree ORDER BY (x, y, z) SETTINGS index_granularity = 1, allow_nullable_key = 1, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.13595221936702728, replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 23573, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 901987, vertical_merge_algorithm_min_columns_to_activate = 49, min_merge_bytes_to_use_direct_io = 7217560850, index_granularity_bytes = 522061, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 40329, primary_key_compress_block_size = 90145
SELECT 'Running test stateless/01164_alter_memory_database.sql from pid=1705' 
SELECT 'Running test stateless/01357_result_rows.sql from pid=1714' 
SELECT dictGetOrDefault('range_dictionary', 'value', toUInt64(2), toDate('2019-05-15'), NULL);
CREATE TABLE IF NOT EXISTS left_table (`id` UInt64, `val_left` String) ENGINE = ReplacingMergeTree ORDER BY id SETTINGS index_granularity = 53916, min_bytes_for_wide_part = 75575527, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 21770, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 107786, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10174945113, index_granularity_bytes = 15145779, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 14436, primary_key_compress_block_size = 57717
select hasAny([1], [Null]);
insert into test select uniqState(number) as x, number as y from numbers(10) group by number order by x, y;
SELECT multiIf((number % 2) = 0, toInt64(1), (number % 3) = 0, toInt8(2), toUInt32(3)) FROM system.numbers LIMIT 10;
SELECT CASE WHEN (number % 2) = 0 THEN toFloat64(1) WHEN (number % 3) = 0 THEN toInt16(2) ELSE toUInt16(3) END FROM system.numbers LIMIT 10;
SELECT t.t.t as e, toTypeName(e) FROM ttta FULL JOIN tttb USING (t.t);
CREATE TABLE test_657975672965682C4E7833685C5E5063467E33415C68726C4924537E354B327D44666C2E397E6527(x UInt8) Engine=Memory;
select [0, 0, 7, 0, 1, 1, 0, 0, 13, 0, 1, 1, 5, 0] = multiSearchAllPositionsCaseInsensitive(materialize('VQuEWycGbGcTcCCvWkujgdoWjKgVYy'), ['UevGaXmEAtBdWsPhBfqp', 'aQOrNMPmoVGSu', 'c', 'TMhzvbNJCaxtGNUgRBmTFEqgNBIBpSJ', '', 'vq', 'pVNUTCqXr', 'QSvkansbdPbvVmQpcQXDk', 'cCCvwkUjgdOWjKgVYy', 'EtCGaEzsSbJ', 'V', '', 'WycgBgCTCcCvwkujgdoWJKgv', 'xPBJqKrZbZHJawYvPxgqrgxPN']) from system.numbers limit 10;
INSERT INTO test_01193_18429.table_4_755 VALUES 
SELECT num, str FROM clear_column ORDER BY num;
SELECT COUNT() FROM bloom_filter_array_lc_null_types_test WHERE has(date, NULL);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (50 < 33 AND 64 > 0 ? 50 : 0)), throwIf(last != (50 < 33 AND 64 > 0 ? least(33 - 1, 50 + 64 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(33) LIMIT 50, 64);
SELECT 'Running test stateless/00705_aggregate_states_addition.sql from pid=1714' 
DROP DATABASE IF EXISTS test_z39yt6gv 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (13 < 22 AND 91 > 0 ? 13 : 0)), throwIf(last != (13 < 22 AND 91 > 0 ? least(22 - 1, 13 + 91 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(22) LIMIT 13, 91);
INSERT INTO test_01193_18429.table_6_547 VALUES 
INSERT INTO test_01193_18429.table_7_109 VALUES 
CREATE TABLE test_34242A504C6332787550265B7C2B676C2E5A4D3C3E443F555E4078385C6D785C4B2D7B5E2B283276(x UInt8) Engine=Memory;
SELECT click_country_id FROM t AS cc LEFT JOIN d ON toUInt32(d.id) = cc.click_city_id;
INSERT INTO test_01193_18429.table_8_85 VALUES 
CREATE TABLE test_01193_18429.table_2_913 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
create table rdb_test_5mr53c62.t as system.query_log
CREATE TABLE ipv4_t64 (`uid` Int16, `ip` IPv4 CODEC(T64), INDEX ip_idx ip TYPE bloom_filter GRANULARITY 4) ENGINE = MergeTree ORDER BY uid SETTINGS index_granularity = 41471, min_bytes_for_wide_part = 538068509, ratio_of_defaults_for_sparse_serialization = 0.534516453742981, replace_long_file_name_to_hash = false, max_file_name_length = 127, merge_max_block_size = 15448, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 21, min_merge_bytes_to_use_direct_io = 6133072686, index_granularity_bytes = 2342782, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 66648, primary_key_compress_block_size = 41161
SELECT '(forward, head, A) id >= 10', id, sequenceNextNode('forward', 'head')(dt, action, 1, action = 'A') AS next_node FROM test_sequenceNextNode_Nullable WHERE id >= 10 GROUP BY id ORDER BY id;
CREATE DATABASE test_01192_atomic
SELECT t.key2, tj.key2 FROM t ALL RIGHT JOIN tj ON t.key1 == tj.key1 AND t.key2 == tj.key2 ORDER BY t.key1 FORMAT TSVWithNames;
SELECT '(backward, first_match, B->A)', id, sequenceNextNode('backward', 'first_match')(dt, action, 1, action = 'B', action = 'A') AS next_node FROM test_sequenceNextNode GROUP BY id ORDER BY id;
CREATE TABLE test_01193_18429.table_3_966 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT parseDateTimeBestEffort('2020-05-14T03:37:03', 3, 'UTC') AS a, toTypeName(a);
CREATE DATABASE IF NOT EXISTS test_1n1gcndf 
GRANT SELECT ON db.* TO test_user_01074;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toFloat64(2), toFloat64(3)] ELSE [toFloat64(3), toFloat64(3)] END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_10_294 VALUES 
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 12182, 500 settings ignore_materialized_views_with_dropped_target_table=1
drop table data_01709;
SHOW CREATE DATABASE test_01155_atomic;
DROP DATABASE IF EXISTS test_srdy5lpx 
SELECT pointInPolygon((0.9, 0.1), [(0., 0.), (8., 7.), (7., 8.), (0., 0.)]);
SELECT round(avg(log(2) * number), 6) AS k FROM numbers(10000000) GROUP BY (number % 2) * (number % 3), number % 3, number % 2 ORDER BY k;
INSERT INTO test_01193_18429.table_4_518 VALUES 
DROP DATABASE IF EXISTS test_raibv5f6 
CREATE TABLE test_01193_18429.table_9_265 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_02908_r1_233 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_233', 'r1') ORDER BY tuple()
select 'distributed_group_by_no_merge';
select 10, n from mt order by n
select 'create database engine'
INSERT INTO test_01193_18429.table_8_298 VALUES 
SELECT concat(func.name, comb.name) AS x FROM system.functions AS func JOIN system.aggregate_function_combinators AS comb using name WHERE is_aggregate settings allow_experimental_analyzer=1;
INSERT INTO truncate_test_log VALUES
SELECT dictHas('01765_db.hashed_dictionary_simple_key_simple_attributes', number) FROM system.numbers LIMIT 4;
SET min_insert_block_size_rows = 0, min_insert_block_size_bytes = 0;
INSERT INTO ws FORMAT RowBinary 
SELECT greatest(now(), now() + 10) - now();
desc format(JSONEachRow, '{"obj" : {"a" : 42, "b" : "Hello", "c" : [1,2,3]}}, {"obj" : {"a" : 43, "b" : "World", "d" : "2020-01-01"}}, {"obj" : {}}');
CREATE DATABASE IF NOT EXISTS test_rdp77i1a 
select '<20: unexception>', * from c;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (65 < 9 AND 97 > 0 ? 65 : 0)), throwIf(last != (65 < 9 AND 97 > 0 ? least(9 - 1, 65 + 97 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(9) LIMIT 65, 97);
SELECT ngramSearchCaseInsensitive(NULL, NULL);
SELECT d, k, m.k1, m.k2ID, m.s FROM summing_composite_key ARRAY JOIN FirstMap AS m ORDER BY d, k, m.k1, m.k2ID, m.s, SecondMap.k1ID, SecondMap.k2Key, SecondMap.k3Type, SecondMap.s;
CREATE TABLE test_01193_18429.table_6_786 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_6_53 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP USER IF EXISTS quoted_by_ip_test_ljhmihp3;
CREATE DATABASE IF NOT EXISTS test_9zm40xow 
CREATE TABLE test_31436F734E545B425E7C255258235832635A593260265969485D3B5F755C667058534E664160573E(x UInt8) Engine=Memory;
DESCRIBE TABLE trailing_comma_1;
select * from (select 0 as k, toInt8(1) as v) t1 asof join (select 0 as k, toInt8(0) as v) t2 using(k, v);
create table dst_02225 (key Int) engine=Memory();
SELECT 65535, 4294967296, 65535 = 4294967296, 65535 != 4294967296, 65535 < 4294967296, 65535 <= 4294967296, 65535 > 4294967296, 65535 >= 4294967296, 4294967296 = 65535, 4294967296 != 65535, 4294967296 < 65535, 4294967296 <= 65535, 4294967296 > 65535, 4294967296 >= 65535 , toUInt16(65535) = toUInt64(4294967296), toUInt16(65535) != toUInt64(4294967296), toUInt16(65535) < toUInt64(4294967296), toUInt16(65535) <= toUInt64(4294967296), toUInt16(65535) > toUInt64(4294967296), toUInt16(65535) >= toUInt64(4294967296), toUInt64(4294967296) = toUInt16(65535), toUInt64(4294967296) != toUInt16(65535), toUInt64(4294967296) < toUInt16(65535), toUInt64(4294967296) <= toUInt16(65535), toUInt64(4294967296) > toUInt16(65535), toUInt64(4294967296) >= toUInt16(65535) , toUInt16(65535) = toInt64(4294967296), toUInt16(65535) != toInt64(4294967296), toUInt16(65535) < toInt64(4294967296), toUInt16(65535) <= toInt64(4294967296), toUInt16(65535) > toInt64(4294967296), toUInt16(65535) >= toInt64(4294967296), toInt64(4294967296) = toUInt16(65535), toInt64(4294967296) != toUInt16(65535), toInt64(4294967296) < toUInt16(65535), toInt64(4294967296) <= toUInt16(65535), toInt64(4294967296) > toUInt16(65535), toInt64(4294967296) >= toUInt16(65535) , toUInt32(65535) = toUInt64(4294967296), toUInt32(65535) != toUInt64(4294967296), toUInt32(65535) < toUInt64(4294967296), toUInt32(65535) <= toUInt64(4294967296), toUInt32(65535) > toUInt64(4294967296), toUInt32(65535) >= toUInt64(4294967296), toUInt64(4294967296) = toUInt32(65535), toUInt64(4294967296) != toUInt32(65535), toUInt64(4294967296) < toUInt32(65535), toUInt64(4294967296) <= toUInt32(65535), toUInt64(4294967296) > toUInt32(65535), toUInt64(4294967296) >= toUInt32(65535) , toUInt32(65535) = toInt64(4294967296), toUInt32(65535) != toInt64(4294967296), toUInt32(65535) < toInt64(4294967296), toUInt32(65535) <= toInt64(4294967296), toUInt32(65535) > toInt64(4294967296), toUInt32(65535) >= toInt64(4294967296), toInt64(4294967296) = toUInt32(65535), toInt64(4294967296) != toUInt32(65535), toInt64(4294967296) < toUInt32(65535), toInt64(4294967296) <= toUInt32(65535), toInt64(4294967296) > toUInt32(65535), toInt64(4294967296) >= toUInt32(65535) , toInt32(65535) = toUInt64(4294967296), toInt32(65535) != toUInt64(4294967296), toInt32(65535) < toUInt64(4294967296), toInt32(65535) <= toUInt64(4294967296), toInt32(65535) > toUInt64(4294967296), toInt32(65535) >= toUInt64(4294967296), toUInt64(4294967296) = toInt32(65535), toUInt64(4294967296) != toInt32(65535), toUInt64(4294967296) < toInt32(65535), toUInt64(4294967296) <= toInt32(65535), toUInt64(4294967296) > toInt32(65535), toUInt64(4294967296) >= toInt32(65535) , toInt32(65535) = toInt64(4294967296), toInt32(65535) != toInt64(4294967296), toInt32(65535) < toInt64(4294967296), toInt32(65535) <= toInt64(4294967296), toInt32(65535) > toInt64(4294967296), toInt32(65535) >= toInt64(4294967296), toInt64(4294967296) = toInt32(65535), toInt64(4294967296) != toInt32(65535), toInt64(4294967296) < toInt32(65535), toInt64(4294967296) <= toInt32(65535), toInt64(4294967296) > toInt32(65535), toInt64(4294967296) >= toInt32(65535) , toUInt64(65535) = toUInt64(4294967296), toUInt64(65535) != toUInt64(4294967296), toUInt64(65535) < toUInt64(4294967296), toUInt64(65535) <= toUInt64(4294967296), toUInt64(65535) > toUInt64(4294967296), toUInt64(65535) >= toUInt64(4294967296), toUInt64(4294967296) = toUInt64(65535), toUInt64(4294967296) != toUInt64(65535), toUInt64(4294967296) < toUInt64(65535), toUInt64(4294967296) <= toUInt64(65535), toUInt64(4294967296) > toUInt64(65535), toUInt64(4294967296) >= toUInt64(65535) , toUInt64(65535) = toInt64(4294967296), toUInt64(65535) != toInt64(4294967296), toUInt64(65535) < toInt64(4294967296), toUInt64(65535) <= toInt64(4294967296), toUInt64(65535) > toInt64(4294967296), toUInt64(65535) >= toInt64(4294967296), toInt64(4294967296) = toUInt64(65535), toInt64(4294967296) != toUInt64(65535), toInt64(4294967296) < toUInt64(65535), toInt64(4294967296) <= toUInt64(65535), toInt64(4294967296) > toUInt64(65535), toInt64(4294967296) >= toUInt64(65535) , toInt64(65535) = toUInt64(4294967296), toInt64(65535) != toUInt64(4294967296), toInt64(65535) < toUInt64(4294967296), toInt64(65535) <= toUInt64(4294967296), toInt64(65535) > toUInt64(4294967296), toInt64(65535) >= toUInt64(4294967296), toUInt64(4294967296) = toInt64(65535), toUInt64(4294967296) != toInt64(65535), toUInt64(4294967296) < toInt64(65535), toUInt64(4294967296) <= toInt64(65535), toUInt64(4294967296) > toInt64(65535), toUInt64(4294967296) >= toInt64(65535) , toInt64(65535) = toInt64(4294967296), toInt64(65535) != toInt64(4294967296), toInt64(65535) < toInt64(4294967296), toInt64(65535) <= toInt64(4294967296), toInt64(65535) > toInt64(4294967296), toInt64(65535) >= toInt64(4294967296), toInt64(4294967296) = toInt64(65535), toInt64(4294967296) != toInt64(65535), toInt64(4294967296) < toInt64(65535), toInt64(4294967296) <= toInt64(65535), toInt64(4294967296) > toInt64(65535), toInt64(4294967296) >= toInt64(65535) 
INSERT INTO test_01193_18429.table_9_463 VALUES 
SELECT 'Running test stateless/02481_low_cardinality_with_short_circuit_functins.sql from pid=1722' 
SELECT count() FROM t_01411 WHERE indexOf(arr, 'asdf337') > 0;
SELECT multiIf((number % 2) = 0, toInt16(1), (number % 3) = 0, toFloat64(2), toInt8(3)) FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/01533_distinct_nullable_uuid.sql from pid=1718' 
CREATE TABLE test_01193_18429.table_7_211 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DICTIONARY table_function_dictionary_test_dictionary ( id UInt64, value UInt64 DEFAULT 0 ) PRIMARY KEY id SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_function_dictionary_source_table')) LAYOUT(DIRECT());
INSERT INTO mt VALUES /* (-4, 1) */ 
CREATE DATABASE IF NOT EXISTS test_qxqgg8w1 
SELECT t1.id, t1.value, t2.id, t2.value, t3.id, t3.value FROM test_table_join_1 AS t1 LEFT JOIN test_table_join_2 AS t2 ON t1.id = t2.id AND t1.value == 'Join_1_Value_0' AND t2.value == 'Join_2_Value_0' FULL JOIN test_table_join_3 AS t3 ON t2.id = t3.id AND t2.value == 'Join_2_Value_0' AND t3.value == 'Join_3_Value_0';
SELECT 'SELECT DT64 > N';
DESCRIBE (SELECT * EXCEPT (id) APPLY toString FROM test_table);
INSERT INTO test_01193_18429.table_5_679 VALUES 
CREATE TABLE test_5528317A3B2F2C3D59425E7D735C67612532675C27422262713C677E342D6A4B745E554F6F2E6828(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_h8to03m3 
insert into test select y from file(02458_data.jsonl);
SELECT 'Running test stateless/01272_suspicious_codecs.sql from pid=1705' 
SELECT less(CAST(1 AS Int8),CAST( 0 AS Nullable(Int8)));
CREATE TABLE test_5A2E3549734B4877237D37357D7E6723704E7D646B765C5A253A6B6472623D474438697156506D3A(x UInt8) Engine=Memory;
SELECT CASE WHEN (col1 % 2) = 0 THEN toFixedString(col2, 16) WHEN 1 THEN 'bar' ELSE col4 END FROM multi_if_check;
INSERT INTO r9 SELECT 81 % 10 = 9 ? 81 - 1 : 81
CREATE TABLE test_01193_18429.table_2_320 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
explain ast insert into test format TabSeparated balabala
CREATE TABLE test_43694E4E6F4D523075743D247C7545457B2E227050777857472E4A742B2665644A716E4849326527(x UInt8) Engine=Memory;
ALTER TABLE alter_default ADD COLUMN value String DEFAULT '10';
INSERT INTO test_01193_18429.table_9_296 VALUES 
INSERT INTO test_01193_18429.table_9_855 VALUES 
CREATE TABLE t0 (vkey UInt32, pkey UInt32, c0 UInt32) engine = TinyLog;
select pow(2, 0) = 1;
INSERT INTO dst_10 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 77
SELECT a FROM ( select * from ( select 1 AS a UNION ALL select 1 as a) ) AS t1, ( select * from ( select 2 AS b, 3 AS c UNION ALL select 2 as b, 3 as c )) AS t2;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 35547, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT toFixedString('', 16) as value, toIPv6(value);
SELECT toDecimal64OrNull ('\0', 4);
INSERT INTO test_01193_18429.table_8_526 VALUES 
SELECT 'Running test stateless/00327_summing_composite_nested.sql from pid=1724' 
INSERT INTO test_tz_setting VALUES 
INSERT INTO test_02908_r1_149 SELECT rand64() FROM numbers(5);
select formatRow('CustomSeparated', number, good) from (select number, 'good' as good from numbers(3));
SELECT toDecimal32(12345.6789, 4) AS x, floor(x, -1), floor(x, -2), floor(x, -3), floor(x, -4), floor(x, -5);
INSERT INTO database_for_dict_01018.table_for_dict VALUES 
select 1 = isValidUTF8(toValidUTF8('\xE0\xA0\xBF')) from system.numbers limit 10;
CREATE TABLE test_01193_18429.table_5_779 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
ALTER TABLE replicated_mutations_empty_partitions DROP PARTITION '9';
DROP DATABASE IF EXISTS test_dz48tr88 
DROP TABLE IF EXISTS distributed_table_2;
DROP TABLE t_object_convert;
select '== problematic cast cases';
SELECT arrayPartialShuffle([9223372036854775808], 0);
DROP TABLE t_desc_subcolumns;
SELECT NOT NULL IS NOT NULL;
with '2018-01-12 22:33:44.55' as s, toDateTime64(s, 6) as datetime64 SELECT fromUnixTimestampInJodaSyntax(datetime64, 'SS', 'UTC');
CREATE DATABASE IF NOT EXISTS test_f8k9immc 
select toDateTime64('3000-01-01 12:00:00.12345', 0) + interval 0 microsecond;
SELECT (1,'') IN ((1,''));
ALTER TABLE prop_table MODIFY COLUMN column_comment REMOVE COMMENT;
CREATE TABLE test_01193_18429.table_9_838 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
drop row policy if exists filter on projection_test;
SELECT key FROM mysql('127.0.0.1:9004', currentDatabase(), foo, 'default', '[HIDDEN]', SETTINGS connect_timeout = 100, connection_wait_timeout = 100) ORDER BY key ASC
INSERT INTO test_y9d6pdpj.t_async_insert FORMAT Values
set optimize_on_insert = 0;
CREATE TABLE test_01193_18429.table_5_67 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c3)) OR ((NOT c7) AND (NOT c8) AND c9 AND c0 AND c6) OR (c1 AND c6) OR ((NOT c6) AND (NOT c8) AND (NOT c0) AND c4) OR ((NOT c1)) OR ((NOT c5)) SETTINGS convert_query_to_cnf = 0
CREATE TABLE src (`A` String, `B` String, `C` String) ENGINE = ReplicatedMergeTree('/clickhouse/{database}/test/src3', '1') ORDER BY A SETTINGS min_bytes_for_wide_part = 0, index_granularity = 58834, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 17462, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 215040, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 4784844898, index_granularity_bytes = 21241274, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 18062, primary_key_compress_block_size = 35281
CREATE TABLE test_buffer.buf as test_buffer.mt ENGINE = Buffer(test_buffer, mt, 2, 10, 60, 10000, 100000, 1000000, 10000000);
SELECT [[1::UInt16, 2::UInt16]::Array(UInt32), [3]]::Array(Array(UInt64));
CREATE TABLE test_01193_18429.table_7_41 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECt name,database from system.databases where name = 'default';
SELECT toDateTime(NULL, NULL);
SYSTEM SYNC REPLICA alter_table_6 STRICT
CREATE TABLE test_5C37705A66256A215A285231724D5D4A40535F5B7D5640743E2631473D2740405A21243A5C74284D(x UInt8) Engine=Memory;
CREATE TABLE test_2B465651576A4A5A4E512D66362D645B2B595D4539447B75695B297A3D69767A584B3F5F67716140(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_10_774 VALUES 
INSERT INTO test_01193_18429.table_4_322 VALUES 
SELECT 'Running test stateless/01605_key_condition_enum_int.sql from pid=1715' 
SELECT h3GetResolution(0xFFFFFFFFFFFFFF) FORMAT Null;
SELECT *, c as a, d as b FROM table2 FORMAT PrettyCompact;
INSERT INTO test_01193_18429.table_4_612 VALUES 
SELECT sqidEncode(1, 2) AS sqid, sqidDecode(sqid);
INSERT INTO test_01193_18429.table_6_111 VALUES 
select X'';
CREATE TABLE nested (x UInt8, n Nested(a UInt64, b String)) ENGINE = TinyLog;
CREATE TABLE test_5C7D7A3537235B5F783653727425343B3874642E6A2A393E72594641234C3A4F7D464D48355F5C3E(x UInt8) Engine=Memory;
CREATE TABLE test_7740414B4F4E5D523F526157532B7958387D484D2C57497E35425D27724A70775C6E5F7B66417662(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02015_shard_crash_clang_12_build.sh from pid=1718' 
SELECT toDecimal32OrZero('-999999999', 0), toDecimal32OrZero('-1000000000', 0);
SELECT roundBankers(welchTTest(left, right).2, 6) from welch_ttest__fuzz_7;
drop table if exists alias_1;
SELECT last_valueIf (number, NOT isNull(number) AND (assumeNotNull(number) > 5)) RESPECT NULLS from (SELECT if(number < 2, NULL, number) as number FROM numbers(10));
CREATE TABLE tab2 (`a2` Int32, `b2` Int32) ENGINE = MergeTree ORDER BY a2 SETTINGS index_granularity = 18903, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 33, merge_max_block_size = 7034, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 4770467953, index_granularity_bytes = 29687608, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 21934, primary_key_compress_block_size = 71942
CREATE TABLE test_01193_18429.table_2_134 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT * FROM orc_nullable_arrays FORMAT ORC
SELECT * FROM dest_view_log ORDER BY x LIMIT 1;
SELECT c, d, e FROM t_fixed_prefix WHERE a = 1 ORDER BY c, d, e SETTINGS optimize_read_in_order = 0
SELECT toUInt8OrDefault(-1);
INSERT INTO test_ahwppifc.local_01099_b SELECT * FROM `test_ahwppifc`.`local_01099_a`
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat32(1), toFloat32(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toInt16(3), toInt16(3)] END FROM system.numbers LIMIT 10;
SELECT multiIf(1, ['foo', col3], 1, [col4, col5], [col6, 'bar']) FROM multi_if_check;
SELECT Price FROM test_02428_pv1(price = _CAST(10, 'UInt64'))
select mapPopulateSeries(map(toInt8(1), toInt8(1), 2, 1)) as res, toTypeName(res);
SELECT 65;
SELECT 'Running test stateless/01568_window_functions_distributed.sql from pid=1715' 
SELECT greatest(1.5, 1.0::Decimal32(5));
SELECT quantileExactLow(0.8)(a), quantileExactLow(0.8)(b), quantileExactLow(0.8)(c) FROM decimal WHERE a >= 0;
CREATE DATABASE IF NOT EXISTS test_f96n0ume 
INSERT INTO test_aoagfgvc.remote_test (a1) VALUES
insert into t_group_by_lowcardinality select today() as p_date, Null as val from numbers(100);
SELECT 0, -2147483647, 0 = -2147483647, 0 != -2147483647, 0 < -2147483647, 0 <= -2147483647, 0 > -2147483647, 0 >= -2147483647, -2147483647 = 0, -2147483647 != 0, -2147483647 < 0, -2147483647 <= 0, -2147483647 > 0, -2147483647 >= 0 , toUInt8(0) = toInt32(-2147483647), toUInt8(0) != toInt32(-2147483647), toUInt8(0) < toInt32(-2147483647), toUInt8(0) <= toInt32(-2147483647), toUInt8(0) > toInt32(-2147483647), toUInt8(0) >= toInt32(-2147483647), toInt32(-2147483647) = toUInt8(0), toInt32(-2147483647) != toUInt8(0), toInt32(-2147483647) < toUInt8(0), toInt32(-2147483647) <= toUInt8(0), toInt32(-2147483647) > toUInt8(0), toInt32(-2147483647) >= toUInt8(0) , toUInt8(0) = toInt64(-2147483647), toUInt8(0) != toInt64(-2147483647), toUInt8(0) < toInt64(-2147483647), toUInt8(0) <= toInt64(-2147483647), toUInt8(0) > toInt64(-2147483647), toUInt8(0) >= toInt64(-2147483647), toInt64(-2147483647) = toUInt8(0), toInt64(-2147483647) != toUInt8(0), toInt64(-2147483647) < toUInt8(0), toInt64(-2147483647) <= toUInt8(0), toInt64(-2147483647) > toUInt8(0), toInt64(-2147483647) >= toUInt8(0) , toInt8(0) = toInt32(-2147483647), toInt8(0) != toInt32(-2147483647), toInt8(0) < toInt32(-2147483647), toInt8(0) <= toInt32(-2147483647), toInt8(0) > toInt32(-2147483647), toInt8(0) >= toInt32(-2147483647), toInt32(-2147483647) = toInt8(0), toInt32(-2147483647) != toInt8(0), toInt32(-2147483647) < toInt8(0), toInt32(-2147483647) <= toInt8(0), toInt32(-2147483647) > toInt8(0), toInt32(-2147483647) >= toInt8(0) , toInt8(0) = toInt64(-2147483647), toInt8(0) != toInt64(-2147483647), toInt8(0) < toInt64(-2147483647), toInt8(0) <= toInt64(-2147483647), toInt8(0) > toInt64(-2147483647), toInt8(0) >= toInt64(-2147483647), toInt64(-2147483647) = toInt8(0), toInt64(-2147483647) != toInt8(0), toInt64(-2147483647) < toInt8(0), toInt64(-2147483647) <= toInt8(0), toInt64(-2147483647) > toInt8(0), toInt64(-2147483647) >= toInt8(0) , toUInt16(0) = toInt32(-2147483647), toUInt16(0) != toInt32(-2147483647), toUInt16(0) < toInt32(-2147483647), toUInt16(0) <= toInt32(-2147483647), toUInt16(0) > toInt32(-2147483647), toUInt16(0) >= toInt32(-2147483647), toInt32(-2147483647) = toUInt16(0), toInt32(-2147483647) != toUInt16(0), toInt32(-2147483647) < toUInt16(0), toInt32(-2147483647) <= toUInt16(0), toInt32(-2147483647) > toUInt16(0), toInt32(-2147483647) >= toUInt16(0) , toUInt16(0) = toInt64(-2147483647), toUInt16(0) != toInt64(-2147483647), toUInt16(0) < toInt64(-2147483647), toUInt16(0) <= toInt64(-2147483647), toUInt16(0) > toInt64(-2147483647), toUInt16(0) >= toInt64(-2147483647), toInt64(-2147483647) = toUInt16(0), toInt64(-2147483647) != toUInt16(0), toInt64(-2147483647) < toUInt16(0), toInt64(-2147483647) <= toUInt16(0), toInt64(-2147483647) > toUInt16(0), toInt64(-2147483647) >= toUInt16(0) , toInt16(0) = toInt32(-2147483647), toInt16(0) != toInt32(-2147483647), toInt16(0) < toInt32(-2147483647), toInt16(0) <= toInt32(-2147483647), toInt16(0) > toInt32(-2147483647), toInt16(0) >= toInt32(-2147483647), toInt32(-2147483647) = toInt16(0), toInt32(-2147483647) != toInt16(0), toInt32(-2147483647) < toInt16(0), toInt32(-2147483647) <= toInt16(0), toInt32(-2147483647) > toInt16(0), toInt32(-2147483647) >= toInt16(0) , toInt16(0) = toInt64(-2147483647), toInt16(0) != toInt64(-2147483647), toInt16(0) < toInt64(-2147483647), toInt16(0) <= toInt64(-2147483647), toInt16(0) > toInt64(-2147483647), toInt16(0) >= toInt64(-2147483647), toInt64(-2147483647) = toInt16(0), toInt64(-2147483647) != toInt16(0), toInt64(-2147483647) < toInt16(0), toInt64(-2147483647) <= toInt16(0), toInt64(-2147483647) > toInt16(0), toInt64(-2147483647) >= toInt16(0) , toUInt32(0) = toInt32(-2147483647), toUInt32(0) != toInt32(-2147483647), toUInt32(0) < toInt32(-2147483647), toUInt32(0) <= toInt32(-2147483647), toUInt32(0) > toInt32(-2147483647), toUInt32(0) >= toInt32(-2147483647), toInt32(-2147483647) = toUInt32(0), toInt32(-2147483647) != toUInt32(0), toInt32(-2147483647) < toUInt32(0), toInt32(-2147483647) <= toUInt32(0), toInt32(-2147483647) > toUInt32(0), toInt32(-2147483647) >= toUInt32(0) , toUInt32(0) = toInt64(-2147483647), toUInt32(0) != toInt64(-2147483647), toUInt32(0) < toInt64(-2147483647), toUInt32(0) <= toInt64(-2147483647), toUInt32(0) > toInt64(-2147483647), toUInt32(0) >= toInt64(-2147483647), toInt64(-2147483647) = toUInt32(0), toInt64(-2147483647) != toUInt32(0), toInt64(-2147483647) < toUInt32(0), toInt64(-2147483647) <= toUInt32(0), toInt64(-2147483647) > toUInt32(0), toInt64(-2147483647) >= toUInt32(0) , toInt32(0) = toInt32(-2147483647), toInt32(0) != toInt32(-2147483647), toInt32(0) < toInt32(-2147483647), toInt32(0) <= toInt32(-2147483647), toInt32(0) > toInt32(-2147483647), toInt32(0) >= toInt32(-2147483647), toInt32(-2147483647) = toInt32(0), toInt32(-2147483647) != toInt32(0), toInt32(-2147483647) < toInt32(0), toInt32(-2147483647) <= toInt32(0), toInt32(-2147483647) > toInt32(0), toInt32(-2147483647) >= toInt32(0) , toInt32(0) = toInt64(-2147483647), toInt32(0) != toInt64(-2147483647), toInt32(0) < toInt64(-2147483647), toInt32(0) <= toInt64(-2147483647), toInt32(0) > toInt64(-2147483647), toInt32(0) >= toInt64(-2147483647), toInt64(-2147483647) = toInt32(0), toInt64(-2147483647) != toInt32(0), toInt64(-2147483647) < toInt32(0), toInt64(-2147483647) <= toInt32(0), toInt64(-2147483647) > toInt32(0), toInt64(-2147483647) >= toInt32(0) , toUInt64(0) = toInt32(-2147483647), toUInt64(0) != toInt32(-2147483647), toUInt64(0) < toInt32(-2147483647), toUInt64(0) <= toInt32(-2147483647), toUInt64(0) > toInt32(-2147483647), toUInt64(0) >= toInt32(-2147483647), toInt32(-2147483647) = toUInt64(0), toInt32(-2147483647) != toUInt64(0), toInt32(-2147483647) < toUInt64(0), toInt32(-2147483647) <= toUInt64(0), toInt32(-2147483647) > toUInt64(0), toInt32(-2147483647) >= toUInt64(0) , toUInt64(0) = toInt64(-2147483647), toUInt64(0) != toInt64(-2147483647), toUInt64(0) < toInt64(-2147483647), toUInt64(0) <= toInt64(-2147483647), toUInt64(0) > toInt64(-2147483647), toUInt64(0) >= toInt64(-2147483647), toInt64(-2147483647) = toUInt64(0), toInt64(-2147483647) != toUInt64(0), toInt64(-2147483647) < toUInt64(0), toInt64(-2147483647) <= toUInt64(0), toInt64(-2147483647) > toUInt64(0), toInt64(-2147483647) >= toUInt64(0) , toInt64(0) = toInt32(-2147483647), toInt64(0) != toInt32(-2147483647), toInt64(0) < toInt32(-2147483647), toInt64(0) <= toInt32(-2147483647), toInt64(0) > toInt32(-2147483647), toInt64(0) >= toInt32(-2147483647), toInt32(-2147483647) = toInt64(0), toInt32(-2147483647) != toInt64(0), toInt32(-2147483647) < toInt64(0), toInt32(-2147483647) <= toInt64(0), toInt32(-2147483647) > toInt64(0), toInt32(-2147483647) >= toInt64(0) , toInt64(0) = toInt64(-2147483647), toInt64(0) != toInt64(-2147483647), toInt64(0) < toInt64(-2147483647), toInt64(0) <= toInt64(-2147483647), toInt64(0) > toInt64(-2147483647), toInt64(0) >= toInt64(-2147483647), toInt64(-2147483647) = toInt64(0), toInt64(-2147483647) != toInt64(0), toInt64(-2147483647) < toInt64(0), toInt64(-2147483647) <= toInt64(0), toInt64(-2147483647) > toInt64(0), toInt64(-2147483647) >= toInt64(0) 
select URLHash('http://ya.ru' as url) = URLHash(appendTrailingCharIfAbsent(url, '#'));
SELECT 1 FROM test_table_join_1 AS t1 INNER JOIN test_table_join_2 AS t2 USING (id);
CREATE TABLE t64 (`u8` UInt8, `t_u8` UInt8 CODEC(T64('bit'), LZ4), `u16` UInt16, `t_u16` UInt16 CODEC(T64('bit'), LZ4), `u32` UInt32, `t_u32` UInt32 CODEC(T64('bit'), LZ4), `u64` UInt64, `t_u64` UInt64 CODEC(T64('bit'), LZ4)) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 2405, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 13055, prefer_fetch_merged_part_size_threshold = 5578279381, vertical_merge_algorithm_min_rows_to_activate = 34511, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 9075735181, index_granularity_bytes = 2331031, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 58283, primary_key_compress_block_size = 68457
DROP TABLE IF EXISTS parquet_load
ALTER USER u2_01292 DEFAULT ROLE ALL EXCEPT r2_01292;
select dt, id, arraySort(groupArrayArray(arr)) from ( select dt, id, arr from table1 where dt = '2019-01-14' and id = 1 UNION ALL select dt, id, arr from table2 where dt = '2019-01-14' and id = 1 ) group by dt, id;
select sipHash64Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49)) == sipHash64(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49));
SELECT '(backward, tail, A)', id, sequenceNextNode('backward', 'tail')(dt, action, 1, action = 'A') AS next_node FROM test_sequenceNextNode_Nullable GROUP BY id ORDER BY id;
SELECT INTERVAL '2 month';
SELECT murmurHash3_64([], []);
INSERT INTO test_01193_18429.table_4_260 VALUES 
ALTER TABLE mutations_r1 DELETE WHERE s = 'd' SETTINGS mutations_sync = 2
DROP TABLE IF EXISTS merge_s64_u64;
SELECT * FROM ( SELECT ( SELECT 0 AS x FROM (SELECT 1 AS x) t1 JOIN (SELECT 1 AS x) t2 USING (x) ) AS x FROM ( SELECT 1 AS x ) ) FORMAT Null;
CREATE TABLE test_01193_18429.table_6_915 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
set max_hyperscan_regexp_length = 1;
CREATE TABLE test_01193_18429.table_2_203 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_464A622F714D7E2D4560496465575B2E56292F3B4E4B354362202B40377A6521697A74757449452D(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_fj5lup2c 
CREATE TABLE test_6D256C5B27382C367B223020316D513A6A267D4A7D244B79745B2F246E783B403925207A52306058(x UInt8) Engine=Memory;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 20487, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT addQuarters('2023-10-22', 1), addQuarters('2023-10-22 12:34:56.123', 1);
CREATE TABLE src ( id UInt64, ip4 IPv4, ip6 IPv6 ) Engine=Memory AS SELECT * FROM VALUES( (1, '1.1.1.1', '::1.1.1.1'), (2, '2.2.2.2', '::2.2.2.2') );
CREATE TABLE test_01193_18429.table_4_919 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO r8 SELECT 24 % 10 = 8 ? 24 - 1 : 24
DROP DATABASE IF EXISTS test_s1b8lzaw 
SELECT * FROM new_mv ORDER BY x;
INSERT INTO r8 SELECT 7
CREATE TABLE test_65344755494C405A2C59703C7E3A7848275378744863346A362A4A6C467B4F5E596677675D755A4C(x UInt8) Engine=Memory;
CREATE TABLE test (`x` UInt64, `s` String) ENGINE = MergeTree ORDER BY tuple() SETTINGS parts_to_throw_insert = 3, max_parts_to_merge_at_once = 1, index_granularity = 38072, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 122, merge_max_block_size = 21682, prefer_fetch_merged_part_size_threshold = 7672127187, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 70, min_merge_bytes_to_use_direct_io = 6916541260, index_granularity_bytes = 10597283, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 25300, primary_key_compress_block_size = 41953
INSERT INTO test_02908_r1_90 SELECT rand64() FROM numbers(5);
INSERT INTO test_01193_18429.table_8_475 VALUES 
explain syntax select x, if((select hasColumnInTable(currentDatabase(), 'test', 'y')), y, x || '_') from test;
SELECT 'Running test stateless/01293_client_interactive_vertical_multiline.expect from pid=1714' 
CREATE TABLE test_447D2C765567425D3C72313E6A276C75395A267E5D633C6344604A514C3E3278295F72406877685D(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_4_842 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP VIEW test_02428_pv6
SELECT range(10, null);
CREATE TABLE t1 (a UInt16, b UInt16) ENGINE = TinyLog;
SELECT 'Subquery';
CREATE TABLE source_data (`pk` Int32, `sk` Int32, `val` UInt32, `partition_key` UInt32 DEFAULT 1) ENGINE = MergeTree PRIMARY KEY pk ORDER BY (pk, sk) SETTINGS index_granularity = 32319, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.46798551082611084, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 15063, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 3316468915, index_granularity_bytes = 10234141, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 76089, primary_key_compress_block_size = 72959
CREATE DATABASE 01053_db Engine = Ordinary;
select [2, 5, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 1, 1, 12, 0, 0, 0, 4, 8] = multiSearchAllPositionsUTF8(materialize('ÃÂµÃÂÃÂ¸ÃÂ¿ÃÂ·ÃÂÃÂ²ÃÂÃÂµÃÂ¼ÃÂ»ÃÂ ÃÂÃÂ·ÃÂ¼ÃÂ¹ÃÂÃÂÃÂÃÂ·'), ['ÃÂ', 'ÃÂ·', 'ÃÂ¿ÃÂÃÂÃÂÃÂ¼ÃÂ°ÃÂ¸ÃÂ°ÃÂ ÃÂ¿ÃÂ¿ÃÂÃÂµÃÂÃÂ·ÃÂ¶ÃÂ±ÃÂ¿ÃÂ²ÃÂ¸ÃÂ¸ÃÂ±ÃÂ°ÃÂ°ÃÂÃÂ¹', 'ÃÂ³ÃÂÃÂÃÂºÃÂ·ÃÂ¾ÃÂ¸ÃÂµÃÂ¶ÃÂ°ÃÂ²', 'ÃÂÃÂ²ÃÂÃÂµÃÂ¼ÃÂ»ÃÂ ÃÂÃÂ·ÃÂ¼', 'ÃÂÃÂ¸ÃÂ¹ÃÂ°ÃÂ½ÃÂ±ÃÂºÃÂµ', 'ÃÂ·ÃÂ ÃÂµ', 'ÃÂ°ÃÂ²ÃÂÃÂºÃÂÃÂ´ÃÂÃÂ°ÃÂÃÂÃÂ·ÃÂºÃÂ²ÃÂºÃÂÃÂÃÂÃÂ¹ÃÂÃÂ¿ÃÂ·ÃÂ¶ÃÂÃÂ²ÃÂ²ÃÂµÃÂ½ÃÂÃÂÃÂ±', 'ÃÂ½ÃÂ¾ÃÂ¶ÃÂÃÂ²ÃÂ°ÃÂÃÂÃÂ°ÃÂ¿ÃÂ¸ÃÂ¶', 'ÃÂ¸ÃÂ¸ÃÂ·ÃÂºÃÂµÃÂ¶ÃÂ»ÃÂÃÂ¸ÃÂ°ÃÂÃÂ¸ÃÂÃÂºÃÂÃÂÃÂ¼ÃÂ°ÃÂ»ÃÂ½ÃÂ¿ÃÂÃÂ°ÃÂÃÂÃÂ´ÃÂ½ÃÂºÃÂ', 'ÃÂ²ÃÂÃÂ¼ÃÂ²', 'ÃÂºÃÂÃÂµÃÂÃÂÃÂ¼ÃÂÃÂÃÂ¶ÃÂ¶ÃÂ»ÃÂÃÂÃÂÃÂÃÂµ', '', '', 'ÃÂ ', 'ÃÂ°ÃÂ»ÃÂ·ÃÂµÃÂ±ÃÂ·ÃÂ¿ÃÂÃÂµÃÂ»ÃÂ¾ÃÂ¶ÃÂ¸ÃÂ ÃÂ°ÃÂÃÂ¶ÃÂ²ÃÂ ÃÂ¼ÃÂ¹ÃÂ ÃÂÃÂ¸ÃÂÃÂ½', 'ÃÂÃÂ¿ÃÂ·ÃÂ¼ÃÂÃÂ¼ÃÂÃÂÃÂ´ÃÂ¿ÃÂ¸ÃÂÃÂ¿ÃÂ´ÃÂÃÂ¸ÃÂ°ÃÂ¾ÃÂ³', 'ÃÂÃÂÃÂ»ÃÂºÃÂÃÂÃÂÃÂ¾ÃÂÃÂÃÂ°ÃÂ¹ÃÂ¹ÃÂ·ÃÂ±ÃÂ·ÃÂÃÂºÃÂ´ÃÂ¶ÃÂ±ÃÂ±ÃÂÃÂÃÂÃÂµÃÂ¹', 'ÃÂ¿ÃÂ·ÃÂÃÂ²ÃÂÃÂµÃÂ¼ÃÂ»ÃÂ ÃÂÃÂ·ÃÂ¼', 'ÃÂ']) from system.numbers limit 10;
SELECT 'SELECT * FROM merge(currentDatabase(), 02763_merge_merge)';
INSERT INTO r8 SELECT 58
EXPLAIN SYNTAX SELECT countDistinctIf(number % 10, number % 5 = 2) FROM numbers(1000);
SELECT k1, k2, k3, sum(value) v FROM t_proj_external GROUP BY k1, k2, k3 ORDER BY k1, k2, k3 SETTINGS optimize_aggregation_in_order = 0, max_bytes_before_external_group_by = 1, group_by_two_level_threshold = 1;
SELECT id FROM test_bf_indexOf WHERE indexOf(ary, 'value1') = 2 ORDER BY id FORMAT TSV;
SELECT throwIf((SELECT (count(), sum(n)) FROM merge(currentDatabase(), '') WHERE type=3) != (15 + 1, 120 + 16)) FORMAT Null;
SELECT 2147483648, 18446744073709551615, 2147483648 = 18446744073709551615, 2147483648 != 18446744073709551615, 2147483648 < 18446744073709551615, 2147483648 <= 18446744073709551615, 2147483648 > 18446744073709551615, 2147483648 >= 18446744073709551615, 18446744073709551615 = 2147483648, 18446744073709551615 != 2147483648, 18446744073709551615 < 2147483648, 18446744073709551615 <= 2147483648, 18446744073709551615 > 2147483648, 18446744073709551615 >= 2147483648 , toUInt32(2147483648) = toUInt64(18446744073709551615), toUInt32(2147483648) != toUInt64(18446744073709551615), toUInt32(2147483648) < toUInt64(18446744073709551615), toUInt32(2147483648) <= toUInt64(18446744073709551615), toUInt32(2147483648) > toUInt64(18446744073709551615), toUInt32(2147483648) >= toUInt64(18446744073709551615), toUInt64(18446744073709551615) = toUInt32(2147483648), toUInt64(18446744073709551615) != toUInt32(2147483648), toUInt64(18446744073709551615) < toUInt32(2147483648), toUInt64(18446744073709551615) <= toUInt32(2147483648), toUInt64(18446744073709551615) > toUInt32(2147483648), toUInt64(18446744073709551615) >= toUInt32(2147483648) , toUInt64(2147483648) = toUInt64(18446744073709551615), toUInt64(2147483648) != toUInt64(18446744073709551615), toUInt64(2147483648) < toUInt64(18446744073709551615), toUInt64(2147483648) <= toUInt64(18446744073709551615), toUInt64(2147483648) > toUInt64(18446744073709551615), toUInt64(2147483648) >= toUInt64(18446744073709551615), toUInt64(18446744073709551615) = toUInt64(2147483648), toUInt64(18446744073709551615) != toUInt64(2147483648), toUInt64(18446744073709551615) < toUInt64(2147483648), toUInt64(18446744073709551615) <= toUInt64(2147483648), toUInt64(18446744073709551615) > toUInt64(2147483648), toUInt64(18446744073709551615) >= toUInt64(2147483648) , toInt64(2147483648) = toUInt64(18446744073709551615), toInt64(2147483648) != toUInt64(18446744073709551615), toInt64(2147483648) < toUInt64(18446744073709551615), toInt64(2147483648) <= toUInt64(18446744073709551615), toInt64(2147483648) > toUInt64(18446744073709551615), toInt64(2147483648) >= toUInt64(18446744073709551615), toUInt64(18446744073709551615) = toInt64(2147483648), toUInt64(18446744073709551615) != toInt64(2147483648), toUInt64(18446744073709551615) < toInt64(2147483648), toUInt64(18446744073709551615) <= toInt64(2147483648), toUInt64(18446744073709551615) > toInt64(2147483648), toUInt64(18446744073709551615) >= toInt64(2147483648) 
SELECT number, tuple FROM (SELECT 1 AS number, (2, 3) AS tuple) WHERE (number, tuple) IN ( (/*number*/1, /*tuple*/(2, 3)), (/*number*/4, /*tuple*/(5, 6)) );
CREATE TABLE test_262254407C5E4D2C5336415D61433B512F73623B4578493F525B202259333C633F6B2B5E637C324D(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_7_40 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (65 < 0 AND 78 > 0 ? 65 : 0)), throwIf(last != (65 < 0 AND 78 > 0 ? least(0 - 1, 65 + 78 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(0) LIMIT 65, 78);
SELECT * FROM VALUES('s String', ('abra'), ('cadabra'), ('abracadabra'));
SELECT val, nullable_val FROM null_dict;
SELECT countSubstringsCaseInsensitiveUTF8(materialize('ÃÂÃÂÃÂÃÂÃÂÃÂ'), 'ÃÂ');
INSERT INTO test_01193_18429.table_1_604 VALUES 
DROP TABLE IF EXISTS test_index;
DROP DATABASE IF EXISTS test_0t6ef2w6 
SELECT JSONExtractBool(NULL, NULL, NULL);
SELECT count() == 66668 FROM null_in_subquery WHERE i not in (SELECT i FROM null_in_subquery WHERE dt = 2);
DROP TABLE IF EXISTS arrow_decimal
CREATE TABLE rdst (`p` UInt64, `k` String, `d` UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_alter_attach_00626_rdst', 'r1') PARTITION BY p ORDER BY k SETTINGS index_granularity = 3153, min_bytes_for_wide_part = 910989787, ratio_of_defaults_for_sparse_serialization = 0.22614608705043793, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 13111, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1177444075, index_granularity_bytes = 30903149, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 47170, primary_key_compress_block_size = 84245
INSERT INTO test_01193_18429.table_7_578 VALUES 
DROP DATABASE IF EXISTS test_dghzyqut 
DROP DATABASE IF EXISTS test_u645db9z 
DROP DATABASE IF EXISTS test_p5k2dbw0 
CREATE TABLE test_01193_18429.table_5_17 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT reverse(materialize('Hello'));
CREATE INDEX idx_tab2_1 ON tab2 (col1,col4);
select 5 = positionUTF8('ÃÂ°ÃÂ±ÃÂ²ÃÂ°ÃÂ±ÃÂ²', 'ÃÂ±', 3);
SELECT multiIf((number % 2) = 0, toUInt16(1), (number % 3) = 0, toFloat32(2), toInt8(3)) FROM system.numbers LIMIT 10;
INSERT INTO r2 SELECT 24
CREATE TABLE test_01193_18429.table_3_134 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_table_nullable_signed_values ( id UInt64, value1 Nullable(Int8), value2 Nullable(Int16), value3 Nullable(Int32), value4 Nullable(Int64), predicate_value UInt8 ) ENGINE=TinyLog;
CREATE DATABASE IF NOT EXISTS test_migznl53 
CREATE TABLE test_01193_18429.table_2_645 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select parseDateTime('23', '%H', 'UTC') = toDateTime('1970-01-01 23:00:00', 'UTC');
DROP DATABASE IF EXISTS test_xl6yn6uh 
create table dist as data engine=Distributed(test_cluster_interserver_secret, currentDatabase(), data, key);
DROP DATABASE IF EXISTS test_ivy0esel 
CREATE TABLE test_01193_18429.table_6_93 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select sipHash128Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13)) == sipHash128(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13));
INSERT INTO test_01193_18429.table_1_332 VALUES 
CREATE TABLE test_01193_18429.table_2_697 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT protocol('http://example.com') AS Scheme;
SELECT c, d FROM t_fixed_prefix WHERE bitNot(a) = 1 ORDER BY c, d SETTINGS optimize_read_in_order = 0
INSERT INTO test_01193_18429.table_10_378 VALUES 
CREATE INDEX idx_tab3_0 ON tab3 (col0,col4 DESC,col1 DESC);
SELECT 'Running test stateless/00065_shard_float_literals_formatting.sql from pid=1718' 
CREATE DATABASE IF NOT EXISTS test_lzgtxhkf 
SELECT arrayFirst(x -> materialize(0), emptyArrayString());
SELECT * FROM system.replication_queue WHERE table = 'concurrent_alter_detach_1' and (type = 'ALTER_METADATA' or type = 'MUTATE_PART')
SELECT 'Running test stateless/01778_where_with_column_name.sql from pid=1720' 
drop table if exists cdp_segments;
DROP DATABASE IF EXISTS test_efdklnpt 
SELECT cutIPv6(IPv6StringToNum('2001:0DB8:AC10:FE01:FEED:BABE:CAFE:F00D'), 0, 13);
select finalizeAggregation( anyState(ip) ) AS any, finalizeAggregation( anyHeavyState(ip) ) AS anyHeavy, finalizeAggregation( anyLastState(ip) ) AS anyLast from ( SELECT toIPv6(IPv6NumToString(toFixedString(reinterpretAsFixedString(number)||reinterpretAsFixedString(number), 16))) AS ip FROM numbers(1010011101, 1) order by ip ) format Vertical;
SELECT sum(value) FROM system.errors WHERE name = 'UNKNOWN_TABLE'
SELECT ip, ipv6 FROM test_table_ipv6;
select round(1000 * ngramDistance('abcdefgh', 'aaaaaaaa'));
SELECT any(toTypeName(a)) == 'Int32' AND any(toTypeName(t2.a)) == 'Int32' FROM t1 RIGHT JOIN t2 USING (a);
CREATE TABLE test_5331683C63524A4445523E2A557669634628412669746D5F226F3C68285D22242737257834724B27(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_6_444 VALUES 
CREATE TABLE test_01193_18429.table_9_181 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT test_table_join_1.id, test_table_join_1.value, test_table_join_2.id, test_table_join_2.value FROM test_table_join_1 LEFT JOIN test_table_join_2 ON test_table_join_1.id = test_table_join_2.id;
DROP DATABASE IF EXISTS test_008wsrz3 
SELECT uniqExactArray([0, 1, 1], [0, 1, 1], [0, 1, 0]);
SELECT formatReadableTimeDelta(-(1 + 60 + 3600 + 86400 + 30.5 * 86400 + 365 * 86400), 'months');
select * from 02681_undrop_mergetree order by id;
SELECT 'Running test stateless/02177_temporary_table_current_database_http_session.sh from pid=1705' 
SELECT notEmpty([NULL]);
SELECT 5 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'val', tuple(IPv4StringToNum('255.224.0.0')))
CREATE TABLE test_744C564A573C26504B632B6D2733456C54646C4F5D2F5F2A2E586F74632F3A67287E2D78713A5975(x UInt8) Engine=Memory;
SELECT covarPop(NULL);
CREATE TABLE test_01193_18429.table_6_838 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE DATABASE IF NOT EXISTS test_r0xgt44x 
SELECT kql_array_sort_asc(NULL);
DROP TABLE IF EXISTS defaulted;
SELECT 'Array max ', (arrayMax(array(1,2,3,4,5,6)));
SELECT multiIf((col1 % 2) = 0, ['foo', col3], 1, [col4, col5], [col6, col7]) FROM multi_if_check;
DROP DATABASE IF EXISTS test_20wd46t5 
SELECT * FROM arrays_test ORDER BY a1, a2;
DESC TABLE system.numbers_mt
INSERT INTO test_01193_18429.table_4_293 VALUES 
SELECT leftPad('abc', 4, '*'), leftPad('abc', 4::Int32, '*');
SELECT CASE WHEN (number % 2) = 0 THEN toInt16(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toInt64(3) END FROM system.numbers LIMIT 10;
SELECT 101
CREATE TABLE test_56642E6C35667A63457A464B2F2A28244E64696D3846385569745C5B74384C765D6C5D2B2F20762C(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02890_describe_table_options.sql from pid=1713' 
CREATE TABLE test_01193_18429.table_1_305 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select CAST(1.0, 'Decimal(15,2)') > CAST(1, 'Float64');
SELECT * FROM ( SELECT a, t1.val as val1, t2.val as val2 FROM t t1 ANY LEFT JOIN t t2 USING a ) ORDER BY val1;
SELECT 'Running test stateless/00193_parallel_replicas.sql from pid=1720' 
SELECT '====== remove column codec ======';
CREATE TABLE test_01193_18429.table_2_206 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO src VALUES /* (42, 2) */ 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c6) AND c9 AND (NOT c2) AND c7 AND c8) OR ((NOT c6)) OR ((NOT c0) AND (NOT c5) AND c2) OR (c0) OR ((NOT c6) AND c2 AND c0 AND (NOT c3) AND (NOT c3)) OR (c3 AND c3 AND (NOT c2) AND (NOT c1) AND (NOT c6)) OR ((NOT c4) AND (NOT c5) AND c0 AND c0 AND c8) OR (c4 AND (NOT c4) AND c3 AND (NOT c5)) SETTINGS convert_query_to_cnf = 0
SELECT emptyArrayToSingle(arrayFilter(x -> x != 99, arrayJoin([[1, 2], [99], [4, 5, 6]])));
DROP DATABASE IF EXISTS test_vs4h1hjo 
SELECT (shardNum() AS `_shard_num`) + `dummy` AS `s`, count() FROM `system`.`one` GROUP BY `_shard_num` + `dummy` ORDER BY `_shard_num` + `dummy` ASC
SELECT parseDateTimeBestEffortOrNull('2010-01-01');
CREATE DATABASE IF NOT EXISTS test_rkqp01le 
select a2, b2, a3, b3 from tab2 all left join tab3 on a2 = a3 or b2 = b3 ORDER BY a2, b2, a3, b3;
INSERT INTO db_01059_event_hop_watch_strict_asc.mt VALUES 
SELECT 'tn1 ANY INNER JOIN t2 | bs = 5';
DROP TABLE mergetree_00754
CREATE TABLE test_01193_18429.table_8_439 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_633F2479456B2B4722334979447E795E6F3B63235730505D4D3D22265A7C6B29772D517364373042(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_e3zicgrm 
SELECT multiIf((col1 % 2) = 0, col2, 1, toFixedString('bar', 16), col4) FROM multi_if_check;
CREATE DATABASE IF NOT EXISTS test_ktubhqju 
CREATE TABLE test_4C76356B652B2F4C4B3864247247602C27343D48322436353E2F3A3D7D3A7D7E7365415B472A525C(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_8_995 VALUES 
select sleep(1);
SELECT throwIf((SELECT (count(), sum(n)) FROM merge(currentDatabase(), '') WHERE type=3) != (0 + 1, 0 + 1)) FORMAT Null
CREATE TABLE test_2E6A54216F3F202D71392A5D6E6E78593A3F7A2B7E2B2E665768266B714A29595266722A79293E56(x UInt8) Engine=Memory;
insert into t select 2, 2 from numbers(400);
SELECT 1 IN (1);
INSERT INTO src_15 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 40
CREATE INDEX idx_tab3_0 ON tab3 (col3);
SELECT 'Running test stateless/00146_summing_merge_tree_nested_map.sql from pid=1720' 
CREATE TABLE test_01193_18429.table_4_75 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT count() FROM t_cnf_fuzz WHERE (c0) OR ((NOT c1) AND c4) OR ((NOT c2)) OR (c6 AND c1) OR (c9) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_514F3D77335B622F5C4434412A4B684A3A265663744E4A6A28557A5126395F3E6A577C47384F7476(x UInt8) Engine=Memory;
SYSTEM SYNC REPLICA concurrent_kill_3
SELECT 'Running test stateless/01458_count_digits.sql from pid=1722' 
select 2 = position('abc', materialize('bc'));
INSERT INTO test_01193_18429.table_6_361 VALUES 
drop table if exists t2 sync;
select (1 ? (toInt64(0) as i) : toInt16(1)) = i;
CREATE DATABASE IF NOT EXISTS test_hm3fyngs 
drop table if exists lc_null_fix_str_0;
CREATE VIEW view_00843 AS SELECT * FROM test1_00843;
select formatDateTime(toDateTime('2010-01-04 12:34:56'), '%f') SETTINGS formatdatetime_f_prints_single_zero = 1;
CREATE TABLE test_59325A7959403242753E5D2161475D513878417D6C654025342B62694D79272A2D4F762324776B75(x UInt8) Engine=Memory;
SELECT s, replaceOne(s, '_', 'o') AS a, replaceRegexpOne(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['.__', '__.__']) AS s);
SELECT * FROM information_schema.columns WHERE table_schema = currentDatabase() AND table_name NOT LIKE '%inner%' ORDER BY table_name, column_name;
SELECT multiIf((number % 2) = 0, [toUInt32(1), toUInt32(2)], (number % 3) = 0, [toUInt32(2), toUInt32(3)], [toFloat64(3), toFloat64(3)]) FROM system.numbers LIMIT 10;
EXPLAIN SYNTAX SELECT min(n * 2) + min(2 * n) + min(n / 2) + min(1 / n) FROM (SELECT number n FROM numbers(10));
SELECT toStartOfDay(toDateTime(1412106600), 'Pacific/Pitcairn');
CREATE TABLE test_02098 (x UInt32, y String, z Date) engine=Memory()
SET group_by_use_nulls = 1;
INSERT INTO 01760_db.example_complex_key_source VALUES 
CREATE TABLE test_7B303B2D4843517A6374513B26462230744C3C4F3F78604F2E246132454A7521413B2A5967626677(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_10_68 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select * from url(url_with_headers, url='http://127.0.0.1:8123?query=select+12', format='RawBLOB', headers('X-ClickHouse-Database'='default'));
CREATE TABLE mt2 AS mt;
select s, sum(n) from v group by s format Null;
SELECT * FROM bloom_filter_idx WHERE multiSearchAny(s, ['base', 'seme', 'gement'])
SELECT round(avg(log(2) * number), 6) AS k FROM numbers(10000000) GROUP BY number % 5, ((number % 5) * (number % 5)) HAVING ((number % 5) * (number % 5)) < 5 ORDER BY k SETTINGS allow_experimental_analyzer=1;
select * from test_02152;
CREATE TABLE test_01193_18429.table_8_59 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_7_304 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_3_70 VALUES 
SELECT 'uniqTheta retention with MergeTree test';
DROP DATABASE IF EXISTS test_zhxogtvw 
INSERT INTO test_01193_18429.table_4_124 VALUES 
DROP DATABASE IF EXISTS test_gu0rf1ye 
select 'dictGet', 'complex_hashed_decimals' as dict_name, tuple(toUInt64(1)) as k, dictGet(dict_name, 'd32', k), dictGet(dict_name, 'd64', k), dictGet(dict_name, 'd128', k), dictGet(dict_name, ('d32', 'd64', 'd128'), k);
SELECT -3_4e-21;
SELECT t.key2, tj.key2 FROM t ALL RIGHT JOIN tj USING (key1, key2) ORDER BY key1 FORMAT TSVWithNames;
INSERT INTO src_0 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 75
SELECT pathFull(NULL);
CREATE TABLE test_01193_18429.table_9_201 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c4) AND (NOT c4) AND c7) OR (c9 AND c1 AND c7) OR (c1 AND c8 AND (NOT c2)) OR ((NOT c3)) OR ((NOT c6) AND c5) SETTINGS convert_query_to_cnf = 0
INSERT INTO test_01193_18429.table_7_344 VALUES 
INSERT INTO mt VALUES /* (-7, 1) */ 
SELECT sum(isNull(t1.x)), count(t1.x) FROM nt AS t1 RIGHT JOIN nt AS t2 USING(x);
ATTACH TABLE concurrent_mutate_mt_2
DROP DATABASE IF EXISTS test_3dzke2ix 
select 'create table, column -type +DEFAULT +NULL';
SELECT * REPLACE substring(license_text, 1, position(license_text, '\n')) AS license_text FROM system.licenses WHERE library_name = 'poco' FORMAT Vertical;
CREATE TABLE test_5A5A545C61646222212570564B2A28314025787E4B78724A48754124332B3826236F3A205D3A5835(x UInt8) Engine=Memory;
ATTACH TABLE mv
CREATE DATABASE IF NOT EXISTS test_jy5nr2oq 
SELECT 'Running test stateless/02960_alter_table_part_query_parameter.sql from pid=1718' 
DROP TABLE IF EXISTS testNullableStatesAgg;
SELECT toTypeName(dotProduct(x, y)) from product_uint8_fp64;
select 0 = position('abc', materialize('abcd')) from system.numbers limit 10;
CREATE TABLE test_01193_18429.table_2_903 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP TABLE IF EXISTS t_01411_num;
select 1 = positionUTF8(materialize('ÃÂ°ÃÂ±ÃÂ²'), 'ÃÂ°ÃÂ±ÃÂ²') from system.numbers limit 10;
DROP TABLE IF EXISTS alter_table_3
EXPLAIN AST ALTER TABLE t DELETE IN PARTITION 'p' WHERE c = 1;
CREATE TABLE test_01193_18429.table_1_356 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_2_106 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_3179597E385F592E2A214F2441383C7A53317130393150394F457C6E2E737878523D5A5F55452428(x UInt8) Engine=Memory;
CREATE TABLE issue32107 (`A` Int64, `s_quantiles` AggregateFunction(quantilesTDigest(0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99), Float64)) ENGINE = AggregatingMergeTree ORDER BY A SETTINGS index_granularity = 54507, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.7298349142074585, replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 15021, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 14, min_merge_bytes_to_use_direct_io = 6958376157, index_granularity_bytes = 11489063, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 15180, primary_key_compress_block_size = 16637
CREATE INDEX idx_tab4_4 ON tab4 (col3,col0);
INSERT INTO test_01193_18429.table_8_542 VALUES 
SELECT currentUser();
SELECT multiIf((col1 % 2) = 0, ['foo', 'bar'], 1, ['foo', col5], [col6, 'bar']) FROM multi_if_check;
DROP DATABASE IF EXISTS test_md7edfip 
desc format(TSV, '2020-01-01');
CREATE DATABASE IF NOT EXISTS test_jp9z73v0 
CREATE TABLE test_01193_18429.table_3_79 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DICTIONARY IF EXISTS 02183_polygon_dictionary;
INSERT INTO r1 SELECT 27
INSERT INTO test_01193_18429.table_3_471 VALUES 
SELECT cityHash64('');
select uniqExact(_part), count() from tMM where toDate(d)=toDate('2020-09-01');
SELECT tupleElement(('hello', 'world'), 'xyz', 'default');
INSERT INTO r5 SELECT 73
INSERT INTO r1 SELECT 91
SELECT sum(y) FROM partitioned_by_tuple_replica2_00502;
SELECT value FROM system.build_options WHERE name='BUILD_TYPE'
DROP TABLE IF EXISTS array_of_arrays_protobuf_00825;
SET input_format_skip_unknown_fields = 1;
SELECT isDecimalOverflow(materialize(toDecimal32(999999999, 0)), 9), isDecimalOverflow(materialize(toDecimal32(999999999, 0))), isDecimalOverflow(materialize(toDecimal32(-999999999, 0)), 9), isDecimalOverflow(materialize(toDecimal32(-999999999, 0)));
select * from format(JSONEachRow, '{"a" : {}}, {"a" : {"b" : 1}}') 
DROP DATABASE IF EXISTS test_jq69xuht 
SELECT a, b FROM t_fixed_prefix WHERE a = 1 AND c = 1 ORDER BY a, b SETTINGS optimize_read_in_order = 1
INSERT INTO test_01193_18429.table_5_101 VALUES 
select * from (select dummy as val from system.one) any left join (select toLowCardinality(dummy) as rval from system.one) on val + 0 = rval * 1;
select jsonMergePatch('{"a": {"b": 1, "c": 2}}', '{"a": {"b": [3, 4]}}');
select * from file(dump11.sql, MySQLDump) settings max_threads=1
ALTER TABLE alter_table0 DETACH PARTITION ID 'all';
SELECT 'Running test stateless/02270_errors_in_files.sh from pid=1713' 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c7)) OR (c5 AND (NOT c9)) OR (c2 AND (NOT c5) AND c8 AND (NOT c6) AND c4) SETTINGS convert_query_to_cnf = 0
SELECT nothing() as n, toTypeName(n);
SELECT 'tn1 ANY LEFT JOIN tn2 | bs = 1';
SELECT quantileExact(0.0)(a), quantileExact(0.0)(b), quantileExact(0.0)(c) FROM decimal WHERE a >= 0;
SELECT 'Running test stateless/00860_unknown_identifier_bug.sql from pid=1724' 
DROP ROLE IF EXISTS test_role_01999;
INSERT INTO test_01193_18429.table_6_438 VALUES 
CREATE TABLE test_01193_18429.table_10_413 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
desc format(TSV, '122\n1e2');
SYSTEM START TTL MERGES sqllt.table
CREATE DATABASE IF NOT EXISTS test_h88cfn4f 
insert into s values 
DROP FUNCTION IF EXISTS 02126_function;
CREATE TABLE test_696D61724D77462C36465F594D396A502A6E584A4F7B2838227E6D627460752E56672C2F55553335(x UInt8) Engine=Memory;
SELECT CASE WHEN 1 THEN [col2, col3] WHEN (col1 % 3) = 0 THEN [col4, 'bar'] ELSE ['foo', 'bar'] END FROM multi_if_check;
select a[b] from table_map;
CREATE DATABASE IF NOT EXISTS test_5497pili 
SELECT count(*) FROM source WHERE toYYYYMM(ts_64) < 202312 SETTINGS allow_experimental_analyzer=1;
SELECT sumMap([number % 3, number % 4 - 1], [number :: Float64, NULL]) FROM numbers(3) GROUP BY number WITH CUBE ORDER BY number;
CREATE DATABASE IF NOT EXISTS test_ifqstzu2 
DROP DATABASE IF EXISTS test_v62map03 
DROP TABLE memory_01069.mt;
SELECT toMinute(toDateTime(1412106600), 'Europe/London');
SELECT timestamp('');
CREATE TABLE test_01193_18429.table_5_902 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_9_679 VALUES 
CREATE TABLE test_5A742D23565473716E3E4B644C3E546A504024622743327323407B3D2A7639382B3D7E4B5B36477E(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_tfep533u 
INSERT INTO partitioned_by_tuple_replica1_00502 VALUES 
SHOW CREATE TABLE test_view_filtered;
CREATE TABLE test_212222205059594A3C2D567128277E6E66262150794B384C79203D475F7441312F3E2F443221243B(x UInt8) Engine=Memory;
SELECT count(), min(`number`) FROM `test_tc1uzesn`.`data_01247`
CREATE TABLE test_01193_18429.table_8_357 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT arrayMap(x -> finalizeAggregation(x), finalizeAggregation(uniqStateForEachState([1, NULL]))) WITH TOTALS;
CREATE TABLE alter_table (`a` UInt8, `b` Int16) ENGINE = MergeTree ORDER BY a SETTINGS index_granularity = 63450, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 20107, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 18516867, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 29823, primary_key_compress_block_size = 51128
SET system_events_show_zero_values = true;
SELECT g > toFloat32(0) FROM decimal ORDER BY g;
CREATE TABLE rename_table (key Int32, value1 Int32, value2 Int32) ENGINE = MergeTree ORDER BY tuple() SETTINGS min_bytes_for_wide_part=0;
CREATE TABLE test_73586C7563297E30604427707C2245215D42276257626C6A3D5F275E3620402C644A635149474229(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS test_table_ipv4;
select cutToFirstSignificantSubdomainCustomRFC('sheffield.sch.uk', 'public_suffix_list');
SELECT arrayMap(i -> [resources_host[i]], arrayEnumerate(resources_host)) FROM test_array;
EXPLAIN QUERY TREE run_passes=1 SELECT value1 FROM date_t WHERE toYYYYMM(date1) <> 199203 AND id BETWEEN 1 AND 3 SETTINGS allow_experimental_analyzer=1;
CREATE TABLE enum ENGINE = MergeTree ORDER BY enum SETTINGS index_granularity = 34153, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 6654, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 5497100, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 65461, primary_key_compress_block_size = 18287 AS SELECT CAST(1, 'Enum8(\'zero\'=0, \'one\'=1)') AS enum
select v, variantElement(v, 'IPv6') from format(TSV, 'v Variant(String, IPv6)', '\\N\nstring\n2001:0db8:85a3:0000:0000:8a2e:0370:7334\n2001:0db8:85a3:0000:0000:8a2e:0370:7334AAA') format TSV;
SET allow_experimental_bigint_types=1;
CREATE TABLE test_01193_18429.table_3_637 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE DATABASE IF NOT EXISTS test_t0g6fahg 
drop table if exists dist_01528;
SELECT '1,,' == replaceRegexpOne('1,,', '^[,]*|[,]*$', '') x;
INSERT INTO test_01193_18429.table_10_598 VALUES 
CREATE TABLE vec2 (id UInt64, v Array(Int64)) ENGINE = Memory;
CREATE TABLE test_6F35483B3A59755D544971566B303A703E6D444551594523723D2B69524A5A583931342557643B59(x UInt8) Engine=Memory;
select hex(sipHash64Keyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)));
INSERT INTO test_null_as_default(a) SELECT 'HELLO' UNION ALL SELECT NULL;
SELECT database, name FROM system.tables WHERE database = 'testlazy';
SELECT toInt32OrZero(NULL, NULL);
CREATE TABLE test_01193_18429.table_5_296 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
ALTER TABLE concurrent_alter_add_drop_1 ADD COLUMN value1 UInt32 DEFAULT 42 SETTINGS replication_alter_partitions_sync=0
SELECT _part, * FROM t1;
CREATE TABLE test_01193_18429.table_7_95 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO r6 SELECT 56
CREATE TABLE test_01193_18429.table_2_821 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c2) AND (NOT c5) AND (NOT c2)) SETTINGS convert_query_to_cnf = 1
SELECT parseDateTime32BestEffortOrNull(NULL);
SELECT 'aes-192-ctr' AS mode, decrypt(mode, '[HIDDEN]') = input FROM encryption_test
CREATE TABLE test_01193_18429.table_4_256 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_3_254 VALUES 
select 5 as x format CSV 
select count() cnt, * from dist_01247 group by number having cnt == 1 limit 1;
INSERT INTO test_01193_18429.table_10_117 VALUES 
CREATE TABLE t_move_to_prewhere (id UInt32, a UInt8, b UInt8, c UInt8, fat_string String) ENGINE = MergeTree ORDER BY id PARTITION BY id SETTINGS min_rows_for_wide_part = 100, min_bytes_for_wide_part = 0;
select c_7_c4585_14 as c_4_c4593_5 from (select avg(0) as c_7_c4572_1, max(-0) as c_7_c4585_14 from t7 as ref_0 group by ref_0.c_2_c46_1) as subq_0 where c_4_c4593_5 <= multiIf(true, 1, exp10(c_4_c4593_5) <= 1, 1, 1);
INSERT INTO test_01193_18429.table_8_868 VALUES 
INSERT INTO r1 SELECT 49 % 10 = 1 ? 49 - 1 : 49
SELECT arrayJoin(CAST(['hello', 'world'] AS Array(FixedString(5)))) LIKE '%orld%';
INSERT INTO src_6 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 4
CREATE DICTIONARY hierarchy_flat_dictionary ( id UInt64, parent_id UInt64 HIERARCHICAL ) PRIMARY KEY id SOURCE(CLICKHOUSE(TABLE 'hierarchy_source_table')) LAYOUT(FLAT()) LIFETIME(MIN 1 MAX 1000);
drop table tab3;
INSERT INTO t_02267 (b, a, c) SELECT 0, ['x'], ['1','2','3','4','5','6'] FROM numbers(1) ;
select 'test MergeTree with cluster';
CREATE DATABASE IF NOT EXISTS 01078_window_view_alter_query_watch
SELECT arrayCumSumNonNegative([toDecimal32(1.0,4), toDecimal32(1.0,4)]) x, toTypeName(x);
SELECT '-- Landing';
create table test_02481_mismatch_files (a UInt64, b String) engine = S3(s3_conn, filename='test_02481_mismatch_files_{_partition_id}', format=Parquet) partition by a;
INSERT INTO r5 SELECT 13 % 10 = 5 ? 13 - 1 : 13
SELECT toTypeName(WIDTH_BUCKET(1, 2, 3, toUInt32(1)));
CREATE TABLE test_01193_18429.table_1_405 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT toFloat64(number - 10) AS x, round(x), roundBankers(x), floor(x), ceil(x), trunc(x) FROM system.numbers LIMIT 20;
INSERT INTO insert_dedup_token VALUES
CREATE TABLE test_01193_18429.table_8_981 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP DATABASE IF EXISTS test_hac6ds3y 
INSERT INTO src_1 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 31
SELECT 'unique1'
DROP DATABASE IF EXISTS test_8yn6z6ow 
SELECT multiIf((col1 % 2) = 0, 'foo', 1, 'bar', toFixedString('baz', 16)) FROM multi_if_check;
alter table merge drop column dummy;
SELECT CASE WHEN 1 THEN toFixedString('foo', 16) WHEN (col1 % 3) = 0 THEN 'bar' ELSE toFixedString(col4, 16) END FROM multi_if_check;
CREATE DATABASE IF NOT EXISTS test_0r360gap 
SELECT CAST('y', 'Bool');
INSERT INTO test_01193_18429.table_9_915 VALUES 
SET insert_quorum = 2, insert_quorum_parallel = 0;
SELECT id FROM test_bf_indexOf WHERE indexOf(ary, 'value1') = 0 ORDER BY id FORMAT TSV;
SELECT arraySort(geohashesInBox(-0.1, -0.1, 0.1, 0.1, 5));
SELECT nan = toInt32(0), nan != toInt32(0), nan < toInt32(0), nan > toInt32(0), nan <= toInt32(0), nan >= toInt32(0);
SELECT t1.value, t2.value FROM test_table_join_1 AS t1 LEFT JOIN test_table_join_2 AS t2 ON t1.id = t2.id;
INSERT INTO FUNCTION remote('127.0.0.2', currentDatabase(), t1) VALUES 
INSERT INTO test_01193_18429.table_4_625 VALUES 
set allow_suspicious_low_cardinality_types=1;
CREATE TABLE test_2E7E7D453856467821745540323D3843764C476A6A2A27474528742F2C38226F227E39502F653946(x UInt8) Engine=Memory;
INSERT INTO table_1017_1 VALUES 
CREATE DATABASE IF NOT EXISTS test_08yoanxk 
select endsWith([1, NULL], [NULL]);
INSERT INTO test_01193_18429.table_10_507 VALUES 
SELECT base64Encode('');
create table test_table_url(id UInt32) ENGINE = URL('http://localhost/endpoint', 'JSONEachRow', 'deflate');
SELECT 'Running test stateless/02343_group_by_use_nulls.sql from pid=1726' 
DROP DATABASE IF EXISTS test_yjtuynfe 
INSERT INTO r4 SELECT 78 % 10 = 4 ? 78 - 1 : 78
SELECT -1, -2147483647, -1 = -2147483647, -1 != -2147483647, -1 < -2147483647, -1 <= -2147483647, -1 > -2147483647, -1 >= -2147483647, -2147483647 = -1, -2147483647 != -1, -2147483647 < -1, -2147483647 <= -1, -2147483647 > -1, -2147483647 >= -1 , toInt8(-1) = toInt32(-2147483647), toInt8(-1) != toInt32(-2147483647), toInt8(-1) < toInt32(-2147483647), toInt8(-1) <= toInt32(-2147483647), toInt8(-1) > toInt32(-2147483647), toInt8(-1) >= toInt32(-2147483647), toInt32(-2147483647) = toInt8(-1), toInt32(-2147483647) != toInt8(-1), toInt32(-2147483647) < toInt8(-1), toInt32(-2147483647) <= toInt8(-1), toInt32(-2147483647) > toInt8(-1), toInt32(-2147483647) >= toInt8(-1) , toInt8(-1) = toInt64(-2147483647), toInt8(-1) != toInt64(-2147483647), toInt8(-1) < toInt64(-2147483647), toInt8(-1) <= toInt64(-2147483647), toInt8(-1) > toInt64(-2147483647), toInt8(-1) >= toInt64(-2147483647), toInt64(-2147483647) = toInt8(-1), toInt64(-2147483647) != toInt8(-1), toInt64(-2147483647) < toInt8(-1), toInt64(-2147483647) <= toInt8(-1), toInt64(-2147483647) > toInt8(-1), toInt64(-2147483647) >= toInt8(-1) , toInt16(-1) = toInt32(-2147483647), toInt16(-1) != toInt32(-2147483647), toInt16(-1) < toInt32(-2147483647), toInt16(-1) <= toInt32(-2147483647), toInt16(-1) > toInt32(-2147483647), toInt16(-1) >= toInt32(-2147483647), toInt32(-2147483647) = toInt16(-1), toInt32(-2147483647) != toInt16(-1), toInt32(-2147483647) < toInt16(-1), toInt32(-2147483647) <= toInt16(-1), toInt32(-2147483647) > toInt16(-1), toInt32(-2147483647) >= toInt16(-1) , toInt16(-1) = toInt64(-2147483647), toInt16(-1) != toInt64(-2147483647), toInt16(-1) < toInt64(-2147483647), toInt16(-1) <= toInt64(-2147483647), toInt16(-1) > toInt64(-2147483647), toInt16(-1) >= toInt64(-2147483647), toInt64(-2147483647) = toInt16(-1), toInt64(-2147483647) != toInt16(-1), toInt64(-2147483647) < toInt16(-1), toInt64(-2147483647) <= toInt16(-1), toInt64(-2147483647) > toInt16(-1), toInt64(-2147483647) >= toInt16(-1) , toInt32(-1) = toInt32(-2147483647), toInt32(-1) != toInt32(-2147483647), toInt32(-1) < toInt32(-2147483647), toInt32(-1) <= toInt32(-2147483647), toInt32(-1) > toInt32(-2147483647), toInt32(-1) >= toInt32(-2147483647), toInt32(-2147483647) = toInt32(-1), toInt32(-2147483647) != toInt32(-1), toInt32(-2147483647) < toInt32(-1), toInt32(-2147483647) <= toInt32(-1), toInt32(-2147483647) > toInt32(-1), toInt32(-2147483647) >= toInt32(-1) , toInt32(-1) = toInt64(-2147483647), toInt32(-1) != toInt64(-2147483647), toInt32(-1) < toInt64(-2147483647), toInt32(-1) <= toInt64(-2147483647), toInt32(-1) > toInt64(-2147483647), toInt32(-1) >= toInt64(-2147483647), toInt64(-2147483647) = toInt32(-1), toInt64(-2147483647) != toInt32(-1), toInt64(-2147483647) < toInt32(-1), toInt64(-2147483647) <= toInt32(-1), toInt64(-2147483647) > toInt32(-1), toInt64(-2147483647) >= toInt32(-1) , toInt64(-1) = toInt32(-2147483647), toInt64(-1) != toInt32(-2147483647), toInt64(-1) < toInt32(-2147483647), toInt64(-1) <= toInt32(-2147483647), toInt64(-1) > toInt32(-2147483647), toInt64(-1) >= toInt32(-2147483647), toInt32(-2147483647) = toInt64(-1), toInt32(-2147483647) != toInt64(-1), toInt32(-2147483647) < toInt64(-1), toInt32(-2147483647) <= toInt64(-1), toInt32(-2147483647) > toInt64(-1), toInt32(-2147483647) >= toInt64(-1) , toInt64(-1) = toInt64(-2147483647), toInt64(-1) != toInt64(-2147483647), toInt64(-1) < toInt64(-2147483647), toInt64(-1) <= toInt64(-2147483647), toInt64(-1) > toInt64(-2147483647), toInt64(-1) >= toInt64(-2147483647), toInt64(-2147483647) = toInt64(-1), toInt64(-2147483647) != toInt64(-1), toInt64(-2147483647) < toInt64(-1), toInt64(-2147483647) <= toInt64(-1), toInt64(-2147483647) > toInt64(-1), toInt64(-2147483647) >= toInt64(-1) 
INSERT INTO test_01193_18429.table_8_23 VALUES 
SELECT * FROM line_as_string1
CREATE TABLE tab (key Tuple(UInt64, UInt64), val UInt64) ENGINE=Memory;
CREATE TABLE test_02504 (`a` UInt32, `b` UInt32) ENGINE = MergeTree ORDER BY a SETTINGS index_granularity = 21853, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 90, merge_max_block_size = 12135, prefer_fetch_merged_part_size_threshold = 4850824886, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 92, min_merge_bytes_to_use_direct_io = 2314165188, index_granularity_bytes = 10488866, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 86405, primary_key_compress_block_size = 27687
SELECT s, replaceOne(s, '_', 'o') AS a, replaceRegexpOne(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['__.', '.']) AS s);
DROP VIEW IF EXISTS test_view;
INSERT INTO test_02908_r1_115 SELECT rand64() FROM numbers(5);
SELECT * FROM bf_ngrambf_map_keys_test WHERE map['K0'] != 'V0' SETTINGS force_data_skipping_indices='map_keys_ngrambf';
INSERT INTO test_dictionary_source_table VALUES 
INSERT INTO without_deduplication VALUES 
select a, b from order_by_another order by a desc nulls last, b asc limit 4;
INSERT INTO r7 SELECT 47
CREATE TABLE test_61657D29384B64205C5537772E50764C5C65354C265257223B4C2E282B63696B4E4A27746A35232D(x UInt8) Engine=Memory;
CREATE TABLE test_287251542944226643367C307877383D35337E543E60302F745F562D496C6E507E3D615F3156302C(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_pfeh6v4k 
INSERT INTO r2 SELECT 50 % 10 = 2 ? 50 - 1 : 50
CREATE TABLE test_01193_18429.table_9_17 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE tab (`i8` Int8, `i16` Int16, `i32` Int32, `i64` Int64, `i128` Int128, `i256` Int256, `u8` UInt8, `u16` UInt16, `u32` UInt32, `u64` UInt64, `u128` UInt128, `u256` UInt256, `id` UUID, `s` String, `fs` FixedString(33), `a` Array(UInt8), `t` Tuple(UInt16, UInt32), `d` Date, `dt` DateTime('Asia/Istanbul'), `dt64` DateTime64(3, 'Asia/Istanbul'), `dec128` Decimal128(3), `dec256` Decimal256(4), `lc` LowCardinality(String)) ENGINE = MergeTree PARTITION BY (i8, i16, i32, i64, i128, i256, u8, u16, u32, u64, u128, u256, id, s, fs, a, t, d, dt, dt64, dec128, dec256, lc) ORDER BY tuple() SETTINGS index_granularity = 38302, min_bytes_for_wide_part = 467252394, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 43, merge_max_block_size = 11575, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 1657367, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 9557, primary_key_compress_block_size = 51901
SELECT x, 0 OR x, 1 OR x, x OR x, toNullable(0) OR x, toNullable(1) OR x, 0.0 OR x, 0.1 OR x, x OR 1 OR x, 0 OR x OR 1 OR x FROM (SELECT number % 2 ? number % 3 : NULL AS x FROM system.numbers LIMIT 10);
select count(), sum(number) from file('02841.parquet') where indexHint(i16 between -150 and 250);
DROP USER IF EXISTS 'session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_plaintext_password_two_profiles_two_roles';
SELECT '-- const date, non-const delta';
SELECT arrayJoin(CAST(['hello', 'world'] AS Array(FixedString(5)))) LIKE '%xyz%';
INSERT INTO test_01193_18429.table_1_397 VALUES 
INSERT INTO test_01193_18429.table_2_701 VALUES 
DROP DATABASE IF EXISTS test_16wuveew 
SELECT isNotNull('');
SELECT 'Running test stateless/02481_async_insert_race_long.sh from pid=1715' 
SELECT ta.t FROM ta, tb;
SELECT 'Running test stateless/02534_default_granularity.sql from pid=1726' 
CREATE TABLE test_01193_18429.table_7_986 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE dictdb_01376.table_for_dict ( key_column UInt64, value Float64 ) ENGINE = Memory();
SELECT arrayFirstOrNull(x -> x >= 2, emptyArrayUInt8());
CREATE TABLE test_01193_18429.table_1_923 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP TABLE IF EXISTS test_e0eg0w0i.test_nested_view_00740
select v, variantElement(v, 'Enum(''a'' = 1)') from format(JSONEachRow, 'v Variant(String, UInt32, Enum(''a'' = 1))', '{"v" : null}, {"v" : "string"}, {"v" : "a"}, {"v" : 1}, {"v" : 2}') format JSONEachRow;
CREATE DATABASE IF NOT EXISTS test_5hkep204 
CREATE DATABASE IF NOT EXISTS test_ao9ja0pw 
create table dist_layer_01223 as data_01223 Engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01223);
CREATE TABLE test_406550643B78222E2E6F21722E5E5B3E335725594B507320332E7553385F31615F716A3D6F3D5F3C(x UInt8) Engine=Memory;
SELECT Y, uniqHLL12(X) FROM (SELECT number AS X, round(toFloat32(1/(1 + (3*X*X - 7*X + 11) % 37)), 3) AS Y FROM system.numbers LIMIT 15) GROUP BY Y ORDER BY Y;
CREATE TABLE t1 (`id` Int64, `create_time` DateTime) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 11039, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 3350586007, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 70945, primary_key_compress_block_size = 61118
CREATE DATABASE IF NOT EXISTS test_1jmp1kid 
SELECT toString(toStartOfFiveMinutes(toDateTime(1549483055), 'Pacific/Pitcairn'), 'Pacific/Pitcairn');
CREATE TABLE test_01193_18429.table_6_403 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT number AS id, toString(number) AS s, range(number) AS arr FROM numbers(10) FORMAT JSONCompactStringsEachRow
SELECT * FROM input_function_table_3 FORMAT CSV
SELECT k, sumMerge(d) FROM agg_func_col GROUP BY k ORDER BY k;
CREATE DATABASE IF NOT EXISTS test_lfy5a05i 
DETACH TABLE codecs1;
SELECT singleValueOrNull(NULL);
CREATE DATABASE IF NOT EXISTS test_xof3fn58 
DROP DATABASE IF EXISTS test_xeq0ef8y 
select max(a + b) from (SELECT 1 AS a, 2 AS b);
GRANT session_log_test_role2 TO session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_plaintext_password_two_profiles_two_roles;
SELECT * FROM t1 ALL INNER JOIN tj ON t1.key3 = tj.key3 AND t1.key2 = tj.key2 AND t1.key1 = tj.key1 ORDER BY t1.key1;
SELECT toUInt16OrNull(NULL);
SELECT murmurHash3_64('');
select [1] = multiSearchAllPositions(materialize('abababababababababababab'), ['abababababababababa']);
SELECT CRC32IEEE('');
DROP DATABASE IF EXISTS test_36czbg9r 
SELECT replaceRegexpAll('1,,', '^[,]*|[,]*$', '');
INSERT INTO alter_table0 SELECT rand(1), rand(2), 1 / rand(3), toString(rand(4)), [rand(5), rand(6)], rand(7) % 2 ? NULL : generateUUIDv4(), (rand(8), rand(9)) FROM numbers(100000)
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 38357, 500 settings ignore_materialized_views_with_dropped_target_table=1
INSERT INTO test02910_second SELECT number, number, '2023-10-28 11:11:11.11111', ['b'] FROM numbers(10);
SELECT bitmapToArray(bitmapAnd(groupBitmapState(uid), bitmapBuild(CAST([4294967296, 4294967297, 4294967298], 'Array(UInt64)')))) FROM bitmap_test GROUP BY city_id ORDER BY city_id;
DROP TABLE IF EXISTS nested_nested_table
CREATE TABLE test_27786F492B46445247236C2D372833404E3D35325E514C465B562A3C676C44687E68355A5130605F(x UInt8) Engine=Memory;
select 'src_to_dst', 13, 'dst', type, n, _part from dst order by type, n
select 'IPv6';
CREATE DICTIONARY database_for_dict.dict2 (`key_column` UInt64, `value_column` String) PRIMARY KEY key_column SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict2' PASSWORD '[HIDDEN]' DB 'test_x25ggehc')) LIFETIME(MIN 1 MAX 5) LAYOUT(CACHE(SIZE_IN_CELLS 150))
INSERT INTO t7 SELECT quantileResampleState(0.10, 1, 2, 42)(number, number) FROM numbers(100);
CREATE DATABASE IF NOT EXISTS test_buh65omg 
SELECT '0', '-9007199254740994.000000000', 0 = -9007199254740994.000000000, 0 != -9007199254740994.000000000, 0 < -9007199254740994.000000000, 0 <= -9007199254740994.000000000, 0 > -9007199254740994.000000000, 0 >= -9007199254740994.000000000, -9007199254740994.000000000 = 0, -9007199254740994.000000000 != 0, -9007199254740994.000000000 < 0, -9007199254740994.000000000 <= 0, -9007199254740994.000000000 > 0, -9007199254740994.000000000 >= 0 , toUInt8(0) = -9007199254740994.000000000, toUInt8(0) != -9007199254740994.000000000, toUInt8(0) < -9007199254740994.000000000, toUInt8(0) <= -9007199254740994.000000000, toUInt8(0) > -9007199254740994.000000000, toUInt8(0) >= -9007199254740994.000000000, -9007199254740994.000000000 = toUInt8(0), -9007199254740994.000000000 != toUInt8(0), -9007199254740994.000000000 < toUInt8(0), -9007199254740994.000000000 <= toUInt8(0), -9007199254740994.000000000 > toUInt8(0), -9007199254740994.000000000 >= toUInt8(0) , toInt8(0) = -9007199254740994.000000000, toInt8(0) != -9007199254740994.000000000, toInt8(0) < -9007199254740994.000000000, toInt8(0) <= -9007199254740994.000000000, toInt8(0) > -9007199254740994.000000000, toInt8(0) >= -9007199254740994.000000000, -9007199254740994.000000000 = toInt8(0), -9007199254740994.000000000 != toInt8(0), -9007199254740994.000000000 < toInt8(0), -9007199254740994.000000000 <= toInt8(0), -9007199254740994.000000000 > toInt8(0), -9007199254740994.000000000 >= toInt8(0) , toUInt16(0) = -9007199254740994.000000000, toUInt16(0) != -9007199254740994.000000000, toUInt16(0) < -9007199254740994.000000000, toUInt16(0) <= -9007199254740994.000000000, toUInt16(0) > -9007199254740994.000000000, toUInt16(0) >= -9007199254740994.000000000, -9007199254740994.000000000 = toUInt16(0), -9007199254740994.000000000 != toUInt16(0), -9007199254740994.000000000 < toUInt16(0), -9007199254740994.000000000 <= toUInt16(0), -9007199254740994.000000000 > toUInt16(0), -9007199254740994.000000000 >= toUInt16(0) , toInt16(0) = -9007199254740994.000000000, toInt16(0) != -9007199254740994.000000000, toInt16(0) < -9007199254740994.000000000, toInt16(0) <= -9007199254740994.000000000, toInt16(0) > -9007199254740994.000000000, toInt16(0) >= -9007199254740994.000000000, -9007199254740994.000000000 = toInt16(0), -9007199254740994.000000000 != toInt16(0), -9007199254740994.000000000 < toInt16(0), -9007199254740994.000000000 <= toInt16(0), -9007199254740994.000000000 > toInt16(0), -9007199254740994.000000000 >= toInt16(0) , toUInt32(0) = -9007199254740994.000000000, toUInt32(0) != -9007199254740994.000000000, toUInt32(0) < -9007199254740994.000000000, toUInt32(0) <= -9007199254740994.000000000, toUInt32(0) > -9007199254740994.000000000, toUInt32(0) >= -9007199254740994.000000000, -9007199254740994.000000000 = toUInt32(0), -9007199254740994.000000000 != toUInt32(0), -9007199254740994.000000000 < toUInt32(0), -9007199254740994.000000000 <= toUInt32(0), -9007199254740994.000000000 > toUInt32(0), -9007199254740994.000000000 >= toUInt32(0) , toInt32(0) = -9007199254740994.000000000, toInt32(0) != -9007199254740994.000000000, toInt32(0) < -9007199254740994.000000000, toInt32(0) <= -9007199254740994.000000000, toInt32(0) > -9007199254740994.000000000, toInt32(0) >= -9007199254740994.000000000, -9007199254740994.000000000 = toInt32(0), -9007199254740994.000000000 != toInt32(0), -9007199254740994.000000000 < toInt32(0), -9007199254740994.000000000 <= toInt32(0), -9007199254740994.000000000 > toInt32(0), -9007199254740994.000000000 >= toInt32(0) , toUInt64(0) = -9007199254740994.000000000, toUInt64(0) != -9007199254740994.000000000, toUInt64(0) < -9007199254740994.000000000, toUInt64(0) <= -9007199254740994.000000000, toUInt64(0) > -9007199254740994.000000000, toUInt64(0) >= -9007199254740994.000000000, -9007199254740994.000000000 = toUInt64(0), -9007199254740994.000000000 != toUInt64(0), -9007199254740994.000000000 < toUInt64(0), -9007199254740994.000000000 <= toUInt64(0), -9007199254740994.000000000 > toUInt64(0), -9007199254740994.000000000 >= toUInt64(0) , toInt64(0) = -9007199254740994.000000000, toInt64(0) != -9007199254740994.000000000, toInt64(0) < -9007199254740994.000000000, toInt64(0) <= -9007199254740994.000000000, toInt64(0) > -9007199254740994.000000000, toInt64(0) >= -9007199254740994.000000000, -9007199254740994.000000000 = toInt64(0), -9007199254740994.000000000 != toInt64(0), -9007199254740994.000000000 < toInt64(0), -9007199254740994.000000000 <= toInt64(0), -9007199254740994.000000000 > toInt64(0), -9007199254740994.000000000 >= toInt64(0) ;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt64(1), toInt64(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toInt32(3), toInt32(3)] END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_2_608 VALUES 
INSERT INTO test_01193_18429.table_4_589 VALUES 
BACKUP DATABASE test_tsnnbsbz TO Disk('backups', '02915_lazy_loading_of_base_backups_test_tsnnbsbz_c') SETTINGS id='02915_lazy_loading_of_base_backups_test_tsnnbsbz_c', base_backup=Disk('backups', '02915_lazy_loading_of_base_backups_test_tsnnbsbz_b');
CREATE TABLE test_5647216A766D6843316A34253D22617E2E4547783879506B31794F7C765D5840517C53654D6C3251(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toInt8(2), toInt8(3)] ELSE [toInt64(3), toInt64(3)] END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_7_78 VALUES 
SELECT sum(1) FROM (SELECT * FROM system.numbers LIMIT 1000);
SET max_block_size = 1000;
drop table test_02249;
CREATE TABLE test_512C6F4943473E59453B53405F6C68624F784D247A4C4D755C6F45764A7370443675552144292957(x UInt8) Engine=Memory;
SELECT multiIf((number % 2) = 0, toFloat64(1), (number % 3) = 0, toUInt16(2), toInt8(3)) FROM system.numbers LIMIT 10;
INSERT INTO 01760_db.points VALUES 
INSERT INTO test_3916twhf.dst_02225 SETTINGS parallel_distributed_insert_select = 2, max_distributed_depth = 1 SELECT * FROM `test_3916twhf`.`src_02225`
CREATE DATABASE IF NOT EXISTS test_t6gztoyi 
INSERT INTO test_01193_18429.table_4_955 VALUES 
ALTER TABLE part_info FREEZE PARTITION '1970-10-02';
SELECT t.x, l.s, r.s, toTypeName(l.s), toTypeName(r.s) FROM nr AS l LEFT JOIN t AS r USING (s) ORDER BY t.x;
CREATE TABLE test_01193_18429.table_5_246 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT * FROM table_gcd_codec_int64;
INSERT INTO test_01193_18429.table_8_852 VALUES 
CREATE DATABASE IF NOT EXISTS test_zm8ng6vp 
SELECT count(*) FROM distributed WHERE a = 0 AND b = 0;
CREATE TABLE test_4665723823302B50642F302B344F3D2C3237263D54333E2E5672297953613E594226495523445130(x UInt8) Engine=Memory;
CREATE TABLE test_7C56653C55232F2F4B415D2B3C726A236C3039555A363D43406B306535586C6364472F5373407442(x UInt8) Engine=Memory;
SELECT count(*) FROM source WHERE toYear(ts_64) >= 2023;
INSERT INTO test_01193_18429.table_4_208 VALUES 
SELECT joinGet(join_any_left_null, 's', number) FROM numbers(3);
CREATE TABLE table_two (`id` UInt64, `value` UInt64) ENGINE = MergeTree PARTITION BY id ORDER BY value SETTINGS index_granularity = 8192, index_granularity_bytes = 0, min_bytes_for_wide_part = 100, ratio_of_defaults_for_sparse_serialization = 0.7345483303070068, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 909, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 600819, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 49762, primary_key_compress_block_size = 36983
SET max_bytes_before_external_group_by = '1Mi';
DROP DATABASE IF EXISTS test_p4jc61pb 
DROP TABLE l_lc;
SELECT sum(isNull(t1.x)), count(t1.x) FROM nt AS t1 LEFT JOIN nt AS t2 USING(x);
select formatDateTime(toDateTime('2022-01-08 02:11:29', 'UTC'), '%c') settings formatdatetime_format_without_leading_zeros = 1;
SELECT multiIf((number % 2) = 0, toInt64(1), (number % 3) = 0, toInt8(2), toInt8(3)) FROM system.numbers LIMIT 10;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), N >= toUInt32(1) as r FORMAT CSV;
SELECT avgWeighted(x, w) FROM values('x UInt16, w Int32', (4, 1), (1, 0), (10, 2));
DROP DATABASE IF EXISTS test_v7l1o664 
CREATE TABLE test_01193_18429.table_7_480 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT '61f0c404-5cb3-11e7-907b-a6006ad3dba0' != toUUID('61f0c404-5cb3-11e7-907b-a6006ad3dba1');
SELECT CASE WHEN (number % 2) = 0 THEN [toInt64(1), toInt64(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toUInt16(3), toUInt16(3)] END FROM system.numbers LIMIT 10;
SELECT 'Ok (1)';
SELECT b, a, c FROM buffer_00126 ORDER BY a, b, c;
SELECT count() FROM `test_36fdzvvr`.`xp` WHERE `A` GLOBAL IN (`_subquery814`)
SELECT 'Running test stateless/01320_create_sync_race_condition_zookeeper.sh from pid=1705' 
SELECT count() FROM ( SELECT cache_path, file_size, tupleElement(file_segment_range, 2) - tupleElement(file_segment_range, 1) + 1 as file_segment_size, formatReadableSize(file_size) as formatted_file_size, formatReadableSize(file_segment_size) as formatted_file_segment_size, tupleElement(file_segment_range, 2) as end_offset FROM ( SELECT arrayJoin(cache_paths) AS cache_path, local_path, remote_path, size as file_size FROM system.remote_data_paths WHERE endsWith(local_path, '.bin') ) AS data_paths INNER JOIN system.filesystem_cache_log AS cache_log ON data_paths.remote_path = cache_log.source_file_path WHERE query_id = '1374' ) WHERE file_segment_size < file_size AND end_offset + 1 != file_size AND file_segment_size < 20 * 1024 * 1024;
DROP TABLE dist_01781;
SELECT ISNULL('abc');
SELECT count() FROM test_table WHERE value_1 = '1' SETTINGS force_data_skipping_indices = 'value_1_idx';
SELECT '- ON NULL -';
alter table many_mutations delete where y = 144 * 2 settings mutations_sync = 0;
SELECT 'Running test stateless/00534_client_ignore_error.sh from pid=1722' 
SELECT multiIf(1, col2, (col1 % 3) = 0, 'bar', 'baz') FROM multi_if_check;
DROP DATABASE IF EXISTS test_ly83jqx0 
SELECT 34e-2_1;
SELECT kql_array_sort_asc([NULL], [NULL], [NULL]);
SELECT 'Running test stateless/02422_read_numbers_as_strings.sql from pid=1726' 
SELECT 'Running test stateless/01294_create_settings_profile.sql from pid=1705' 
WITH ((SELECT value FROM system.build_options WHERE name='BUILD_TYPE') AS build, (SELECT value FROM system.build_options WHERE name='CXX_FLAGS') as flags) SELECT build='Debug' OR flags LIKE '%fsanitize%'
INSERT INTO test_01193_18429.table_6_306 VALUES 
SELECT toDecimal32OrDefault ('', 4);
INSERT INTO bitmap_column_expr_test VALUES 
SELECT * FROM remote('127.0.0.{1,2}', generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8)))))))))))))))))', 1, 1, 1)) LIMIT 1 FORMAT Null
SELECT 'Running test stateless/02677_decode_url_component.sql from pid=1724' 
INSERT INTO test_01193_18429.table_9_690 VALUES 
CREATE TABLE test_01193_18429.table_1_10 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'Running test stateless/01655_window_functions_bug.sql from pid=1722' 
SELECT has(['a',NULL,'def','ghij'], 'ghij');
CREATE TABLE arrow_types3 (int8 Int8, uint8 Int8, int16 Int8, uint16 Int8, int32 Int8, uint32 Int8, int64 Int8, uint64 Int8, float32 Int8, float64 Int8, string FixedString(15), fixedstring FixedString(15), date Date, datetime Date, datetime64 DateTime64(6)) ENGINE = Memory
WITH '2020-02-05 14:34:12.333' as S, toDateTime64(S, 3) as DT64 SELECT materialize(DT64) = S;
INSERT INTO test_01193_18429.table_3_186 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toUInt8(2), toUInt8(3)] ELSE [toUInt16(3), toUInt16(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_5_471 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT COUNT(*) FROM adaptive_granularity_alter;
SELECT 'Running test stateless/01414_mutations_and_errors_zookeeper.sh from pid=1705' 
SELECT JSONExtract('{"a": "123456"}', 'a', 'FixedString(5)');
SELECT 'Running test stateless/02992_settings_overflow.sql from pid=1722' 
insert into test select number % 2 ? NULL : 42 as x from numbers(2);
CREATE DATABASE IF NOT EXISTS test_rh0p2zld 
SELECT CASE WHEN (number % 2) = 0 THEN [toInt32(1), toInt32(2)] WHEN (number % 3) = 0 THEN [toUInt8(2), toUInt8(3)] ELSE [toUInt16(3), toUInt16(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_537B533635495D71435B2E44783A762154714D674C652D4B7D2E4E3E305032292A515B7430532D61(x UInt8) Engine=Memory;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c7) AND (NOT c6)) OR (c1 AND (NOT c2) AND (NOT c4) AND (NOT c7)) OR ((NOT c2) AND (NOT c1) AND (NOT c0)) OR ((NOT c2) AND c1 AND c4 AND (NOT c6) AND (NOT c8)) OR (c6 AND (NOT c3)) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_6848306E67354C2353326D5A61487020576553733433702E5438774D3C58214F5C60657D72225A5E(x UInt8) Engine=Memory;
SELECT cutIPv6(IPv6StringToNum('2001:0DB8:AC10:FE01:FEED:BABE:CAFE:F00D'), 0, 2);
alter table many_mutations delete where y = 437 * 2 settings mutations_sync = 0;
CREATE QUOTA q9_01297 FOR INTERVAL 1 MINUTE MAX execution_time = '12K';
INSERT INTO replicated_deduplicate_by_columns_r2 VALUES 
select wkt(arrayMap(a -> arrayMap(b -> arrayMap(c -> (round(c.1, 6), round(c.2, 6)), b), a), polygonsUnionSpherical([[(29.453587685533865,59.779570356240356),(29.393139070478895,52.276266797422124),(40.636581470703206,59.38168915000267),(41.21084331372543,59.103467777099866),(29.786055068336193,52.146627480315004),(31.23682182965546,52.16517054781818),(41.69443223416517,58.85424941916091),(42.51048853740727,58.47703162291134),(32.59691566839227,52.22075341251539),(34.289476889931414,52.22075341251539),(43.02430176537451,58.07974369546071),(43.02430176537451,57.25537683364851),(35.468224883503325,52.2022335126388),(37.16078610504247,52.23926559241349),(43.02430176537451,56.26136189644947),(43.02430176537451,55.326904361850836),(38.33953409861437,52.16517054781818),(40.09254393520848,52.16517054781818),(44.4146199116388,55.3097062225408),(44.47506852669377,59.80998197603594),(39.72985224487867,59.931351417569715),(30.23941968124846,53.67744677450975),(30.20919537372098,54.63314259659509),(38.73245009647167,59.94649146557819),(37.2816833351524,59.97675082987618),(30.23941968124846,55.2752875586599),(30.33009260383092,56.19415599955667),(36.28428118674541,59.96162460231375),(34.863738732953635,59.97675082987618),(30.178971066193498,56.97640788219866),(30.178971066193498,57.91957806959033),(33.65476643185424,59.94649146557819),(32.32489690064491,59.94649146557819),(30.481214141468342,58.85424941916091),(30.571887064050795,59.99187015036608),(29.453587685533865,59.779570356240356)]], [[[(33.473420586689336,58.85424941916091),(32.23422397806246,58.492830557036),(32.173775363007486,58.03176922751564),(31.508840597402823,57.499784781503735),(31.750635057622702,56.86092686957355),(31.508840597402823,55.941082594334574),(32.20399967053497,55.515591939372456),(31.84130798020516,54.998862226280465),(31.418167674820367,54.422670886434275),(32.47601843828233,53.83826377018255),(32.08310244042503,53.408048308050866),(33.171177511414484,52.82758702113742),(34.77306581037117,52.91880107773494),(34.77306581037117,53.784726518357985),(34.108131044766516,54.17574726780569),(35.07530888564602,54.59813930694554),(34.25925258240394,54.96417435716029),(35.01486027059106,55.361278263643584),(33.50364489421682,55.37845402950552),(32.7480372060297,55.90721384574556),(35.67979503619571,55.68634475630185),(32.83871012861215,56.311688992608396),(34.591719965206266,56.29492065473883),(35.7100193437232,56.311688992608396),(33.83611227701915,56.695333481003644),(32.95960735872209,56.9434497616887),(36.072711034053015,57.091531913901434),(33.171177511414484,57.33702717078384),(36.193608264162954,57.499784781503735),(33.23162612646945,57.77481561306047),(36.43540272438284,58.04776787540811),(33.62454212432676,58.27099811968307),(36.344729801800376,58.54018474404165),(33.83611227701915,58.68186423448108),(34.74284150284369,59.565911441555244),(33.473420586689336,58.85424941916091)]], [[(34.65216858026123,58.91672306881671),(37.19101041256995,58.68186423448108),(36.01226241899805,58.28688958537609),(37.16078610504247,58.04776787540811),(35.74024365125068,57.79092907387934),(37.009664567405046,57.499784781503735),(35.77046795877817,57.25537683364851),(36.979440259877556,57.07510745541089),(34.22902827487645,56.794777197297435),(36.7074214921302,56.210968525786996),(34.712617195316206,56.10998276812964),(36.55629995449277,55.63519693782703),(35.13575750070099,55.53270067649592),(36.43540272438284,55.34409504165558),(34.83351442542614,55.01619492319591),(35.61934642114075,54.49294870011772),(34.89396304048112,54.12264226523038),(35.37755196092087,53.046178687628185),(37.43280487278982,52.95523300597458),(35.92158949641559,53.80257986695776),(36.91899164482259,53.856094327816805),(36.01226241899805,54.75541714463799),(37.765272255592166,55.189110239786885),(36.828318722240134,55.44708256557195),(38.03729102333953,55.652253637168315),(36.64697287707522,55.941082594334574),(38.21863686850443,56.05939028508024),(36.37495410932787,56.64551287174558),(38.30930979108689,56.992876013526654),(37.16078610504247,57.25537683364851),(38.127963945921984,57.516020773674256),(37.43280487278982,57.710289827306724),(38.33953409861437,57.935626886818994),(37.40258056526235,58.31865112960426),(38.58132855883426,58.744648733419496),(37.31190764267989,59.02578062465136),(34.65216858026123,58.91672306881671)]], [[(38.52087994377928,59.11898412389468),(39.54850639971376,58.713270635642914),(38.369758406141855,58.28688958537609),(38.85334732658162,58.06375936407028),(38.33953409861437,57.710289827306724),(38.73245009647167,57.48354156434209),(38.21863686850443,57.271721400459285),(38.97424455669155,56.87744603722649),(37.463029180317314,56.5623320541159),(38.94402024916407,56.05939028508024),(38.18841256097694,55.856355210835915),(38.490655636251795,55.53270067649592),(37.795496563119656,55.39562234093384),(38.30930979108689,55.154587013355666),(36.7074214921302,54.65063295250911),(37.31190764267989,53.92734063371401),(36.979440259877556,53.58783775557231),(37.855945178174615,52.91880107773497),(39.57873070724124,52.69956490610895),(38.33953409861437,53.281741738901104),(40.00187101262603,53.35396273604752),(39.54850639971376,53.58783775557231),(40.24366547284591,53.58783775557231),(39.97164670509855,53.98069568468355),(40.60635716317572,54.03398248547225),(40.39478701048334,54.44025165268903),(39.54850639971376,54.56310590284329),(39.54850639971376,54.87732350170489),(40.39478701048334,54.87732350170489),(40.39478701048334,55.24083903654295),(39.82052516746112,55.2752875586599),(39.760076552406154,55.75443792473942),(40.57613285564824,55.78844000174894),(40.425011318010824,56.19415599955667),(39.82052516746112,56.07626182891758),(39.79030085993364,56.41214455508424),(40.48545993306579,56.495655446714636),(40.33433839542836,56.95993246553937),(39.79030085993364,56.992876013526654),(39.72985224487867,57.46729112028032),(40.33433839542836,57.46729112028032),(40.24366547284591,58.04776787540811),(39.63917932229622,58.04776787540811),(39.63917932229622,58.382088724871295),(40.33433839542836,58.382088724871295),(40.45523562553831,58.9011152358548),(38.52087994377928,59.11898412389468)]]]))) format TSV;
insert into system.zookeeper (name, path, value) SELECT name, '/' || currentDatabase() || path, value from test_zkinsert;
select mapFromArrays(c, d) from table_map;
SELECT uniqCombined('');
CREATE TABLE test_6763566E645665537227393E7D3942674C347420493A5966345A4873563E707E70377B3D2F5F6C3D(x UInt8) Engine=Memory;
alter table many_mutations delete where y = 37 * 2 settings mutations_sync = 0;
SELECT 'Running test stateless/02025_having_filter_column.sql from pid=1726' 
SELECT 'Running test stateless/02873_s3_presigned_url_and_url_with_special_characters.sql from pid=1720' 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c9) AND c4 AND (NOT c9) AND c7) OR ((NOT c7) AND (NOT c8) AND c8 AND (NOT c5)) OR (c2 AND c8) OR (c2 AND (NOT c7) AND (NOT c8) AND c9 AND (NOT c5)) OR ((NOT c2) AND (NOT c6) AND c4 AND (NOT c8)) OR (c1 AND c6) OR (c2) OR ((NOT c2) AND c0 AND c1) OR ((NOT c6) AND (NOT c3) AND (NOT c1) AND (NOT c0) AND (NOT c8)) OR ((NOT c9) AND c4 AND c4 AND (NOT c3) AND c3) SETTINGS convert_query_to_cnf = 1
CREATE TABLE test_01193_18429.table_3_471 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO r3 SELECT 90
CREATE TABLE test_01193_18429.table_3_267 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT medianBFloat16Weighted(NULL);
CREATE TABLE test_01193_18429.table_7_844 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_8_256 VALUES 
INSERT INTO mt VALUES /* (46, 2) */ 
select splitByString('ab', '');
SELECT '1', '-9007199254740991.000000000', 1 = -9007199254740991.000000000, 1 != -9007199254740991.000000000, 1 < -9007199254740991.000000000, 1 <= -9007199254740991.000000000, 1 > -9007199254740991.000000000, 1 >= -9007199254740991.000000000, -9007199254740991.000000000 = 1, -9007199254740991.000000000 != 1, -9007199254740991.000000000 < 1, -9007199254740991.000000000 <= 1, -9007199254740991.000000000 > 1, -9007199254740991.000000000 >= 1 , toUInt8(1) = -9007199254740991.000000000, toUInt8(1) != -9007199254740991.000000000, toUInt8(1) < -9007199254740991.000000000, toUInt8(1) <= -9007199254740991.000000000, toUInt8(1) > -9007199254740991.000000000, toUInt8(1) >= -9007199254740991.000000000, -9007199254740991.000000000 = toUInt8(1), -9007199254740991.000000000 != toUInt8(1), -9007199254740991.000000000 < toUInt8(1), -9007199254740991.000000000 <= toUInt8(1), -9007199254740991.000000000 > toUInt8(1), -9007199254740991.000000000 >= toUInt8(1) , toInt8(1) = -9007199254740991.000000000, toInt8(1) != -9007199254740991.000000000, toInt8(1) < -9007199254740991.000000000, toInt8(1) <= -9007199254740991.000000000, toInt8(1) > -9007199254740991.000000000, toInt8(1) >= -9007199254740991.000000000, -9007199254740991.000000000 = toInt8(1), -9007199254740991.000000000 != toInt8(1), -9007199254740991.000000000 < toInt8(1), -9007199254740991.000000000 <= toInt8(1), -9007199254740991.000000000 > toInt8(1), -9007199254740991.000000000 >= toInt8(1) , toUInt16(1) = -9007199254740991.000000000, toUInt16(1) != -9007199254740991.000000000, toUInt16(1) < -9007199254740991.000000000, toUInt16(1) <= -9007199254740991.000000000, toUInt16(1) > -9007199254740991.000000000, toUInt16(1) >= -9007199254740991.000000000, -9007199254740991.000000000 = toUInt16(1), -9007199254740991.000000000 != toUInt16(1), -9007199254740991.000000000 < toUInt16(1), -9007199254740991.000000000 <= toUInt16(1), -9007199254740991.000000000 > toUInt16(1), -9007199254740991.000000000 >= toUInt16(1) , toInt16(1) = -9007199254740991.000000000, toInt16(1) != -9007199254740991.000000000, toInt16(1) < -9007199254740991.000000000, toInt16(1) <= -9007199254740991.000000000, toInt16(1) > -9007199254740991.000000000, toInt16(1) >= -9007199254740991.000000000, -9007199254740991.000000000 = toInt16(1), -9007199254740991.000000000 != toInt16(1), -9007199254740991.000000000 < toInt16(1), -9007199254740991.000000000 <= toInt16(1), -9007199254740991.000000000 > toInt16(1), -9007199254740991.000000000 >= toInt16(1) , toUInt32(1) = -9007199254740991.000000000, toUInt32(1) != -9007199254740991.000000000, toUInt32(1) < -9007199254740991.000000000, toUInt32(1) <= -9007199254740991.000000000, toUInt32(1) > -9007199254740991.000000000, toUInt32(1) >= -9007199254740991.000000000, -9007199254740991.000000000 = toUInt32(1), -9007199254740991.000000000 != toUInt32(1), -9007199254740991.000000000 < toUInt32(1), -9007199254740991.000000000 <= toUInt32(1), -9007199254740991.000000000 > toUInt32(1), -9007199254740991.000000000 >= toUInt32(1) , toInt32(1) = -9007199254740991.000000000, toInt32(1) != -9007199254740991.000000000, toInt32(1) < -9007199254740991.000000000, toInt32(1) <= -9007199254740991.000000000, toInt32(1) > -9007199254740991.000000000, toInt32(1) >= -9007199254740991.000000000, -9007199254740991.000000000 = toInt32(1), -9007199254740991.000000000 != toInt32(1), -9007199254740991.000000000 < toInt32(1), -9007199254740991.000000000 <= toInt32(1), -9007199254740991.000000000 > toInt32(1), -9007199254740991.000000000 >= toInt32(1) , toUInt64(1) = -9007199254740991.000000000, toUInt64(1) != -9007199254740991.000000000, toUInt64(1) < -9007199254740991.000000000, toUInt64(1) <= -9007199254740991.000000000, toUInt64(1) > -9007199254740991.000000000, toUInt64(1) >= -9007199254740991.000000000, -9007199254740991.000000000 = toUInt64(1), -9007199254740991.000000000 != toUInt64(1), -9007199254740991.000000000 < toUInt64(1), -9007199254740991.000000000 <= toUInt64(1), -9007199254740991.000000000 > toUInt64(1), -9007199254740991.000000000 >= toUInt64(1) , toInt64(1) = -9007199254740991.000000000, toInt64(1) != -9007199254740991.000000000, toInt64(1) < -9007199254740991.000000000, toInt64(1) <= -9007199254740991.000000000, toInt64(1) > -9007199254740991.000000000, toInt64(1) >= -9007199254740991.000000000, -9007199254740991.000000000 = toInt64(1), -9007199254740991.000000000 != toInt64(1), -9007199254740991.000000000 < toInt64(1), -9007199254740991.000000000 <= toInt64(1), -9007199254740991.000000000 > toInt64(1), -9007199254740991.000000000 >= toInt64(1) ;
SELECT toUInt64OrZero(NULL);
DROP DATABASE IF EXISTS test_rtxiakgy 
DROP DATABASE IF EXISTS test_pxyf7htt 
SELECT quantileExactExclusive(NULL);
insert into t_dist values 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (39 < 36 AND 102 > 0 ? 39 : 0)), throwIf(last != (39 < 36 AND 102 > 0 ? least(36 - 1, 39 + 102 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(36) LIMIT 39, 102);
CREATE TABLE test_7E4B756E3F276565743F63723B51204D6262304B266D423345786B554443533F5D295D457C214344(x UInt8) Engine=Memory;
TRUNCATE TABLE replicated_truncate1 SETTINGS replication_alter_partitions_sync=2;
CREATE TABLE test_01193_18429.table_9_268 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_6_45 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT arrayLast(x -> x >= 2, materialize([1, 2, 3]));
CREATE TABLE test_556654363B2A6F504140542D39662B48513651453956613D6731337147585E6D2C5C755C5626415F(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_3_67 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT topLevelDomain(NULL);
drop table dict_src;
INSERT INTO test_01193_18429.table_3_972 VALUES 
SELECT normalizeQuery('1 + 2, 3, 4');
INSERT INTO test_01193_18429.table_8_112 VALUES 
show create b;
SELECT '70' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:fc00::')))
select distinct a from sorting_key_empty_tuple;
SELECT addQuarters(NULL, NULL);
INSERT INTO r10 SELECT 62 % 10 = 10 ? 62 - 1 : 62
SELECT pointInPolygon((-4, -4), poly) FROM polygons ORDER BY id;
SET max_rows_to_read = 2000;
INSERT INTO FUNCTION remote('127.0.0.1', 'test_gfyagppn', 'async_inserts') FORMAT Values
SELECT multiIf((number % 2) = 0, [toUInt16(1), toUInt16(2)], (number % 3) = 0, [toFloat32(2), toFloat32(3)], [toInt8(3), toInt8(3)]) FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_zxffnpxh 
INSERT INTO test_01193_18429.table_9_313 VALUES 
DROP DATABASE IF EXISTS test_n6lig2oj_1
SELECT count() FROM t_cnf_fuzz WHERE (c6 AND c9 AND c5) OR (c2 AND (NOT c8) AND c5 AND c2) SETTINGS convert_query_to_cnf = 1
CREATE PROFILE s7_01294 SETTINGS max_memory_usage WRITABLE;
CREATE INDEX idx_tab4_5 ON tab4 (col1 DESC);
select xxHash32(toUInt16(0)) = xxHash32('\0\0');
DROP TABLE IF EXISTS alter_table_3;
DROP DATABASE IF EXISTS test_85nqgr3e 
SELECT 1 FROM test_table_join_1 AS t1 FULL JOIN test_table_join_2 AS t2 USING (id) INNER JOIN test_table_join_3 AS t3 USING(id);
CREATE TABLE tableCommon (`key` FixedString(15), `value` Nullable(Int8)) ENGINE = Log();
SELECT '-- (default)';
DROP NAMED COLLECTION IF EXISTS 02883_named_collections_override_test_5r4han3w_collection3;
SELECT toDateTime64('2011-11-11 11:11:11.1111111', 0);
SELECT value LIKE '%SANITIZE_COVERAGE%' FROM system.build_options WHERE name = 'CXX_FLAGS'
DROP TABLE IF EXISTS t_sparse_pk;
ALTER TABLE alter_attach DETACH PARTITION 2;
CREATE TABLE test_01193_18429.table_4_288 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT * FROM capnp_simple_types FORMAT CapnProto SETTINGS format_schema='/usr/share/clickhouse-test/queries/0_stateless/format_schemas/02030_capnp_simple_types:Message'
CREATE INDEX idx_tab2_4 ON tab2 (col3 DESC,col0 DESC);
CREATE TABLE s64 (x Int64) ENGINE = Memory;
SELECT 'Dictionary nullable';
CREATE TABLE test_02908_r2_278 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_278', 'r2') ORDER BY tuple()
CREATE TABLE test_01193_18429.table_4_257 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_7_332 VALUES 
CREATE TABLE test_01193_18429.table_3_892 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP TABLE IF EXISTS default_by_other_column
CREATE TABLE test_6A4F776020393D34356E4B536B50747D4B6B6E597341745E5B653B3864322C3C5C5325297759232D(x UInt8) Engine=Memory;
alter table data_01900_2 update s = 'bar_80' where 1;
CREATE TABLE test_296C405E6679685D274C622F214A5A4B392B772D2A6D322B256751622270783254727B4A304F4268(x UInt8) Engine=Memory;
select 1 = multiSearchAnyCaseInsensitive(materialize('AnIhBNnXKYQwRSuSqrDCnI'), ['', 'HBNNxkyqWRS', 'xKyqwrSUSQR', 'yQwr', 'ihbnnxKYQWrsUS', 'bnnXkYqwrSuS', 'qWRs', 'nXKyqWRSUS', 'qrdcN', 'NiHBnNXkYQWrS', 'NnXkYQwRSUsqRDCn', 'rSusqRd']) from system.numbers limit 10;
INSERT INTO test_01193_18429.table_7_499 VALUES 
DROP DATABASE IF EXISTS test_s2samrph 
SELECT boundingRatio(1000 + number, number * 1.5 - 111) FROM numbers(2);
CREATE DATABASE test_hdfs_2 ENGINE = HDFS('hdfs://localhost:12222');
SELECT count() FROM null_in_1 WHERE (a, b) IN (1, 1);
CREATE DATABASE IF NOT EXISTS test_lvk5uolh 
CREATE DATABASE IF NOT EXISTS test_sal600j4 
SELECT 'Running test stateless/02499_analyzer_aggregate_function_lambda_crash_fix.sql from pid=1724' 
select round(1000 * ngramSearchCaseInsensitiveUTF8('ÃÂ°ÃÂÃÂÃÂÃÂ´ÃÂµÃÂÃÂÃÂ·', 'ÃÂÃÂ±ÃÂ²ÃÂÃÂ´ÃÂµÃÂÃÂ¶'));
SET max_bytes_before_external_group_by = 200000000;
SELECT hierarchical_index_bytes_allocated > 0 FROM system.dictionaries WHERE name = 'hierarchy_flat_dictionary_index' AND database = currentDatabase();
SELECT COUNT() FROM system.mutations WHERE database = 'test_8vpf77vf' and is_done=0 and table = 'concurrent_alter_mt_2'
SELECT '1,a3,1,a4,1', arrayEnumerateUniqRanked(1,a3,1,a4,1) FROM arrays_test ORDER BY a1, a2;
SELECT number, neighbor(toString(number), -5) FROM numbers(10);
SELECT * FROM 02015_db.test_table_default;
SELECT quantiles(0.5, 0.9)(`number`) FROM numbers(10)
CREATE TABLE test_01193_18429.table_10_420 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT '...string keys...';
INSERT INTO test_01193_18429.table_6_744 VALUES 
SELECT `a`, count() FROM `test_oe01xgw9`.`pr_t` GROUP BY `a`, `b` ORDER BY `a` ASC LIMIT 500, 5
INSERT INTO defaults_on_defaults values 
SELECT lowerUTF8('');
CREATE TABLE test_02908_r1_224 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_224', 'r1') ORDER BY tuple()
INSERT INTO test_01193_18429.table_4_309 VALUES 
INSERT INTO tuples VALUES 
CREATE ROLE r5_01293 SETTINGS max_memory_usage MAX=5000000;
DROP TABLE local;
DROP DATABASE IF EXISTS test_81nfllq7 
DROP TABLE summing_merge_tree;
CREATE TABLE test_01193_18429.table_10_812 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select a, c from t1 join t2 on c = a;
DROP DATABASE IF EXISTS test_ykhcotp1 
insert into function file('02268_data.jsonl', 'TSV') select 1;
SELECT 1 UNION SELECT 1 UNION SELECT 1 UNION DISTINCT SELECT 1;
SELECT hex(toString(uniqStateForEach([1, NULL])));
DROP DATABASE IF EXISTS test_ppe4t0yg 
CREATE TABLE test_02908_r2_60 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_60', 'r2') ORDER BY tuple()
SELECT toDateTime('2010-01-01 01:02:03', 'UTC') AS k, count() GROUP BY k WITH TOTALS SETTINGS allow_experimental_analyzer = 1 FORMAT JSON
CREATE DATABASE IF NOT EXISTS test_b86y1gvm 
SELECT arrayJoin([[1, 2, 3]]) AS a, arrayJoin(a) AS b;
select 0 = isValidUTF8(toFixedString('\xf0\x28\x8c\xbc', 4)) from system.numbers limit 10;
select parseDateTimeInJodaSyntax('AD 1999 2000', 'G YYYY yyyy', 'UTC') = toDateTime('2000-01-01', 'UTC');
SELECT 'Running test stateless/02002_row_level_filter_bug.sh from pid=1705' 
CREATE TABLE test_01193_18429.table_7_310 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_55622B225F646D3E6F5D4D24276E7B624A302424514C3E316C383A3354575F5F226D55535D714756(x UInt8) Engine=Memory;
SELECT * FROM tskv ORDER BY binary_data
SELECT * FROM truncate_test_materialized_view;
CREATE TABLE test_01193_18429.table_2_285 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT * FROM temp WHERE x IN (toDecimal128(128, 3));
create table test3_00863 (id UInt64, code String) engine = Memory;
SELECT count() FROM t_cnf_fuzz WHERE (c8) OR (c4 AND (NOT c4) AND (NOT c7)) OR (c9 AND (NOT c7) AND (NOT c4) AND c5 AND c4) OR ((NOT c8) AND c9 AND (NOT c7) AND (NOT c1) AND (NOT c2)) SETTINGS convert_query_to_cnf = 0
INSERT INTO test_01193_18429.table_7_831 VALUES 
SELECT quantileBFloat16Weighted(NULL);
SELECT * FROM t0 INNER JOIN t1 USING x;
CREATE TABLE test_01193_18429.table_5_2 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_3F3C61395D5C44395B6055246A68534B707057524A256F5A516B2D31794D315D2E5A3A305A676150(x UInt8) Engine=Memory;
CREATE TABLE test (`id` String, `abc.1` String, `abc.2` String, `abc` String) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 326, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 14959, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 25070034, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 85433, primary_key_compress_block_size = 59557
alter table many_mutations delete where y = 19 * 2 settings mutations_sync = 0;
CREATE TABLE test_65226356707921592B757C384332363D485C256773464765675640253F237040757038756F5D2954(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_6_838 VALUES 
DROP DATABASE IF EXISTS test_08yoanxk 
SELECT `k` FROM `test_lbwqwrtb`.`test` ORDER BY `k` ASC LIMIT 89, 5
select date, a, b from t2 where (date, a, b) NOT IN (select date,a,b from t1);
SELECT randCanonical('');
 SELECT count() AS count FROM test_table WHERE t_date = '2021-07-15' AND c = 'aur' AND a=3130; 
alter table trunc attach partition id '2';
DROP TABLE f;
CREATE TABLE test_2E2A5660285862677A636A543C5C38363F50695869613E36627C423639497960635920493E58763A(x UInt8) Engine=Memory;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 27343, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE TABLE test_7A303A3B7B6B4036627A2A7048387D46386F6E282D7E39326832487460426870683C31742E60264B(x UInt8) Engine=Memory;
CREATE INDEX idx_tab2_2 ON tab2 (col3 DESC,col4 DESC);
select 0;
SELECT count() FROM test_table_complex WHERE dictGet('test_complex_dictionary_load_factor', 'value', (key_1, key_2)) != value;
CREATE TABLE IF NOT EXISTS merge (d Date DEFAULT '2000-01-01', x UInt64) ENGINE = MergeTree(d, x, 8192);
DROP DATABASE IF EXISTS test_q9njcdwj 
CREATE INDEX idx_tab4_1 ON tab4 (col1,col3 DESC);
CREATE DATABASE IF NOT EXISTS test_vgbe5elc 
CREATE DATABASE IF NOT EXISTS test_mbqwsgk2 
CREATE TABLE test_02908_r2_104 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_104', 'r2') ORDER BY tuple()
INSERT INTO test_01193_18429.table_6_585 VALUES 
select hex(sipHash64Keyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58)));
CREATE TABLE test_63655E264E5D3935466866614E636A7A784A20602D7672534136563D693F457C342A6C5F3B214962(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02122_parallel_formatting_Pretty.sh from pid=1726' 
DROP TABLE mutations_and_escaping_1648;
SELECT 'Running test stateless/02790_sql_standard_fetch.sql from pid=1715' 
insert into 02681_undrop_uuid values 
CREATE DATABASE IF NOT EXISTS test_9mudfgrm 
INSERT INTO t1 SELECT number, number FROM numbers(18, 2);
CREATE DATABASE IF NOT EXISTS test_0mj6mh2y 
INSERT INTO test_01193_18429.table_9_848 VALUES 
/* ddl_entry=query-0000000017 */ UNDROP TABLE test_0r4swpnk.`02681_undrop_uuid_on_cluster`
SELECT queryID();
INSERT INTO nbagames_string FORMAT JSONAsString
CREATE TABLE test_01193_18429.table_3_28 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_8_491 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_3_394 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP TABLE bitmap_test;
CREATE DATABASE IF NOT EXISTS test_pue6uffb 
SELECT count() FROM t_cnf_fuzz WHERE (c2 AND (NOT c8) AND (NOT c4) AND (NOT c5) AND (NOT c1)) OR (c2 AND (NOT c2) AND c7 AND c1 AND (NOT c6)) OR ((NOT c2) AND c1 AND c4 AND (NOT c1)) OR (c1 AND (NOT c0)) OR ((NOT c0)) OR (c9 AND c3) OR (c0 AND (NOT c1) AND c8 AND c8 AND (NOT c7)) SETTINGS convert_query_to_cnf = 0
select parseDateTime('01', '%I', 'UTC') = toDateTime('1970-01-01 01:00:00', 'UTC');
ALTER TABLE wv MODIFY QUERY SELECT count(a) AS count, mt.market * 2 as market, tumbleEnd(wid) AS w_end FROM mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND, 'US/Samoa') AS wid, mt.market;
insert into t_delete_projection select number, toString(number) from numbers(8192 * 10);
SELECT multiIf((number % 2) = 0, toFloat32(1), (number % 3) = 0, toInt8(2), toFloat32(3)) FROM system.numbers LIMIT 10;
SELECT a._shard_num AS shard_num, sum(1) as rows FROM remote('127.{1,2}', system, one) a GROUP BY shard_num ORDER BY shard_num;
SELECT toDecimal64(12345.6789, 4) AS x, ceil(x), ceil(x, 1), ceil(x, 2), ceil(x, 3), ceil(x, 4), ceil(x, 5);
 select * from (select key, value from num_1) l inner join (select key, value from num_2 inner join (select number * 7 as key from numbers(1e5)) as nn on num_2.key = nn.key settings join_algorithm='full_sorting_merge') r on l.key = r.key order by l.key limit 10 offset 10000 SETTINGS allow_experimental_analyzer=1, parallel_replicas_prefer_local_join=0, send_logs_level='trace', allow_experimental_parallel_reading_from_replicas = 2, max_parallel_replicas = 2, parallel_replicas_for_non_replicated_merge_tree = 1, cluster_for_parallel_replicas = 'test_cluster_one_shard_three_replicas_localhost', join_algorithm='hash'
SELECT 'Running test stateless/02372_data_race_in_avro.sh from pid=1705' 
CREATE TABLE test_596B522A4E644F2D3E6D4B364B50744F425F24704251673738287A46422044473E6C3C2666454E49(x UInt8) Engine=Memory;
SELECT formatDateTime(NULL);
select 'dst_to_src', 10, 'dst', type, n, _part from dst order by type, n
SELECT range(number)[-1] FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_10_417 VALUES 
SELECT 'Subqueries CTE';
select uniqStateDistinctMap(map(1, x)) OVER (PARTITION BY y) from test;
SELECT TABLE_NAME AS table_name, COLUMN_NAME AS column_name, COLUMN_TYPE AS column_type, IS_NULLABLE = 'YES' AS is_nullable, COLUMN_TYPE LIKE '%unsigned' AS is_unsigned, CHARACTER_MAXIMUM_LENGTH AS length, NUMERIC_PRECISION AS numeric_precision, IF(ISNULL(NUMERIC_SCALE), DATETIME_PRECISION, NUMERIC_SCALE) AS scale, COLUMN_COMMENT AS column_comment FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = 'test_5atb0nhs' AND TABLE_NAME IN ('foo') ORDER BY ORDINAL_POSITION
select count() from t_buf sample 1/2 format Null;
SELECT NULL, 1, 'test', [1, 2, 3], [(1, 1), (1, 1)];
CREATE TABLE test_01193_18429.table_1_710 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_10_756 VALUES 
INSERT INTO r3 SELECT 54 % 10 = 3 ? 54 - 1 : 54
DROP TABLE IF EXISTS alter_00147;
SELECT B, next_B FROM (SELECT A, B, neighbor(B, 1) AS next_B FROM (SELECT * FROM test ORDER BY B)) WHERE A == 1;
CHECK TABLE mt_without_pk SETTINGS max_threads = 1;
INSERT INTO test_01193_18429.table_6_210 VALUES 
INSERT INTO test_01193_18429.table_4_535 VALUES 
drop table buffer_01256;
INSERT INTO r8 SELECT 95 % 10 = 8 ? 95 - 1 : 95
INSERT INTO r2 SELECT 98 % 10 = 2 ? 98 - 1 : 98
INSERT INTO test_02908_r1_72 SELECT rand64() FROM numbers(5);
CREATE TABLE t2 (`delete_time` DateTime) ENGINE = MergeTree ORDER BY delete_time SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 11039, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 3350586007, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 70945, primary_key_compress_block_size = 61118
INSERT INTO test_01193_18429.table_9_644 VALUES 
SELECT countIfArrayArray([[1, NULL]], [[1, 0]]) AS `x` FROM numbers(3)
CREATE TABLE test_01193_18429.table_10_861 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_3_95 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT cutWWW('http://paul@www.example.com/a/b/c?a=b#d=f');
CREATE TABLE data_proj_order_by_incomp (`t` UInt64) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 29550, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.9263969659805298, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 9710, prefer_fetch_merged_part_size_threshold = 10090454122, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 2704980279, index_granularity_bytes = 29625262, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 72793, primary_key_compress_block_size = 57422
INSERT INTO test_01193_18429.table_8_637 VALUES 
DROP DATABASE IF EXISTS 01902_db2;
select cutToFirstSignificantSubdomainRFC('bar.foo.there-is-no-such-domain');
CREATE TABLE test_34273322772221387467304A2D55705630733262727161553C54356C2C7A5A2B23665052374B4F73(x UInt8) Engine=Memory;
SELECT count() FROM checksums_r1;
insert into t1 values
DROP TABLE codecs;
DROP DATABASE IF EXISTS test_6w477jap 
CREATE TABLE test_01193_18429.table_10_739 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT count(*) FROM system.session_log WHERE user = '02835_USER_25518' AND client_address = toIPv6('::')
SELECT 1 FROM mysql('127.0.0.1:9004', currentDatabase(), foo, 'default', '[HIDDEN]', SETTINGS connect_timeout = 100, connection_wait_timeout = 100)
DROP TABLE IF EXISTS anti_left_join;
CREATE TABLE test_29744A47594D70404254286D474A704F5420283E262031527B2D794E496F362A3D71473E6D5A7440(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_hznwvprf 
SYSTEM SYNC REPLICA zero_rows_per_granule2;
SELECT dateDiff('day', toDateTime64('2015-08-18 00:00:00', 0, 'UTC'), materialize(toDate('2015-08-19', 'UTC')));
desc file(dump14.sql, MySQLDump) settings input_format_mysql_dump_table_name='test2'
CREATE DATABASE IF NOT EXISTS test_tlfmbpxw 
CREATE TABLE test_01193_18429.table_9_641 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_3_146 VALUES 
SELECT DISTINCT regexpQuoteMeta(toString(number)) = toString(number) FROM numbers(100000);
CREATE TABLE test_01193_18429.table_1_495 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE DATABASE IF NOT EXISTS test_cy4ow2ks 
SELECT * FROM merge(currentDatabase(), 'test_s64_distributed|test_u64_distributed') WHERE _table = 'test_u64_distributed' ORDER BY value;
INSERT INTO 02416_test SELECT concat(toString(number), '_1'), number FROM numbers(1000);
INSERT INTO test_01193_18429.table_5_729 VALUES 
SELECT varSampStable(NULL);
SELECT 'dictGet';
DROP TABLE IF EXISTS replicated_with_sampling;
INSERT INTO replica_01108_1 SELECT * FROM system.numbers LIMIT 1 * 10, 10
CREATE TABLE test_02908_r2_192 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_192', 'r2') ORDER BY tuple()
INSERT INTO test_00724 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toUInt16(2) ELSE toInt32(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_5_237 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT toUUIDOrNull(value) FROM to_uuid_test;
CREATE TABLE test_01193_18429.table_6_561 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT arrayReverseSplit(x -> 1, [1, 2, 3, 4, 5]);
SELECT 'abc'
SELECT id AS using_id, toTypeName(using_id), t1.id AS t1_id, toTypeName(t1_id), t1.value AS t1_value, toTypeName(t1_value), t2.id AS t2_id, toTypeName(t2_id), t2.value AS t2_value, toTypeName(t2_value), t3.id AS t3_id, toTypeName(t3_id), t3.value AS t3_value, toTypeName(t3_value) FROM test_table_join_1 AS t1 INNER JOIN test_table_join_2 AS t2 USING (id) RIGHT JOIN test_table_join_3 AS t3 USING(id);
SELECT * FROM replace ORDER BY Id, Version;
drop table table_map;
select RTRIM(' foo ');
SELECT toDayOfWeek(toDateTime(1412106600), 0, 'Europe/London');
SELECT 'Running test stateless/02733_distinct.sql from pid=1726' 
create table tab_00386 (a Int8, b String, c Tuple(Int8), d Tuple(Tuple(Int8)), e Tuple(Int8, String), f Tuple(Tuple(Int8, String))) engine = MergeTree order by (b,c) partition by tuple()
INSERT INTO test_table_2 FORMAT JSONStringsEachRow 
CREATE TABLE test_01193_18429.table_8_110 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select 1 = position(materialize(''), '');
select 1 = multiSearchAny(materialize('abc'), ['']) from system.numbers limit 1000;
DROP DATABASE IF EXISTS test_5f3d9r0t 
DROP DATABASE IF EXISTS test_cy53e4ce 
CREATE TABLE test_347A522B6363526A55576067284A55232A7B59537277234E3B63417746445D4E64282A4B4A2A6923(x UInt8) Engine=Memory;
select uniqExact(_part), count() from tMM where toYYYYMM(d)+1 > 202010;
CREATE DATABASE IF NOT EXISTS test_4dp0cyrh 
SELECT 'Running test stateless/01825_type_json_in_array.sql from pid=1714' 
DROP DATABASE IF EXISTS test_vby7vye8 
SELECT quantileExactHigh(a), quantileExactHigh(b), quantileExactHigh(c) as x, toTypeName(x) FROM decimal WHERE a < 0;
WITH test1 AS (SELECT * FROM numbers(5)) SELECT * FROM test1;
CREATE TABLE four_rows_per_granule ( p Date, k UInt64, v1 UInt64, v2 Int64, Sign Int8, Version UInt8 ) ENGINE VersionedCollapsingMergeTree(Sign, Version) PARTITION BY toYYYYMM(p) ORDER BY k SETTINGS index_granularity_bytes=120, min_index_granularity_bytes = 100, write_final_mark = 0, enable_vertical_merge_algorithm=1, vertical_merge_algorithm_min_rows_to_activate=0, vertical_merge_algorithm_min_columns_to_activate=0, min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0;
SELECT 'Running test stateless/01576_if_null_external_aggregation.sql from pid=1718' 
select 0 = positionCaseInsensitiveUTF8('', 'ÃÂ°ÃÂÃÂ²');
SELECT '**** single-column sort ****';
CREATE DATABASE IF NOT EXISTS test_ly4u50uk 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (81 < 70 AND 69 > 0 ? 81 : 0)), throwIf(last != (81 < 70 AND 69 > 0 ? least(70 - 1, 81 + 69 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(70) LIMIT 81, 69);
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c4) AND (NOT c3)) OR ((NOT c5) AND (NOT c9) AND (NOT c4)) OR (c0) OR (c4 AND (NOT c1) AND (NOT c5) AND c7 AND c4) OR (c1 AND c6) OR (c7) OR ((NOT c0) AND (NOT c0) AND c8) OR ((NOT c1)) SETTINGS convert_query_to_cnf = 1
CREATE TABLE test_01193_18429.table_6_494 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select 1 = multiSearchAny(materialize('abcdefgh'), ['fg']) from system.numbers limit 129;
create table data_01527 engine=Memory() as select toUInt64(number) key from numbers(2);
select (1 ? (toUInt8(0) as i) : toUInt64(1)) = i;
CREATE TABLE test_01193_18429.table_8_689 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE DATABASE IF NOT EXISTS test_bmn0iwmh 
insert into test select '2', '00000000-0000-0000-0000-000000000000';
select toDate32('1990-02-01') = toDate('1990-02-01');
EXPLAIN SYNTAX (SELECT sum(uint64) + 2.11 * count(uint64) From test_table);
drop table without_nullable;
CREATE TABLE test_01193_18429.table_10_744 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (88 < 35 AND 108 > 0 ? 88 : 0)), throwIf(last != (88 < 35 AND 108 > 0 ? least(35 - 1, 88 + 108 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(35) LIMIT 88, 108);
INSERT INTO test_01193_18429.table_10_39 VALUES 
DROP DATABASE IF EXISTS test_qfwud4mk 
INSERT INTO t0 SELECT number, -number, number FROM numbers_mt(1e5);
SELECT concat('http://reddit.com/r/', subreddit, '/comments/', replaceRegexpOne(link_id, 't[0-9]_', '')) FROM ( SELECT y, subreddit, link_id, cnt FROM ( SELECT created_date AS y, link_id, subreddit, count(*) AS cnt FROM commententry1 WHERE toYear(created_date) = 2016 GROUP BY y, link_id, subreddit ORDER BY y ASC ) ORDER BY y ASC, cnt DESC LIMIT 1 BY y );
DROP TABLE join_table_mutation;
with '2018-01-12 22:33:44' as s, toDateTime(s) as datetime, toDateTime64(s, 6) as datetime64, toDate(s) as date, toDate32(s) as date32 SELECT formatDateTimeInJodaSyntax(datetime, 'KK'), formatDateTimeInJodaSyntax(datetime64, 'KK'), formatDateTimeInJodaSyntax(date, 'KK'), formatDateTimeInJodaSyntax(date32, 'KK');
SELECT * FROM system.tables WHERE database = 'test_bsv2kbio' LIMIT 1000000, 1;
SELECT arrayStringConcat(['Hello', 'World'], ', ');
SELECT sparkbar(9)(event_date,cnt) FROM (SELECT sum(value) as cnt, event_date FROM spark_bar_test GROUP BY event_date);
DROP DATABASE IF EXISTS test_56j7xa5j 
DROP DATABASE IF EXISTS test_icx1y63n 
INSERT INTO src VALUES /* (-26, 2) */ 
INSERT INTO test_01193_18429.table_10_731 VALUES 
SELECT count() FROM t_02708 SETTINGS allow_experimental_parallel_reading_from_replicas=1;
 select count() from system.filesystem_cache_log where query_id = 'QqrkhkJS' AND read_type != 'READ_FROM_CACHE'; 
CREATE TABLE test_285635606830764C71633F222E37405A713A764D4C69774F6C2F517D4A735F4D4B6566547B4A2D32(x UInt8) Engine=Memory;
CREATE TABLE t_with_dots (`id` UInt32, `arr` Array(UInt32), `b.id` UInt32, `b.arr` Array(UInt32)) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 62150, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 3029, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 13, min_merge_bytes_to_use_direct_io = 6221410830, index_granularity_bytes = 490418, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 81193, primary_key_compress_block_size = 13881
CREATE TABLE group_by_pk_lc_uint128 (`k` LowCardinality(UInt128), `v` UInt32) ENGINE = MergeTree PARTITION BY v % 50 ORDER BY k SETTINGS index_granularity = 62189, min_bytes_for_wide_part = 107774685, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 22585, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 8840207, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 77258, primary_key_compress_block_size = 31713
SELECT -1.34e+21;
CREATE DATABASE IF NOT EXISTS test_jy9emdsh 
SELECT keycol, enum_col FROM table_with_enum RIGHT JOIN table_key USING (keycol) ORDER BY keycol;
CREATE TABLE forms (`form_id` FixedString(24), `text_field` String) ENGINE = MergeTree PRIMARY KEY form_id ORDER BY form_id SETTINGS index_granularity = 32541, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 21980, prefer_fetch_merged_part_size_threshold = 7253370047, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 19255562, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 20848, primary_key_compress_block_size = 10851
DROP VIEW IF EXISTS test_02428_v1
INSERT INTO lc_nullable SELECT groupArray(num) AS order_key, groupArray(toInt8(num)) AS i8, groupArray(toInt16(num)) AS i16, groupArray(toInt32(num)) AS i32, groupArray(toInt64(num)) AS i64, groupArray(toUInt8(num)) AS u8, groupArray(toUInt16(num)) AS u16, groupArray(toUInt32(num)) AS u32, groupArray(toUInt64(num)) AS u64, groupArray(toFloat32(num)) AS f32, groupArray(toFloat64(num)) AS f64, groupArray(toDate(num, 'Asia/Istanbul')) AS date, groupArray(toDateTime(num, 'Asia/Istanbul')) AS date_time, groupArray(toString(num)) AS str, groupArray(toFixedString(toString(num), 5)) AS fixed_string FROM (SELECT negate(number) as num FROM system.numbers LIMIT 15);
drop table 02681_undrop_mergetree sync;
SET optimize_aggregators_of_group_by_keys = 1;
CREATE TABLE test_01193_18429.table_7_253 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_i4wgg5yb 
select tuple(toNullable(number + 1)) <= tuple(toNullable(number + 1)) from numbers(1);
SELECT count(), X FROM foo_merge JOIN t2 USING Val WHERE Val = 3 AND Id = 3 GROUP BY X;
CREATE TABLE test_475E3A7B6C664D7B4579692A527049435C5B4F44713475496F6556515F282454712B743F20484F31(x UInt8) Engine=Memory;
set input_format_csv_try_infer_numbers_from_strings=1;
DROP DATABASE IF EXISTS test_kstwmkc3 
CREATE TABLE test_01193_18429.table_3_695 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT *, x=4 FROM merge(currentDatabase(), '02763_merge_merge') ORDER BY x SETTINGS optimize_move_to_prewhere= 0;
CREATE TABLE test_5E624A3D72386F6152394839303654264C315371777C532027312C5E3D4241523B3E67532E2F4355(x UInt8) Engine=Memory;
CREATE TABLE test_6846357853604253784866205863576954242A6C784D5323592749445741254D75573524696D5D76(x UInt8) Engine=Memory;
SELECT * FROM tt_m WHERE b != a * 2 order by b, a;
CREATE DATABASE IF NOT EXISTS test_fca42s56 
SELECT dateDiff('month', toDate32('1927-01-01', 'UTC'), toDateTime64('1927-02-01 00:00:00', 3, 'UTC'), 'UTC');
SELECT multiIf((number % 2) = 0, toUInt8(1), (number % 3) = 0, toUInt8(2), toFloat64(3)) FROM system.numbers LIMIT 10;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt16(1) WHEN (number % 3) = 0 THEN toInt32(2) ELSE toFloat64(3) END FROM system.numbers LIMIT 10;
INSERT INTO test_qre9kwn4.table_for_dict FORMAT Values
SELECT 'Running test stateless/02711_soundex_function.sql from pid=1720' 
SELECT round(greatCircleDistance(0, 0, 0, 90), 4);
CREATE TABLE test_01193_18429.table_6_299 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT CASE WHEN 1 THEN [col2, 'bar'] WHEN (col1 % 3) = 0 THEN [col4, 'bar'] ELSE ['foo', col7] END FROM multi_if_check;
SELECT 1 FORMAT TabSeparated 
CREATE TABLE test_01193_18429.table_9_850 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT '= inner =';
SELECT JSONExtract(NULL, 'string_value', 'Nullable(String)') as x, toTypeName(x);
SELECT 'Running test stateless/01050_engine_join_view_crash.sql from pid=1724' 
desc s3Cluster('test_cluster_two_shards_localhost', 'http://localhost:11111/test/{a,b,c}.tsv');
INSERT INTO test_01193_18429.table_3_607 VALUES 
CREATE TABLE test_01193_18429.table_8_422 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO t_nested_offsets SELECT number, range(number % 10), range(number % 10) FROM numbers(1000);
WITH x AS (SELECT a-4000 a FROM cte1 AS t WHERE cte1.a >700), y AS (SELECT * FROM cte2), z AS (SELECT * FROM x WHERE a % 3 = 1), w AS (SELECT * FROM y WHERE a > 333 AND a < 1000) SELECT max(a), min(a), count(*) FROM y WHERE a <100;
SELECT reinterpretAsFloat32(a), reinterpretAsUInt32(toFloat32(0.2)) as a;
CREATE DATABASE IF NOT EXISTS test_ilpsuah2 
SELECT positionCaseInsensitive('',CAST('\0' AS Nullable(String)));
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (43 < 15 AND 56 > 0 ? 43 : 0)), throwIf(last != (43 < 15 AND 56 > 0 ? least(15 - 1, 43 + 56 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(15) LIMIT 43, 56);
select toDate('1991-01-02') > toDate32('1990-02-01');
SELECT 'Running test stateless/01666_great_circle_distance_ubsan.sql from pid=1714' 
select numuint, count(*) from test_table_select group by numuint
select number, number + 1, concat('string: ', toString(number)) from numbers(200000) format JSONCompact
SELECT quantilesExactHigh(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)(b) FROM decimal;
CREATE TABLE test_2B6A3E552C433025676158337B3A253572215E7C2E7B507251443B283C62342E373B5073205C7329(x UInt8) Engine=Memory;
SELECT 32769, -9223372036854775807, 32769 = -9223372036854775807, 32769 != -9223372036854775807, 32769 < -9223372036854775807, 32769 <= -9223372036854775807, 32769 > -9223372036854775807, 32769 >= -9223372036854775807, -9223372036854775807 = 32769, -9223372036854775807 != 32769, -9223372036854775807 < 32769, -9223372036854775807 <= 32769, -9223372036854775807 > 32769, -9223372036854775807 >= 32769 , toUInt16(32769) = toInt64(-9223372036854775807), toUInt16(32769) != toInt64(-9223372036854775807), toUInt16(32769) < toInt64(-9223372036854775807), toUInt16(32769) <= toInt64(-9223372036854775807), toUInt16(32769) > toInt64(-9223372036854775807), toUInt16(32769) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toUInt16(32769), toInt64(-9223372036854775807) != toUInt16(32769), toInt64(-9223372036854775807) < toUInt16(32769), toInt64(-9223372036854775807) <= toUInt16(32769), toInt64(-9223372036854775807) > toUInt16(32769), toInt64(-9223372036854775807) >= toUInt16(32769) , toUInt32(32769) = toInt64(-9223372036854775807), toUInt32(32769) != toInt64(-9223372036854775807), toUInt32(32769) < toInt64(-9223372036854775807), toUInt32(32769) <= toInt64(-9223372036854775807), toUInt32(32769) > toInt64(-9223372036854775807), toUInt32(32769) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toUInt32(32769), toInt64(-9223372036854775807) != toUInt32(32769), toInt64(-9223372036854775807) < toUInt32(32769), toInt64(-9223372036854775807) <= toUInt32(32769), toInt64(-9223372036854775807) > toUInt32(32769), toInt64(-9223372036854775807) >= toUInt32(32769) , toInt32(32769) = toInt64(-9223372036854775807), toInt32(32769) != toInt64(-9223372036854775807), toInt32(32769) < toInt64(-9223372036854775807), toInt32(32769) <= toInt64(-9223372036854775807), toInt32(32769) > toInt64(-9223372036854775807), toInt32(32769) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toInt32(32769), toInt64(-9223372036854775807) != toInt32(32769), toInt64(-9223372036854775807) < toInt32(32769), toInt64(-9223372036854775807) <= toInt32(32769), toInt64(-9223372036854775807) > toInt32(32769), toInt64(-9223372036854775807) >= toInt32(32769) , toUInt64(32769) = toInt64(-9223372036854775807), toUInt64(32769) != toInt64(-9223372036854775807), toUInt64(32769) < toInt64(-9223372036854775807), toUInt64(32769) <= toInt64(-9223372036854775807), toUInt64(32769) > toInt64(-9223372036854775807), toUInt64(32769) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toUInt64(32769), toInt64(-9223372036854775807) != toUInt64(32769), toInt64(-9223372036854775807) < toUInt64(32769), toInt64(-9223372036854775807) <= toUInt64(32769), toInt64(-9223372036854775807) > toUInt64(32769), toInt64(-9223372036854775807) >= toUInt64(32769) , toInt64(32769) = toInt64(-9223372036854775807), toInt64(32769) != toInt64(-9223372036854775807), toInt64(32769) < toInt64(-9223372036854775807), toInt64(32769) <= toInt64(-9223372036854775807), toInt64(32769) > toInt64(-9223372036854775807), toInt64(32769) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toInt64(32769), toInt64(-9223372036854775807) != toInt64(32769), toInt64(-9223372036854775807) < toInt64(32769), toInt64(-9223372036854775807) <= toInt64(32769), toInt64(-9223372036854775807) > toInt64(32769), toInt64(-9223372036854775807) >= toInt64(32769) 
DROP DATABASE IF EXISTS test_rndxxli6 
EXPLAIN description = 0 SELECT toDate(timestamp) AS s FROM test_table ORDER BY toDate(timestamp) LIMIT 1 SETTINGS optimize_read_in_order = 1;
SELECT mutation_id, command, is_done FROM system.mutations WHERE database = 'test_g2ggxcxn' and table = 'mutations_cleaner_r2' ORDER BY mutation_id
CREATE TABLE stripe9 ENGINE = StripeLog AS SELECT number AS x FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_syvx3owd 
CREATE TABLE test_6B514F6D41444C484666294B5A503B707C3066614340492752693D5B3A45667D4B444E3D267A765A(x UInt8) Engine=Memory;
SELECT * FROM t1 JOIN t2 ON t1.id = t2.id AND 1 SETTINGS allow_experimental_analyzer = 1;
CREATE TABLE test_5961772B452C3C2955783B2C5B215826203D525C706674244D4B65337940457D7D3258656A2F7245(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_5_882 VALUES 
alter table many_mutations delete where y = 741 * 2 settings mutations_sync = 0;
SELECT dictHas('02179_test_dictionary', 0, 5);
SELECT subDate('2022-05-07'::DateTime, INTERVAL 5 MINUTE);
INSERT INTO r2 SELECT 58
SELECT toDateTime64('1111111111222', 3, 'Asia/Istanbul');
SELECT * FROM decimal ORDER BY a, b, c, d, e, f, g, h, i, j;
create database 02911_support_alias_column_in_indices;
CREATE TABLE test_5E5B2033547758363C7E7D70644B536C67795E3677603E3C7D794C4F3847606B7E2C5A49595C366B(x UInt8) Engine=Memory;
CREATE INDEX idx_tab4_1 ON tab4 (col3,col1 DESC);
SET join_algorithm = 'direct';
SELECT _shard_num FROM clusterAllReplicas('test_cluster_one_shard_two_replicas') ORDER BY _shard_num;
CREATE TABLE test_01193_18429.table_10_796 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT date, id, name, value FROM (SELECT date, name, value, min(id) AS id FROM test_00597 GROUP BY date, name, value) WHERE id = 1;
SELECT hasColumnInTable('localhost', currentDatabase(), 'has_column_in_table', 'not_existing');
SELECT dateDiff('hour', toDate32('1927-01-01', 'UTC'), toDateTime64('1927-01-02 00:00:00', 3, 'UTC'), 'UTC');
CREATE DATABASE IF NOT EXISTS test_k3tp12l9 
ALTER TABLE table_for_concurrent_alter MODIFY SETTING parts_to_throw_insert = 141, parts_to_delay_insert = 141, min_merge_bytes_to_use_direct_io = 141
SELECT arrayPushFront([], []);
SELECT '1e-19' AS x, toDecimal64(x, 18);
CREATE TABLE test_733872545B2F747A79353F5B496F315949763947215D692B546F43357E2A505F5460477D6F40724E(x UInt8) Engine=Memory;
INSERT INTO test1_00395(col1,col2,col3) VALUES 
INSERT INTO test_01193_18429.table_2_645 VALUES 
SELECT arraySum(x) FROM test_aggregation;
CREATE TABLE test_01193_18429.table_9_506 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP DATABASE IF EXISTS test_dkvqyz5c 
DROP DATABASE IF EXISTS test_8brkxk80 
CREATE TABLE test_25516A5B3E2C4D2F235F4C6C6D683234487C54497B4028555B755F37427A726670494E54657A5A37(x UInt8) Engine=Memory;
CREATE TABLE t1_shard (`id` Int32) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 3367, min_bytes_for_wide_part = 811392361, ratio_of_defaults_for_sparse_serialization = 0.48093560338020325, replace_long_file_name_to_hash = true, max_file_name_length = 118, merge_max_block_size = 10555, prefer_fetch_merged_part_size_threshold = 8577798220, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 13463602, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 50584, primary_key_compress_block_size = 68560
CREATE TABLE mt (`x` String, `y` UInt64, INDEX idx y TYPE minmax GRANULARITY 1) ENGINE = MergeTree ORDER BY y SETTINGS index_granularity = 25594, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 12854, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 216077, vertical_merge_algorithm_min_columns_to_activate = 80, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 28159786, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 26064, primary_key_compress_block_size = 99689
INSERT INTO r8 SELECT 39
CREATE TABLE test_01193_18429.table_4_629 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
alter table many_mutations delete where y = 486 * 2 settings mutations_sync = 0;
INSERT INTO dictionary_decimal_polygons_source_table VALUES 
CREATE DATABASE IF NOT EXISTS test_jhavh1hq 
CREATE TABLE rep_fsync_r1 (`key` Int) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/rep_fsync', 'r1') ORDER BY key SETTINGS min_rows_for_wide_part = 2, fsync_after_insert = 1, fsync_part_directory = 1, index_granularity = 25801, min_bytes_for_wide_part = 509248814, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 79, merge_max_block_size = 9385, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 853151, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 5985280, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 59185, primary_key_compress_block_size = 77080
SELECT x, u, s FROM parallel_replicas_backup ORDER BY x, u, s ASC;
DROP DATABASE IF EXISTS test_mexlee10 
select 1 = isValidUTF8(toFixedString('\x7F\x00', 2)) from system.numbers limit 10;
select a, count() from pr_t group by a, b order by a limit 5 offset 500;
CREATE DATABASE IF NOT EXISTS test_0t6ef2w6 
INSERT INTO test_01193_18429.table_3_264 VALUES 
SELECT t1.id, t1.value, t2.id, t2.value, t3.id, t3.value FROM test_table_join_1 AS t1 LEFT JOIN test_table_join_2 AS t2 ON t1.id = t2.id AND t1.value == 'Join_1_Value_0' LEFT JOIN test_table_join_3 AS t3 ON t2.id = t3.id AND t2.value == 'Join_2_Value_0';
insert into function file(02475_data.bsonEachRow, auto, 'tuple Tuple(UInt64, String)') select tuple(number, 'Hello') from numbers(5) settings engine_file_truncate_on_insert=1
select round(1000 * ngramDistanceCaseInsensitive(materialize('ABCdefgH'), materialize('aaaaaaaa')))=round(1000 * ngramDistanceCaseInsensitive(materialize('ABCdefgH'), 'aaaaaaaa')) from system.numbers limit 5;
CREATE TABLE samples (`key` UInt32, `value` UInt32) ENGINE = MergeTree PRIMARY KEY key ORDER BY key SETTINGS index_granularity = 52058, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 21294, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 3147747297, index_granularity_bytes = 5141615, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 64403, primary_key_compress_block_size = 85322
CREATE WINDOW VIEW test_kna0pcoi.wv INNER ENGINE = AggregatingMergeTree ORDER BY wid ENGINE = Memory AS SELECT count(a) AS count, tumble(timestamp, toIntervalSecond('1')) AS wid FROM test_kna0pcoi.mt GROUP BY wid
SELECT count() FROM numbers(30);
INSERT INTO test_01193_18429.table_4_158 VALUES 
CREATE INDEX idx_tab4_5 ON tab4 (col3 DESC,col1 DESC,col4 DESC);
CREATE TABLE test_735F72557967714B524D757545657E54724E5C4849575D3A31716B2D522F3C574B4A2D407E45333B(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS t_s3_compressed_blocks;
SELECT count() >= 20, count() <= 22 FROM ( SELECT x FROM ( SELECT zero AS x FROM system.zeros SETTINGS max_block_size = 2, max_rows_to_read = 20, read_overflow_mode = 'break' ) UNION ALL SELECT x FROM ( SELECT zero + 1 AS x FROM system.zeros SETTINGS max_block_size = 2, max_rows_to_read = 10, read_overflow_mode = 'break' ) );
SELECT s, y FROM test_02559 PREWHERE y ORDER BY s;
SET async_insert_busy_timeout_min_ms = 1000000;
select 1 = positionCaseInsensitive('ÃÂ°ÃÂ±ÃÂ²', '');
SELECT sum(a) == 55 FROM t1 FULL JOIN t2 ON (t1.a + t1.b = t2.a + t2.b - 100) WHERE 1;
drop table if exists dist_01320;
SELECT quantileExactHigh(0.0)(a), quantileExactHigh(0.0)(b), quantileExactHigh(0.0)(c) FROM decimal WHERE a >= 0;
INSERT INTO bloom_filter_sizing_sec SELECT number % 100 as key1, -- 100 unique keys rand() % 100 as key2, -- 100 unique keys number as value -- whatever FROM numbers(1000 * 1000);
select minMap(val) from values ('val Map(UInt256, UInt256)', (map(1, 1)), (map(1, 2)));
ALTER TABLE concurrent_alter_column ADD COLUMN c238 DOUBLE;
INSERT INTO r8 SELECT 27
SYSTEM RELOAD DICTIONARY dict_db_01254.dict;
DROP TABLE IF EXISTS roundtrip_no_length_delimiter_protobuf_00825;
CREATE TABLE test_245524702B525564212D7E773450556F5C354474457D585E3934797E2443492E2B56487945506429(x UInt8) Engine=Memory;
CREATE TABLE j (id UInt8, val UInt8) Engine = Join(ALL, INNER, id);
SELECT 'SELECT N > toUInt32(1)';
SELECT count() FROM lc_nullable WHERE has(date_time, toDateTime('1970-01-01 02:00:05', 'Asia/Istanbul'));
select 0 = position('abc', materialize('defg'));
SELECT `number` FROM `test_ogkb7p2h`.`numbers500k` ORDER BY `number` DESC NULLS FIRST
CREATE INDEX idx_tab3_1 ON tab3 (col4,col3 DESC);
SELECT 'Running test stateless/00972_desc_table_virtual_columns.sql from pid=1724' 
select case 1 when 1 then 'a' end value;
SELECT 8, 0, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (8 < 13 AND 0 > 0 ? 8 : 0)), throwIf(last != (8 < 13 AND 0 > 0 ? least(13 - 1, 8 + 0 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 8, 0);
DROP DATABASE IF EXISTS test_mffqped6 
select polygonsIntersectionCartesian([[[(0., 0.),(0., 3.),(1., 2.9),(2., 2.6),(2.6, 2.),(2.9, 1.),(3., 0.),(0., 0.)]]], [[[(3., 3.),(3., 4.),(4., 4.),(4., 3.),(3., 3.)]]]);
ALTER TABLE concurrent_alter_column ADD COLUMN c453 DOUBLE;
CREATE TABLE test_3D612D7620346730324966564A2D5C3E4A55404E794A3039375A5D2F676C6E763566422B4E36202D(x UInt8) Engine=Memory;
CREATE TABLE test_4D277171577C65717C2775784043436931707E2C3954417B342F607269287D3E3F4B6541302B4761(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toInt32(3), toInt32(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_34262032255B6D2B304D682E3B213636217E756E40206137722068644E725E7D322B4979364B6F59(x UInt8) Engine=Memory;
SELECT wkt((0., 0.));
ALTER TABLE alter_table MODIFY COLUMN value LowCardinality(String)
select parseDateTime('00', '%k', 'UTC') = toDateTime('1970-01-01 00:00:00', 'UTC');
DROP DATABASE IF EXISTS test_mz5842uu 
SELECT hex(toInt256(100000000000)) AS res;
select count() from (select number from numbers(10) except select 5);
SELECT randUniform(NULL);
DROP TABLE IF EXISTS t_json_local;
drop table if exists test_02241
select mapPopulateSeries([toUInt64(1), 2], [toUInt64(1), 1]) as res, toTypeName(res);
DROP DATABASE IF EXISTS test_erpojy9w 
CREATE TABLE normalize_test (`id` int, `value` String) ENGINE = MergeTree ORDER BY value SETTINGS index_granularity = 3938, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 14514, prefer_fetch_merged_part_size_threshold = 1143319460, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 33, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 1216360, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 40730, primary_key_compress_block_size = 33874
INSERT INTO test_01193_18429.table_1_933 VALUES 
SELECT * FROM merge(currentDatabase(), '02763_merge_log_1') ORDER BY x SETTINGS optimize_move_to_prewhere= 1;
DROP TABLE IF EXISTS without_deduplication_mv;
CREATE DATABASE IF NOT EXISTS test_u2frzd8s 
SELECT 0 IN (SELECT 1);
CREATE TABLE test_01193_18429.table_1_279 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_9_253 VALUES 
SELECT 32768, -32767, 32768 = -32767, 32768 != -32767, 32768 < -32767, 32768 <= -32767, 32768 > -32767, 32768 >= -32767, -32767 = 32768, -32767 != 32768, -32767 < 32768, -32767 <= 32768, -32767 > 32768, -32767 >= 32768 , toUInt16(32768) = toInt16(-32767), toUInt16(32768) != toInt16(-32767), toUInt16(32768) < toInt16(-32767), toUInt16(32768) <= toInt16(-32767), toUInt16(32768) > toInt16(-32767), toUInt16(32768) >= toInt16(-32767), toInt16(-32767) = toUInt16(32768), toInt16(-32767) != toUInt16(32768), toInt16(-32767) < toUInt16(32768), toInt16(-32767) <= toUInt16(32768), toInt16(-32767) > toUInt16(32768), toInt16(-32767) >= toUInt16(32768) , toUInt16(32768) = toInt32(-32767), toUInt16(32768) != toInt32(-32767), toUInt16(32768) < toInt32(-32767), toUInt16(32768) <= toInt32(-32767), toUInt16(32768) > toInt32(-32767), toUInt16(32768) >= toInt32(-32767), toInt32(-32767) = toUInt16(32768), toInt32(-32767) != toUInt16(32768), toInt32(-32767) < toUInt16(32768), toInt32(-32767) <= toUInt16(32768), toInt32(-32767) > toUInt16(32768), toInt32(-32767) >= toUInt16(32768) , toUInt16(32768) = toInt64(-32767), toUInt16(32768) != toInt64(-32767), toUInt16(32768) < toInt64(-32767), toUInt16(32768) <= toInt64(-32767), toUInt16(32768) > toInt64(-32767), toUInt16(32768) >= toInt64(-32767), toInt64(-32767) = toUInt16(32768), toInt64(-32767) != toUInt16(32768), toInt64(-32767) < toUInt16(32768), toInt64(-32767) <= toUInt16(32768), toInt64(-32767) > toUInt16(32768), toInt64(-32767) >= toUInt16(32768) , toUInt32(32768) = toInt16(-32767), toUInt32(32768) != toInt16(-32767), toUInt32(32768) < toInt16(-32767), toUInt32(32768) <= toInt16(-32767), toUInt32(32768) > toInt16(-32767), toUInt32(32768) >= toInt16(-32767), toInt16(-32767) = toUInt32(32768), toInt16(-32767) != toUInt32(32768), toInt16(-32767) < toUInt32(32768), toInt16(-32767) <= toUInt32(32768), toInt16(-32767) > toUInt32(32768), toInt16(-32767) >= toUInt32(32768) , toUInt32(32768) = toInt32(-32767), toUInt32(32768) != toInt32(-32767), toUInt32(32768) < toInt32(-32767), toUInt32(32768) <= toInt32(-32767), toUInt32(32768) > toInt32(-32767), toUInt32(32768) >= toInt32(-32767), toInt32(-32767) = toUInt32(32768), toInt32(-32767) != toUInt32(32768), toInt32(-32767) < toUInt32(32768), toInt32(-32767) <= toUInt32(32768), toInt32(-32767) > toUInt32(32768), toInt32(-32767) >= toUInt32(32768) , toUInt32(32768) = toInt64(-32767), toUInt32(32768) != toInt64(-32767), toUInt32(32768) < toInt64(-32767), toUInt32(32768) <= toInt64(-32767), toUInt32(32768) > toInt64(-32767), toUInt32(32768) >= toInt64(-32767), toInt64(-32767) = toUInt32(32768), toInt64(-32767) != toUInt32(32768), toInt64(-32767) < toUInt32(32768), toInt64(-32767) <= toUInt32(32768), toInt64(-32767) > toUInt32(32768), toInt64(-32767) >= toUInt32(32768) , toInt32(32768) = toInt16(-32767), toInt32(32768) != toInt16(-32767), toInt32(32768) < toInt16(-32767), toInt32(32768) <= toInt16(-32767), toInt32(32768) > toInt16(-32767), toInt32(32768) >= toInt16(-32767), toInt16(-32767) = toInt32(32768), toInt16(-32767) != toInt32(32768), toInt16(-32767) < toInt32(32768), toInt16(-32767) <= toInt32(32768), toInt16(-32767) > toInt32(32768), toInt16(-32767) >= toInt32(32768) , toInt32(32768) = toInt32(-32767), toInt32(32768) != toInt32(-32767), toInt32(32768) < toInt32(-32767), toInt32(32768) <= toInt32(-32767), toInt32(32768) > toInt32(-32767), toInt32(32768) >= toInt32(-32767), toInt32(-32767) = toInt32(32768), toInt32(-32767) != toInt32(32768), toInt32(-32767) < toInt32(32768), toInt32(-32767) <= toInt32(32768), toInt32(-32767) > toInt32(32768), toInt32(-32767) >= toInt32(32768) , toInt32(32768) = toInt64(-32767), toInt32(32768) != toInt64(-32767), toInt32(32768) < toInt64(-32767), toInt32(32768) <= toInt64(-32767), toInt32(32768) > toInt64(-32767), toInt32(32768) >= toInt64(-32767), toInt64(-32767) = toInt32(32768), toInt64(-32767) != toInt32(32768), toInt64(-32767) < toInt32(32768), toInt64(-32767) <= toInt32(32768), toInt64(-32767) > toInt32(32768), toInt64(-32767) >= toInt32(32768) , toUInt64(32768) = toInt16(-32767), toUInt64(32768) != toInt16(-32767), toUInt64(32768) < toInt16(-32767), toUInt64(32768) <= toInt16(-32767), toUInt64(32768) > toInt16(-32767), toUInt64(32768) >= toInt16(-32767), toInt16(-32767) = toUInt64(32768), toInt16(-32767) != toUInt64(32768), toInt16(-32767) < toUInt64(32768), toInt16(-32767) <= toUInt64(32768), toInt16(-32767) > toUInt64(32768), toInt16(-32767) >= toUInt64(32768) , toUInt64(32768) = toInt32(-32767), toUInt64(32768) != toInt32(-32767), toUInt64(32768) < toInt32(-32767), toUInt64(32768) <= toInt32(-32767), toUInt64(32768) > toInt32(-32767), toUInt64(32768) >= toInt32(-32767), toInt32(-32767) = toUInt64(32768), toInt32(-32767) != toUInt64(32768), toInt32(-32767) < toUInt64(32768), toInt32(-32767) <= toUInt64(32768), toInt32(-32767) > toUInt64(32768), toInt32(-32767) >= toUInt64(32768) , toUInt64(32768) = toInt64(-32767), toUInt64(32768) != toInt64(-32767), toUInt64(32768) < toInt64(-32767), toUInt64(32768) <= toInt64(-32767), toUInt64(32768) > toInt64(-32767), toUInt64(32768) >= toInt64(-32767), toInt64(-32767) = toUInt64(32768), toInt64(-32767) != toUInt64(32768), toInt64(-32767) < toUInt64(32768), toInt64(-32767) <= toUInt64(32768), toInt64(-32767) > toUInt64(32768), toInt64(-32767) >= toUInt64(32768) , toInt64(32768) = toInt16(-32767), toInt64(32768) != toInt16(-32767), toInt64(32768) < toInt16(-32767), toInt64(32768) <= toInt16(-32767), toInt64(32768) > toInt16(-32767), toInt64(32768) >= toInt16(-32767), toInt16(-32767) = toInt64(32768), toInt16(-32767) != toInt64(32768), toInt16(-32767) < toInt64(32768), toInt16(-32767) <= toInt64(32768), toInt16(-32767) > toInt64(32768), toInt16(-32767) >= toInt64(32768) , toInt64(32768) = toInt32(-32767), toInt64(32768) != toInt32(-32767), toInt64(32768) < toInt32(-32767), toInt64(32768) <= toInt32(-32767), toInt64(32768) > toInt32(-32767), toInt64(32768) >= toInt32(-32767), toInt32(-32767) = toInt64(32768), toInt32(-32767) != toInt64(32768), toInt32(-32767) < toInt64(32768), toInt32(-32767) <= toInt64(32768), toInt32(-32767) > toInt64(32768), toInt32(-32767) >= toInt64(32768) , toInt64(32768) = toInt64(-32767), toInt64(32768) != toInt64(-32767), toInt64(32768) < toInt64(-32767), toInt64(32768) <= toInt64(-32767), toInt64(32768) > toInt64(-32767), toInt64(32768) >= toInt64(-32767), toInt64(-32767) = toInt64(32768), toInt64(-32767) != toInt64(32768), toInt64(-32767) < toInt64(32768), toInt64(-32767) <= toInt64(32768), toInt64(-32767) > toInt64(32768), toInt64(-32767) >= toInt64(32768) 
CREATE TABLE test_4B393A6A607B394D723E342E5C3A34545F4B204C2175772E3B4E664D3D34255F27244A7029462371(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02100_low_cardinality_nullable_null_default.sh from pid=1715' 
SELECT sum(DISTINCT x) FROM (SELECT 1 x UNION ALL SELECT 1);
CREATE TABLE IF NOT EXISTS test_01444.t4640 (`x` UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 49736, min_bytes_for_wide_part = 645103364, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 6, merge_max_block_size = 15200, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 21360504, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75390, primary_key_compress_block_size = 98921
DROP DATABASE IF EXISTS test_3nacahmw 
create table t ( s Array(Int), l Int8, r Int8 ) engine = Memory;
TRUNCATE TABLE tmp;
SELECT kostikConsistentHash(NULL, NULL);
DROP DATABASE IF EXISTS test_i7sl5o6c 
SELECT value, time, round(exp_smooth, 3), bar(exp_smooth, 0, 1, 50) AS bar FROM ( SELECT (number % 5) = 0 AS value, number AS time, exponentialTimeDecayedMax(1)(value, time) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS exp_smooth FROM numbers(50) );
drop table if exists test_02245_s3_nested_parquet2;
select * from enums where e != 'a';
DETACH TABLE table_with_string_key;
CREATE TABLE test_3C3C76563E7C6571722545595641495E3422452B5F472F334E6D3E79333C435C7D5476412D255C35(x UInt8) Engine=Memory;
SELECT dictGet('01684_database_for_cache_dictionary.cache_dictionary_simple_key_complex_attributes', 'value_first', number) as value_first, dictGet('01684_database_for_cache_dictionary.cache_dictionary_simple_key_complex_attributes', 'value_second', number) as value_second FROM system.numbers LIMIT 3;
DROP DATABASE IF EXISTS test_nv69n6sb 
SELECT -127, 32768, -127 = 32768, -127 != 32768, -127 < 32768, -127 <= 32768, -127 > 32768, -127 >= 32768, 32768 = -127, 32768 != -127, 32768 < -127, 32768 <= -127, 32768 > -127, 32768 >= -127 , toInt8(-127) = toUInt16(32768), toInt8(-127) != toUInt16(32768), toInt8(-127) < toUInt16(32768), toInt8(-127) <= toUInt16(32768), toInt8(-127) > toUInt16(32768), toInt8(-127) >= toUInt16(32768), toUInt16(32768) = toInt8(-127), toUInt16(32768) != toInt8(-127), toUInt16(32768) < toInt8(-127), toUInt16(32768) <= toInt8(-127), toUInt16(32768) > toInt8(-127), toUInt16(32768) >= toInt8(-127) , toInt8(-127) = toUInt32(32768), toInt8(-127) != toUInt32(32768), toInt8(-127) < toUInt32(32768), toInt8(-127) <= toUInt32(32768), toInt8(-127) > toUInt32(32768), toInt8(-127) >= toUInt32(32768), toUInt32(32768) = toInt8(-127), toUInt32(32768) != toInt8(-127), toUInt32(32768) < toInt8(-127), toUInt32(32768) <= toInt8(-127), toUInt32(32768) > toInt8(-127), toUInt32(32768) >= toInt8(-127) , toInt8(-127) = toInt32(32768), toInt8(-127) != toInt32(32768), toInt8(-127) < toInt32(32768), toInt8(-127) <= toInt32(32768), toInt8(-127) > toInt32(32768), toInt8(-127) >= toInt32(32768), toInt32(32768) = toInt8(-127), toInt32(32768) != toInt8(-127), toInt32(32768) < toInt8(-127), toInt32(32768) <= toInt8(-127), toInt32(32768) > toInt8(-127), toInt32(32768) >= toInt8(-127) , toInt8(-127) = toUInt64(32768), toInt8(-127) != toUInt64(32768), toInt8(-127) < toUInt64(32768), toInt8(-127) <= toUInt64(32768), toInt8(-127) > toUInt64(32768), toInt8(-127) >= toUInt64(32768), toUInt64(32768) = toInt8(-127), toUInt64(32768) != toInt8(-127), toUInt64(32768) < toInt8(-127), toUInt64(32768) <= toInt8(-127), toUInt64(32768) > toInt8(-127), toUInt64(32768) >= toInt8(-127) , toInt8(-127) = toInt64(32768), toInt8(-127) != toInt64(32768), toInt8(-127) < toInt64(32768), toInt8(-127) <= toInt64(32768), toInt8(-127) > toInt64(32768), toInt8(-127) >= toInt64(32768), toInt64(32768) = toInt8(-127), toInt64(32768) != toInt8(-127), toInt64(32768) < toInt8(-127), toInt64(32768) <= toInt8(-127), toInt64(32768) > toInt8(-127), toInt64(32768) >= toInt8(-127) , toInt16(-127) = toUInt16(32768), toInt16(-127) != toUInt16(32768), toInt16(-127) < toUInt16(32768), toInt16(-127) <= toUInt16(32768), toInt16(-127) > toUInt16(32768), toInt16(-127) >= toUInt16(32768), toUInt16(32768) = toInt16(-127), toUInt16(32768) != toInt16(-127), toUInt16(32768) < toInt16(-127), toUInt16(32768) <= toInt16(-127), toUInt16(32768) > toInt16(-127), toUInt16(32768) >= toInt16(-127) , toInt16(-127) = toUInt32(32768), toInt16(-127) != toUInt32(32768), toInt16(-127) < toUInt32(32768), toInt16(-127) <= toUInt32(32768), toInt16(-127) > toUInt32(32768), toInt16(-127) >= toUInt32(32768), toUInt32(32768) = toInt16(-127), toUInt32(32768) != toInt16(-127), toUInt32(32768) < toInt16(-127), toUInt32(32768) <= toInt16(-127), toUInt32(32768) > toInt16(-127), toUInt32(32768) >= toInt16(-127) , toInt16(-127) = toInt32(32768), toInt16(-127) != toInt32(32768), toInt16(-127) < toInt32(32768), toInt16(-127) <= toInt32(32768), toInt16(-127) > toInt32(32768), toInt16(-127) >= toInt32(32768), toInt32(32768) = toInt16(-127), toInt32(32768) != toInt16(-127), toInt32(32768) < toInt16(-127), toInt32(32768) <= toInt16(-127), toInt32(32768) > toInt16(-127), toInt32(32768) >= toInt16(-127) , toInt16(-127) = toUInt64(32768), toInt16(-127) != toUInt64(32768), toInt16(-127) < toUInt64(32768), toInt16(-127) <= toUInt64(32768), toInt16(-127) > toUInt64(32768), toInt16(-127) >= toUInt64(32768), toUInt64(32768) = toInt16(-127), toUInt64(32768) != toInt16(-127), toUInt64(32768) < toInt16(-127), toUInt64(32768) <= toInt16(-127), toUInt64(32768) > toInt16(-127), toUInt64(32768) >= toInt16(-127) , toInt16(-127) = toInt64(32768), toInt16(-127) != toInt64(32768), toInt16(-127) < toInt64(32768), toInt16(-127) <= toInt64(32768), toInt16(-127) > toInt64(32768), toInt16(-127) >= toInt64(32768), toInt64(32768) = toInt16(-127), toInt64(32768) != toInt16(-127), toInt64(32768) < toInt16(-127), toInt64(32768) <= toInt16(-127), toInt64(32768) > toInt16(-127), toInt64(32768) >= toInt16(-127) , toInt32(-127) = toUInt16(32768), toInt32(-127) != toUInt16(32768), toInt32(-127) < toUInt16(32768), toInt32(-127) <= toUInt16(32768), toInt32(-127) > toUInt16(32768), toInt32(-127) >= toUInt16(32768), toUInt16(32768) = toInt32(-127), toUInt16(32768) != toInt32(-127), toUInt16(32768) < toInt32(-127), toUInt16(32768) <= toInt32(-127), toUInt16(32768) > toInt32(-127), toUInt16(32768) >= toInt32(-127) , toInt32(-127) = toUInt32(32768), toInt32(-127) != toUInt32(32768), toInt32(-127) < toUInt32(32768), toInt32(-127) <= toUInt32(32768), toInt32(-127) > toUInt32(32768), toInt32(-127) >= toUInt32(32768), toUInt32(32768) = toInt32(-127), toUInt32(32768) != toInt32(-127), toUInt32(32768) < toInt32(-127), toUInt32(32768) <= toInt32(-127), toUInt32(32768) > toInt32(-127), toUInt32(32768) >= toInt32(-127) , toInt32(-127) = toInt32(32768), toInt32(-127) != toInt32(32768), toInt32(-127) < toInt32(32768), toInt32(-127) <= toInt32(32768), toInt32(-127) > toInt32(32768), toInt32(-127) >= toInt32(32768), toInt32(32768) = toInt32(-127), toInt32(32768) != toInt32(-127), toInt32(32768) < toInt32(-127), toInt32(32768) <= toInt32(-127), toInt32(32768) > toInt32(-127), toInt32(32768) >= toInt32(-127) , toInt32(-127) = toUInt64(32768), toInt32(-127) != toUInt64(32768), toInt32(-127) < toUInt64(32768), toInt32(-127) <= toUInt64(32768), toInt32(-127) > toUInt64(32768), toInt32(-127) >= toUInt64(32768), toUInt64(32768) = toInt32(-127), toUInt64(32768) != toInt32(-127), toUInt64(32768) < toInt32(-127), toUInt64(32768) <= toInt32(-127), toUInt64(32768) > toInt32(-127), toUInt64(32768) >= toInt32(-127) , toInt32(-127) = toInt64(32768), toInt32(-127) != toInt64(32768), toInt32(-127) < toInt64(32768), toInt32(-127) <= toInt64(32768), toInt32(-127) > toInt64(32768), toInt32(-127) >= toInt64(32768), toInt64(32768) = toInt32(-127), toInt64(32768) != toInt32(-127), toInt64(32768) < toInt32(-127), toInt64(32768) <= toInt32(-127), toInt64(32768) > toInt32(-127), toInt64(32768) >= toInt32(-127) , toInt64(-127) = toUInt16(32768), toInt64(-127) != toUInt16(32768), toInt64(-127) < toUInt16(32768), toInt64(-127) <= toUInt16(32768), toInt64(-127) > toUInt16(32768), toInt64(-127) >= toUInt16(32768), toUInt16(32768) = toInt64(-127), toUInt16(32768) != toInt64(-127), toUInt16(32768) < toInt64(-127), toUInt16(32768) <= toInt64(-127), toUInt16(32768) > toInt64(-127), toUInt16(32768) >= toInt64(-127) , toInt64(-127) = toUInt32(32768), toInt64(-127) != toUInt32(32768), toInt64(-127) < toUInt32(32768), toInt64(-127) <= toUInt32(32768), toInt64(-127) > toUInt32(32768), toInt64(-127) >= toUInt32(32768), toUInt32(32768) = toInt64(-127), toUInt32(32768) != toInt64(-127), toUInt32(32768) < toInt64(-127), toUInt32(32768) <= toInt64(-127), toUInt32(32768) > toInt64(-127), toUInt32(32768) >= toInt64(-127) , toInt64(-127) = toInt32(32768), toInt64(-127) != toInt32(32768), toInt64(-127) < toInt32(32768), toInt64(-127) <= toInt32(32768), toInt64(-127) > toInt32(32768), toInt64(-127) >= toInt32(32768), toInt32(32768) = toInt64(-127), toInt32(32768) != toInt64(-127), toInt32(32768) < toInt64(-127), toInt32(32768) <= toInt64(-127), toInt32(32768) > toInt64(-127), toInt32(32768) >= toInt64(-127) , toInt64(-127) = toUInt64(32768), toInt64(-127) != toUInt64(32768), toInt64(-127) < toUInt64(32768), toInt64(-127) <= toUInt64(32768), toInt64(-127) > toUInt64(32768), toInt64(-127) >= toUInt64(32768), toUInt64(32768) = toInt64(-127), toUInt64(32768) != toInt64(-127), toUInt64(32768) < toInt64(-127), toUInt64(32768) <= toInt64(-127), toUInt64(32768) > toInt64(-127), toUInt64(32768) >= toInt64(-127) , toInt64(-127) = toInt64(32768), toInt64(-127) != toInt64(32768), toInt64(-127) < toInt64(32768), toInt64(-127) <= toInt64(32768), toInt64(-127) > toInt64(32768), toInt64(-127) >= toInt64(32768), toInt64(32768) = toInt64(-127), toInt64(32768) != toInt64(-127), toInt64(32768) < toInt64(-127), toInt64(32768) <= toInt64(-127), toInt64(32768) > toInt64(-127), toInt64(32768) >= toInt64(-127) 
select * from copy_02572;
SELECT 'Running test stateless/02535_json_bson_each_row_curl.sh from pid=1724' 
DROP TABLE byte_identical_r1;
SELECT count() FROM t_cnf_fuzz WHERE (c5 AND c2 AND c8) OR ((NOT c1)) OR (c4 AND c1 AND (NOT c9) AND (NOT c8)) OR (c4 AND (NOT c6) AND (NOT c1) AND c0 AND (NOT c7)) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_5B6C492C757025206922422B357C52495C6B7E31617D2136266F6E74205E72287A3F2B31756B2259(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS polygon_dictionary_nullable_default_source_table;
DROP DATABASE IF EXISTS test_jtzzj7au 
SYSTEM START MERGES sites;
CREATE DATABASE IF NOT EXISTS test_tzpvlpja 
SELECT name, found_rate FROM system.dictionaries WHERE database = currentDatabase() AND name = 'simple_key_direct_dictionary_01862';
SELECT constant_false ? then_constant : else_non_constant_nullable AS res FROM nullable_00431;
INSERT INTO test_01193_18429.table_4_198 VALUES 
INSERT INTO test_01193_18429.table_2_638 VALUES 
SELECT JSONExtractFloat('{"a": "hello", "b": [-100, 200.0, 300]}', 'b', 2);
CREATE TABLE derived_metrics_local (`timestamp` DateTime, `bytes` UInt64 TTL toStartOfHour(timestamp) + toIntervalHour(1)) ENGINE = MergeTree ORDER BY (toStartOfHour(timestamp), timestamp) SETTINGS min_bytes_for_wide_part = 0, index_granularity = 937, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 14356, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 856346, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 213512729, index_granularity_bytes = 16782130, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 73221, primary_key_compress_block_size = 66198
CREATE DATABASE IF NOT EXISTS test_otfy9lqv 
CREATE DATABASE IF NOT EXISTS test_k7819qc0 
INSERT INTO test_01193_18429.table_10_165 VALUES 
SELECT 'Running test stateless/01345_array_join_LittleMaverick.sql from pid=1713' 
SELECT xxHash32(NULL, NULL);
select a1, b1, a2, b2 from tab1 all right join tab2 on b1 + 1 = a2 + 1 or a1 + 4 = b2 + 2 ORDER BY a1, b1, a2, b2;
select countMatchesCaseInsensitive('foOBarBAZfoobarbaz', 'foo(bar)(?:baz|)');
SELECT * FROM t1 JOIN t2 ON t1.id = t2.id AND 0 SETTINGS allow_experimental_analyzer = 1;
CREATE TABLE test_01193_18429.table_9_938 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT h3GetBaseCell(NULL);
SELECT 'Running test stateless/00624_length_utf8.sql from pid=1718' 
CREATE TABLE test_56326D2D795F413F7E753F597A633F4F5B3F33372626357D4D362548653E2C79252A75426A7A6B22(x UInt8) Engine=Memory;
SELECT * FROM test LIMIT 20 OFFSET 100;
SELECT 'aes-128-ctr' AS mode, hex(encrypt(mode, '[HIDDEN]')) FROM encryption_test
DROP DATABASE 02428_parameterized_view_test_0zmj5798
SELECT b FROM tt_m order by b LIMIT 1 BY b;
show create x;
SELECT formatDateTime(toDateTime64('2105-12-12 12:12:12', 0, 'Asia/Istanbul'), '%C');
INSERT INTO test_01193_18429.table_2_60 VALUES 
create materialized view b engine Log as select countState(*) from a;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toFloat32(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
CREATE TABLE compression_codec_multiple_tiny_log ( id UInt64 CODEC(LZ4, ZSTD, NONE, LZ4HC, Delta(4)), data String CODEC(ZSTD(2), NONE, Delta(2), LZ4HC, LZ4, LZ4, Delta(8)), ddd Date CODEC(NONE, NONE, NONE, Delta(1), LZ4, ZSTD, LZ4HC, LZ4HC), somenum Float64 CODEC(Delta(4), LZ4, LZ4, ZSTD(2), LZ4HC(5), ZSTD(3), ZSTD) ) ENGINE = TinyLog();
SELECT n, j FROM ( SELECT number * 200000 as n FROM numbers(5) ) nums LEFT JOIN ( SELECT number * 2 AS n, number AS j FROM numbers(1000000) ) js2 USING n ORDER BY n SETTINGS max_rows_in_join = 100000;
SELECT * FROM dist_3;
drop table test_mv_a sync;
insert into test select number, number, multiIf(number % 4 == 0, number, number % 4 == 1, 'str_' || toString(number), number % 4 == 2, toDate(number), NULL) from numbers(18, 4)
DROP DATABASE IF EXISTS test_ym1cl1i1 
CREATE TABLE test_01193_18429.table_9_787 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT a, b, c FROM t_fixed_prefix WHERE a = 1 AND c = 1 ORDER BY a, b, c SETTINGS optimize_read_in_order = 0
select 1 = multiSearchAny(materialize('abc'), ['abc']) from system.numbers limit 10;
INSERT INTO test_01193_18429.table_3_237 VALUES 
CREATE TABLE test_58212B425E6D74706E554F557D756E3E2C463D3A3B6F6167487951695349496F3C31552D42355F63(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_4_804 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select t1.a as c, t2.c as a from t1 join t2 on t2.c = t1.a;
CREATE DATABASE IF NOT EXISTS test_lhiad3hc 
DROP DATABASE IF EXISTS test_m5x1eo1v 
SELECT number, number % 2, sum(number) AS val FROM numbers(10) GROUP BY CUBE(number, number % 2) WITH TOTALS ORDER BY (number, number % 2, val) SETTINGS group_by_use_nulls=1;
CREATE TABLE test_34633A41776C54747344376064673B69655D7139575443475C7E6B2D217A2F6C4A5263296D466E49(x UInt8) Engine=Memory;
CREATE TABLE test_324E564E455C702C2B74334F5928352072513D5361566639263F7A314F644D453D537E6357474045(x UInt8) Engine=Memory;
DROP TABLE table;
SELECT CASE WHEN (col1 % 2) = 0 THEN ['foo', 'bar'] WHEN 1 THEN ['foo', 'bar'] ELSE ['foo', col7] END FROM multi_if_check;
CREATE DATABASE IF NOT EXISTS test_kwa7gqeg 
CREATE TABLE test_01193_18429.table_9_927 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE DATABASE IF NOT EXISTS test_9ulamhzs 
SELECT arraySum(x -> materialize(10), emptyArrayString());
DROP TABLE IF EXISTS current_failed_query_metrics;
INSERT INTO test_01193_18429.table_9_90 VALUES 
SELECT 'Running test stateless/00526_array_join_with_arrays_of_nullable.sql from pid=1714' 
SELECT constant_null ? constant_null : else_non_constant AS res FROM nullable_00431;
select * from 02900_buffer order by k
CREATE TABLE test_01193_18429.table_10_588 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_4_859 VALUES 
SELECT count() FROM `test_fm9ee56o`.`mergetree_00754`
CREATE TABLE test_593B5C2378567E3D45325B696659516E323362664A6E2A72626F496E37592F2A5D4E247241202423(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01178_int_field_to_decimal.sql from pid=1715' 
SELECT 'Running test stateless/00137_in_constants.sql from pid=1714' 
WITH 'needle' as n SELECT haystack, needle, hasTokenCaseInsensitive(haystack, n) as result FROM ht WHERE func = 'hasTokenCaseInsensitive' AND needle = n AND result != match;
alter table many_mutations delete where y = 31 * 2 settings mutations_sync = 0;
DETACH TABLE merge_02184;
SELECT * FROM bf_ngrambf_map_values_test WHERE map_fixed['K2'] != 'V2' SETTINGS force_data_skipping_indices='map_fixed_values_ngrambf';
CREATE TABLE test_694B31462A764E2B6F6C6124297362635A315D2E4B384734393B49286D34326F6C60523153572539(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_7_387 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT * FROM t_enum;
SELECT d2, f2, d2 / f2 FROM t ORDER BY f2;
SELECT accurateCastOrDefault(inf, 'UInt64'), accurateCastOrDefault(inf, 'UInt64', toUInt64(5));
CREATE DATABASE IF NOT EXISTS test_h4n3zcw8 
DROP TABLE t_local;
SELECT count(*) FROM source WHERE toYYYYMM(ts) < 202312 SETTINGS allow_experimental_analyzer=1;
select throwIf(A != 8) from src format Null
ALTER TABLE mem_test UPDATE a = 0 WHERE b = 99;
ALTER TABLE test_alter_r2 MODIFY COLUMN x DEFAULT '2000-01-01' SETTINGS replication_alter_partitions_sync = 2;
SELECT throwIf((SELECT (count(), sum(n)) FROM merge(currentDatabase(), '') WHERE type=4) != (toUInt8(13/2 + 1), (select sum(number) from numbers(1, 13) where number % 2 or number=13))) FORMAT Null;
CREATE DATABASE IF NOT EXISTS test_y6te8fum 
SELECT * FROM 01754_dictionary_db.direct_dictionary_complex_key_simple_attributes;
SET max_block_size = 128;
SELECT 'Running test stateless/01735_join_get_low_card_fix.sql from pid=1718' 
CREATE DATABASE IF NOT EXISTS test_kl2tlkbo 
SELECT '----- (1,1,2) -----';
SELECT 13;
CREATE DATABASE IF NOT EXISTS test_47kp02sa 
ALTER TABLE partitioned_by_week_replica1 DROP PARTITION '1999-12-27';
alter table many_mutations delete where y = 868 * 2 settings mutations_sync = 0;
SELECT sipHash128ReferenceKeyed(NULL, NULL, NULL);
CREATE TABLE inner_join (x UInt32, s String) engine = Join(ALL, INNER, x) SETTINGS join_use_nulls = 1;
set insert_deduplication_token = '\x61\x00\x63';
DROP TABLE IF EXISTS part;
select arrayShiftLeft([[[1, 2], [3, 4]], [[5, 6], [7, 8]]], 1);
SELECT domainWithoutWWW(NULL);
CREATE DATABASE IF NOT EXISTS test_750hh3bj 
SELECT arrayDistinct([1, 2, 3, 2, 2]);
CREATE TABLE test_01193_18429.table_2_91 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT id AS using_id, toTypeName(using_id), t1.id AS t1_id, toTypeName(t1_id), t1.value AS t1_value, toTypeName(t1_value), t2.id AS t2_id, toTypeName(t2_id), t2.value AS t2_value, toTypeName(t2_value), t3.id AS t3_id, toTypeName(t3_id), t3.value AS t3_value, toTypeName(t3_value) FROM test_table_join_1 AS t1 RIGHT JOIN test_table_join_2 AS t2 USING (id) FULL JOIN test_table_join_3 AS t3 USING(id);
SELECT count() FROM t1;
CREATE TABLE test_67404D4E3276386F4730314122382B6B272E34376730306622413B3E7A4C3D44637C6D6220643D51(x UInt8) Engine=Memory;
select toUInt32OrDefault('1xx', cast(2 as UInt32));
CREATE DATABASE IF NOT EXISTS test_8utu8dho 
CREATE DATABASE IF NOT EXISTS test_8gvu0dod 
CREATE TABLE test_01193_18429.table_4_894 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_8_523 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE DATABASE IF NOT EXISTS test_kxvwyq3u 
CREATE TABLE test_01193_18429.table_2_593 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_9_568 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
set log_queries_min_type='EXCEPTION_BEFORE_START';
CREATE DATABASE IF NOT EXISTS test_5hhkjiq8 
SET default_temporary_table_engine = 'Log';
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 23120, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE TABLE test_01193_18429.table_1_169 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_h5ttzow4 
SELECT 1, 10, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (1 < 13 AND 10 > 0 ? 1 : 0)), throwIf(last != (1 < 13 AND 10 > 0 ? least(13 - 1, 1 + 10 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 1, 10);
DROP DATABASE IF EXISTS test_j1qooqq2 
DESC TABLE t_nested_detach;
INSERT INTO test_01193_18429.table_5_291 VALUES 
INSERT INTO test_01193_18429.table_9_577 VALUES 
SELECT '71' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:fe00::')))
alter table trunc detach partition all;
SELECT toRelativeHourNum(toDateTime(1412106600), 'Asia/Istanbul') - toRelativeHourNum(toDateTime(0), 'Asia/Istanbul');
CREATE TABLE test_01193_18429.table_10_212 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP DATABASE IF EXISTS test_pb0rlrl8 
CREATE TABLE test_01193_18429.table_6_948 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_8_208 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_9_427 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_263E52424E777D2859444C6E3D523748787D3B712574492E635857445B773C464132593E3A7E3F46(x UInt8) Engine=Memory;
CREATE TABLE products (`price` UInt32) ENGINE = Memory;
set enable_global_with_statement = 1;
DROP TABLE test_hierarchy_source_table;
DROP TABLE IF EXISTS info;
CREATE TABLE test_656C615D562D7D367438502F68593531536A3E3F7B564B33215728643156264E3D5C41226159666C(x UInt8) Engine=Memory;
SELECT parseDateTime32BestEffort(NULL, NULL, NULL);
SELECT CASE WHEN (number % 2) = 0 THEN [toInt16(1), toInt16(2)] WHEN (number % 3) = 0 THEN [toUInt8(2), toUInt8(3)] ELSE [toInt16(3), toInt16(3)] END FROM system.numbers LIMIT 10;
DROP TABLE IF EXISTS 02183_dictionary_source_table;
select query, log_comment from system.query_log where current_database = 'test_ic1awy49' and event_date >= yesterday() and query = 'select 4242' and type != 'QueryStart';
INSERT INTO test_01193_18429.table_7_891 VALUES 
INSERT INTO test_01193_18429.table_9_970 VALUES 
SELECT toDateTime64(NULL, NULL, NULL);
select port('//foobar.com:80/');
select 'arrayPushBack(arr1, val2)';
WITH toDate('2021-06-14') AS date_value, toDateTime('2021-06-14 11:22:33') AS date_time_value, toDateTime64('2021-06-14 11:22:33', 3) AS date_time_64_value SELECT monthName(date_value), monthName(date_time_value), monthName(date_time_64_value);
INSERT INTO test_01193_18429.table_4_959 VALUES 
SELECT replaceRegexpAll(materialize('aazzqa'), 'z*', '') == 'aaqa';
SELECT -127, 65535, -127 = 65535, -127 != 65535, -127 < 65535, -127 <= 65535, -127 > 65535, -127 >= 65535, 65535 = -127, 65535 != -127, 65535 < -127, 65535 <= -127, 65535 > -127, 65535 >= -127 , toInt8(-127) = toUInt16(65535), toInt8(-127) != toUInt16(65535), toInt8(-127) < toUInt16(65535), toInt8(-127) <= toUInt16(65535), toInt8(-127) > toUInt16(65535), toInt8(-127) >= toUInt16(65535), toUInt16(65535) = toInt8(-127), toUInt16(65535) != toInt8(-127), toUInt16(65535) < toInt8(-127), toUInt16(65535) <= toInt8(-127), toUInt16(65535) > toInt8(-127), toUInt16(65535) >= toInt8(-127) , toInt8(-127) = toUInt32(65535), toInt8(-127) != toUInt32(65535), toInt8(-127) < toUInt32(65535), toInt8(-127) <= toUInt32(65535), toInt8(-127) > toUInt32(65535), toInt8(-127) >= toUInt32(65535), toUInt32(65535) = toInt8(-127), toUInt32(65535) != toInt8(-127), toUInt32(65535) < toInt8(-127), toUInt32(65535) <= toInt8(-127), toUInt32(65535) > toInt8(-127), toUInt32(65535) >= toInt8(-127) , toInt8(-127) = toInt32(65535), toInt8(-127) != toInt32(65535), toInt8(-127) < toInt32(65535), toInt8(-127) <= toInt32(65535), toInt8(-127) > toInt32(65535), toInt8(-127) >= toInt32(65535), toInt32(65535) = toInt8(-127), toInt32(65535) != toInt8(-127), toInt32(65535) < toInt8(-127), toInt32(65535) <= toInt8(-127), toInt32(65535) > toInt8(-127), toInt32(65535) >= toInt8(-127) , toInt8(-127) = toUInt64(65535), toInt8(-127) != toUInt64(65535), toInt8(-127) < toUInt64(65535), toInt8(-127) <= toUInt64(65535), toInt8(-127) > toUInt64(65535), toInt8(-127) >= toUInt64(65535), toUInt64(65535) = toInt8(-127), toUInt64(65535) != toInt8(-127), toUInt64(65535) < toInt8(-127), toUInt64(65535) <= toInt8(-127), toUInt64(65535) > toInt8(-127), toUInt64(65535) >= toInt8(-127) , toInt8(-127) = toInt64(65535), toInt8(-127) != toInt64(65535), toInt8(-127) < toInt64(65535), toInt8(-127) <= toInt64(65535), toInt8(-127) > toInt64(65535), toInt8(-127) >= toInt64(65535), toInt64(65535) = toInt8(-127), toInt64(65535) != toInt8(-127), toInt64(65535) < toInt8(-127), toInt64(65535) <= toInt8(-127), toInt64(65535) > toInt8(-127), toInt64(65535) >= toInt8(-127) , toInt16(-127) = toUInt16(65535), toInt16(-127) != toUInt16(65535), toInt16(-127) < toUInt16(65535), toInt16(-127) <= toUInt16(65535), toInt16(-127) > toUInt16(65535), toInt16(-127) >= toUInt16(65535), toUInt16(65535) = toInt16(-127), toUInt16(65535) != toInt16(-127), toUInt16(65535) < toInt16(-127), toUInt16(65535) <= toInt16(-127), toUInt16(65535) > toInt16(-127), toUInt16(65535) >= toInt16(-127) , toInt16(-127) = toUInt32(65535), toInt16(-127) != toUInt32(65535), toInt16(-127) < toUInt32(65535), toInt16(-127) <= toUInt32(65535), toInt16(-127) > toUInt32(65535), toInt16(-127) >= toUInt32(65535), toUInt32(65535) = toInt16(-127), toUInt32(65535) != toInt16(-127), toUInt32(65535) < toInt16(-127), toUInt32(65535) <= toInt16(-127), toUInt32(65535) > toInt16(-127), toUInt32(65535) >= toInt16(-127) , toInt16(-127) = toInt32(65535), toInt16(-127) != toInt32(65535), toInt16(-127) < toInt32(65535), toInt16(-127) <= toInt32(65535), toInt16(-127) > toInt32(65535), toInt16(-127) >= toInt32(65535), toInt32(65535) = toInt16(-127), toInt32(65535) != toInt16(-127), toInt32(65535) < toInt16(-127), toInt32(65535) <= toInt16(-127), toInt32(65535) > toInt16(-127), toInt32(65535) >= toInt16(-127) , toInt16(-127) = toUInt64(65535), toInt16(-127) != toUInt64(65535), toInt16(-127) < toUInt64(65535), toInt16(-127) <= toUInt64(65535), toInt16(-127) > toUInt64(65535), toInt16(-127) >= toUInt64(65535), toUInt64(65535) = toInt16(-127), toUInt64(65535) != toInt16(-127), toUInt64(65535) < toInt16(-127), toUInt64(65535) <= toInt16(-127), toUInt64(65535) > toInt16(-127), toUInt64(65535) >= toInt16(-127) , toInt16(-127) = toInt64(65535), toInt16(-127) != toInt64(65535), toInt16(-127) < toInt64(65535), toInt16(-127) <= toInt64(65535), toInt16(-127) > toInt64(65535), toInt16(-127) >= toInt64(65535), toInt64(65535) = toInt16(-127), toInt64(65535) != toInt16(-127), toInt64(65535) < toInt16(-127), toInt64(65535) <= toInt16(-127), toInt64(65535) > toInt16(-127), toInt64(65535) >= toInt16(-127) , toInt32(-127) = toUInt16(65535), toInt32(-127) != toUInt16(65535), toInt32(-127) < toUInt16(65535), toInt32(-127) <= toUInt16(65535), toInt32(-127) > toUInt16(65535), toInt32(-127) >= toUInt16(65535), toUInt16(65535) = toInt32(-127), toUInt16(65535) != toInt32(-127), toUInt16(65535) < toInt32(-127), toUInt16(65535) <= toInt32(-127), toUInt16(65535) > toInt32(-127), toUInt16(65535) >= toInt32(-127) , toInt32(-127) = toUInt32(65535), toInt32(-127) != toUInt32(65535), toInt32(-127) < toUInt32(65535), toInt32(-127) <= toUInt32(65535), toInt32(-127) > toUInt32(65535), toInt32(-127) >= toUInt32(65535), toUInt32(65535) = toInt32(-127), toUInt32(65535) != toInt32(-127), toUInt32(65535) < toInt32(-127), toUInt32(65535) <= toInt32(-127), toUInt32(65535) > toInt32(-127), toUInt32(65535) >= toInt32(-127) , toInt32(-127) = toInt32(65535), toInt32(-127) != toInt32(65535), toInt32(-127) < toInt32(65535), toInt32(-127) <= toInt32(65535), toInt32(-127) > toInt32(65535), toInt32(-127) >= toInt32(65535), toInt32(65535) = toInt32(-127), toInt32(65535) != toInt32(-127), toInt32(65535) < toInt32(-127), toInt32(65535) <= toInt32(-127), toInt32(65535) > toInt32(-127), toInt32(65535) >= toInt32(-127) , toInt32(-127) = toUInt64(65535), toInt32(-127) != toUInt64(65535), toInt32(-127) < toUInt64(65535), toInt32(-127) <= toUInt64(65535), toInt32(-127) > toUInt64(65535), toInt32(-127) >= toUInt64(65535), toUInt64(65535) = toInt32(-127), toUInt64(65535) != toInt32(-127), toUInt64(65535) < toInt32(-127), toUInt64(65535) <= toInt32(-127), toUInt64(65535) > toInt32(-127), toUInt64(65535) >= toInt32(-127) , toInt32(-127) = toInt64(65535), toInt32(-127) != toInt64(65535), toInt32(-127) < toInt64(65535), toInt32(-127) <= toInt64(65535), toInt32(-127) > toInt64(65535), toInt32(-127) >= toInt64(65535), toInt64(65535) = toInt32(-127), toInt64(65535) != toInt32(-127), toInt64(65535) < toInt32(-127), toInt64(65535) <= toInt32(-127), toInt64(65535) > toInt32(-127), toInt64(65535) >= toInt32(-127) , toInt64(-127) = toUInt16(65535), toInt64(-127) != toUInt16(65535), toInt64(-127) < toUInt16(65535), toInt64(-127) <= toUInt16(65535), toInt64(-127) > toUInt16(65535), toInt64(-127) >= toUInt16(65535), toUInt16(65535) = toInt64(-127), toUInt16(65535) != toInt64(-127), toUInt16(65535) < toInt64(-127), toUInt16(65535) <= toInt64(-127), toUInt16(65535) > toInt64(-127), toUInt16(65535) >= toInt64(-127) , toInt64(-127) = toUInt32(65535), toInt64(-127) != toUInt32(65535), toInt64(-127) < toUInt32(65535), toInt64(-127) <= toUInt32(65535), toInt64(-127) > toUInt32(65535), toInt64(-127) >= toUInt32(65535), toUInt32(65535) = toInt64(-127), toUInt32(65535) != toInt64(-127), toUInt32(65535) < toInt64(-127), toUInt32(65535) <= toInt64(-127), toUInt32(65535) > toInt64(-127), toUInt32(65535) >= toInt64(-127) , toInt64(-127) = toInt32(65535), toInt64(-127) != toInt32(65535), toInt64(-127) < toInt32(65535), toInt64(-127) <= toInt32(65535), toInt64(-127) > toInt32(65535), toInt64(-127) >= toInt32(65535), toInt32(65535) = toInt64(-127), toInt32(65535) != toInt64(-127), toInt32(65535) < toInt64(-127), toInt32(65535) <= toInt64(-127), toInt32(65535) > toInt64(-127), toInt32(65535) >= toInt64(-127) , toInt64(-127) = toUInt64(65535), toInt64(-127) != toUInt64(65535), toInt64(-127) < toUInt64(65535), toInt64(-127) <= toUInt64(65535), toInt64(-127) > toUInt64(65535), toInt64(-127) >= toUInt64(65535), toUInt64(65535) = toInt64(-127), toUInt64(65535) != toInt64(-127), toUInt64(65535) < toInt64(-127), toUInt64(65535) <= toInt64(-127), toUInt64(65535) > toInt64(-127), toUInt64(65535) >= toInt64(-127) , toInt64(-127) = toInt64(65535), toInt64(-127) != toInt64(65535), toInt64(-127) < toInt64(65535), toInt64(-127) <= toInt64(65535), toInt64(-127) > toInt64(65535), toInt64(-127) >= toInt64(65535), toInt64(65535) = toInt64(-127), toInt64(65535) != toInt64(-127), toInt64(65535) < toInt64(-127), toInt64(65535) <= toInt64(-127), toInt64(65535) > toInt64(-127), toInt64(65535) >= toInt64(-127) 
SELECT 'Running test stateless/02888_integer_type_inference_in_if_function.sql from pid=1714' 
DROP NAMED COLLECTION foobar03;
ALTER TABLE src_10 REPLACE PARTITION 9 FROM src_15
CREATE DATABASE IF NOT EXISTS test_qks6pyxr 
insert into 02845_parquet_odd_decimals from infile '/usr/share/clickhouse-test/queries/0_stateless/data_parquet/nine_byte_decimals_from_spark.parquet'
SELECT argMax(NULL, NULL);
CREATE TABLE test_01193_18429.table_7_337 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_3_915 VALUES 
SELECT toUInt64(42) AS x FORMAT Vertical SETTINGS use_query_cache = 1;
CREATE DATABASE IF NOT EXISTS test_yba8cily 
INSERT INTO test_01193_18429.table_2_172 VALUES 
select format('{}{}{}', toFixedString('a', 1), materialize(toFixedString('b', 1)), materialize(toFixedString('c', 1))) == 'abc';
INSERT INTO test_01193_18429.table_1_9 VALUES 
INSERT INTO buf (timestamp, s) VALUES 
CREATE TABLE test_4C69756851513D54296259244433392F4B5D5643683B212140375F36405B583F6E572F38792A5350(x UInt8) Engine=Memory;
CREATE TABLE test_52575B3C2547733349544F63414F3D20537C66572B6A60312E36786C7632727D413D4245613C4358(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_w2xwk77l 
INSERT INTO test_01193_18429.table_1_686 VALUES 
insert into function file('02366_data_2.jsonl') select range(number % 1000) from numbers(100000) settings output_format_parallel_formatting=0
DROP DICTIONARY 02186_range_dictionary;
SELECT quantilesIfArrayArray(0.5, 0.9)([[1, NULL]], [[1, 0]]) AS `x` FROM numbers(3)
SELECT YYYYMMDDhhmmssToDateTime64(True);
CREATE TABLE testSettingsR1 (`col1` String, `version` UInt32, `is_deleted` UInt8) ENGINE = ReplicatedReplacingMergeTree('/clickhouse/{database}/tables/test_setting/', 'r1', version, is_deleted) ORDER BY col1 SETTINGS clean_deleted_rows = 'Always', allow_experimental_replacing_merge_with_cleanup = 1, index_granularity = 35498, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 20819, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 6356984295, index_granularity_bytes = 7722704, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 61487, primary_key_compress_block_size = 15770
SELECT 'Running test stateless/01797_StripeLog_rwlock_ub.sql from pid=1722' 
SELECT '11' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffe0::')))
SELECT 1 FROM system.one LIMIT 1 BY 1 AS one;
INSERT INTO test_01193_18429.table_5_480 VALUES 
SELECT 'Running test stateless/02375_pretty_formats.gen.sql from pid=1720' 
SELECT value FROM rocksdb_with_filter WHERE key = '5000' OR key = '6000' FORMAT JSON
CREATE DATABASE IF NOT EXISTS test_qzimrkp0 
CREATE TABLE log_for_alter ( id UInt64, Data String ) ENGINE = Log();
CREATE TABLE dt (`tkey` Int32) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 44478, min_bytes_for_wide_part = 693857506, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 11, merge_max_block_size = 18352, prefer_fetch_merged_part_size_threshold = 628955460, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 73, min_merge_bytes_to_use_direct_io = 7253568328, index_granularity_bytes = 20196510, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 67475, primary_key_compress_block_size = 13102
CREATE TABLE test_375C43454D4143483D4E32504C3D636E652F344A655D2A3F7265237A664872484F53216F46446938(x UInt8) Engine=Memory;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c7)) OR ((NOT c8)) OR (c6 AND c2) OR (c0 AND c8 AND (NOT c2) AND c2) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_7444257C3A38346B3670484D7E6C37697A69507375726D2B6F725344206A3A26442E3142622D782C(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_2_908 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
insert into data_01279 select reinterpretAsString(number) from numbers(100000);
SELECT * FROM numbers(34588)
CREATE TABLE test_01193_18429.table_4_31 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE lc_00906__fuzz_46 (`b` Int64) ENGINE = MergeTree ORDER BY b SETTINGS index_granularity = 13506, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 55, merge_max_block_size = 16287, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 6659976, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 34426, primary_key_compress_block_size = 94374
CREATE WINDOW VIEW wv ENGINE Memory AS WITH toDateTime('2018-01-01 00:00:00') AS date_time SELECT count(a), tumbleStart(wid) AS w_start, tumbleEnd(wid) AS w_end, date_time FROM mt GROUP BY tumble(timestamp, INTERVAL '3' SECOND) AS wid;
SELECT number FROM numbers(10) LIMIT 2 BY intDiv(number, 5);
CREATE TABLE test_01193_18429.table_1_877 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_3B78505571474A5A753F30662C386129504C68763462755059504E236441537A4D57322E374B4D45(x UInt8) Engine=Memory;
SELECT throwIf((SELECT (count(), sum(n)) FROM merge(currentDatabase(), '') WHERE type=4) != (toUInt8(19/2 + 1), (select sum(number) from numbers(1, 19) where number % 2 or number=19))) FORMAT Null;
select 1
SELECT * FROM merge(currentDatabase(), '02763_merge_merge') ORDER BY x SETTINGS optimize_move_to_prewhere= 1;
SELECT t.x, l.s, r.s, toTypeName(l.s), toTypeName(r.s) FROM t AS l LEFT JOIN nr AS r USING (s) ORDER BY t.x;
INSERT INTO test_01193_18429.table_7_606 VALUES 
SELECT parseDateTimeBestEffortOrZero('2020-05-14 03:37:03', 3, 'UTC') AS a, toTypeName(a);
WITH 'John' AS name, toDate('1990-01-01') AS birthdate SELECT * FROM numbers(10) WHERE (number, name, birthdate) IN (userid_set2);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (80 < 8 AND 32 > 0 ? 80 : 0)), throwIf(last != (80 < 8 AND 32 > 0 ? least(8 - 1, 80 + 32 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(8) LIMIT 80, 32);
EXPLAIN AST ALTER TABLE t DROP PARTITION 'p';
SELECT varPop(NULL, NULL, NULL);
CREATE TABLE test_01193_18429.table_8_129 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT toUnixTimestamp(NULL, NULL, NULL);
DROP DATABASE IF EXISTS test_9qa8o4rs 
CREATE TABLE test_346449294553705C3F4D4D4838354F55232D4727623872233A687B753A557A4B5C71573A6063227B(x UInt8) Engine=Memory;
ALTER TABLE compact_alter_100000 ADD COLUMN n.d Int;
SELECT hex('\a\b\f\n\r\t\v\\\'\"\?\xAA');
SELECT h3ToParent(599405990164561919, 3);
CREATE DATABASE IF NOT EXISTS test_su4bb106 
EXPLAIN QUERY TREE SELECT count() FROM t_constraints_where WHERE b = 20 SETTINGS allow_experimental_analyzer = 1;
DROP USER IF EXISTS test_user_02242
CREATE INDEX idx_tab2_5 ON tab2 (col0 DESC);
CREATE TABLE test_01193_18429.table_7_185 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP TABLE IF EXISTS polygons;
alter table many_mutations delete where y = 527 * 2 settings mutations_sync = 0;
SELECT '# Mismatching IP versions is not an error.';
SELECT toIntervalSecond(-1);
SELECT count() FROM lc_nullable WHERE has(date, toDate(has(u64, 1), '1970-01\002'));
CREATE DATABASE IF NOT EXISTS test_1snwvsr5 
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat64(1), toFloat64(2)] WHEN (number % 3) = 0 THEN [toFloat32(2), toFloat32(3)] ELSE [toInt16(3), toInt16(3)] END FROM system.numbers LIMIT 10;
SELECT t1.id, t1.value, t2.id, t2.value, t3.id, t3.value FROM test_table_join_1 AS t1 LEFT JOIN test_table_join_2 AS t2 ON t1.id = t2.id AND t1.value == 'Join_1_Value_0' FULL JOIN test_table_join_3 AS t3 ON t2.id = t3.id AND t2.value == 'Join_2_Value_0';
CREATE TABLE test_01193_18429.table_10_503 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_8_125 VALUES 
CREATE TABLE test_01193_18429.table_8_421 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/02158_ztest.sql from pid=1713' 
DROP DATABASE IF EXISTS test_vgbe5elc 
DROP DATABASE IF EXISTS test_zuze1k4k 
SELECT accurateCastOrNull('2180-01-01', 'Date');
CREATE TABLE test_01193_18429.table_7_9 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT '(backward, tail, A->C)', id, sequenceNextNode('backward', 'tail')(dt, action, 1, action = 'A', action = 'C') AS next_node FROM test_sequenceNextNode GROUP BY id ORDER BY id;
DROP TABLE primary;
DROP DATABASE IF EXISTS test_duiklfb5 
ALTER TABLE table_for_concurrent_alter MODIFY SETTING parts_to_throw_insert = 132, parts_to_delay_insert = 132, min_merge_bytes_to_use_direct_io = 132
select 'self right';
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), N > toInt64(-1) as r FORMAT CSV;
CREATE TABLE test_01193_18429.table_3_360 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_2_136 VALUES 
ALTER TABLE concurrent_alter_column ADD COLUMN c216 DOUBLE;
SELECT count(), sum(rows), sum(has_lightweight_delete) FROM system.parts WHERE database = currentDatabase() AND table = 't_lwd_mutations' AND active;
RENAME TABLE test_01155_ordinary.dst TO test_01155_atomic.dst;
CREATE TABLE test_01193_18429.table_9_532 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_6145483F3B4731385545404E2B3E4D4E3067707340663C243335214D622A4B5E5D386A7831793A2E(x UInt8) Engine=Memory;
SELECT CAST(-1 * bitShiftLeft(toUInt64(1), 35) AS DateTime64(3, 'Asia/Istanbul'));
INSERT INTO msgpack VALUES 
DROP DATABASE IF EXISTS test_b1n6feek 
SELECT 'SELECT DT64 >= N';
select number as a from numbers(10) where a != any (select 5 from numbers(3, 3));
DROP TABLE IF EXISTS merge;
SELECT count() FROM constraint_test_constants_repl WHERE a - b < 0;
CREATE TABLE test_01193_18429.table_1_596 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT stem('fr', 'ÃÂ©tudiÃÂ©');
CREATE DATABASE IF NOT EXISTS test_mo52m24d 
CREATE TABLE test_304D5C553B63574C4F7060633F505863403435506D595C6C6B3729334721554E61722E742333764D(x UInt8) Engine=Memory;
SELECT extractURLParameter('?_', '\0_________________________________');
SELECT dictGet('cache_dictionary', 'array_value', toUInt64(1));
DROP TABLE IF EXISTS t_json_14;
CREATE DATABASE IF NOT EXISTS test_l9dyao5x 
SELECT multiIf((col1 % 2) = 0, toFixedString('foo', 16), (col1 % 3) = 0, toFixedString('bar', 16), toFixedString('baz', 16)) FROM multi_if_check;
CREATE TABLE data_01801 (`key` Int) ENGINE = MergeTree ORDER BY key SETTINGS index_granularity = 10, min_bytes_for_wide_part = 617478828, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 114, merge_max_block_size = 4639, prefer_fetch_merged_part_size_threshold = 695152774, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 23500997, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 34379, primary_key_compress_block_size = 34153 AS SELECT number / 10 FROM numbers(100)
select accurateCast('true', 'Bool');
SELECT 6, 9, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (6 < 13 AND 9 > 0 ? 6 : 0)), throwIf(last != (6 < 13 AND 9 > 0 ? least(13 - 1, 6 + 9 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 6, 9);
SELECT categoricalInformationValue(x.1, x.2) FROM ( SELECT arrayJoin([(0, 0)]) as x );
SELECT quantilesIfArray(0.5, 0.9)([1, NULL], [1, 0]) AS x FROM remote('127.0.0.{1,2}', numbers(3));
ALTER TABLE test_table_2 DELETE WHERE key % 2 = 0
CREATE TABLE test_01193_18429.table_2_875 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_2_780 VALUES 
CREATE TABLE test_01193_18429.table_8_294 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_02908_r3_88 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_88', 'r3') ORDER BY tuple()
SELECT '===========';
CREATE TABLE test_01193_18429.table_5_681 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT a, b, c, e FROM t_fixed_prefix WHERE bitNot(a) = 1 AND bitNot(b) = 1 ORDER BY a, b, c, e SETTINGS optimize_read_in_order = 0
SELECT 'allow_named_collection_override_by_default=1 u1';
CREATE DATABASE IF NOT EXISTS test_tt0twulw 
CREATE TABLE test_7A645357256E7C6329557A5578547A75534926273A38544062262A5551645F4E3A616A7B772A3E6C(x UInt8) Engine=Memory;
CREATE TABLE test_563C4E672F22482A5E28742C6F3535575C56495279224A506D485F73424D3B60254A467A6A3C2D34(x UInt8) Engine=Memory;
CREATE TABLE test1 (`i` int, `j` int) ENGINE = MergeTree PARTITION BY i ORDER BY tuple() SETTINGS index_granularity = 1, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 93, merge_max_block_size = 14723, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 25835809, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 35044, primary_key_compress_block_size = 58452
INSERT INTO mt VALUES /* (18, 1) */ 
SELECT count() == 1 FROM dtest WHERE b IN toDecimal64('44.4000', 4);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (52 < 51 AND 9 > 0 ? 52 : 0)), throwIf(last != (52 < 51 AND 9 > 0 ? least(51 - 1, 52 + 9 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(51) LIMIT 52, 9);
CREATE TABLE table_with_function_pk ( key1 UInt8, key2 UInt32, key3 DateTime64(6, 'UTC'), value String ) ENGINE = MergeTree ORDER BY (cast(value as UInt64), key2) SETTINGS min_compress_block_size=65536, max_compress_block_size=65536;
CREATE TABLE count_lc_test (`s` LowCardinality(String), `arr` Array(LowCardinality(String)), `num` UInt64) ENGINE = MergeTree ORDER BY (s, arr) SETTINGS index_granularity = 4905, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 5055, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1095086577, index_granularity_bytes = 9662618, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 70971, primary_key_compress_block_size = 24784
CREATE TABLE test_01193_18429.table_5_424 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 50;
CREATE DATABASE IF NOT EXISTS test_33cd96y2 
INSERT INTO test_01193_18429.table_5_643 VALUES 
DROP DATABASE IF EXISTS test_cge4f4yv 
CREATE DATABASE IF NOT EXISTS test_fogxvegw 
SELECT a, e FROM t_fixed_prefix WHERE bitNot(a) = 1 ORDER BY a, e SETTINGS optimize_read_in_order = 1
INSERT INTO test_01193_18429.table_4_834 VALUES 
SELECT concat(42);
SELECT pointInPolygon((0.05, 0.05), [(0., 1.), (0.2, 0.5), (0.6, 0.5), (0.8, 0.8), (0.8, 0.3), (0.1, 0.3), (0.1, 0.1), (0.8, 0.1), (1.0, 0.0), (8.0, 7.0), (7.0, 8.0), (0., 1.)]);
ALTER QUOTA q5_01297 FOR 1 YEAR MAX errors = 111;
CREATE TABLE test_224928503F2A335A6F403F5137512957467A51613D4C453D362F75444E5049565A696A4D5733713C(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02541_multiple_ignore_with_nested_select.sql from pid=1715' 
SELECT 'Running test stateless/02383_join_and_filtering_set.sh from pid=1722' 
select sumMap(val, cnt) from ( SELECT [ CAST(1.01, 'Decimal(10,2)') ] as val, [1] as cnt );
CREATE TABLE test_01193_18429.table_4_864 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SYSTEM STOP DISTRIBUTED SENDS test_dist_02536;
INSERT INTO test_01193_18429.table_6_388 VALUES 
CREATE TABLE test_2E7C6644534E63214664206D2764782671664878386E443A565B367622595B5373645B455D73683B(x UInt8) Engine=Memory;
drop table if exists dist_01675
SELECT count(), `data_01247`.`number` FROM `test_tc1uzesn`.`data_01247` WHERE `number` = ((shardNum() AS `_shard_num`) - 1) GROUP BY `number` ORDER BY `number` ASC LIMIT 1, 1
SELECT toDecimalString(-2, 77);
DROP DATABASE IF EXISTS test_wyruormw 
INSERT INTO test_01193_18429.table_9_572 VALUES 
SELECT 'Running test stateless/02934_merge_tree_max_projections.sql from pid=1726' 
WITH map('a', 2, 'b', NULL) AS m SELECT m[materialize(toNullable('a'))], m[materialize(toNullable('b'))], m[materialize(toNullable('c'))];
CREATE TABLE test_4D3F21694D417B72583C5C2D26582C243361474E414157375748253C2A69783F53465B313F6B7724(x UInt8) Engine=Memory;
CREATE TABLE test_2B5E524A6C572A51372072566E2460756D6379796163513B2C4F5043727938577A3D3857325C3B5B(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_01191;
SELECT space(NULL);
insert into alias_1 (dt, col, col2, col3) values 
CREATE INDEX idx_tab2_5 ON tab2 (col4 DESC,col3);
INSERT INTO t_proj SELECT number + 1, number + 1 FROM numbers(1000);
DROP USER IF EXISTS user_test_02184;
SELECT coalesce(toLowCardinality(toNullable(1)), NULL) as x, toTypeName(x);
INSERT INTO test_01193_18429.table_9_419 VALUES 
SELECT ceiling(NULL, NULL, NULL);
select (1 ? (toUInt16(0) as i) : toUInt64(1)) = i;
SELECT count() FROM t_cnf_fuzz WHERE (c0 AND c0 AND (NOT c5) AND c0 AND (NOT c2)) OR ((NOT c4) AND c9 AND (NOT c1) AND c3) OR ((NOT c8) AND c0 AND (NOT c4) AND (NOT c9) AND (NOT c0)) OR ((NOT c4) AND c6 AND c0) OR (c4 AND c5) OR ((NOT c1) AND (NOT c2) AND c4 AND c9 AND (NOT c4)) OR (c4) OR ((NOT c1) AND c0 AND (NOT c7) AND (NOT c6)) OR ((NOT c0) AND c9 AND c6) OR (c1 AND c8 AND c4 AND (NOT c6) AND (NOT c6)) SETTINGS convert_query_to_cnf = 1
SELECT 'Running test stateless/01758_optimize_skip_unused_shards_once.sh from pid=1713' 
SELECT CASE WHEN (number % 2) = 0 THEN [toInt32(1), toInt32(2)] WHEN (number % 3) = 0 THEN [toFloat32(2), toFloat32(3)] ELSE [toInt32(3), toInt32(3)] END FROM system.numbers LIMIT 10;
SELECT tuple(NULL) < tuple(1), tuple(NULL) = tuple(1), tuple(NULL) <= tuple(1), tuple(1, NULL) = tuple(2, 1), tuple(1, NULL) < tuple(2, 1);
CREATE TABLE test_642A47552B755030655C35283A53406156664E6C457458363A2E515565473226437964614A2E5E25(x UInt8) Engine=Memory;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c3)) OR ((NOT c8) AND c5) OR (c2 AND (NOT c6)) OR (c1 AND c3 AND (NOT c8)) OR ((NOT c7) AND c0 AND (NOT c6) AND (NOT c1)) OR (c5 AND c4 AND c2 AND (NOT c7) AND c5) OR ((NOT c7) AND c3 AND c5) SETTINGS convert_query_to_cnf = 0
SELECT hasAll([(1, 2), (3, 4)], [(toNullable(1), toUInt64(2)), (toUInt16(3), 4)]);
CREATE TABLE test_01193_18429.table_3_623 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT t1.key1, t1.key2, t1.key3, t2.key1, t2.key2, t2.key3, empty(t1.s), empty(t2.s) FROM t1 ALL INNER JOIN t2 ON t1.key1 == t2.key1 AND t1.key2 == t2.key2 AND t1.key3 == t2.key3 AND t1.key1 == t2.key3 ORDER BY t1.key1, t1.key2, t1.key3, t2.key1, t2.key2, t2.key3 ;
CREATE TABLE test_7324477C34207B4B64773E5A68595B2C755666345F62306C3D6320517E237A612B3A6E5E2A214F7A(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt32(1), toUInt32(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toInt16(3), toInt16(3)] END FROM system.numbers LIMIT 10;
DESC TABLE test_1a20pj1u.numbers500k
CREATE TABLE test_216471733F3E37705D64576424682F625F4F607C796D3B2C7C692B3733394A2B7B49416D4E385D51(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02935_parallel_replicas_settings.sql from pid=1726' 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c8) AND c3 AND (NOT c6)) OR (c5 AND (NOT c2)) OR (c8 AND (NOT c9) AND (NOT c5) AND (NOT c5) AND (NOT c3)) OR ((NOT c3) AND c0) OR ((NOT c7) AND c1 AND (NOT c5) AND c9) SETTINGS convert_query_to_cnf = 1
CREATE TABLE test_6E2649467A62344D4E3B78232F7D765C76344D4A3932525023234B7B78383D6F5344477C7439222D(x UInt8) Engine=Memory;
INSERT INTO src VALUES /* (-16, 2) */ 
select 'drop_one_part_which_outdated_and_reverted_no_name_intersection'
DROP TABLE IF EXISTS t_flatten_tuple;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), toInt16(-1) + N as r FORMAT CSV;
SELECT `x`, `y` FROM `test_33excl4a`.`t2` ORDER BY `x` ASC
DROP DATABASE IF EXISTS test_lyrv2n8y 
INSERT INTO orc_lc FORMAT ORC
select 'dictGet', 'hashed_ints' as dict_name, toUInt64(1) as k, dictGet(dict_name, 'i8', k), dictGet(dict_name, 'i16', k), dictGet(dict_name, 'i32', k), dictGet(dict_name, 'i64', k), dictGet(dict_name, 'u8', k), dictGet(dict_name, 'u16', k), dictGet(dict_name, 'u32', k), dictGet(dict_name, 'u64', k), dictGet(dict_name, ('i8', 'i16', 'i32'), k);
SELECT * FROM functional_index_mergetree WHERE NOT x < 7.42 AND NOT x > 7.42;
CREATE INDEX idx_tab3_3 ON tab3 (col0,col3 DESC);
CREATE TABLE test_4D51402722462F6C30502F5E433F5D2B4E3878485979707E3D2A672A50422B712373305A4A746051(x UInt8) Engine=Memory;
SELECT number AS x, number + 1 AS y, 'hello' AS s FROM numbers(5) FORMAT CustomSeparatedWithNames SETTINGS format_custom_row_before_delimiter='<row_before_delimiter>', format_custom_row_after_delimiter='<row_after_delimieter>\n', format_custom_row_between_delimiter='<row_between_delimiter>\n', format_custom_result_before_delimiter='<result_before_delimiter>\n', format_custom_result_after_delimiter='<result_after_delimiter>\n', format_custom_field_delimiter='<field_delimiter>', format_custom_escaping_rule='CSV'
CREATE TABLE bloom_filter_sizing_sec (`key1` UInt64, `key2` UInt64, `value` UInt64, INDEX key_bf key2 TYPE bloom_filter(0.01) GRANULARITY 2147483648) ENGINE = MergeTree ORDER BY key1 SETTINGS index_granularity = 60856, min_bytes_for_wide_part = 830285131, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 112, merge_max_block_size = 18030, prefer_fetch_merged_part_size_threshold = 5403282668, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 2078561646, index_granularity_bytes = 19873955, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 60204, primary_key_compress_block_size = 57636
CREATE TABLE test_533442587D413A3F482E2527654245246661313D465A52487978643E357D41705F203A354F556C4F(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_1aujee07 
SELECT sparkbar(11,toDate('2020-01-04'),toDate('2020-01-11'))(event_date,cnt) FROM spark_bar_test;
INSERT INTO dst_15 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 71
SELECT 42,toFixedString('Hello', 10), bin(bitShiftRight(toFixedString('Hello', 10), 42));
DROP DATABASE IF EXISTS test_kd7ahkdv 
SELECT finalizeAggregation(countState(DISTINCT toString(number % 20))) FROM remote('127.0.0.{1,2}', numbers_mt(100000));
select s1.x, s2.x from (select 1 as x) s1 left join (select 1 as x) s2 using x;
SET parallel_view_processing = 1;
SELECT VAR_POP(NULL);
SELECT 'Running test stateless/00753_alter_attach.sql from pid=1718' 
DROP DATABASE IF EXISTS test_wp7rj6wj 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), timeSlot(N, 'Asia/Istanbul') as r FORMAT CSV;
SHOW CREATE TABLE system.part_log
INSERT INTO test_01193_18429.table_9_581 VALUES 
SELECT name FROM system.parts WHERE database=currentDatabase() AND table = '02581_trips' AND active ORDER BY name;
CREATE TABLE test_357358273C7D5E745B3B4364634C5B576C7B5964667A4D4E4C2A4B5C7B212B7A4676373429345C35(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_2_904 VALUES 
drop table if exists json;
SELECT -128, -9223372036854775808, -128 = -9223372036854775808, -128 != -9223372036854775808, -128 < -9223372036854775808, -128 <= -9223372036854775808, -128 > -9223372036854775808, -128 >= -9223372036854775808, -9223372036854775808 = -128, -9223372036854775808 != -128, -9223372036854775808 < -128, -9223372036854775808 <= -128, -9223372036854775808 > -128, -9223372036854775808 >= -128 , toInt8(-128) = toInt64(-9223372036854775808), toInt8(-128) != toInt64(-9223372036854775808), toInt8(-128) < toInt64(-9223372036854775808), toInt8(-128) <= toInt64(-9223372036854775808), toInt8(-128) > toInt64(-9223372036854775808), toInt8(-128) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toInt8(-128), toInt64(-9223372036854775808) != toInt8(-128), toInt64(-9223372036854775808) < toInt8(-128), toInt64(-9223372036854775808) <= toInt8(-128), toInt64(-9223372036854775808) > toInt8(-128), toInt64(-9223372036854775808) >= toInt8(-128) , toInt16(-128) = toInt64(-9223372036854775808), toInt16(-128) != toInt64(-9223372036854775808), toInt16(-128) < toInt64(-9223372036854775808), toInt16(-128) <= toInt64(-9223372036854775808), toInt16(-128) > toInt64(-9223372036854775808), toInt16(-128) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toInt16(-128), toInt64(-9223372036854775808) != toInt16(-128), toInt64(-9223372036854775808) < toInt16(-128), toInt64(-9223372036854775808) <= toInt16(-128), toInt64(-9223372036854775808) > toInt16(-128), toInt64(-9223372036854775808) >= toInt16(-128) , toInt32(-128) = toInt64(-9223372036854775808), toInt32(-128) != toInt64(-9223372036854775808), toInt32(-128) < toInt64(-9223372036854775808), toInt32(-128) <= toInt64(-9223372036854775808), toInt32(-128) > toInt64(-9223372036854775808), toInt32(-128) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toInt32(-128), toInt64(-9223372036854775808) != toInt32(-128), toInt64(-9223372036854775808) < toInt32(-128), toInt64(-9223372036854775808) <= toInt32(-128), toInt64(-9223372036854775808) > toInt32(-128), toInt64(-9223372036854775808) >= toInt32(-128) , toInt64(-128) = toInt64(-9223372036854775808), toInt64(-128) != toInt64(-9223372036854775808), toInt64(-128) < toInt64(-9223372036854775808), toInt64(-128) <= toInt64(-9223372036854775808), toInt64(-128) > toInt64(-9223372036854775808), toInt64(-128) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toInt64(-128), toInt64(-9223372036854775808) != toInt64(-128), toInt64(-9223372036854775808) < toInt64(-128), toInt64(-9223372036854775808) <= toInt64(-128), toInt64(-9223372036854775808) > toInt64(-128), toInt64(-9223372036854775808) >= toInt64(-128) 
SELECT '1,,' == replaceRegexpOne(',,1,,', '^[,]*|[,]*$', '') x;
CREATE USER user5_02713 IDENTIFIED WITH bcrypt_password BY 'qwerty5'
select dummy from remote('127.{1,1}', system.one) where dummy + dummy >= 0 limit 1 by dummy + dummy + 0 as l settings prefer_localhost_replica=1,distributed_group_by_no_merge=0,distributed_push_down_limit=1;
SELECT uniq(`number`) AS `u` FROM `test_m09vngm9`.`data_00184` GROUP BY `number` ORDER BY `u` DESC
INSERT INTO test_01543 SELECT toString(number), number FROM numbers(10)
SELECT multiIf((number % 2) = 0, [toUInt32(1), toUInt32(2)], (number % 3) = 0, [toUInt8(2), toUInt8(3)], [toUInt8(3), toUInt8(3)]) FROM system.numbers LIMIT 10;
EXPLAIN description = 0 SELECT day AS s FROM test_table ORDER BY s LIMIT 1 SETTINGS optimize_read_in_order = 0;
CREATE TABLE test_70325E6D432173365028212F48445D357B5C3B4851376F374638466F5D584F574B202A506B254265(x UInt8) Engine=Memory;
USE test_01249
CREATE DATABASE IF NOT EXISTS test_sa7j6wzz 
CREATE TABLE test_02908_r2_3 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_3', 'r2') ORDER BY tuple()
alter table many_mutations delete where y = 907 * 2 settings mutations_sync = 0;
CREATE TABLE test_02908_r1_242 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_242', 'r1') ORDER BY tuple()
CREATE TABLE test_7B22513174707D3D6D7872455F4C387E434C724872232A3C6171493734327E3C6B43522A4E3D5F44(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_6_304 VALUES 
SELECT 02339_db.test_table.COLUMNS(id) FROM 02339_db.test_table;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (83 < 57 AND 95 > 0 ? 83 : 0)), throwIf(last != (83 < 57 AND 95 > 0 ? least(57 - 1, 83 + 95 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(57) LIMIT 83, 95);
select count() from system.schema_inference_cache where countSubstrings(source, '02404_data.CustomSeparated') > 0;
DROP TABLE IF EXISTS null_mv;
SELECT h3NumHexagons(2);
CREATE TABLE test_01193_18429.table_6_772 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_6_77 VALUES 
SELECT accurateCastOrNull(19, 'Date');
GRANT SELECT ON db.table TO test_user_01074;
CREATE TABLE test_5F3F78567A22434473703536252656384F60664653543420326C3A685B503C4D2E4643244B62533F(x UInt8) Engine=Memory;
CREATE TABLE test_72213666713D347D5A5F2E433F3F705126495D23314D2036794F665656585A474A434F665C3C7871(x UInt8) Engine=Memory;
SELECT '117' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ffff:ffff:ffff:f800')))
SELECT arrayFold( acc,x -> arrayPushBack(acc, x), [1, 2, 3, 4], emptyArrayInt64());
CREATE QUOTA q5_01297 FOR INTERVAL 1 MINUTE MAX query_selects = '12G';
INSERT INTO test_01193_18429.table_5_461 VALUES 
CREATE TABLE test_512F21742A362E5A6F712B685378395C506233617557254743467B435E2C5174246A67552E2E5625(x UInt8) Engine=Memory;
DROP TABLE runningConcurrency_test;
select 0 = multiMatchAny(materialize('abc'), ['bcdef']) from system.numbers limit 10;
SELECT sumIf(`number`, arrayExists(`x` -> (`x` IN ((SELECT 1) AS `_subquery3052`)), [1])) FROM numbers(10)
INSERT INTO test_01193_18429.table_3_469 VALUES 
DROP DATABASE IF EXISTS test_4rj3f385 
DROP DATABASE IF EXISTS test_p4xglmzf 
CREATE TABLE test_7320775322206928326A3D7B274B6F4159675E56247B7749324055504C733F4E2D433F7E3D7A365F(x UInt8) Engine=Memory;
SELECT arrayCount(x -> materialize(1), arrayMap(x -> toString(x), range(number))) FROM system.numbers LIMIT 10;
CREATE TABLE test_337858772649526622604C6A312A333A264654333A6A44724A4335692941476B564532345B6C2032(x UInt8) Engine=Memory;
select 6 = position('abcdefgh', materialize('f')) from system.numbers limit 10;
CREATE TABLE test_01193_18429.table_5_507 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_7A2679743C432A2230667B735A3D52394955297E4D412D5C5F294637243E437D38342F466C686570(x UInt8) Engine=Memory;
select a, b from s3(s3_conn, filename='test_02480_support_wildcard_??', format=Parquet) order by a;
SELECT hex(1e-20);
INSERT INTO test_01193_18429.table_1_417 VALUES 
CREATE TABLE test_01193_18429.table_4_236 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT * FROM (SELECT materialize('1') AS s1, materialize('2') AS s2 GROUP BY s1, s2) WHERE s2 = '2';
DROP TABLE t_subcolumns_dist;
DESCRIBE test_table_replicated_second;
SELECT 'Running test stateless/00639_startsWith.sql from pid=1726' 
CREATE TABLE test_2B2D5453693D2850623A326E41357E7122655923393254676558277B5D20776D473B667B64365827(x UInt8) Engine=Memory;
SELECT count() FROM t_01411_num WHERE arr[1] = num;
SELECT 'Check correctness, decimal arguments';
INSERT INTO test_01193_18429.table_8_470 VALUES 
select (a, a) in (select (a, a) from tab_00386) from tab_00386
CREATE TABLE test_565B705724242F2643544C63765836465F3069752B656631604D434C5C36407A7363754F42735358(x UInt8) Engine=Memory;
create table nested_map (d default today(), k UInt64, payload default rand(), SomeMap Nested(ID UInt32, Num Int64)) engine=SummingMergeTree(d, k, 8192);
INSERT INTO test_02908_r1_103 SELECT rand64() FROM numbers(5);
INSERT INTO test_01193_18429.table_2_540 VALUES 
CREATE TABLE test_6C65745D6955506D2E642B303322293D374E7A764F5E4236513929455271474B487378633C79454C(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS Xvg2Y7gQIH7aS
CREATE DATABASE IF NOT EXISTS test_brsw1nqw 
ALTER TABLE rdst REPLACE PARTITION 3 FROM src;
CREATE TABLE test_2D2466432C5F5161746D5973787A7D2D303F2D3B3F5A627749675525545B587044574230665D7368(x UInt8) Engine=Memory;
SELECT multiIf((number % 2) = 0, toFloat32(1), (number % 3) = 0, toUInt16(2), toFloat64(3)) FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_svwc7ocw 
drop table if exists data_02340;
EXPLAIN PIPELINE SELECT b FROM t_fixed_prefix ORDER BY b SETTINGS optimize_read_in_order = 1
drop table if exists d1;
SELECT multiIf((number % 2) = 0, [toUInt32(1), toUInt32(2)], (number % 3) = 0, [toInt8(2), toInt8(3)], [toInt64(3), toInt64(3)]) FROM system.numbers LIMIT 10;
INSERT INTO r7 SELECT 20
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), toYYYYMMDDhhmmss(N, 'Asia/Istanbul') as r FORMAT CSV;
select key, arr_x, arr_y, _table from test_in_tuple left array join x as arr_x, y as arr_y where (key_2, arr_x, arr_y) in (1, 1, 1) order by _table, arr_x, arr_y;
SELECT 65536, 4294967295, 65536 = 4294967295, 65536 != 4294967295, 65536 < 4294967295, 65536 <= 4294967295, 65536 > 4294967295, 65536 >= 4294967295, 4294967295 = 65536, 4294967295 != 65536, 4294967295 < 65536, 4294967295 <= 65536, 4294967295 > 65536, 4294967295 >= 65536 , toUInt32(65536) = toUInt32(4294967295), toUInt32(65536) != toUInt32(4294967295), toUInt32(65536) < toUInt32(4294967295), toUInt32(65536) <= toUInt32(4294967295), toUInt32(65536) > toUInt32(4294967295), toUInt32(65536) >= toUInt32(4294967295), toUInt32(4294967295) = toUInt32(65536), toUInt32(4294967295) != toUInt32(65536), toUInt32(4294967295) < toUInt32(65536), toUInt32(4294967295) <= toUInt32(65536), toUInt32(4294967295) > toUInt32(65536), toUInt32(4294967295) >= toUInt32(65536) , toUInt32(65536) = toUInt64(4294967295), toUInt32(65536) != toUInt64(4294967295), toUInt32(65536) < toUInt64(4294967295), toUInt32(65536) <= toUInt64(4294967295), toUInt32(65536) > toUInt64(4294967295), toUInt32(65536) >= toUInt64(4294967295), toUInt64(4294967295) = toUInt32(65536), toUInt64(4294967295) != toUInt32(65536), toUInt64(4294967295) < toUInt32(65536), toUInt64(4294967295) <= toUInt32(65536), toUInt64(4294967295) > toUInt32(65536), toUInt64(4294967295) >= toUInt32(65536) , toUInt32(65536) = toInt64(4294967295), toUInt32(65536) != toInt64(4294967295), toUInt32(65536) < toInt64(4294967295), toUInt32(65536) <= toInt64(4294967295), toUInt32(65536) > toInt64(4294967295), toUInt32(65536) >= toInt64(4294967295), toInt64(4294967295) = toUInt32(65536), toInt64(4294967295) != toUInt32(65536), toInt64(4294967295) < toUInt32(65536), toInt64(4294967295) <= toUInt32(65536), toInt64(4294967295) > toUInt32(65536), toInt64(4294967295) >= toUInt32(65536) , toInt32(65536) = toUInt32(4294967295), toInt32(65536) != toUInt32(4294967295), toInt32(65536) < toUInt32(4294967295), toInt32(65536) <= toUInt32(4294967295), toInt32(65536) > toUInt32(4294967295), toInt32(65536) >= toUInt32(4294967295), toUInt32(4294967295) = toInt32(65536), toUInt32(4294967295) != toInt32(65536), toUInt32(4294967295) < toInt32(65536), toUInt32(4294967295) <= toInt32(65536), toUInt32(4294967295) > toInt32(65536), toUInt32(4294967295) >= toInt32(65536) , toInt32(65536) = toUInt64(4294967295), toInt32(65536) != toUInt64(4294967295), toInt32(65536) < toUInt64(4294967295), toInt32(65536) <= toUInt64(4294967295), toInt32(65536) > toUInt64(4294967295), toInt32(65536) >= toUInt64(4294967295), toUInt64(4294967295) = toInt32(65536), toUInt64(4294967295) != toInt32(65536), toUInt64(4294967295) < toInt32(65536), toUInt64(4294967295) <= toInt32(65536), toUInt64(4294967295) > toInt32(65536), toUInt64(4294967295) >= toInt32(65536) , toInt32(65536) = toInt64(4294967295), toInt32(65536) != toInt64(4294967295), toInt32(65536) < toInt64(4294967295), toInt32(65536) <= toInt64(4294967295), toInt32(65536) > toInt64(4294967295), toInt32(65536) >= toInt64(4294967295), toInt64(4294967295) = toInt32(65536), toInt64(4294967295) != toInt32(65536), toInt64(4294967295) < toInt32(65536), toInt64(4294967295) <= toInt32(65536), toInt64(4294967295) > toInt32(65536), toInt64(4294967295) >= toInt32(65536) , toUInt64(65536) = toUInt32(4294967295), toUInt64(65536) != toUInt32(4294967295), toUInt64(65536) < toUInt32(4294967295), toUInt64(65536) <= toUInt32(4294967295), toUInt64(65536) > toUInt32(4294967295), toUInt64(65536) >= toUInt32(4294967295), toUInt32(4294967295) = toUInt64(65536), toUInt32(4294967295) != toUInt64(65536), toUInt32(4294967295) < toUInt64(65536), toUInt32(4294967295) <= toUInt64(65536), toUInt32(4294967295) > toUInt64(65536), toUInt32(4294967295) >= toUInt64(65536) , toUInt64(65536) = toUInt64(4294967295), toUInt64(65536) != toUInt64(4294967295), toUInt64(65536) < toUInt64(4294967295), toUInt64(65536) <= toUInt64(4294967295), toUInt64(65536) > toUInt64(4294967295), toUInt64(65536) >= toUInt64(4294967295), toUInt64(4294967295) = toUInt64(65536), toUInt64(4294967295) != toUInt64(65536), toUInt64(4294967295) < toUInt64(65536), toUInt64(4294967295) <= toUInt64(65536), toUInt64(4294967295) > toUInt64(65536), toUInt64(4294967295) >= toUInt64(65536) , toUInt64(65536) = toInt64(4294967295), toUInt64(65536) != toInt64(4294967295), toUInt64(65536) < toInt64(4294967295), toUInt64(65536) <= toInt64(4294967295), toUInt64(65536) > toInt64(4294967295), toUInt64(65536) >= toInt64(4294967295), toInt64(4294967295) = toUInt64(65536), toInt64(4294967295) != toUInt64(65536), toInt64(4294967295) < toUInt64(65536), toInt64(4294967295) <= toUInt64(65536), toInt64(4294967295) > toUInt64(65536), toInt64(4294967295) >= toUInt64(65536) , toInt64(65536) = toUInt32(4294967295), toInt64(65536) != toUInt32(4294967295), toInt64(65536) < toUInt32(4294967295), toInt64(65536) <= toUInt32(4294967295), toInt64(65536) > toUInt32(4294967295), toInt64(65536) >= toUInt32(4294967295), toUInt32(4294967295) = toInt64(65536), toUInt32(4294967295) != toInt64(65536), toUInt32(4294967295) < toInt64(65536), toUInt32(4294967295) <= toInt64(65536), toUInt32(4294967295) > toInt64(65536), toUInt32(4294967295) >= toInt64(65536) , toInt64(65536) = toUInt64(4294967295), toInt64(65536) != toUInt64(4294967295), toInt64(65536) < toUInt64(4294967295), toInt64(65536) <= toUInt64(4294967295), toInt64(65536) > toUInt64(4294967295), toInt64(65536) >= toUInt64(4294967295), toUInt64(4294967295) = toInt64(65536), toUInt64(4294967295) != toInt64(65536), toUInt64(4294967295) < toInt64(65536), toUInt64(4294967295) <= toInt64(65536), toUInt64(4294967295) > toInt64(65536), toUInt64(4294967295) >= toInt64(65536) , toInt64(65536) = toInt64(4294967295), toInt64(65536) != toInt64(4294967295), toInt64(65536) < toInt64(4294967295), toInt64(65536) <= toInt64(4294967295), toInt64(65536) > toInt64(4294967295), toInt64(65536) >= toInt64(4294967295), toInt64(4294967295) = toInt64(65536), toInt64(4294967295) != toInt64(65536), toInt64(4294967295) < toInt64(65536), toInt64(4294967295) <= toInt64(65536), toInt64(4294967295) > toInt64(65536), toInt64(4294967295) >= toInt64(65536) 
CREATE TABLE test_404B3B6524577536557C6F7970337B576B2464297454623C492953743C5D756C70495D6847465F29(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_5_982 VALUES 
CREATE TABLE test_01193_18429.table_4_745 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_10_741 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_8_926 VALUES 
CREATE ROW POLICY db1_02703 ON db1_02703.* USING 1 AS PERMISSIVE TO ALL;
CREATE TABLE test_7B4D2E3A20663D3D41492A234F7A4F4744612328253423776B252B2B5C3B7A265B7134737D297E6F(x UInt8) Engine=Memory;
select '-- select h3PointDistKm(lat1, lon1,lat2, lon2) AS k from table1 order by k;';
DROP DATABASE IF EXISTS test_vfcbajix 
SELECT arraySum(x -> 0, [1, 2, 3]);
select 'src_to_dst', 12, 'dst', type, n, _part from dst order by type, n
CREATE TABLE orders (order_id UUID, user_id UUID) ENGINE = Memory;
SELECT a, e FROM t_fixed_prefix WHERE bitNot(c) = 1 ORDER BY a, e SETTINGS optimize_read_in_order = 0
CREATE TABLE test_01193_18429.table_8_102 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_7_401 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select format('{}{}{}', materialize(toFixedString('a', 1)), 'b', 'c') == 'abc';
SELECT uniqCombined64(number) FROM numbers(1e7);
DROP TABLE replicated_aggregating_merge_tree;
CREATE DATABASE IF NOT EXISTS test_m7rkx7gu 
SELECT parseDateTimeBestEffortOrNull('2020-05-14T03:37:03.253184', 3, 'UTC') AS a, toTypeName(a);
CREATE TABLE test_01193_18429.table_9_385 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_1_609 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO r3 SELECT 75 % 10 = 3 ? 75 - 1 : 75
system stop distributed sends dist_01555;
drop table if exists 02681_undrop_log sync;
CREATE TABLE test_45452E21252F78206A362B37615A5145342A3B563F556E66313768485B2E5D2F4B45455352587536(x UInt8) Engine=Memory;
CREATE TABLE decimal ( a Array(Decimal32(3)), b Array(Decimal64(3)), c Array(Decimal128(3)), nest Nested ( a Decimal(9,2), b Decimal(18,2), c Decimal(38,2) ), tup Tuple(Decimal32(1), Decimal64(1), Decimal128(1)) ) ENGINE = Memory;
SELECT has([(a, b), (c, d)], (b, c)) FROM (SELECT materialize(1) AS a, 2 AS b, materialize(3) AS c, 4 AS d);
ALTER TABLE dst_12 DROP PARTITION 6
SELECT * FROM view_foo_bar;
CREATE TABLE t (`s` UInt16, `l` UInt16, PROJECTION p (SELECT s, l ORDER BY l)) ENGINE = MergeTree ORDER BY s SETTINGS index_granularity = 34179, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 22701, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 618923, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 22174, primary_key_compress_block_size = 20365
SELECT 'Running test stateless/01356_initialize_aggregation.sql from pid=1722' 
EXPLAIN SYNTAX SELECT sumIf(1, number > 0) FROM numbers(10) WHERE 0;
INSERT INTO test_01193_18429.table_6_216 VALUES 
DROP DATABASE IF EXISTS test_fca42s56 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (73 < 14 AND 37 > 0 ? 73 : 0)), throwIf(last != (73 < 14 AND 37 > 0 ? least(14 - 1, 73 + 37 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(14) LIMIT 73, 37);
SELECT [materialize(1)][0xFFFFFFFFFFFFFFFF];
DROP TABLE table_b;
SELECT toDateTime64(-999999999999, 9, 'UTC');
CREATE TABLE test_01193_18429.table_9_246 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE 02418_test_another (key UInt64, value Float64) Engine=KeeperMap('/' || currentDatabase() || '/test2418', 4) PRIMARY KEY(key);
SELECT t1.value, t2.value, t3.value FROM test_table_join_1 AS t1 LEFT JOIN test_table_join_2 AS t2 ON t1.id = t2.id OR t1.id = t2.id RIGHT JOIN test_table_join_3 AS t3 ON t2.id = t3.id OR t3.id = t2.id;
INSERT INTO with_deduplication VALUES 
CREATE TABLE test_01193_18429.table_4_930 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT k, a FROM (SELECT 42 AS k FROM remote('127.0.0.2', system.one)) GLOBAL ALL FULL OUTER JOIN (SELECT 42 AS k, 1 AS a, a) USING k;
create table null_status on cluster test_shard_localhost (n int) engine=Memory;
DESCRIBE (SELECT arrayMap(x -> test_table.* EXCEPT value APPLY x -> x, [1,2,3]) FROM test_table);
INSERT INTO r6 SELECT 16 % 10 = 6 ? 16 - 1 : 16
INSERT INTO src VALUES /* (93, 1) */ 
CREATE TABLE join (k UInt8, x String) ENGINE = Join(ANY, LEFT, k);
SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r USING (x) ORDER BY x, lc;
SELECT 'Running test stateless/02893_system_drop_schema_cache_format.sql from pid=1726' 
CREATE TABLE test_4D313D2E594E4F79557333736736637E375C2F6729544245747C604B273A3173533169562B6D3678(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01710_projections_partial_optimize_aggregation_in_order.sh from pid=1713' 
CREATE TABLE test_6749743031603B3F263C37325448583541484171667A6C744E6041667360435E3E332445227B4E76(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_dv7fo9pr 
SELECT COUNT() FROM bloom_filter_array_lc_null_types_test WHERE has(date_time, toDateTime('1970-01-01 02:00:05', 'Asia/Istanbul'));
select (toInt128(-1) * toUInt8(1)) x, (toInt256(-1) * toUInt8(1)) y, toTypeName(x), toTypeName(y);
select a1 from tab1 any left join tab2 on b1 = a2;
select 36 as offset, 16 as length, toFixedString('Hello', 6) as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
desc file(dump3.sql, MySQLDump) settings input_format_mysql_dump_table_name='test2'
SELECT 11212 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'asn', tuple(IPv4StringToNum('101.79.55.22')))
SELECT kafkaMurmurHash('foobar');
select 1 = multiSearchAny(materialize('abcdefgh'), ['defg']);
select a2, b2 + 1 from tab1 full join tab2 on b1 + 1 = a2 + 1 or a1 + 4 = b2 + 2 ORDER BY a2, b2 + 1;
SELECT d, count() FROM with_fill_date GROUP BY d ORDER BY d WITH FILL STEP INTERVAL 15 MINUTE LIMIT 5;
SELECT 'GCM mode with IV';
DROP DATABASE IF EXISTS test_z3r3plv6 
DROP TABLE data_01660;
DROP DATABASE IF EXISTS test_ub0j2cvk 
SELECT cutFragment('http://www.example.com/a/b/c?a=b');
SELECT arrayShuffle([1,2,3,4,5,6,7,8,9,NULL], 0xbad_cafe);
SELECT arrayZip([0, 1], materialize(['hello', 'world']));
DROP TABLE IF EXISTS t_fixed_prefix
SELECT 1.1234567::Decimal32(8);
SELECT JSONExtractArrayRaw('{"a": "hello", "b": [-100, 200.0, 300]}', 'b');
DROP DATABASE IF EXISTS test_0tiuh4zs 
CREATE TABLE test_01193_18429.table_1_593 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'Running test stateless/00164_not_chain.sql from pid=1713' 
INSERT INTO test_01193_18429.table_1_645 VALUES 
CREATE TABLE store_sales ( `ss_sold_date_sk` Float64, `ss_sold_time_sk` Float64, `ss_customer_sk` Float64, `ss_cdemo_sk` Float64, `ss_hdemo_sk` Float64 ) ENGINE = Memory;
SELECT accurateCast(1e19, 'UInt64');
DROP TABLE IF EXISTS table_skipped_column_in_nested_00825;
CREATE DATABASE IF NOT EXISTS test_bqkil4ga 
CREATE TABLE test_7A635A4A576476462A7B2D417950755D3160765E3741492958255353236049672154244D3C413056(x UInt8) Engine=Memory;
SELECT mapKeys(m), mapValues(m) FROM t_func_to_subcolumns;
set input_format_json_infer_incomplete_types_as_strings=1;
CREATE TABLE test_52783C2326743357704E4373237D5C5F636B66727A4A4E3161624F3D2322723B666F3A2B5D53584C(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_8_91 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_7A72566C5D7470232F744F6E634B473537575828567A217634402F406D3A45447E75527A67337129(x UInt8) Engine=Memory;
SELECT round(greatCircleAngle(0, 45, 1, 45.1), 4);
SELECT quantileTiming(NULL);
CREATE TABLE test_3A54352D682054524A6D6D33573F55396E7B7A382A44642A2B7A695A2F61294D2D75487D4956636E(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01305_buffer_final_bug.sql from pid=1713' 
select round(1000 * ngramSearchCaseInsensitive('', 'abc'));
SELECT uniqHLL12(NULL, NULL, NULL);
SELECT transform(number, [2, 4, 6], ['google', 'censor.net', 'yahoo'], 'other') FROM system.numbers LIMIT 10;
SELECT 'n fj t', t1.x, t2.x FROM nt AS t1 FULL JOIN t AS t2 ON t1.x = t2.x ORDER BY t1.x;
/* Buffer with flush_rows=1000 */ create table buffer_01811 (key Int) Engine=Buffer(currentDatabase(), data_01811, /* num_layers= */ 1, /* min_time= */ 1, /* max_time= */ 86400, /* min_rows= */ 1e9, /* max_rows= */ 1e6, /* min_bytes= */ 0, /* max_bytes= */ 4e6, /* flush_time= */ 86400, /* flush_rows= */ 10, /* flush_bytes= */0 );
SELECT decodeURLFormComponent(queryString('//paul@127.0.0.1:443/?query=hello%20world+foo%2Bbar'));
CREATE TABLE test_01193_18429.table_7_413 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
drop table insert_big_json
INSERT INTO test_01193_18429.table_7_174 VALUES 
DROP TABLE IF EXISTS segfault_mv;
DROP DATABASE IF EXISTS test_m7s130vv 
SELECT 1 % CAST(NULL, 'Nullable(Float32)');
SELECT c1, c2, c3 FROM urlCluster('test_cluster_one_shard_three_replicas_localhost', 'http://localhost:11111/test/{a,b}.tsv', 'TSV', '`c1` Nullable(Int64), `c2` Nullable(Int64), `c3` Nullable(Int64)') ORDER BY c1 ASC, c2 ASC, c3 ASC
SELECT 'Running test stateless/00564_initial_column_values_with_default_expression.sql from pid=1724' 
EXPLAIN PIPELINE SELECT c FROM t_fixed_prefix WHERE bitNot(a) = 1 ORDER BY c SETTINGS optimize_read_in_order = 1
SELECT id, min(value1), min(value2) FROM test_table_float_values GROUP BY id ORDER BY id;
select 4 = indexOf(materialize([0, 1, 2, 3 as x]), x) from system.numbers limit 10;
CREATE TABLE test_4A6A5C215358605441714F7C776A4E20755369213E35303221387459762254634539486938556D37(x UInt8) Engine=Memory;
SELECT count(*) FROM source WHERE toYear(ts_64) > 2023 SETTINGS allow_experimental_analyzer=1;
with '2018-01-12 22:33:44' as s, toDateTime(s) as datetime, toDateTime64(s, 6) as datetime64, toDate(s) as date, toDate32(s) as date32 SELECT formatDateTimeInJodaSyntax(datetime, 'EE'), formatDateTimeInJodaSyntax(datetime64, 'EE'), formatDateTimeInJodaSyntax(date, 'EE'), formatDateTimeInJodaSyntax(date32, 'EE');
INSERT INTO test_01193_18429.table_8_165 VALUES 
EXPLAIN QUERY TREE (WITH 1::Nullable(UInt64) as my_literal Select sum(number + my_literal) from numbers(0));
select countSubstrings(toString(number), toString(number)) from numbers(1);
DROP DATABASE IF EXISTS test_0eozz2ps 
SELECT cast((1, 'Value'), 'Tuple (id UInt64, value String)') AS value, value.COLUMNS('i') APPLY toString;
CREATE TABLE t_sparse (`id` UInt64, `u` UInt64, `s` String) ENGINE = MergeTree ORDER BY id SETTINGS ratio_of_defaults_for_sparse_serialization = 0.9, index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 1073741824, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 5303, prefer_fetch_merged_part_size_threshold = 3819397357, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 5960985087, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 58493, primary_key_compress_block_size = 23379
select v, variantElement(v, 'Bool') from format(Values, 'v Variant(String, Bool)', '(NULL), (True)') format Values;
CREATE TABLE encryption_test (`i` Int, `s` String CODEC(AES_256_GCM_SIV)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 17708, min_bytes_for_wide_part = 797893530, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 54, merge_max_block_size = 7481, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 3401787, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 44247, primary_key_compress_block_size = 44345
CREATE TABLE test_01193_18429.table_5_590 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT -1, 32768, -1 = 32768, -1 != 32768, -1 < 32768, -1 <= 32768, -1 > 32768, -1 >= 32768, 32768 = -1, 32768 != -1, 32768 < -1, 32768 <= -1, 32768 > -1, 32768 >= -1 , toInt8(-1) = toUInt16(32768), toInt8(-1) != toUInt16(32768), toInt8(-1) < toUInt16(32768), toInt8(-1) <= toUInt16(32768), toInt8(-1) > toUInt16(32768), toInt8(-1) >= toUInt16(32768), toUInt16(32768) = toInt8(-1), toUInt16(32768) != toInt8(-1), toUInt16(32768) < toInt8(-1), toUInt16(32768) <= toInt8(-1), toUInt16(32768) > toInt8(-1), toUInt16(32768) >= toInt8(-1) , toInt8(-1) = toUInt32(32768), toInt8(-1) != toUInt32(32768), toInt8(-1) < toUInt32(32768), toInt8(-1) <= toUInt32(32768), toInt8(-1) > toUInt32(32768), toInt8(-1) >= toUInt32(32768), toUInt32(32768) = toInt8(-1), toUInt32(32768) != toInt8(-1), toUInt32(32768) < toInt8(-1), toUInt32(32768) <= toInt8(-1), toUInt32(32768) > toInt8(-1), toUInt32(32768) >= toInt8(-1) , toInt8(-1) = toInt32(32768), toInt8(-1) != toInt32(32768), toInt8(-1) < toInt32(32768), toInt8(-1) <= toInt32(32768), toInt8(-1) > toInt32(32768), toInt8(-1) >= toInt32(32768), toInt32(32768) = toInt8(-1), toInt32(32768) != toInt8(-1), toInt32(32768) < toInt8(-1), toInt32(32768) <= toInt8(-1), toInt32(32768) > toInt8(-1), toInt32(32768) >= toInt8(-1) , toInt8(-1) = toUInt64(32768), toInt8(-1) != toUInt64(32768), toInt8(-1) < toUInt64(32768), toInt8(-1) <= toUInt64(32768), toInt8(-1) > toUInt64(32768), toInt8(-1) >= toUInt64(32768), toUInt64(32768) = toInt8(-1), toUInt64(32768) != toInt8(-1), toUInt64(32768) < toInt8(-1), toUInt64(32768) <= toInt8(-1), toUInt64(32768) > toInt8(-1), toUInt64(32768) >= toInt8(-1) , toInt8(-1) = toInt64(32768), toInt8(-1) != toInt64(32768), toInt8(-1) < toInt64(32768), toInt8(-1) <= toInt64(32768), toInt8(-1) > toInt64(32768), toInt8(-1) >= toInt64(32768), toInt64(32768) = toInt8(-1), toInt64(32768) != toInt8(-1), toInt64(32768) < toInt8(-1), toInt64(32768) <= toInt8(-1), toInt64(32768) > toInt8(-1), toInt64(32768) >= toInt8(-1) , toInt16(-1) = toUInt16(32768), toInt16(-1) != toUInt16(32768), toInt16(-1) < toUInt16(32768), toInt16(-1) <= toUInt16(32768), toInt16(-1) > toUInt16(32768), toInt16(-1) >= toUInt16(32768), toUInt16(32768) = toInt16(-1), toUInt16(32768) != toInt16(-1), toUInt16(32768) < toInt16(-1), toUInt16(32768) <= toInt16(-1), toUInt16(32768) > toInt16(-1), toUInt16(32768) >= toInt16(-1) , toInt16(-1) = toUInt32(32768), toInt16(-1) != toUInt32(32768), toInt16(-1) < toUInt32(32768), toInt16(-1) <= toUInt32(32768), toInt16(-1) > toUInt32(32768), toInt16(-1) >= toUInt32(32768), toUInt32(32768) = toInt16(-1), toUInt32(32768) != toInt16(-1), toUInt32(32768) < toInt16(-1), toUInt32(32768) <= toInt16(-1), toUInt32(32768) > toInt16(-1), toUInt32(32768) >= toInt16(-1) , toInt16(-1) = toInt32(32768), toInt16(-1) != toInt32(32768), toInt16(-1) < toInt32(32768), toInt16(-1) <= toInt32(32768), toInt16(-1) > toInt32(32768), toInt16(-1) >= toInt32(32768), toInt32(32768) = toInt16(-1), toInt32(32768) != toInt16(-1), toInt32(32768) < toInt16(-1), toInt32(32768) <= toInt16(-1), toInt32(32768) > toInt16(-1), toInt32(32768) >= toInt16(-1) , toInt16(-1) = toUInt64(32768), toInt16(-1) != toUInt64(32768), toInt16(-1) < toUInt64(32768), toInt16(-1) <= toUInt64(32768), toInt16(-1) > toUInt64(32768), toInt16(-1) >= toUInt64(32768), toUInt64(32768) = toInt16(-1), toUInt64(32768) != toInt16(-1), toUInt64(32768) < toInt16(-1), toUInt64(32768) <= toInt16(-1), toUInt64(32768) > toInt16(-1), toUInt64(32768) >= toInt16(-1) , toInt16(-1) = toInt64(32768), toInt16(-1) != toInt64(32768), toInt16(-1) < toInt64(32768), toInt16(-1) <= toInt64(32768), toInt16(-1) > toInt64(32768), toInt16(-1) >= toInt64(32768), toInt64(32768) = toInt16(-1), toInt64(32768) != toInt16(-1), toInt64(32768) < toInt16(-1), toInt64(32768) <= toInt16(-1), toInt64(32768) > toInt16(-1), toInt64(32768) >= toInt16(-1) , toInt32(-1) = toUInt16(32768), toInt32(-1) != toUInt16(32768), toInt32(-1) < toUInt16(32768), toInt32(-1) <= toUInt16(32768), toInt32(-1) > toUInt16(32768), toInt32(-1) >= toUInt16(32768), toUInt16(32768) = toInt32(-1), toUInt16(32768) != toInt32(-1), toUInt16(32768) < toInt32(-1), toUInt16(32768) <= toInt32(-1), toUInt16(32768) > toInt32(-1), toUInt16(32768) >= toInt32(-1) , toInt32(-1) = toUInt32(32768), toInt32(-1) != toUInt32(32768), toInt32(-1) < toUInt32(32768), toInt32(-1) <= toUInt32(32768), toInt32(-1) > toUInt32(32768), toInt32(-1) >= toUInt32(32768), toUInt32(32768) = toInt32(-1), toUInt32(32768) != toInt32(-1), toUInt32(32768) < toInt32(-1), toUInt32(32768) <= toInt32(-1), toUInt32(32768) > toInt32(-1), toUInt32(32768) >= toInt32(-1) , toInt32(-1) = toInt32(32768), toInt32(-1) != toInt32(32768), toInt32(-1) < toInt32(32768), toInt32(-1) <= toInt32(32768), toInt32(-1) > toInt32(32768), toInt32(-1) >= toInt32(32768), toInt32(32768) = toInt32(-1), toInt32(32768) != toInt32(-1), toInt32(32768) < toInt32(-1), toInt32(32768) <= toInt32(-1), toInt32(32768) > toInt32(-1), toInt32(32768) >= toInt32(-1) , toInt32(-1) = toUInt64(32768), toInt32(-1) != toUInt64(32768), toInt32(-1) < toUInt64(32768), toInt32(-1) <= toUInt64(32768), toInt32(-1) > toUInt64(32768), toInt32(-1) >= toUInt64(32768), toUInt64(32768) = toInt32(-1), toUInt64(32768) != toInt32(-1), toUInt64(32768) < toInt32(-1), toUInt64(32768) <= toInt32(-1), toUInt64(32768) > toInt32(-1), toUInt64(32768) >= toInt32(-1) , toInt32(-1) = toInt64(32768), toInt32(-1) != toInt64(32768), toInt32(-1) < toInt64(32768), toInt32(-1) <= toInt64(32768), toInt32(-1) > toInt64(32768), toInt32(-1) >= toInt64(32768), toInt64(32768) = toInt32(-1), toInt64(32768) != toInt32(-1), toInt64(32768) < toInt32(-1), toInt64(32768) <= toInt32(-1), toInt64(32768) > toInt32(-1), toInt64(32768) >= toInt32(-1) , toInt64(-1) = toUInt16(32768), toInt64(-1) != toUInt16(32768), toInt64(-1) < toUInt16(32768), toInt64(-1) <= toUInt16(32768), toInt64(-1) > toUInt16(32768), toInt64(-1) >= toUInt16(32768), toUInt16(32768) = toInt64(-1), toUInt16(32768) != toInt64(-1), toUInt16(32768) < toInt64(-1), toUInt16(32768) <= toInt64(-1), toUInt16(32768) > toInt64(-1), toUInt16(32768) >= toInt64(-1) , toInt64(-1) = toUInt32(32768), toInt64(-1) != toUInt32(32768), toInt64(-1) < toUInt32(32768), toInt64(-1) <= toUInt32(32768), toInt64(-1) > toUInt32(32768), toInt64(-1) >= toUInt32(32768), toUInt32(32768) = toInt64(-1), toUInt32(32768) != toInt64(-1), toUInt32(32768) < toInt64(-1), toUInt32(32768) <= toInt64(-1), toUInt32(32768) > toInt64(-1), toUInt32(32768) >= toInt64(-1) , toInt64(-1) = toInt32(32768), toInt64(-1) != toInt32(32768), toInt64(-1) < toInt32(32768), toInt64(-1) <= toInt32(32768), toInt64(-1) > toInt32(32768), toInt64(-1) >= toInt32(32768), toInt32(32768) = toInt64(-1), toInt32(32768) != toInt64(-1), toInt32(32768) < toInt64(-1), toInt32(32768) <= toInt64(-1), toInt32(32768) > toInt64(-1), toInt32(32768) >= toInt64(-1) , toInt64(-1) = toUInt64(32768), toInt64(-1) != toUInt64(32768), toInt64(-1) < toUInt64(32768), toInt64(-1) <= toUInt64(32768), toInt64(-1) > toUInt64(32768), toInt64(-1) >= toUInt64(32768), toUInt64(32768) = toInt64(-1), toUInt64(32768) != toInt64(-1), toUInt64(32768) < toInt64(-1), toUInt64(32768) <= toInt64(-1), toUInt64(32768) > toInt64(-1), toUInt64(32768) >= toInt64(-1) , toInt64(-1) = toInt64(32768), toInt64(-1) != toInt64(32768), toInt64(-1) < toInt64(32768), toInt64(-1) <= toInt64(32768), toInt64(-1) > toInt64(32768), toInt64(-1) >= toInt64(32768), toInt64(32768) = toInt64(-1), toInt64(32768) != toInt64(-1), toInt64(32768) < toInt64(-1), toInt64(32768) <= toInt64(-1), toInt64(32768) > toInt64(-1), toInt64(32768) >= toInt64(-1) 
SELECT domainRFC('[20[01:db]8::1]:80') FORMAT CSV;
CREATE DATABASE IF NOT EXISTS test_qeu3ztp8 
insert into ordinary_distinct select distinct * from distinct_cardinality_low where low > 0 settings optimize_distinct_in_order=0;
SELECT 1 FROM `test_98lyhnbc`.`nested` WITH ROLLUP ORDER BY max(_CAST(NULL, 'Nullable(UInt8)') AS `_subquery82`) ASC
SELECT count() FROM t_cnf_fuzz WHERE (c7 AND (NOT c0) AND (NOT c7) AND (NOT c2) AND (NOT c1)) OR ((NOT c2)) OR (c3 AND c8 AND (NOT c0) AND c7) SETTINGS convert_query_to_cnf = 0
SELECT multiIf((number % 2) = 0, [toUInt16(1), toUInt16(2)], (number % 3) = 0, [toFloat32(2), toFloat32(3)], [toFloat64(3), toFloat64(3)]) FROM system.numbers LIMIT 10;
 SELECT sipHash64(9, groupArray((name, type))) FROM (SELECT name, type FROM system.columns WHERE database = 'system' AND table = 'processors_profile_log' ORDER BY position) 
INSERT INTO values_template_nullable VALUES 
DROP DATABASE IF EXISTS test_o9183fjg 
SELECT FROM_UNIXTIME(toDateTime('2018-01-02 22:33:44'), '%e'), FROM_UNIXTIME(toDate32('2018-01-02'), '%e');
SELECT 'Without merge';
SELECT arraySort(bitmapToArray(groupBitmapAndState(z))) FROM bitmap_column_expr_test2 WHERE like(tag_id, 'tag%');
DESC file('/var/lib/clickhouse/user_files/02661_read_from_archive_test_y9jm4uu0_7z_archive3.7z :: 02661_read_from_archive_test_y9jm4uu0_7z_data*.csv')
SELECT * FROM wrong_metadata ORDER by a1 FORMAT JSONEachRow
SELECT first_value_respect_nulls(-1);
CREATE DATABASE IF NOT EXISTS test_xjory5vm 
alter table many_mutations delete where y = 577 * 2 settings mutations_sync = 0;
select b from (select b from wt order by a limit 3 with ties) order by b;
INSERT INTO test_01193_18429.table_6_273 VALUES 
DROP DATABASE IF EXISTS test_za5ntio1 
insert into data select * from file('a.csv', 'CSV', 'c1 UInt8, c2 UInt8');
DROP DATABASE IF EXISTS test_g36lviqh 
CREATE TABLE test_01193_18429.table_1_743 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE DATABASE IF NOT EXISTS test_ch4yuscu 
INSERT INTO test_02428_Catalog VALUES 
CREATE TABLE test_01193_18429.table_3_130 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE ROW POLICY p2_01295 ON db.table USING id=currentUser() AS RESTRICTIVE;
SELECT 'Running test stateless/02403_arrow_large_string.sh from pid=1715' 
SELECT number AS id, toString(number) AS s, range(number) AS arr FROM numbers(10) FORMAT Native
INSERT INTO test_01193_18429.table_8_159 VALUES 
DROP DATABASE IF EXISTS 01681_database_for_cache_dictionary;
DETACH TABLE summing_r2;
SELECT CASE WHEN 1 THEN col2 WHEN (col1 % 3) = 0 THEN toFixedString(col3, 16) ELSE col4 END FROM multi_if_check;
drop database shard_1;
INSERT INTO test (x, y) VALUES 
CREATE TABLE vertical_00682 (`k` UInt32, `v` UInt32) ENGINE = MergeTree ORDER BY k SETTINGS enable_vertical_merge_algorithm = 1, remove_empty_parts = 0, vertical_merge_algorithm_min_rows_to_activate = 0, vertical_merge_algorithm_min_columns_to_activate = 0, index_granularity = 43905, min_bytes_for_wide_part = 650154211, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 4438, prefer_fetch_merged_part_size_threshold = 6077919811, min_merge_bytes_to_use_direct_io = 5877401500, index_granularity_bytes = 6089721, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 26016, primary_key_compress_block_size = 53861
DESC TABLE system.numbers
DROP DATABASE IF EXISTS test_ob4uf9bh 
 CREATE TABLE test_lazy_01294_concurrent_test_qna5lrny.log (a UInt64, b UInt64) ENGINE = Log; 
EXPLAIN SYNTAX SELECT * FROM t1_00826 cross join t2_00826 where t1_00826.a + 1 = t2_00826.a + t2_00826.b AND (t1_00826.a + t1_00826.b + t2_00826.a + t2_00826.b > 5);
CREATE TABLE test_61684F593D2E3C65633D552F5D576D3D4F3F476E404F61583A5B4B7C567557387452456C7C7D2F24(x UInt8) Engine=Memory;
SELECT avgWeighted(x, w) FROM values('x UInt16, w UInt64', (0, 0), (1, 0));
DROP TABLE IF EXISTS test_exception_replicated SYNC
drop table set;
CREATE TABLE test_337B3A266F46512F22636D59524C6A2E6C4033214754222D4D7A7960313D70634A3B2B4A56213677(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_8_923 VALUES 
SELECT * FROM block_dedup_token ORDER BY id;
CREATE TABLE test_01193_18429.table_2_953 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT IPv6CIDRToRange(NULL, NULL);
SELECT * FROM versioned_collapsing_merge_tree;
select 11 as p, geohashEncode(longitude, latitude, p) as actual, if(actual = encoded, 'Ok', concat('expected: ', encoded)) from geohash_test_data WHERE length(encoded) = p;
DROP DATABASE IF EXISTS test_334kfivg 
SELECT pointInPolygon((5.5, 1.5), [(0., 0.), (7., 0.), (7., 3.), (0., 3.)], [(1., 1.), (2., 1.), (2., 2.), (1., 2.)], [(3., 1.), (4., 1.), (4., 2.), (3., 2.)], [(5., 1.), (6., 1.), (6., 2.), (5., 2.)]);
EXPLAIN QUERY TREE run_passes = 1 SELECT number > 5 ? 'censor.net' : 'google' as value, value FROM system.numbers LIMIT 10;
SELECT groupArraySorted(3)(a) FROM test;
INSERT INTO test_01193_18429.table_3_838 VALUES 
SELECT 'Running test stateless/02534_s3_cluster_insert_select_schema_inference.sql from pid=1726' 
CREATE TABLE test_01193_18429.table_7_523 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_8_430 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_6_100 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE anova (left Float64, right UInt64) ENGINE = Memory;
SELECT count() FROM table_rename_with_ttl;
SELECT count(*) FROM system.session_log WHERE user IN ('02833_HTTP_USER_25955') AND interface = 'HTTP'
CREATE TABLE test_342F41423B53464C50624E4E3E5E442F263140263874223E5A5842214765565D7C7E40487D60287D(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02319_lightweight_delete_on_merge_tree.sql from pid=1724' 
select tuple(number, toNullable(number)) = tuple(toNullable(number), toNullable(number)) from numbers(1);
SELECT multiIf(1, toFixedString(col2, 16), (col1 % 3) = 0, 'bar', toFixedString(col4, 16)) FROM multi_if_check;
SELECT mapPopulateSeries(map(toUInt64(18446744073709551615), toUInt64(5)), 18446744073709551615);
select count() from nv_regular_mt_table;
SELECT DISTINCT t1.id FROM t1 INNER ANY JOIN t2 ON t1.id == t2.id AND toLowCardinality(t2.key2 != '');
CREATE TABLE event_types (`type` String, `active` Int16) ENGINE = MergeTree PARTITION BY substring(type, 1, 1) ORDER BY (type, active) SETTINGS index_granularity = 6663, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.36088624596595764, replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 7604, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 45, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 2637483, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 69330, primary_key_compress_block_size = 68167
DROP DATABASE IF EXISTS db1_02703;
CREATE TABLE test_7147622E305F477A336D265E362C643976714B23622B5E603D526B4A4766275C3E4A70385B6A226C(x UInt8) Engine=Memory;
DROP TABLE lwd_test;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt16(1), toUInt16(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toInt16(3), toInt16(3)] END FROM system.numbers LIMIT 10;
ALTER TABLE concurrent_alter_column ADD COLUMN c404 DOUBLE;
INSERT INTO test_01193_18429.table_8_714 VALUES 
SELECT '99' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ffff:ffff:ffff:c000')))
CREATE TABLE test_01193_18429.table_7_475 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP DATABASE IF EXISTS test_owrudppz 
SELECT a.pk, b.pk, a.dt, b.dt, toTypeName(a.pk), toTypeName(b.pk), toTypeName(materialize(a.dt)), toTypeName(materialize(b.dt)) FROM (SELECT toUInt8(number) > 0 as pk, toUInt8(number) as dt FROM numbers(3)) a ASOF LEFT JOIN (SELECT 1 as pk, 2 as dt) b USING(pk, dt) ORDER BY a.dt;
select 1 = multiMatchAny(materialize('ldrzgttlqaphekkkdukgngl'), materialize(['gttlqaphekkkdukgn', 'ekkkd', 'gttlqaphe', 'qaphek', 'h', 'kdu', 'he', 'phek', '', 'drzgttlqaphekkkd'])) from system.numbers limit 10;
SELECT -2147483647, -9223372036854775807, -2147483647 = -9223372036854775807, -2147483647 != -9223372036854775807, -2147483647 < -9223372036854775807, -2147483647 <= -9223372036854775807, -2147483647 > -9223372036854775807, -2147483647 >= -9223372036854775807, -9223372036854775807 = -2147483647, -9223372036854775807 != -2147483647, -9223372036854775807 < -2147483647, -9223372036854775807 <= -2147483647, -9223372036854775807 > -2147483647, -9223372036854775807 >= -2147483647 , toInt32(-2147483647) = toInt64(-9223372036854775807), toInt32(-2147483647) != toInt64(-9223372036854775807), toInt32(-2147483647) < toInt64(-9223372036854775807), toInt32(-2147483647) <= toInt64(-9223372036854775807), toInt32(-2147483647) > toInt64(-9223372036854775807), toInt32(-2147483647) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toInt32(-2147483647), toInt64(-9223372036854775807) != toInt32(-2147483647), toInt64(-9223372036854775807) < toInt32(-2147483647), toInt64(-9223372036854775807) <= toInt32(-2147483647), toInt64(-9223372036854775807) > toInt32(-2147483647), toInt64(-9223372036854775807) >= toInt32(-2147483647) , toInt64(-2147483647) = toInt64(-9223372036854775807), toInt64(-2147483647) != toInt64(-9223372036854775807), toInt64(-2147483647) < toInt64(-9223372036854775807), toInt64(-2147483647) <= toInt64(-9223372036854775807), toInt64(-2147483647) > toInt64(-9223372036854775807), toInt64(-2147483647) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toInt64(-2147483647), toInt64(-9223372036854775807) != toInt64(-2147483647), toInt64(-9223372036854775807) < toInt64(-2147483647), toInt64(-9223372036854775807) <= toInt64(-2147483647), toInt64(-9223372036854775807) > toInt64(-2147483647), toInt64(-9223372036854775807) >= toInt64(-2147483647) 
INSERT INTO r4 SELECT 82
CREATE DATABASE IF NOT EXISTS test_o14xuckf 
SELECT col1 FROM test1_00395 WHERE col1 IS NULL;
create table funnel_test (timestamp UInt32, event UInt32) engine=Memory;
CREATE TABLE test_02908_r2_162 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_162', 'r2') ORDER BY tuple()
CREATE TABLE test_7C4F62274651493437513B697B664E4721667C664777624E7864727456284B4D6D57342D327C2452(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_6_582 VALUES 
CREATE TABLE test_252D2F23414B5B24553F3032234C3D4C50672A34385E5A7E4427735069706C53707B20214F344839(x UInt8) Engine=Memory;
EXPLAIN PIPELINE SELECT a, e FROM t_fixed_prefix WHERE bitNot(a) = 1 AND bitNot(b) = 1 ORDER BY a, e SETTINGS optimize_read_in_order = 1
SELECT 'Running test stateless/01079_reinterpret_as_fixed_string.sql from pid=1722' 
CREATE DATABASE test_hllqnldx ENGINE = Memory
SELECT CASE WHEN 1 THEN col2 WHEN 1 THEN 'bar' ELSE toFixedString('baz', 16) END FROM multi_if_check;
CREATE TABLE test_01193_18429.table_8_24 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
alter table alter_ttl modify column s String ttl d + interval 1 day;
DROP DATABASE IF EXISTS test_ynokrz9z 
CREATE TABLE test_01193_18429.table_7_746 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_02908_r1_147 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_147', 'r1') ORDER BY tuple()
SELECT 'Running test stateless/02524_fuzz_and_fuss.sql from pid=1722' 
CREATE TABLE test_396263533D5A2931765A5C67323B50316F384B6C6E7954586D777434616A277C315950687A354563(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_t14s1esx 
SELECT number, anyIf('Hello', arrayJoin([1, NULL]) = 0) FROM numbers(2) GROUP BY number ORDER BY number;
SELECT multiIf((col1 % 2) = 0, ['foo', 'bar'], (col1 % 3) = 0, ['foo', col5], ['foo', 'bar']) FROM multi_if_check;
SELECT reverse([[[[]]]]);
CREATE TABLE t2 (`id1` UInt32, `id2` UInt32) ENGINE = MergeTree ORDER BY id1 SETTINGS index_granularity = 1, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 10759, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 602171, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 8981785645, index_granularity_bytes = 23719529, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 69804, primary_key_compress_block_size = 27492
select * from test order by uid;
DROP DATABASE IF EXISTS test_ogkb7p2h 
CREATE TABLE test_low_null_float (a LowCardinality(Nullable(Float64))) ENGINE = Memory;
SELECT count() == 1 FROM null_in WHERE i global in test_set;
select 2 = position('abcdefgh', materialize('bcd'));
SELECT partition, name FROM system.parts WHERE database = currentDatabase() AND table = 'not_partitioned_replica1_00502' AND active ORDER BY name;
CREATE TABLE test_01193_18429.table_5_808 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE DATABASE IF NOT EXISTS test_iv1ncgr5 
DROP DATABASE IF EXISTS test_u6vwgbhv 
SELECT scalarProduct([12, 2.22, 302], [1.32, 231.2, 11.1]);
SELECT CAST('hello' AS FixedString(5)) LIKE '%hello%';
CREATE TABLE test_01193_18429.table_7_765 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_37wr0kd3.async_inserts SETTINGS format_custom_escaping_rule = 'CSV', format_custom_field_delimiter = ',' FORMAT CustomSeparatedWithNames
select toDate32('1990-02-01') = toDateTime('1990-02-01');
SELECT coalesce([]);
INSERT INTO test_parallel_parsing_02099 FORMAT TSVRaw
DROP TABLE sum_map;
CREATE TABLE test_01193_18429.table_9_332 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select 3 = position('c' in 'abc');
SELECT 'ALL INNER USING | bs = 9';
select 'dictGet', 'test_01037.dict_tuple' as dict_name, tuple(x, y) as key, dictGet(dict_name, 'name', key), dictGet(dict_name, 'value', key) from test_01037.points order by x, y;
SELECT length(groupUniqArray(10)(v)) FROM group_uniq_arr_int GROUP BY id ORDER BY id;
CREATE TABLE test_3238744A6069205F5B6F7A7B3D496C254520684F3652524E374A6372287745674621764668623E5F(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02911_analyzer_remove_unused_projection_columns.sql from pid=1722' 
CREATE TABLE test_01193_18429.table_2_764 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT arrayEnumerateUniq( [1,2,1], ['a','b','c']);
alter table many_mutations delete where y = 407 * 2 settings mutations_sync = 0;
INSERT INTO r7 SELECT 13
CREATE TABLE test_5D49467C7870564F7E505D6A73663A5A344178535059603141372A4F2C355A2C4F3C4F4C616D4747(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_5_534 VALUES 
DROP TABLE IF EXISTS r_no_prop_table;
CREATE TABLE test_4D256826467C3D6A326C286B5B382126407E4E6963507278283C70735E50497B5D7C7676387A427B(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_9_317 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_3_936 VALUES 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (16 < 4 AND 69 > 0 ? 16 : 0)), throwIf(last != (16 < 4 AND 69 > 0 ? least(4 - 1, 16 + 69 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(4) LIMIT 16, 69);
SELECT * FROM test_table_select ORDER BY word
SELECT materialize([13, 14])[-9223372036854775808];
desc file(dump4.sql, MySQLDump) settings input_format_mysql_dump_table_name='test 3'
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (75 < 73 AND 24 > 0 ? 75 : 0)), throwIf(last != (75 < 73 AND 24 > 0 ? least(73 - 1, 75 + 24 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(73) LIMIT 75, 24);
SELECT rdb.key % 2, sum(k), max(value2) FROM t2 INNER JOIN rdb ON rdb.key == t2.k GROUP BY (rdb.key % 2) WITH TOTALS;
CREATE TABLE test_7139607E665C2376577B676D4625535A2243727D483B2372693D3A643A41407D423B3D43782D5F46(x UInt8) Engine=Memory;
CREATE TABLE local_01099_b (`number` UInt64) ENGINE = MergeTree ORDER BY number SETTINGS index_granularity = 12001, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 1, merge_max_block_size = 11467, prefer_fetch_merged_part_size_threshold = 2163765521, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 6573540, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 41915, primary_key_compress_block_size = 46800
DROP DATABASE IF EXISTS test_uoxefeia 
DROP DATABASE IF EXISTS test_45po49my 
CREATE TABLE t_sparse_pk (`k` UInt64, `v` UInt64 CODEC(NONE)) ENGINE = MergeTree ORDER BY k SETTINGS ratio_of_defaults_for_sparse_serialization = 0., index_granularity = 30, min_bytes_for_wide_part = 56737343, replace_long_file_name_to_hash = false, max_file_name_length = 94, merge_max_block_size = 18779, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 719100, vertical_merge_algorithm_min_columns_to_activate = 95, min_merge_bytes_to_use_direct_io = 7638525110, index_granularity_bytes = 12012354, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 24627, primary_key_compress_block_size = 66368
SELECT data.key, data.out.type, data.out.value, data.out.outputs.index, data.out.outputs.n FROM t_json_6 ORDER BY data.key
CREATE DICTIONARY `01945.db`.test_dictionary ( id UInt64, value String ) PRIMARY KEY id LAYOUT(DIRECT()) SOURCE(CLICKHOUSE(DB '01945.db' TABLE 'test_dictionary_values'));
SELECT splitByAlpha('ab.cd.ef.gh') SETTINGS splitby_max_substrings_includes_remaining_string = 1;
select toDate32('1925-02-01') = toDateTime64('1925-02-01',2);
SELECT 'Running test stateless/00072_in_types.sql from pid=1718' 
SELECT 'Hello' LIKE '%_%';
CREATE DATABASE IF NOT EXISTS test_l1bkymw4 
CREATE TABLE null_00699 (`x` UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 60421, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 32, merge_max_block_size = 12059, prefer_fetch_merged_part_size_threshold = 4944341613, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1146874173, index_granularity_bytes = 5733115, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 88780, primary_key_compress_block_size = 95335
create table `table_00483` (date Date, `Struct.Key1` Array(UInt64), `Struct.Key2` Array(UInt64), padding FixedString(16), x UInt64) engine = MergeTree(date, (date), 8);
select cutToFirstSignificantSubdomainCustomRFC('bar.foo.there-is-no-such-domain', 'public_suffix_list');
SELECT materialize(toUInt16(0)) AS x, toInt32(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
select 'commit', arraySort(groupArray(n)) from (select n from mt1 union all select * from mt2);
SELECT a, b, t_ab2.a, t_ab2.b FROM t_ab1 LEFT JOIN t_ab2 ON (t_ab1.a == t_ab2.a AND t_ab1.b == t_ab2.b) ORDER BY ifNull(t_ab1.id, t_ab2.id);
CREATE TABLE test_52544A36602E4F6C414B2F40296A6E64623736325F4E734C252A7B3D5E5275642433234377577946(x UInt8) Engine=Memory;
SELECT arrayFirstIndex(x -> materialize(0), emptyArrayString());
(SELECT 2) UNION ALL (SELECT 2);
CREATE TABLE test_00563 ( dt Date, site_id Int32, site_key String ) ENGINE = MergeTree(dt, (site_id, site_key, dt), 8192);
CREATE TABLE IF NOT EXISTS t1 (`x` UInt64, `s` Array(Nullable(String))) ENGINE = ReplicatedMergeTree('/clickhouse/tables/01671_ddl_hang_timeout_long_test_990cm9di/test_01671', 'r_3') ORDER BY x SETTINGS index_granularity = 37030, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.5196054577827454, replace_long_file_name_to_hash = true, max_file_name_length = 103, merge_max_block_size = 10529, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 94, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 3620834, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 80095, primary_key_compress_block_size = 38829
CREATE TABLE tab ( id UInt64, tup Tuple(UInt64, UInt64) SETTINGS (min_compress_block_size = 81920, max_compress_block_size = 163840), json JSON SETTINGS (min_compress_block_size = 81920, max_compress_block_size = 163840), ) ENGINE = MergeTree ORDER BY id SETTINGS min_bytes_for_wide_part = 1;
CREATE TABLE test_01193_18429.table_5_243 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE shard1 (`id` Int32) ENGINE = MergeTree ORDER BY cityHash64(id) SETTINGS index_granularity = 17709, min_bytes_for_wide_part = 911265414, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 118, merge_max_block_size = 21853, prefer_fetch_merged_part_size_threshold = 4651377202, vertical_merge_algorithm_min_rows_to_activate = 200955, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 3148621, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 59876, primary_key_compress_block_size = 22272
select parseDateTime('58', '%s', 'UTC') = toDateTime('1970-01-01 00:00:58', 'UTC');
SELECT * FROM clear_column ORDER BY x;
SELECT dictGetOrDefault('01685_database_for_cache_dictionary.cache_dictionary_complex_key_complex_attributes', 'value_first', (number, concat('id_key_', toString(number))), toString('default')) as value_first, dictGetOrDefault('01685_database_for_cache_dictionary.cache_dictionary_complex_key_complex_attributes', 'value_second', (number, concat('id_key_', toString(number))), toString('default')) as value_second FROM system.numbers LIMIT 4;
CREATE DATABASE IF NOT EXISTS test_jqz3l8ig 
SHOW CREATE TABLE minmax_idx2;
SELECT 'Running test stateless/02029_orc_low_cardinality.sh from pid=1726' 
SELECT f + 1 > f, f + 10 > f, 1 + f > f, 10 + f > f FROM decimal WHERE f > 0;
INSERT INTO r8 SELECT 62 % 10 = 8 ? 62 - 1 : 62
SELECT wordShingleSimHashCaseInsensitive(NULL, NULL, NULL);
CREATE TABLE test_01193_18429.table_3_410 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_3C5A232B2B7C376A345441757D61747E3C43796F557667215F6F2F554C78503C7C752B55783E686F(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS tDD;
CREATE TABLE test_2C49317B327473235320512C263361287A4343387427212B423E5F3A2B27286B646C745933293A68(x UInt8) Engine=Memory;
select count() from system.schema_inference_cache where countSubstrings(source, '02404_data.JSONCompactEachRow') > 0;
CREATE TABLE dictionary_source_en ( id UInt64, value String ) ENGINE = TinyLog;
INSERT INTO test_01193_18429.table_5_960 VALUES 
CREATE TABLE test_01193_18429.table_6_793 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT toInt128(0), bitPositionsToArray(toInt128(0));
CREATE TABLE test_01193_18429.table_5_736 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_10_511 VALUES 
SELECT floor(big_size / small_size) AS ratio FROM (SELECT 1 AS key, sum(bytes_on_disk) AS small_size FROM system.parts WHERE database == currentDatabase() and table == 'delta_codec_synthetic' and active) INNER JOIN (SELECT 1 AS key, sum(bytes_on_disk) as big_size FROM system.parts WHERE database == currentDatabase() and table == 'default_codec_synthetic' and active) USING(key);
SELECT number % 2 ? ['Hello', 'World'] : ['abc'] FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_dnuw5fd5 
SELECT toUInt32(x), y, z FROM pk WHERE (x BETWEEN toDateTime(60) AND toDateTime(119)) AND y = 11;
SELECT arrayReverse([]);
INSERT INTO union_bug VALUES 
INSERT INTO test_01193_18429.table_1_651 VALUES 
CREATE TABLE IF NOT EXISTS test_01444.t31578 (`x` UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 49736, min_bytes_for_wide_part = 645103364, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 6, merge_max_block_size = 15200, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 21360504, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75390, primary_key_compress_block_size = 98921
attach table foo;
SELECT 2 NOT BETWEEN 2 + 1 AND 4 - 1;
CREATE TABLE test_6C443E223850622F592763742B39323B4A31777E446E476848563673442E5478656C27554322627E(x UInt8) Engine=Memory;
CREATE TABLE test_2B4039387B504C6449285D317E425B533B643D40227D6F465C687B7C344F5D666D276F5B3546675C(x UInt8) Engine=Memory;
CREATE TABLE test_2C203879207E44634623704C52726F6D534D627337307B3B5E5E624979335B4D483622626F266569(x UInt8) Engine=Memory;
INSERT INTO r10 SELECT 88
alter table many_mutations delete where y = 464 * 2 settings mutations_sync = 0;
CREATE TABLE test_01193_18429.table_3_789 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO r4 SELECT 47
DROP TABLE IF EXISTS stripe2;
SELECT number, anyIf(toNullable('Hello'), arrayJoin([1, NULL]) = 0) FROM numbers(2) GROUP BY number ORDER BY number;
select array, struct.d1, struct.a1, struct.a2, struct.a3, struct.a4, struct.a5, struct.a6 from aliases_test array join struct.a5;
CREATE TABLE test_01193_18429.table_7_830 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select concat(materialize(toFixedString('a', 1)), materialize(toFixedString('b', 1)), toFixedString('c', 1)) == 'abc';
SELECT 'Running test stateless/01048_window_view_parser.sql from pid=1705' 
SELECT a, b, e FROM t_fixed_prefix ORDER BY a, b, e SETTINGS optimize_read_in_order = 1
CREATE TABLE default_codec_float ( id Float64 Codec(LZ4HC) ) ENGINE MergeTree() ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0, compress_marks = false, compress_primary_key = false, ratio_of_defaults_for_sparse_serialization = 1;
CREATE TABLE test_6446785F574265413039407D5A736D5C4A54472F4B456C59217143403A2777424633756F646A6338(x UInt8) Engine=Memory;
SELECT count(), minMerge(stringMin), maxMerge(stringMax), floor(minMerge(float64Min),5), floor(maxMerge(float64Max),5), floor(avgMerge(float64Avg),5), floor(sumMerge(float64Sum),5), floor(minMerge(float32Min),5), floor(maxMerge(float32Max),5), floor(avgMerge(float32Avg),5), floor(sumMerge(float32Sum),5), minMerge(decimal325Min), maxMerge(decimal325Max), avgMerge(decimal325Avg), sumMerge(decimal325Sum), minMerge(dateMin), maxMerge(dateMax), minMerge(datetimeMin), maxMerge(datetimeMax), minMerge(datetime64Min), maxMerge(datetime64Max), minMerge(int64Min), maxMerge(int64Max), avgMerge(int64Avg), sumMerge(int64Sum), minMerge(int32Min), maxMerge(int32Max), avgMerge(int32Avg), sumMerge(int32Sum), minMerge(int16Min), maxMerge(int16Max), avgMerge(int16Avg), sumMerge(int16Sum), minMerge(int8Min), maxMerge(int8Max), avgMerge(int8Avg), sumMerge(int8Sum) FROM testNullableStatesAgg WHERE id = '-22';
CREATE TABLE test_4F5D5D5D3030644E45772647266D2F793B5F296C4A7C2E426731482B336F37735D3D6C7062205164(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_10_571 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_8_502 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select 1 union all select 1 intersect select 1;
CREATE DICTIONARY db_01526.dict1 (`key_column` UInt64 DEFAULT 0, `second_column` UInt64 DEFAULT 0, `third_column` String DEFAULT 'qqq') PRIMARY KEY key_column, second_column SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict1' PASSWORD '[HIDDEN]' DB 'db_01526')) LAYOUT(COMPLEX_KEY_DIRECT())
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (91 < 88 AND 61 > 0 ? 91 : 0)), throwIf(last != (91 < 88 AND 61 > 0 ? least(88 - 1, 91 + 61 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(88) LIMIT 91, 61);
SELECT curdate();
SELECT * FROM a INNER JOIN b USING(key) GROUP BY ID, key;
SELECT 0, 32769, 0 = 32769, 0 != 32769, 0 < 32769, 0 <= 32769, 0 > 32769, 0 >= 32769, 32769 = 0, 32769 != 0, 32769 < 0, 32769 <= 0, 32769 > 0, 32769 >= 0 , toUInt8(0) = toUInt16(32769), toUInt8(0) != toUInt16(32769), toUInt8(0) < toUInt16(32769), toUInt8(0) <= toUInt16(32769), toUInt8(0) > toUInt16(32769), toUInt8(0) >= toUInt16(32769), toUInt16(32769) = toUInt8(0), toUInt16(32769) != toUInt8(0), toUInt16(32769) < toUInt8(0), toUInt16(32769) <= toUInt8(0), toUInt16(32769) > toUInt8(0), toUInt16(32769) >= toUInt8(0) , toUInt8(0) = toUInt32(32769), toUInt8(0) != toUInt32(32769), toUInt8(0) < toUInt32(32769), toUInt8(0) <= toUInt32(32769), toUInt8(0) > toUInt32(32769), toUInt8(0) >= toUInt32(32769), toUInt32(32769) = toUInt8(0), toUInt32(32769) != toUInt8(0), toUInt32(32769) < toUInt8(0), toUInt32(32769) <= toUInt8(0), toUInt32(32769) > toUInt8(0), toUInt32(32769) >= toUInt8(0) , toUInt8(0) = toInt32(32769), toUInt8(0) != toInt32(32769), toUInt8(0) < toInt32(32769), toUInt8(0) <= toInt32(32769), toUInt8(0) > toInt32(32769), toUInt8(0) >= toInt32(32769), toInt32(32769) = toUInt8(0), toInt32(32769) != toUInt8(0), toInt32(32769) < toUInt8(0), toInt32(32769) <= toUInt8(0), toInt32(32769) > toUInt8(0), toInt32(32769) >= toUInt8(0) , toUInt8(0) = toUInt64(32769), toUInt8(0) != toUInt64(32769), toUInt8(0) < toUInt64(32769), toUInt8(0) <= toUInt64(32769), toUInt8(0) > toUInt64(32769), toUInt8(0) >= toUInt64(32769), toUInt64(32769) = toUInt8(0), toUInt64(32769) != toUInt8(0), toUInt64(32769) < toUInt8(0), toUInt64(32769) <= toUInt8(0), toUInt64(32769) > toUInt8(0), toUInt64(32769) >= toUInt8(0) , toUInt8(0) = toInt64(32769), toUInt8(0) != toInt64(32769), toUInt8(0) < toInt64(32769), toUInt8(0) <= toInt64(32769), toUInt8(0) > toInt64(32769), toUInt8(0) >= toInt64(32769), toInt64(32769) = toUInt8(0), toInt64(32769) != toUInt8(0), toInt64(32769) < toUInt8(0), toInt64(32769) <= toUInt8(0), toInt64(32769) > toUInt8(0), toInt64(32769) >= toUInt8(0) , toInt8(0) = toUInt16(32769), toInt8(0) != toUInt16(32769), toInt8(0) < toUInt16(32769), toInt8(0) <= toUInt16(32769), toInt8(0) > toUInt16(32769), toInt8(0) >= toUInt16(32769), toUInt16(32769) = toInt8(0), toUInt16(32769) != toInt8(0), toUInt16(32769) < toInt8(0), toUInt16(32769) <= toInt8(0), toUInt16(32769) > toInt8(0), toUInt16(32769) >= toInt8(0) , toInt8(0) = toUInt32(32769), toInt8(0) != toUInt32(32769), toInt8(0) < toUInt32(32769), toInt8(0) <= toUInt32(32769), toInt8(0) > toUInt32(32769), toInt8(0) >= toUInt32(32769), toUInt32(32769) = toInt8(0), toUInt32(32769) != toInt8(0), toUInt32(32769) < toInt8(0), toUInt32(32769) <= toInt8(0), toUInt32(32769) > toInt8(0), toUInt32(32769) >= toInt8(0) , toInt8(0) = toInt32(32769), toInt8(0) != toInt32(32769), toInt8(0) < toInt32(32769), toInt8(0) <= toInt32(32769), toInt8(0) > toInt32(32769), toInt8(0) >= toInt32(32769), toInt32(32769) = toInt8(0), toInt32(32769) != toInt8(0), toInt32(32769) < toInt8(0), toInt32(32769) <= toInt8(0), toInt32(32769) > toInt8(0), toInt32(32769) >= toInt8(0) , toInt8(0) = toUInt64(32769), toInt8(0) != toUInt64(32769), toInt8(0) < toUInt64(32769), toInt8(0) <= toUInt64(32769), toInt8(0) > toUInt64(32769), toInt8(0) >= toUInt64(32769), toUInt64(32769) = toInt8(0), toUInt64(32769) != toInt8(0), toUInt64(32769) < toInt8(0), toUInt64(32769) <= toInt8(0), toUInt64(32769) > toInt8(0), toUInt64(32769) >= toInt8(0) , toInt8(0) = toInt64(32769), toInt8(0) != toInt64(32769), toInt8(0) < toInt64(32769), toInt8(0) <= toInt64(32769), toInt8(0) > toInt64(32769), toInt8(0) >= toInt64(32769), toInt64(32769) = toInt8(0), toInt64(32769) != toInt8(0), toInt64(32769) < toInt8(0), toInt64(32769) <= toInt8(0), toInt64(32769) > toInt8(0), toInt64(32769) >= toInt8(0) , toUInt16(0) = toUInt16(32769), toUInt16(0) != toUInt16(32769), toUInt16(0) < toUInt16(32769), toUInt16(0) <= toUInt16(32769), toUInt16(0) > toUInt16(32769), toUInt16(0) >= toUInt16(32769), toUInt16(32769) = toUInt16(0), toUInt16(32769) != toUInt16(0), toUInt16(32769) < toUInt16(0), toUInt16(32769) <= toUInt16(0), toUInt16(32769) > toUInt16(0), toUInt16(32769) >= toUInt16(0) , toUInt16(0) = toUInt32(32769), toUInt16(0) != toUInt32(32769), toUInt16(0) < toUInt32(32769), toUInt16(0) <= toUInt32(32769), toUInt16(0) > toUInt32(32769), toUInt16(0) >= toUInt32(32769), toUInt32(32769) = toUInt16(0), toUInt32(32769) != toUInt16(0), toUInt32(32769) < toUInt16(0), toUInt32(32769) <= toUInt16(0), toUInt32(32769) > toUInt16(0), toUInt32(32769) >= toUInt16(0) , toUInt16(0) = toInt32(32769), toUInt16(0) != toInt32(32769), toUInt16(0) < toInt32(32769), toUInt16(0) <= toInt32(32769), toUInt16(0) > toInt32(32769), toUInt16(0) >= toInt32(32769), toInt32(32769) = toUInt16(0), toInt32(32769) != toUInt16(0), toInt32(32769) < toUInt16(0), toInt32(32769) <= toUInt16(0), toInt32(32769) > toUInt16(0), toInt32(32769) >= toUInt16(0) , toUInt16(0) = toUInt64(32769), toUInt16(0) != toUInt64(32769), toUInt16(0) < toUInt64(32769), toUInt16(0) <= toUInt64(32769), toUInt16(0) > toUInt64(32769), toUInt16(0) >= toUInt64(32769), toUInt64(32769) = toUInt16(0), toUInt64(32769) != toUInt16(0), toUInt64(32769) < toUInt16(0), toUInt64(32769) <= toUInt16(0), toUInt64(32769) > toUInt16(0), toUInt64(32769) >= toUInt16(0) , toUInt16(0) = toInt64(32769), toUInt16(0) != toInt64(32769), toUInt16(0) < toInt64(32769), toUInt16(0) <= toInt64(32769), toUInt16(0) > toInt64(32769), toUInt16(0) >= toInt64(32769), toInt64(32769) = toUInt16(0), toInt64(32769) != toUInt16(0), toInt64(32769) < toUInt16(0), toInt64(32769) <= toUInt16(0), toInt64(32769) > toUInt16(0), toInt64(32769) >= toUInt16(0) , toInt16(0) = toUInt16(32769), toInt16(0) != toUInt16(32769), toInt16(0) < toUInt16(32769), toInt16(0) <= toUInt16(32769), toInt16(0) > toUInt16(32769), toInt16(0) >= toUInt16(32769), toUInt16(32769) = toInt16(0), toUInt16(32769) != toInt16(0), toUInt16(32769) < toInt16(0), toUInt16(32769) <= toInt16(0), toUInt16(32769) > toInt16(0), toUInt16(32769) >= toInt16(0) , toInt16(0) = toUInt32(32769), toInt16(0) != toUInt32(32769), toInt16(0) < toUInt32(32769), toInt16(0) <= toUInt32(32769), toInt16(0) > toUInt32(32769), toInt16(0) >= toUInt32(32769), toUInt32(32769) = toInt16(0), toUInt32(32769) != toInt16(0), toUInt32(32769) < toInt16(0), toUInt32(32769) <= toInt16(0), toUInt32(32769) > toInt16(0), toUInt32(32769) >= toInt16(0) , toInt16(0) = toInt32(32769), toInt16(0) != toInt32(32769), toInt16(0) < toInt32(32769), toInt16(0) <= toInt32(32769), toInt16(0) > toInt32(32769), toInt16(0) >= toInt32(32769), toInt32(32769) = toInt16(0), toInt32(32769) != toInt16(0), toInt32(32769) < toInt16(0), toInt32(32769) <= toInt16(0), toInt32(32769) > toInt16(0), toInt32(32769) >= toInt16(0) , toInt16(0) = toUInt64(32769), toInt16(0) != toUInt64(32769), toInt16(0) < toUInt64(32769), toInt16(0) <= toUInt64(32769), toInt16(0) > toUInt64(32769), toInt16(0) >= toUInt64(32769), toUInt64(32769) = toInt16(0), toUInt64(32769) != toInt16(0), toUInt64(32769) < toInt16(0), toUInt64(32769) <= toInt16(0), toUInt64(32769) > toInt16(0), toUInt64(32769) >= toInt16(0) , toInt16(0) = toInt64(32769), toInt16(0) != toInt64(32769), toInt16(0) < toInt64(32769), toInt16(0) <= toInt64(32769), toInt16(0) > toInt64(32769), toInt16(0) >= toInt64(32769), toInt64(32769) = toInt16(0), toInt64(32769) != toInt16(0), toInt64(32769) < toInt16(0), toInt64(32769) <= toInt16(0), toInt64(32769) > toInt16(0), toInt64(32769) >= toInt16(0) , toUInt32(0) = toUInt16(32769), toUInt32(0) != toUInt16(32769), toUInt32(0) < toUInt16(32769), toUInt32(0) <= toUInt16(32769), toUInt32(0) > toUInt16(32769), toUInt32(0) >= toUInt16(32769), toUInt16(32769) = toUInt32(0), toUInt16(32769) != toUInt32(0), toUInt16(32769) < toUInt32(0), toUInt16(32769) <= toUInt32(0), toUInt16(32769) > toUInt32(0), toUInt16(32769) >= toUInt32(0) , toUInt32(0) = toUInt32(32769), toUInt32(0) != toUInt32(32769), toUInt32(0) < toUInt32(32769), toUInt32(0) <= toUInt32(32769), toUInt32(0) > toUInt32(32769), toUInt32(0) >= toUInt32(32769), toUInt32(32769) = toUInt32(0), toUInt32(32769) != toUInt32(0), toUInt32(32769) < toUInt32(0), toUInt32(32769) <= toUInt32(0), toUInt32(32769) > toUInt32(0), toUInt32(32769) >= toUInt32(0) , toUInt32(0) = toInt32(32769), toUInt32(0) != toInt32(32769), toUInt32(0) < toInt32(32769), toUInt32(0) <= toInt32(32769), toUInt32(0) > toInt32(32769), toUInt32(0) >= toInt32(32769), toInt32(32769) = toUInt32(0), toInt32(32769) != toUInt32(0), toInt32(32769) < toUInt32(0), toInt32(32769) <= toUInt32(0), toInt32(32769) > toUInt32(0), toInt32(32769) >= toUInt32(0) , toUInt32(0) = toUInt64(32769), toUInt32(0) != toUInt64(32769), toUInt32(0) < toUInt64(32769), toUInt32(0) <= toUInt64(32769), toUInt32(0) > toUInt64(32769), toUInt32(0) >= toUInt64(32769), toUInt64(32769) = toUInt32(0), toUInt64(32769) != toUInt32(0), toUInt64(32769) < toUInt32(0), toUInt64(32769) <= toUInt32(0), toUInt64(32769) > toUInt32(0), toUInt64(32769) >= toUInt32(0) , toUInt32(0) = toInt64(32769), toUInt32(0) != toInt64(32769), toUInt32(0) < toInt64(32769), toUInt32(0) <= toInt64(32769), toUInt32(0) > toInt64(32769), toUInt32(0) >= toInt64(32769), toInt64(32769) = toUInt32(0), toInt64(32769) != toUInt32(0), toInt64(32769) < toUInt32(0), toInt64(32769) <= toUInt32(0), toInt64(32769) > toUInt32(0), toInt64(32769) >= toUInt32(0) , toInt32(0) = toUInt16(32769), toInt32(0) != toUInt16(32769), toInt32(0) < toUInt16(32769), toInt32(0) <= toUInt16(32769), toInt32(0) > toUInt16(32769), toInt32(0) >= toUInt16(32769), toUInt16(32769) = toInt32(0), toUInt16(32769) != toInt32(0), toUInt16(32769) < toInt32(0), toUInt16(32769) <= toInt32(0), toUInt16(32769) > toInt32(0), toUInt16(32769) >= toInt32(0) , toInt32(0) = toUInt32(32769), toInt32(0) != toUInt32(32769), toInt32(0) < toUInt32(32769), toInt32(0) <= toUInt32(32769), toInt32(0) > toUInt32(32769), toInt32(0) >= toUInt32(32769), toUInt32(32769) = toInt32(0), toUInt32(32769) != toInt32(0), toUInt32(32769) < toInt32(0), toUInt32(32769) <= toInt32(0), toUInt32(32769) > toInt32(0), toUInt32(32769) >= toInt32(0) , toInt32(0) = toInt32(32769), toInt32(0) != toInt32(32769), toInt32(0) < toInt32(32769), toInt32(0) <= toInt32(32769), toInt32(0) > toInt32(32769), toInt32(0) >= toInt32(32769), toInt32(32769) = toInt32(0), toInt32(32769) != toInt32(0), toInt32(32769) < toInt32(0), toInt32(32769) <= toInt32(0), toInt32(32769) > toInt32(0), toInt32(32769) >= toInt32(0) , toInt32(0) = toUInt64(32769), toInt32(0) != toUInt64(32769), toInt32(0) < toUInt64(32769), toInt32(0) <= toUInt64(32769), toInt32(0) > toUInt64(32769), toInt32(0) >= toUInt64(32769), toUInt64(32769) = toInt32(0), toUInt64(32769) != toInt32(0), toUInt64(32769) < toInt32(0), toUInt64(32769) <= toInt32(0), toUInt64(32769) > toInt32(0), toUInt64(32769) >= toInt32(0) , toInt32(0) = toInt64(32769), toInt32(0) != toInt64(32769), toInt32(0) < toInt64(32769), toInt32(0) <= toInt64(32769), toInt32(0) > toInt64(32769), toInt32(0) >= toInt64(32769), toInt64(32769) = toInt32(0), toInt64(32769) != toInt32(0), toInt64(32769) < toInt32(0), toInt64(32769) <= toInt32(0), toInt64(32769) > toInt32(0), toInt64(32769) >= toInt32(0) , toUInt64(0) = toUInt16(32769), toUInt64(0) != toUInt16(32769), toUInt64(0) < toUInt16(32769), toUInt64(0) <= toUInt16(32769), toUInt64(0) > toUInt16(32769), toUInt64(0) >= toUInt16(32769), toUInt16(32769) = toUInt64(0), toUInt16(32769) != toUInt64(0), toUInt16(32769) < toUInt64(0), toUInt16(32769) <= toUInt64(0), toUInt16(32769) > toUInt64(0), toUInt16(32769) >= toUInt64(0) , toUInt64(0) = toUInt32(32769), toUInt64(0) != toUInt32(32769), toUInt64(0) < toUInt32(32769), toUInt64(0) <= toUInt32(32769), toUInt64(0) > toUInt32(32769), toUInt64(0) >= toUInt32(32769), toUInt32(32769) = toUInt64(0), toUInt32(32769) != toUInt64(0), toUInt32(32769) < toUInt64(0), toUInt32(32769) <= toUInt64(0), toUInt32(32769) > toUInt64(0), toUInt32(32769) >= toUInt64(0) , toUInt64(0) = toInt32(32769), toUInt64(0) != toInt32(32769), toUInt64(0) < toInt32(32769), toUInt64(0) <= toInt32(32769), toUInt64(0) > toInt32(32769), toUInt64(0) >= toInt32(32769), toInt32(32769) = toUInt64(0), toInt32(32769) != toUInt64(0), toInt32(32769) < toUInt64(0), toInt32(32769) <= toUInt64(0), toInt32(32769) > toUInt64(0), toInt32(32769) >= toUInt64(0) , toUInt64(0) = toUInt64(32769), toUInt64(0) != toUInt64(32769), toUInt64(0) < toUInt64(32769), toUInt64(0) <= toUInt64(32769), toUInt64(0) > toUInt64(32769), toUInt64(0) >= toUInt64(32769), toUInt64(32769) = toUInt64(0), toUInt64(32769) != toUInt64(0), toUInt64(32769) < toUInt64(0), toUInt64(32769) <= toUInt64(0), toUInt64(32769) > toUInt64(0), toUInt64(32769) >= toUInt64(0) , toUInt64(0) = toInt64(32769), toUInt64(0) != toInt64(32769), toUInt64(0) < toInt64(32769), toUInt64(0) <= toInt64(32769), toUInt64(0) > toInt64(32769), toUInt64(0) >= toInt64(32769), toInt64(32769) = toUInt64(0), toInt64(32769) != toUInt64(0), toInt64(32769) < toUInt64(0), toInt64(32769) <= toUInt64(0), toInt64(32769) > toUInt64(0), toInt64(32769) >= toUInt64(0) , toInt64(0) = toUInt16(32769), toInt64(0) != toUInt16(32769), toInt64(0) < toUInt16(32769), toInt64(0) <= toUInt16(32769), toInt64(0) > toUInt16(32769), toInt64(0) >= toUInt16(32769), toUInt16(32769) = toInt64(0), toUInt16(32769) != toInt64(0), toUInt16(32769) < toInt64(0), toUInt16(32769) <= toInt64(0), toUInt16(32769) > toInt64(0), toUInt16(32769) >= toInt64(0) , toInt64(0) = toUInt32(32769), toInt64(0) != toUInt32(32769), toInt64(0) < toUInt32(32769), toInt64(0) <= toUInt32(32769), toInt64(0) > toUInt32(32769), toInt64(0) >= toUInt32(32769), toUInt32(32769) = toInt64(0), toUInt32(32769) != toInt64(0), toUInt32(32769) < toInt64(0), toUInt32(32769) <= toInt64(0), toUInt32(32769) > toInt64(0), toUInt32(32769) >= toInt64(0) , toInt64(0) = toInt32(32769), toInt64(0) != toInt32(32769), toInt64(0) < toInt32(32769), toInt64(0) <= toInt32(32769), toInt64(0) > toInt32(32769), toInt64(0) >= toInt32(32769), toInt32(32769) = toInt64(0), toInt32(32769) != toInt64(0), toInt32(32769) < toInt64(0), toInt32(32769) <= toInt64(0), toInt32(32769) > toInt64(0), toInt32(32769) >= toInt64(0) , toInt64(0) = toUInt64(32769), toInt64(0) != toUInt64(32769), toInt64(0) < toUInt64(32769), toInt64(0) <= toUInt64(32769), toInt64(0) > toUInt64(32769), toInt64(0) >= toUInt64(32769), toUInt64(32769) = toInt64(0), toUInt64(32769) != toInt64(0), toUInt64(32769) < toInt64(0), toUInt64(32769) <= toInt64(0), toUInt64(32769) > toInt64(0), toUInt64(32769) >= toInt64(0) , toInt64(0) = toInt64(32769), toInt64(0) != toInt64(32769), toInt64(0) < toInt64(32769), toInt64(0) <= toInt64(32769), toInt64(0) > toInt64(32769), toInt64(0) >= toInt64(32769), toInt64(32769) = toInt64(0), toInt64(32769) != toInt64(0), toInt64(32769) < toInt64(0), toInt64(32769) <= toInt64(0), toInt64(32769) > toInt64(0), toInt64(32769) >= toInt64(0) 
CREATE DATABASE IF NOT EXISTS test_hfshtjps 
SELECT a FROM mytable ORDER BY a DESC LIMIT 5;
SELECT color, timestamp FROM order_test1 GROUP BY color, timestamp ORDER BY color ASC, timestamp DESC;
select [5] = multiSearchAllPositions(materialize('abcdefgh'), ['e']);
SELECT 'Running test stateless/02012_compress_lz4.sh from pid=1726' 
CREATE TABLE test_3D416F6B45444D723C485C6E475C3F32474F2F4F68632045692A2E2F31595B5A742D4B4F353D212A(x UInt8) Engine=Memory;
select abs(greatCircleDistance(37.617780, 55.755830, 158.756175, 53.006373) - 6802821.68814) / 6802821.68814 < 0.004;
SELECT count() FROM test_02559 PREWHERE (id1 <= 10 AND id2 > 0) AND (1 OR ignore(id1));
CREATE TABLE test_204A3E21342F277B59673A3A3F2E5340416D416728234C3C5F583D4F386C535C422327485550684D(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_1_674 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 2 * count(float64) - sum(float64) From test_table;
SELECT 'Running test stateless/00765_sql_compatibility_aliases.sql from pid=1724' 
INSERT INTO r8 SELECT 51
select a1, b1, a2, b2 from tab1 all left join tab2 on b1 + 1 = a2 + 1 or a1 + 4 = b2 + 2 ORDER BY a1, b1, a2, b2;
CREATE DATABASE IF NOT EXISTS test_u68nnq6f 
SELECT * FROM arrow_nested_arrays FORMAT Arrow
DROP DATABASE IF EXISTS test_iz88gps6 
CREATE DATABASE IF NOT EXISTS 01070_window_view_watch_events
INSERT INTO test_01193_18429.table_9_767 VALUES 
SELECT 'Running test stateless/02023_nullable_int_uint_where.sql from pid=1724' 
CREATE DATABASE IF NOT EXISTS test_sjz4s49g 
CREATE TABLE test_732A753A2A2C492976377470666D5A277C2C376E3B6F572944547A492A617236645B447167232322(x UInt8) Engine=Memory;
select 1 = sequenceMatch('(?1)(?t<3)(?3)')(time, data = 0, data = 1, data = 2, data = 3) from sequence_test;
SELECT multiIf((number % 2) = 0, toInt64(1), (number % 3) = 0, toUInt8(2), toUInt16(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_4_179 VALUES 
SET update_insert_deduplication_token_in_dependent_materialized_views = 1;
CREATE TABLE test_01193_18429.table_5_687 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_2C4F6258225C6C25467D303432556353362328493A4A3C7C3465615965214C4032294074462D7843(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_6_959 VALUES 
CREATE TABLE t_collisions (`very_very_long_column_name_that_will_be_replaced_with_hash` Int32, `e798545eefc8b7a1c2c81ff00c064ad8` Int32) ENGINE = MergeTree ORDER BY tuple() SETTINGS replace_long_file_name_to_hash = 0, index_granularity = 53676, min_bytes_for_wide_part = 949274231, ratio_of_defaults_for_sparse_serialization = 0., max_file_name_length = 0, merge_max_block_size = 24277, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 15986431, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 43558, primary_key_compress_block_size = 84025
CREATE TABLE table_for_bad_alters ( key UInt64, value1 UInt8, value2 String ) ENGINE = ReplicatedMergeTree('/clickhouse/tables/01079_bad_alters_zookeeper_long_test_jn9v8i28/table_for_bad_alters', '1') ORDER BY key;
SELECT if(explain like '%ReadType: InOrder%', 'Ok', 'Error: ' || explain) FROM ( EXPLAIN PLAN actions = 1 SELECT timestamp, value FROM mytable FINAL WHERE key = 5 ORDER BY timestamp SETTINGS enable_vertical_final = 0 ) WHERE explain like '%ReadType%';
CREATE DATABASE IF NOT EXISTS test_jbyziefx 
SELECT 'aes-128-cbc' AS mode, hex(aes_encrypt_mysql(mode, '[HIDDEN]')) FROM encryption_test
SELECT 'Running test stateless/02876_yyyymmddtodate.sql from pid=1726' 
SELECT toModifiedJulianDayOrNull('1999-02-29');
select 'INSERT SELECT max_threads';
CREATE TABLE test_522D3B5A64762834655F5A3B574A7E2326713D4F3C396B573B3F3F375472676838646D3429234C5A(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_w2qcilxc 
CREATE DATABASE IF NOT EXISTS test_3ff3w9i7 
CREATE TABLE test_427039494C7841357843547C76655B2D3843633273686B49704728576D6E3B2530572B2050525A61(x UInt8) Engine=Memory;
drop table data_02021;
select tuple(number) = tuple(number) from numbers(1);
CREATE TABLE testNullableStates (`ts` DateTime, `id` String, `string` Nullable(String), `float64` Nullable(Float64), `float32` Nullable(Float32), `decimal325` Nullable(Decimal32(5)), `date` Nullable(Date), `datetime` Nullable(DateTime), `datetime64` Nullable(DateTime64), `int64` Nullable(Int64), `int32` Nullable(Int32), `int16` Nullable(Int16), `int8` Nullable(Int8)) ENGINE = MergeTree PARTITION BY toStartOfDay(ts) ORDER BY id SETTINGS index_granularity = 52695, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 3882, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 45, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 14793212, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 75610, primary_key_compress_block_size = 87718
CREATE DATABASE IF NOT EXISTS test_dt4ejo75 
INSERT INTO test_01193_18429.table_10_563 VALUES 
CREATE TABLE test_2554_log (n UInt32) ENGINE = Log SETTINGS storage_policy = 'default';
SELECT throwIf((SELECT sum(nm) FROM mv) != 54) FORMAT Null;
DROP TABLE IF EXISTS 02661_archive_table
INSERT INTO dst_5 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 93
CREATE TABLE test_337A26523C79762F777D262448594B3328415948565D406F472573334D3564245354697D33335E5A(x UInt8) Engine=Memory;
CREATE TABLE test_3B462D2D4A377C6D484068774D2262345E502C58393F61324067796B6C6F6D5B372B5266794A2B36(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_6_767 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DESCRIBE (SELECT cast(tuple(1, 'Value'), 'Tuple (id UInt64, value String)') AS a, untuple(a));
CREATE TABLE test_01193_18429.table_5_6 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DATABASE IF NOT EXISTS test_ty7wh8tu 
SELECT * FROM r2 WHERE key=4;
SELECT -0x1.234p-01;
SELECT 'Running test stateless/01950_kill_large_group_by_query.sh from pid=1715' 
SELECT 'semi';
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c4) AND c6 AND c8) OR (c3) OR ((NOT c8)) OR ((NOT c5) AND (NOT c2) AND (NOT c7) AND (NOT c4) AND (NOT c6)) OR (c1) OR ((NOT c0)) OR ((NOT c4) AND (NOT c7) AND c9 AND c7) OR (c3 AND (NOT c7) AND c8) SETTINGS convert_query_to_cnf = 1
CREATE TABLE test_01193_18429.table_1_734 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO r2 SELECT 60
INSERT INTO r9 SELECT 28 % 10 = 9 ? 28 - 1 : 28
SELECT * FROM remote('[::1]:9000', system.one) FORMAT Null;
SELECT t1.value FROM (SELECT transform(number, [2, 4, 6], ['google', 'censor.net', 'yahoo'], 'other') as value FROM system.numbers LIMIT 10) as t1;
DROP DATABASE IF EXISTS test_7unf6d4g 
CREATE DATABASE IF NOT EXISTS test_nsqb1v9i 
SELECT count(*) FROM bitmap_test WHERE bitmapContains((SELECT groupBitmapState(uid) FROM bitmap_test WHERE pickup_date = '2019-01-01'), uid);
SELECT 65535, -9223372036854775807, 65535 = -9223372036854775807, 65535 != -9223372036854775807, 65535 < -9223372036854775807, 65535 <= -9223372036854775807, 65535 > -9223372036854775807, 65535 >= -9223372036854775807, -9223372036854775807 = 65535, -9223372036854775807 != 65535, -9223372036854775807 < 65535, -9223372036854775807 <= 65535, -9223372036854775807 > 65535, -9223372036854775807 >= 65535 , toUInt16(65535) = toInt64(-9223372036854775807), toUInt16(65535) != toInt64(-9223372036854775807), toUInt16(65535) < toInt64(-9223372036854775807), toUInt16(65535) <= toInt64(-9223372036854775807), toUInt16(65535) > toInt64(-9223372036854775807), toUInt16(65535) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toUInt16(65535), toInt64(-9223372036854775807) != toUInt16(65535), toInt64(-9223372036854775807) < toUInt16(65535), toInt64(-9223372036854775807) <= toUInt16(65535), toInt64(-9223372036854775807) > toUInt16(65535), toInt64(-9223372036854775807) >= toUInt16(65535) , toUInt32(65535) = toInt64(-9223372036854775807), toUInt32(65535) != toInt64(-9223372036854775807), toUInt32(65535) < toInt64(-9223372036854775807), toUInt32(65535) <= toInt64(-9223372036854775807), toUInt32(65535) > toInt64(-9223372036854775807), toUInt32(65535) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toUInt32(65535), toInt64(-9223372036854775807) != toUInt32(65535), toInt64(-9223372036854775807) < toUInt32(65535), toInt64(-9223372036854775807) <= toUInt32(65535), toInt64(-9223372036854775807) > toUInt32(65535), toInt64(-9223372036854775807) >= toUInt32(65535) , toInt32(65535) = toInt64(-9223372036854775807), toInt32(65535) != toInt64(-9223372036854775807), toInt32(65535) < toInt64(-9223372036854775807), toInt32(65535) <= toInt64(-9223372036854775807), toInt32(65535) > toInt64(-9223372036854775807), toInt32(65535) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toInt32(65535), toInt64(-9223372036854775807) != toInt32(65535), toInt64(-9223372036854775807) < toInt32(65535), toInt64(-9223372036854775807) <= toInt32(65535), toInt64(-9223372036854775807) > toInt32(65535), toInt64(-9223372036854775807) >= toInt32(65535) , toUInt64(65535) = toInt64(-9223372036854775807), toUInt64(65535) != toInt64(-9223372036854775807), toUInt64(65535) < toInt64(-9223372036854775807), toUInt64(65535) <= toInt64(-9223372036854775807), toUInt64(65535) > toInt64(-9223372036854775807), toUInt64(65535) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toUInt64(65535), toInt64(-9223372036854775807) != toUInt64(65535), toInt64(-9223372036854775807) < toUInt64(65535), toInt64(-9223372036854775807) <= toUInt64(65535), toInt64(-9223372036854775807) > toUInt64(65535), toInt64(-9223372036854775807) >= toUInt64(65535) , toInt64(65535) = toInt64(-9223372036854775807), toInt64(65535) != toInt64(-9223372036854775807), toInt64(65535) < toInt64(-9223372036854775807), toInt64(65535) <= toInt64(-9223372036854775807), toInt64(65535) > toInt64(-9223372036854775807), toInt64(65535) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toInt64(65535), toInt64(-9223372036854775807) != toInt64(65535), toInt64(-9223372036854775807) < toInt64(65535), toInt64(-9223372036854775807) <= toInt64(65535), toInt64(-9223372036854775807) > toInt64(65535), toInt64(-9223372036854775807) >= toInt64(65535) 
SELECT CASE WHEN (number % 2) = 0 THEN [toInt64(1), toInt64(2)] WHEN (number % 3) = 0 THEN [toInt8(2), toInt8(3)] ELSE [toInt16(3), toInt16(3)] END FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_sqfd5b49 
alter table many_mutations delete where y = 145 * 2 settings mutations_sync = 0;
CREATE TABLE test_01193_18429.table_4_902 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE MATERIALIZED VIEW mv (`v` UInt8) ENGINE = MergeTree ORDER BY v SETTINGS index_granularity = 28530, min_bytes_for_wide_part = 996236039, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 11567, prefer_fetch_merged_part_size_threshold = 6828861155, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10594798287, index_granularity_bytes = 26039705, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 61110, primary_key_compress_block_size = 82826 AS SELECT v FROM src
INSERT INTO r5 SELECT 0
select 0 = position('abc', materialize('abcdefg')) from system.numbers limit 10;
SELECT hex(SHA384('test'));
DROP DATABASE IF EXISTS test_8op4dgj1 
CREATE DATABASE IF NOT EXISTS test_rfasnmub 
ALTER TABLE test_table_4 MODIFY SETTING max_replicated_merges_in_queue=0
ALTER TABLE table_1017_1 UPDATE y = x + arrayCount(x -> (x + y) % 2, range(y)) WHERE not ignore()
CREATE TABLE test_4D70703F735B566E28615028422B2D564A2247644265782126225477414B3D4E4C335222443C7C4D(x UInt8) Engine=Memory;
SET DEFAULT ROLE session_log_test_role, session_log_test_role2 TO session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_no_password_two_profiles_two_roles;
select makeDateTime64(1991, 8, 24, 21, 4, 0, 1234, 0, 'CET');
SELECT part_type FROM system.part_log WHERE database = currentDatabase() AND table = 't_parts_profile_events' AND event_type = 'NewPart' ORDER BY event_time_microseconds;
SELECT 'Running test stateless/01579_date_datetime_index_comparison.sql from pid=1722' 
SELECT ' Int32 | UInt64 ';
CREATE DATABASE IF NOT EXISTS test_ibzs8i7h 
SELECT map('key1', number, 'key2', number * 2) AS m, toJSONString(m) AS s, isValidJSON(s) FROM numbers(1, 1);
DROP TABLE IF EXISTS b
SELECT 'plus';
SELECT 'Running test stateless/01186_conversion_to_nullable.sql from pid=1718' 
select getSetting('max_threads')
DROP DATABASE IF EXISTS test_6ram6tlk 
CREATE TABLE test_2175762E37623F365878265E472A7642714D2465417670685C783F407D635F52205825656E2C3D5D(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02149_read_in_order_fixed_prefix_negative.sh from pid=1722' 
INSERT INTO test_01193_18429.table_5_20 VALUES 
CREATE DATABASE IF NOT EXISTS test_sugqlhpj 
DROP FUNCTION IF EXISTS 02148_test_function;
WITH 01091 AS id SELECT 1;
SELECT 5, 11, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (5 < 13 AND 11 > 0 ? 5 : 0)), throwIf(last != (5 < 13 AND 11 > 0 ? least(13 - 1, 5 + 11 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 5, 11);
SELECT round(abs(res1 - res2), 6) FROM ( SELECT varSamp(x_value) AS res1, (sum(x_value * x_value) - ((sum(x_value) * sum(x_value)) / count())) / (count() - 1) AS res2 FROM series );
SELECT DATE_ADD(hour, 1, toDateTime(1234567890, 'UTC'));
SELECT toDecimal32OrZero('1.1', 0);
ALTER TABLE dst_15 DROP PARTITION 0
CREATE TABLE lwd_test_02521 (`id` UInt64, `value` String, `event_time` DateTime) ENGINE = MergeTree ORDER BY id SETTINGS min_bytes_for_wide_part = 0, index_granularity = 8192, index_granularity_bytes = '10Mi', ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 20188, prefer_fetch_merged_part_size_threshold = 6107436815, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 16, min_merge_bytes_to_use_direct_io = 3925880200, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 81607, primary_key_compress_block_size = 27897
select toInt128OrDefault('-1', cast(-2 as Int128));
DROP DATABASE IF EXISTS test_2rql3w6c 
SELECT 'Running test stateless/02737_sql_auto_is_null.sql from pid=1713' 
CREATE TABLE test_3356385E5B2E602B5638213B5D572E6E3B26535C5D613027445A482D5A315A7973755646403A3430(x UInt8) Engine=Memory;
ALTER TABLE t_delay_mutations UPDATE v = 4 WHERE 1;
SELECT multiIf((number % 2) = 0, [toInt16(1), toInt16(2)], (number % 3) = 0, [toUInt8(2), toUInt8(3)], [toFloat64(3), toFloat64(3)]) FROM system.numbers LIMIT 10;
SELECT toDecimal64OrNull('e', 2) x, isNull(x);
CREATE TABLE test_01193_18429.table_9_589 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT `number`, count(`number`) FROM `test_ahwppifc`.`local_01099_b` GROUP BY `number` ORDER BY `number` ASC
INSERT INTO test_01193_18429.table_2_813 VALUES 
CREATE TABLE test_01193_18429.table_9_428 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select trimLeft(explain) from (explain pipeline SELECT DISTINCT id, v FROM t_sparse_distinct) where explain ilike '%DistinctSortedChunkTransform%';
SELECT x FROM quorum1 ORDER BY x;
SELECT dictGet('database_for_range_dict.range_dictionary', 'Tax', toUInt64(1), toDate('2019-05-15'));
/* toRelativeMonthNum */ SELECT 'toRelativeMonthNum';
alter table many_mutations delete where y = 576 * 2 settings mutations_sync = 0;
SELECT '--- key types';
DROP DATABASE IF EXISTS test_mlo8hyx8 
show create table projection_parts_columns format TSVRaw;
INSERT INTO test_01193_18429.table_7_496 VALUES 
CREATE TABLE test_517B235F4B7E476F282769324527544C6F482D3C322755235A373A375F715E4D5E7D47274C763D29(x UInt8) Engine=Memory;
SELECT mid(NULL, NULL, NULL);
INSERT INTO t64 SELECT (10 - toInt64(intExp2(24)) + number) AS x, x, x, x, x, x, x, x FROM numbers(11);
INSERT INTO test_01193_18429.table_10_156 VALUES 
SELECT t1.id, t1.value, t2.id, t2.value, t3.id, t3.value FROM test_table_join_1 AS t1 LEFT JOIN test_table_join_2 AS t2 ON t1.id = t2.id AND t1.value == 'Join_1_Value_0' AND t2.value == 'Join_2_Value_0' INNER JOIN test_table_join_3 AS t3 ON t2.id = t3.id AND t2.value == 'Join_2_Value_0' AND t3.value == 'Join_3_Value_0';
alter table many_mutations delete where y = 724 * 2 settings mutations_sync = 0;
INSERT INTO test_01193_18429.table_3_491 VALUES 
CREATE DATABASE IF NOT EXISTS test_ep37hk5l 
select IPv4StringToNum('not an ip string') == 0;
CREATE TABLE test_01193_18429.table_10_199 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_4_808 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_6rncenhv 
DROP DATABASE IF EXISTS test_lcsi4m5x 
SELECT toDecimal128OrZero ('1.1111111111111111111111111111111111111', 4);
DROP TABLE IF EXISTS adaptive_table;
DROP DATABASE IF EXISTS test_fhmjd0zy 
INSERT INTO test_01193_18429.table_9_565 VALUES 
INSERT INTO test1_00395(col1) VALUES 
CREATE WINDOW VIEW test_kna0pcoi.wv INNER ENGINE = AggregatingMergeTree ORDER BY tumble(test_kna0pcoi.mt.timestamp, toIntervalSecond('1')) ENGINE = Memory AS SELECT count(test_kna0pcoi.mt.a), count(test_kna0pcoi.mt_2.b), wid FROM test_kna0pcoi.mt INNER JOIN test_kna0pcoi.mt_2 ON test_kna0pcoi.mt.timestamp = test_kna0pcoi.mt_2.timestamp GROUP BY tumble(test_kna0pcoi.mt.timestamp, toIntervalSecond('1')) AS wid
DROP DATABASE IF EXISTS test_hgbyz14k 
CREATE TABLE test_01193_18429.table_7_348 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_8b2sc9vq 
SELECT 'Running test stateless/02477_projection_materialize_and_zero_copy.sql from pid=1715' 
select * from test_02097
INSERT INTO test_01193_18429.table_1_452 VALUES 
DROP TABLE IF EXISTS mutations_r1;
SELECT * FROM (SELECT toLowCardinality(toNullable(dummy)) AS val FROM system.one) s1 ANY LEFT JOIN (SELECT toLowCardinality(dummy) AS val FROM system.one) s2 USING val ORDER BY val;
DROP DATABASE IF EXISTS test_i05nywx7 
INSERT INTO test_01193_18429.table_4_20 VALUES 
SELECT 0 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'val', tuple(IPv4StringToNum('224.0.0.0')))
CREATE DATABASE IF NOT EXISTS test_4avdyz4c 
SELECT round(toDecimal32(2, 2) * 1.2, 6);
SELECT 'SELECT N != toInt64(-1)';
SELECT toDateTime(toDate('2016-12-22') + number, 'Asia/Istanbul' ) AS d, toWeek(d, 8, 'Asia/Istanbul') AS week8, toWeek(d, 9, 'Asia/Istanbul') AS week9, toYearWeek(d, 8, 'Asia/Istanbul') AS yearWeek8, toYearWeek(d, 9, 'Asia/Istanbul') AS yearWeek9 FROM numbers(21);
ALTER USER u3_01292 IDENTIFIED
CREATE DATABASE IF NOT EXISTS test_8ajcg56d 
CREATE TABLE test_7A5B395471762145392F272F3B5C5F212D3328316E754C5F3E7E4C724F71412A33414F6A5F6D7240(x UInt8) Engine=Memory;
CREATE TABLE t1 (`x` UInt32, `y` UInt64) ENGINE = MergeTree ORDER BY (x, y) SETTINGS index_granularity = 29622, min_bytes_for_wide_part = 431703741, ratio_of_defaults_for_sparse_serialization = 0.9879958033561707, replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 21036, prefer_fetch_merged_part_size_threshold = 10065256742, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 3647319187, index_granularity_bytes = 17566996, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 14999, primary_key_compress_block_size = 93433
select 0 = multiMatchAny(materialize('abc'), materialize(['d'])) from system.numbers limit 10;
CREATE TABLE google_wrappers_02266 (`str` Nullable(String), `ref` Int32) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 21174, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 122, merge_max_block_size = 1083, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 98, min_merge_bytes_to_use_direct_io = 3659946793, index_granularity_bytes = 1894935, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 17194, primary_key_compress_block_size = 39767
EXPLAIN SYNTAX SELECT min(abs(n) + 1), min(abs(n) + n), min(n - abs(n)), min(1 - abs(n)) FROM (SELECT number n FROM numbers(10));
DROP DATABASE IF EXISTS test_dcxtpgd7 
DROP DATABASE IF EXISTS test_n86uz5a1 
SELECT 'Running test stateless/02151_lc_prefetch.sql from pid=1724' 
SELECT 'TSV';
select IPv4StringToNum(materialize('')) == 0;
SELECT arraySum([toDecimal64(0.0,8), toDecimal64(1.0,8)]) x, toTypeName(x);
DROP DATABASE IF EXISTS test_4jawsyyi 
DROP DATABASE IF EXISTS test_b28kjpma 
CREATE TABLE test_01193_18429.table_9_551 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT toUInt8(0) AS x, toUInt8(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
CREATE TABLE test_312E6862356533324072366F58215D2E763E274957597B437B2B3A7B2B6C5C73394C602F215B3F64(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_6_158 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT toUInt32OrDefault(toNullable(toUInt32(1)), toNullable(toUInt32(2))) SETTINGS cast_keep_nullable=1;
SELECT toTypeName(x) FROM (SELECT toDecimal64('12345.00', 4) AS x UNION ALL SELECT toUInt32(0) AS x) WHERE x = 0;
SELECT name FROM system.parts WHERE active AND database='test_uepaqe2p' and table='dst_9' ORDER BY rand() LIMIT 1
CREATE TABLE test_02908_r1_128 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_128', 'r1') ORDER BY tuple()
SELECT sqidEncode(toNullable(1), toLowCardinality(2)) AS sqid;
CREATE TABLE test_487362352728266D66407A714C277A4E753B495823587E456D6F425E467E215C2D256127555B3664(x UInt8) Engine=Memory;
set force_optimize_skip_unused_shards_nesting=2;
INSERT INTO s VALUES
SELECT age('second', toDateTime('2015-08-18 00:00:00', 'UTC'), toDateTime64('2015-08-18 01:10:10', 3, 'UTC'));
EXPLAIN QUERY TREE SELECT uniq(t.alias_of_a) FROM (SELECT a as alias_of_a, sum(b) FROM test_rewrite_uniq_to_count GROUP BY alias_of_a) t settings allow_experimental_analyzer=1;
DESCRIBE (SELECT 1, 'test', [1, 2, 3], ['1', '2', '3']);
SELECT * FROM test_table FORMAT JSONCompactStringsEachRowWithNames;
CREATE DATABASE IF NOT EXISTS test_63cb2vfg 
DROP DATABASE IF EXISTS test_cci06whi 
INSERT INTO test_01193_18429.table_4_353 VALUES 
select 1 = isValidUTF8('\xF0\x90\xBF\x80') from system.numbers limit 10;
# The cases when there is no comment on creation CREATE TABLE t (x UInt8) ENGINE = Memory;
CREATE DATABASE IF NOT EXISTS test_y2biveph 
CREATE TABLE test_01193_18429.table_7_154 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO src VALUES /* (-64, 1) */ 
INSERT INTO r8 SELECT 86
INSERT INTO test_01193_18429.table_7_972 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN toUInt16(1) WHEN (number % 3) = 0 THEN toFloat64(2) ELSE toInt16(3) END FROM system.numbers LIMIT 10;
DROP TABLE IF EXISTS 02751_query_log_test_partitions;
SELECT lengthUTF8(NULL);
insert into test select '5', '00000000-0000-0000-0000-000000000000';
CREATE TABLE test_01193_18429.table_6_671 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT toTypeName([NULL]);
INSERT INTO test_01193_18429.table_2_700 VALUES 
SELECT throwIf((SELECT sum(nm) FROM mv) != 122) FORMAT Null;
select 1 = isValidUTF8(toValidUTF8('\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xF1\x80')) from system.numbers limit 10;
SELECT ((tuple('a', 10) AS `x`).1) = 'a' FROM numbers(2)
INSERT INTO test_01193_18429.table_10_628 VALUES 
SELECT * FROM na, nb;
CREATE TABLE test_597161474F29705E7451483630755E397420577D6F422D2E294150512723512B793E6228632F7A4F(x UInt8) Engine=Memory;
INSERT INTO t_sparse_alter SELECT number, if (number % 11 = 0, number, 0), if (number % 13 = 0, toString(number), '') FROM numbers(2000);
select UUIDNumToString(UUIDStringToNum('00112233-4455-6677-8899-aabbccddeeff', 1), 1);
optimize table mt final
SELECT hex(sipHash128('\x01'));
DROP DATABASE IF EXISTS test_nhy4o91y 
CREATE TABLE test_01193_18429.table_6_493 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE DATABASE IF NOT EXISTS test_6ztqwvhd 
EXPLAIN AST ALTER TABLE t DELETE WHERE c = 1;
select '<31: to existing table>', * from dest;
CREATE TABLE test_01193_18429.table_6_131 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO truncate_test VALUES
DROP DATABASE IF EXISTS test_q92nhmrk 
SELECT throwIf((SELECT sum(nm) FROM mv) != 166) FORMAT Null;
SELECT min(abs(2) + 1), min(abs(2) + n), min(n - abs(2)), min(1 - abs(2)) FROM (SELECT number n FROM numbers(10));
SELECT dictGet('01681_database_for_cache_dictionary.cache_dictionary_simple_key_simple_attributes', 'value_first', number) as value_first, dictGet('01681_database_for_cache_dictionary.cache_dictionary_simple_key_simple_attributes', 'value_second', number) as value_second FROM system.numbers LIMIT 4;
CREATE TABLE test_43694D2D43656C4A5C60566976365C7D77754D552735287E767A2E66776D5173674D40652C233E53(x UInt8) Engine=Memory;
SELECT randCanonical(-1);
kill query where query_id = '02450_kill_distributed_query_deadlock_test_ft363ahb-5' sync
INSERT INTO test_01193_18429.table_3_487 VALUES 
SELECT isDecimalOverflow(toDecimal128('99999999999999999999999999999999999999', 0) + 1, 38), isDecimalOverflow(toDecimal128('99999999999999999999999999999999999999', 0) + 1), isDecimalOverflow(toDecimal128('-99999999999999999999999999999999999999', 0) - 1, 38), isDecimalOverflow(toDecimal128('-99999999999999999999999999999999999999', 0) - 1);
SELECT 83;
drop table if exists data_01709;
CREATE TABLE IF NOT EXISTS test_sequenceNextNode_Nullable (`dt` DateTime, `id` int, `action` Nullable(String)) ENGINE = MergeTree PARTITION BY dt ORDER BY id SETTINGS index_granularity = 44171, min_bytes_for_wide_part = 242497288, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 9611, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 281091680, index_granularity_bytes = 27896028, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 66107, primary_key_compress_block_size = 78955
CREATE TABLE test_01193_18429.table_2_620 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select count() from system.schema_inference_cache where countSubstrings(source, '02404_data.CSVWithNames') > 0;
SELECT 'xn--mgbaam7a8h' AS ascii, idnaDecode(ascii) AS unicode, idnaEncode(unicode) AS original, tryIdnaEncode(unicode) AS original_try;
CREATE DATABASE IF NOT EXISTS test_9z11qb2b 
INSERT INTO test_01193_18429.table_3_63 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN [toInt8(1), toInt8(2)] WHEN (number % 3) = 0 THEN [toInt64(2), toInt64(3)] ELSE [toUInt16(3), toUInt16(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_8_604 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select * from file('test_01946.zstd', 'JSONEachRow', 'foo String') order by foo limit 30 format Null;
ALTER TABLE tbl UPDATE e = xi WHERE 1;
select uniqExact(_part), count() from tMM where toYYYYMM(d-1)+1 = 202010;
DROP TABLE IF EXISTS 02428_parameterized_view_test_0zmj5798.pv1
CREATE TABLE test_474D39673A78367D62543162384D424877625977516F7973654343203960566649576C206C552861(x UInt8) Engine=Memory;
select getTypeSerializationStreams('Map(String, Int64)');
DROP TABLE 01065_window_view_event_hop_watch_bounded.mt
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (3 < 8 AND 75 > 0 ? 3 : 0)), throwIf(last != (3 < 8 AND 75 > 0 ? least(8 - 1, 3 + 75 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(8) LIMIT 3, 75);
CREATE TABLE test_674C35305728577C244161564E4C797847665B7B6A5F72566D63732C76403A574579215D776B5927(x UInt8) Engine=Memory;
SELECT 'Const point; With holes';
INSERT INTO r8 SELECT 75
SELECT id, v BETWEEN now() - INTERVAL 10 MINUTE AND now() FROM t_mutations_nondeterministic;
SELECT 'Running test stateless/01385_not_function.sql from pid=1714' 
SELECT empty(nest.a), empty(nest.b), empty(nest.c) FROM decimal;
INSERT INTO test_01193_18429.table_3_979 VALUES 
select 4 from t as l join t as r using id prewhere l.x where r.x;
INSERT INTO test_01193_18429.table_6_230 VALUES 
CREATE TABLE test_01193_18429.table_8_337 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT toTypeName(topKResampleState(10, 1, 2, 42)(toString(number), number)) FROM numbers(100);
DROP TABLE IF EXISTS t_filter;
SELECT 'Running test stateless/01284_port.gen.sql from pid=1722' 
drop table test_01655_plan_optimizations_optimize_read_in_window_order_n
CREATE TABLE test_01193_18429.table_8_638 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
insert into data(A, B) format CSV
SELECT 'Running test stateless/01526_initial_query_id.sh from pid=1714' 
DROP TABLE h3_indexes;
SELECT multiIf((number % 2) = 0, [toFloat32(1), toFloat32(2)], (number % 3) = 0, [toInt32(2), toInt32(3)], [toFloat32(3), toFloat32(3)]) FROM system.numbers LIMIT 10;
insert into 02681_undrop_detach values 
CREATE TABLE test (`a` Float32, `b` int, `c` String, `d` Float64) ENGINE = MergeTree PARTITION BY (b, c, d) ORDER BY tuple() SETTINGS allow_floating_point_partition_key = 1, index_granularity = 60818, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 84, merge_max_block_size = 16466, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 4739826187, index_granularity_bytes = 7853344, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 55214, primary_key_compress_block_size = 69408
SELECT * FROM bloom_filter_idx3 WHERE lower(s) LIKE '%(dbms)%' ORDER BY k
INSERT INTO test_01193_18429.table_4_73 VALUES 
CREATE TABLE test_7841237029233227242228302D4B7E5A32212E635220634E455B494D2E4C3D3A2E506E4864484047(x UInt8) Engine=Memory;
SELECT dictGetFloat64('db_01038.dict_with_zero_min_lifetime', 'value', toUInt64(1))
DROP DATABASE IF EXISTS test_8fsino0k 
INSERT INTO test_01193_18429.table_9_677 VALUES 
CREATE TABLE test_6D683F4C68437A32673C42462E77784B652A3052282B4A2B79385835222D38284C7C7D5F4D637461(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_4_215 VALUES 
SELECT h3NumHexagons(7);
SELECT 1 FROM mysql('127.0.0.1:9004', 'system', 'one', 'session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_no_password_two_profiles_two_roles', '[HIDDEN]') LIMIT 1 FORMAT `Null`
CREATE TABLE test_01193_18429.table_7_907 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_2726223D267C2F3F3A5F2C776A5D3C4D536A47667A3748217A7A3244732C27552E28303E3A5A3E35(x UInt8) Engine=Memory;
SELECT '5' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('fc00::')))
CREATE TABLE test_4158245D6F64533E3F6A68337E324D4877373B762728475B76363A6D6C7357397176386C6D303178(x UInt8) Engine=Memory;
CREATE TABLE test_565A25742B28632F352F264328324C43334B48626A217D692C256A3F7D23276E592523247E456C56(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_sgll06gr 
CREATE TABLE test_01193_18429.table_10_562 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt16(1), toInt16(2)] WHEN (number % 3) = 0 THEN [toInt16(2), toInt16(3)] ELSE [toUInt8(3), toUInt8(3)] END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_2_53 VALUES 
EXPLAIN SYNTAX SELECT id FROM (SELECT arrayJoin([1, 2, 3]) AS id) WHERE id = 1;
insert into prewhere_column_missing (x) values 
SELECT `td`.`k`, `td`.`v`, `tl`.`k`, `tl`.`v` FROM `test_mvyzkn4n`.`test_shard` AS `td` ASOF INNER JOIN `test_mvyzkn4n`.`test_local` AS `tl` ON (`td`.`k` = `tl`.`k`) AND (`td`.`v` < `tl`.`v`) ORDER BY `tl`.`v` ASC
DROP DICTIONARY ip_trie_dictionary;
CREATE DATABASE IF NOT EXISTS test_bk512t5g 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c0) AND (NOT c0) AND (NOT c2)) OR ((NOT c1) AND c4 AND c6 AND c8) OR (c1 AND c4 AND (NOT c3) AND (NOT c2)) OR (c9 AND (NOT c7)) OR (c2 AND (NOT c2)) OR ((NOT c1) AND c6) OR ((NOT c3) AND c6 AND c4) OR (c1 AND (NOT c0)) OR ((NOT c4) AND (NOT c2) AND (NOT c2)) SETTINGS convert_query_to_cnf = 1
CREATE TABLE test_01193_18429.table_1_459 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_1_462 VALUES 
CREATE DATABASE IF NOT EXISTS test_88i03ofo 
INSERT INTO test_01193_18429.table_8_573 VALUES 
CREATE TABLE test_28446867312C502059342D2523245D335A61397B48714F546A2229777275712273792D244A5D413F(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_1_909 VALUES 
DROP DATABASE IF EXISTS test_3m8rs0xy 
alter table many_mutations delete where y = 71 * 2 settings mutations_sync = 0;
CREATE TABLE test_01193_18429.table_9_275 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_5_741 VALUES 
CREATE TABLE test_01193_18429.table_10_668 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_hnuphuwi 
INSERT INTO test_01193_18429.table_7_967 VALUES 
CREATE TABLE test_2376772A446D3375452E412E334B734C784F476634654C266E642F33775D6C6D6B46472D71463F62(x UInt8) Engine=Memory;
SELECT multiIf((number % 2) = 0, toFloat32(1), (number % 3) = 0, toInt16(2), toInt16(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_4_855 VALUES 
ALTER TABLE replicated_table_for_reset_setting1 RESET SETTING merge_with_ttl_timeout;
ALTER TABLE concurrent_alter_column ADD COLUMN c303 DOUBLE;
EXPLAIN QUERY TREE (SELECT (sum(float64) - 2 * count(float64)) + (sum(float64) - 3 * count(float64)) From test_table);
select 0 = isValidUTF8('12345678901234\xed') from system.numbers limit 10;
DROP TABLE IF EXISTS t_functions_to_subcolumns_alias;
alter table many_mutations delete where y = 456 * 2 settings mutations_sync = 0;
SELECT toDecimal32(12345.6789, 4) AS x, floor(x), floor(x, 1), floor(x, 2), floor(x, 3), floor(x, 4), floor(x, 5);
CREATE TABLE test02313 (`a` Enum('one' = 1, 'two' = 2), `b` Enum('default' = 0, 'non-default' = 1), `c` UInt8) ENGINE = MergeTree ORDER BY (a, b, c) SETTINGS index_granularity = 56956, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.5581300854682922, replace_long_file_name_to_hash = false, max_file_name_length = 24, merge_max_block_size = 12653, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 29965975, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 12064, primary_key_compress_block_size = 21991
select 1 = sequenceCount('(?1)(?t==1)(?2)')(time, data = 1, data = 2) from sequence_test;
SELECT test_table_join_1.id, test_table_join_1.value, test_table_join_2.id, test_table_join_2.value, test_table_join_3.id, test_table_join_3.value FROM test_table_join_1 FULL JOIN test_table_join_2 ON test_table_join_1.id = test_table_join_2.id INNER JOIN test_table_join_3 ON test_table_join_2.id = test_table_join_3.id;
select uniqExact(x) from (select randConstant() as x);
SELECT toStartOfHour(d64) as d64, count() FROM with_fill_date GROUP BY d64 ORDER BY d64 WITH FILL STEP INTERVAL 6 HOUR LIMIT 5;
SELECT 'Running test stateless/01060_defaults_all_columns.sql from pid=1726' 
SELECT CAST(1, 'Enum8(\'hello\' = 1,\n\t\'world\' = 2)');
INSERT INTO test SELECT number FROM numbers(10,100);
CREATE TABLE test_02908_r2_126 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_126', 'r2') ORDER BY tuple()
CREATE TABLE test_01193_18429.table_9_450 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select 0 = multiMatchAny(materialize('abc'), materialize(['abcdefg'])) from system.numbers limit 10;
SELECT avgWeighted(x, w) FROM values('x UInt16, w UInt32', (4, 1), (1, 0), (10, 2));
select (toInt128(-1) - toUInt32(1)) x, (toInt256(-1) - toUInt32(1)) y, toTypeName(x), toTypeName(y);
CREATE TABLE test_5671546C266E7D5C3B6E4A7341292F292F6E5D2A5720466B5761675430545C41222D6C59625C3E49(x UInt8) Engine=Memory;
ALTER TABLE concurrent_kill_4 MODIFY SETTING max_replicated_merges_in_queue=0
CREATE TABLE test_485E5D55557B36283E32453B3A6F505D3A47532E73497C272B5E653F6E7D6A4257564C2A594A6E6C(x UInt8) Engine=Memory;
ALTER TABLE table_for_freeze DETACH PARTITION '5';
CREATE TABLE test_01193_18429.table_6_694 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
insert into test select number, number, '2022-01-01 00:00:00' from numbers(1000000);
select [1] = multiSearchAllPositions(materialize('abc'), ['']) from system.numbers limit 10;
drop table if exists defaulted;
INSERT INTO test_01193_18429.table_2_479 VALUES 
CREATE DATABASE IF NOT EXISTS test_ogeq97qj 
SELECT COUNT(*) FROM test1.`02722_database_filesystem_test_wkwv3862/tmp/tmp.csv`;
DROP TABLE data_01269;
INSERT INTO test_01193_18429.table_1_33 VALUES 
SELECT format('The {0} to all questions is {1} and {2}', materialize(42 :: Int32), materialize(144 :: UInt64), materialize(255 :: UInt32));
SELECT avg(blockSize()) <= 10 FROM system.tables LIMIT 10 SETTINGS max_block_size = 10;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt16(1), toInt16(2)] WHEN (number % 3) = 0 THEN [toFloat32(2), toFloat32(3)] ELSE [toInt8(3), toInt8(3)] END FROM system.numbers LIMIT 10;
SELECT multiIf((number % 2) = 0, [toInt16(1), toInt16(2)], (number % 3) = 0, [toFloat32(2), toFloat32(3)], [toInt16(3), toInt16(3)]) FROM system.numbers LIMIT 10;
DROP TABLE IF EXISTS merge_item_14
SELECT toLowCardinality('a') AS s, toTypeName(s), toTypeName(length(s)) from system.one;
SELECT reverse([(1, 'Hello', []), (nan, 'World', [NULL])]);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (104 < 31 AND 49 > 0 ? 104 : 0)), throwIf(last != (104 < 31 AND 49 > 0 ? least(31 - 1, 104 + 49 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(31) LIMIT 104, 49);
WITH toDateTime('2023-06-30 23:59:30') AS dt_ref, now() AS dt_now, date_add(MINUTE, 1, dt_now) as dt_after, dateDiff(SECOND, dt_ref, dt_now) AS time_shift, formatDateTime(dt_after, '%b %e %T') AS syslog_after SELECT formatDateTime(dt_after - time_shift, '%b %e %T') AS syslog_arg, parseDateTimeBestEffort(syslog_after) - time_shift AS res, parseDateTimeBestEffortOrNull(syslog_after) - time_shift AS res_null, parseDateTimeBestEffortOrZero(syslog_after) - time_shift AS res_zero, parseDateTimeBestEffortUS(syslog_after) - time_shift AS res_us, parseDateTimeBestEffortUSOrNull(syslog_after) - time_shift AS res_us_null, parseDateTimeBestEffortUSOrZero(syslog_after) - time_shift AS res_us_zero, parseDateTime64BestEffort(syslog_after) - time_shift AS res64, parseDateTime64BestEffortOrNull(syslog_after) - time_shift AS res64_null, parseDateTime64BestEffortOrZero(syslog_after) - time_shift AS res64_zero, parseDateTime64BestEffortUS(syslog_after) - time_shift AS res64_us, parseDateTime64BestEffortUSOrNull(syslog_after) - time_shift AS res64_us_null, parseDateTime64BestEffortUSOrZero(syslog_after) - time_shift AS res64_us_zero FORMAT Vertical;
SET max_block_size = 100;
ALTER TABLE tbl UPDATE xi = e WHERE 1;
INSERT INTO 01682_database_for_cache_dictionary.complex_key_simple_attributes_source_table VALUES
INSERT INTO test_01193_18429.table_1_666 VALUES 
INSERT INTO bloom_filter SELECT number, 'yyy,uuu' FROM numbers(1024);
SELECT (shardNum() AS `_shard_num`) + 1 AS `s`, count() FROM `system`.`one` GROUP BY `_shard_num` + 1 ORDER BY `_shard_num` + 1 ASC
SELECT * FROM merge(currentDatabase(), 'test_distributed_1') WHERE _table = 'test_distributed_1';
CREATE TABLE test_01193_18429.table_10_22 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT CAST('f', 'Bool');
DROP TABLE IF EXISTS async_inserts_02246
SELECT YYYYMMDDToDate32(20230911.1);
SELECT count(*) FROM source WHERE toYear(ts) <= 2023;
CREATE TABLE test_43742E2446747D443A2F752A3A6D61336E6F2F5D5D225353746D58354E402C764940506D6B3F3B6C(x UInt8) Engine=Memory;
SELECT id, min(value1), min(value2) FROM test_table_nullable_float_values GROUP BY id ORDER BY id;
SELECT isNaN(NULL);
DROP DATABASE IF EXISTS test_yell9rr4 
INSERT INTO test_01193_18429.table_4_508 VALUES 
SELECT byteSwap(0::UInt8);
DROP DATABASE IF EXISTS test_tfb7y8rz 
SELECT dictGetOrDefault('cache_dictionary', 'value', toUInt64(2), 2);
select sumIf(number::Int256, number % 10) from numbers(1000);
SELECT arraySort(h3HexRing(h3_index, k)) FROM h3_indexes ORDER BY h3_index;
DROP DATABASE IF EXISTS test_d04fpfjs 
DROP DATABASE IF EXISTS test_oqtk8d1i 
SELECT arrayAll(x -> materialize(1), emptyArrayString());
SELECT * FROM system.mutations WHERE is_done = 0 and table = 'concurrent_alter_add_drop_3'
select array, d1, a1, a2, a3, a4, a5, a6 from aliases_test array join a3;
ALTER TABLE alter_00061 DROP COLUMN n.ui8, DROP COLUMN n.d;
CREATE DATABASE IF NOT EXISTS test_719pz923 
CREATE TABLE test_02908_r2_40 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_40', 'r2') ORDER BY tuple()
INSERT INTO test_01193_18429.table_5_681 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toUInt32(2), toUInt32(3)] ELSE [toInt32(3), toInt32(3)] END FROM system.numbers LIMIT 10;
drop user if exists "Ã¦ÂÂ Ã¥ÂÂÃ¦Â°Â ";
CREATE TABLE t_d AS t ENGINE = Distributed(test_shard_localhost, currentDatabase(), t);
CREATE DATABASE replicated_database_params ENGINE = Replicated('some/path/' || currentDatabase() || '/replicated_database_params');
select * from issue_46128 where id <= 2 order by id;
CREATE DATABASE IF NOT EXISTS test_0nyhk8ci 
select JSONExtractString('{"a": null}', 'a');
SELECT DISTINCT substr(new_part_name, 1, position(new_part_name, '_') - 1) AS partition_id FROM system.replication_queue WHERE (database = currentDatabase()) AND (table LIKE 'dst_%') AND (last_exception LIKE '%No active replica has part%') AND (partition_id NOT IN ( SELECT partition_id FROM system.parts WHERE (database = currentDatabase()) AND (table LIKE 'dst_%') ))
select arraySlice([1, 2, 3, 4, 5, 6], -3, Null);
CREATE TABLE test_785E5A53717E26452A712656606D724338213D5E215D617475252950587E206626552470695F657B(x UInt8) Engine=Memory;
CREATE TABLE test_3A33323D5A60794772562D2249282E4E706F38552C38243B6242734E3A4D705D2E70424A32596522(x UInt8) Engine=Memory;
INSERT INTO FUNCTION remote('127.0.0.1', 'test_7ewi5ikr', 't_async_inserts_logs') FORMAT Values
SELECT 'Running test stateless/02287_ephemeral_format_crash.sql from pid=1718' 
CREATE DATABASE IF NOT EXISTS test_7soy2e6v 
ALTER TABLE concurrent_alter_column ADD COLUMN c297 DOUBLE;
CREATE TABLE test_01193_18429.table_2_158 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'PolygonDictionary';
INSERT INTO table1 SELECT number-205, number FROM numbers(10);
CREATE TABLE test_01193_18429.table_5_898 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE filenames (`name` String) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 28350, min_bytes_for_wide_part = 472344139, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 23152, prefer_fetch_merged_part_size_threshold = 8539068322, vertical_merge_algorithm_min_rows_to_activate = 852116, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 480761280, index_granularity_bytes = 31273323, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 45419, primary_key_compress_block_size = 20147
alter table tt update y = y + 1 where 1
select replaceRegexpOne(explain, '^[ ]*(.*)', '\\1') from ( explain actions=1 select intDiv(a, 2) + 1 as a1, intDiv(b, 3) * 2 as b1 from t11 group by a1, b1, pi() ) where explain like '%Skip merging: %';
CREATE TABLE test_6D566F3335213B6D526F367E302F25257836654E76546A7D645D41473C482A325079375B454B3B72(x UInt8) Engine=Memory;
CREATE TABLE test_277D6471644734545A2E4372483256767871233627457B7B3D7B5C787B3B62532976527B45752045(x UInt8) Engine=Memory;
SELECT multiIf((number % 2) = 0, toInt64(1), (number % 3) = 0, toInt32(2), toInt16(3)) FROM system.numbers LIMIT 10;
SELECT * FROM select_final FINAL ORDER BY x, t;
SELECT toFloat64(9999.99999999999999) as x, toDecimal64(x, 14), toDecimal64(-x, 14);
select tuple(toNullable(number), number, materialize(toUInt64OrNull(''))) <= tuple(number, number, number) from numbers(1);
SELECT hex(SHA256(''));
CREATE TABLE test_2229643C3E4C217D612252374E684656414B25743D2D2E3C22466F78204D4A4B54725A393D724955(x UInt8) Engine=Memory;
SELECT entropy(NULL, NULL);
SELECT CASE WHEN (number % 2) = 0 THEN toInt32(1) WHEN (number % 3) = 0 THEN toInt8(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_9_695 VALUES 
SELECT * FROM wrong_metadata_compact ORDER BY a1 FORMAT JSONEachRow
SELECT y, count() FROM cluster(test_cluster_one_shard_three_replicas_localhost, currentDatabase(), 02535_custom_key) GROUP BY y ORDER BY y SETTINGS max_parallel_replicas=2 , parallel_replicas_custom_key='y' , parallel_replicas_custom_key_filter_type='range' , prefer_localhost_replica=1
INSERT INTO test_01193_18429.table_3_437 VALUES 
CREATE TABLE ".inner_id.e15f3ab5-6cae-4df3-b879-f40deafd82c2" UUID '3bd68e3c-2693-4352-ad66-a66eba9e345e' (n Int32, n2 Int64) ENGINE = MergeTree PARTITION BY n % 10 ORDER BY n;
INSERT INTO test_01193_18429.table_3_425 VALUES 
DROP DATABASE IF EXISTS test_12je0knr 
CREATE TABLE test_3E227642787B377C6F5D706C575E417436306B564B7136336D4868595235774A3B5F223D5B264538(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01549_low_cardinality_mv_fuzz.sql from pid=1718' 
CREATE TABLE test_01193_18429.table_6_602 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP DATABASE IF EXISTS test_jmpqx80k 
INSERT INTO test_01193_18429.table_7_275 VALUES 
INSERT INTO test_01193_18429.table_10_88 VALUES 
CREATE DATABASE IF NOT EXISTS test_2uvtn840 
SELECT 'Running test stateless/01660_join_or_any.sql from pid=1724' 
SELECT arrayJoin(CAST(['hello', 'world'] AS Array(FixedString(5)))) LIKE '%hell_';
SELECT * FROM test_nullable_02099 FORMAT TSVRaw
INSERT INTO test_01193_18429.table_9_209 VALUES 
SELECT materialize(toDecimal32(1, 2)) / CAST(materialize(1), 'Nullable(UInt32)');
select if(1, [cast(materialize(2.0),'Decimal(18,10)')], [cast(materialize(1.0),'Decimal(18,10)')]);
INSERT INTO test_01193_18429.table_9_739 VALUES 
DROP DATABASE IF EXISTS test_5fdm9xnx 
CREATE TABLE `02681_undrop_uuid` UUID '71fdc476-7783-4739-9281-7101b727dc42' ON CLUSTER test_shard_localhost (`id` Int32) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 9667, min_bytes_for_wide_part = 831911023, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 22148, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 644730, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 15247845, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 62697, primary_key_compress_block_size = 61738
create table nested_map (d default today(), k UInt64, payload default rand(), SomeMap Nested(ID String, Num Int64)) engine=SummingMergeTree(d, k, 8192);
CREATE TABLE test_344738553E6D395825342F5C3D2056285226354A743C266E3A5232787535233C463B587325576078(x UInt8) Engine=Memory;
system stop replicated sends rmt1;
SELECT CASE WHEN (number % 2) = 0 THEN toInt64(1) WHEN (number % 3) = 0 THEN toUInt8(2) ELSE toUInt32(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_37583B717422516D3156385A36752B25475D5D597323746220796B732D606B684728595736206A7A(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_9_519 VALUES 
SELECT dictHas('01681_database_for_cache_dictionary.cache_dictionary_simple_key_simple_attributes', number) FROM system.numbers LIMIT 4;
SELECT res FROM (SELECT col1, assumeNotNull(col1) AS res FROM test1_00395) WHERE col1 IS NOT NULL ORDER BY res ASC;
SELECT number, neighbor(toString(number), -5, concat('World ', toString(number))) FROM numbers(10);
INSERT INTO TABLE 02165_in_tb FROM INFILE '/tmp/clickhouse-test/0_stateless/test_meka8o97/museum...JSONEachRow';
CREATE TABLE test_01193_18429.table_4_127 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select accurateCastOrNull('192.0.2.1x', 'IPv4');
CREATE TABLE test_01193_18429.table_3_320 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
insert into function hdfs('hdfs://localhost:12222/02368_data_2.jsonl') select range(number % 1000) from numbers(100000) settings hdfs_truncate_on_insert=1, output_format_parallel_formatting=0
select 0 = multiSearchAny(materialize('fdkmtqmxnegwvnjhghjq'), ['vynkybvdmhgeezybbdqfrukibisj', 'knazzamgjjpavwhvdkwigykh', 'peumnifrmdhhmrqqnemw', 'lmsnyvqoisinlaqobxojlwfbi', 'oqwfzs', 'dymudxxeodwjpgbibnkvr', 'vomtfsnizkplgzktqyoiw', 'yoyfuhlpgrzds', 'cefao', 'gi', 'srpgxfjwl', 'etsjusdeiwbfe', 'ikvtzdopxo', 'ljfkavrau', 'soqdhxtenfrkmeic', 'ktprjwfcelzbup', 'pcvuoddqwsaurcqdtjfnczekwni', 'agkqkqxkfbkfgyqliahsljim']) from system.numbers limit 10;
DROP TEMPORARY TABLE table_merge_tree_02525;
SELECT multiIf((number % 2) = 0, toInt16(1), (number % 3) = 0, toFloat32(2), toFloat32(3)) FROM system.numbers LIMIT 10;
SELECT '127.0.0.1';
INSERT INTO storage(UserID) values 
SELECT 'Running test stateless/01600_detach_permanently.sh from pid=1705' 
DROP TABLE IF EXISTS test_infile_url
SELECT DISTINCT eq FROM ( WITH range(2 + number % 10) AS arr, -- minimum two elements, to avoid nan result -- arrayMap(x -> x = intDiv(number, 10) ? nan : x, arr) AS arr_with_nan, arrayFilter(x -> x != intDiv(number, 10), arr) AS arr_filtered SELECT number, arrayReduce('quantileExact', arr_with_nan) AS q1, arrayReduce('quantileExact', arr_filtered) AS q2, q1 = q2 AS eq FROM numbers(100) );
CREATE TABLE test_01193_18429.table_10_707 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT toUInt64(round(exp10(number))) AS x, toString(x) AS s FROM system.numbers LIMIT 10 FORMAT PrettySpace;
SELECT 'Running test stateless/01605_drop_settings_profile_while_assigned.sql from pid=1713' 
DROP TABLE IF EXISTS t_in_tuple_index;
SET optimize_throw_if_noop=1;
CREATE TABLE test_65545E4E76212E775924455571297E76253A5A342E617B572E374C25574E35722C41793B66647235(x UInt8) Engine=Memory;
INSERT INTO test_00616 VALUES 
CREATE TABLE test_5C3247292E39546C4C2759372E5474562147716A5E6F7E26766A5D7B28464449462A28674050606B(x UInt8) Engine=Memory;
EXPLAIN SELECT DISTINCT * FROM ( SELECT DISTINCT * FROM VALUES('Hello', 'World', 'Goodbye') ) AS words ARRAY JOIN [0, 1] AS arr ORDER BY c1, arr
SELECT 'Running test stateless/02111_with_fill_no_rows.sql from pid=1726' 
drop table if exists t_00818;
INSERT INTO test_02908_r1_126 SELECT rand64() FROM numbers(5);
drop table if exists shard_1.t_different_dbs;
INSERT INTO test_01193_18429.table_10_986 VALUES 
SELECT decodeURLComponent(fragment('//paul@127.0.0.1/?query=hello%20world+foo%2Bbar#a=b'));
SELECT uniqExact(key) == 32 FROM (SELECT * FROM 02416_test LIMIT 32 SETTINGS max_block_size = 1);
SELECT 'Running test stateless/00757_enum_defaults.sql from pid=1722' 
DROP DATABASE IF EXISTS test_uhe8d4zp 
CREATE TABLE test_01193_18429.table_5_282 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE DATABASE IF NOT EXISTS test_bhzk39rk 
EXPLAIN QUERY TREE (SELECT sum(decimal32 - 2) + sum(decimal32 - 3) From test_table);
alter table many_mutations delete where y = 569 * 2 settings mutations_sync = 0;
CREATE TABLE test_02908_r1_193 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_193', 'r1') ORDER BY tuple()
INSERT INTO TABLE test_compression_keyword FROM INFILE '/tmp/clickhouse-test/0_stateless/test_cnrzwo8n/test_comp_for_input_and_output.gz' COMPRESSION 'gz' FORMAT TabSeparated;
CREATE TABLE test_256454624D6F5237605B6E58395A68684951543F644442514F2F7336466C62795C303A5F29705C7A(x UInt8) Engine=Memory;
INSERT INTO r5 SELECT 96 % 10 = 5 ? 96 - 1 : 96
INSERT INTO test_01193_18429.table_2_182 VALUES 
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 841, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT '24' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:fff8::')))
DROP DATABASE IF EXISTS test_at3wf2m5 
select count() from test group by _file order by _file settings optimize_group_by_constant_keys=1, enable_software_prefetch_in_aggregation=0, compile_aggregate_expressions=1;
DROP DATABASE IF EXISTS test_b279cvra 
ALTER TABLE concurrent_alter_column ADD COLUMN c420 DOUBLE;
CREATE TABLE test_01193_18429.table_2_156 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT reinterpretAsUInt32(NULL);
INSERT INTO test_01193_18429.table_8_961 VALUES 
SELECT arrayDistinct(materialize([0, 1, NULL, 0])) FROM numbers(2);
CREATE TABLE storage_join_race (x UInt64, y UInt64) Engine = Join(ALL, FULL, x);
SELECT `UserID` FROM `test_c5zukzwt`.`users` WHERE `UserID` IN ((SELECT arrayJoin([1468013291393583084, 1321770221388956068])) AS `_subquery3767`)
INSERT INTO src VALUES /* (94, 2) */ 
CREATE TABLE test_01193_18429.table_4_66 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT max(id) FROM bloom_filter WHERE hasToken(s, 'abcabcabcabcabcabcabcab\0');
CREATE TABLE mv_target (`a` UInt64) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 46701, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.9197466373443604, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 4063, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 13, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 25492633, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 71886, primary_key_compress_block_size = 23767
CREATE ROW POLICY user_policy_1 ON user_data FOR SELECT USING userID = 1 TO user_role_1
CREATE TABLE test_01193_18429.table_9_978 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT geohashEncode(NULL, NULL);
SELECT a > toFloat64(0) FROM decimal ORDER BY a;
drop table if exists rate_test2;
INSERT INTO cool_table SELECT number, range(number), arrayMap(x -> (arrayMap(y -> 'k' || toString(y), range(x % 4)), range(x % 4))::Map(LowCardinality(String), UInt64), range(number)) FROM numbers(10);
DROP FUNCTION IF EXISTS 02483_plusone;
alter table data_01900_1 update s = 'foo_77' where 1;
SELECT dictGet('range_dictionary', 'value', toUInt64(1), toDate('2019-05-15'));
SELECT getSetting('custom_compound.identifier.v1') as v, toTypeName(v);
CREATE TABLE test_4853563C4960276B432876674D336E5A292B2465526369434E4626587C604D3A5D5D576762312877(x UInt8) Engine=Memory;
SELECT CAST('{"x" : [ {} , [ 1 , [2]] ]}', 'Object(\'json\')');
INSERT INTO test_01193_18429.table_6_810 VALUES 
DROP DATABASE IF EXISTS test_raqy367q 
ALTER TABLE concurrent_alter_column ADD COLUMN c56 DOUBLE;
SELECT toDecimal256OrNull ('\0', 4);
CREATE INDEX idx_tab4_0 ON tab4 (col3);
DROP DATABASE IF EXISTS test_brpdkn17 
CREATE TABLE test_01193_18429.table_1_412 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO src VALUES /* (81, 2) */ 
CREATE TABLE test_4E3B74263A4562693B257C7E646B502E703D727E38214C76342C322C4A54315A3D3C33392D714A46(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_7_281 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_2_201 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT `dummy` IN ((SELECT 0) AS `_subquery3041`) FROM `system`.`one`
CREATE TABLE test_5F6F473E30432525464F3C5D632A442E784028334D6D3B797974586823402F6A3C404C7D2F425B47(x UInt8) Engine=Memory;
SELECT *, toTypeName(t1.id), toTypeName(t3.id) FROM t1_00848 t1 FULL JOIN t3_00848 t3 USING(id) ORDER BY t1.id, t3.id;
DROP TABLE IF EXISTS cast2;
SELECT bitmapMin(bitmapBuild(emptyArrayUInt16()));
CREATE TABLE test_01193_18429.table_4_879 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT dateDiff('second', toDateTime('2014-10-26 00:00:00', 'Asia/Istanbul'), toDateTime('2014-10-27 00:00:00', 'Asia/Istanbul'));
SELECT countDigits(CAST(CAST(-1 AS UInt128) DIV 2 + 1 AS Int128));
CREATE TABLE test_5D2F71377646484F40776D7A23286870525A522E41504F6F2E576A50234F29444C4440652C2E584A(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00980_shard_aggregation_state_deserialization.sql from pid=1713' 
SELECT sum(Sign), count() from collapsing_suspicious_granularity;
CREATE TABLE test_01193_18429.table_4_660 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_8_885 VALUES 
CREATE FUNCTION 02125_function AS x -> 02125_function(x);
DROP DATABASE IF EXISTS test_75co7x1q 
select (1 ? (toUInt64(0) as i) : toUInt32(1)) = i;
SYSTEM SYNC REPLICA fetches_r1
DROP TABLE IF EXISTS concat_nested_test;
SELECT h3GetOriginIndexFromUnidirectionalEdge(1248204388774707199);
SELECT 'dictGetOrDefault non existing value';
SELECT dotProduct([12, 2.22, 302], [1.32, 231.2, 11.1]);
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), N <= toInt64(-1) as r FORMAT CSV;
CREATE TABLE test_02908_r1_59 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_59', 'r1') ORDER BY tuple()
CREATE TABLE test_4171494D3571697B612F38497A2B2455264F7A655C4B3C25313E7A274D406F2F276A7974212E3F5E(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_5_286 VALUES 
SELECT dateDiff('day', toDate('2017-12-31'), toDate('2016-01-01'));
SELECT COUNT() FROM bloom_filter_array_lc_null_types_test WHERE has(u32, NULL);
INSERT INTO test_01193_18429.table_9_478 VALUES 
drop table data_01223;
INSERT INTO test_01193_18429.table_5_626 VALUES 
CREATE TABLE test_2935554F71636B646D756658274268465E587152623F772720662E6F4A502D24527E5D353739405D(x UInt8) Engine=Memory;
INSERT INTO src_0 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 19
SELECT Y, uniqCombined(12)(X) FROM (SELECT number AS X, (3*X*X - 7*X + 11) % 37 AS Y FROM system.numbers LIMIT 1000000) GROUP BY Y ORDER BY Y;
SELECT 'toStartOfYear;toDateTime64;false', toStartOfYear(toDateTime64('1920-02-02 10:20:30', 3)) SETTINGS enable_extended_results_for_datetime_functions = false;
SELECT toFloat64(9999.99999999999999) as x, toDecimal128(x, 14), toDecimal128(-x, 14);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (11 < 61 AND 38 > 0 ? 11 : 0)), throwIf(last != (11 < 61 AND 38 > 0 ? least(61 - 1, 11 + 38 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(61) LIMIT 11, 38);
select arraySlice(s, l, -2) from t;
SELECT * FROM replicated_alter1 ORDER BY k;
DROP TABLE hierarchy_source_table;
SELECT 'tn1 ALL INNER JOIN tn2 | bs = 5';
alter table cc attach part 'all_1_1_0';
SELECT count() FROM t_cnf_fuzz WHERE (c2) OR (c5 AND (NOT c7)) OR (c3 AND c6 AND (NOT c5) AND (NOT c8)) OR ((NOT c7) AND (NOT c2) AND c3 AND c8 AND c4) OR ((NOT c6) AND c8) OR (c2 AND c1) OR ((NOT c1) AND (NOT c1) AND (NOT c0) AND c8 AND c1) OR (c6 AND (NOT c9)) OR (c9 AND c9 AND c0 AND (NOT c9) AND (NOT c0)) SETTINGS convert_query_to_cnf = 0
select hex(sipHash128ReferenceKeyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26)));
select if(number % 5 == 0, toInt32OrZero(toString(number)), toInt32OrZero(toString(number + 1))) from numbers(20);
SELECT 'Running test stateless/00834_not_between.sql from pid=1713' 
SELECT '||---IDENTIFIER---';
DROP TABLE arrow_dicts
drop user u_02311
SELECT toFloat32OrDefault(-1);
insert into test_ins_arr_arr_null select toDate('2017-10-02'), [[1, Null, number], [3, Null, number]] from system.numbers limit 10000;
CREATE TABLE test_22737B2D7529266F28775A4F22334E212E21336B7B313B3B3C413C55355A4F515678302470742744(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS tabl_2;
CREATE TABLE `02763_merge_merge_2` (`x` UInt8, `y` UInt64) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 3408, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 17490, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 71, min_merge_bytes_to_use_direct_io = 184824006, index_granularity_bytes = 12011169, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 32117, primary_key_compress_block_size = 78052
CREATE DATABASE IF NOT EXISTS test_kbi37t4y 
SELECT globalNotNullInIgnoreSet(NULL, NULL);
drop table if exists dist_01756_column;
CREATE DATABASE IF NOT EXISTS test_k4izim26 
SELECT 'Running test stateless/01291_geo_types.sql from pid=1715' 
select min(j) from has_final_mark;
SELECT arrayFill(x -> 1, [1, 2, 3, 11, 12, 13, 4, 5, 6, 14, 15, 16]);
CREATE TABLE test_4938655B7E7E6B4627213B3D4D59603C42565328414A743865312B7E6C48445B557672704A63335F(x UInt8) Engine=Memory;
CREATE INDEX idx_tab2_1 ON tab2 (col1,col0);
CREATE TABLE r (`ruid` Nullable(Int16), `name` String) ENGINE = MergeTree ORDER BY ruid SETTINGS allow_nullable_key = 1, index_granularity = 13841, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 10537, prefer_fetch_merged_part_size_threshold = 3447900109, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 13282085, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 20638, primary_key_compress_block_size = 31324 AS SELECT * FROM VALUES((1231, 'John'), (1232, 'Johny'))
CREATE TABLE t0 (`x` UInt32, `y` UInt64) ENGINE = MergeTree ORDER BY (x, y) SETTINGS index_granularity = 29622, min_bytes_for_wide_part = 431703741, ratio_of_defaults_for_sparse_serialization = 0.9879958033561707, replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 21036, prefer_fetch_merged_part_size_threshold = 10065256742, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 3647319187, index_granularity_bytes = 17566996, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 14999, primary_key_compress_block_size = 93433
INSERT INTO test_01193_18429.table_10_346 VALUES 
SELECT 'Running test stateless/01114_alter_modify_compact_parts.sql from pid=1722' 
SELECT Title, round(1000 * distance) FROM test_distance ORDER BY ngramDistanceCaseInsensitive(Title, 'BigMIR') as distance, Title;
INSERT INTO test_01193_18429.table_9_50 VALUES 
CREATE TABLE test_01193_18429.table_7_574 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE DATABASE IF NOT EXISTS test_lyrv2n8y 
CREATE TABLE src_b (v UInt64) ENGINE = Null;
SELECT -0, toTypeName(-0), -1, toTypeName(-1), -0., toTypeName(-0.);
INSERT INTO r7 SELECT 96
CREATE TABLE test_534426304F67685F497D73495A2055314865504E44377C3D2131325178392F75552A20433E2A7C5C(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_10_99 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_3B6B347E40575120672A667970667C702852526138605B21604D6435295F7D692B452C275957524F(x UInt8) Engine=Memory;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 32813, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE TABLE test_01193_18429.table_4_445 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
ALTER TABLE t_sparse_alter DROP COLUMN s, RENAME COLUMN u TO t;
DROP DATABASE IF EXISTS test_ttdw3mpn 
CREATE DATABASE IF NOT EXISTS test_xg2v4fyl 
select 1 = position('abcdefgh', materialize('abc')) from system.numbers limit 129;
SELECT `EventDate` FROM `test_222j7fh2`.`open_events_tmp` AS `t2` WHERE (`EventDate` <= toDate('2020-07-12')) AND (`APIKey` = 2) GROUP BY `EventDate` WITH TOTALS
CREATE DATABASE IF NOT EXISTS test_a14l5cce 
alter table many_mutations delete where y = 130 * 2 settings mutations_sync = 0;
CREATE TABLE test_3B7B5D3E54275461415D43472778245E76536A5C4836537D4A27633E4C636E652328424B6B4F3F61(x UInt8) Engine=Memory;
SELECT dictGetString(concat('test_vaepqvz9', '.dict'), 'value_default', toUInt64(14))
SELECT 0, 12, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (0 < 13 AND 12 > 0 ? 0 : 0)), throwIf(last != (0 < 13 AND 12 > 0 ? least(13 - 1, 0 + 12 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 0, 12);
INSERT INTO test_01193_18429.table_1_89 VALUES 
SELECT DATE(-1);
SELECT 128, -127, 128 = -127, 128 != -127, 128 < -127, 128 <= -127, 128 > -127, 128 >= -127, -127 = 128, -127 != 128, -127 < 128, -127 <= 128, -127 > 128, -127 >= 128 , toUInt8(128) = toInt8(-127), toUInt8(128) != toInt8(-127), toUInt8(128) < toInt8(-127), toUInt8(128) <= toInt8(-127), toUInt8(128) > toInt8(-127), toUInt8(128) >= toInt8(-127), toInt8(-127) = toUInt8(128), toInt8(-127) != toUInt8(128), toInt8(-127) < toUInt8(128), toInt8(-127) <= toUInt8(128), toInt8(-127) > toUInt8(128), toInt8(-127) >= toUInt8(128) , toUInt8(128) = toInt16(-127), toUInt8(128) != toInt16(-127), toUInt8(128) < toInt16(-127), toUInt8(128) <= toInt16(-127), toUInt8(128) > toInt16(-127), toUInt8(128) >= toInt16(-127), toInt16(-127) = toUInt8(128), toInt16(-127) != toUInt8(128), toInt16(-127) < toUInt8(128), toInt16(-127) <= toUInt8(128), toInt16(-127) > toUInt8(128), toInt16(-127) >= toUInt8(128) , toUInt8(128) = toInt32(-127), toUInt8(128) != toInt32(-127), toUInt8(128) < toInt32(-127), toUInt8(128) <= toInt32(-127), toUInt8(128) > toInt32(-127), toUInt8(128) >= toInt32(-127), toInt32(-127) = toUInt8(128), toInt32(-127) != toUInt8(128), toInt32(-127) < toUInt8(128), toInt32(-127) <= toUInt8(128), toInt32(-127) > toUInt8(128), toInt32(-127) >= toUInt8(128) , toUInt8(128) = toInt64(-127), toUInt8(128) != toInt64(-127), toUInt8(128) < toInt64(-127), toUInt8(128) <= toInt64(-127), toUInt8(128) > toInt64(-127), toUInt8(128) >= toInt64(-127), toInt64(-127) = toUInt8(128), toInt64(-127) != toUInt8(128), toInt64(-127) < toUInt8(128), toInt64(-127) <= toUInt8(128), toInt64(-127) > toUInt8(128), toInt64(-127) >= toUInt8(128) , toUInt16(128) = toInt8(-127), toUInt16(128) != toInt8(-127), toUInt16(128) < toInt8(-127), toUInt16(128) <= toInt8(-127), toUInt16(128) > toInt8(-127), toUInt16(128) >= toInt8(-127), toInt8(-127) = toUInt16(128), toInt8(-127) != toUInt16(128), toInt8(-127) < toUInt16(128), toInt8(-127) <= toUInt16(128), toInt8(-127) > toUInt16(128), toInt8(-127) >= toUInt16(128) , toUInt16(128) = toInt16(-127), toUInt16(128) != toInt16(-127), toUInt16(128) < toInt16(-127), toUInt16(128) <= toInt16(-127), toUInt16(128) > toInt16(-127), toUInt16(128) >= toInt16(-127), toInt16(-127) = toUInt16(128), toInt16(-127) != toUInt16(128), toInt16(-127) < toUInt16(128), toInt16(-127) <= toUInt16(128), toInt16(-127) > toUInt16(128), toInt16(-127) >= toUInt16(128) , toUInt16(128) = toInt32(-127), toUInt16(128) != toInt32(-127), toUInt16(128) < toInt32(-127), toUInt16(128) <= toInt32(-127), toUInt16(128) > toInt32(-127), toUInt16(128) >= toInt32(-127), toInt32(-127) = toUInt16(128), toInt32(-127) != toUInt16(128), toInt32(-127) < toUInt16(128), toInt32(-127) <= toUInt16(128), toInt32(-127) > toUInt16(128), toInt32(-127) >= toUInt16(128) , toUInt16(128) = toInt64(-127), toUInt16(128) != toInt64(-127), toUInt16(128) < toInt64(-127), toUInt16(128) <= toInt64(-127), toUInt16(128) > toInt64(-127), toUInt16(128) >= toInt64(-127), toInt64(-127) = toUInt16(128), toInt64(-127) != toUInt16(128), toInt64(-127) < toUInt16(128), toInt64(-127) <= toUInt16(128), toInt64(-127) > toUInt16(128), toInt64(-127) >= toUInt16(128) , toInt16(128) = toInt8(-127), toInt16(128) != toInt8(-127), toInt16(128) < toInt8(-127), toInt16(128) <= toInt8(-127), toInt16(128) > toInt8(-127), toInt16(128) >= toInt8(-127), toInt8(-127) = toInt16(128), toInt8(-127) != toInt16(128), toInt8(-127) < toInt16(128), toInt8(-127) <= toInt16(128), toInt8(-127) > toInt16(128), toInt8(-127) >= toInt16(128) , toInt16(128) = toInt16(-127), toInt16(128) != toInt16(-127), toInt16(128) < toInt16(-127), toInt16(128) <= toInt16(-127), toInt16(128) > toInt16(-127), toInt16(128) >= toInt16(-127), toInt16(-127) = toInt16(128), toInt16(-127) != toInt16(128), toInt16(-127) < toInt16(128), toInt16(-127) <= toInt16(128), toInt16(-127) > toInt16(128), toInt16(-127) >= toInt16(128) , toInt16(128) = toInt32(-127), toInt16(128) != toInt32(-127), toInt16(128) < toInt32(-127), toInt16(128) <= toInt32(-127), toInt16(128) > toInt32(-127), toInt16(128) >= toInt32(-127), toInt32(-127) = toInt16(128), toInt32(-127) != toInt16(128), toInt32(-127) < toInt16(128), toInt32(-127) <= toInt16(128), toInt32(-127) > toInt16(128), toInt32(-127) >= toInt16(128) , toInt16(128) = toInt64(-127), toInt16(128) != toInt64(-127), toInt16(128) < toInt64(-127), toInt16(128) <= toInt64(-127), toInt16(128) > toInt64(-127), toInt16(128) >= toInt64(-127), toInt64(-127) = toInt16(128), toInt64(-127) != toInt16(128), toInt64(-127) < toInt16(128), toInt64(-127) <= toInt16(128), toInt64(-127) > toInt16(128), toInt64(-127) >= toInt16(128) , toUInt32(128) = toInt8(-127), toUInt32(128) != toInt8(-127), toUInt32(128) < toInt8(-127), toUInt32(128) <= toInt8(-127), toUInt32(128) > toInt8(-127), toUInt32(128) >= toInt8(-127), toInt8(-127) = toUInt32(128), toInt8(-127) != toUInt32(128), toInt8(-127) < toUInt32(128), toInt8(-127) <= toUInt32(128), toInt8(-127) > toUInt32(128), toInt8(-127) >= toUInt32(128) , toUInt32(128) = toInt16(-127), toUInt32(128) != toInt16(-127), toUInt32(128) < toInt16(-127), toUInt32(128) <= toInt16(-127), toUInt32(128) > toInt16(-127), toUInt32(128) >= toInt16(-127), toInt16(-127) = toUInt32(128), toInt16(-127) != toUInt32(128), toInt16(-127) < toUInt32(128), toInt16(-127) <= toUInt32(128), toInt16(-127) > toUInt32(128), toInt16(-127) >= toUInt32(128) , toUInt32(128) = toInt32(-127), toUInt32(128) != toInt32(-127), toUInt32(128) < toInt32(-127), toUInt32(128) <= toInt32(-127), toUInt32(128) > toInt32(-127), toUInt32(128) >= toInt32(-127), toInt32(-127) = toUInt32(128), toInt32(-127) != toUInt32(128), toInt32(-127) < toUInt32(128), toInt32(-127) <= toUInt32(128), toInt32(-127) > toUInt32(128), toInt32(-127) >= toUInt32(128) , toUInt32(128) = toInt64(-127), toUInt32(128) != toInt64(-127), toUInt32(128) < toInt64(-127), toUInt32(128) <= toInt64(-127), toUInt32(128) > toInt64(-127), toUInt32(128) >= toInt64(-127), toInt64(-127) = toUInt32(128), toInt64(-127) != toUInt32(128), toInt64(-127) < toUInt32(128), toInt64(-127) <= toUInt32(128), toInt64(-127) > toUInt32(128), toInt64(-127) >= toUInt32(128) , toInt32(128) = toInt8(-127), toInt32(128) != toInt8(-127), toInt32(128) < toInt8(-127), toInt32(128) <= toInt8(-127), toInt32(128) > toInt8(-127), toInt32(128) >= toInt8(-127), toInt8(-127) = toInt32(128), toInt8(-127) != toInt32(128), toInt8(-127) < toInt32(128), toInt8(-127) <= toInt32(128), toInt8(-127) > toInt32(128), toInt8(-127) >= toInt32(128) , toInt32(128) = toInt16(-127), toInt32(128) != toInt16(-127), toInt32(128) < toInt16(-127), toInt32(128) <= toInt16(-127), toInt32(128) > toInt16(-127), toInt32(128) >= toInt16(-127), toInt16(-127) = toInt32(128), toInt16(-127) != toInt32(128), toInt16(-127) < toInt32(128), toInt16(-127) <= toInt32(128), toInt16(-127) > toInt32(128), toInt16(-127) >= toInt32(128) , toInt32(128) = toInt32(-127), toInt32(128) != toInt32(-127), toInt32(128) < toInt32(-127), toInt32(128) <= toInt32(-127), toInt32(128) > toInt32(-127), toInt32(128) >= toInt32(-127), toInt32(-127) = toInt32(128), toInt32(-127) != toInt32(128), toInt32(-127) < toInt32(128), toInt32(-127) <= toInt32(128), toInt32(-127) > toInt32(128), toInt32(-127) >= toInt32(128) , toInt32(128) = toInt64(-127), toInt32(128) != toInt64(-127), toInt32(128) < toInt64(-127), toInt32(128) <= toInt64(-127), toInt32(128) > toInt64(-127), toInt32(128) >= toInt64(-127), toInt64(-127) = toInt32(128), toInt64(-127) != toInt32(128), toInt64(-127) < toInt32(128), toInt64(-127) <= toInt32(128), toInt64(-127) > toInt32(128), toInt64(-127) >= toInt32(128) , toUInt64(128) = toInt8(-127), toUInt64(128) != toInt8(-127), toUInt64(128) < toInt8(-127), toUInt64(128) <= toInt8(-127), toUInt64(128) > toInt8(-127), toUInt64(128) >= toInt8(-127), toInt8(-127) = toUInt64(128), toInt8(-127) != toUInt64(128), toInt8(-127) < toUInt64(128), toInt8(-127) <= toUInt64(128), toInt8(-127) > toUInt64(128), toInt8(-127) >= toUInt64(128) , toUInt64(128) = toInt16(-127), toUInt64(128) != toInt16(-127), toUInt64(128) < toInt16(-127), toUInt64(128) <= toInt16(-127), toUInt64(128) > toInt16(-127), toUInt64(128) >= toInt16(-127), toInt16(-127) = toUInt64(128), toInt16(-127) != toUInt64(128), toInt16(-127) < toUInt64(128), toInt16(-127) <= toUInt64(128), toInt16(-127) > toUInt64(128), toInt16(-127) >= toUInt64(128) , toUInt64(128) = toInt32(-127), toUInt64(128) != toInt32(-127), toUInt64(128) < toInt32(-127), toUInt64(128) <= toInt32(-127), toUInt64(128) > toInt32(-127), toUInt64(128) >= toInt32(-127), toInt32(-127) = toUInt64(128), toInt32(-127) != toUInt64(128), toInt32(-127) < toUInt64(128), toInt32(-127) <= toUInt64(128), toInt32(-127) > toUInt64(128), toInt32(-127) >= toUInt64(128) , toUInt64(128) = toInt64(-127), toUInt64(128) != toInt64(-127), toUInt64(128) < toInt64(-127), toUInt64(128) <= toInt64(-127), toUInt64(128) > toInt64(-127), toUInt64(128) >= toInt64(-127), toInt64(-127) = toUInt64(128), toInt64(-127) != toUInt64(128), toInt64(-127) < toUInt64(128), toInt64(-127) <= toUInt64(128), toInt64(-127) > toUInt64(128), toInt64(-127) >= toUInt64(128) , toInt64(128) = toInt8(-127), toInt64(128) != toInt8(-127), toInt64(128) < toInt8(-127), toInt64(128) <= toInt8(-127), toInt64(128) > toInt8(-127), toInt64(128) >= toInt8(-127), toInt8(-127) = toInt64(128), toInt8(-127) != toInt64(128), toInt8(-127) < toInt64(128), toInt8(-127) <= toInt64(128), toInt8(-127) > toInt64(128), toInt8(-127) >= toInt64(128) , toInt64(128) = toInt16(-127), toInt64(128) != toInt16(-127), toInt64(128) < toInt16(-127), toInt64(128) <= toInt16(-127), toInt64(128) > toInt16(-127), toInt64(128) >= toInt16(-127), toInt16(-127) = toInt64(128), toInt16(-127) != toInt64(128), toInt16(-127) < toInt64(128), toInt16(-127) <= toInt64(128), toInt16(-127) > toInt64(128), toInt16(-127) >= toInt64(128) , toInt64(128) = toInt32(-127), toInt64(128) != toInt32(-127), toInt64(128) < toInt32(-127), toInt64(128) <= toInt32(-127), toInt64(128) > toInt32(-127), toInt64(128) >= toInt32(-127), toInt32(-127) = toInt64(128), toInt32(-127) != toInt64(128), toInt32(-127) < toInt64(128), toInt32(-127) <= toInt64(128), toInt32(-127) > toInt64(128), toInt32(-127) >= toInt64(128) , toInt64(128) = toInt64(-127), toInt64(128) != toInt64(-127), toInt64(128) < toInt64(-127), toInt64(128) <= toInt64(-127), toInt64(128) > toInt64(-127), toInt64(128) >= toInt64(-127), toInt64(-127) = toInt64(128), toInt64(-127) != toInt64(128), toInt64(-127) < toInt64(128), toInt64(-127) <= toInt64(128), toInt64(-127) > toInt64(128), toInt64(-127) >= toInt64(128) 
INSERT INTO r10 SELECT 6 % 10 = 10 ? 6 - 1 : 6
CREATE DATABASE IF NOT EXISTS test_43yo8nw0 
CREATE TABLE test_01193_18429.table_5_109 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_akvppkez 
CREATE TABLE simple_key_hierarchy_table ( id UInt64, parent_id UInt64 ) ENGINE = TinyLog();
CREATE TABLE test_01193_18429.table_6_582 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO versioned_collapsing_merge_tree VALUES 
CREATE TABLE test_01193_18429.table_7_700 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE INDEX idx_tab3_0 ON tab3 (col3,col1,col0 DESC,col4);
INSERT INTO test_01193_18429.table_1_641 VALUES 
CREATE TABLE test_01193_18429.table_8_907 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
insert into t_00575 values 
CREATE DATABASE IF NOT EXISTS test_b34zztuf 
CREATE TABLE test_01193_18429.table_3_978 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT readWKTPoint(s) FROM geo ORDER BY id;
SELECT xor(1, 0);
CREATE TABLE test_01193_18429.table_9_302 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT nan as x, not(x), not(not(x)), (not(x)) IS NULL SETTINGS allow_experimental_analyzer=0;
SET format_csv_allow_single_quotes=0;
CREATE TABLE test_7132413F7A26212F5F2E2643567C7460507E2E79303774702138657D5778574D457C7C4831385E23(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_1_440 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT count(7 = (SELECT number FROM numbers(0) ORDER BY number ASC NULLS FIRST LIMIT 7)) FROM xp_d PREWHERE toYYYYMM(A) GLOBAL IN (SELECT NULL = (SELECT number FROM numbers(1) ORDER BY number DESC NULLS LAST LIMIT 1), toYYYYMM(min(A)) FROM xp_d) WHERE B > NULL FORMAT Null;
SELECT t.database, t.name FROM system.tables AS t JOIN (SELECT name, name AS database FROM system.databases) AS db ON t.database = db.name WHERE t.database = 'system' AND t.name = 'one' FORMAT PrettyCompactNoEscapes;
SELECT cutToFirstSignificantSubdomainWithWWW('http://www.example.com:1');
SELECT * FROM t1__fuzz_13 FULL OUTER JOIN t2__fuzz_47 ON 1 = 2;
SELECT throwIf((SELECT (count(), sum(n)) FROM merge(currentDatabase(), '') WHERE type=4) != (toUInt8(8/2 + 1), (select sum(number) from numbers(1, 8) where number % 2 or number=8))) FORMAT Null;
SYSTEM SYNC REPLICA test_table_8 LIGHTWEIGHT FROM '7'
SELECT positionCaseInsensitive(NULL, NULL, NULL);
/* toString */ SELECT 'toString';
CREATE ROW POLICY 02131_filter_4 ON 02131_rqtable USING x<=2 AS restrictive TO ALL;
SELECT multiIf((number % 2) = 0, toUInt8(1), (number % 3) = 0, toInt64(2), toUInt32(3)) FROM system.numbers LIMIT 10;
SELECT toFloat64OrDefault(NULL);
SELECT toDateOrDefault(NULL);
SELECT count() = 16386, sumMerge(s) = 16386 FROM aggregating_00155
INSERT INTO r9 SELECT 12
INSERT INTO test_01193_18429.table_5_262 VALUES 
DROP DATABASE IF EXISTS test_o0a87i0l 
CREATE TABLE test_01193_18429.table_8_649 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SET wait_for_async_insert = 0;
CREATE TABLE test_3D79674856723677274A283F4A246E6C7E494339332D4776692265553D56437477763D6F2E565566(x UInt8) Engine=Memory;
CREATE TABLE test_2368657049544E793B365C694875697079326D49583E326962567A5F5D637D687545425C69325765(x UInt8) Engine=Memory;
select interval '1 day' - interval '1 hour';
CREATE TABLE table_01 (`date` Date, `n` Int32) ENGINE = MergeTree PARTITION BY date ORDER BY date SETTINGS index_granularity = 40761, min_bytes_for_wide_part = 249093117, ratio_of_defaults_for_sparse_serialization = 0.5036336183547974, replace_long_file_name_to_hash = true, max_file_name_length = 2, merge_max_block_size = 19818, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 59, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 30705164, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 90193, primary_key_compress_block_size = 40844
INSERT INTO test_01193_18429.table_3_583 VALUES 
select [7] = multiSearchAllPositions(materialize('abcdefgh'), ['gh']) from system.numbers limit 129;
SELECT 'Running test stateless/02508_bad_graphite.sql from pid=1724' 
DROP TABLE derived_metrics_local;
CREATE DATABASE IF NOT EXISTS test_u70rulgx 
SELECT 'Running test stateless/02940_variant_text_deserialization.sql from pid=1718' 
SELECT dummy FROM system.one WHERE (dummy + dummy) >= 0 LIMIT 1 BY (dummy + dummy) + 0 AS l
CREATE TABLE test_01193_18429.table_7_157 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT toTypeName(dotProduct(x, y)) from product_fp32_fp32;
SYSTEM START MERGES dst
select x from (select toDecimal128(3.3, 12) x) group by x;
SELECT CASE WHEN (number % 2) = 0 THEN toInt8(1) WHEN (number % 3) = 0 THEN toUInt16(2) ELSE toUInt32(3) END FROM system.numbers LIMIT 10;
DROP TABLE IF EXISTS merge_item_12
SELECT * FROM (SELECT 1 as a) as t1 LEFT JOIN ( SELECT ('b', 256) as b ) AS t2 ON NULL;
CREATE TABLE test_503C2E28722176746B206135373E6F41307D4D6073242F46566D3926264F48495B596E2844303540(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_7_32 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_6_321 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_max_parallel_replicas_lr select number as timestamp from system.numbers limit 100;
SELECT multiIf((number % 2) = 0, toInt8(1), (number % 3) = 0, toInt64(2), toInt8(3)) FROM system.numbers LIMIT 10;
SELECT SVG([[(0., 0.), (10, 0), (10, 10), (0, 10)], [(4., 4.), (5, 4), (5, 5), (4, 5)]], 'b');
SELECT count() FROM t_cnf_fuzz WHERE (c5 AND (NOT c9) AND c1 AND c1) OR (c7) OR ((NOT c0) AND c0 AND (NOT c3) AND c5) OR (c2 AND c5) OR (c0 AND (NOT c7) AND c0) OR (c5 AND (NOT c2)) OR (c0 AND (NOT c1) AND (NOT c0)) SETTINGS convert_query_to_cnf = 0
DROP TABLE IF EXISTS dict_table;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toUInt8(2), toUInt8(3)] ELSE [toFloat32(3), toFloat32(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE events (`organisation_id` UUID, `session_id` UUID, `id` UUID DEFAULT generateUUIDv4(), `timestamp` UInt64, `payload` String, `customer_id` UUID, `call_id` String, PROJECTION events_by_session_and_org (SELECT * ORDER BY organisation_id, session_id, timestamp), PROJECTION events_by_session (SELECT * ORDER BY session_id, timestamp), PROJECTION events_by_session_and_customer (SELECT * ORDER BY customer_id, session_id, timestamp), PROJECTION events_by_call_id (SELECT * ORDER BY call_id, timestamp)) ENGINE = MergeTree ORDER BY (organisation_id, session_id, timestamp) SETTINGS index_granularity = 3, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.04264167323708534, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 18676, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 578217, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 8805428, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 39599, primary_key_compress_block_size = 81476
DROP DATABASE IF EXISTS test_1g07sip1 
INSERT INTO test_01193_18429.table_5_314 VALUES 
CREATE TABLE test_3571495A5F6F6877632552756B492625734B4A6A6F267B7835317C60635B63522B70392044517061(x UInt8) Engine=Memory;
SELECT * FROM replacing_00682
SELECT age('month', toDate('2017-12-31'), toDate('2016-01-01'));
CREATE TABLE test_4C7B25567D5678232E41682460332779774F374E353B3A47623D68786E5B56675C60383E402B7569(x UInt8) Engine=Memory;
drop table db_01501.table_cache_dict;
create view view1 as with t as (select number n from numbers(3)) select n from t;
CREATE TABLE splitted_nested_protobuf_00825 (`a` String, `b` Int64, `c` Int32, `d` Int32, `e` String, `f` String, `g` String, `h` String, `i` Int32, `j` Int32, `k` Nullable(Int32), `l` Nullable(Int32), `m` String, `sub_1_a` Nullable(Int32), `sub_1_b` Nullable(Int32), `sub_1_c` Nullable(String), `sub_1_d` Nullable(String), `sub_1_e` Nullable(String), `sub_1_f` Nullable(String), `sub_1_g` Nullable(String), `sub_1_h` Nullable(String), `sub_1_i` Nullable(String), `sub_1_j` Nullable(String), `sub_1_k` Nullable(String), `sub_2_a` Nullable(Int32), `sub_2_b` Nullable(String), `sub_2_c` Nullable(Int32), `sub_2_d` Nullable(Int32), `sub_2_e` Nullable(Int32), `sub_2_f` Nullable(Int32), `sub_2_g` Nullable(String), `sub_2_h` Nullable(String), `sub_2_i` Nullable(String), `sub_2_j` Nullable(String), `sub_2_k` Nullable(Int64), `sub_2_l` Nullable(Int64), `n` Int32, `sub_2_random_name` Nullable(String)) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 9664, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.16613715887069702, replace_long_file_name_to_hash = true, max_file_name_length = 54, merge_max_block_size = 11994, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 16334039, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 23961, primary_key_compress_block_size = 92965
INSERT INTO test_01193_18429.table_5_194 VALUES 
SELECT * FROM truncate_test_stripe_log;
SELECT 'Running test stateless/00834_cancel_http_readonly_queries_on_client_close.sh from pid=1705' 
INSERT INTO test_01193_18429.table_6_163 VALUES 
CREATE TABLE test_7731445C5A59307D394F7C5C3861446C27694E453D225E3C69737E4F375D563B7629624F5E22512A(x UInt8) Engine=Memory;
SELECT uniqUpTo(3)(x) FROM (SELECT arrayJoin([[], ['a'], ['a', NULL, 'b'], []]) AS x);
INSERT INTO test_01193_18429.table_6_206 VALUES 
SELECT 'Running test stateless/02126_identity_user_defined_function.sql from pid=1705' 
SELECT 'Running test stateless/02517_uuid_parsing.sql from pid=1718' 
DROP DATABASE test_hllqnldx
CREATE TABLE test_01193_18429.table_9_540 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_4_637 VALUES 
SELECT 'First JOIN RIGHT second JOIN INNER';
CREATE TABLE test_01193_18429.table_8_712 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT subtractDays(NULL);
INSERT INTO test_01193_18429.table_1_897 VALUES 
CREATE DATABASE IF NOT EXISTS test_isydeyvg 
SELECT * FROM (SELECT 1 AS a, 'x' AS b) full join (SELECT 1 as a, 'y' as b) using a;
select _shard_num from dist_01527 where key=1;
CREATE TABLE test_6F2A3466455D4A4233587B20663248477C784B58714F573947764A72377E5F30472D523F655B634D(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS huge_granularity_small_blocks;
DROP TABLE IF EXISTS 02526_keeper_map;
CREATE TABLE test_01193_18429.table_4_512 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
show tables from db_01517_atomic_sync;
SELECT arrayJoin(['hello', 'world']) LIKE 'orld';
select (select sum(cityHash64(*)) from nullables_02735) - (select sum(cityHash64(*)) from file(nullables_02735.parquet));
SELECT dictGet('ip_trie_dictionary', 'decimal_value', tuple(IPv4StringToNum('127.0.0.0')));
KILL MUTATION WHERE mutation_id='0000000005' and table like 'concurrent_kill_%' and database='test_bc61bq8k'
SELECT 'Running test stateless/01940_totimezone_operator_monotonicity.sql from pid=1713' 
CREATE TABLE test_766F5B472A6C4B4B2923372431546B4B2C447A2A7C51326A48354F7C66383E7238467D51512D3028(x UInt8) Engine=Memory;
CREATE TABLE alias_2__fuzz_25 (`dt` LowCardinality(Date), `col` DateTime, `col2` Nullable(Int256), `colAlias0` Nullable(DateTime64(3)) ALIAS col, `colAlias3` Nullable(Int32) ALIAS col3 + colAlias0, `colAlias1` LowCardinality(UInt16) ALIAS colAlias0 + col2, `colAlias2` LowCardinality(Int32) ALIAS colAlias0 + colAlias1, `col3` Nullable(UInt8)) ENGINE = MergeTree ORDER BY dt SETTINGS index_granularity = 39231, min_bytes_for_wide_part = 935975676, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 24365, prefer_fetch_merged_part_size_threshold = 10530843646, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 3627385056, index_granularity_bytes = 29354208, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 24968, primary_key_compress_block_size = 34724
CREATE TABLE test_3C3038603D5C464F2B3B784950324B317757384871355E7B2C7640502C22522474573E2674693622(x UInt8) Engine=Memory;
DROP ROW POLICY IF EXISTS 02131_filter_1 ON 02131_rptable;
CREATE TABLE test_mtree (`x` String, INDEX idx x TYPE set(10) GRANULARITY 1) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 4024, min_bytes_for_wide_part = 902678819, ratio_of_defaults_for_sparse_serialization = 0.8010527491569519, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 17463, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 10381680, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 90690, primary_key_compress_block_size = 17453
INSERT INTO dim_model VALUES 
SELECT JSON_QUERY('{"hello 1":1}', '$["hello 1"]');
EXPLAIN QUERY TREE (SELECT sum(float64) - 2 * count(float64) From test_table);
CREATE VIEW test_1602.DATABASE AS SELECT * FROM test_1602.tbl;
SELECT number y, toInt128(number) - y, toInt256(number) - y, toUInt256(number) - y FROM numbers_mt(10) ORDER BY number;
DROP TABLE IF EXISTS queue;
SELECT formatReadableTimeDelta(arrayJoin([inf, -inf, nan]));
INSERT INTO test_vix8ahwv.t_async_insert_02193_1 FORMAT JSONEachRow
SELECT '(forward, head, D)', id, sequenceNextNode('forward', 'head')(dt, action, 1, action = 'D') AS next_node FROM test_sequenceNextNode GROUP BY id ORDER BY id;
INSERT INTO test_01193_18429.table_8_605 VALUES 
CREATE DATABASE IF NOT EXISTS test_rbuc3q6b 
SELECT splitByAlpha('ab.cd.ef.gh', 5) SETTINGS splitby_max_substrings_includes_remaining_string = 1;
insert into tab2 select toDate('2020-02-02') + number, number, number from numbers(4);
SELECT DISTINCT * FROM ( SELECT DISTINCT * FROM ( SELECT DISTINCT * FROM numbers(3) ) )
CREATE TABLE comment_test_table ( k UInt64, s String ) ENGINE = Log COMMENT 'Test table with comment';
CREATE TABLE test_01193_18429.table_4_414 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat32(1), toFloat32(2)] WHEN (number % 3) = 0 THEN [toUInt32(2), toUInt32(3)] ELSE [toInt32(3), toInt32(3)] END FROM system.numbers LIMIT 10;
SELECT 'any left (rev)';
SELECT ignore(NULL, NULL);
DROP DATABASE IF EXISTS test_8bb5aah4 
DROP TABLE unsorted;
SELECT dictGetUInt8(concat('test_8yvdjyfm', '.dict1'), 'second_column', (toUInt64(11), '121'))
CREATE TABLE test_51773F2B67614E2947603C5D5E373A4D69763062537E6F7D3B6857786330262E5A3021415E67436B(x UInt8) Engine=Memory;
CREATE TABLE test_6F7B637E5B4C4B3E4F35743E5B6C235D3844516340492875396A73314F775535642E4A653C642F5E(x UInt8) Engine=Memory;
CREATE TABLE ttl (`d` Date, `i` Int, `s` String) ENGINE = MergeTree ORDER BY i SETTINGS max_number_of_merges_with_ttl_in_pool = 0, materialize_ttl_recalculate_only = 1, index_granularity = 29686, min_bytes_for_wide_part = 48137123, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 14098, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 5675157898, index_granularity_bytes = 19249103, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 12605, primary_key_compress_block_size = 88757
SELECT 25 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'asn', tuple(IPv4StringToNum('255.255.255.128')))
SELECT k, finalizeAggregation(sum_state), runningAccumulate(sum_state) FROM (SELECT intDiv(number, 50000) AS k, sumState(number) AS sum_state FROM (SELECT number FROM system.numbers LIMIT 1000000) GROUP BY k ORDER BY k);
truncate table order_by_const;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c2) AND (NOT c8) AND c0) OR ((NOT c4) AND (NOT c1) AND c9) OR ((NOT c2) AND c0) OR (c5 AND (NOT c9)) OR (c4) OR ((NOT c4) AND (NOT c4)) OR ((NOT c9) AND (NOT c8) AND (NOT c2)) OR ((NOT c9)) OR (c3 AND (NOT c5) AND (NOT c7) AND (NOT c7)) SETTINGS convert_query_to_cnf = 1
CREATE TABLE test_6173592D297B7D6B4D40294D7E4C6F42437C656C686A5C3B3A3456283C4B292B6F6B3F49446B2E75(x UInt8) Engine=Memory;
CREATE TABLE check_query_test (`SomeKey` UInt64, `SomeValue` String) ENGINE = MergeTree ORDER BY SomeKey SETTINGS min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0, index_granularity = 11272, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 19890, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1415048169, index_granularity_bytes = 30752861, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 37647, primary_key_compress_block_size = 32723
ALTER TABLE columns_with_multiple_streams_compact MODIFY COLUMN field1 Nullable(UInt8);
SELECT arrayEnumerateUniqRanked(x, 2) FROM VALUES('x Array(Array(String))', ([[]]), ([['a'], ['a'], ['b']]), ([['a'], ['a'], ['b']]));
SELECT * FROM merge ORDER BY _part_index, x;
INSERT INTO test_01193_18429.table_8_291 VALUES 
CREATE TABLE test_6C496176487C2D5A3B683F4E46547A5E4E335E2122497637457D5F493E3349403F6C267C44275C68(x UInt8) Engine=Memory;
select 'alter table compression_codec_on_alias add column (NOT ALIAS type) with CODEC';
select [0] = multiSearchAllPositions(materialize('abc'), ['bcdefgh']) from system.numbers limit 10;
SELECT sum(uint64) + 2.11 * count(uint64) From test_table;
SELECT * FROM lazy_test_16wuveew.`ÃÂÃÂ°ÃÂ±ÃÂ»ÃÂ¸ÃÂÃÂ°_ÃÂÃÂ¾_ÃÂÃÂÃÂÃÂ°ÃÂ½ÃÂ½ÃÂÃÂ¼_ÃÂ½ÃÂ°ÃÂ·ÃÂ²ÃÂ°ÃÂ½ÃÂ¸ÃÂµÃÂ¼`;
INSERT INTO test_01193_18429.table_5_324 VALUES 
DROP DATABASE IF EXISTS test_ljcc6vwv 
CREATE TABLE test_01193_18429.table_10_882 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_593F2A3333736C2C4125215449465B692A6A5B3A78657A5F782C5C5B7C4F206C327D2D3A3C26524E(x UInt8) Engine=Memory;
ALTER TABLE concurrent_alter_column ADD COLUMN c220 DOUBLE;
select 213 from test54378 prewhere pk_date in ('2018-04-19');
INSERT INTO test_01193_18429.table_4_356 VALUES 
desc table remote('127.0.0.2', currentDatabase(), tab);
CREATE INDEX idx_tab3_2 ON tab3 (col4 DESC,col0 DESC,col3);
CREATE DATABASE IF NOT EXISTS test_rqdg7edg 
DROP TABLE IF EXISTS json_square_brackets;
alter table merge_distributed1 add column dummy String after CounterID;
SELECT 'minutes' AS maximum_unit, arrayJoin([1, 60, 60*60, 60*60*24, 60*60*24*30, 60*60*24*365]) AS elapsed, formatReadableTimeDelta(elapsed*5.5, maximum_unit) AS time_delta;
SELECT multiIf((number % 2) = 0, [toFloat32(1), toFloat32(2)], (number % 3) = 0, [toFloat32(2), toFloat32(3)], [toUInt16(3), toUInt16(3)]) FROM system.numbers LIMIT 10;
SELECT multiIf(rand() % 2 = 0, emptyArrayString(), emptyArrayString());
INSERT INTO test_01193_18429.table_3_964 VALUES 
SELECT multiIf((number % 2) = 0, [toFloat64(1), toFloat64(2)], (number % 3) = 0, [toUInt8(2), toUInt8(3)], [toInt8(3), toInt8(3)]) FROM system.numbers LIMIT 10;
DROP TABLE IF EXISTS test_table_1
INSERT INTO t_enum8 Values
SELECT 'Running test stateless/00957_neighbor.sql from pid=1720' 
SELECT '-- system.roles';
INSERT INTO r3 SELECT 26
SELECT sipHash128Reference(NULL, NULL);
CREATE TABLE test_01193_18429.table_8_620 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'Running test stateless/01514_input_format_tsv_enum_as_number_setting.sql from pid=1722' 
CREATE TABLE test_01193_18429.table_2_831 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT nothingUInt64([]);
SELECT 'Running test stateless/02556_local_with_totals_and_extremes.sh from pid=1720' 
SELECT multiIf((number % 2) = 0, [toUInt8(1), toUInt8(2)], (number % 3) = 0, [toInt8(2), toInt8(3)], [toUInt16(3), toUInt16(3)]) FROM system.numbers LIMIT 10;
SELECT 2147483648, -2147483649, 2147483648 = -2147483649, 2147483648 != -2147483649, 2147483648 < -2147483649, 2147483648 <= -2147483649, 2147483648 > -2147483649, 2147483648 >= -2147483649, -2147483649 = 2147483648, -2147483649 != 2147483648, -2147483649 < 2147483648, -2147483649 <= 2147483648, -2147483649 > 2147483648, -2147483649 >= 2147483648 , toUInt32(2147483648) = toInt64(-2147483649), toUInt32(2147483648) != toInt64(-2147483649), toUInt32(2147483648) < toInt64(-2147483649), toUInt32(2147483648) <= toInt64(-2147483649), toUInt32(2147483648) > toInt64(-2147483649), toUInt32(2147483648) >= toInt64(-2147483649), toInt64(-2147483649) = toUInt32(2147483648), toInt64(-2147483649) != toUInt32(2147483648), toInt64(-2147483649) < toUInt32(2147483648), toInt64(-2147483649) <= toUInt32(2147483648), toInt64(-2147483649) > toUInt32(2147483648), toInt64(-2147483649) >= toUInt32(2147483648) , toUInt64(2147483648) = toInt64(-2147483649), toUInt64(2147483648) != toInt64(-2147483649), toUInt64(2147483648) < toInt64(-2147483649), toUInt64(2147483648) <= toInt64(-2147483649), toUInt64(2147483648) > toInt64(-2147483649), toUInt64(2147483648) >= toInt64(-2147483649), toInt64(-2147483649) = toUInt64(2147483648), toInt64(-2147483649) != toUInt64(2147483648), toInt64(-2147483649) < toUInt64(2147483648), toInt64(-2147483649) <= toUInt64(2147483648), toInt64(-2147483649) > toUInt64(2147483648), toInt64(-2147483649) >= toUInt64(2147483648) , toInt64(2147483648) = toInt64(-2147483649), toInt64(2147483648) != toInt64(-2147483649), toInt64(2147483648) < toInt64(-2147483649), toInt64(2147483648) <= toInt64(-2147483649), toInt64(2147483648) > toInt64(-2147483649), toInt64(2147483648) >= toInt64(-2147483649), toInt64(-2147483649) = toInt64(2147483648), toInt64(-2147483649) != toInt64(2147483648), toInt64(-2147483649) < toInt64(2147483648), toInt64(-2147483649) <= toInt64(2147483648), toInt64(-2147483649) > toInt64(2147483648), toInt64(-2147483649) >= toInt64(2147483648) 
insert into array_intersect values 
drop table if exists foo;
CREATE DATABASE IF NOT EXISTS test_qgkkqzb9 
DROP TABLE t3 SYNC;
DROP DATABASE IF EXISTS test_ekbtqi8a 
SELECT cutIPv6(toFixedString(unhex('00000000000000000000FFFFC1FC110A'), 16), 5, 0);
CREATE DATABASE IF NOT EXISTS test_tc1uzesn 
WITH number % 10 = 0 AS value, number AS time SELECT exponentialMovingAverage(1)(value, time) AS exp_smooth FROM numbers_mt(10000000);
SELECT a, s FROM buf ORDER BY a, s LIMIT 10
CREATE TABLE test_01193_18429.table_4_472 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select geohashEncode(-5.60302734375, 42.593994140625, 0);
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c6) AND (NOT c6) AND c5 AND (NOT c0) AND c4) OR (c1 AND c4) SETTINGS convert_query_to_cnf = 0
SELECT CASE WHEN (number % 2) = 0 THEN toInt16(1) WHEN (number % 3) = 0 THEN toInt16(2) ELSE toFloat64(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_9_810 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), date_trunc('day', N, 'Asia/Istanbul') as r FORMAT CSV;
CREATE TABLE test_772A4E653E686A6F4B5E4225346A2344416C2F245B784A2D7732703E7344485B42243D246C4B5233(x UInt8) Engine=Memory;
OPTIMIZE TABLE nullable_key FINAL;
INSERT INTO tt2 VALUES 
system sync replica rmt2 lightweight;
INSERT INTO r9 SELECT 92 % 10 = 9 ? 92 - 1 : 92
select -15 as offset, toFixedString('Hello', 6) as s, subString(bin(s), offset), bin(bitSlice(s, offset));
select * from file(dump3.sql, MySQLDump) settings max_threads=1
select makeDateTime(1991, 8, 24, 21, 4, 0, 'CET');
SELECT cond_non_constant ? then_non_constant_nullable : constant_null AS res FROM nullable_00431;
SELECT * FROM temp WHERE y IN (toDecimal32(32, 2));
INSERT INTO test_01193_18429.table_9_962 VALUES 
select * from data_01801 where key = 0 order by key desc settings max_rows_to_read=10 format Null;
INSERT INTO test_01193_18429.table_9_410 VALUES 
SELECT nth_value(NULL, 1048577) OVER (Rows BETWEEN 1023 FOLLOWING AND UNBOUNDED FOLLOWING) 
SELECT substring('1234' lhs FROM 2 rhs), lhs, rhs;
CREATE DATABASE IF NOT EXISTS test_idm4sw78 
INSERT INTO test_01193_18429.table_5_571 VALUES 
SELECT * FROM t_json_nested ORDER BY id FORMAT JSONEachRow
select a1, s.a1 from tab1 any left join (select * from tab1_copy) s on tab1.b1 + 3 = s.b1 + 2 FORMAT JSONEachRow;
select a, b.a, b.b.c, b.b.d from s3(s3_conn, filename='test_02245_s3_nested_arrow2_*', format='Arrow', structure='a Int64, b Tuple(a Int64, b Tuple(c Int64, d String))');
CREATE TABLE multidimensional (x UInt64, arr Array(Array(String)), t Tuple(String, Array(Nullable(String)), Tuple(UInt32, Date))) ENGINE = Memory;
INSERT INTO r5 SELECT 49 % 10 = 5 ? 49 - 1 : 49
SELECT roundToExp2(number) AS k, length(groupArray(1)(number AS i)), length(groupArray(1500)(i)), length(groupArray(70000)(i)) AS s FROM remote('127.0.0.{2,3}', currentDatabase(), 'numbers_mt') GROUP BY k ORDER BY k LIMIT 9, 11;
ALTER TABLE concurrent_alter_column ADD COLUMN c467 DOUBLE;
INSERT INTO test_01193_18429.table_10_622 VALUES 
select * from dist_01072 where key=toInt32(xxHash32(0));
DESC TABLE view(SELECT groupBitmapState(toUInt32(number)) AS x, number AS y FROM numbers(10) GROUP BY number)
INSERT INTO src VALUES /* (95, 1) */ 
CREATE TABLE test_6B6730664B65322A38603B28305A7C6E4D585B24423A2971504148264246602F77325E21433B2472(x UInt8) Engine=Memory;
ALTER TABLE concurrent_kill_3 MODIFY SETTING max_replicated_merges_in_queue=0
SELECT count(*) FROM source WHERE toYear(ts) >= 2023 SETTINGS allow_experimental_analyzer=1;
INSERT INTO test_01193_18429.table_2_68 VALUES 
CREATE DATABASE IF NOT EXISTS test_pei9qafu 
CREATE DATABASE IF NOT EXISTS test_rfg4ifpa 
select '-------toTime---------';
CREATE TABLE test_01193_18429.table_4_419 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE DATABASE 01759_db;
CREATE TABLE test_01193_18429.table_2_31 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_4_811 VALUES 
insert into local_t_l5ydey values 
INSERT INTO test_01193_18429.table_4_18 VALUES 
DROP TABLE t1_00203;
CREATE TABLE test_657D373C7C6B46472E354D48302B5364493E2F5D396C7C4F673A423E275C2A503A2C7D643C352376(x UInt8) Engine=Memory;
SELECT result FROM ( SELECT (lat, lon) AS input_geo, h3ToGeo(geoToH3(lat, lon, res)) AS output_geo, if(abs(input_geo.1 - output_geo.1) < 0.001 AND abs(input_geo.2 - output_geo.2) < 0.001, 'ok', 'fail') AS result FROM h3_geo );
SELECT substringIndexUTF8(NULL, NULL, NULL);
CREATE TABLE test_7B2E41712F453B275E5B386E3574736325307D7930663E457166612A716E3E3F2373552D596C6629(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_10_925 VALUES 
select * from dist_01072 where key=toInt32(value) settings force_optimize_skip_unused_shards=0;
CREATE INDEX idx_tab3_3 ON tab3 (col3,col0);
DROP TABLE dictionary_source_view;
create table t (n UInt8, a1 AggregateFunction(groupUniqArray(1), UInt8)) engine=Log
INSERT INTO test_01193_18429.table_8_681 VALUES 
SELECT decodeURLComponent(queryStringAndFragment('http://127.0.0.1/?query=hello%20world+foo%2Bbar'));
CREATE DATABASE IF NOT EXISTS test_l7ve05td 
ALTER TABLE test4 ON CLUSTER test_shard_localhost DROP PARTITION '2023-10-09' FORMAT `Null`
SELECT multiIf((number % 2) = 0, toFloat32(1), (number % 3) = 0, toUInt8(2), toFloat32(3)) FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_qb32t0jc 
CREATE DATABASE IF NOT EXISTS test_p3572aj5 
DROP TABLE IF EXISTS alter_test;
select '1 left', * from (select 1 as x, 2 as y) t1 left join (select 1 as xx, 2 as yy from numbers(1)) t2 on x = xx or y = yy;
INSERT INTO test_01193_18429.table_3_95 VALUES 
SELECT '-- query_selects query_inserts';
select -4 as offset, number as length, 'Hello' as s, subString(bin(s), offset , length), bin(bitSlice(s, offset, length)) from numbers(9);
SELECT a, b, t2.b FROM t1 INNER JOIN t2 USING (a) ORDER BY (a);
CREATE TABLE url_na_log (`SiteId` UInt32, `DateVisit` Date) ENGINE = MergeTree PRIMARY KEY SiteId ORDER BY (SiteId, DateVisit) SETTINGS index_granularity = 10000, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 3, merge_max_block_size = 5819, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 33619, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 38949, primary_key_compress_block_size = 39557
INSERT INTO table_to_rename VALUES 
create table src_table_1 (n UInt64) engine=Memory as select * from numbers(10);
select throwIf(substring('/var/lib/clickhouse/store/ed0/ed00f03e-164c-4995-a226-847f199bd9e8/all_1_1_0/', 1, 1) != '/', 'Path is relative: /var/lib/clickhouse/store/ed0/ed00f03e-164c-4995-a226-847f199bd9e8/all_1_1_0/')
SELECT multiIf((col1 % 2) = 0, [col2, col3], (col1 % 3) = 0, [col4, 'bar'], [col6, 'bar']) FROM multi_if_check;
CREATE TABLE test_4938355D556C615F38516B7B384B2B6C71344464316C6276457A4E4733742E6E33754C614745373C(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_s7qe42av 
SELECT * FROM arrow_decimal
INSERT INTO replica_01108_3 SELECT * FROM system.numbers LIMIT 3 * 10, 10
DROP DATABASE IF EXISTS test_2st7oayr 
CREATE DATABASE IF NOT EXISTS test_4wp81mth 
select a1, copy.a1 from tab1 any left join tab1_copy copy on tab1.b1 + 3 = tab1_copy.b1 + 2 FORMAT JSONEachRow;
SELECT multiIf((number % 2) = 0, toInt8(1), (number % 3) = 0, toUInt16(2), toUInt32(3)) FROM system.numbers LIMIT 10;
SELECT '---- NULL input';
INSERT INTO mt VALUES /* (20, 1) */ 
INSERT INTO src_1 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 7
CREATE TABLE test_707B2E2D5F2F4732583E7D7E5C3E6050455932247B6F44584A2C243D2D2C726B7B4B466C40754545(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS written_bytes_02247
EXPLAIN SYNTAX SELECT value1 FROM datetime64_t WHERE toYYYYMM(date1) = 199312 AND id BETWEEN 1 AND 3;
select c >= 0 from (SELECT randConstant() as c FROM remote('127.0.0.{3,2}', numbers_mt(1)));
SELECT 42,'Hello',bin(bitShiftRight('Hello', 42));
DROP DATABASE IF EXISTS test_2wl6adyg 
CREATE INDEX idx_tab4_3 ON tab4 (col4,col0);
CREATE TABLE test_01193_18429.table_10_559 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_7_487 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/02366_explain_query_tree.sql from pid=1720' 
select columns(query, normalized_query_hash, query_kind, databases, tables, columns) apply (any) from system.query_log where current_database = currentDatabase() AND type != 'QueryStart' and query_id like '01600_log_queries_with_extensive_info%' group by query_id order by query_id
CREATE TABLE test_526D736E5D7A425F63282B3E79715F7B6C462D2C3E3832375C793E2D50375561437D3D635E745932(x UInt8) Engine=Memory;
SELECT pointInPolygon(pt, poly) FROM polygons ORDER BY id;
SELECT toUInt8(0) AS x, toInt16(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (102 < 18 AND 13 > 0 ? 102 : 0)), throwIf(last != (102 < 18 AND 13 > 0 ? least(18 - 1, 102 + 13 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(18) LIMIT 102, 13);
CREATE TABLE group_by_pk (`k` UInt64, `v` UInt64) ENGINE = MergeTree PARTITION BY v % 50 ORDER BY k SETTINGS index_granularity = 58906, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 11021, prefer_fetch_merged_part_size_threshold = 1948049315, vertical_merge_algorithm_min_rows_to_activate = 339811, vertical_merge_algorithm_min_columns_to_activate = 96, min_merge_bytes_to_use_direct_io = 6293944046, index_granularity_bytes = 20616880, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 76865, primary_key_compress_block_size = 49387
SELECT cast(number, if(1 = 1, 'UInt64', toString(number))) FROM numbers(5);
SELECT '(forward, first_match, B)', id, sequenceNextNode('forward', 'first_match')(dt, action, 1, action = 'B') AS next_node FROM test_sequenceNextNode GROUP BY id ORDER BY id;
CREATE TABLE test_02908_r3_73 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_73', 'r3') ORDER BY tuple()
DROP TABLE IF EXISTS t_str;
CREATE TABLE test_3022725E3A7360734B333A51425E596621537E7336787944747878225F7E5A385752564975273922(x UInt8) Engine=Memory;
SELECT splitByString('', 'a==b=c=d', 3) SETTINGS splitby_max_substrings_includes_remaining_string = 0;
INSERT INTO 01681_database_for_flat_dictionary.simple_key_simple_attributes_source_table VALUES
DROP DATABASE IF EXISTS test_tkdd0pkd 
select sipHash128ReferenceKeyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45)) == sipHash128Reference(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45));
SELECT CASE WHEN (number % 2) = 0 THEN [toInt16(1), toInt16(2)] WHEN (number % 3) = 0 THEN [toFloat64(2), toFloat64(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
SELECT 'SOME GRANULES FILTERED OUT';
DROP DATABASE IF EXISTS test_3xq8t8uw 
select 0 = multiSearchAny(materialize('abc'), ['defg']) from system.numbers limit 10;
SELECT 'SELECT D == N';
SELECT multiIf(1, ['foo', 'bar'], (col1 % 3) = 0, [col4, 'bar'], [col6, 'bar']) FROM multi_if_check;
DESC TABLE test_33excl4a.t1
CREATE TABLE collapsing_table (`key` UInt64, `value` UInt64, `Sign` Int8) ENGINE = CollapsingMergeTree(Sign) ORDER BY key SETTINGS vertical_merge_algorithm_min_rows_to_activate = 0, vertical_merge_algorithm_min_columns_to_activate = 0, min_bytes_for_wide_part = 0, index_granularity = 51252, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 18715, prefer_fetch_merged_part_size_threshold = 1, min_merge_bytes_to_use_direct_io = 5097144391, index_granularity_bytes = 23831490, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 89675, primary_key_compress_block_size = 76379
select a1 from tab1 any left join (select a2 from tab2) on b1 = a2;
SELECT roundBankers(proportionsZTest(88, 471, 144, 876, 0.95, 'unpooled').1, 16) as z_stat, roundBankers(proportionsZTest(88, 471, 144, 876, 0.95, 'unpooled').2, 16) as p_value, roundBankers(proportionsZTest(88, 471, 144, 876, 0.95, 'unpooled').3, 16) as ci_lower, roundBankers(proportionsZTest(88, 471, 144, 876, 0.95, 'unpooled').4, 16) as ci_upper FORMAT TabSeparatedWithNames;
SELECT DATE_FORMAT(NULL);
SELECT count() FROM t_cnf_fuzz WHERE (c2 AND c6 AND (NOT c7)) OR ((NOT c5)) OR ((NOT c6) AND (NOT c1) AND (NOT c3) AND c7) SETTINGS convert_query_to_cnf = 1
 SELECT initial_query_id, if(count() != 2, 'Used parallel', 'Not parallel'), sumIf(read_rows, is_initial_query) as read_rows, sumIf(read_bytes, is_initial_query) as read_bytes FROM system.query_log WHERE event_date >= yesterday() and initial_query_id LIKE '02783_count-test_l5pcr2k7%' GROUP BY initial_query_id ORDER BY min(event_time_microseconds) ASC FORMAT TSV
CREATE TABLE test_01193_18429.table_7_284 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT arrayReduce('maxOrDefault', arrayPopBack([1]));
SELECT -127, -2147483648, -127 = -2147483648, -127 != -2147483648, -127 < -2147483648, -127 <= -2147483648, -127 > -2147483648, -127 >= -2147483648, -2147483648 = -127, -2147483648 != -127, -2147483648 < -127, -2147483648 <= -127, -2147483648 > -127, -2147483648 >= -127 , toInt8(-127) = toInt32(-2147483648), toInt8(-127) != toInt32(-2147483648), toInt8(-127) < toInt32(-2147483648), toInt8(-127) <= toInt32(-2147483648), toInt8(-127) > toInt32(-2147483648), toInt8(-127) >= toInt32(-2147483648), toInt32(-2147483648) = toInt8(-127), toInt32(-2147483648) != toInt8(-127), toInt32(-2147483648) < toInt8(-127), toInt32(-2147483648) <= toInt8(-127), toInt32(-2147483648) > toInt8(-127), toInt32(-2147483648) >= toInt8(-127) , toInt8(-127) = toInt64(-2147483648), toInt8(-127) != toInt64(-2147483648), toInt8(-127) < toInt64(-2147483648), toInt8(-127) <= toInt64(-2147483648), toInt8(-127) > toInt64(-2147483648), toInt8(-127) >= toInt64(-2147483648), toInt64(-2147483648) = toInt8(-127), toInt64(-2147483648) != toInt8(-127), toInt64(-2147483648) < toInt8(-127), toInt64(-2147483648) <= toInt8(-127), toInt64(-2147483648) > toInt8(-127), toInt64(-2147483648) >= toInt8(-127) , toInt16(-127) = toInt32(-2147483648), toInt16(-127) != toInt32(-2147483648), toInt16(-127) < toInt32(-2147483648), toInt16(-127) <= toInt32(-2147483648), toInt16(-127) > toInt32(-2147483648), toInt16(-127) >= toInt32(-2147483648), toInt32(-2147483648) = toInt16(-127), toInt32(-2147483648) != toInt16(-127), toInt32(-2147483648) < toInt16(-127), toInt32(-2147483648) <= toInt16(-127), toInt32(-2147483648) > toInt16(-127), toInt32(-2147483648) >= toInt16(-127) , toInt16(-127) = toInt64(-2147483648), toInt16(-127) != toInt64(-2147483648), toInt16(-127) < toInt64(-2147483648), toInt16(-127) <= toInt64(-2147483648), toInt16(-127) > toInt64(-2147483648), toInt16(-127) >= toInt64(-2147483648), toInt64(-2147483648) = toInt16(-127), toInt64(-2147483648) != toInt16(-127), toInt64(-2147483648) < toInt16(-127), toInt64(-2147483648) <= toInt16(-127), toInt64(-2147483648) > toInt16(-127), toInt64(-2147483648) >= toInt16(-127) , toInt32(-127) = toInt32(-2147483648), toInt32(-127) != toInt32(-2147483648), toInt32(-127) < toInt32(-2147483648), toInt32(-127) <= toInt32(-2147483648), toInt32(-127) > toInt32(-2147483648), toInt32(-127) >= toInt32(-2147483648), toInt32(-2147483648) = toInt32(-127), toInt32(-2147483648) != toInt32(-127), toInt32(-2147483648) < toInt32(-127), toInt32(-2147483648) <= toInt32(-127), toInt32(-2147483648) > toInt32(-127), toInt32(-2147483648) >= toInt32(-127) , toInt32(-127) = toInt64(-2147483648), toInt32(-127) != toInt64(-2147483648), toInt32(-127) < toInt64(-2147483648), toInt32(-127) <= toInt64(-2147483648), toInt32(-127) > toInt64(-2147483648), toInt32(-127) >= toInt64(-2147483648), toInt64(-2147483648) = toInt32(-127), toInt64(-2147483648) != toInt32(-127), toInt64(-2147483648) < toInt32(-127), toInt64(-2147483648) <= toInt32(-127), toInt64(-2147483648) > toInt32(-127), toInt64(-2147483648) >= toInt32(-127) , toInt64(-127) = toInt32(-2147483648), toInt64(-127) != toInt32(-2147483648), toInt64(-127) < toInt32(-2147483648), toInt64(-127) <= toInt32(-2147483648), toInt64(-127) > toInt32(-2147483648), toInt64(-127) >= toInt32(-2147483648), toInt32(-2147483648) = toInt64(-127), toInt32(-2147483648) != toInt64(-127), toInt32(-2147483648) < toInt64(-127), toInt32(-2147483648) <= toInt64(-127), toInt32(-2147483648) > toInt64(-127), toInt32(-2147483648) >= toInt64(-127) , toInt64(-127) = toInt64(-2147483648), toInt64(-127) != toInt64(-2147483648), toInt64(-127) < toInt64(-2147483648), toInt64(-127) <= toInt64(-2147483648), toInt64(-127) > toInt64(-2147483648), toInt64(-127) >= toInt64(-2147483648), toInt64(-2147483648) = toInt64(-127), toInt64(-2147483648) != toInt64(-127), toInt64(-2147483648) < toInt64(-127), toInt64(-2147483648) <= toInt64(-127), toInt64(-2147483648) > toInt64(-127), toInt64(-2147483648) >= toInt64(-127) 
SELECT MACStringToNum('');
DROP DATABASE IF EXISTS test_uqb44yva 
INSERT INTO test_01193_18429.table_3_439 VALUES 
CREATE TABLE test_01193_18429.table_5_435 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT arrayEnumerateUniqRanked(2, [1,2,1],1,[['a','b','a'],['a','b','a'],['c']],2);
ALTER TABLE concurrent_alter_column ADD COLUMN c462 DOUBLE;
SELECT '-- settings';
SELECT _database, _table, n FROM merge('01902_db', '^t$') ORDER BY _database, _table, n;
SELECT 'Running test stateless/02306_part_types_profile_events.sql from pid=1724' 
INSERT INTO r7 SELECT 57 % 10 = 7 ? 57 - 1 : 57
CREATE TEMPORARY TABLE sum_map_overflow (events Array(UInt8), counts Array(UInt8));
DROP ROLE r1_01293@'%', 'r2_01293@%.myhost.com';
create table mt_compact_2 (a Int, s String) engine = MergeTree order by a partition by a settings min_rows_for_wide_part = 1000;
select sipHash128ReferenceKeyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60)) == sipHash128Reference(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60));
SELECT count() FROM t_cnf_fuzz WHERE (c5 AND (NOT c2) AND c5 AND (NOT c7) AND (NOT c8)) OR (c2 AND (NOT c9)) OR ((NOT c0) AND c7 AND (NOT c3)) OR (c3 AND c6 AND (NOT c2) AND c8) OR (c2 AND c1 AND c6 AND c7 AND c6) OR (c3 AND c4) OR (c0 AND (NOT c3) AND c1) SETTINGS convert_query_to_cnf = 1
CREATE DATABASE IF NOT EXISTS test_hvzisusr 
SELECT tgamma(-1);
SELECT domainRFC('example.com') as Host;
SELECT 32769, 9223372036854775809, 32769 = 9223372036854775809, 32769 != 9223372036854775809, 32769 < 9223372036854775809, 32769 <= 9223372036854775809, 32769 > 9223372036854775809, 32769 >= 9223372036854775809, 9223372036854775809 = 32769, 9223372036854775809 != 32769, 9223372036854775809 < 32769, 9223372036854775809 <= 32769, 9223372036854775809 > 32769, 9223372036854775809 >= 32769 , toUInt16(32769) = toUInt64(9223372036854775809), toUInt16(32769) != toUInt64(9223372036854775809), toUInt16(32769) < toUInt64(9223372036854775809), toUInt16(32769) <= toUInt64(9223372036854775809), toUInt16(32769) > toUInt64(9223372036854775809), toUInt16(32769) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toUInt16(32769), toUInt64(9223372036854775809) != toUInt16(32769), toUInt64(9223372036854775809) < toUInt16(32769), toUInt64(9223372036854775809) <= toUInt16(32769), toUInt64(9223372036854775809) > toUInt16(32769), toUInt64(9223372036854775809) >= toUInt16(32769) , toUInt32(32769) = toUInt64(9223372036854775809), toUInt32(32769) != toUInt64(9223372036854775809), toUInt32(32769) < toUInt64(9223372036854775809), toUInt32(32769) <= toUInt64(9223372036854775809), toUInt32(32769) > toUInt64(9223372036854775809), toUInt32(32769) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toUInt32(32769), toUInt64(9223372036854775809) != toUInt32(32769), toUInt64(9223372036854775809) < toUInt32(32769), toUInt64(9223372036854775809) <= toUInt32(32769), toUInt64(9223372036854775809) > toUInt32(32769), toUInt64(9223372036854775809) >= toUInt32(32769) , toInt32(32769) = toUInt64(9223372036854775809), toInt32(32769) != toUInt64(9223372036854775809), toInt32(32769) < toUInt64(9223372036854775809), toInt32(32769) <= toUInt64(9223372036854775809), toInt32(32769) > toUInt64(9223372036854775809), toInt32(32769) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toInt32(32769), toUInt64(9223372036854775809) != toInt32(32769), toUInt64(9223372036854775809) < toInt32(32769), toUInt64(9223372036854775809) <= toInt32(32769), toUInt64(9223372036854775809) > toInt32(32769), toUInt64(9223372036854775809) >= toInt32(32769) , toUInt64(32769) = toUInt64(9223372036854775809), toUInt64(32769) != toUInt64(9223372036854775809), toUInt64(32769) < toUInt64(9223372036854775809), toUInt64(32769) <= toUInt64(9223372036854775809), toUInt64(32769) > toUInt64(9223372036854775809), toUInt64(32769) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toUInt64(32769), toUInt64(9223372036854775809) != toUInt64(32769), toUInt64(9223372036854775809) < toUInt64(32769), toUInt64(9223372036854775809) <= toUInt64(32769), toUInt64(9223372036854775809) > toUInt64(32769), toUInt64(9223372036854775809) >= toUInt64(32769) , toInt64(32769) = toUInt64(9223372036854775809), toInt64(32769) != toUInt64(9223372036854775809), toInt64(32769) < toUInt64(9223372036854775809), toInt64(32769) <= toUInt64(9223372036854775809), toInt64(32769) > toUInt64(9223372036854775809), toInt64(32769) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toInt64(32769), toUInt64(9223372036854775809) != toInt64(32769), toUInt64(9223372036854775809) < toInt64(32769), toUInt64(9223372036854775809) <= toInt64(32769), toUInt64(9223372036854775809) > toInt64(32769), toUInt64(9223372036854775809) >= toInt64(32769) 
CREATE TABLE test_01193_18429.table_9_726 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_3_504 VALUES 
SELECT n, z, changed FROM ( SELECT n, z, runningDifferenceStartingWithFirstValue(n) AS changed FROM ( SELECT ts, n,z FROM system.one ARRAY JOIN [1,3,4,5,6] AS ts, [1,2,2,2,1] AS n, ['a', 'a', 'b', 'a', 'b'] AS z ORDER BY n, ts DESC ) ) WHERE changed = 0;
select [2] = multiSearchAllPositions(materialize('abc'), ['bc']);
SELECT any(number % 2) AS a, anyLast(number % 3) AS b FROM numbers(10000000) GROUP BY number % 2, number % 3 ORDER BY a, b;
select parseDateTimeInJodaSyntax('69', 'yy', 'UTC') = toDateTime('2069-01-01', 'UTC');
insert into function cluster('test_cluster_two_shards', currentDatabase(), dst_02224, key) select * from cluster('test_cluster_two_shards', currentDatabase(), src_02224, key) settings parallel_distributed_insert_select=2, max_distributed_depth=1;
CREATE TABLE test_02908_r1_270 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_270', 'r1') ORDER BY tuple()
SELECT cramersVBiasCorrected(NULL, NULL);
DROP DICTIONARY 01765_db.hashed_dictionary_simple_key_hierarchy;
select maxMap(val, cnt) from values ('val Array(Enum16(\'a\'=1)), cnt Array(Int16)', (['a'], [1]), (['a'], [2]));
SELECT quantile(0.5)(now()::DateTime('UTC')) WHERE 0 WITH TOTALS;
ATTACH TABLE test_repl ON CLUSTER test_shard_localhost;
alter table many_mutations delete where y = 661 * 2 settings mutations_sync = 0;
CREATE TABLE test_276B67746F6930542526207244596F2D46347D54566E4572456E626441407659393E345355685278(x UInt8) Engine=Memory;
SELECT bin(toInt128(-100000000000)) AS res;
INSERT INTO r1 SELECT 72 % 10 = 1 ? 72 - 1 : 72
SELECT arraySort(groupArray(DISTINCT number % 13)) FROM numbers_mt(100000);
SELECT NULL FROM ( SELECT NULL, 1 AS a, 0 :: Nullable(UInt8) AS c UNION ALL SELECT NULL, 65536, NULL ) AS js1 ALL LEFT JOIN ( SELECT 2 :: Nullable(UInt8) AS a ) AS js2 USING (a) ORDER BY c ;
SELECT rightUTF8('ÃÂÃÂÃÂ¸ÃÂ²ÃÂµÃÂ', 0);
ALTER TABLE concurrent_alter_column ADD COLUMN c288 DOUBLE;
CREATE TABLE test_01193_18429.table_5_47 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_9_545 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
desc format(JSONEachRow, '{"x" : [123, 123]}');
INSERT INTO delta_codec_string SELECT concat(toString(number), toString(number % 100)) FROM numbers(1547510400, 500000);
SELECT '5' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffc0::')))
CREATE TABLE test_2F7B5D77722D4D323F2D2A6D5F2F79203A393B45313468427364455B5622277D492A25202C393563(x UInt8) Engine=Memory;
alter table many_mutations delete where y = 353 * 2 settings mutations_sync = 0;
CREATE TABLE IF NOT EXISTS test_01516_test_u75vly87.data3 ENGINE = MergeTree ORDER BY number SETTINGS index_granularity = 12256, min_bytes_for_wide_part = 747639576, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 4406, prefer_fetch_merged_part_size_threshold = 8623381541, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 5307695899, index_granularity_bytes = 17481569, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 38170, primary_key_compress_block_size = 92760 AS SELECT * FROM numbers(1)
drop user u_01939 
SELECT 'Running test stateless/00978_sum_map_bugfix.sql from pid=1713' 
CREATE TABLE test_01193_18429.table_8_40 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO 01056_window_view_proc_hop_watch.mt VALUES 
DROP TABLE IF EXISTS size_hint;
SELECT anyLast_respect_nulls(-1);
CREATE TABLE test_245B48345E3A62764C3049726664786E5150445A4A57245C3F552C2B6738206B59705C4374523D4C(x UInt8) Engine=Memory;
alter table src update A = 19 where 1 settings mutations_sync=2
create view view_00840 as select count(*),database,table from system.columns group by database,table;
CREATE DATABASE IF NOT EXISTS test_8oaa0s9g 
select * from file('test_02149_schema_inference_test_2lktp9cn.data', 'TSKV')
select [1, 1, 2, 3, 4, 0, 0, 0, 0, 0] = groupArray(position(materialize('aaaa'), 'a', number)) from numbers(10);
SELECT count() FROM (SELECT queryID() FROM remote('127.0.0.{1..3}', currentDatabase(), 'tmp') GROUP BY queryID());
CREATE TABLE test_01193_18429.table_3_9 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_237C642D3D417477276D71293F525A5076702E434B5D623C5221522858296868315F6B7226585325(x UInt8) Engine=Memory;
alter table data_01900_2 update s = 'bar_90' where 1;
SELECT 0x1.2_34p+01;
INSERT INTO src VALUES /* (58, 1) */ 
SELECT count(1), uniqExact(1) FROM ( SELECT k FROM (SELECT 1 AS k FROM numbers(1)) nums JOIN (SELECT materialize(1) AS k, number n FROM numbers(100000)) j USING k);
CREATE TABLE enum_nested_alter (d Date DEFAULT '2000-01-01', x UInt64, n Nested(a String, e Enum8('Hello.world' = 1), b UInt8)) ENGINE = MergeTree(d, x, 1);
SELECT toIntervalQuarter(NULL);
SELECT 1 FORMAT RowBinary 
select count() from testNullableStates;
CREATE TABLE test_01193_18429.table_9_585 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_6_407 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SET force_index_by_date = 1;
INSERT INTO test_01193_18429.table_8_330 VALUES 
create table t_avro_10 (x UInt32, s String) engine=File(Avro)
CREATE TABLE test_01193_18429.table_3_452 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE DATABASE IF NOT EXISTS test_2t3n1k5k 
CREATE TABLE test_01193_18429.table_10_628 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_10_411 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/01856_create_function.sql from pid=1705' 
/* Occupy 10 cells near the end of "a": * a: [ ----------- ] * c: [ -- ] * If we insert "a" then "c", these values will be placed at the end of hash table due to collision resolution: * a + c: [ aaaaaaaaaaacc] */ CREATE TABLE part_c ENGINE = TinyLog AS SELECT * FROM ( WITH number AS k1, bitXor(k1, bitShiftRight(k1, 33)) AS k2, k2 * 0xff51afd7ed558ccd AS k3, bitXor(k3, bitShiftRight(k3, 33)) AS k4, k4 * 0xc4ceb9fe1a85ec53 AS k5, bitXor(k5, bitShiftRight(k5, 33)) AS k6, k6 AS hash, bitShiftRight(hash, 15) % 0x20000 AS place, hash % 2 = 0 AS will_remain SELECT hash, number, place FROM system.numbers WHERE place >= 131052 AND place < 131062 AND will_remain AND hash NOT IN (SELECT hash FROM part_a) LIMIT 1 BY place LIMIT 10 ) ORDER BY place;
SELECT a FROM t_fixed_prefix ORDER BY a SETTINGS optimize_read_in_order = 1
SELECT 'Running test stateless/01881_create_as_tuple.sql from pid=1713' 
CREATE TABLE test_374A366E2A392E703B507B66433D2C264F2351707B725C30547466445A43563F6B214938327A4428(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_2_358 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO t FORMAT CSV
SELECT DATE_FORMAT(toDateTime('2018-01-02 11:33:44'), '%p');
CREATE TABLE tbl (`eventDate` Date, `id` String) ENGINE = MergeTree PARTITION BY tuple() ORDER BY eventDate SETTINGS index_granularity = 969, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 43, merge_max_block_size = 4018, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 387958, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 3887321125, index_granularity_bytes = 31448753, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 56240, primary_key_compress_block_size = 23610
CREATE TABLE test_01193_18429.table_6_788 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO runningConcurrency_test VALUES 
SELECT uniqHLL12([NULL], [NULL], [NULL]);
ALTER TABLE concurrent_alter_column ADD COLUMN c167 DOUBLE;
SELECT 'Running test stateless/01821_join_table_race_long.sh from pid=1715' 
SELECT NULL FROM test_01344 WHERE ignore(x, lcm(NULL, 1048576), -2) = NULL;
CREATE TABLE test_01193_18429.table_9_610 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'Running test stateless/01622_defaults_for_file_engine.sql from pid=1715' 
CREATE TABLE test_4F5346207075202C2C407C2955483230506055352D537C483F4B646E58453634496154316B3D3C7D(x UInt8) Engine=Memory;
CREATE TABLE test_02908_r3_240 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_240', 'r3') ORDER BY tuple()
SELECT toDecimal64(1, 1) * toDecimal64(1, 3) x, toTypeName(x);
SELECT * FROM file('/var/lib/clickhouse/user_files/02661_read_from_archive_test_fv9w6ph7_zip_archive1.zip :: 02661_read_from_archive_test_fv9w6ph7_zip_data1.csv') ORDER BY 1, 2
DROP DATABASE IF EXISTS test_n1qblr1w 
 explain select a, b from ( select number + 1 as a, number + 2 as b from numbers(2) union all select number + 1 as b, number + 2 as a from numbers(2) ) where a != 1 settings enable_optimize_predicate_expression = 0
CREATE TABLE test_705865614C4650354874766E5732652B6A6528254F5A2C282C787430467E523A306B2E4D7E4E5A2D(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_sj78vc37 
CREATE TABLE test_01193_18429.table_5_609 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT * FROM system.errors LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
CREATE DATABASE IF NOT EXISTS test_anesxhpx
CREATE TABLE data_01646 (`x` Date, `s` String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01646/data_01646', 'r') PARTITION BY x ORDER BY s SETTINGS index_granularity = 962, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 5707, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 67, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 28627743, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 62989, primary_key_compress_block_size = 40314
SELECT dictGetInt8(NULL, NULL, NULL);
SELECT col1, col2, count() FROM test1_00395 GROUP BY col1, col2 ORDER BY col1, col2;
DETACH TABLE compression_codec;
CREATE TABLE test_3D462C353637673B377A5E7A4348676E5F434B2B666838277B2D354B51224555252754286F502243(x UInt8) Engine=Memory;
KILL MUTATION WHERE mutation_id='0000000035' and table='concurrent_mutate_kill' and database='test_ivy0esel'
CREATE TABLE test_01193_18429.table_4_947 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select arrayPopBack([1]);
DROP TABLE IF EXISTS cte2;
select 'arraySlice(arr1, o, -2)';
EXPLAIN SYNTAX SELECT sum(n * -2 * -1), sum(-2 * n * -1), sum(n / -2 / -1), sum(-1 / n / -1) FROM (SELECT number n FROM numbers(10));
select isConstant(1);
INSERT INTO test_01193_18429.table_4_25 VALUES 
CREATE DATABASE IF NOT EXISTS test_oil4qura 
CREATE DATABASE IF NOT EXISTS test_vsqs765t 
SET log_profile_events=true;
DROP DATABASE IF EXISTS test_xizw8efj 
SELECT val, name FROM (SELECT value AS val, value AS val_1, name FROM data2013 WHERE name = 'Alice' UNION ALL SELECT value AS val, value, name FROM data2014 WHERE name = 'Alice') ORDER BY val ASC;
CREATE TABLE test_01193_18429.table_2_618 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT arrayJoin(CAST(['hello', 'world'] AS Array(FixedString(5)))) LIKE 'xyz%';
SELECT number > 0 ? 'censor.net' : 'google' FROM dist;
SELECT '= types =';
DROP DATABASE IF EXISTS test_kxvwyq3u 
CREATE TABLE test_3062427B7E7A664259796C433F33425A4F5758545D7930287526655741254B342039314139292C7D(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_vcvhyzsi 
INSERT INTO cube VALUES 
SELECT 'Running test stateless/01013_hex_decimal.sql from pid=1724' 
CREATE DATABASE IF NOT EXISTS test_d92y84dn 
CREATE DICTIONARY test_01192_atomic.dict UUID '00001192-0000-4000-8000-000000000002' (n UInt64, _part String DEFAULT 'no') PRIMARY KEY n LAYOUT(DIRECT()) SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'mt' DB 'test_01192'))
DROP DATABASE IF EXISTS test_v4m76pi7 
select * from tab order by (a + b) * c, sin(a / b) desc;
SELECT 'Without max key';
SELECT 'Running test stateless/02475_positive_modulo.sql from pid=1722' 
SELECT (2 * count(decimal32) - sum(decimal32)) + (3 * count(decimal32) - sum(decimal32)) From test_table;
INSERT INTO hypothesis_test_test3 VALUES 
select cityHash64(hex( sumMapState(map(ip, 1::Int64)) )) AS sumMapState, cityHash64(hex( minMapState(map(ip, 1::Int64)) )) AS minMapState, cityHash64(hex( maxMapState(map(ip, 1::Int64)) )) AS maxMapState from ( select number::UInt32::IPv4 ip from numbers(999999999,1) order by ip ) format Vertical;
SELECT j, h, i, j from decimal WHERE j < 42 AND h < 42 AND h < 42 AND j < 42;
SELECT count() FROM t_cnf_fuzz WHERE (c3) OR ((NOT c4) AND c8) OR ((NOT c9) AND c3) OR (c4 AND c3 AND (NOT c2) AND (NOT c4)) OR ((NOT c9) AND c6 AND c0) OR ((NOT c1)) OR ((NOT c5) AND (NOT c8) AND (NOT c7) AND (NOT c7) AND c6) OR (c4) OR ((NOT c9) AND (NOT c6) AND c1 AND c5 AND c3) SETTINGS convert_query_to_cnf = 0
select 'COUNT';
DROP DATABASE IF EXISTS test_akbfizkr 
set default_table_engine='ReplicatedMergeTree';
CREATE TABLE test_3A2E7A3C5A506D2121223731543E6F6840375139422576345D4758526163505E6E50426172306C2C(x UInt8) Engine=Memory;
create table rate_test (timestamp UInt32, event UInt32) engine=Memory;
SELECT 4, 11, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (4 < 13 AND 11 > 0 ? 4 : 0)), throwIf(last != (4 < 13 AND 11 > 0 ? least(13 - 1, 4 + 11 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 4, 11);
DROP DATABASE IF EXISTS test_y4s0e8dg 
CREATE TABLE Test ENGINE = MergeTree PRIMARY KEY (String1, String2) ORDER BY (String1, String2) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 11039, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 3350586007, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 70945, primary_key_compress_block_size = 61118 AS SELECT concat('String1_', toString(number)) AS String1, concat('String2_', toString(number)) AS String2, concat('String3_', toString(number)) AS String3, concat('String4_', toString(number % 4)) AS String4 FROM numbers(1)
INSERT INTO test_01193_18429.table_4_774 VALUES 
CREATE TABLE dist_layer_01223 AS data_01223 ENGINE = Distributed(test_cluster_two_shards, currentDatabase(), data_01223);
CREATE DATABASE IF NOT EXISTS test_wglygwxg 
SELECT initializeAggregation('uniqExactState', toNullable(123)) = arrayReduce('uniqExactState', [toNullable(123)]);
SELECT count() > 0 FROM remote('127.2', `system`.`settings`)
DROP USER IF EXISTS 02911_user ON CLUSTER test_shard_localhost
CREATE TABLE test_733C47567A524361763C595F7967635F60506623465959506C392F3F28535F22407B53252240726C(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_4_391 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/02922_server_exit_code.sh from pid=1714' 
select [0, 0, 5, 1, 1, 0, 15, 1, 5, 10, 4, 0, 1, 0, 3, 0, 0, 0] = multiSearchAllPositions(materialize('lqwahffxurkbhhzytequotkfk'), ['rwjqudpuaiufle', 'livwgbnflvy', 'hffxurkbhh', '', '', 'xcajwbqbttzfzfowjubmmgnmssat', 'zytequ', 'lq', 'h', 'rkbhh', 'a', 'immejthwgdr', '', 'llhhnlhcvnxxorzzjt', 'w', 'cvjynqxcivmmmvc', 'wexjomdcmursppjtsweybheyxzleuz', 'fzronsnddfxwlkkzidiknhpjipyrcrzel']) from system.numbers limit 10;
ATTACH TABLE i20203_1;
create table dst (key Int) engine=Null();
select IPv4NumToString(materialize(toUInt32(0x7f000001))) == materialize('127.0.0.1');
INSERT INTO test_01193_18429.table_5_61 VALUES 
CREATE TABLE test_01193_18429.table_3_848 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 16024, 500 settings ignore_materialized_views_with_dropped_target_table=1
INSERT INTO src VALUES /* (31, 2) */ 
CREATE DATABASE IF NOT EXISTS test_c0khe0i7 
CREATE TABLE test_01193_18429.table_4_76 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT multiIf((number % 2) = 0, toUInt32(1), (number % 3) = 0, toFloat32(2), toInt16(3)) FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_wr1akle1 
ALTER TABLE concurrent_alter_column ADD COLUMN c154 DOUBLE;
CREATE TABLE test_01193_18429.table_1_481 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE pk_func (`d` DateTime, `ui` UInt32) ENGINE = MergeTree ORDER BY toDate(d) SETTINGS index_granularity = 15831, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 20830, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 222059, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1306286751, index_granularity_bytes = 13539584, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 48354, primary_key_compress_block_size = 68159
CREATE TABLE test_5F76576C78274337566F713A25207D77502F352D6D6227264D412A4924277861464F423A72242F2B(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_3frkdigr 
SELECT count() == 7 FROM (SELECT 100 AS s) AS js1 ALL FULL JOIN ( SELECT number AS s FROM numbers(6) ) AS js2 USING (s);
SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a SEMI LEFT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d ON a.id = d.idd ;
CREATE TABLE test_01193_18429.table_3_937 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP DATABASE IF EXISTS test_ov95ig0j 
CREATE DATABASE IF NOT EXISTS test_v5878vgh 
SELECT getMacro('test');
select 'TSKV';
INSERT INTO r4 SELECT 86 % 10 = 4 ? 86 - 1 : 86
create table ttl_00933_1 (b Int, a Int ttl '2100-10-10 00:00:00'::DateTime) engine = MergeTree order by tuple() partition by tuple() settings min_bytes_for_wide_part = 0;
SELECT 't join none on';
DROP DATABASE IF EXISTS test_d94poudd 
SELECT 'Running test stateless/00540_bad_data_types.sh from pid=1714' 
SELECT * FROM t1 LEFT JOIN t2 ON t1.id = t2.id AND 1 = 2 SETTINGS allow_experimental_analyzer = 1;
SELECT '-- const and non-const inputs';
SELECT `number` FROM numbers(2) WHERE `number` GLOBAL IN (`_subquery620`)
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c8) AND (NOT c3)) OR (c0 AND (NOT c2) AND (NOT c5)) OR ((NOT c4) AND (NOT c8) AND (NOT c1) AND c7 AND (NOT c1)) OR (c0 AND c0) OR ((NOT c4) AND (NOT c7) AND c7) OR ((NOT c6) AND (NOT c0)) OR (c3) OR ((NOT c1) AND (NOT c3) AND c8) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_5F3A2D366C487A47574159223F76283B312A32384D2B4F6654615E37262549453C2C7C7542534764(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS database_for_dict_01268.table_for_dict2;
ALTER TABLE concurrent_alter_column ADD COLUMN c102 DOUBLE;
CREATE TABLE test_01193_18429.table_2_280 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT Price FROM test_02428_pv1(price=20)
CREATE DATABASE IF NOT EXISTS test_9s32tljw 
INSERT INTO test_01193_18429.table_2_197 VALUES 
DROP DATABASE IF EXISTS test_59o3nf7q 
INSERT INTO test_01193_18429.table_4_447 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt32(1), toUInt32(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toInt64(3), toInt64(3)] END FROM system.numbers LIMIT 10;
CREATE DICTIONARY 02183_hashed_array_dictionary ( id UInt64 ) PRIMARY KEY id LAYOUT(HASHED_ARRAY()) SOURCE(CLICKHOUSE(TABLE '02183_dictionary_test_table')) LIFETIME(0);
SELECT * FROM map_test_index_map_keys WHERE mapContains(map, '');
CREATE TABLE test_63544126323E5A4157486B46766038326F71296D595F54537D6820766C6D7E715F537B556F2A5F33(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_6_982 VALUES 
SELECT materialize(21.99);
SELECT 'Running test stateless/01721_dictionary_decimal_p_s.sql from pid=1705' 
SELECT toUInt32OrZero('123a'), toUInt32OrZero('456');
CREATE TABLE my_table (`values` Array(Int32)) ENGINE = MergeTree ORDER BY values SETTINGS index_granularity = 12712, min_bytes_for_wide_part = 420391189, ratio_of_defaults_for_sparse_serialization = 0.6035484075546265, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 12733, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 788920, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1874236265, index_granularity_bytes = 18027701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 76105, primary_key_compress_block_size = 93685
SELECT `data_01319`.`key`, `data_01319`.`sub_key` FROM `test_khbdmxjf`.`data_01319` WHERE `key` = 1
SELECT COUNT() FROM bloom_filter_null_types_test WHERE i32 = 1 SETTINGS max_rows_to_read = 6;
SELECT CAST('T', 'Bool');
select number as x, number + 1 as y, concat('string: ', toString(number)) as s from numbers(200000) format Template SETTINGS format_template_resultset = '/usr/share/clickhouse-test/queries/0_stateless/02122_parallel_formatting_Template_test_xychffve_template_format_resultset.tmp', format_template_row = '/usr/share/clickhouse-test/queries/0_stateless/02122_parallel_formatting_Template_test_xychffve_template_format_row.tmp', format_template_rows_between_delimiter = ';\n'
CREATE DATABASE IF NOT EXISTS test_bkultiq2 
CREATE DATABASE IF NOT EXISTS test_6ait0q09 
CREATE DATABASE IF NOT EXISTS test_jyzhv3t1 
INSERT INTO r3 SELECT 63 % 10 = 3 ? 63 - 1 : 63
CREATE TABLE IF NOT EXISTS test_01444.t21136 (`x` UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 49736, min_bytes_for_wide_part = 645103364, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 6, merge_max_block_size = 15200, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 21360504, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75390, primary_key_compress_block_size = 98921
CREATE TABLE test_01193_18429.table_10_939 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select [0, 10, 0, 1, 7, 1, 6, 1, 8, 0] = multiSearchAllPositionsCaseInsensitive(materialize('pqliUxqpRcOOKMjtrZSEsdW'), ['YhskuppNFdWaTaZo', 'Coo', 'mTEADzHXPeSMCQaYbKpikXBqcfIGKs', 'PQLiUxq', 'qpRCoOK', 'PQLIu', 'XQPrcoOK', '', 'pR', 'cTmgRtcSdRIklNQVcGZthwfarLtAYh']) from system.numbers limit 10;
SELECT * FROM temp WHERE x IN (toDecimal32(32, 1));
set enable_global_with_statement=1;
select a, e from t order by e;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt8(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toUInt32(3) END FROM system.numbers LIMIT 10;
INSERT INTO 01681_database_for_flat_dictionary.simple_key_hierarchy_table VALUES 
select number, number + 1, concat('string: ', toString(number)) from numbers(200000) format TSV
drop table if exists test_index
SELECT 'Running test stateless/02868_no_merge_across_partitions_final_with_lonely.sh from pid=1713' 
CREATE TABLE test_384A6D7132324551675D6C7925653A7E2E3B4A4728746D277A6B6F334329312D77392028515C3350(x UInt8) Engine=Memory;
SELECT * FROM input_function_table_4 FORMAT CSV
select -11 as offset, -6 as length, 'Hello' as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
SELECT bitmaskToArray(toInt64(0));
INSERT INTO test_01193_18429.table_10_196 VALUES 
SELECT 'SELECT N - toUInt8(1)';
INSERT INTO bool_test (value,f) VALUES 
INSERT INTO src VALUES /* (-22, 2) */ 
SELECT 'Running test stateless/01323_if_with_nulls.sql from pid=1722' 
DROP DATABASE IF EXISTS test_zbp4l38o 
CREATE TABLE test_01193_18429.table_5_288 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE distributed_01099_a AS local_01099_a ENGINE = Distributed('test_cluster_two_shards_localhost', currentDatabase(), local_01099_a, rand());
SELECT 'const, uint';
SELECT count(v), sum(v) FROM t_full_pk WHERE k = 0;
CREATE TABLE test_local_2 (date Date, value UInt32) ENGINE = MergeTree(date, date, 8192);
CREATE TABLE test_313E3635717179225031662832776E335346722B5566624F6A553E693D69357C51664C7A69212B47(x UInt8) Engine=Memory;
CREATE TABLE IF NOT EXISTS joint ( id UUID, value LowCardinality(String) ) ENGINE = Join (ANY, LEFT, id);
INSERT INTO test_01193_18429.table_6_998 VALUES 
drop table if exists nested_map;
INSERT INTO partial_duplicates SELECT * FROM source_data;
DROP DATABASE IF EXISTS test_hnxmu8mi 
CREATE TABLE mut (`n` int, `m` int, `k` int) ENGINE = ReplicatedMergeTree('/test/02441/{database}/mut', '1') ORDER BY n SETTINGS index_granularity = 60339, min_bytes_for_wide_part = 207328743, ratio_of_defaults_for_sparse_serialization = 0.8007499575614929, replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 4216, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 889836, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 5194504, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 80264, primary_key_compress_block_size = 57982
SELECT multiplyDecimal(NULL, NULL, NULL);
CREATE TABLE test_02908_r3_39 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_39', 'r3') ORDER BY tuple()
CREATE TABLE test_01193_18429.table_6_734 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO db_01501.table_cache_dict VALUES 
CREATE TABLE test_5125576467396B65317534577D29327373225C5224445839286E5D2A5C45606A505850296A396F30(x UInt8) Engine=Memory;
SELECT sumMap(statusMap.status, statusMap.requests) FROM sum_map;
CREATE TABLE test_4244576A5465304F455350245D7E534E4D666527485A3930276C3D585A66242B5B772F6F2632205C(x UInt8) Engine=Memory;
CREATE TABLE test_6D37596426453F2C22784B54403551713E614A217D66502E3355562E2A5A3726256F77235B6C576A(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_t0g6fahg 
INSERT INTO r4 SELECT 25
select columns.5, columns.6 from file(strings1_02735.parquet, ParquetMetadata) array join columns;
INSERT INTO test_01193_18429.table_9_344 VALUES 
INSERT INTO test_ahwppifc.local_01099_b SELECT * FROM urlCluster('test_cluster_two_shards', 'http://localhost:8123/?query=select+{1,2,3}+format+TSV', 'TSV', 's String')
CREATE TABLE test_59646F244E7968417D3222244657292B29534F222C4F7E5E4E547C30334F422343293C7E67635A72(x UInt8) Engine=Memory;
select arrayIntersect([1, -1, Null], [Null, 1]);
SELECT * FROM remote('127.0.0.{1,2}', generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8)))))))))))))))))))))))))))))))))))))))))', 1, 1, 1)) LIMIT 1 FORMAT Null
select firstLine('foo\r\nbar\r\nbaz');
INSERT INTO test_01193_18429.table_4_439 VALUES 
INSERT INTO test_01193_18429.table_7_882 VALUES 
SELECT CASE WHEN (col1 % 2) = 0 THEN col2 WHEN (col1 % 3) = 0 THEN toFixedString('bar', 16) ELSE toFixedString(col4, 16) END FROM multi_if_check;
SYSTEM STOP MERGES replicated_table_for_mutations
SELECT * FROM system.replication_queue WHERE table = 'concurrent_alter_mt_5' and (type = 'ALTER_METADATA' or type = 'MUTATE_PART')
CREATE TABLE nested_in_nested_protobuf_00825 (`x` Nested(y Nested(z Int64))) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 1149, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 111, merge_max_block_size = 21350, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 68, min_merge_bytes_to_use_direct_io = 3544782809, index_granularity_bytes = 21699180, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 58960, primary_key_compress_block_size = 65120
SYSTEM START MERGES sticking_mutations
SELECT toDayOfMonth(NULL, NULL);
SELECT dictIsIn('01778_db.hierarchy_hashed_dictionary', number, number) FROM system.numbers LIMIT 6;
select 0 = multiSearchAny(materialize('abc'), ['def']);
alter table many_mutations delete where y = 999 * 2 settings mutations_sync = 0;
SELECT COUNT() FROM bloom_filter_array_lc_null_types_test WHERE has(i8, NULL);
alter table rmt2 update k = 'zero copy' where 1 settings mutations_sync=2;
SELECT intDivOrZero(toDecimal32(4.4, 2), 2.2);
INSERT INTO test_01193_18429.table_1_941 VALUES 
SELECT substring('1234' arg_1, 2 arg_2, 3 arg_3), arg_1, arg_2, arg_3;
CREATE TABLE secure1 ( date Date, a Int32, b Int32, c Int32, d Int32) ENGINE = MergeTree(date, (a, date), 8192);
select 'dictGetOrDefault', 'test_01037.dict_tuple' as dict_name, tuple(x, y) as key, dictGetOrDefault(dict_name, 'name', key, def_s), dictGetOrDefault(dict_name, 'value', key, def_i) from test_01037.points order by x, y;
SELECT dictGetDescendants('hierarchy_flat_dictionary', 5);
INSERT INTO r8 SELECT 90
INSERT INTO r1 SELECT 42
SELECT * FROM bf_ngrambf_map_keys_test WHERE map_fixed['K0'] != 'V0' SETTINGS force_data_skipping_indices='map_fixed_keys_ngrambf';
SELECT number FROM numbers LIMIT 10 FORMAT JSONCompact
CREATE TABLE test_02908_r3_142 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_142', 'r3') ORDER BY tuple()
CREATE TABLE test_2D726332322125343956576345557B6E5355732C33262B3B3262734625735A702D536D5A432B6150(x UInt8) Engine=Memory;
INSERT INTO r9 SELECT 22 % 10 = 9 ? 22 - 1 : 22
SELECT age('day', toDateTime('2014-10-26 00:00:00', 'Asia/Istanbul'), toDateTime('2014-10-27 00:00:00', 'Asia/Istanbul'));
CREATE TABLE test_4C4A37312B332A622B3D5E3E4F5379713F7C4B76366668316D4B562440734123724844285D456231(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01427_pk_and_expression_with_different_type.sql from pid=1713' 
CREATE TABLE test_3C5E6D6B3E71694B5F4A256C6E5231557C23624E217054596A51263076496E734021495865664266(x UInt8) Engine=Memory;
SELECT * FROM rename_table_multiple FORMAT TSVWithNames;
SELECT avgWeighted(toInt8(100), -1) FROM remote('127.0.0.{2,3}', currentDatabase(), dummy);
SELECT cityHash64(CAST(NULL AS Nullable(Date)));
drop table if exists test_02841
CREATE TABLE test_4B4038544E2D47214C4041572D5A232B216E6D566C5B6C6420332D592A4B29777D786C5733624F2B(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_3_897 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT intDiv(materialize(1), CAST(1, 'Nullable(Float32)'));
CREATE DATABASE IF NOT EXISTS test_g3zofr1n 
DESCRIBE TABLE system.one INTO OUTFILE '/tmp/clickhouse-test/0_stateless/test_7cyih53p/test_into_outfile_describe_table.out'
CREATE TABLE test_01193_18429.table_1_870 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT * FROM file('/var/lib/clickhouse/user_files/02661_read_from_archive_test_4dk9rw9v_tarbz2_archive{1..2}.tar.bz2 :: 02661_read_from_archive_test_4dk9rw9v_tarbz2_data1.csv') ORDER BY 1, 2
SELECT detectProgrammingLanguage('#include <iostream>');
INSERT INTO table_01 SELECT toDate('2019-10-01'), number FROM system.numbers LIMIT 1000;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (99 < 71 AND 15 > 0 ? 99 : 0)), throwIf(last != (99 < 71 AND 15 > 0 ? least(71 - 1, 99 + 15 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(71) LIMIT 99, 15);
DROP DATABASE IF EXISTS test_ktvn6iak 
SELECT multiIf((number % 2) = 0, toInt64(1), (number % 3) = 0, toUInt16(2), toInt8(3)) FROM system.numbers LIMIT 10;
alter table many_mutations delete where y = 507 * 2 settings mutations_sync = 0;
SELECT 'w/o i 1';
CREATE TABLE test_5770373834465E5434504B5F26285C756F6D74784074242C78495E595C2166774D67287574426278(x UInt8) Engine=Memory;
DROP DATABASE db_test_16wuveew;
SELECT * FROM underlying_01795 FORMAT Null;
SELECT parseDateTime64BestEffort('2020-05-14T03:37:03.253184Z', 3, 'UTC');
select 'dictGetOrDefault', 'complex_hashed_strings' as dict_name, toUInt64(0) as k, dictGetOrDefault(dict_name, 'str', tuple(k), '*'), dictGetOrDefault(dict_name, ('str'), tuple(k), ('*'));
INSERT INTO test_01193_18429.table_3_410 VALUES 
INSERT INTO test_01193_18429.table_6_978 VALUES 
SELECT name, version FROM system.zookeeper WHERE path = (SELECT zookeeper_path FROM system.replicas WHERE database = currentDatabase() AND table = 'test_table_replicated') AND name = 'metadata' FORMAT Vertical;
SELECT 'Running test stateless/01739_index_hint.sql from pid=1722' 
SELECT sparkBar(9)(event_date,cnt) FROM (SELECT sum(value) as cnt, event_date FROM spark_bar_test GROUP BY event_date);
SELECT quantileExactIf(number, number > 100) FROM numbers(90);
EXPLAIN QUERY TREE run_passes=1 SELECT value1 FROM date_t WHERE toYear(date1) BETWEEN 1993 AND 1997 AND id BETWEEN 1 AND 3 SETTINGS allow_experimental_analyzer=1;
SELECT '(max_args)', id, sequenceNextNode('forward', 'head')(dt, action, 1, action = '0', action = '1', action = '2', action = '3', action = '4', action = '5', action = '6', action = '7', action = '8', action = '9', action = '10', action = '11', action = '12', action = '13', action = '14', action = '15', action = '16', action = '17', action = '18', action = '19', action = '20', action = '21', action = '22', action = '23', action = '24', action = '25', action = '26', action = '27', action = '28', action = '29', action = '30', action = '31', action = '32', action = '33', action = '34', action = '35', action = '36', action = '37', action = '38', action = '39', action = '40', action = '41', action = '42', action = '43', action = '44', action = '45', action = '46', action = '47', action = '48', action = '49', action = '50', action = '51', action = '52', action = '53', action = '54', action = '55', action = '56', action = '57', action = '58', action = '59', action = '60', action = '61', action = '62', action = '63') from test_sequenceNextNode GROUP BY id ORDER BY id;
CREATE USER u6_01292 HOST LOCAL, NAME 'myhost.com';
select 1 = isValidUTF8(toValidUTF8('\xe2\x82\xa1')) from system.numbers limit 10;
SHOW CREATE TABLE merge_tree_pk_sql;
DROP TABLE IF EXISTS test_01915_db.test_source_table_1;
DROP DATABASE IF EXISTS test_yba8cily 
SELECT dictGetInt32('01280_db.ssd_dict', 'b', tuple('2', toInt32(-1)));
INSERT INTO test_01193_18429.table_7_179 VALUES 
SELECT toDecimal128OrZero ('\0\0\0\0\0', 4);
SELECT sum(total_count) AS total, domain FROM ( SELECT COUNT(*) AS total_count, toUInt64(0) AS facebookHits, domain FROM transactions GROUP BY domain UNION ALL SELECT COUNT(*) AS total_count, SUM(if(domain = 'facebook.com', 1, 0)) AS facebookHits, domain FROM clicks GROUP BY domain ) GROUP BY domain ORDER BY domain LIMIT 10 FORMAT JSONEachRow;
SELECT count() == 0 FROM dtest WHERE b IN toDecimal256('44.4000', 0);
select 'dictGetOrDefault', 'hashed_sparse_ints' as dict_name, toUInt64(0) as k, dictGetOrDefault(dict_name, 'i8', k, toInt8(42)), dictGetOrDefault(dict_name, 'i16', k, toInt16(42)), dictGetOrDefault(dict_name, 'i32', k, toInt32(42)), dictGetOrDefault(dict_name, 'i64', k, toInt64(42)), dictGetOrDefault(dict_name, 'u8', k, toUInt8(42)), dictGetOrDefault(dict_name, 'u16', k, toUInt16(42)), dictGetOrDefault(dict_name, 'u32', k, toUInt32(42)), dictGetOrDefault(dict_name, 'u64', k, toUInt64(42)), dictGetOrDefault(dict_name, ('i8', 'i16', 'i32'), k, (toInt8(42), toInt16(42), toInt32(42)));
select arr1, 2, 4, arraySlice(arr1, 2, -4) from array_functions;
DROP DATABASE IF EXISTS test_hx6l1lp0 
INSERT INTO sparse_tuple SELECT number, (if (number % 20 = 0, number, 0), repeat('a', number % 10 + 1)) FROM numbers(1000);
system stop merges t5;
CREATE TABLE test_01193_18429.table_1_538 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT joinGet('join_tbl', 'lcname', toLowCardinality(materialize('xxx'))) == 'yyy';
CREATE TABLE mergetree_00698 (`k` UInt32, `n.x` Array(UInt64), `n.y` Array(UInt64)) ENGINE = MergeTree ORDER BY k SETTINGS index_granularity = 53465, min_bytes_for_wide_part = 770159406, ratio_of_defaults_for_sparse_serialization = 0.21098299324512482, replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 18956, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 13840948, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 92188, primary_key_compress_block_size = 13348
SELECT 'Running test stateless/01075_window_view_proc_tumble_to_now_populate.sh from pid=1726' 
SELECT javaHashUTF16LE();
SELECT sum(`y`) AS `s` FROM `test_2any45c2`.`big_array` ARRAY JOIN `x` AS `y`
SELECT 'Running test stateless/02736_bit_count_big_int.sql from pid=1714' 
CREATE TABLE test_446A6F6E3A302B752F77716B697D6635642A5457235A5F225E354F6D352C5A347B4B61433F672370(x UInt8) Engine=Memory;
SELECT a, b, a = b, a < b, a > b, a != b, a <= b, a >= b FROM decimal ORDER BY a;
CREATE DATABASE IF NOT EXISTS test_60ajruco 
system flush distributed dedup_dist
SELECT hex(toString(countState())) FROM (SELECT * FROM system.numbers LIMIT 10);
alter table many_mutations delete where y = 20 * 2 settings mutations_sync = 0;
SET parallel_replica_offset = 1;
INSERT INTO test_01193_18429.table_7_817 VALUES 
DROP TABLE IF EXISTS bloom_filter_not_has;
SELECT count(*) FROM source WHERE toYYYYMM(dt) >= 202312 SETTINGS allow_experimental_analyzer=1;
SELECT test_table.a FROM test_table ORDER BY (test_table.a != test_table.b) + 1 AND (test_table.a != test_table.c) + 1;
CREATE TABLE test_34336A7E4E7A3C506D47335C233D33673D515C745D77702C2C37796345427527254C7645242F2F5C(x UInt8) Engine=Memory;
select * from file(02376_data.arrow);
DROP DATABASE 01902_db2;
CREATE TABLE test_01193_18429.table_7_373 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'editDistance', s1, s2, editDistance(s1, s2) FROM t ORDER BY *;
CREATE TABLE test_extract(str String, arr Array(Array(String)) ALIAS extractAllGroupsHorizontal(str, '\\W(\\w+)=("[^"]*?"|[^",}]*)')) ENGINE=MergeTree() PARTITION BY tuple() ORDER BY tuple();
SELECT * FROM parquet_load
INSERT INTO test_01193_18429.table_6_583 VALUES 
select toDateOrDefault(cast(19 as UInt16));
DROP DATABASE IF EXISTS test_oueqtpy9 
CREATE DATABASE IF NOT EXISTS test_nzifqzf7 
SELECT toTypeName(now('UTC') - 1);
INSERT INTO r3 SELECT 43 % 10 = 3 ? 43 - 1 : 43
SELECT geohashesInBox(1., 2., 3., 4., 1);
CREATE TABLE test_3458226C327A602E695845464F2A6E5C736F35352F307D223D657B4B585841335D316762443F2D65(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_4_339 VALUES 
SELECT name FROM system.detached_parts WHERE table = 'replica2' AND database = currentDatabase();
INSERT INTO test_01193_18429.table_3_245 VALUES 
SELECT IPv6NumToString(bitXor(IPv6StringToNum('2001:0db8:85a3:8d3a:b2da:8a2e:0370:7334'), materialize(IPv6StringToNum('fe80::1ff:fe23:4567:890a')))) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_7_881 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
EXPLAIN SYNTAX SELECT value1 FROM date_t WHERE toYear(date1) = 1993 AND id BETWEEN 1 AND 3;
CREATE TABLE test_01193_18429.table_3_172 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_7B56333E31544D455C3F43225C59714D55685676635D57715C5B283369267C787A4A4042666A5945(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt8(1) WHEN (number % 3) = 0 THEN toInt64(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/02953_slow_create_view.sql from pid=1718' 
SELECT 'Running test stateless/01759_optimize_skip_unused_shards_zero_shards.sql from pid=1722' 
CREATE TABLE test_02908_r1_38 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_38', 'r1') ORDER BY tuple()
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 14016, 500 settings ignore_materialized_views_with_dropped_target_table=1
INSERT INTO test_01193_18429.table_5_807 VALUES 
INSERT INTO test_01193_18429.table_6_443 VALUES 
CREATE TABLE test_334829432F372920663B2D6D7E7D5D2B4A4673456D6C33374171642E3A51734966267B7E2A5D6E7E(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_7_559 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE DATABASE `'`;
CREATE TABLE test_6A2D50455A60766431535629483C443D63473322713F3E3A4B5623575521577B6C74736234224568(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_10_145 VALUES 
select 0 = multiMatchAny(materialize('abcd'), materialize(['cdefgh'])) from system.numbers limit 10;
INSERT INTO dst_14 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 65
DROP DATABASE IF EXISTS test_0vuef8ek 
SELECT '-- After DROP PARTITION --';
select 0 = multiSearchAny(materialize('abc'), ['defg']);
drop table if exists prefetched_table;
INSERT INTO test_01193_18429.table_1_459 VALUES 
SELECT *, id FROM (SELECT [0] AS id) AS subquery ARRAY JOIN id AS id INNER JOIN test_table USING (id);
CREATE TABLE test_392C395E5E64405B5D413D73235C5574245A59616E43626662742D554338427754723C2C4C545C46(x UInt8) Engine=Memory;
SELECT firstSignificantSubdomain('ftp://www.meta.com.ua/news.html'), firstSignificantSubdomain('https://www.bigmir.net/news.html'), firstSignificantSubdomain('magnet:ukr.abc'), firstSignificantSubdomain('ftp://www.yahoo.co.jp/news.html'), firstSignificantSubdomain('https://api.www3.static.dev.ÃÂ²ÃÂ²ÃÂ².ÃÂ³ÃÂÃÂ³ÃÂ».ÃÂºÃÂ¾ÃÂ¼'), firstSignificantSubdomain('//www.meta.com.ua/news.html');
CREATE TABLE test_77706A7C4B7353507339544F6756314A433D7A48482B6D3F2051312A67607C575E3B2A3D6E2F334C(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_5_95 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP TABLE test_optimize_exception_replicated
CREATE TABLE test_3E5245222B78545A3378564F5A4D592178443D202A252A5C587C665E6369696D5B356C314D387051(x UInt8) Engine=Memory;
INSERT INTO test_00595 VALUES
CREATE TABLE test_02908_r2_217 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_217', 'r2') ORDER BY tuple()
SELECT 0, toFixedString('Hello', 10), bin(bitShiftLeft(toFixedString('Hello', 10), 0));
SELECT MD5(NULL);
INSERT INTO test_01193_18429.table_1_404 VALUES 
explain query tree select k, (k=1 or k=2 or k=3), s, (s=21), (s=21 or s=22), (s=21 or s=22 or s=23) from bug SETTINGS allow_experimental_analyzer = 1;
INSERT INTO r9 SELECT 43
INSERT INTO test_01193_18429.table_6_822 VALUES 
SELECT x, y FROM (SELECT number AS x FROM system.numbers LIMIT 3) js1 CROSS JOIN (SELECT number AS y FROM system.numbers LIMIT 5) js2;
SELECT count(), toStartOfHour(date) AS Hour FROM movement WHERE (date >= toDateTime('2020-01-22T10:00:00', 'Asia/Istanbul')) AND (date <= toDateTime('2020-01-22T23:00:00', 'Asia/Istanbul')) GROUP BY Hour ORDER BY Hour DESC 
SELECT toStartOfSecond(NULL);
INSERT INTO r8 SELECT 72
SELECT toTypeName(variantType(v::Variant(UInt64, String, Array(UInt64), Date))) from test limit 1;
INSERT INTO test_01193_18429.table_1_183 VALUES 
SELECT sumIf(`dummy`, `dummy`) FROM view(SELECT CAST(`dummy`, 'Nullable(UInt8)') AS `dummy` FROM `system`.`one`)
INSERT INTO test_01193_18429.table_4_651 VALUES 
CREATE TABLE test_674B3D543B225E3B55264F263D4D5E6F55777737752C603158373D5531296361233D4D7C36653630(x UInt8) Engine=Memory;
alter table many_mutations delete where y = 917 * 2 settings mutations_sync = 0;
CREATE DATABASE IF NOT EXISTS test_ig8372pb 
CREATE INDEX idx_tab4_0 ON tab4 (col3 DESC,col4 DESC,col0);
INSERT INTO test_01193_18429.table_8_918 VALUES 
DROP TABLE IF EXISTS parallel_replicas_backup;
 DROP TABLE test_lazy_01014_concurrent_test_bo56il5m.tlog; 
SET max_block_size=1;
SELECT dateDiff('day', materialize(toDate('2015-08-18', 'UTC')), materialize(toDateTime64('2015-08-19 00:00:00', 3, 'UTC')));
alter table many_mutations delete where y = 461 * 2 settings mutations_sync = 0;
SELECT reinterpretAsUInt8(NULL);
SELECT has([111, NULL, 222], NULL);
INSERT INTO test_01193_18429.table_9_27 VALUES 
SELECT * FROM nullable_minmax_index ORDER BY k, v;
INSERT INTO test_01193_18429.table_8_867 VALUES 
select number >= 0 and if(number != 0, intDiv(1, number), 1) from numbers(5);
INSERT INTO partslost_0 SELECT toString(number) AS x from system.numbers LIMIT 10000;
INSERT INTO tn2 VALUES 
SELECT arrayStringConcat(arr, '; ') FROM (SELECT materialize([toIPv4('127.0.0.1'), Null, toIPv4('1.0.0.1')]) AS arr);
CREATE TABLE test_3F71564C5C616F62324B6C50257D525043702A252340735535652C662E707E3C4F442963594F2A75(x UInt8) Engine=Memory;
CREATE TABLE test_6959286A346E223727362E614269226823587A717975704C39556537406659764F5C6C565C4A5D2B(x UInt8) Engine=Memory;
EXPLAIN SYNTAX (SELECT sum(uint64 - 2) + sum(uint64 - 3) From test_table);
SELECT 'Aggregating Merge Tree';
GRANT INSERT ON async_inserts_02246 TO r02246
SELECT 'join_algorithm = default, join_use_nulls = 1, t1 JOIN t2';
INSERT INTO r7 SELECT 95
drop table if exists src_02224;
DROP DATABASE IF EXISTS test_yrk8ucag 
CREATE TABLE test_01193_18429.table_9_244 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO r3 SELECT 24 % 10 = 3 ? 24 - 1 : 24
SELECT t1.*, t2.* FROM t1 LEFT JOIN t2 ON t1.x = t2.x ORDER BY x, t2.y;
CREATE TABLE test_01193_18429.table_6_645 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
EXPLAIN PIPELINE SELECT a, e FROM t_fixed_prefix ORDER BY a, e SETTINGS optimize_read_in_order = 1
SELECT today() = toDate(now());
INSERT INTO test_01193_18429.table_2_417 VALUES 
DROP DATABASE IF EXISTS test_e2cdqibo 
select 1 = multiSearchAny(materialize('abcdefgh'), ['c']);
OPTIMIZE TABLE t_json_3 FINAL;
drop table if exists nested_map_multiple_values;
CREATE TABLE test_01193_18429.table_9_26 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT '#02136_scalar_subquery_3', (SELECT max(number) FROM numbers(1000)) as n, (SELECT max(number) FROM numbers(1000)) as n2;
select * from count_lc_test where arr > [];
CREATE TABLE test_2D53354441706F38447C47247877335F317079375B593A4879736E343A42574768782F3A33735143(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_4_74 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT *, b FROM merge_00160 WHERE x IN (12345, 67890) AND NOT ignore(blockSize() < 10 AS b) ORDER BY x;
SHOW TABLES NOT LIKE '%';
INSERT INTO test_optimize_exception VALUES 
select 0 = multiSearchAnyCaseInsensitive(materialize('OySHBUpomaqcWHcHgyufm'), ['lihJlyBiOyyqzeveErImIJuJlfl', 'WyfAXSwZPcxOEDtiCGBJvkCHNnYfA', 'hZ', 'fDQzngAutwHSVeoGVihUyvHXmAE', 'aCpcZqWKdNqTdLwBnQENgQptIyRuOT', 'PFQVrlctEwb', 'ggpNUNnWqoubvmAFdjhLXzohmT', 'VFsfaLwcwNME', 'nHuIzNMciJjmK', 'OryyjtFfIaxViPXRyzKiMu', 'XufDMKXzqKjYynmmZzZHcDm', 'xWbDgq', 'ArElRZqdLQmN', 'obzvBzKQuJXZHMVmEBgFdnnQvtZSV', 'ZEHSnSmlbfsjc', 'gjmWPiLylEkYMTFCOVFB']) from system.numbers limit 10;
CREATE USER u2_01292 DEFAULT ROLE NONE;
CREATE DATABASE IF NOT EXISTS test_oqwnnxqg 
SELECT IPv4CIDRToRange(toIPv4('0.0.0.0'), 8);
INSERT INTO test_01193_18429.table_7_420 VALUES 
CREATE TABLE test_01193_18429.table_5_552 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_7_484 VALUES 
SELECT 'Running test stateless/01247_least_greatest_filimonov.sql from pid=1715' 
SELECT intDivOrZero((5,4), 2);
 SELECT sipHash64(9, groupArray((name, type))) FROM (SELECT name, type FROM system.columns WHERE database = 'system' AND table = 'trace_log' ORDER BY position) 
EXPLAIN QUERY TREE run_passes = 1 SELECT id, value FROM test_table;
CREATE TABLE test_01193_18429.table_5_291 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
EXPLAIN QUERY TREE SELECT uniqCombined(tuple('')) FROM numbers(1);
SELECT 37 = COUNTDistinct(prefix) FROM test_7kssh40k.table_from_ipv4_trie_dict
SHOW CREATE QUOTA sqllt_quota FORMAT Null;
select concat(materialize('a'), toFixedString('b', 1), materialize('c')) == 'abc' from system.numbers limit 5;
INSERT INTO test_bit_shift_right_string_integer VALUES
CREATE TABLE complex_key_source_table_01862 ( id UInt64, id_key String, value String ) ENGINE = Memory();
DROP TEMPORARY TABLE IF EXISTS t2;
SELECT CASE WHEN 1 THEN ['foo', 'bar'] WHEN 1 THEN [col4, 'bar'] ELSE ['foo', col7] END FROM multi_if_check;
DROP TABLE partitioned_by_week_replica1 SYNC;
SELECT 'Running test stateless/00089_group_by_arrays_of_fixed.sql from pid=1718' 
INSERT INTO test_01193_18429.table_1_398 VALUES 
SELECT sumIf(1, number % 2 == 0) FROM numbers(100);
SELECT toUInt32(number) y, toDecimal32(y, 1), toDecimal64(y, 5), toDecimal128(y, 6), toDecimal256(y, 7) FROM numbers(1);
DROP TABLE buffer_00763_1
select *, length(arr) as l from prewhere_column_missing where l = 0;
SHOW CREATE t_2710_show_table;
SELECT a FROM lower_test WHERE lower(b) IN ('a','b') order by a;
CREATE TABLE test_01193_18429.table_4_185 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'Running test stateless/01558_transform_null_in.sql from pid=1720' 
SELECT x, s, z FROM VALUES('x UInt64, s String, z ALIAS concat(toString(x), \': \', s)', (1, 'hello'), (2, 'world'));
SELECT dumpColumnStructure(['Hello', 'World']::Array(LowCardinality(String)));
SELECT formatDateTime(toDateTime('1970-01-01 00:00:00', 'Asia/Kolkata'), '%z');
SELECT -1_2_3_4;
SELECT 'Running test stateless/01269_alias_type_differs.sql from pid=1705' 
select hex(sipHash64Keyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33)));
ALTER TABLE table_for_freeze FREEZE PARTITION '3' WITH NAME 'test_01417_single_part' FORMAT TSVWithNames SETTINGS alter_partition_verbose_result = 1;
SELECT create_table_query FROM system.tables WHERE database ILIKE 'INFORMATION_SCHEMA' AND table ILIKE 'TABLES';
CREATE TABLE null_table_buffer (number UInt64) ENGINE = Buffer(currentDatabase(), null_table, 1, 1, 1, 100, 200, 10000, 20000);
INSERT INTO 02703_keeper_map_concurrent_4 VALUES 
DROP DICTIONARY IF EXISTS 02186_range_dictionary;
CREATE DATABASE IF NOT EXISTS test_4dj4o6s8 
SELECT 'Running test stateless/01060_shutdown_table_after_detach.sql from pid=1705' 
select 2 format TSV 
DROP DATABASE IF EXISTS test_rzzwu7f5 
select '----- finalizeAggregation / State / ip6 -----';
SELECT arrayPartialShuffle([1,2,3,4,5,6,7,8,9,10], 1, 0xbad_cafe);
DROP DATABASE IF EXISTS test_xtljp7tx 
CREATE TABLE test_01193_18429.table_8_598 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'Running test stateless/02343_analyzer_column_transformers_strict.sql from pid=1724' 
SELECT count() from tab_02473 PREWHERE b > 0 AND b <= 70 AND c > 23 AND c <= 53 AND d > 5 AND d <= 35 WHERE a == 0;
DROP DATABASE IF EXISTS test_zcebcq3g 
DROP TABLE IF EXISTS default_constraints;
EXPLAIN QUERY TREE run_passes = 0 SELECT arrayMap(x -> x + id, [1, 2, 3]) FROM test_table;
SELECT avgWeighted(toUInt256(1), toInt256(2));
CREATE TABLE test_7C68244C7576576E5A3F543B3E547D3D2A78416A3F432A3F5C3C322044485D5A542A60322D4E3622(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_9_271 VALUES 
DROP TABLE mv_00610;
CREATE TABLE test_5D7538464A4269296A3E2530466F413E4B682F45635B5D26496B4D5F363A5E224076773F7B565E58(x UInt8) Engine=Memory;
select polygonsWithinSpherical([[(29.453587685533865,59.779570356240356),(29.393139070478895,52.276266797422124),(40.636581470703206,59.38168915000267),(41.21084331372543,59.103467777099866),(29.786055068336193,52.146627480315004),(31.23682182965546,52.16517054781818),(41.69443223416517,58.85424941916091),(42.51048853740727,58.47703162291134),(32.59691566839227,52.22075341251539),(34.289476889931414,52.22075341251539),(43.02430176537451,58.07974369546071),(43.02430176537451,57.25537683364851),(35.468224883503325,52.2022335126388),(37.16078610504247,52.23926559241349),(43.02430176537451,56.26136189644947),(43.02430176537451,55.326904361850836),(38.33953409861437,52.16517054781818),(40.09254393520848,52.16517054781818),(44.4146199116388,55.3097062225408),(44.47506852669377,59.80998197603594),(39.72985224487867,59.931351417569715),(30.23941968124846,53.67744677450975),(30.20919537372098,54.63314259659509),(38.73245009647167,59.94649146557819),(37.2816833351524,59.97675082987618),(30.23941968124846,55.2752875586599),(30.33009260383092,56.19415599955667),(36.28428118674541,59.96162460231375),(34.863738732953635,59.97675082987618),(30.178971066193498,56.97640788219866),(30.178971066193498,57.91957806959033),(33.65476643185424,59.94649146557819),(32.32489690064491,59.94649146557819),(30.481214141468342,58.85424941916091),(30.571887064050795,59.99187015036608),(29.453587685533865,59.779570356240356)]], [[[(33.473420586689336,58.85424941916091),(32.23422397806246,58.492830557036),(32.173775363007486,58.03176922751564),(31.508840597402823,57.499784781503735),(31.750635057622702,56.86092686957355),(31.508840597402823,55.941082594334574),(32.20399967053497,55.515591939372456),(31.84130798020516,54.998862226280465),(31.418167674820367,54.422670886434275),(32.47601843828233,53.83826377018255),(32.08310244042503,53.408048308050866),(33.171177511414484,52.82758702113742),(34.77306581037117,52.91880107773494),(34.77306581037117,53.784726518357985),(34.108131044766516,54.17574726780569),(35.07530888564602,54.59813930694554),(34.25925258240394,54.96417435716029),(35.01486027059106,55.361278263643584),(33.50364489421682,55.37845402950552),(32.7480372060297,55.90721384574556),(35.67979503619571,55.68634475630185),(32.83871012861215,56.311688992608396),(34.591719965206266,56.29492065473883),(35.7100193437232,56.311688992608396),(33.83611227701915,56.695333481003644),(32.95960735872209,56.9434497616887),(36.072711034053015,57.091531913901434),(33.171177511414484,57.33702717078384),(36.193608264162954,57.499784781503735),(33.23162612646945,57.77481561306047),(36.43540272438284,58.04776787540811),(33.62454212432676,58.27099811968307),(36.344729801800376,58.54018474404165),(33.83611227701915,58.68186423448108),(34.74284150284369,59.565911441555244),(33.473420586689336,58.85424941916091)]], [[(34.65216858026123,58.91672306881671),(37.19101041256995,58.68186423448108),(36.01226241899805,58.28688958537609),(37.16078610504247,58.04776787540811),(35.74024365125068,57.79092907387934),(37.009664567405046,57.499784781503735),(35.77046795877817,57.25537683364851),(36.979440259877556,57.07510745541089),(34.22902827487645,56.794777197297435),(36.7074214921302,56.210968525786996),(34.712617195316206,56.10998276812964),(36.55629995449277,55.63519693782703),(35.13575750070099,55.53270067649592),(36.43540272438284,55.34409504165558),(34.83351442542614,55.01619492319591),(35.61934642114075,54.49294870011772),(34.89396304048112,54.12264226523038),(35.37755196092087,53.046178687628185),(37.43280487278982,52.95523300597458),(35.92158949641559,53.80257986695776),(36.91899164482259,53.856094327816805),(36.01226241899805,54.75541714463799),(37.765272255592166,55.189110239786885),(36.828318722240134,55.44708256557195),(38.03729102333953,55.652253637168315),(36.64697287707522,55.941082594334574),(38.21863686850443,56.05939028508024),(36.37495410932787,56.64551287174558),(38.30930979108689,56.992876013526654),(37.16078610504247,57.25537683364851),(38.127963945921984,57.516020773674256),(37.43280487278982,57.710289827306724),(38.33953409861437,57.935626886818994),(37.40258056526235,58.31865112960426),(38.58132855883426,58.744648733419496),(37.31190764267989,59.02578062465136),(34.65216858026123,58.91672306881671)]], [[(38.52087994377928,59.11898412389468),(39.54850639971376,58.713270635642914),(38.369758406141855,58.28688958537609),(38.85334732658162,58.06375936407028),(38.33953409861437,57.710289827306724),(38.73245009647167,57.48354156434209),(38.21863686850443,57.271721400459285),(38.97424455669155,56.87744603722649),(37.463029180317314,56.5623320541159),(38.94402024916407,56.05939028508024),(38.18841256097694,55.856355210835915),(38.490655636251795,55.53270067649592),(37.795496563119656,55.39562234093384),(38.30930979108689,55.154587013355666),(36.7074214921302,54.65063295250911),(37.31190764267989,53.92734063371401),(36.979440259877556,53.58783775557231),(37.855945178174615,52.91880107773497),(39.57873070724124,52.69956490610895),(38.33953409861437,53.281741738901104),(40.00187101262603,53.35396273604752),(39.54850639971376,53.58783775557231),(40.24366547284591,53.58783775557231),(39.97164670509855,53.98069568468355),(40.60635716317572,54.03398248547225),(40.39478701048334,54.44025165268903),(39.54850639971376,54.56310590284329),(39.54850639971376,54.87732350170489),(40.39478701048334,54.87732350170489),(40.39478701048334,55.24083903654295),(39.82052516746112,55.2752875586599),(39.760076552406154,55.75443792473942),(40.57613285564824,55.78844000174894),(40.425011318010824,56.19415599955667),(39.82052516746112,56.07626182891758),(39.79030085993364,56.41214455508424),(40.48545993306579,56.495655446714636),(40.33433839542836,56.95993246553937),(39.79030085993364,56.992876013526654),(39.72985224487867,57.46729112028032),(40.33433839542836,57.46729112028032),(40.24366547284591,58.04776787540811),(39.63917932229622,58.04776787540811),(39.63917932229622,58.382088724871295),(40.33433839542836,58.382088724871295),(40.45523562553831,58.9011152358548),(38.52087994377928,59.11898412389468)]]]) format TSV;
INSERT INTO src VALUES /* (31, 1) */ 
SELECT halfMD5();
SELECT dictGetUInt64('01280_db.ssd_dict', 'a', ('unknown', toInt32(0))), dictGetInt32('01280_db.ssd_dict', 'b', ('unknown', toInt32(0))), dictGetString('01280_db.ssd_dict', 'c', ('unknown', toInt32(0)));
CREATE TABLE test_47456239473737256F4C54326E5E5767705F773B376659263B2E5875423626707429684E7A685A59(x UInt8) Engine=Memory;
select concat('a', materialize(toFixedString('b', 1)), materialize(toFixedString('c', 1))) == 'abc';
alter table many_mutations delete where y = 204 * 2 settings mutations_sync = 0;
select s2CellsIntersect(9926595209846587392, 9937259648002293760);
CREATE DATABASE IF NOT EXISTS test_3jf9fl6r 
SELECT 'Running test stateless/01852_cast_operator.sql from pid=1713' 
SELECT 32
select * from needle_table;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 34680, 500 settings ignore_materialized_views_with_dropped_target_table=1
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (97 < 61 AND 10 > 0 ? 97 : 0)), throwIf(last != (97 < 61 AND 10 > 0 ? least(61 - 1, 97 + 10 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(61) LIMIT 97, 10);
SELECT cond_non_constant_nullable ? then_non_constant : constant_null AS res FROM nullable_00431;
select x + y + 1, argMax(x, y) * sum(x - y) as s from test_agg_proj group by x + y + 1 order by s desc limit 5 settings optimize_use_projections=1
CREATE TABLE test_01193_18429.table_2_304 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_6_64 VALUES 
CREATE TABLE test_01193_18429.table_4_447 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/01891_partition_hash.sql from pid=1720' 
INSERT INTO test_02908_r1_193 SELECT rand64() FROM numbers(5);
CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_9;
select groupArray(s) from (select sum(n) s from (select toDecimal32(number, 2) as n from numbers(1000)));
SELECT * FROM INFORMATION_SCHEMA.STATISTICS LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
SELECT count() OVER (ORDER BY number + 1) + 1 as foo FROM numbers(10) ORDER BY foo;
SELECT * FROM nullable_minmax_index WHERE v > 2;
SELECT count() == 0 FROM dtest WHERE a IN toDecimal32('33.3000', 4);
INSERT INTO table_gcd_codec_int128 SELECT number FROM system.numbers LIMIT 50;
SELECT CAST(5 AS IntervalMillisecond);
CREATE TABLE test_01193_18429.table_3_237 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select arrayPushFront(['a', 'b'], 'cd');
INSERT INTO zero_rows_per_granule (p, k, v1, v2) VALUES 
CREATE DATABASE IF NOT EXISTS test_milrh6oz 
insert into test_datetime values 
alter table data_01900_2 update s = 'bar_56' where 1;
SELECT seriesPeriodDetectFFT([10.1, 10, 400, 10.1, 10, 400, 10.1, 10, 400, 10.1, 10, 400, 10.1, 10, 400, 10.1, 10, 400, 10.1, 10, 400, 10.1, 10, 400]);
SELECT data FROM t_json_files ORDER BY file FORMAT JSONEachRow
CREATE TABLE log (x UInt64, y UInt64, z UInt64) ENGINE = TinyLog
SELECT toInt32OrZero(NULL);
SELECT arrayPartialReverseSort(NULL, NULL, NULL);
INSERT INTO test_01193_18429.table_3_930 VALUES 
SELECT constant_false ? constant_null : else_constant AS res FROM nullable_00431;
DROP DATABASE IF EXISTS test_6pmkmeim 
insert into t_row_exists values
DETACH TABLE test_hklfjq8i.tablefunc05
SELECT count() FROM t_cnf_fuzz WHERE (c1 AND c4 AND c8 AND c9 AND c9) OR ((NOT c2) AND c0) OR ((NOT c3) AND (NOT c6)) SETTINGS convert_query_to_cnf = 1
INSERT INTO test_01193_18429.table_1_698 VALUES 
insert into t_different_dbs select number % 1000, number % 1000 from numbers_mt(1e6);
SELECT COUNT() FROM system.mutations WHERE table='concurrent_mutate_mt_3' and is_done=0
select parseDateTimeInJodaSyntax('23', 'HH', 'UTC') = toDateTime('1970-01-01 23:00:00', 'UTC');
CREATE TABLE test_343A72282D3879563D57536C7536472A447C4E68705F60745378485D71696A4436235632594E3879(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS 02763_a_merge;
CREATE TABLE test_455D422D4C23604B727D244F2E6E79452148437D736C3D5E4C6D277C756320237D6D33242A6A3E40(x UInt8) Engine=Memory;
SELECT multiIf((col1 % 2) = 0, toFixedString('foo', 16), (col1 % 3) = 0, toFixedString('bar', 16), col4) FROM multi_if_check;
alter table data_01900_1 update s = 'foo_67' where 1;
CREATE TABLE ttl_group_by (`d` Date, `i` UInt32, `v` UInt64) ENGINE = MergeTree ORDER BY (toStartOfMonth(d), i % 10) TTL d + toIntervalYear(10) GROUP BY toStartOfMonth(d), i % 10 SET d = any(toStartOfMonth(d)), i = any(i % 10), v = sum(v), d + toIntervalYear(40) GROUP BY toStartOfMonth(d) SET d = any(toStartOfMonth(d)), v = sum(v) SETTINGS index_granularity = 14059, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.8294973373413086, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 16705, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 936608, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 6506772, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 43797, primary_key_compress_block_size = 61055
CREATE TABLE xMM(d DateTime('Asia/Istanbul'),a Int64, f Int64) ENGINE = MergeTree PARTITION BY (toYYYYMM(d), a) ORDER BY tuple() SETTINGS index_granularity = 8192;
DROP TABLE IF EXISTS rename_table_multiple_compact;
CREATE TABLE test_5F6F5A3A5571256731785C663D48666950682750325E21225B6531357643526B794D5544512E764A(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02789_describe_table_settings.sql from pid=1720' 
from aboba derive { a = 2, b = s"LEFT(message, 2)" } select { user_id, message, a, b };
CREATE TABLE test_01193_18429.table_2_670 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT materialize('ÃÂÃÂÃÂ¸ÃÂ²ÃÂµÃÂ, optimized World') AS s WHERE (s LIKE 'hell%') OR (s ILIKE '%ÃÂ¿ÃÂÃÂ¸ÃÂ²ÃÂµÃÂ%') OR (s LIKE 'world%') SETTINGS optimize_or_like_chain = 1, allow_experimental_analyzer = 1;
CREATE INDEX idx_tab4_5 ON tab4 (col0,col3);
CREATE TABLE test_2B303F3D75747E7959364F346A6D70544333434E3C6142564B3760396D54373832453B5361344B3D(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_7_604 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT * FROM numbers(34601)
ALTER TABLE tmp MODIFY COLUMN s String DEFAULT toString(x+1);
WITH toDate(today() + rand() % 4096) AS t SELECT count() FROM numbers(1000000) WHERE formatDateTime(t, '%F') != toString(t);
SELECT tupleHammingDistance(t2, (546, 456)) FROM defaults;
SELECT 'Running test stateless/02049_clickhouse_local_merge_tree.expect from pid=1713' 
SELECT 'dt > const dt64' FROM dt64test WHERE dt_column > toDateTime64('2020-01-13 13:37:00', 3);
SELECT VAR_POP(-1);
INSERT INTO test_01193_18429.table_2_168 VALUES 
SELECT fromUnixTimestamp64Milli(NULL, NULL);
EXPLAIN PLAN SELECT count() FROM t1 LEFT JOIN t2 ON t1.x = t2.x
SELECT SUM(toUInt64(value1)) > 1725 FROM concurrent_alter_mt_4
SET max_block_size = 9;
select * from (explain plan actions = 1 select * from tab order by (a + b) * c desc, sin(a / b)) where explain like '%sort description%';
SELECT 'Running test stateless/00441_nulls_in.sql from pid=1713' 
alter table many_mutations delete where y = 135 * 2 settings mutations_sync = 0;
ALTER TABLE sqllt.table CLEAR COLUMN new_col;
CREATE TABLE 02181_test_table ( id UInt64, value String ) ENGINE = TinyLog;
DROP DATABASE IF EXISTS test_oifhubqc 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (33 < 45 AND 64 > 0 ? 33 : 0)), throwIf(last != (33 < 45 AND 64 > 0 ? least(45 - 1, 33 + 64 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(45) LIMIT 33, 64);
SELECT 'Running test stateless/01946_tskv.sh from pid=1715' 
SELECT CASE WHEN (number % 2) = 0 THEN toUInt64(1) WHEN (number % 3) = 0 THEN toUInt8(2) ELSE toUInt8(3) END FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_rvhkad4n 
INSERT INTO test_01193_18429.table_4_235 VALUES 
CREATE TABLE test_6844432C585B5F3B3055274257222D3B64507924794568653048442A5245716137752141273D5742(x UInt8) Engine=Memory;
INSERT INTO r10 SELECT 82
INSERT INTO ttl_empty_parts SELECT 1, toDate('2050-01-01') + number from numbers(500);
alter table many_mutations delete where y = 571 * 2 settings mutations_sync = 0;
CREATE TABLE summing_composite_key (d Date, k UInt64, FirstMap Nested(k1 UInt32, k2ID Int8, s Float64), SecondMap Nested(k1ID UInt64, k2Key String, k3Type Int32, s Int64)) ENGINE = SummingMergeTree(d, k, 1);
SELECT id, amount FROM ids INNER JOIN discounts_dict ON id = advertiser_id ORDER BY id, amount SETTINGS join_algorithm = 'direct,hash';
select 'Distributed(rand)-over-Distributed(rand)';
SELECT 'Running test stateless/01443_merge_truncate_long.sh from pid=1715' 
SELECT Y, uniqCombined(20)(Z) FROM (SELECT number AS X, IPv4NumToString(toUInt32(X)) AS Z, (3*X*X - 7*X + 11) % 37 AS Y FROM system.numbers LIMIT 3000) GROUP BY Y ORDER BY Y;
CREATE TABLE test_02908_r2_111 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_111', 'r2') ORDER BY tuple()
CREATE TABLE test_01193_18429.table_7_420 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_10_754 VALUES 
INSERT INTO test_01193_18429.table_4_769 VALUES 
INSERT INTO test_01193_18429.table_6_268 VALUES 
DROP TABLE log;
CREATE TABLE test_6C5048276034645D4D5855637D767E553C7653705623784C4E2F7E5A7B3D466B5842726A6D702430(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02884_virtual_column_order_by.sql from pid=1714' 
SELECT date_trunc('hour', toDateTime64('2020-01-01 20:11:22.123', 3, 'Europe/London'), 'Asia/Tokyo');
CREATE DATABASE IF NOT EXISTS test_ilpidgux 
CREATE TABLE test_01193_18429.table_2_552 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/00700_decimal_compare.sql from pid=1722' 
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt16(1), toUInt16(2)] WHEN (number % 3) = 0 THEN [toInt8(2), toInt8(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
SELECT arrayWithConstant(number, 'Hello') FROM numbers(10);
DESC file('/var/lib/clickhouse/user_files/02661_read_from_archive_test_vdj32cgq_tar_archive1.tar :: 02661_read_from_archive_test_vdj32cgq_tar_data1.csv')
SELECT hasTokenCaseInsensitive('hayhayhayhayhayhayhayhayhayhayhayhayhayhayhayhayhayhayneedle', 'n'), ' expecting ', 0;
CREATE DATABASE IF NOT EXISTS test_6qvd1ev5 
CREATE TABLE test_01193_18429.table_2_861 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
ATTACH TABLE view_nulls_set;
CREATE TABLE test_346B324E58357C5D262A453235744636296B585C77695D6E5B503E3B567152357931286B71683E6F(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01521_format_readable_time_delta2.sql from pid=1720' 
select 323 from test54378 where pk_date in (toDate('2018-04-19'));
SELECT id, any(value1), any(value2), any(value3), any(value4) FROM test_table_signed_values GROUP BY id ORDER BY id;
SELECT count() FROM lc_nullable WHERE has(i8, 10);
CREATE TABLE test_363330592D30204E3234474348736A653973552B757752222F4E612C3C3C4961223766336F7D6236(x UInt8) Engine=Memory;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), N < toInt32(-1) as r FORMAT CSV;
CREATE TABLE quorum1 (`x` UInt32, `y` Date) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00732/quorum_have_data', '1') PARTITION BY y ORDER BY x SETTINGS index_granularity = 41857, min_bytes_for_wide_part = 486886302, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 19193, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 119739, vertical_merge_algorithm_min_columns_to_activate = 13, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 13506487, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 26692, primary_key_compress_block_size = 36709
CREATE TABLE test_01193_18429.table_2_501 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DATABASE IF NOT EXISTS test_jk3zh619 
SELECT 'Running test stateless/01803_const_nullable_map.sql from pid=1722' 
SELECT if(1 = 0, NULL, toNullable(toUInt8(0))) AS x, toTypeName(x);
CREATE DATABASE IF NOT EXISTS test_ljj9riag 
SELECT 'Running test stateless/02811_read_in_order_and_array_join_bug.sql from pid=1720' 
SHOW CREATE QUOTA q7_01297;
SELECT nothing(NULL, NULL, NULL);
SELECT 1, 'test';
INSERT INTO r3 SELECT 56 % 10 = 3 ? 56 - 1 : 56
DROP VIEW IF EXISTS mv_2_1;
SELECT DISTINCT hex(toString(uniqState(x))) FROM (SELECT materialize(1) AS k, toNullable(1) AS x FROM numbers(1)) GROUP BY k WITH CUBE ORDER BY k;
select 'aXb' like 'a_b', 'aXb' like 'a\_b', 'a_b' like 'a\_b', 'a_b' like 'a\\_b';
SELECT 02102_test_function(1);
drop table data_01814;
CREATE DATABASE IF NOT EXISTS test_5ygf129w 
CREATE TABLE test_02908_r3_141 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_141', 'r3') ORDER BY tuple()
create table test_distributed engine=Distributed(test_shard_localhost, currentDatabase(), 'test_02149')
SELECT COUNT() FROM indexed_table WHERE log_message like '%x%';
INSERT INTO test_01193_18429.table_4_778 VALUES 
DROP DATABASE IF EXISTS test_44a6x5jk 
INSERT INTO src_13 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 85
CREATE TABLE test_01193_18429.table_4_573 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT fromModifiedJulianDay(CAST(NULL, 'Nullable(Int64)'));
SELECT count() from tab_02473 PREWHERE b > 10 AND b <= 70 AND c > 0 AND c <= 51 AND d > 5 AND d <= 57 WHERE a == 0;
SELECT count() FROM hypothesis_test_test WHERE c > a FORMAT JSON
CREATE TABLE test_01193_18429.table_1_931 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT count(*) FROM source WHERE toYear(dt) = 2023;
ALTER TABLE dst_1 DROP PART '2_190_190_0'
SELECT DISTINCT blockSize() FROM t;
CREATE TABLE test_01193_18429.table_1_303 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT Y, uniqHLL12(X) FROM (SELECT number AS X, (3*X*X - 7*X + 11) % 37 AS Y FROM system.numbers LIMIT 3000) GROUP BY Y ORDER BY Y;
SELECT JSON_EXISTS('{"a":[[{"b":1}, {"g":1}],[{"h":1},{"y":1}]]}', '$.a[*][0].h');
SELECT 'Running test stateless/00692_if_exception_code.sql from pid=1714' 
INSERT INTO test_01193_18429.table_3_815 VALUES 
SELECT arrayJoin(b) FROM decimal;
INSERT INTO table_merge_tree_02525 VALUES 
SELECT toIPv4(NULL, NULL);
INSERT INTO test_01193_18429.table_2_609 VALUES 
SELECT 'Running test stateless/00543_access_to_temporary_table_in_readonly_mode.sh from pid=1724' 
SHOW GRANTS FOR test_role_01073;
SELECT x, y FROM (SELECT x, y FROM (SELECT 1 AS x, 2 AS y) UNION ALL SELECT x, x FROM (SELECT 3 AS x, 4 AS y)) ORDER BY x, y;
SELECT toFloat64(99999999999999999.9) as x, toDecimal128(x, 1), toDecimal128(-x, 1);
alter table many_mutations delete where y = 696 * 2 settings mutations_sync = 0;
CREATE TABLE test_234A543E4236704B4B5F5849392D244839454864653C3F263A696A66376E3275717D6F474C224A2E(x UInt8) Engine=Memory;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toInt64(-1) + N as r FORMAT CSV;
SELECT Y, uniqCombined(X) FROM (SELECT number AS X, (3*X*X - 7*X + 11) % 37 AS Y FROM system.numbers LIMIT 1000000) GROUP BY Y ORDER BY Y;
CREATE DATABASE IF NOT EXISTS test_if4qd728 
SYSTEM SYNC REPLICA dst_r2;
SELECT age('second', toDateTime('2015-08-18 00:00:00', 'UTC'), toDateTime64('2015-08-18 00:00:10', 3, 'UTC'));
ALTER TABLE dst_00753 DROP COLUMN x, MODIFY COLUMN y String, ADD COLUMN z String DEFAULT 'DEFZ';
INSERT INTO TABLE FUNCTION remote('127.0.0.2', 'test_8o4wqobw', 'null_00634_1') VALUES 
SELECT d2, f1, d2 - f1 FROM t ORDER BY f1;
CREATE TABLE test_01193_18429.table_2_438 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select substringIndexUTF8('Ã¥Â¯ÂÃ¥Â¼ÂºÃ¯Â¼ÂÃ¦Â°ÂÃ¤Â¸Â»Ã¯Â¼ÂÃ¦ÂÂÃ¦ÂÂ', 'Ã¯Â¼Â', -3);
SELECT bar((greatCircleAngle(100, -1, number, number) - number) * 2, -9223372036854775808, 1023, 100) FROM numbers(1048575) FORMAT Null;
DELETE FROM table_02513 WHERE n%10=0;
DROP DATABASE IF EXISTS test_j5w16ig0 
CREATE TABLE test_4830522659734D7A36523471743E6129615B2D28707126757456582D7042453B553E6F627052584D(x UInt8) Engine=Memory;
SELECT `a`, count() FROM `test_oe01xgw9`.`pr_t` GROUP BY `a` ORDER BY `a` ASC LIMIT 500, 5
INSERT INTO test_01193_18429.table_5_356 VALUES 
SELECT count() FROM constraint_test_transitivity2 WHERE d < a;
SELECT dictGetOrDefault('01765_db.sparse_hashed_dictionary_simple_key_simple_attributes', 'value_first', number, toString('default')) as value_first, dictGetOrDefault('01765_db.sparse_hashed_dictionary_simple_key_simple_attributes', 'value_second', number, toString('default')) as value_second FROM system.numbers LIMIT 3;
SELECT arraySort(h3kRing(581276613233082367, 1));
CREATE TABLE test_01193_18429.table_8_460 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT count() FROM test WHERE x = 10 AND y < 10 SETTINGS max_rows_to_read = 20;
CREATE TABLE test_01193_18429.table_4_465 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE DATABASE IF NOT EXISTS test_doiwgpxq 
CREATE TABLE test_76604C2330234D593944582F3C60724F3C415A3073202D70703A7B7265664A50403C524E587D364B(x UInt8) Engine=Memory;
SELECT SUM(toUInt64(value1)) FROM concurrent_alter_mt_2
SELECT 7 as shift_right_bit,fixedStr as arg,bin(bitShiftLeft(fixedStr, 7)) as fixed_string_res FROM test_bit_shift_left_string_integer;
SELECT materialize(toDateTime('2015-02-03 04:05:06')) = '2015-02-03 04:05:06';
CREATE TABLE test_01193_18429.table_6_713 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DETACH TABLE codecs8;
CREATE DATABASE IF NOT EXISTS test_ddyypyur 
DROP DATABASE IF EXISTS test_5g1i3cn2 
SELECT 'Running test stateless/01451_wrong_error_long_query.sh from pid=1720' 
SELECT fromDaysSinceYearZero32(NULL);
INSERT INTO test_01193_18429.table_8_16 VALUES 
DROP DATABASE IF EXISTS test_cm3octjt 
CREATE TABLE test_24713173222E6E3769504F5E554C627D40656C7B614928587B5774517E5D42627D274E2D33327B65(x UInt8) Engine=Memory;
SELECT type, 'S3CreateMultipartUpload', ProfileEvents['S3CreateMultipartUpload'], 'S3UploadPart', ProfileEvents['S3UploadPart'], 'S3CompleteMultipartUpload', ProfileEvents['S3CompleteMultipartUpload'], 'S3PutObject', ProfileEvents['S3PutObject'] FROM system.query_log WHERE query LIKE '%profile_events.csv%' AND type = 'QueryFinish' AND current_database = currentDatabase() ORDER BY query_start_time DESC;
INSERT INTO dst_4 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 93
INSERT INTO test_table FORMAT JSONCompactEachRow 
DROP DATABASE IF EXISTS test_5atnqr1f 
select -11 as offset, 'Hello' as s, subString(bin(s), offset), bin(bitSlice(s, offset));
CREATE TABLE test_67386E6F2E7E49204F352F404A4B40482F624B7B2941545A782B47615C67507855294E267C496F67(x UInt8) Engine=Memory;
CREATE TABLE t_proj_external (`k1` UInt32, `k2` UInt32, `k3` UInt32, `value` UInt32) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 60284, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 12084, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 30387925, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 66368, primary_key_compress_block_size = 58444
SELECT * FROM table_gcd_codec_int32;
SELECT startsWithUTF8('123', '');
select 0 = multiSearchAnyUTF8(materialize('ÃÂ´ÃÂ²ÃÂ ÃÂ¾ÃÂ¿ÃÂ¾ÃÂ¾ÃÂ»ÃÂ»ÃÂ°ÃÂµÃÂ¸ÃÂ¹ÃÂÃÂ¿ÃÂÃÂÃÂÃÂ¶ÃÂÃÂÃÂ½ÃÂÃÂ³ÃÂºÃÂº'), ['ÃÂ¹ÃÂ¹ÃÂ¼ÃÂÃÂ½ÃÂ·ÃÂ´ÃÂµÃÂÃÂ ÃÂ±ÃÂÃÂÃÂ±ÃÂ¶ÃÂ¸ÃÂ±ÃÂ¾ÃÂ¿ÃÂ³ÃÂºÃÂÃÂÃÂ½ÃÂÃÂºÃÂµÃÂ²ÃÂ¿ÃÂ¸ÃÂ·', 'ÃÂÃÂ¹ÃÂÃÂ¾ÃÂ ÃÂÃÂ°ÃÂ¼ÃÂÃÂÃÂ½ÃÂ¼ÃÂ', 'ÃÂ¹ÃÂ¹ÃÂ ÃÂÃÂ´ÃÂ¿ÃÂµÃÂÃÂ¶ÃÂ·ÃÂ³ÃÂ½ÃÂÃÂ¾ÃÂÃÂ²ÃÂ±ÃÂ¿ÃÂ»ÃÂ¾ÃÂ°ÃÂ ÃÂÃÂÃÂ¸ÃÂ»ÃÂµ', 'ÃÂ¿ÃÂºÃÂ»ÃÂ»ÃÂºÃÂ°ÃÂÃÂ½ÃÂ²ÃÂ´ÃÂ±ÃÂ±ÃÂ¾ÃÂ³ÃÂ³', 'ÃÂ¹ÃÂÃÂ´ÃÂµÃÂ·ÃÂ°ÃÂ¼ÃÂÃÂ¶ÃÂ¹ÃÂ·ÃÂ¸ÃÂ ÃÂÃÂ¶ÃÂ¼ÃÂÃÂ»ÃÂ ', 'ÃÂ³ÃÂ´ÃÂ·ÃÂÃÂ²ÃÂ¼ÃÂÃÂ¸ÃÂµÃÂÃÂ»ÃÂ¸ÃÂ´ÃÂ´ÃÂµÃÂÃÂ´ÃÂÃÂ¿ÃÂ¸ÃÂÃÂ²ÃÂ´', 'ÃÂÃÂ ÃÂÃÂÃÂ½ÃÂ¹ÃÂÃÂ·ÃÂ ÃÂÃÂÃÂ¶ÃÂÃÂ·ÃÂ ÃÂ³ÃÂÃÂ¾ÃÂÃÂ¾ÃÂÃÂ´ÃÂ½ÃÂ¿ÃÂ±ÃÂ', 'ÃÂÃÂ½ÃÂÃÂ¸ÃÂÃÂ±ÃÂµÃÂµÃÂ»ÃÂÃÂ´ÃÂºÃÂ¹ÃÂÃÂ¾ÃÂ¹ÃÂ»ÃÂ°ÃÂÃÂ¸ÃÂÃÂÃÂ ÃÂ³ÃÂÃÂÃÂ´ÃÂ²ÃÂ¸ÃÂÃÂÃÂÃÂµ', 'ÃÂ½ÃÂ·ÃÂÃÂÃÂÃÂ½ÃÂ´ÃÂÃÂÃÂ½ÃÂ¸ÃÂÃÂ¿ÃÂ ÃÂ¹ÃÂ²ÃÂÃÂ±ÃÂ²ÃÂ¼ÃÂÃÂÃÂ½ÃÂÃÂ°ÃÂ´ÃÂÃÂ±ÃÂ²ÃÂ', 'ÃÂ²ÃÂ±ÃÂÃÂºÃÂ°ÃÂ¿ÃÂÃÂ½ÃÂ²', 'ÃÂ·ÃÂ¹ÃÂ»ÃÂ¼ÃÂÃÂ¸ÃÂ¼ÃÂÃÂÃÂºÃÂÃÂ½ÃÂ¸ÃÂ²ÃÂÃÂÃÂ»ÃÂÃÂ¼ÃÂÃÂÃÂ·ÃÂÃÂµÃÂ¿ÃÂÃÂ¹ÃÂ', 'ÃÂÃÂ¶ÃÂ±ÃÂ²ÃÂ¹ÃÂ´ÃÂ', 'ÃÂ³ÃÂ´ÃÂ´ÃÂ¶ÃÂ´ÃÂ±ÃÂºÃÂ½ÃÂ°ÃÂÃÂ´ÃÂÃÂÃÂÃÂÃÂ¶ÃÂÃÂ ÃÂ¿ÃÂÃÂ¸ÃÂºÃÂ»ÃÂÃÂÃÂ¿ÃÂ³ÃÂ¼', 'ÃÂµÃÂ½ÃÂÃÂ°ÃÂÃÂÃÂÃÂ°ÃÂÃÂÃÂ½ÃÂ³ÃÂ±ÃÂ½ÃÂÃÂ ÃÂ ÃÂ½ÃÂ·ÃÂ¾ÃÂÃÂ±ÃÂÃÂ¿ÃÂÃÂÃÂÃÂ¾ÃÂÃÂµÃÂ³ÃÂÃÂÃÂ·ÃÂ±', 'ÃÂÃÂÃÂ½ÃÂµÃÂÃÂÃÂºÃÂ·ÃÂ·ÃÂ¾ÃÂµÃÂÃÂ±ÃÂÃÂÃÂºÃÂ', 'ÃÂÃÂ°ÃÂÃÂ¸ÃÂÃÂ·ÃÂ¾ÃÂ°ÃÂ¶ÃÂÃÂµÃÂ±ÃÂ¸ÃÂ¹ÃÂµÃÂ', 'ÃÂ¿ÃÂÃÂ±ÃÂ ÃÂ ÃÂÃÂ´ÃÂ³ÃÂ¹ÃÂÃÂ', 'ÃÂ ÃÂÃÂÃÂÃÂÃÂ¾ÃÂÃÂÃÂ', 'ÃÂ¶ÃÂºÃÂ´ÃÂ½ÃÂ¹ÃÂÃÂ¾ÃÂ·ÃÂ±ÃÂÃÂÃÂÃÂ¶ÃÂÃÂÃÂ±ÃÂºÃÂºÃÂºÃÂ°ÃÂ³ÃÂÃÂÃÂÃÂ ÃÂ°ÃÂ', 'ÃÂÃÂ°ÃÂÃÂµÃÂÃÂÃÂ³ÃÂ']) from system.numbers limit 10;
DROP TABLE tt6;
INSERT INTO test_01193_18429.table_3_268 VALUES 
CREATE DATABASE IF NOT EXISTS test_nq8z6hcp 
select s, arr1, map1 from arrays_test left array join arr1, map1 settings enable_unaligned_array_join = 1;
drop table test_mv_b sync;
INSERT INTO test_01193_18429.table_8_560 VALUES 
SELECT mapPopulateSeries([0xFFFFFFFFFFFFFFFF], [0], 0xFFFFFFFFFFFFFFFF);
SELECT formatQuerySingleLineOrNull(NULL);
DROP DATABASE IF EXISTS test_buh65omg 
SELECT 'tuple as partition key:';
CREATE DATABASE IF NOT EXISTS test_p9l3zx3n 
CREATE TABLE test_01193_18429.table_7_24 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT dictGet('complex_key_cache_dictionary_01862', 'value', (toUInt64(2), 'FirstKey')) FORMAT Null;
DROP DATABASE IF EXISTS test_3ff3w9i7 
SELECT 'Running test stateless/00122_join_with_subquery_with_subquery.sql from pid=1713' 
INSERT INTO alter_table SELECT number, toString(number) FROM numbers(10000, 10000)
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c1) AND (NOT c6) AND (NOT c7) AND (NOT c2)) SETTINGS convert_query_to_cnf = 1
SELECT count(*) FROM t_1 PREWHERE ordinary_1 > 5000 WHERE _part_offset != order_0;
CREATE TABLE test_01193_18429.table_1_205 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT '--- ---';
select countArray([NULL, NULL]);
SELECT 'Running test stateless/00625_arrays_in_nested.sql from pid=1718' 
DROP TABLE t_sparse_detach;
SELECT 'Running test stateless/00181_aggregate_functions_statistics.sql from pid=1713' 
CREATE TABLE test_01915_db.test_source_table_2 ( id UInt64, value_1 String ) ENGINE=TinyLog;
CREATE TABLE test_5B22405B59287965276431404036243A3D62212032342A586F283C4140695E70705A5F444F296C78(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_9_404 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT protocol('');
SELECT concatWithSeparator('|', 'a', materialize(map(42, 'foo') :: Map(Int32, String))) == 'a|{42:\'foo\'}';
SELECT [0];
CREATE TABLE test_01193_18429.table_8_432 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SHOW CREATE QUOTA q13_01297;
SELECT tuple(1) + tuple(2);
select uniqExact(_part), count() from xMM where a <> 66;
DROP TABLE max_length_alias_14053__fuzz_45;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c2) AND (NOT c1) AND (NOT c3) AND (NOT c8)) OR ((NOT c9) AND c6 AND (NOT c8) AND c5) SETTINGS convert_query_to_cnf = 1
SELECT 'Running test stateless/02703_explain_query_tree_is_forbidden_with_old_analyzer.sql from pid=1713' 
CREATE TABLE test_01193_18429.table_6_455 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select -13 as offset, 13 as length, toFixedString('Hello', 6) as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
SELECT count() from tab_02473 PREWHERE b > 0 AND b <= 70 AND c > 46 AND c <= 76 AND d > 5 AND d <= 57 WHERE a == 0;
SET flatten_nested = 1;
CREATE DATABASE IF NOT EXISTS test_pk5nhigz 
INSERT INTO test_01193_18429.table_10_789 VALUES 
show create table ttl;
SELECT multiIf((number % 2) = 0, [toInt16(1), toInt16(2)], (number % 3) = 0, [toInt64(2), toInt64(3)], [toInt16(3), toInt16(3)]) FROM system.numbers LIMIT 10;
SELECT round(cramersV(a, b), 2), round(cramersVBiasCorrected(a, b), 2), round(theilsU(a, b), 2), round(theilsU(b, a), 2), round(contingency(a, b), 2) FROM (SELECT number % 10 AS a, number % 10 = 0 ? number : a AS b FROM numbers(150));
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 3989, 500 settings ignore_materialized_views_with_dropped_target_table=1
DROP DATABASE IF EXISTS test_ww6g3kjb 
CREATE TABLE long_insert (str String) ENGINE = Memory
CREATE TABLE test_6D7C6048615E36703A407279234A6A6C244065485E2A513E59547B554A23775749593C45592C764D(x UInt8) Engine=Memory;
SELECT number AS a_b, number + 1 AS a_c_d, number + 2 AS a_c_e_f FROM numbers(5) FORMAT CapnProto SETTINGS format_schema='/usr/share/clickhouse-test/queries/0_stateless/format_schemas/02030_capnp_nested_tuples:Message'
SET enable_multiple_prewhere_read_steps=true, move_all_conditions_to_prewhere=true;
SELECT toString(toStartOfFifteenMinutes(toDateTime(1549483055), 'Asia/Tokyo'), 'Asia/Tokyo');
CREATE TABLE test_635B4D7770595B3C3F68294634522E753A7D2A7C404C67386F52362A7B297A5F7823223259605E28(x UInt8) Engine=Memory;
SELECTÃ¯Â»Â¿1;
SELECT 'Africa/El_Aaiun', toDateTime('2020-01-02 03:04:05', 'Africa/El_Aaiun') AS x, toStartOfDay(x), toHour(x);
DROP DATABASE IF EXISTS test_s9qbunyr 
INSERT INTO mt VALUES /* (34, 1) */ 
CREATE TABLE test_01193_18429.table_4_228 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
ALTER TABLE tmp MODIFY COLUMN s String DEFAULT toString(x+2);
DROP USER 02911_user ON CLUSTER test_shard_localhost
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toUInt16(1) < N as r FORMAT CSV;
CREATE TABLE test_01193_18429.table_2_391 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c1)) OR ((NOT c3) AND c3 AND (NOT c4) AND c4) OR (c5 AND (NOT c0)) SETTINGS convert_query_to_cnf = 0
SELECT dictGet('null_dict', 'default_val', 1337), dictGetOrNull('null_dict', 'default_val', 1337), dictGetOrDefault('null_dict', 'default_val', 1337, 111), dictGetUInt8('null_dict', 'default_val', 1337), dictGetUInt8OrDefault('null_dict', 'default_val', 1337, 111);
SELECT topKWeighted(5)(n, weight) FROM (SELECT number as n, number as weight from system.numbers LIMIT 100);
CREATE TABLE test_2E3973392E224C27584F516A532C3D542A4A7377547B257A612D395B234321332F4359506E4F4E6E(x UInt8) Engine=Memory;
SELECT 14, 12, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (14 < 13 AND 12 > 0 ? 14 : 0)), throwIf(last != (14 < 13 AND 12 > 0 ? least(13 - 1, 14 + 12 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 14, 12);
CREATE TABLE test_startsWith (`a` String) ENGINE = MergeTree PARTITION BY tuple() ORDER BY a SETTINGS index_granularity = 24476, min_bytes_for_wide_part = 261169778, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 90, merge_max_block_size = 23166, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 3, min_merge_bytes_to_use_direct_io = 1056374681, index_granularity_bytes = 13372510, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 55915, primary_key_compress_block_size = 49788
DROP DATABASE IF EXISTS test_bj1cjvq1 
DROP TABLE IF EXISTS rename1;
ALTER TABLE src_4 REPLACE PARTITION 4 FROM src_11
CREATE INDEX idx_tab3_3 ON tab3 (col1 DESC,col4 DESC);
select javaHashUTF16LE(convertCharset('Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ', 'utf-8', 'utf-16le'));
DROP USER test_user_02771_niotrowxci
drop table 02900_buffer
CREATE TABLE test_01193_18429.table_6_529 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select * from aliases_test;
insert into dist values 
CREATE DATABASE IF NOT EXISTS test_riqs1r2h 
select 1 = multiMatchAny(materialize('abc'), materialize(['a\0d'])) from system.numbers limit 10;
INSERT INTO t_summing_lc VALUES 
CREATE TABLE test_01193_18429.table_2_942 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_3_454 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP TABLE IF EXISTS table_with_function_pk;
SHOW CREATE PROFILE s6_01294;
CREATE DATABASE IF NOT EXISTS test_slwjw9vz 
EXPLAIN SYNTAX (SELECT sum(decimal32 + 2) - sum(decimal32 + 3) From test_table);
DROP DATABASE IF EXISTS test_yjiculow 
INSERT INTO r2 SELECT 16 % 10 = 2 ? 16 - 1 : 16
SYSTEM SYNC REPLICA table_for_rename_replicated;
select regexpExtract(materialize('100-200'), '(\\d+)-(\\d+)');
insert into table function file('/var/lib/clickhouse/user_files/file/test_symlink_test_ftnbuvp3', 'Values', 'a String') select 'OK'
SELECT ['Hello', 'world'];
CREATE TABLE test_726C66383042353A583B7933253B3C3F37696B21255F227155654877435526595A337B325D27787E(x UInt8) Engine=Memory;
select * from array where arr > [12.2];
INSERT INTO test_01193_18429.table_5_399 VALUES 
CREATE TABLE t_map_02014(i1 UInt64, i2 Int32, m1 Map(UInt32, String), m2 Map(Int8, String), m3 Map(Int128, String)) ENGINE = Memory;
select sum(upperUTF8(materialize('aaaaÃÂÃÂÃÂÃÂAAAAaaAA')) = materialize('AAAAÃÂÃÂÃÂÃÂAAAAAAAA')) = count() from system.one array join range(16384) as n;
SELECT 'Running test stateless/02482_load_parts_refcounts.sh from pid=1718' 
CREATE TABLE bitmap_column_expr_test3 (`tag_id` String, `z` AggregateFunction(groupBitmap, UInt64), `replace` Nested(from UInt16, to UInt64)) ENGINE = MergeTree ORDER BY tag_id SETTINGS index_granularity = 44431, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 507, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1133967993, index_granularity_bytes = 3477330, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 48911, primary_key_compress_block_size = 68774
INSERT INTO src VALUES /* (-46, 1) */ 
SELECT * FROM ( SELECT date_time FROM ( SELECT toDateTime('2019-11-14 22:15:00') AS date_time UNION ALL SELECT toDateTime('2019-11-15 01:15:00') AS date_time ) ORDER BY date_time WITH fill step 900 ) WHERE date_time < toDateTime('2019-11-15 00:15:00') 
CREATE TABLE test_677B3B4E7E7A5A30527037326160333E6C4729465B3E3B683060454A666335372E77762E5F317B2A(x UInt8) Engine=Memory;
CREATE DATABASE test_01889_sqllite_test_i4xlgbe1 ENGINE = SQLite('/var/lib/clickhouse/user_files/test_01889_sqllite_test_i4xlgbe1_db1');
SELECT untuple(arrayJoin(arrayJoin(col1.n))) FROM nested ORDER BY id LIMIT 10 OFFSET 10;
SELECT 'flat: inner on';
select 'dst_to_src', 12, 'src', type, n, _part from src order by type, n
INSERT INTO test_01193_18429.table_2_565 VALUES 
SELECT 'any left';
SELECT CASE WHEN (number % 2) = 0 THEN [toInt64(1), toInt64(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toUInt16(3), toUInt16(3)] END FROM system.numbers LIMIT 10;
SELECT uniqExact(x, arrayMap(elem -> [elem, elem], x)) FROM (SELECT arrayJoin([[], ['a'], ['a', 'b'], []]) AS x);
EXISTS TABLE db_01048.t_01048;
SELECT toDateTime64('2011-11-11 11:11:11.111', 0);
CREATE TABLE test_01193_18429.table_4_460 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_4_385 VALUES 
INSERT INTO t SELECT number, rand()%1000 FROM numbers(10000);
CREATE TABLE test_554838577D2C3C3859302763752330523C7E6A664B716856215E6D26404F5F3B326020395F6B4D70(x UInt8) Engine=Memory;
CREATE TABLE test_43434B65584D3154607D6033407D632D3643243234283E322C315D55645724702730264B35683D22(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat32(1), toFloat32(2)] WHEN (number % 3) = 0 THEN [toUInt32(2), toUInt32(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/02788_current_schemas_function.sql from pid=1720' 
INSERT INTO test_01193_18429.table_6_115 VALUES 
CREATE TABLE test_7D74522647384166532A6D583A265D54743B544B6071392A276C7D645A5453303A3D2C556D73322F(x UInt8) Engine=Memory;
DROP TABLE test;
INSERT INTO test_01193_18429.table_7_224 VALUES 
CREATE TABLE IF NOT EXISTS outer (`id` UInt64, `organization_id` UInt64, `version` UInt64) ENGINE = ReplacingMergeTree(version) PARTITION BY organization_id % 8 ORDER BY (organization_id, id) SETTINGS index_granularity = 13735, min_bytes_for_wide_part = 800673448, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 98, merge_max_block_size = 21975, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 183974, vertical_merge_algorithm_min_columns_to_activate = 65, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 18756397, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 58925, primary_key_compress_block_size = 18966
SELECT 0.1 :: Decimal(4, 4);
INSERT INTO test_01193_18429.table_9_682 VALUES 
SELECT * FROM temp WHERE y IN (toDecimal256(256, 3));
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c3) AND c6) OR (c9) SETTINGS convert_query_to_cnf = 1
SELECT count(), sum(toInt64(`n`)), max(`n`), min(`n`) FROM `test_osb5obxq`.`mv`
CREATE TABLE test_tuple_element (`tuple` Tuple(k1 Nullable(UInt64), k2 UInt64)) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 8192, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2794014811515808, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 8076, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 605028, vertical_merge_algorithm_min_columns_to_activate = 42, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 7304683, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 84506, primary_key_compress_block_size = 68429
INSERT INTO Mapping VALUES 
CREATE TABLE test_5C2042552835783D2E765A742B7A327E6A7E356A693A41505535523720646E5B4A3944456D3C6A70(x UInt8) Engine=Memory;
SELECT '----- multiIf -----';
insert into t select * from numbers_mt(1e3);
select 'create table failed, column +type +DEFAULT +AUTO_INCREMENT';
SELECT formatQueryOrNull(NULL);
CREATE TABLE test_595B675347767D39585672637E6160467D6F623673682E6D792F59533C792B5561785132315F6348(x UInt8) Engine=Memory;
INSERT INTO t_async_insert FORMAT TabSeparatedWithNames 
CREATE DATABASE IF NOT EXISTS test_emjdp9fi 
CREATE MATERIALIZED VIEW src2dst_true TO dst AS SELECT id, src.value - deltas_sum as delta FROM src LEFT JOIN ( SELECT id, sum(delta) as deltas_sum FROM dst WHERE id IN (SELECT id FROM src WHERE not sleepEachRow(0.001)) GROUP BY id ) _a USING (id);
CREATE TABLE test_01193_18429.table_10_734 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select * from format('TSV', '22222222222.2222');
SELECT count(1), uniqExact(1) FROM ( SELECT k FROM (SELECT 1 as k FROM numbers(1)) nums JOIN (SELECT 1 AS k, number n FROM numbers(100000)) j USING k);
CREATE TABLE test_543365362E4C362D337A456937627C792A7B5A412F77507456732459526D76614C4A4460647E6840(x UInt8) Engine=Memory;
CREATE TABLE t2_shard (`id` Int32) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 3367, min_bytes_for_wide_part = 811392361, ratio_of_defaults_for_sparse_serialization = 0.48093560338020325, replace_long_file_name_to_hash = true, max_file_name_length = 118, merge_max_block_size = 10555, prefer_fetch_merged_part_size_threshold = 8577798220, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 13463602, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 50584, primary_key_compress_block_size = 68560
CREATE USER IF NOT EXISTS `02833_MYSQL_USER_25955` IDENTIFIED WITH plaintext_password
CREATE TABLE test_01193_18429.table_6_434 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT '' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv4StringToNum('240.0.0.0')))
SELECT 'Running test stateless/01319_manual_write_to_replicas_long.sql from pid=1722' 
CREATE DATABASE IF NOT EXISTS test_r50rhl09 
CREATE TABLE test_01193_18429.table_7_2 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP USER IF EXISTS test_user_02867;
INSERT INTO test_01193_18429.table_1_936 VALUES 
CREATE DATABASE IF NOT EXISTS test_okbl9ab0 
INSERT INTO test_01193_18429.table_9_382 VALUES 
SELECT toUnixTimestamp(toString(toDateTime(1426415400), 'Asia/Istanbul'), 'Asia/Istanbul');
OPTIMIZE TABLE alter_table0 FINAL
CREATE QUOTA q8_01297 KEYED BY 'user name';
INSERT INTO bloom_filter_idx2 VALUES 
ALTER TABLE agg_table UPDATE agg_simple = 5 WHERE time BETWEEN toDateTime('2020-08-01 00:00:00') AND toDateTime('2020-12-01 00:00:00') SETTINGS mutations_sync = 2;
DROP POLICY policy_tab_02473 ON tab_02473;
CREATE DATABASE IF NOT EXISTS test_13gn9mm6 
CREATE DATABASE IF NOT EXISTS test_cvrmbjmw 
SELECT 'Running test stateless/02458_relax_too_many_parts.sql from pid=1718' 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c8) AND c1 AND (NOT c8) AND c3 AND (NOT c7)) OR ((NOT c0)) OR (c2) OR (c4 AND c5) OR (c7) OR (c5 AND c3) SETTINGS convert_query_to_cnf = 0
SELECT sqidDecode(NULL);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (10 < 78 AND 31 > 0 ? 10 : 0)), throwIf(last != (10 < 78 AND 31 > 0 ? least(78 - 1, 10 + 31 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(78) LIMIT 10, 31);
CREATE TABLE test_684D32314654562265713233433D3E3B6D665E2B463F282671367C2A554E797E2C50777D766E6E33(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_2_948 VALUES 
SELECT h3NumHexagons(14);
CREATE TABLE test_705044712F67775F5525435A5D26244B773A7776243D444423653A377D7239514232253B68605332(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_1_59 VALUES 
insert into function file(02475_data.bsonEachRow, auto, 'uuid UUID') select 'b86d5c23-4b87-4465-8f33-4a685fa1c868'::UUID settings engine_file_truncate_on_insert=1
CREATE TABLE test_01193_18429.table_6_313 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_infile_parallel (Id Int32,Value Enum('first' = 1, 'second' = 2)) ENGINE=Memory();
SELECT arraySort(x -> (x.1, x.2), groupArray(t)) == [(1, '1'), (2, NULL)] FROM null_in_tuple WHERE t in ((1, '1'), (NULL, '1'), (2, NULL));
SELECT 1, sleep(0.016591) FROM mysql('127.0.0.1:9004', 'system', 'one', '02833_MYSQL_USER_25955', '[HIDDEN]')
DROP TABLE IF EXISTS test_02101
SELECT count() FROM t_cnf_fuzz WHERE (c8 AND c0) OR (c9 AND c7 AND c0 AND c9) OR (c3 AND c3) OR ((NOT c7) AND c5 AND (NOT c6) AND (NOT c4) AND c7) OR (c7) OR ((NOT c2) AND (NOT c6) AND (NOT c3) AND c1) OR ((NOT c5) AND c8) OR ((NOT c8) AND (NOT c6) AND (NOT c6) AND c7 AND (NOT c1)) SETTINGS convert_query_to_cnf = 1
INSERT INTO r3 SELECT 4
SELECT 'Running test stateless/00176_if_string_arrays.sql from pid=1720' 
SELECT kafkaMurmurHash();
DROP DATABASE IF EXISTS test_kq7x2hmd 
select bitmapToArray(bitmapSubsetLimit(bitmapBuild([ 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33, 100,200,500]), toUInt32(100), toUInt16(200)));
DROP TABLE IF EXISTS session_events;
CREATE DATABASE IF NOT EXISTS test_20zoq2jr 
CREATE DATABASE IF NOT EXISTS test_zjjr3hxc 
INSERT INTO test_01193_18429.table_1_501 VALUES 
CREATE TABLE test_3F6D5F6E377061714C453660353F4C524340614E5127244522774D657D223C402F6C635F63625E66(x UInt8) Engine=Memory;
DROP TABLE table_00305b 
CREATE TABLE test_02908_r1_114 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_114', 'r1') ORDER BY tuple()
CREATE TABLE test_6D4D7B692C3A213D5E6C332E59552F6F2F7B757A57407D75326920612B792622466C47777274543F(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_9hiroyww 
SELECT count() FROM t_cnf_fuzz WHERE (c6 AND c0 AND c2 AND (NOT c7)) OR ((NOT c9) AND (NOT c2) AND (NOT c4) AND c2 AND (NOT c6)) OR (c2 AND c1 AND (NOT c8) AND c0) OR (c7 AND c6 AND (NOT c9)) OR (c7 AND (NOT c5) AND c8 AND (NOT c4)) OR ((NOT c9)) OR (c9) OR (c9 AND c9 AND c1 AND c0 AND c9) OR ((NOT c5) AND c7) SETTINGS convert_query_to_cnf = 1
SELECT CASE WHEN (number % 2) = 0 THEN toFloat64(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toInt32(3) END FROM system.numbers LIMIT 10;
SELECT y FROM (SELECT materialize(1) AS x, x AS y) 
CREATE DATABASE IF NOT EXISTS test_m0etewat 
alter table many_mutations delete where y = 250 * 2 settings mutations_sync = 0;
CREATE DATABASE IF NOT EXISTS test_ep90ljl1 
CREATE DATABASE IF NOT EXISTS test_vvp3xf0q 
DROP DATABASE IF EXISTS test_dgraieha 
SELECT count(DISTINCT t) FROM (SELECT queryID() AS t FROM remote('127.0.0.{1..3}', currentDatabase(), 'tmp') GROUP BY queryID());
INSERT INTO r7 SELECT 66 % 10 = 7 ? 66 - 1 : 66
DROP DATABASE IF EXISTS test_g7qzz7ia 
SELECT round(1.234567890123456789012345678901::Decimal(60, 30), 31);
SELECT format('The {0} to all questions is {1}.', 'answer', materialize(49 :: UInt16));
CREATE DATABASE IF NOT EXISTS test_8o4v55qp 
DROP DATABASE IF EXISTS test_twovkjiz 
SELECT count() > 0 FROM system.text_log WHERE position(system.text_log.message, 'SELECT 6103') > 0 AND event_date >= yesterday()
CREATE TABLE test_264930696D2D2A2E7C23502A21502B2C54326D4572534A25642366545B78732443484C55507E463E(x UInt8) Engine=Memory;
desc format(JSONCompactEachRow, '[[null, 1]], [[]]');
DROP DATABASE IF EXISTS test_hlmt73qu 
CREATE TABLE test2 (`c` UInt8, `d` String) ENGINE = MergeTree ORDER BY c SETTINGS index_granularity = 23188, min_bytes_for_wide_part = 247171859, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 27, merge_max_block_size = 14898, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 80, min_merge_bytes_to_use_direct_io = 2393441317, index_granularity_bytes = 17369190, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 17392, primary_key_compress_block_size = 36774
INSERT INTO test_01193_18429.table_2_48 VALUES 
select * from (SELECT number as a FROM numbers(10)) t1 PASTE JOIN (select number as a from numbers(10)) t2;
select * from numbers(10) format Parquet
SELECT -32768, -32767, -32768 = -32767, -32768 != -32767, -32768 < -32767, -32768 <= -32767, -32768 > -32767, -32768 >= -32767, -32767 = -32768, -32767 != -32768, -32767 < -32768, -32767 <= -32768, -32767 > -32768, -32767 >= -32768 , toInt16(-32768) = toInt16(-32767), toInt16(-32768) != toInt16(-32767), toInt16(-32768) < toInt16(-32767), toInt16(-32768) <= toInt16(-32767), toInt16(-32768) > toInt16(-32767), toInt16(-32768) >= toInt16(-32767), toInt16(-32767) = toInt16(-32768), toInt16(-32767) != toInt16(-32768), toInt16(-32767) < toInt16(-32768), toInt16(-32767) <= toInt16(-32768), toInt16(-32767) > toInt16(-32768), toInt16(-32767) >= toInt16(-32768) , toInt16(-32768) = toInt32(-32767), toInt16(-32768) != toInt32(-32767), toInt16(-32768) < toInt32(-32767), toInt16(-32768) <= toInt32(-32767), toInt16(-32768) > toInt32(-32767), toInt16(-32768) >= toInt32(-32767), toInt32(-32767) = toInt16(-32768), toInt32(-32767) != toInt16(-32768), toInt32(-32767) < toInt16(-32768), toInt32(-32767) <= toInt16(-32768), toInt32(-32767) > toInt16(-32768), toInt32(-32767) >= toInt16(-32768) , toInt16(-32768) = toInt64(-32767), toInt16(-32768) != toInt64(-32767), toInt16(-32768) < toInt64(-32767), toInt16(-32768) <= toInt64(-32767), toInt16(-32768) > toInt64(-32767), toInt16(-32768) >= toInt64(-32767), toInt64(-32767) = toInt16(-32768), toInt64(-32767) != toInt16(-32768), toInt64(-32767) < toInt16(-32768), toInt64(-32767) <= toInt16(-32768), toInt64(-32767) > toInt16(-32768), toInt64(-32767) >= toInt16(-32768) , toInt32(-32768) = toInt16(-32767), toInt32(-32768) != toInt16(-32767), toInt32(-32768) < toInt16(-32767), toInt32(-32768) <= toInt16(-32767), toInt32(-32768) > toInt16(-32767), toInt32(-32768) >= toInt16(-32767), toInt16(-32767) = toInt32(-32768), toInt16(-32767) != toInt32(-32768), toInt16(-32767) < toInt32(-32768), toInt16(-32767) <= toInt32(-32768), toInt16(-32767) > toInt32(-32768), toInt16(-32767) >= toInt32(-32768) , toInt32(-32768) = toInt32(-32767), toInt32(-32768) != toInt32(-32767), toInt32(-32768) < toInt32(-32767), toInt32(-32768) <= toInt32(-32767), toInt32(-32768) > toInt32(-32767), toInt32(-32768) >= toInt32(-32767), toInt32(-32767) = toInt32(-32768), toInt32(-32767) != toInt32(-32768), toInt32(-32767) < toInt32(-32768), toInt32(-32767) <= toInt32(-32768), toInt32(-32767) > toInt32(-32768), toInt32(-32767) >= toInt32(-32768) , toInt32(-32768) = toInt64(-32767), toInt32(-32768) != toInt64(-32767), toInt32(-32768) < toInt64(-32767), toInt32(-32768) <= toInt64(-32767), toInt32(-32768) > toInt64(-32767), toInt32(-32768) >= toInt64(-32767), toInt64(-32767) = toInt32(-32768), toInt64(-32767) != toInt32(-32768), toInt64(-32767) < toInt32(-32768), toInt64(-32767) <= toInt32(-32768), toInt64(-32767) > toInt32(-32768), toInt64(-32767) >= toInt32(-32768) , toInt64(-32768) = toInt16(-32767), toInt64(-32768) != toInt16(-32767), toInt64(-32768) < toInt16(-32767), toInt64(-32768) <= toInt16(-32767), toInt64(-32768) > toInt16(-32767), toInt64(-32768) >= toInt16(-32767), toInt16(-32767) = toInt64(-32768), toInt16(-32767) != toInt64(-32768), toInt16(-32767) < toInt64(-32768), toInt16(-32767) <= toInt64(-32768), toInt16(-32767) > toInt64(-32768), toInt16(-32767) >= toInt64(-32768) , toInt64(-32768) = toInt32(-32767), toInt64(-32768) != toInt32(-32767), toInt64(-32768) < toInt32(-32767), toInt64(-32768) <= toInt32(-32767), toInt64(-32768) > toInt32(-32767), toInt64(-32768) >= toInt32(-32767), toInt32(-32767) = toInt64(-32768), toInt32(-32767) != toInt64(-32768), toInt32(-32767) < toInt64(-32768), toInt32(-32767) <= toInt64(-32768), toInt32(-32767) > toInt64(-32768), toInt32(-32767) >= toInt64(-32768) , toInt64(-32768) = toInt64(-32767), toInt64(-32768) != toInt64(-32767), toInt64(-32768) < toInt64(-32767), toInt64(-32768) <= toInt64(-32767), toInt64(-32768) > toInt64(-32767), toInt64(-32768) >= toInt64(-32767), toInt64(-32767) = toInt64(-32768), toInt64(-32767) != toInt64(-32768), toInt64(-32767) < toInt64(-32768), toInt64(-32767) <= toInt64(-32768), toInt64(-32767) > toInt64(-32768), toInt64(-32767) >= toInt64(-32768) 
INSERT INTO test_01193_18429.table_3_604 VALUES 
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a ANTI LEFT JOIN (SELECT (toLowCardinality(0)) AS id) AS d USING (id) ;
INSERT INTO r1 SELECT 61 % 10 = 1 ? 61 - 1 : 61
CREATE TABLE test_01193_18429.table_4_220 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select gcd(4, 2);
CREATE TABLE test_01193_18429.table_9_109 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE data_01593 (`key` Int) ENGINE = MergeTree PARTITION BY key ORDER BY key SETTINGS index_granularity = 11879, min_bytes_for_wide_part = 208590083, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 20895, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 11711757, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 66051, primary_key_compress_block_size = 49298
DROP DATABASE IF EXISTS test_q6s4k5jp 
SELECT 'pair of lines, different polygons';
INSERT INTO test_01193_18429.table_9_75 VALUES 
SELECT dictHas('hashed_array_dictionary_simple_key_simple_attributes', number) FROM system.numbers LIMIT 4;
DROP TABLE IF EXISTS test02416;
SELECT substring('clickhouse', 2, materialize(-2));
SELECT domainRFC('[20[01:db8::1]:80') FORMAT CSV;
CREATE TABLE test_54512D602B47465F316A2465223B40786026233F474C2C66565D55245660665D2D4D59417D5A2C5A(x UInt8) Engine=Memory;
SELECT sum(number) FROM test_parallel_replicas_automatic_count LIMIT 1_000_000 format Null
SELECT v FROM t_cache_sparse FORMAT Null;
create table t1 (a UInt32, b String) engine = Memory;
select splitByRegexp('', 'abcde');
CREATE DATABASE IF NOT EXISTS test_zeg74gmf 
drop table if exists test_mv_a sync;
SELECT s, replaceAll(s, '_', 'o') AS a, REGEXP_REPLACE(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['_._', '_.']) AS s);
CREATE TABLE test_643230603862326F7A7E6D6B65532D3131617553442D69654D2D362826275E4D755742266E53692C(x UInt8) Engine=Memory;
SELECT '63_KO', finalizeAggregation(CAST(unhex('3F000000303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132010000000000000000'), 'AggregateFunction(argMax, String, UInt64)'));
alter table many_mutations delete where y = 680 * 2 settings mutations_sync = 0;
INSERT INTO test_01193_18429.table_2_640 VALUES 
select position('' as h, '' as n) = positionCaseInsensitive(h, n);
ATTACH TABLE mv;
CREATE TABLE arrays_test (a1 Array(UInt8), a2 Array(UInt32) ) ENGINE = Memory;
SELECT multiIf((number % 2) = 0, toFloat32(1), (number % 3) = 0, toFloat32(2), toInt32(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_5440347D433440704D2173725354337D602F3552467A2940772A58366436557B6B3E2F4269485424(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_afyl1cas 
CREATE TABLE test_01193_18429.table_9_371 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_o6maj1i0.data (key) VALUES
INSERT INTO test_01193_18429.table_2_745 VALUES 
SELECT toDecimal64OrNull('-999999999999999999', 0), toDecimal64OrNull('-1000000000000000000', 0);
CREATE DATABASE IF NOT EXISTS test_933qn7af 
INSERT INTO LOG_T VALUES 
SELECT wordShingleSimHashCaseInsensitive(s) FROM defaults;
CREATE TABLE test_01193_18429.table_7_179 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select 1 = multiSearchAnyCaseInsensitive(materialize('Hello World'), materialize(['WORLD']));
CREATE TABLE test_224E217D3D6B4278485B4941722E772E793F4851412A4840465666572F76442133317B6265323455(x UInt8) Engine=Memory;
SELECT * FROM minmax_idx_r WHERE u64 * i32 > 1 ORDER BY (u64, i32);
SELECT * FROM system.s3queue LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
CREATE TABLE test_286B67385E70732D3062414742743C7B344A5043425B7D746D4E6C733C6D2D4F4664654C4D207C4C(x UInt8) Engine=Memory;
insert into summing_merge_tree_aggregate_function select 1, 1, topKState(2)(2);
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 10050, 500 settings ignore_materialized_views_with_dropped_target_table=1
INSERT INTO indices_mutaions1 VALUES 
CREATE TABLE test_01193_18429.table_8_463 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_62587E5B6B757966344740673F6447227A6C715E2E7841793664233325592375754772687D523C51(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt16(1), toInt16(2)] WHEN (number % 3) = 0 THEN [toFloat64(2), toFloat64(3)] ELSE [toUInt16(3), toUInt16(3)] END FROM system.numbers LIMIT 10;
select 0 = isValidUTF8(toFixedString('123456789012345\xf1', 16)) from system.numbers limit 10;
INSERT INTO line_as_string2(c) values 
INSERT INTO test_01193_18429.table_4_542 VALUES 
INSERT INTO test_01193_18429.table_5_4 VALUES 
SELECT 'Running test stateless/02315_grouping_constant_folding.sql from pid=1724' 
SELECT CASE WHEN 1 THEN [col2, col3] WHEN 1 THEN ['foo', col5] ELSE ['foo', col7] END FROM multi_if_check;
SELECT number FROM numbers(3) ORDER BY exp(number) DESC;
CREATE DICTIONARY dict ( id UInt64, ip4 IPv4, ip6 IPv6 ) PRIMARY KEY id LAYOUT(HASHED()) SOURCE (CLICKHOUSE ( table src)) lifetime ( 10);
SELECT * FROM system.mutations WHERE database = 'test_syvx3owd' and is_done=0 and table = 'concurrent_alter_detach_2'
INSERT INTO test_table FORMAT JSONCompactStringsEachRowWithNames 
INSERT INTO test_01193_18429.table_8_766 VALUES 
SELECT arrayResize(arrayPartialSort((x, y) -> y, 3, ['directly','ignore','wrongly','relocate','upright'], [4,2,1,3,5]), 3);
select sum(zero), count() from zeros_mt(10000000);
SELECT count() FROM hit;
TRUNCATE TABLE arrow_types2
CREATE TABLE zero_rows_per_granule1 ( p Date, k UInt64, v1 UInt64, v2 Int64 ) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00926/zero_rows_in_granule', '1') PARTITION BY toYYYYMM(p) ORDER BY k SETTINGS index_granularity_bytes = 20, min_index_granularity_bytes = 10, write_final_mark = 0;
INSERT INTO 01681_database_for_flat_dictionary.simple_key_complex_attributes_source_table VALUES
INSERT INTO test_01193_18429.table_4_345 VALUES 
SELECT 'Running test stateless/01114_database_atomic.sh from pid=1705' 
DROP DATABASE IF EXISTS test_8ta232es 
CREATE MATERIALIZED VIEW t_v ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 44995, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 12010, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 5392698454, index_granularity_bytes = 601256, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 77969, primary_key_compress_block_size = 33722 AS SELECT A FROM t LEFT JOIN (SELECT toInt64(dummy) AS A FROM system.one) AS js2 USING (A)
CREATE TABLE test_01193_18429.table_3_62 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT arrayReduce('any_respect_nulls', [10, NULL]::Array(Nullable(UInt8))) as a, toTypeName(a);
SELECT a, sum(c), avg(d) FROM pk_order GROUP BY a ORDER BY a;
select gcd(4611686011984936962, 2147483647);
CREATE TABLE test_01193_18429.table_8_644 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_8_303 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_2_183 VALUES 
DROP DATABASE IF EXISTS test_dc55r1cx 
SELECT basename(path('http://example.com/folder_1/folder_2/script.php')) 
CREATE TABLE test_4744662A512459702724614F784527415058714E2A2A434D32202F495B21703B216D3F63785C213B(x UInt8) Engine=Memory;
SELECT 'a{a' AS x, x LIKE (concat(x, '%') AS pat), materialize(x) LIKE pat;
INSERT INTO num_processed_rows_test_0 format TSV
INSERT INTO test_01193_18429.table_4_177 VALUES 
CREATE TABLE test_01193_18429.table_7_44 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
WITH '2020-02-05 14:34:12.333' as S, toDateTime64(S, 3) as DT64 SELECT * WHERE S >= DT64;
SELECT cutToFirstSignificantSubdomainRFC('http://paul@www.example.com/a/b/c?a=b#d=f');
SELECT leftPad(NULL, NULL, NULL);
SELECT multiIf((number % 2) = 0, toFloat32(1), (number % 3) = 0, toUInt32(2), toUInt16(3)) FROM system.numbers LIMIT 10;
SYSTEM STOP MERGES t_dst;
SELECT arrayJoin(['hello', 'world']) LIKE '%orld';
SELECT avgWeighted(x, w) FROM values('x Int16, w UInt16', (0, 0), (1, 0));
DROP TABLE IF EXISTS t_json_analyzer;
create table test (x UInt64) engine=Memory();
CREATE TABLE test_763A4730726A27233E3B3D655B57693262364A26623F6E46485532296746772462495639405E223F(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_3934l6hm 
SELECT `x` FROM generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(UInt8))))))))', 1, 1, 1) LIMIT 1
SELECT COUNT() FROM single_column_bloom_filter WHERE (i32, i64) IN ((1, 1), (2, 2)) SETTINGS max_rows_to_read = 6;
INSERT INTO test_01193_18429.table_8_269 VALUES 
SELECT * FROM (SELECT toLowCardinality(dummy) AS val FROM system.one) s1 ANY LEFT JOIN (SELECT toLowCardinality(dummy) AS val FROM system.one) s2 USING val ORDER BY val;
SELECT multiIf((col1 % 2) = 0, toFixedString(col2, 16), (col1 % 3) = 0, toFixedString('bar', 16), toFixedString(col4, 16)) FROM multi_if_check;
DROP DATABASE IF EXISTS test_co1gs3qw 
select cityHash64(hex( minState(ip) )) AS minState, cityHash64(hex( maxState(ip) )) AS maxState, cityHash64(hex( first_valueState(ip) )) AS first_valueState, cityHash64(hex( last_valueState(ip) )) AS last_valueState, cityHash64(hex( topKState(ip) )) AS topKState, cityHash64(hex( groupArrayState(ip) )) AS groupArrayState, cityHash64(hex( groupUniqArrayState(ip) )) AS groupUniqArrayState, cityHash64(hex( uniqState(ip) )) AS uniqState, cityHash64(hex( uniqExactState(ip) )) AS uniqExactState, cityHash64(hex( uniqCombinedState(ip) )) AS uniqCombinedState, cityHash64(hex( uniqCombined64State(ip) )) AS uniqCombined64State, cityHash64(hex( uniqHLL12State(ip) )) AS uniqHLL12State, cityHash64(hex( uniqThetaState(ip) )) AS uniqThetaState from ( select num::UInt32::IPv4 ip from (select arrayJoin(range(999999999, number)) as num from numbers(999999999,50)) order by ip ) format Vertical;
CREATE TABLE test_01193_18429.table_4_882 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_59476A3D5C423531713D786C377A4A7E7A487156347321727C3C3C42254C673E3455203E65495031(x UInt8) Engine=Memory;
SELECT t.t FROM ta FULL JOIN tb USING (x);
CREATE TABLE buffer_00763_2 (s String) ENGINE = Buffer('test_8vvjp76r', mt_00763_2, 1, 1, 1, 1, 1, 1, 1)
INSERT INTO r5 SELECT 49
CREATE TABLE test_2A463C727734422757486B275C2A21545B282643623734243F2840476D6E5A5149363E6623483B21(x UInt8) Engine=Memory;
insert into simple_agg_groupArrayLastArray values 
DROP DATABASE IF EXISTS test_kxfji61c 
DROP TABLE Mapping;
ALTER TABLE concurrent_alter_column ADD COLUMN c171 DOUBLE;
INSERT INTO test_01193_18429.table_8_140 VALUES 
select x3, x2, x1 from test order by -1;
select if(number % 5, Null, toFixedString(toString(number + 10), 2)) from numbers(20);
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt64(1), toUInt64(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_6_868 VALUES 
RENAME TABLE t2 TO t1
CREATE TABLE test_34547C4C45312D61736A47284A514967525F25424E4954534C372D3D5F425E22746E317777612D72(x UInt8) Engine=Memory;
select 0 = position('abcd', materialize('cdefg'));
CREATE TABLE test_5724705A6D62652D527636486A60622A217D2D6E4E204E4D6275424A4B5E7679654C7B2D224C4522(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_10_134 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (81 < 40 AND 3 > 0 ? 81 : 0)), throwIf(last != (81 < 40 AND 3 > 0 ? least(40 - 1, 81 + 3 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(40) LIMIT 81, 3);
DROP DATABASE IF EXISTS test_21xog2jn 
CREATE DATABASE IF NOT EXISTS test_nof8olw1 
SELECT visitParamExtractRaw('{"myparam": "test\\"string"}', 'myparam');
INSERT INTO test_01193_18429.table_6_259 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN toUInt8(1) WHEN (number % 3) = 0 THEN toInt16(2) ELSE toInt16(3) END FROM system.numbers LIMIT 10;
SELECT * FROM local_tbl;
SELECT 'Running test stateless/01651_map_functions.sql from pid=1724' 
SELECT count() FROM system.processes WHERE query_id LIKE '02497_test_tffxt3f1%'
DROP DATABASE IF EXISTS test_vrk4yxgv 
SET max_joined_block_size_rows = 65506;
INSERT INTO src_2 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 74
CREATE TABLE test_01193_18429.table_4_122 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_563A2F3073482423385F2A673D6E315078773D5C542837522E23442C264822317174284162225A31(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01016_index_tuple_field_type.sql from pid=1720' 
INSERT INTO src_6 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 1
INSERT INTO test_01193_18429.table_10_293 VALUES 
SELECT arrayJoin(['ÃÂ', 'ÃÂ', 'ÃÂ', 'ÃÂ']) as x ORDER BY x;
INSERT INTO test_01193_18429.table_4_723 VALUES 
DROP DICTIONARY 01753_dictionary_db.direct_dictionary_simple_key_hierarchy;
SELECT not false;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toRelativeHourNum(N, 'Asia/Istanbul') as r FORMAT CSV;
SELECT CASE WHEN (col1 % 2) = 0 THEN ['foo', col3] WHEN (col1 % 3) = 0 THEN [col4, col5] ELSE [col6, 'bar'] END FROM multi_if_check;
CREATE DATABASE IF NOT EXISTS test_hjqqp1i2 
DROP DATABASE IF EXISTS test_cz6g5g0w 
CREATE TABLE test_01193_18429.table_7_115 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT sparkbar(3,toDate('2020-01-01'),toDate('2020-01-10'))(event_date,cnt) FROM spark_bar_test;
SELECT name FROM (SELECT path, name FROM system.zookeeper ORDER BY name) WHERE path LIKE '%02221_system_zookeeper_unrestricted_test_uxcs1qbo/02221_system_zookeeper_unrestricted%'
CREATE TABLE test_collation (`v` String, `v2` String) ENGINE = MergeTree ORDER BY v SETTINGS index_granularity = 8192, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 24201, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 16146441, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 39281, primary_key_compress_block_size = 49279
SELECT -3_4e2_1;
SELECT 'Running test stateless/01388_clear_all_columns.sql from pid=1705' 
CREATE TABLE test_01193_18429.table_9_490 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
ALTER TABLE src_0 REPLACE PARTITION 7 FROM src_7
CREATE TABLE test_01193_18429.table_1_599 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE DATABASE IF NOT EXISTS test_drdjd4e4 
RENAME TABLE table_for_renames34 TO table_for_renames35
DROP TABLE IF EXISTS model;
ALTER TABLE tmp DROP COLUMN s;
SELECT 'Running test stateless/02792_drop_projection_lwd.sql from pid=1713' 
DROP TABLE constraint_test_transitivity;
CREATE TABLE left_join (x UInt32, s String) engine = Join(ALL, LEFT, x);
SELECT idna, idnaEncode(idna) AS ascii, tryIdnaEncode(ascii) AS ascii_try, idnaDecode(ascii) AS original, idnaDecode(ascii_try) AS original_try FROM tab;
SELECT (1,'') IN (1,'');
SELECT positionCaseInsensitiveUTF8('ÃÂ¸ÃÂ³ÃÂ¾ÃÂ»ÃÂºÃÂ°.ÃÂÃÂ', 'ÃÂ¸ÃÂ³ÃÂ¾ÃÂ»ÃÂºÃÂ°.ÃÂÃ\0') AS res;
CREATE TABLE test_01193_18429.table_10_448 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SHOW CREATE TABLE rmt1;
drop table if exists `table_00653`;
DROP DATABASE IF EXISTS test1601_detach_permanently_atomic;
select tuple(number) > tuple(toNullable(number + 1)) from numbers(1);
CREATE TABLE test (`id` Int32, `pv` AggregateFunction(sum, Int32)) ENGINE = AggregatingMergeTree ORDER BY id SETTINGS index_granularity = 64409, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 90, merge_max_block_size = 6213, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 959330, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 519226584, index_granularity_bytes = 15556204, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 69079, primary_key_compress_block_size = 66033
SELECT reverse('');
SELECT count(n), sum(n) FROM test_01192_atomic.rmt
CREATE TABLE test (a Int32) ENGINE = MergeTree() order by tuple() SETTINGS disk = disk(type=local, path='/var/lib/clickhouse/disks/local/');
SELECT sumMapWithOverflow(NULL);
CREATE TABLE test_67766E6563334E636B2C68503E7A7B36225A2F267E37563C7B633926496C7A606477502A25334448(x UInt8) Engine=Memory;
SELECT '0', '-9223372036854786048.000000000', 0 = -9223372036854786048.000000000, 0 != -9223372036854786048.000000000, 0 < -9223372036854786048.000000000, 0 <= -9223372036854786048.000000000, 0 > -9223372036854786048.000000000, 0 >= -9223372036854786048.000000000, -9223372036854786048.000000000 = 0, -9223372036854786048.000000000 != 0, -9223372036854786048.000000000 < 0, -9223372036854786048.000000000 <= 0, -9223372036854786048.000000000 > 0, -9223372036854786048.000000000 >= 0 , toUInt8(0) = -9223372036854786048.000000000, toUInt8(0) != -9223372036854786048.000000000, toUInt8(0) < -9223372036854786048.000000000, toUInt8(0) <= -9223372036854786048.000000000, toUInt8(0) > -9223372036854786048.000000000, toUInt8(0) >= -9223372036854786048.000000000, -9223372036854786048.000000000 = toUInt8(0), -9223372036854786048.000000000 != toUInt8(0), -9223372036854786048.000000000 < toUInt8(0), -9223372036854786048.000000000 <= toUInt8(0), -9223372036854786048.000000000 > toUInt8(0), -9223372036854786048.000000000 >= toUInt8(0) , toInt8(0) = -9223372036854786048.000000000, toInt8(0) != -9223372036854786048.000000000, toInt8(0) < -9223372036854786048.000000000, toInt8(0) <= -9223372036854786048.000000000, toInt8(0) > -9223372036854786048.000000000, toInt8(0) >= -9223372036854786048.000000000, -9223372036854786048.000000000 = toInt8(0), -9223372036854786048.000000000 != toInt8(0), -9223372036854786048.000000000 < toInt8(0), -9223372036854786048.000000000 <= toInt8(0), -9223372036854786048.000000000 > toInt8(0), -9223372036854786048.000000000 >= toInt8(0) , toUInt16(0) = -9223372036854786048.000000000, toUInt16(0) != -9223372036854786048.000000000, toUInt16(0) < -9223372036854786048.000000000, toUInt16(0) <= -9223372036854786048.000000000, toUInt16(0) > -9223372036854786048.000000000, toUInt16(0) >= -9223372036854786048.000000000, -9223372036854786048.000000000 = toUInt16(0), -9223372036854786048.000000000 != toUInt16(0), -9223372036854786048.000000000 < toUInt16(0), -9223372036854786048.000000000 <= toUInt16(0), -9223372036854786048.000000000 > toUInt16(0), -9223372036854786048.000000000 >= toUInt16(0) , toInt16(0) = -9223372036854786048.000000000, toInt16(0) != -9223372036854786048.000000000, toInt16(0) < -9223372036854786048.000000000, toInt16(0) <= -9223372036854786048.000000000, toInt16(0) > -9223372036854786048.000000000, toInt16(0) >= -9223372036854786048.000000000, -9223372036854786048.000000000 = toInt16(0), -9223372036854786048.000000000 != toInt16(0), -9223372036854786048.000000000 < toInt16(0), -9223372036854786048.000000000 <= toInt16(0), -9223372036854786048.000000000 > toInt16(0), -9223372036854786048.000000000 >= toInt16(0) , toUInt32(0) = -9223372036854786048.000000000, toUInt32(0) != -9223372036854786048.000000000, toUInt32(0) < -9223372036854786048.000000000, toUInt32(0) <= -9223372036854786048.000000000, toUInt32(0) > -9223372036854786048.000000000, toUInt32(0) >= -9223372036854786048.000000000, -9223372036854786048.000000000 = toUInt32(0), -9223372036854786048.000000000 != toUInt32(0), -9223372036854786048.000000000 < toUInt32(0), -9223372036854786048.000000000 <= toUInt32(0), -9223372036854786048.000000000 > toUInt32(0), -9223372036854786048.000000000 >= toUInt32(0) , toInt32(0) = -9223372036854786048.000000000, toInt32(0) != -9223372036854786048.000000000, toInt32(0) < -9223372036854786048.000000000, toInt32(0) <= -9223372036854786048.000000000, toInt32(0) > -9223372036854786048.000000000, toInt32(0) >= -9223372036854786048.000000000, -9223372036854786048.000000000 = toInt32(0), -9223372036854786048.000000000 != toInt32(0), -9223372036854786048.000000000 < toInt32(0), -9223372036854786048.000000000 <= toInt32(0), -9223372036854786048.000000000 > toInt32(0), -9223372036854786048.000000000 >= toInt32(0) , toUInt64(0) = -9223372036854786048.000000000, toUInt64(0) != -9223372036854786048.000000000, toUInt64(0) < -9223372036854786048.000000000, toUInt64(0) <= -9223372036854786048.000000000, toUInt64(0) > -9223372036854786048.000000000, toUInt64(0) >= -9223372036854786048.000000000, -9223372036854786048.000000000 = toUInt64(0), -9223372036854786048.000000000 != toUInt64(0), -9223372036854786048.000000000 < toUInt64(0), -9223372036854786048.000000000 <= toUInt64(0), -9223372036854786048.000000000 > toUInt64(0), -9223372036854786048.000000000 >= toUInt64(0) , toInt64(0) = -9223372036854786048.000000000, toInt64(0) != -9223372036854786048.000000000, toInt64(0) < -9223372036854786048.000000000, toInt64(0) <= -9223372036854786048.000000000, toInt64(0) > -9223372036854786048.000000000, toInt64(0) >= -9223372036854786048.000000000, -9223372036854786048.000000000 = toInt64(0), -9223372036854786048.000000000 != toInt64(0), -9223372036854786048.000000000 < toInt64(0), -9223372036854786048.000000000 <= toInt64(0), -9223372036854786048.000000000 > toInt64(0), -9223372036854786048.000000000 >= toInt64(0) ;
SELECT CASE WHEN (number % 2) = 0 THEN toInt32(1) WHEN (number % 3) = 0 THEN toUInt8(2) ELSE toInt16(3) END FROM system.numbers LIMIT 10;
SELECT * FROM system.replication_queue WHERE table = 'concurrent_alter_detach_2' and (type = 'ALTER_METADATA' or type = 'MUTATE_PART')
select countSubstrings(haystack, pattern) from tab where id = 1;
CREATE TABLE test_01193_18429.table_4_114 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT toInt128(number * number) * number y, toDecimal32(y, 1), toDecimal64(y, 2), toDecimal128(y, 6), toDecimal256(y, 7) FROM numbers_mt(10) ORDER BY number;
SELECT 'Running test stateless/02835_parallel_replicas_over_distributed.sql from pid=1718' 
CREATE INDEX idx_tab3_0 ON tab3 (col3 DESC,col1);
SELECT * FROM empty ORDER BY key;
CREATE DATABASE IF NOT EXISTS test_vyr3teeo 
SELECT t1.id, t1.value, t2.id, t2.value, t3.id, t3.value FROM test_table_join_1 AS t1 FULL JOIN test_table_join_2 AS t2 ON t1.id = t2.id AND t1.value == 'Join_1_Value_0' RIGHT JOIN test_table_join_3 AS t3 ON t2.id = t3.id AND t2.value == 'Join_2_Value_0';
CREATE DATABASE IF NOT EXISTS test_w71fgkcx 
INSERT INTO test_move_partition_src SELECT number % 2, number FROM system.numbers LIMIT 10000000;
CREATE TABLE test_01193_18429.table_2_583 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'left (join_use_nulls)';
CREATE INDEX idx_tab4_1 ON tab4 (col3 DESC,col1 DESC);
CREATE TABLE test_6D2D3A436F6B2728214C5F432D40344179274F2037282E5A4B44742B5B795163454E5D727462643C(x UInt8) Engine=Memory;
select * from test_02293 order by a format JSONColumns
CREATE INDEX idx_tab4_5 ON tab4 (col0 DESC,col4 DESC);
SELECT range(NULL, NULL);
SELECT 'Running test stateless/01710_projections_in_distributed_query.sql from pid=1722' 
SYSTEM SYNC REPLICA part_header_r2;
CREATE TABLE test_4F2E567D3B5A3E43743C745C32616D2E512E65695C205063564C35677244553922396F6E3C705342(x UInt8) Engine=Memory;
SELECT '-0.0000000000000000001' AS x, toDecimal64(x, 18);
SELECT count() > 0 FROM system.zookeeper WHERE value LIKE '%';
INSERT INTO test_01193_18429.table_4_799 VALUES 
INSERT INTO test_01193_18429.table_1_584 VALUES 
CREATE TABLE test_2A2F6B35372A2C4225762D396B42364245582235626D63524D723553267E403462295828205C257A(x UInt8) Engine=Memory;
insert into sDD select (1602720000+number*60)*1000, number from numbers(5000);
SELECT multiIf((col1 % 2) = 0, toFixedString('foo', 16), 1, toFixedString(col3, 16), toFixedString(col4, 16)) FROM multi_if_check;
CREATE TABLE test_01193_18429.table_5_284 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT key, value1, value2, toUInt64(min(time)) AS start_ts FROM join_inner_table__fuzz_1 PREWHERE (id = '833c9e22-c245-4eb5-8745-117a9a1f26b1') AND (number > toUInt64('1610517366120')) GROUP BY key, value1, value2 WITH ROLLUP ORDER BY key ASC, value1 ASC, value2 ASC NULLS LAST LIMIT 10 FORMAT Null;
DROP DATABASE IF EXISTS test_iccmu2ql 
CREATE TABLE test_20286C5C57212B5362607555754672492334305F5F7974453F294D735D712E654A7B3A5A246F2441(x UInt8) Engine=Memory;
SELECT number, number % 2, sum(number) AS val FROM numbers(10) GROUP BY CUBE(number, number % 2) ORDER BY (number, number % 2, val) SETTINGS group_by_use_nulls=1;
SELECT arrayReduce('stddevSampOrNull', [toDecimal128(-123.45, 2)]);
DROP TABLE IF EXISTS async_inserts_2156
SELECT uniq(a) FROM (SELECT a, sum(b) FROM test_rewrite_uniq_to_count GROUP BY a) settings allow_experimental_analyzer=1;
SELECT x, txt FROM 02540_date WHERE txt == 'CAST(0 as UInt16)';
CREATE TABLE test_634F3A787B5B61203B5921242779637C277955613E5D3A374A2F70346F60204B782E66785D3B4454(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_6_602 VALUES 
SELECT 'Running test stateless/01343_min_bytes_to_use_mmap_io.sql from pid=1714' 
CREATE TABLE funnel_test_strict_order (`dt` DateTime, `user` int, `event` String) ENGINE = MergeTree PARTITION BY dt ORDER BY user SETTINGS index_granularity = 64478, min_bytes_for_wide_part = 753990444, ratio_of_defaults_for_sparse_serialization = 0.7551005482673645, replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 5045, prefer_fetch_merged_part_size_threshold = 802410851, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 5327015346, index_granularity_bytes = 22339268, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 93617, primary_key_compress_block_size = 15030
INSERT INTO test_01193_18429.table_3_85 VALUES 
INSERT INTO test_01193_18429.table_7_854 VALUES 
CREATE INDEX idx_tab2_3 ON tab2 (col4 DESC,col3,col0);
INSERT INTO bftest__fuzz_21 (k, x) SELECT number, arrayMap(i -> (rand64() % 565656), range(10)) FROM numbers(1000);
SELECT ngrams(materialize('Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ'), 1);
CREATE TABLE test_01193_18429.table_7_151 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE x AS system.numbers ENGINE = MergeTree ORDER BY number SETTINGS index_granularity = 46896, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 4, merge_max_block_size = 10933, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 27361429, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 8069, primary_key_compress_block_size = 68059
CREATE TABLE test_7335565C36674B722148263E3722696E216455533C5B237333772A6B6A232B4552703B7A40402559(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_7_695 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE buffer (n Int8) ENGINE = Buffer(currentDatabase(), file, 16, 10, 200, 10000, 1000000, 10000000, 1000000000);
CREATE TABLE test(test String DEFAULT 'test', test_tmp Int DEFAULT 1)ENGINE = Memory;
CREATE DATABASE IF NOT EXISTS test_l7iehks2 
CREATE DATABASE IF NOT EXISTS test_b7pnkl7o 
select (toInt128(-1) + toInt128(1)) x, (toInt256(-1) + toInt128(1)) y, toTypeName(x), toTypeName(y);
SELECT count() FROM test_table AS t1 INNER JOIN (SELECT number AS id FROM numbers(10)) AS t2 ON t1.id = t2.id WHERE t1.id = 1 AND t1.value_1 = '1' SETTINGS force_primary_key = 1, force_data_skipping_indices = 'value_1_idx';
select 'on exception before start', arraySort(groupArray(n)) from (select n from mt1 union all select * from mt2);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (81 < 7 AND 80 > 0 ? 81 : 0)), throwIf(last != (81 < 7 AND 80 > 0 ? least(7 - 1, 81 + 80 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(7) LIMIT 81, 80);
CREATE INDEX idx_tab4_1 ON tab4 (col3);
INSERT INTO test_01193_18429.table_6_377 VALUES 
SELECT multiIf(1, toFixedString(col2, 16), 1, col3, toFixedString('baz', 16)) FROM multi_if_check;
EXPLAIN SYNTAX SELECT * FROM prewhere_move_select_final FINAL WHERE z > 400;
SELECT total_bytes, total_rows FROM system.tables WHERE name = 'check_system_tables' AND database = currentDatabase();
CREATE TABLE test_01193_18429.table_8_359 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_7_532 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_9_453 VALUES 
SELECT cramersVBiasCorrected(NULL, NULL, NULL);
SHOW CREATE PROFILE s4_01294;
CREATE DATABASE IF NOT EXISTS test_zc0s6a5t 
select * from (select number as l from system.numbers limit 3) any left join (select number as r from system.numbers limit 3) on l + 1 = r * 1;
SELECT 'Running test stateless/00240_replace_substring_loop.sql from pid=1720' 
SELECT avgWeighted(x, w) FROM values('x Int16, w UInt8', (0, 0), (1, 0));
DROP TABLE IF EXISTS tableCommon;
CREATE DATABASE IF NOT EXISTS test_7kqrd7e1 
drop table right_table;
INSERT INTO test_01193_18429.table_1_625 VALUES 
DROP DATABASE IF EXISTS test_fm4jsqx8 
CREATE DATABASE IF NOT EXISTS test_vuhymhsd 
CREATE TABLE test_753067774B396B6747425B765C3363797C44232D267237582B2E2B4D774875665F646F657869485D(x UInt8) Engine=Memory;
optimize table badFixedStringSort final;
select k, groupArraySample(10, 123456)(v) from (select number % 4 as k, number as v from numbers(1024)) group by k order by k;
ALTER TABLE table_for_rename1 RENAME COLUMN value4 TO value1;
CREATE DATABASE IF NOT EXISTS test_lq8lu772 
CREATE TABLE test_2B45312D795C41535F4E426C34617E385150592A3B562C6A6D46775E78557C234F5647687840372C(x UInt8) Engine=Memory;
SELECT topKArray([ [ [1], [2] ], [ [3], [4]] ]);
SELECT 8, 5, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (8 < 13 AND 5 > 0 ? 8 : 0)), throwIf(last != (8 < 13 AND 5 > 0 ? least(13 - 1, 8 + 5 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 8, 5);
CREATE TABLE test_3F54202D687D3A3338656673764C7B6E2D49296A516E4F4B7E523953374C773938466C2E3A787452(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_9_758 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_alter_r1 (`x` Date, `s` String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01267/alter', 'r1') PARTITION BY x ORDER BY s SETTINGS index_granularity = 7543, min_bytes_for_wide_part = 989006097, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 10990, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 91, min_merge_bytes_to_use_direct_io = 1269974809, index_granularity_bytes = 12570249, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 40681, primary_key_compress_block_size = 69505
SELECT CASE WHEN (number % 2) = 0 THEN [toInt16(1), toInt16(2)] WHEN (number % 3) = 0 THEN [toInt64(2), toInt64(3)] ELSE [toInt64(3), toInt64(3)] END FROM system.numbers LIMIT 10;
alter table many_mutations delete where y = 763 * 2 settings mutations_sync = 0;
CREATE DATABASE IF NOT EXISTS test_1yte1m8k 
CREATE TABLE test_01193_18429.table_7_291 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
drop database if exists db_01527_ranges;
DROP DATABASE IF EXISTS test_r0zyyyzc 
CREATE TABLE parquet_load (`value` Nullable(Decimal(10, 2))) ENGINE = Memory;
DROP DATABASE IF EXISTS test_3w4y0owl 
SELECT hex(-1);
CREATE TABLE test_01193_18429.table_3_265 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP DICTIONARY 01684_database_for_cache_dictionary.cache_dictionary_simple_key_simple_attributes;
select ignore(x) from (select groupArray(number) x from numbers(3355443)) group by x format Null;
CREATE DATABASE IF NOT EXISTS test_ngd432ym 
INSERT INTO test_01193_18429.table_2_588 VALUES 
SELECT fact_1_id, fact_2_id, fact_3_id, fact_4_id, SUM(sales_value) AS sales_value from grouping_sets GROUP BY GROUPING SETS ((fact_1_id, fact_2_id), (fact_3_id, fact_4_id)) ORDER BY fact_1_id, fact_2_id, fact_3_id, fact_4_id;
SELECT splitByChar('=', 'a==b=c=d', 4) SETTINGS splitby_max_substrings_includes_remaining_string = 1;
SET group_by_two_level_threshold_bytes = 50000000;
SELECT count() from tab_02473 PREWHERE b > 10 AND b <= 70 AND c > 46 AND c <= 76 WHERE a == 0;
select * from ( SELECT * FROM l full outer join r on l.luid = r.ruid limit 100000000) where luid is null and ruid is not null;
SELECT multiIf((number % 2) = 0, [toUInt8(1), toUInt8(2)], (number % 3) = 0, [toUInt32(2), toUInt32(3)], [toInt32(3), toInt32(3)]) FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_g1smv8s4 
CREATE TABLE test (`i` UInt64) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 51607, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 9495, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 322826910, index_granularity_bytes = 14591787, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 33379, primary_key_compress_block_size = 76394
DROP TABLE IF EXISTS rename_table_multiple;
select isZeroOrNull(Null);
SELECT multiIf((number % 2) = 0, [toInt32(1), toInt32(2)], (number % 3) = 0, [toFloat64(2), toFloat64(3)], [toInt32(3), toInt32(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_5748783E4B2748335A3D78364F263C6373766F2B2941606F23374B274C653E376C51727D2B623925(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_5_8 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE DICTIONARY hierachical_hashed_dictionary ( id UInt64, parent_id Nullable(UInt64) HIERARCHICAL ) PRIMARY KEY id SOURCE(CLICKHOUSE(TABLE 'test_hierarhical_table')) LAYOUT(HASHED()) LIFETIME(0);
SELECT toTypeName(res), sumWithOverflowMap(statusMap) as res FROM map_comb;
SELECT s, replaceAll(s, '_', 'o') AS a, replaceRegexpAll(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['.', '._']) AS s);
WITH (tup || (3, 4)) AS res SELECT res, res.1, res.2, res.3, res.4 FROM t_02833;
SELECT toIntervalHour(-1);
CREATE TABLE test_01193_18429.table_9_571 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE INDEX idx_tab3_5 ON tab3 (col4);
SELECT uniqTheta([NULL],[NULL]);
CREATE DATABASE IF NOT EXISTS test_z1mi2hgc 
select 8 = sequenceCount('(?1)')(time, data = 0, data = 1, data = 2, data = 3) from sequence_test;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 9561, 500 settings ignore_materialized_views_with_dropped_target_table=1
INSERT INTO test_01193_18429.table_8_272 VALUES 
SELECT 'Running test stateless/02490_replacing_merge_tree_is_deleted_column.sql from pid=1714' 
select 'dst_to_src', 15, 'src', type, n, _part from src order by type, n
INSERT INTO test_7ewi5ikr.t_async_inserts_logs FORMAT Values
SELECT arrayFirstIndex(x -> x >= 2, [1, 2, 3]);
create table set (s String) engine=Set as select arrayJoin(['src_table_1', 'src_table_2']);
insert into t1_shard values 
SELECT count() FROM signed_integer_test_table WHERE toUInt32(val) == 0;
INSERT INTO r3 SELECT 18 % 10 = 3 ? 18 - 1 : 18
DROP DATABASE IF EXISTS test_el5fvava 
SELECT count() FROM system.query_cache WHERE query LIKE 'SELECT v FROM t_cache_sparse%';
SELECT toDate('2018-09-17') AS x, toDateTime(x) AS x_t, toISOWeek(x), toISOWeek(x_t), toISOYear(x), toISOYear(x_t), toStartOfISOYear(x), toStartOfISOYear(x_t);
CREATE TABLE test_01193_18429.table_1_712 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/02205_postgresql_functions.sql from pid=1726' 
INSERT INTO test_01193_18429.table_1_799 VALUES 
SELECT * FROM bloom_filter_idx WHERE multiSearchAny(s, ['ÃÂÃÂÃÂÃÂ¾ÃÂºÃÂ°', 'string']) FORMAT JSON
WITH (`number` % 10) = 0 AS `value`, `number` AS `time` SELECT exponentialMovingAverage(1)(`value`, `time`) AS `exp_smooth` FROM numbers_mt(1000)
system start fetches rmt1;
INSERT INTO test_01193_18429.table_6_422 VALUES 
CREATE TABLE defaults (a UInt8, b DEFAULT 0, c DEFAULT identity(b)) ENGINE = Memory;
CREATE TABLE test_2C5F333A6B6160317B653A322972576F476C593E6E46452C46544F71354D525A624D254733262752(x UInt8) Engine=Memory;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (58 < 55 AND 89 > 0 ? 58 : 0)), throwIf(last != (58 < 55 AND 89 > 0 ? least(55 - 1, 58 + 89 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(55) LIMIT 58, 89);
DROP TABLE capnp_lists
SELECT 'Running test stateless/02517_executable_pool_bad_input_query.sql from pid=1718' 
select 3 = countEqual([0 as x, 1, x, x], x);
CREATE TABLE test_01193_18429.table_9_137 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT atanh(NULL);
select makeDate(2283,11,12);
CREATE TABLE test_2F3936464F507D6C7A493C3D63256F45412454223124393321443C3B5170267D3D664C41347E3063(x UInt8) Engine=Memory;
CREATE TABLE test_3D4C46657C7B394D257342497E242C477A6B3E3062243E435A506E54534C7C3E267868536F677B20(x UInt8) Engine=Memory;
SELECT arraySort(groupArrayDistinct(`number` % 13)) FROM numbers_mt(100000)
SELECT 'Running test stateless/02502_fuzz_bad_cast_to_ast_literal.sql from pid=1724' 
SELECT 'Running test stateless/01632_select_all_syntax.sql from pid=1713' 
SELECT dateDiff('day', toDate('2014-10-26'), toDate('2014-10-27'), 'Asia/Istanbul');
SELECT 'Running test stateless/01079_bad_alters_zookeeper_long.sh from pid=1720' 
CREATE TABLE test_01193_18429.table_1_590 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_collate (x UInt32, s LowCardinality(String)) ENGINE=Memory();
DROP TABLE IF EXISTS distinct;
SELECT sipHash64Keyed((toUInt64(0), toUInt64(0)), tuple(*)) FROM sipHashKeyed_test;
CREATE TABLE test_6C3E52736C794B22437446725177355256546C615524757C72227C3A2C5B42472E2543205F277026(x UInt8) Engine=Memory;
INSERT INTO table_for_ttl SELECT now() - INTERVAL 2 YEAR, 1, toString(number) from numbers(1000);
SELECT distinct(marks) from system.parts WHERE table = 'adaptive_granularity_alter' and database=currentDatabase() and active=1;
SELECT count(1), uniqExact(1) FROM ( SELECT k FROM (SELECT materialize(1) AS k FROM numbers(1)) nums JOIN (SELECT materialize(1) AS k, number n FROM numbers(100000)) j USING k);
CREATE TABLE test_01193_18429.table_1_795 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT pointInPolygon((39.840202, 21.451471), [(39.82876, 21.41802),(39.83007, 21.41793),(39.83168, 21.41763),(39.83252, 21.41736),(39.8333, 21.41696),(39.83461, 21.41893),(39.83507, 21.41978),(39.83524, 21.42063),(39.8353, 21.42147),(39.83401, 21.42163),(39.83388, 21.42071),(39.83352, 21.41999),(39.83348, 21.41968),(39.83332, 21.41932),(39.83276, 21.41877),(39.8319, 21.41823),(39.83077, 21.41798),(39.82876, 21.41802)]);
SELECT max(bs) > 10, b FROM ( SELECT blockSize() as bs, * FROM t1 JOIN t2 ON t1.a = t2.a ) GROUP BY b ORDER BY b SETTINGS max_joined_block_size_rows = 10;
CREATE TABLE test_7C6024232C3B277D535C3639643F5F43486E7D4F313D3746405A233B4C447C50694E7E27787A3B75(x UInt8) Engine=Memory;
alter table data_01900_1 update s = 'foo_6' where 1;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c3)) OR ((NOT c9) AND (NOT c0)) OR ((NOT c3) AND (NOT c0) AND c3 AND c0) OR (c6 AND (NOT c5) AND c4 AND c8) OR ((NOT c9) AND (NOT c7) AND (NOT c1) AND c9 AND (NOT c3)) OR (c5) SETTINGS convert_query_to_cnf = 1
SELECT toDecimal128('42.42', 4) AS x, toDecimal32(log10(x), 4) AS y, round(exp10(y), 6);
DROP ROLE user_role_2
DROP TABLE t_str;
CREATE TABLE tab2 (`a2` Int32, `b2` Int32) ENGINE = MergeTree ORDER BY a2 SETTINGS index_granularity = 39093, min_bytes_for_wide_part = 314714823, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 102, merge_max_block_size = 21837, prefer_fetch_merged_part_size_threshold = 5844001132, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 4164678320, index_granularity_bytes = 4625760, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 33656, primary_key_compress_block_size = 44346
select * from opentelemetry_test format Null 
SELECT avgWeighted(x, w) FROM values('x UInt64, w Int16', (4, 1), (1, 0), (10, 2));
SELECT arrayCompact([1, 1, nan, nan, -nan, 2, 2, 2]);
SELECT map('a', 1, 'b', 2) FROM remote('127.0.0.{1,2}');
CREATE TABLE test_3B4F65414158626321516E5C685023437020246F337E7962736E7B343E477828407C207123754F21(x UInt8) Engine=Memory;
select '-------toStartOfTenMinutes---------';
SELECT pe, pe.values.a FROM (SELECT * FROM t2) ARRAY JOIN pe SETTINGS allow_experimental_analyzer = 1;
INSERT INTO test_01193_18429.table_4_752 VALUES 
DROP DATABASE IF EXISTS test_1p7oq2vo 
CREATE TABLE test_41453A2F6F6C6A755F2D52685952777A49452E3938762654354266604E577D3F2C297538692B6C2E(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_4_961 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO four_rows_per_granule1 (p, k, v1, v2) VALUES 
select if(in(dummy, tuple(0, 1)), 'ok', 'ok') from remote('localhost', system.one);
CREATE TABLE test_01193_18429.table_2_17 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_5_62 VALUES 
SELECT toUInt128OrZero(NULL, NULL);
INSERT INTO concurrent_alter_mt_1 SELECT number, number + 10, number from numbers(10)
CREATE TABLE IF NOT EXISTS t1 (`x` UInt64, `s` Array(Nullable(String))) ENGINE = ReplicatedMergeTree('/clickhouse/tables/01671_ddl_hang_timeout_long_test_990cm9di/test_01671', 'r_4') ORDER BY x SETTINGS index_granularity = 37030, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.5196054577827454, replace_long_file_name_to_hash = true, max_file_name_length = 103, merge_max_block_size = 10529, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 94, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 3620834, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 80095, primary_key_compress_block_size = 38829
OPTIMIZE TABLE ttl_table2 FINAl
INSERT INTO r4 SELECT 97 % 10 = 4 ? 97 - 1 : 97
EXISTS VIEW db_01048.v_01048;
SELECT 'SELECT CAST(N as Date)';
INSERT INTO test_01193_18429.table_5_887 VALUES 
SELECT DISTINCT toString(number) = toStringCutToZero(toFixedString(toString(number), 10)) FROM (SELECT * FROM system.numbers LIMIT 1000);
CREATE TABLE test_3B653158564F5778486E7961692A5F754A585930546266363C4A7B252C56524024734B702C407B29(x UInt8) Engine=Memory;
show create mv;
SELECT anyLast([NULL]);
INSERT INTO test_01193_18429.table_5_929 VALUES 
SELECT 'Running test stateless/02473_extract_low_cardinality_from_json.sql from pid=1714' 
SELECT * FROM minmax_idx2 WHERE (u64 < 2 OR u64 > 10) AND e != 'b' ORDER BY dt;
DROP DICTIONARY 02183_cache_dictionary;
INSERT INTO src VALUES /* (-33, 2) */ 
SELECT medianInterpolatedWeighted(NULL, NULL, NULL);
INSERT INTO test_01193_18429.table_9_177 VALUES 
CREATE TABLE test_01193_18429.table_9_340 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_2_329 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT * FROM pk WHERE z = 5786;
SELECT count() FROM constrained;
select hex(sipHash64Keyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24)));
SYSTEM START MERGES t_limit_mutations
CREATE TABLE zero_rows_per_granule ( p Date, k UInt64, v1 UInt64, v2 Int64 ) ENGINE MergeTree() PARTITION BY toYYYYMM(p) ORDER BY k SETTINGS index_granularity_bytes = 20, min_index_granularity_bytes = 10, write_final_mark = 0, enable_vertical_merge_algorithm=1, vertical_merge_algorithm_min_rows_to_activate=0, vertical_merge_algorithm_min_columns_to_activate=0, min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0;
SELECT COUNT() FROM bloom_filter_types_test WHERE i32 = 1 SETTINGS max_rows_to_read = 6;
CREATE TABLE test_726D45385726603136342C365F32722A524673656D782A6B304D664E642768725B674B333E632249(x UInt8) Engine=Memory;
INSERT INTO test_m8602bh2.test_01040 (key) VALUES
select b'0011000100110000';
DROP DATABASE IF EXISTS test_1we55cu4 
SELECT 'Running test stateless/01762_datetime64_extended_parsing.sql from pid=1713' 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), N < toInt16(-1) as r FORMAT CSV;
CREATE TABLE url (n UInt64, col String) ENGINE=URL ( replace ( 'https://localhost:8443/?query=' || 'select n, _table from ' || currentDatabase() || '.merge format CSV', ' ', '+' ), CSV );
SELECT multiIf((number % 2) = 0, toInt8(1), (number % 3) = 0, toUInt16(2), toUInt16(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_8_181 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_6_40 VALUES 
set group_by_two_level_threshold = 100000;
CREATE TABLE data ( `n` UInt32, `t` DateTime ) ENGINE = Null;
insert into table function url('http://[2001:db8:1::242:ac11:2]:54261/', 'CSV', 'str String,numuint UInt32,numint Int32,double Float64') values
SELECT 'Running test stateless/02731_analyzer_join_resolve_nested.gen.sql from pid=1718' 
SELECT cutIPv6(toFixedString(unhex('00000000000000000000FFFFC1FC110A'), 16), 0, 14);
select toMonday(toDateTime(0, 'Asia/Istanbul'));
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (4 < 3 AND 71 > 0 ? 4 : 0)), throwIf(last != (4 < 3 AND 71 > 0 ? least(3 - 1, 4 + 71 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(3) LIMIT 4, 71);
CREATE DATABASE IF NOT EXISTS test_5mr53c62 
SELECT keycol, enum_col FROM table_key FULL JOIN table_with_enum USING (keycol) ORDER BY keycol;
DROP DATABASE IF EXISTS test_xevwmb03 
SELECT count() FROM test_log;
INSERT INTO test_01193_18429.table_2_673 VALUES 
SELECT toTypeName(i) FROM generateRandom('i String') LIMIT 1;
set input_format_orc_import_nested=1;
CREATE TABLE test_475078744C5821776C6D64573F746B614B422471274B635A4D34663F263F7A3B4645397E33616933(x UInt8) Engine=Memory;
SELECT parseTimeDelta(NULL, NULL, NULL);
ALTER TABLE concurrent_alter_column ADD COLUMN c123 DOUBLE;
DROP DATABASE IF EXISTS test_6atq7y5f 
INSERT INTO dst_4 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 63
SELECT toStartOfNanosecond(NULL);
INSERT INTO test_01193_18429.table_2_844 VALUES 
WITH test_cte AS ( SELECT ref_10.c11 as c_2_c2350_1, ref_9.c9 as c_2_c2351_2 FROM test_table_1 as ref_9 RIGHT OUTER JOIN test_table_1 as ref_10 ON (ref_9.c11 = ref_10.c9) INNER JOIN test_table_2 as ref_11 ON (ref_10.c8 = ref_11.vkey) WHERE ((ref_10.pkey + ref_11.pkey) BETWEEN ref_11.vkey AND (CASE WHEN (-30.87 >= ref_9.c10) THEN ref_11.c15 ELSE ref_11.pkey END)) ) SELECT ref_13.c_2_c2350_1 as c_2_c2357_3 FROM test_cte as ref_13 WHERE (ref_13.c_2_c2351_2) in (select ref_14.c_2_c2351_2 as c_5_c2352_0 FROM test_cte as ref_14);
INSERT INTO test_01193_18429.table_4_413 VALUES 
DROP DATABASE IF EXISTS test_zjjr3hxc 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c5) AND c0 AND c1) OR ((NOT c2) AND (NOT c7)) OR (c3 AND (NOT c0) AND c8 AND (NOT c1) AND c1) OR ((NOT c2) AND (NOT c1)) OR ((NOT c3) AND (NOT c2) AND c6) OR (c7 AND (NOT c7) AND (NOT c8) AND (NOT c2)) OR (c7 AND c6 AND (NOT c9) AND c0) OR ((NOT c5) AND (NOT c3) AND c5 AND (NOT c9)) OR (c4 AND c4) OR (c8 AND c0) SETTINGS convert_query_to_cnf = 0
SELECT 13, 4, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (13 < 13 AND 4 > 0 ? 13 : 0)), throwIf(last != (13 < 13 AND 4 > 0 ? least(13 - 1, 13 + 4 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 13, 4);
create materialized view summing_merge_tree_aggregate_function ( d Date, k UInt64, c UInt64, un AggregateFunction(uniq, UInt64), ut AggregateFunction(uniqTheta, UInt64) ) engine=SummingMergeTree(d, k, 8192) as select d, k, sum(c) as c, uniqState(u) as un, uniqThetaState(u) as ut from summing_merge_tree_null group by d, k;
DROP TABLE t2;
SELECT nx, ny, nest.x, nest.y FROM nested ARRAY JOIN nest.x AS nx, nest.y AS ny;
SELECT round(categoricalInformationValue(x.1, x.2)[1], 6), round((2 / 2 - 2 / 3) * (log(2 / 2) - log(2 / 3)), 6) FROM ( SELECT arrayJoin([(0, 0), (1, 0), (1, 0), (1, 1), (1, 1)]) as x );
CREATE TABLE test_01915_db.test_source_table_1 ( id UInt64, value String ) ENGINE=TinyLog;
SELECT multiIf((number % 2) = 0, [toUInt8(1), toUInt8(2)], (number % 3) = 0, [toUInt64(2), toUInt64(3)], [toUInt64(3), toUInt64(3)]) FROM system.numbers LIMIT 10;
SELECT subtractNanoseconds(NULL, NULL, NULL);
select if(number % 5 == 0, Null, toInt32OrZero(toString(number))) from numbers(20);
SELECT 'Running test stateless/02541_tuple_element_with_null.sql from pid=1713' 
SELECT id, anyLast(value1), anyLast(value2), anyLast(value3), anyLast(value4) FROM test_table_nullable_unsigned_values GROUP BY id ORDER BY id;
SELECT subtractDays(NULL, NULL, NULL);
alter table many_mutations delete where y = 938 * 2 settings mutations_sync = 0;
CREATE INDEX idx_tab4_0 ON tab4 (col3,col4 DESC);
SET join_default_strictness = 'ALL';
select toTypeName(dict), dict, lowCardinalityIndices(dict), lowCardinalityKeys(dict) from (select '123_' || toLowCardinality(v) as dict from (select arrayJoin(['a', 'bb', '', 'a', 'ccc', 'a', 'bb', '', 'dddd']) as v));
CREATE TABLE map_test (`tags` Map(String, String)) ENGINE = MergeTree PRIMARY KEY tags ORDER BY tags SETTINGS index_granularity = 8192, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.4854806959629059, replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 22394, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 4369163224, index_granularity_bytes = 15764820, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 23893, primary_key_compress_block_size = 60807
CREATE TABLE test_6F54566A4D7B2B6C753B64423A376A39512C3B78645C776C766E506B76596D74584A6A533E20472A(x UInt8) Engine=Memory;
/* varPopStable */ SELECT varPopStable(x_value) FROM (SELECT x_value FROM series LIMIT 0);
DROP DATABASE IF EXISTS test_8jkh9kbe 
INSERT INTO test_01193_18429.table_2_36 VALUES 
SELECT multiIf((col1 % 2) = 0, toFixedString('foo', 16), (col1 % 3) = 0, col3, toFixedString('baz', 16)) FROM multi_if_check;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c6)) OR ((NOT c9) AND (NOT c3) AND (NOT c0) AND c3) OR ((NOT c6) AND c0 AND c3 AND (NOT c8) AND c7) OR ((NOT c9)) OR ((NOT c4) AND (NOT c3) AND c6) OR (c5) OR ((NOT c4) AND c1 AND c6) OR (c7) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_79362A717021523F6F20554B767C447A29685256227B2C7657332F3F724E2C2328265033452F6E3A(x UInt8) Engine=Memory;
select X.*, s.* from X inner join (select * from X) as s on X.id = s.x_b order by X.id, X.x_a, X.x_b, s.id, s.x_a, s.x_b;
SELECT positionUTF8(NULL);
INSERT INTO t4 VALUES 
optimize table data_01809 final;
SELECT (1, materialize(2), materialize('Hello')) IN (SELECT materialize(1), 2, materialize('Hello'));
INSERT INTO test_01193_18429.table_3_172 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN toUInt8(1) WHEN (number % 3) = 0 THEN toUInt8(2) ELSE toUInt8(3) END FROM system.numbers LIMIT 10;
insert into t2_00844 values
SELECT multiIf((number % 2) = 0, toInt8(1), (number % 3) = 0, toInt16(2), toUInt16(3)) FROM system.numbers LIMIT 10;
SELECT array(NULL, NULL);
CREATE TABLE test_01193_18429.table_2_270 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP DATABASE IF EXISTS test_4og226r8 
SELECT 'aes-256-ctr' AS mode, decrypt(mode, '[HIDDEN]') = input FROM encryption_test
SELECT if(number % 2, [9223372036854775806], materialize([2, 65537, -9223372036854775808])) AS res FROM numbers(2);
CREATE TABLE test_382C614A35484323492A6124622A576E42292D754B2928212A5A79734F6D245527645769564D3C52(x UInt8) Engine=Memory;
SELECT _database, _table, n FROM merge(REGEXP('^01902_db'), '^t') ORDER BY _database, _table, n;
set enable_optimize_predicate_expression = 1;
CREATE DATABASE IF NOT EXISTS test_zqy935bf 
CREATE TABLE test_52735C47412131637E5351244941503B71713477477D643B762E483942785B7822764E5558487366(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_7_269 VALUES 
CREATE TABLE rep_fsync_r1 (`key` Int) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/rep_fsync', 'r1') ORDER BY key SETTINGS min_bytes_for_wide_part = 0, fsync_part_directory = 1, enable_vertical_merge_algorithm = 1, vertical_merge_algorithm_min_rows_to_activate = 0, vertical_merge_algorithm_min_columns_to_activate = 0, index_granularity = 25801, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 79, merge_max_block_size = 9385, prefer_fetch_merged_part_size_threshold = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 5985280, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 59185, primary_key_compress_block_size = 77080
DROP TABLE l;
SELECT 'Running test stateless/00453_top_k.sql from pid=1720' 
INSERT INTO arrow_dicts select toString(number) from numbers(120, 120);
CREATE DICTIONARY test_8yvdjyfm.dict1 (`key_column` UInt64 DEFAULT 0, `second_column` UInt8 DEFAULT 1, `third_column` String DEFAULT 'qqq', `fourth_column` Float64 DEFAULT 42.) PRIMARY KEY key_column SOURCE(CLICKHOUSE(TABLE 'table_for_dict' DB currentDatabase())) LIFETIME(MIN 1 MAX 10) LAYOUT(FLAT())
DROP TABLE partitioned_by_week;
select arrayReduce('groupArrayResample(2, 9, 3)', [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);
alter table data_01900_2 update s = 'bar_15' where 1;
SELECT name, column, type FROM system.parts_columns WHERE table = 't_json_3' AND database = currentDatabase() AND active AND column = 'data' ORDER BY name;
CREATE DATABASE IF NOT EXISTS test_1q56hrpl 
INSERT INTO test_count values 
SELECT multiIf((number % 2) = 0, [toInt32(1), toInt32(2)], (number % 3) = 0, [toUInt32(2), toUInt32(3)], [toUInt16(3), toUInt16(3)]) FROM system.numbers LIMIT 10;
ALTER TABLE defaults ADD COLUMN n Nested(a UInt64, b String);
CREATE DATABASE IF NOT EXISTS test_rjfjmmb7 
SELECT throwIf((SELECT sum(nm) FROM mv) != 88) FORMAT Null;
SELECT count() FROM system.mutations WHERE table='replicated_mutation_table' and database='test_a688g476' and mutation_id='0000000001'
DROP TABLE insert
CREATE TABLE sqlite_table3_inferred_function AS sqlite('/var/lib/clickhouse/user_files/test_01889_sqllite_test_74159509_db1', 'table3')
INSERT INTO test_01193_18429.table_9_150 VALUES 
INSERT INTO test_01193_18429.table_4_193 VALUES 
SELECT count(*) FROM source WHERE toYear(dt_32) < 2023 SETTINGS allow_experimental_analyzer=1;
SELECT 'Running test stateless/01256_negative_generate_random.sql from pid=1715' 
SELECT CAST(number % 2, 'Enum(\'one\' = 0, \'two\' = 1, \'tHrEe\' = 2, \'four\' = 4)') AS value FROM numbers(3) FORMAT CapnProto SETTINGS format_schema='/usr/share/clickhouse-test/queries/0_stateless/format_schemas/02030_capnp_enum:Message', format_capn_proto_enum_comparising_mode='by_names'
CREATE TABLE test_01193_18429.table_2_642 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_4D226C733D627E64366C586F71424E277B2A29384F4C7D6B6E2F765A6C2A76206D397B4360347359(x UInt8) Engine=Memory;
SELECT toTypeName(data) FROM t_json_files LIMIT 1
CREATE TABLE test_01193_18429.table_3_896 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/01710_normal_projection_with_query_plan_optimization.sql from pid=1714' 
CREATE TABLE test_table_9 (`key` UInt64, `value` UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/02962_system_sync_replica_lightweight_from_modifier_test_87x3igkp/test_table', '9') ORDER BY key SETTINGS index_granularity = 41789, min_bytes_for_wide_part = 23797492, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 26, prefer_fetch_merged_part_size_threshold = 8232197432, vertical_merge_algorithm_min_rows_to_activate = 563505, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 7613754576, index_granularity_bytes = 30142180, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 58102, primary_key_compress_block_size = 92486
SELECT toStartOfDay(toDate(16343), 'Asia/Tokyo');
DROP DATABASE IF EXISTS test_tymasz3a 
SELECT count() FROM foo ANY INNER JOIN bar USING (dimension_1) WHERE (foo.server_date <= '2020-11-07') AND (toDate(foo.server_time, 'Asia/Yekaterinburg') <= '2020-11-07');
DROP TABLE mem;
EXPLAIN QUERY TREE SELECT cityHash64(a) + 10, a FROM column_swap_test_test WHERE cityHash64(a) = 0 SETTINGS allow_experimental_analyzer = 1;
INSERT INTO test_01193_18429.table_8_764 VALUES 
INSERT INTO test_01193_18429.table_10_183 VALUES 
INSERT INTO test_01193_18429.table_6_834 VALUES 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (54 < 57 AND 18 > 0 ? 54 : 0)), throwIf(last != (54 < 57 AND 18 > 0 ? least(57 - 1, 54 + 18 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(57) LIMIT 54, 18);
SELECT multiIf((number % 2) = 0, [toUInt8(1), toUInt8(2)], (number % 3) = 0, [toUInt16(2), toUInt16(3)], [toInt8(3), toInt8(3)]) FROM system.numbers LIMIT 10;
ALTER TABLE test_max_mt_projections_alter DROP PROJECTION p3;
CREATE TABLE test_01193_18429.table_6_663 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT name, column, type FROM system.parts_columns WHERE table = 't_materialize_column' AND database = currentDatabase() AND active ORDER BY name, column;
SELECT t1.id, t1.value, t2.id, t2.value FROM test_table_join_1 AS t1 FULL JOIN test_table_join_2 AS t2 ON t1.id = t2.id AND t1.value = 'Join_1_Value_0' AND t2.value = 'Join_2_Value_0';
select * from test_02377 order by n;
INSERT INTO r4 SELECT 64 % 10 = 4 ? 64 - 1 : 64
SELECT (number, -number) IN (SELECT nullIf(number, 2), -number FROM system.numbers LIMIT 1, 3) AS res FROM system.numbers LIMIT 5;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (100 < 68 AND 26 > 0 ? 100 : 0)), throwIf(last != (100 < 68 AND 26 > 0 ? least(68 - 1, 100 + 26 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(68) LIMIT 100, 26);
INSERT INTO src VALUES /* (29, 1) */ 
SELECT dictGet('dict', ('ip6', 'ip4'), arrayJoin([2,1]));
INSERT INTO t_async_insert FORMAT JSONCompactEachRowWithNamesAndTypes 
SELECT count(*) FROM source WHERE toYear(dt) <= 2023;
CREATE TABLE test_01193_18429.table_8_173 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_10_656 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT date_trunc('month', toDateTime('2020-01-01 20:11:22', 'Europe/London'), 'Asia/Tokyo');
select v, variantElement(v, 'Int16') from format(TSV, 'v Variant(String, Int16, Int64)', '\\N\nstring\n-1\n0\n10000000000\n42d42') format TSV;
DROP TABLE IF EXISTS stripe_log_02184;
CREATE DATABASE IF NOT EXISTS test_syvx3owd 
drop table if exists dist_monitor_split_batch_on_failure;
CREATE DATABASE IF NOT EXISTS test_8bb5aah4 
SELECT sum(n * 2) + sum(2 * n) + sum(n / 2) + sum(1 / n) FROM (SELECT number n FROM numbers(10));
SELECT max(id) FROM bloom_filter WHERE hasToken(s, 'abc');
CREATE DATABASE IF NOT EXISTS test_l3ejbh23 
SELECT uniqThetaNot(NULL, NULL);
select * from file('data.jsonl') order by x;
CREATE TABLE test_01193_18429.table_4_320 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select [0, 0, 0, 0, 15, 0, 0, 0, 11, 0, 0, 5, 1, 1, 0, 2, 3, 0, 0, 0] = multiSearchAllPositionsCaseInsensitiveUTF8(materialize('ÃÂÃÂÃÂ°ÃÂ·ÃÂÃÂÃÂ³ÃÂ ÃÂÃÂÃÂ¸ÃÂ²ÃÂÃÂ»ÃÂ±ÃÂ¼ÃÂÃÂ¾ÃÂµÃÂ±ÃÂÃÂÃÂÃÂ'), ['ÃÂ¦ÃÂÃÂÃÂÃÂÃÂ', 'ÃÂµÃÂÃÂ¡ÃÂÃÂºÃÂ¤ÃÂÃÂÃÂÃÂ¹ÃÂÃÂÃÂ', 'ÃÂÃÂ¡ÃÂÃÂÃÂÃÂ±ÃÂµÃÂ ÃÂÃÂ±ÃÂ©ÃÂÃÂÃÂÃÂÃÂ¦ÃÂÃÂ¿', 'ÃÂ¥ÃÂ½ÃÂÃÂÃÂ§ÃÂ¶ÃÂÃÂ´ÃÂ·ÃÂ¤ÃÂÃÂ', 'ÃÂ±ÃÂ¼ÃÂ´ÃÂ¾ÃÂ', 'ÃÂ³ÃÂÃÂÃÂ´ÃÂ¹ÃÂÃÂ±ÃÂ¢ÃÂ¡ÃÂ¦ÃÂ©ÃÂ±ÃÂ¤ÃÂÃÂÃÂ¨ÃÂ·ÃÂÃÂÃÂ±ÃÂÃÂµÃÂ³ÃÂ°ÃÂÃÂ¼ÃÂÃÂÃÂ°ÃÂ¥ÃÂ°ÃÂ ÃÂ ', 'ÃÂÃÂÃÂ½ÃÂ ', 'ÃÂÃÂ¼ÃÂ¢ÃÂÃÂ¤ÃÂÃÂÃÂÃÂÃÂÃÂ³ÃÂÃÂÃÂÃÂÃÂ³', 'ÃÂ¸ÃÂ', 'ÃÂ£ÃÂÃÂÃÂÃÂÃÂÃÂ¢ÃÂ·ÃÂ¿ÃÂ£ÃÂ¥ÃÂÃÂ¾ÃÂÃÂÃÂÃÂµÃÂÃÂ¨', 'ÃÂ¼ÃÂ¹ÃÂ°ÃÂÃÂÃÂÃÂÃÂµÃÂ³ÃÂ¡ÃÂ¼ÃÂÃÂÃÂ°ÃÂ¡ÃÂ¢ÃÂÃÂ¡ÃÂÃÂ±ÃÂ§ÃÂÃÂÃÂÃÂ¾ÃÂÃÂÃÂÃÂ±ÃÂ¦ÃÂ', 'ÃÂÃÂ ÃÂ³ÃÂ ÃÂ¾ÃÂ¿', '', '', 'ÃÂµÃÂÃÂ¿ÃÂÃÂ©ÃÂ¿ÃÂ½ÃÂÃÂÃÂ¤ÃÂ¶ÃÂ©ÃÂ¥ÃÂÃÂÃÂ§ÃÂ°ÃÂÃÂÃÂ¢ÃÂÃÂ²ÃÂÃÂ¸ÃÂ¡ÃÂÃÂ©', 'ÃÂÃÂ°ÃÂ', 'ÃÂÃÂ', 'ÃÂ¤ÃÂ³ÃÂ´ÃÂÃÂÃÂ²ÃÂÃÂ©ÃÂÃÂÃÂµÃÂ½ÃÂ¾ÃÂ³ÃÂÃÂ¸ÃÂ', 'ÃÂÃÂÃÂ¶ÃÂ¨ÃÂ³ÃÂÃÂ¨ÃÂÃÂ©ÃÂ¿ÃÂÃÂÃÂÃÂ', 'ÃÂ§ÃÂ´ÃÂ ÃÂ©ÃÂÃÂ±ÃÂÃÂÃÂ·ÃÂÃÂºÃÂ»ÃÂ ÃÂ´ÃÂÃÂ¡ÃÂ¤ÃÂ£ÃÂÃÂÃÂ½']) from system.numbers limit 10;
CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_11;
CREATE TABLE t (`c` String) ENGINE = MergeTree ORDER BY c SETTINGS index_granularity = 46454, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.3358582556247711, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 4414, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 13781652, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 12171, primary_key_compress_block_size = 73385
SELECT 13, 3, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (13 < 13 AND 3 > 0 ? 13 : 0)), throwIf(last != (13 < 13 AND 3 > 0 ? least(13 - 1, 13 + 3 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 13, 3);
INSERT INTO decrypt_null VALUES 
INSERT INTO test_01193_18429.table_10_482 VALUES 
SELECT 'SELECT toInt16(-1) < N';
SELECT 'Dictionary sparse_hashed_dictionary_simple_key_hierarchy';
INSERT INTO test_m3a0ae8p.dst_02224 SETTINGS parallel_distributed_insert_select = 2, max_distributed_depth = 1 SELECT * FROM `test_m3a0ae8p`.`src_02224` SETTINGS parallel_distributed_insert_select = 2, max_distributed_depth = 1
CREATE TABLE test_01193_18429.table_5_583 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT roundBankers(mannWhitneyUTest('greater')(left, right).1, 16) as t_stat, roundBankers(mannWhitneyUTest('greater')(left, right).2, 16) as p_value FROM mann_whitney FORMAT TabSeparatedWithNames;
CREATE DATABASE IF NOT EXISTS test_byfzbi0j 
INSERT INTO test_01193_18429.table_8_625 VALUES 
INSERT INTO arrow_dicts VALUES 
SELECT pointInPolygon((2.5, 1.5), [(0., 0.), (7., 0.), (7., 3.), (0., 3.)], [(1., 1.), (2., 1.), (2., 2.), (1., 2.)], [(3., 1.), (4., 1.), (4., 2.), (3., 2.)], [(5., 1.), (6., 1.), (6., 2.), (5., 2.)]);
SELECT uniqUpTo(NULL, NULL);
SELECT 'Running test stateless/01701_clear_projection_and_part_remove.sql from pid=1726' 
SELECT * FROM test_nullable_02099
SELECT toUUIDOrNull(NULL);
WITH 'aes-256-ecb' AS mode, unhex('D1B43643E1D0E9390E39BA4EAE150851') AS ciphertext, 'test_key________________________' AS key SELECT mode, decrypt(mode, '[HIDDEN]')
CREATE TABLE no_length_delimiter_protobuf_00825 (`x` Int32, `str` String) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 20785, min_bytes_for_wide_part = 49122068, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 15885, prefer_fetch_merged_part_size_threshold = 6527140659, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 6334765706, index_granularity_bytes = 24501430, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 37489, primary_key_compress_block_size = 72450
select d1, a1, a2, a3, a4, a5, a6 from aliases_test;
CREATE TABLE t_src (`id` UInt32, `v` UInt32) ENGINE = MergeTree PARTITION BY id ORDER BY id SETTINGS index_granularity = 5492, min_bytes_for_wide_part = 208180410, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 19594, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 4034710663, index_granularity_bytes = 15219164, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 15003, primary_key_compress_block_size = 61474
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (23 < 75 AND 73 > 0 ? 23 : 0)), throwIf(last != (23 < 75 AND 73 > 0 ? least(75 - 1, 23 + 73 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(75) LIMIT 23, 73);
DROP DATABASE IF EXISTS test_13jjnapt 
SELECT toUnixTimestamp(x) as tt, (toDateTime('2019-04-07 01:00:00', 'Australia/Lord_Howe') + INTERVAL number * 600 SECOND) AS x, timezoneOffset(x) as res,(toDateTime(toString(x), 'UTC') - x ) AS calc FROM numbers(576) where res != calc;
INSERT INTO test_01193_18429.table_8_14 VALUES 
select 4 = indexOf(materialize([0, 1, 2, 3 as x]), materialize(x));
CREATE TABLE test_6174456163477D6163583E2533652F4A70766F55275E5E582F476329626678582667617176217667(x UInt8) Engine=Memory;
CREATE TABLE t_json_desc (`data` JSON) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 63223, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 10978, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 1790898, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 80088, primary_key_compress_block_size = 23343
INSERT INTO test_01193_18429.table_6_427 VALUES 
EXPLAIN QUERY TREE (SELECT sum(2 - float64) - sum(3 - float64) From test_table);
INSERT INTO test_01193_18429.table_8_586 VALUES 
SELECT * FROM (SELECT 1 AS x) AS t1 ALL RIGHT JOIN (SELECT materialize(2) AS x) AS t2 ON t1.x = t2.x;
CREATE TABLE test_264E60462B3F24216F572A2624226A2377612E6C405248382F767E516B76335D22553E592D2B6826(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_8hpot287 
INSERT INTO test_01193_18429.table_3_175 VALUES 
SELECT anyLast_respect_nulls(NULL);
DROP DATABASE IF EXISTS test_9ec27k6s 
CREATE TABLE test_01193_18429.table_7_867 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select count() from file_log settings stream_like_engine_allow_direct_select=1;
SELECT 'Window functions WINDOW';
SELECT 'Running test stateless/01686_rocksdb.sql from pid=1718' 
SYSTEM RELOAD DICTIONARY test_dictionary_load_factor;
CREATE DATABASE IF NOT EXISTS test_gq80882j 
INSERT INTO r6 SELECT 58 % 10 = 6 ? 58 - 1 : 58
SELECT 'Running test stateless/02730_dictionary_hashed_load_factor_element_count.sql from pid=1720' 
INSERT INTO r4 SELECT 59 % 10 = 4 ? 59 - 1 : 59
select (1 ? (toUInt16(0) as i) : toUInt16(1)) = i;
SELECT count() FROM datetime_date_table WHERE col_date_lc > '2020-03-04 10:20:45';
SELECT materialize(toUInt32(0)) AS x, toDecimal32(1, 0) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
SELECT fromDaysSinceYearZero(NULL), fromDaysSinceYearZero32(NULL);
CREATE TABLE test_01193_18429.table_6_600 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SYSTEM SYNC REPLICA indices_mutaions2
SELECT - -1 IN (2 - 1);
SELECT addDays(NULL, NULL);
SELECT c from optimize_sorting order by c;
select * from url('http://127.0.0.1:8123?query=select+12', 'RawBLOB');
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), N > toUInt8(1) as r FORMAT CSV;
SELECT '-- information_schema.tables';
INSERT INTO src_12 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 67
ALTER TABLE t_materialize_delete APPLY DELETED MASK;
CREATE TABLE test_5F2A383867222C5B286F7A313329266F70547362444B7C7429224841474345497367742329565963(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_4_772 VALUES 
CREATE TABLE test_7244206B4D4A5B2E66443239783C633572264965687479593D6045525C672A315223683D4E4A6137(x UInt8) Engine=Memory;
select portRFC('http://foobar.com/');
SELECT quantileDD(NULL, NULL, NULL);
DROP DATABASE IF EXISTS test_3qb86ocn 
SELECT subq_0.pkey as c_1_c1193_15 FROM t5 AS subq_0 WHERE sipHash128(0, subq_0.c18, bitShiftRight(case when false then (sipHash128(subq_0.pkey, subq_0.c18, 'S')) else '1' end, 0)) is not null;
INSERT INTO test_01193_18429.table_2_649 VALUES 
CREATE TABLE tab (`val` UInt8) ENGINE = MergeTree ORDER BY val SETTINGS index_granularity = 34820, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 20814, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 3296240, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 85207, primary_key_compress_block_size = 20695
DESCRIBE (SELECT count() OVER window_name FROM test_table WINDOW window_name AS (PARTITION BY id));
INSERT INTO test_01193_18429.table_7_735 VALUES 
CREATE QUOTA q7_01297 FOR INTERVAL 1 MINUTE MAX execution_time = ' 00k ';
INSERT INTO mt VALUES /* (-43, 1) */ 
INSERT INTO decimal (a, b, c) FORMAT TabSeparated 
DROP DATABASE IF EXISTS test_b1osvymw 
CREATE TABLE test_602970704F6340354D5E6F213B44476366536C7C2F2F6E306248276D505B5851433379524F6E654D(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_8_633 VALUES 
CREATE TABLE test_5E763E7B2320703D3025504F2B5573426A7E582A6A5A50633B704B7D434F73584D4447627E685972(x UInt8) Engine=Memory;
KILL QUERY WHERE query_id = 'test_00601_test_zcy47y70'
SELECT substring(name, 1, length(name) - 4), recompression_ttl_info.expression FROM system.parts WHERE table = 'recompression_table' and active = 1 and database = currentDatabase() ORDER BY name;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toISOYear(N, 'Asia/Istanbul') as r FORMAT CSV;
INSERT INTO r2 VALUES 
SELECT multiIf((number % 2) = 0, toInt16(1), (number % 3) = 0, toInt64(2), toUInt16(3)) FROM system.numbers LIMIT 10;
select a2, b2, a3, b3 from tab2 any left join tab3 on a2=a3 and a2 +1 = b3 + 0 or b2=b3 and a2 +1 = b3 + 0 ;
drop table if exists morton_numbers_2_02457;
DROP DATABASE IF EXISTS test_i7z4e5qs 
CREATE TABLE test_532A31475354765D612456742F3B552A497839363722287E76692A4B2A5B275845282C257C206347(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02476_fix_lambda_parsing.sh from pid=1722' 
alter table many_mutations delete where y = 454 * 2 settings mutations_sync = 0;
CREATE TABLE test_02480_table (`id` Int64) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 51915, min_bytes_for_wide_part = 364363843, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 22078, prefer_fetch_merged_part_size_threshold = 51999201, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 6844759056, index_granularity_bytes = 9072640, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 15305, primary_key_compress_block_size = 38420
EXPLAIN QUERY TREE (SELECT sum((uint64 AS m) + (1 AS n)) j from test_table where m > 0 and n > 0 having j > 0);
DROP TABLE IF EXISTS to_insert;
SELECT max(identity(`dummy` + 1)) OVER () AS `x` FROM `system`.`one` ORDER BY `x` ASC
WITH materialize(map('foo', 1, 'bar', 2)) AS m SELECT m.keys, m.values;
CREATE TABLE test_01193_18429.table_3_5 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
ALTER TABLE t_ttl_modify_column MODIFY COLUMN InsertionDateTime Date;
CREATE TABLE test_01193_18429.table_5_863 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT false and true;
SELECT 'Running test stateless/00982_low_cardinality_setting_in_mv.sql from pid=1722' 
INSERT INTO test_01193_18429.table_8_211 VALUES 
CREATE TABLE test_01193_18429.table_1_849 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select JSONArrayLength('[1,2,3]');
DROP DATABASE IF EXISTS test_e90l8mvh 
CREATE TABLE test_01193_18429.table_10_97 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT globalNotNullIn([NULL],[NULL]);
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toUInt8(1) <= N as r FORMAT CSV;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toStartOfMonth(N, 'Asia/Istanbul') as r FORMAT CSV;
CREATE TABLE test_5947664A4777676D4071402D546172496E595C25723B754D475A645C265C3C3C3D346E3075407E53(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_4_490 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 4294967295, 2147483647, 4294967295 = 2147483647, 4294967295 != 2147483647, 4294967295 < 2147483647, 4294967295 <= 2147483647, 4294967295 > 2147483647, 4294967295 >= 2147483647, 2147483647 = 4294967295, 2147483647 != 4294967295, 2147483647 < 4294967295, 2147483647 <= 4294967295, 2147483647 > 4294967295, 2147483647 >= 4294967295 , toUInt32(4294967295) = toUInt32(2147483647), toUInt32(4294967295) != toUInt32(2147483647), toUInt32(4294967295) < toUInt32(2147483647), toUInt32(4294967295) <= toUInt32(2147483647), toUInt32(4294967295) > toUInt32(2147483647), toUInt32(4294967295) >= toUInt32(2147483647), toUInt32(2147483647) = toUInt32(4294967295), toUInt32(2147483647) != toUInt32(4294967295), toUInt32(2147483647) < toUInt32(4294967295), toUInt32(2147483647) <= toUInt32(4294967295), toUInt32(2147483647) > toUInt32(4294967295), toUInt32(2147483647) >= toUInt32(4294967295) , toUInt32(4294967295) = toInt32(2147483647), toUInt32(4294967295) != toInt32(2147483647), toUInt32(4294967295) < toInt32(2147483647), toUInt32(4294967295) <= toInt32(2147483647), toUInt32(4294967295) > toInt32(2147483647), toUInt32(4294967295) >= toInt32(2147483647), toInt32(2147483647) = toUInt32(4294967295), toInt32(2147483647) != toUInt32(4294967295), toInt32(2147483647) < toUInt32(4294967295), toInt32(2147483647) <= toUInt32(4294967295), toInt32(2147483647) > toUInt32(4294967295), toInt32(2147483647) >= toUInt32(4294967295) , toUInt32(4294967295) = toUInt64(2147483647), toUInt32(4294967295) != toUInt64(2147483647), toUInt32(4294967295) < toUInt64(2147483647), toUInt32(4294967295) <= toUInt64(2147483647), toUInt32(4294967295) > toUInt64(2147483647), toUInt32(4294967295) >= toUInt64(2147483647), toUInt64(2147483647) = toUInt32(4294967295), toUInt64(2147483647) != toUInt32(4294967295), toUInt64(2147483647) < toUInt32(4294967295), toUInt64(2147483647) <= toUInt32(4294967295), toUInt64(2147483647) > toUInt32(4294967295), toUInt64(2147483647) >= toUInt32(4294967295) , toUInt32(4294967295) = toInt64(2147483647), toUInt32(4294967295) != toInt64(2147483647), toUInt32(4294967295) < toInt64(2147483647), toUInt32(4294967295) <= toInt64(2147483647), toUInt32(4294967295) > toInt64(2147483647), toUInt32(4294967295) >= toInt64(2147483647), toInt64(2147483647) = toUInt32(4294967295), toInt64(2147483647) != toUInt32(4294967295), toInt64(2147483647) < toUInt32(4294967295), toInt64(2147483647) <= toUInt32(4294967295), toInt64(2147483647) > toUInt32(4294967295), toInt64(2147483647) >= toUInt32(4294967295) , toUInt64(4294967295) = toUInt32(2147483647), toUInt64(4294967295) != toUInt32(2147483647), toUInt64(4294967295) < toUInt32(2147483647), toUInt64(4294967295) <= toUInt32(2147483647), toUInt64(4294967295) > toUInt32(2147483647), toUInt64(4294967295) >= toUInt32(2147483647), toUInt32(2147483647) = toUInt64(4294967295), toUInt32(2147483647) != toUInt64(4294967295), toUInt32(2147483647) < toUInt64(4294967295), toUInt32(2147483647) <= toUInt64(4294967295), toUInt32(2147483647) > toUInt64(4294967295), toUInt32(2147483647) >= toUInt64(4294967295) , toUInt64(4294967295) = toInt32(2147483647), toUInt64(4294967295) != toInt32(2147483647), toUInt64(4294967295) < toInt32(2147483647), toUInt64(4294967295) <= toInt32(2147483647), toUInt64(4294967295) > toInt32(2147483647), toUInt64(4294967295) >= toInt32(2147483647), toInt32(2147483647) = toUInt64(4294967295), toInt32(2147483647) != toUInt64(4294967295), toInt32(2147483647) < toUInt64(4294967295), toInt32(2147483647) <= toUInt64(4294967295), toInt32(2147483647) > toUInt64(4294967295), toInt32(2147483647) >= toUInt64(4294967295) , toUInt64(4294967295) = toUInt64(2147483647), toUInt64(4294967295) != toUInt64(2147483647), toUInt64(4294967295) < toUInt64(2147483647), toUInt64(4294967295) <= toUInt64(2147483647), toUInt64(4294967295) > toUInt64(2147483647), toUInt64(4294967295) >= toUInt64(2147483647), toUInt64(2147483647) = toUInt64(4294967295), toUInt64(2147483647) != toUInt64(4294967295), toUInt64(2147483647) < toUInt64(4294967295), toUInt64(2147483647) <= toUInt64(4294967295), toUInt64(2147483647) > toUInt64(4294967295), toUInt64(2147483647) >= toUInt64(4294967295) , toUInt64(4294967295) = toInt64(2147483647), toUInt64(4294967295) != toInt64(2147483647), toUInt64(4294967295) < toInt64(2147483647), toUInt64(4294967295) <= toInt64(2147483647), toUInt64(4294967295) > toInt64(2147483647), toUInt64(4294967295) >= toInt64(2147483647), toInt64(2147483647) = toUInt64(4294967295), toInt64(2147483647) != toUInt64(4294967295), toInt64(2147483647) < toUInt64(4294967295), toInt64(2147483647) <= toUInt64(4294967295), toInt64(2147483647) > toUInt64(4294967295), toInt64(2147483647) >= toUInt64(4294967295) , toInt64(4294967295) = toUInt32(2147483647), toInt64(4294967295) != toUInt32(2147483647), toInt64(4294967295) < toUInt32(2147483647), toInt64(4294967295) <= toUInt32(2147483647), toInt64(4294967295) > toUInt32(2147483647), toInt64(4294967295) >= toUInt32(2147483647), toUInt32(2147483647) = toInt64(4294967295), toUInt32(2147483647) != toInt64(4294967295), toUInt32(2147483647) < toInt64(4294967295), toUInt32(2147483647) <= toInt64(4294967295), toUInt32(2147483647) > toInt64(4294967295), toUInt32(2147483647) >= toInt64(4294967295) , toInt64(4294967295) = toInt32(2147483647), toInt64(4294967295) != toInt32(2147483647), toInt64(4294967295) < toInt32(2147483647), toInt64(4294967295) <= toInt32(2147483647), toInt64(4294967295) > toInt32(2147483647), toInt64(4294967295) >= toInt32(2147483647), toInt32(2147483647) = toInt64(4294967295), toInt32(2147483647) != toInt64(4294967295), toInt32(2147483647) < toInt64(4294967295), toInt32(2147483647) <= toInt64(4294967295), toInt32(2147483647) > toInt64(4294967295), toInt32(2147483647) >= toInt64(4294967295) , toInt64(4294967295) = toUInt64(2147483647), toInt64(4294967295) != toUInt64(2147483647), toInt64(4294967295) < toUInt64(2147483647), toInt64(4294967295) <= toUInt64(2147483647), toInt64(4294967295) > toUInt64(2147483647), toInt64(4294967295) >= toUInt64(2147483647), toUInt64(2147483647) = toInt64(4294967295), toUInt64(2147483647) != toInt64(4294967295), toUInt64(2147483647) < toInt64(4294967295), toUInt64(2147483647) <= toInt64(4294967295), toUInt64(2147483647) > toInt64(4294967295), toUInt64(2147483647) >= toInt64(4294967295) , toInt64(4294967295) = toInt64(2147483647), toInt64(4294967295) != toInt64(2147483647), toInt64(4294967295) < toInt64(2147483647), toInt64(4294967295) <= toInt64(2147483647), toInt64(4294967295) > toInt64(2147483647), toInt64(4294967295) >= toInt64(2147483647), toInt64(2147483647) = toInt64(4294967295), toInt64(2147483647) != toInt64(4294967295), toInt64(2147483647) < toInt64(4294967295), toInt64(2147483647) <= toInt64(4294967295), toInt64(2147483647) > toInt64(4294967295), toInt64(2147483647) >= toInt64(4294967295) 
alter table many_mutations delete where y = 338 * 2 settings mutations_sync = 0;
drop table if exists merge_distributed1;
SELECT k % 7 AS k2, finalizeAggregation(uniqMergeState(state)), uniqMerge(state) FROM (SELECT k, uniqState(x) AS state FROM (SELECT number % 11 AS k, intDiv(number, 7) AS x FROM system.numbers LIMIT 100) GROUP BY k) GROUP BY k2 ORDER BY k2;
SELECT 16 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'asn', tuple(IPv4StringToNum('255.255.0.0')))
CREATE TABLE test_02908_r3_280 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_280', 'r3') ORDER BY tuple()
CREATE TABLE test_207067406F5256794E39324D255E3D594B6E3E287578732A29315467343358564F422C39393E7576(x UInt8) Engine=Memory;
ALTER TABLE minmax_idx ADD INDEX idx3 u64 - i32 TYPE minmax GRANULARITY 10 AFTER idx1;
ALTER TABLE tbl UPDATE xi = a WHERE 1;
select a, count() from dist_t_different_dbs group by a, b order by a limit 5 offset 500;
SELECT 'arrays';
select initcap('CRC32IEEE is the best function');
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat64(1), toFloat64(2)] WHEN (number % 3) = 0 THEN [toInt16(2), toInt16(3)] ELSE [toInt32(3), toInt32(3)] END FROM system.numbers LIMIT 10;
SELECT count() FROM system.mutations WHERE database = 'test_mfmr17m6' AND table = 'kill_mutation' AND mutation_id = 'mutation_4.txt'
CREATE TABLE test_7C746077772572386E6B42207A6B514057565F207760582621493C28343747647470675E2878796F(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat64(1), toFloat64(2)] WHEN (number % 3) = 0 THEN [toInt8(2), toInt8(3)] ELSE [toFloat64(3), toFloat64(3)] END FROM system.numbers LIMIT 10;
SELECT s, parseDateTimeBestEffortOrNull(s, 'UTC') AS a, parseDateTimeBestEffortOrZero(s, 'UTC') AS b FROM ( SELECT arrayJoin([ '0', '0000', '2000-01-01 00:00:00', '2000-01-01 01:00:00', '02/01/17 010203 MSK', '02/01/17 010203 MSK+0100', '02/01/17 010203 UTC+0300', '02/01/17 010203Z', '02/01/1970 010203Z', '02/01/70 010203Z', '11 Feb 2018 06:40:50 +0300', '17 Apr 2000 2 1:2:3', '19700102 01:00:00', '1970010201:00:00', '19700102010203', '19700102010203Z', '1970/01/02 010203Z', '20 2000', '201', '20160101', '2016-01-01', '201601-01', '2016-01-01MSD', '2016-01-01 MSD', '201601-01 MSD', '2016-01-01UTC', '2016-01-01Z', '2017', '2017/01/00', '2017/01/00 MSD', '2017/01/00 MSD Jun', '2017/01/01', '201701 02 010203 UTC+0300', '2017-01-02 03:04:05', '2017-01-0203:04:05', '2017-01-02 03:04:05+0', '2017-01-02 03:04:05+00', '2017-01-02 03:04:05+0000', '2017-01-02 03:04:05 -0100', '2017-01-02 03:04:05+030', '2017-01-02 03:04:05+0300', '2017-01-02 03:04:05+1', '2017-01-02 03:04:05+300', '2017-01-02 03:04:05+900', '2017-01-02 03:04:05GMT', '2017-01-02 03:04:05 MSD', '2017-01-02 03:04:05 MSD Feb', '2017-01-02 03:04:05 MSD Jun', '2017-01-02 03:04:05 MSK', '2017-01-02T03:04:05', '2017-01-02T03:04:05+00', '2017-01-02T03:04:05 -0100', '2017-01-02T03:04:05-0100', '2017-01-02T03:04:05+0100', '2017-01-02T03:04:05Z', '2017-01 03:04:05 MSD Jun', '2017-01 03:04 MSD Jun', '2017/01/31', '2017/01/32', '2017-01 MSD Jun', '201701 MSD Jun', '2017 25 1:2:3', '2017 25 Apr 1:2:3', '2017 Apr 01 11:22:33', '2017 Apr 02 01/02/03 UTC+0300', '2017 Apr 02 010203 UTC+0300', '2017 Apr 02 01:2:3 UTC+0300', '2017 Apr 02 1:02:3', '2017 Apr 02 11:22:33', '2017 Apr 02 1:2:03', '2017 Apr 02 1:22:33', '2017 Apr 02 1:2:3', '2017 Apr 02 1:2:33', '2017 Apr 02 1:2:3 MSK', '2017 Apr 02 1:2:3 MSK 2017', '2017 Apr 02 1:2:3 MSK 2018', '2017 Apr 02 1:2:3 UTC+0000', '2017 Apr 02 1:2:3 UTC+0300', '2017 Apr 02 1:2:3 UTC+0400', '2017 Apr 2 1:2:3', '2017 Jan 02 010203 UTC+0300', '25 Apr 2017 01:02:03', '25 Apr 2017 1:2:3', '25 Jan 2017 1:2:3', '25 Jan 2017 1:2:3 MSK', '25 Jan 2017 1:2:3 PM', '25 Jan 2017 1:2:3Z', '25 Jan 2017 1:2:3 Z', '25 Jan 2017 1:2:3 Z +0300', '25 Jan 2017 1:2:3 Z+03:00', '25 Jan 2017 1:2:3 Z +0300 OM', '25 Jan 2017 1:2:3 Z +03:00 PM', '25 Jan 2017 1:2:3 Z +0300 PM', '25 Jan 2017 1:2:3 Z+03:00 PM', '25 Jan 2017 1:2:3 Z +03:30 PM', '25 Jan 2017 1:2:3Z Mo', '25 Jan 2017 1:2:3Z Mon', '25 Jan 2017 1:2:3Z Moo', '25 Jan 2017 1:2:3 Z PM', '25 Jan 2017 1:2:3Z PM', '25 Jan 2017 1:2:3 Z PM +03:00', 'Jun, 11 Feb 2018 06:40:50 +0300', 'Sun 11 Feb 2018 06:40:50 +0300', 'Sun, 11 Feb 2018 06:40:50 +0300' ]) AS s) FORMAT PrettySpaceNoEscapes;
INSERT INTO test_01193_18429.table_4_69 VALUES 
SELECT transform(toDecimal32(2, 1), [toDecimal32(2, 1)], [1]);
SELECT entropy([]);
SELECT dateDiff('month', toDate('2017-12-31'), toDate('2016-01-01'));
SELECT arrayMax(x) FROM test_aggregation;
DROP TABLE ip_trie_dictionary_decimal_source_table;
SELECT 'Running test stateless/00859_distinct_with_join.sql from pid=1718' 
INSERT INTO table_with_enum_column_for_tsv_insert FORMAT TabSeparatedRaw 
DROP DATABASE IF EXISTS test_7ydpeymo 
CREATE TABLE test_01193_18429.table_5_555 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_02908_r1_243 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_243', 'r1') ORDER BY tuple()
WITH arrayJoin(histogram(1)(sin(number-40))) AS res SELECT round(res.1, 2), round(res.2, 2), round(res.3, 2) from (select * from system.numbers limit 80);
CREATE TABLE test_01193_18429.table_6_810 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (92 < 69 AND 80 > 0 ? 92 : 0)), throwIf(last != (92 < 69 AND 80 > 0 ? least(69 - 1, 92 + 80 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(69) LIMIT 92, 80);
CREATE TEMPORARY TABLE test_01602b(y Float64, z String);
CREATE TABLE test_6A40213224695C633D716D4259577A3A74384C2B395E46586F73425E5C775E2226505D234D322C38(x UInt8) Engine=Memory;
insert into test_02841 select 2, repeat('aaaaa', 1000000), 99
SELECT * FROM ta FULL JOIN tb USING (x);
SELECT dictGetFloat64(concat('test_6ztqwvhd', '.dict2'), 'Tax', toUInt64(1), toDateTime('2019-05-29 00:00:00'))
SELECT 1 ;
DROP TABLE default;
ALTER TABLE test MODIFY COLUMN x Int8;
CREATE TABLE test_02908_r3_271 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_271', 'r3') ORDER BY tuple()
SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l FULL JOIN r_lc AS r USING (x) ORDER BY x, r.lc, l.lc;
CREATE TABLE test_01193_18429.table_4_687 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT t1.k, t1.s, t2.x FROM ( SELECT number AS k, 'a' AS s FROM numbers(2) GROUP BY number WITH TOTALS ORDER BY number) AS t1 ANY LEFT JOIN t2 AS t2 USING(k);
CREATE TABLE test_5C323C4C643B6A2C6D6C556F40665A6F565C6C3B63575A6F343024496E256D787C6D2A32503B2B7A(x UInt8) Engine=Memory;
SELECT * FROM truncate_test_merge_tree;
select 1 = isValidUTF8(toValidUTF8('\xDF\xBF')) from system.numbers limit 10;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (61 < 66 AND 109 > 0 ? 61 : 0)), throwIf(last != (61 < 66 AND 109 > 0 ? least(66 - 1, 61 + 109 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(66) LIMIT 61, 109);
select 'Used settings: prefer_localhost_replica=0,distributed_group_by_no_merge=2,distributed_push_down_limit=1';
SELECT finalizeAggregation(*) FROM (select initializeAggregation('sumMapState', [1, 2], [1, 2], [1, null]));
CREATE TABLE test_6A446D4E476D224978717320234222357B417D37235369314F37584352584B397A772D53606A7634(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_kaf8ajpc 
CREATE TABLE test_01193_18429.table_9_305 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT * FROM enum_nested_alter;
DROP TABLE IF EXISTS products_l;
SELECT 'Running test stateless/02122_parallel_formatting_TSKV.sh from pid=1718' 
DROP DATABASE IF EXISTS test_d2sqypj9 
SELECT throwIf((SELECT (count(), sum(n)) FROM merge(currentDatabase(), '') WHERE type=3) != (7 + 1, 28 + 8)) FORMAT Null;
CREATE TABLE test_526D2E2D7027782A597C576C7741214E4F73325341406E3B432C6A634F632A2C2159424E607B745D(x UInt8) Engine=Memory;
CREATE TABLE test_413F782A787C3430303D2D2A5B445B5157564153505642215C20763237736C6F2C7B7B24746C634E(x UInt8) Engine=Memory;
SELECT x, y FROM remote('127.0.0.2', currentDatabase(), t4) ORDER BY x;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (53 < 79 AND 71 > 0 ? 53 : 0)), throwIf(last != (53 < 79 AND 71 > 0 ? least(79 - 1, 53 + 71 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(79) LIMIT 53, 71);
CREATE INDEX idx_tab3_0 ON tab3 (col3 DESC,col1 DESC);
alter table mt_compact drop column n.y;
CREATE TABLE test_01193_18429.table_1_479 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT (k = 3) OR ( (k = 1) OR (k = 2) OR ( (NULL OR 1) = k ) ) FROM ( SELECT materialize(1) AS k );
SELECT 'Running test stateless/02680_datetime64_monotonic_check.sql from pid=1718' 
INSERT INTO tmp (*) VALUES 
drop table if exists shard_1.from_0;
CREATE TABLE t_logical_expressions_optimizer_low_cardinality (a LowCardinality(String), b UInt32) ENGINE = Memory;
INSERT INTO test_01193_18429.table_7_383 VALUES 
INSERT INTO replicated_collapsing_merge_tree VALUES 
DROP TABLE IF EXISTS constraint_on_nullable_type;
CREATE TABLE test_01193_18429.table_4_790 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT dictHas('01685_database_for_cache_dictionary.cache_dictionary_complex_key_simple_attributes', (number, concat('id_key_', toString(number)))) FROM system.numbers LIMIT 4;
SELECT toDecimalString(NULL, NULL);
INSERT INTO test_01193_18429.table_1_12 VALUES 
optimize table t50 final;
SELECT CAST('1234567891234.1' AS Decimal(10, 5));
SELECT * FROM memory_01069.file ORDER BY n;
CREATE TABLE test_467D7272306D62587D686C60794F6154623269292B3469386A763F7C5F4F764673664E38697B6470(x UInt8) Engine=Memory;
SELECT arrayLast(x -> 1, emptyArrayUInt8());
CREATE DATABASE IF NOT EXISTS test_ta9e9hec 
SELECT pointInPolygon((4, 4), poly) FROM polygons ORDER BY id;
DROP DATABASE IF EXISTS test_x8r0lefm 
CREATE TABLE test_41495F5736342358534E5560342B5A2F77436179304E7A3D465167617250747A79436A4E2C312468(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01291_unsupported_conversion_from_decimal.sql from pid=1724' 
drop table if exists data_order_by_proj_incomp;
SELECT count(*) FROM source WHERE toYear(ts) >= 2023;
SELECT hex(murmurHash3_128('foo', 'foo'));
SELECT reinterpret(257, 'UInt8'), reinterpretAsUInt8(257);
ALTER TABLE concurrent_alter_column ADD COLUMN c69 DOUBLE;
SELECT 'Running test stateless/01256_misspell_layout_name_podshumok.sql from pid=1724' 
CREATE TABLE test_647D59323F31793B672042543A24762E6A6D2A6551773F577139673739317D324968546820362144(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt16(1) WHEN (number % 3) = 0 THEN toFloat64(2) ELSE toUInt8(3) END FROM system.numbers LIMIT 10;
SELECT parseDateTimeBestEffortOrZero('2020-05-14 12:37:03 AM', 3, 'UTC') AS a, toTypeName(a);
INSERT INTO test_01193_18429.table_2_659 VALUES 
DROP DATABASE IF EXISTS test_piw8e8fv 
SELECT 'Running test stateless/02356_insert_query_log_metrics.sql from pid=1715' 
SELECT subtractYears(date, 1), subtractYears(date_time, 1) FROM VALUES('date Date, date_time DateTime', (toDate('2019-01-01'), toDateTime('2019-01-01 00:00:00')));
SELECT 'Running test stateless/00920_multiply_aggregate_states_constants.sql from pid=1713' 
SELECT '89' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ffff:ff80::')))
SELECT intDivOrZero(toDecimal256(4.4, 2), 2.2);
DROP DATABASE IF EXISTS test_keyn48t6 
SELECT sum(number) FROM (SELECT * FROM remote('127.0.0.2', system.numbers) LIMIT 5);
 DROP TABLE IF EXISTS test_2xqanglh.ddl_test_for_opentelemetry; 
drop table if exists t_avro_4
SELECT '2010-10-10'::DateTime('UTC') AS c;
INSERT INTO test_01193_18429.table_4_70 VALUES 
SELECT array_agg(-1);
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), N <= DT64 as r FORMAT CSV;
DROP DATABASE IF EXISTS test_s5axbddo 
SELECT a, toTypeName(x = 2), toTypeName(x) FROM test_prewhere_column_type where (x = 2) AS y;
INSERT INTO test_01193_18429.table_8_854 VALUES 
INSERT INTO parquet_types6 FORMAT Parquet
INSERT INTO test_01193_18429.table_2_131 VALUES 
CREATE TABLE test_477C46307D6B277C644C7D4F4E7E3038626239495F25695A413E7254762E345951524F587A507E28(x UInt8) Engine=Memory;
INSERT INTO 01053_db.keys_table SELECT 11 + intHash64(number) % 1200 FROM system.numbers LIMIT 370, 370;
SELECT * FROM format ORDER BY s, x FORMAT JSONEachRow
INSERT INTO test_01193_18429.table_2_164 VALUES 
SELECT count() FROM binary_op_mono2 WHERE 1000 / i = 100;
CREATE TABLE test_5E2D53773E3D7E326E663E282C44764B404967284E477A47513661263D40523B693575725C7E387E(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_qomgr88n 
SELECT 'Running test stateless/02404_memory_bound_merging.sql from pid=1705' 
INSERT INTO test_01193_18429.table_5_261 VALUES 
CREATE TABLE test_01193_18429.table_6_859 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT extractURLParameter('http://com/?testq=aaa&q=111', 'q');
create table t(a Int64, b Int64, c String) engine = Memory;
SELECT 'Running test stateless/02783_date_predicate_optimizations.sql from pid=1720' 
CREATE TABLE test_01193_18429.table_2_559 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT * FROM 01766_db.hashed_dictionary_complex_key_simple_attributes ORDER BY (id, id_key);
DROP TABLE IF EXISTS bloom_filter_nullable_index;
INSERT INTO distributed SELECT number FROM numbers(256) WHERE number % 2 = 1;
CREATE TABLE test_757D585F2D2C5F2A68306924307C4D4578585C2B3D45263F204E33747E345827502D5D3F41232037(x UInt8) Engine=Memory;
DROP TABLE dst_8
CREATE TABLE test_block_mismatch_sk2 (`a` UInt32, `b` DateTime) ENGINE = ReplacingMergeTree PARTITION BY toYYYYMM(b) PRIMARY KEY a ORDER BY (a, toDate(b)) SETTINGS index_granularity = 50965, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.16602949798107147, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 5229, prefer_fetch_merged_part_size_threshold = 318570174, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 7032476, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 12499, primary_key_compress_block_size = 86644
SELECT 'MySQL alias';
SELECT 'Running test stateless/00712_prewhere_with_alias_bug_2.sql from pid=1722' 
SELECT mortonEncode(NULL);
SELECT COLUMNS('product.*') from ColumnsClauseTest ORDER BY product_price;
INSERT INTO test_01543 FORMAT Avro
SELECT 'Running test stateless/01632_tinylog_read_write.sh from pid=1714' 
SELECT CASE WHEN 1 THEN ['foo', col3] WHEN 1 THEN [col4, col5] ELSE ['foo', 'bar'] END FROM multi_if_check;
select 3 = countEqual(materialize([0 as x, 1, x, x]), x) from system.numbers limit 10;
select count(ignore(*)) from data_02051 settings min_bytes_to_use_direct_io=1, local_filesystem_read_method='io_uring', local_filesystem_read_prefetch=1, read_priority=0, max_read_buffer_size=1048576 ;
DROP TABLE IF EXISTS test_parallel_replicas_automatic_count_right_side
INSERT INTO replicated_mutation_table SELECT toDate('2019-10-02'), number, 'Hello' FROM numbers(10)
SELECT 'Running test stateless/01083_window_view_select.sh from pid=1715' 
SELECT any(if(if(x, 1, 2) AS a_, a_, 0)) FROM (SELECT 1 AS x);
SELECT dictGetInt32('01053_db.ssd_dict', 'b', toUInt64(1));
INSERT INTO test_01193_18429.table_1_58 VALUES 
INSERT INTO test_01193_18429.table_9_395 VALUES 
INSERT INTO test_01193_18429.table_8_325 VALUES 
SELECT range(number % 3) FROM numbers(12);
DROP DICTIONARY 01760_db.example_complex_key_dictionary;
INSERT INTO test_01193_18429.table_4_634 VALUES 
CREATE DATABASE IF NOT EXISTS test_wgbt8y9w 
INSERT INTO 02535_custom_key VALUES 
DROP TABLE test3;
SET optimize_arithmetic_operations_in_aggregate_functions = 0;
INSERT INTO r6 SELECT 72
EXPLAIN SYNTAX SELECT [1, 2, 3] :: Array(Int32);
DROP TABLE nl;
DROP TABLE IF EXISTS table_float;
CREATE TABLE test_01193_18429.table_10_968 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SHOW CREATE TABLE r_prop_table1;
SELECT CASE WHEN (col1 % 2) = 0 THEN ['foo', col3] WHEN 1 THEN ['foo', 'bar'] ELSE [col6, col7] END FROM multi_if_check;
SELECT multiIf((number % 2) = 0, [toUInt8(1), toUInt8(2)], (number % 3) = 0, [toInt64(2), toInt64(3)], [toUInt8(3), toUInt8(3)]) FROM system.numbers LIMIT 10;
select * from file(concat(currentDatabase(), '/test4/data.1.Parquet.gz'), 'Parquet', 'number UInt64');
DROP TABLE IF EXISTS alter_table_1
SELECT count(*), sum(_part_offset), sum(order_0) from t_1 prewhere granule == 0 where _part_offset >= 100000;
select * from mt_compact order by a, s limit 10;
CREATE TABLE test_662C38425945512E49316D626225325039422E573134333C6A563A7B4F63735F69407E75596E212A(x UInt8) Engine=Memory;
select count() from system.mutations where database = currentDatabase() and table = 'per_table_ttl_02265';
SELECT toInt64(0) AS x, toUInt8(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
CREATE TABLE test_3963685A4C4C2A4C795A5D4F655D7951346C6D7C5E7B50516B235426557E6443723C3F3F596C7159(x UInt8) Engine=Memory;
select 'test detach';
CREATE TABLE test_01193_18429.table_7_775 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO src_5 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 3
insert into test select number, NULL from numbers(200000);
select 5 = positionUTF8('ÃÂ°ÃÂ±ÃÂ²ÃÂ°ÃÂ±ÃÂ²', materialize('ÃÂ±'), 3) from system.numbers limit 10;
SELECT hex(toString(uniqStateForEachState([1, NULL])));
select x, min(x) over w, max(x) over w, count(x) over w from ( select toInt8(multiIf( mod(number, 3) == 0, toInt64(intDiv(number, 3)), mod(number, 3) == 1, toInt64(127 - intDiv(number, 3)), toInt64(-128 + intDiv(number, 3)))) x from numbers(15) ) window w as (order by x range between 1 preceding and 2 following) order by x;
SELECT toString((SELECT date FROM Dates), number % 2 ? 'America/Los_Angeles' : 'Europe/Amsterdam') FROM numbers(5);
SELECT col1, col2, ifNull(col1,col2) FROM test1_00395 ORDER BY col1,col2 ASC;
CREATE TABLE info (`key` Int32, `value` Int32) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 21849, min_bytes_for_wide_part = 590448484, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 33, merge_max_block_size = 12702, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 6426092712, index_granularity_bytes = 14296488, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 27685, primary_key_compress_block_size = 25601
CREATE TABLE test_01193_18429.table_7_299 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
ALTER TABLE replica2 DETACH PART 'all_1_1_0';
DROP DATABASE IF EXISTS test_szwnquae 
CREATE TABLE test_567A3A7D7B4B66662C3F2D6F75554B6769367148776B50267A36204835664731313945442F584946(x UInt8) Engine=Memory;
CREATE TABLE test_02908_r3_174 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_174', 'r3') ORDER BY tuple()
SELECT '-- minus operator';
SELECT multiIf((number % 2) = 0, toInt8(1), (number % 3) = 0, toInt8(2), toUInt32(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_5_429 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_6_787 VALUES 
CREATE TABLE test_4B3B213B7A3D314B2250752B4F50375B727D742D3C7C5D25673F317866754C6C64402452434D282A(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_gdis77og 
select 'dictGetOrDefault', 'cache_ints' as dict_name, toUInt64(0) as k, dictGetOrDefault(dict_name, 'i8', k, toInt8(42)), dictGetOrDefault(dict_name, 'i16', k, toInt16(42)), dictGetOrDefault(dict_name, 'i32', k, toInt32(42)), dictGetOrDefault(dict_name, 'i64', k, toInt64(42)), dictGetOrDefault(dict_name, 'u8', k, toUInt8(42)), dictGetOrDefault(dict_name, 'u16', k, toUInt16(42)), dictGetOrDefault(dict_name, 'u32', k, toUInt32(42)), dictGetOrDefault(dict_name, 'u64', k, toUInt64(42)), dictGetOrDefault(dict_name, ('i8', 'i16', 'i32'), k, (toInt8(42), toInt16(42), toInt32(42)));
create temporary table data (id UInt64) engine=Memory() as with [ 0, 1, 0x7f, 0x80, 0xff, 0x7fff, 0x8000, 0xffff, 0x7fffffff, 0x80000000, 0xffffffff, 0x7fffffffffffffff, 0x8000000000000000, 0xffffffffffffffff ] as values select arrayJoin(values) id;
CREATE TABLE test_694D706B213C554B692D752C4F54352B415029226A3A332954405A20337D55563E652D736D634153(x UInt8) Engine=Memory;
INSERT INTO src_13 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 27
SELECT * FROM fuzzJSON(02918_json_fuzzer, json_str='{"schedule":[{"breakfast":"7am"}, {"lunch":"12pm"}]}', random_seed=123456, reuse_output=0, max_output_length=128) LIMIT 20;
CREATE TABLE test_6C3D6A5B6A7437276B4745206F7C44273D44556C216549422E7D6B71637D542A4270743D5B563D7C(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS tableMergeTree_00968;
select makeDateTime64(1984, 1, 1, -1, 3, 4, 5, 9, 'UTC');
SELECT count(1), uniqExact(1) FROM ( SELECT k FROM (SELECT 1 as k FROM numbers(1)) nums JOIN (SELECT toNullable(1) AS k, number n FROM numbers(100000)) j USING k);
CREATE DATABASE IF NOT EXISTS test_mz554opv 
CREATE TABLE test_01193_18429.table_2_198 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'Running test stateless/02974_analyzer_array_join_subcolumn.sql from pid=1726' 
SELECT 'Running test stateless/02099_sql_user_defined_functions_lambda.sql from pid=1705' 
INSERT INTO dst_6 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 75
DROP DATABASE IF EXISTS test_s4294wnz 
select [0] = multiSearchAllPositions(materialize('abcd'), ['cdef']);
SELECT k, sum(v) AS s FROM group_by_pk_lc_uint256 GROUP BY k ORDER BY k ASC LIMIT 1024 SETTINGS optimize_aggregation_in_order = 1;
SELECT 'Running test stateless/00354_host_command_line_option.sh from pid=1724' 
CREATE TABLE test_53303B7C66473B45527A23332D3C2A40235029383C355A254E28766E6B742938743C3B62356A3324(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt32(1), toUInt32(2)] WHEN (number % 3) = 0 THEN [toInt16(2), toInt16(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
SELECT count() FROM t_cnf_fuzz WHERE (c8 AND c9 AND c3 AND (NOT c4) AND c2) OR (c5 AND (NOT c4) AND (NOT c4) AND (NOT c9) AND (NOT c4)) OR (c8) OR (c2 AND (NOT c6) AND c6 AND c8) OR (c8 AND c1) OR (c7 AND c8) SETTINGS convert_query_to_cnf = 1
SELECT multiIf((number % 2) = 0, [toInt16(1), toInt16(2)], (number % 3) = 0, [toUInt16(2), toUInt16(3)], [toInt64(3), toInt64(3)]) FROM system.numbers LIMIT 10;
SELECT NULL = (_CAST(0, 'Nullable(UInt64)') AS `_subquery813`), toYYYYMM(min(`A`)) FROM `test_36fdzvvr`.`xp`
INSERT INTO test_02908_r1_52 SELECT rand64() FROM numbers(5);
DROP TABLE IF EXISTS alter_table
SELECT * FROM arrow_types1 FORMAT Arrow
SELECT encodeXMLComponent('');
alter table many_mutations delete where y = 79 * 2 settings mutations_sync = 0;
SELECT 'Running test stateless/02144_avg_ubsan.sql from pid=1720' 
CREATE TABLE test_01193_18429.table_9_760 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT sumWithOverflow(1) FROM (SELECT * FROM system.numbers LIMIT 1000);
select 0 = multiSearchFirstIndexUTF8(materialize('ÃÂ¾ÃÂ²ÃÂÃÂÃÂÃÂ½ÃÂÃÂÃÂ°ÃÂ¹ÃÂ¾ÃÂ¼ÃÂÃÂ¹ÃÂ¹ÃÂ¹ÃÂ¾ÃÂÃÂ¹ÃÂÃÂÃÂÃÂÃÂ ÃÂ ÃÂ¸ÃÂÃÂÃÂÃÂ±'), ['ÃÂ¶ÃÂ¶ÃÂÃÂ´ÃÂ´ÃÂÃÂ¿ÃÂ½ÃÂµÃÂ ÃÂ¹ÃÂ', 'ÃÂÃÂ·ÃÂ±ÃÂ²ÃÂÃÂ¾ÃÂ¾ÃÂ¸ÃÂ½ÃÂ¿ÃÂ°ÃÂ ÃÂ ÃÂµÃÂÃÂ¹ÃÂºÃÂ¿ÃÂºÃÂ¾ÃÂÃÂ¶ÃÂ¼ÃÂÃÂ·ÃÂ³ÃÂ ÃÂµ', 'ÃÂÃÂÃÂÃÂ½ÃÂ½ÃÂ¸ÃÂ»ÃÂÃÂ»ÃÂÃÂ¶ÃÂ³ÃÂÃÂÃÂ¹ÃÂÃÂ¿ÃÂ ÃÂ°ÃÂ±ÃÂºÃÂµÃÂ ÃÂ°ÃÂ ÃÂ·ÃÂ·ÃÂ½ÃÂÃÂÃÂµÃÂ¼ÃÂ°ÃÂ³ÃÂ´ÃÂ¹ÃÂÃÂ¿ÃÂÃÂ', 'ÃÂ¿ÃÂÃÂÃÂÃÂ³ÃÂ½ÃÂºÃÂ°ÃÂ·ÃÂµÃÂ¿ÃÂ', 'ÃÂ³ÃÂ´ÃÂ´ÃÂ ÃÂÃÂ¿ÃÂ»ÃÂ²ÃÂ´', 'ÃÂÃÂÃÂÃÂÃÂ¸', 'ÃÂ±ÃÂ¹ÃÂÃÂÃÂ°ÃÂ ÃÂµÃÂ´ÃÂÃÂÃÂºÃÂ ÃÂ¸ÃÂµÃÂ²ÃÂºÃÂµÃÂÃÂ½ÃÂ', 'ÃÂ¹ÃÂÃÂ¶ÃÂÃÂ¶ÃÂÃÂ¿ÃÂ ÃÂ»ÃÂ¹ÃÂ¹ÃÂ ÃÂ°ÃÂÃÂ·ÃÂ ÃÂ½ÃÂÃÂ¾ÃÂ', 'ÃÂÃÂÃÂ¼ÃÂÃÂ¶ÃÂ»ÃÂÃÂ´ÃÂÃÂ¾ÃÂÃÂ¸ÃÂÃÂ·ÃÂÃÂ²ÃÂÃÂ±ÃÂ¾', 'ÃÂºÃÂÃÂÃÂµÃÂ²ÃÂ±ÃÂ¾ÃÂÃÂ¹ÃÂ±', 'ÃÂÃÂ³ÃÂ°ÃÂ°ÃÂ¿ÃÂ·ÃÂºÃÂ½', 'ÃÂ¾ÃÂÃÂ¹ÃÂ¼ÃÂÃÂ¾ÃÂ²ÃÂÃÂÃÂ¾ÃÂ·ÃÂÃÂ¹ÃÂ¹ÃÂ¸ÃÂ·ÃÂ¼', 'ÃÂÃÂºÃÂ¼ÃÂ°ÃÂ°ÃÂ', 'ÃÂ±ÃÂºÃÂ·ÃÂÃÂÃÂ´ÃÂ¾ÃÂ½ÃÂÃÂ³ÃÂÃÂÃÂ½ÃÂÃÂÃÂ°ÃÂ³ÃÂ»ÃÂ¿ÃÂÃÂÃÂÃÂ±ÃÂ ÃÂ±ÃÂÃÂ¾ÃÂº', 'ÃÂ¶ÃÂ»ÃÂ¼ÃÂ¸ÃÂÃÂ»ÃÂ¹ÃÂ½ÃÂ¹ÃÂÃÂ¶ÃÂ±ÃÂ³ÃÂÃÂµÃÂ¹ÃÂ±ÃÂÃÂ¸ÃÂµÃÂ·ÃÂÃÂ´ÃÂ¼ÃÂÃÂÃÂ°ÃÂÃÂ¸ÃÂ¾ÃÂ½ÃÂ¶ÃÂ³ÃÂ¼ÃÂ·ÃÂ¿', 'ÃÂ½ÃÂ±ÃÂ¸ÃÂÃÂ¸ÃÂ¶ÃÂ½ÃÂ»ÃÂ¿ÃÂ¼ÃÂÃÂ¼ÃÂ¾ÃÂÃÂ»ÃÂ ÃÂÃÂ ÃÂ²ÃÂµÃÂ¸ÃÂ±ÃÂÃÂÃÂ»ÃÂºÃÂ¹ÃÂºÃÂ½ÃÂ´ÃÂ»ÃÂÃÂ¿ÃÂ±ÃÂ´']) from system.numbers limit 10;
ALTER TABLE mt_00763_1 MODIFY column s UInt32;
drop table if exists ttl;
CREATE TABLE test_30266A2D3928392223402D424E2D2B215054312F412D65522F7C4569324F6568277C332F5A7E4C79(x UInt8) Engine=Memory;
CREATE TABLE test_757D4D765D622A556B2B626C262B427C78427B4A46484B26412876466C7E6576346D21724C6A2826(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_5_253 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT *, _row_exists FROM test_apply_deleted_mask SETTINGS apply_deleted_mask = 0;
DROP TABLE IF EXISTS recompression_table;
SELECT 'serialized state is not used', sequenceMatch('(?1)(?2)')(time, number_ = 1, number_ = 0) AS seq FROM ( SELECT number AS time, number % 2 AS number_ FROM numbers_mt(100) );
SELECT '18446744073709551615', '104.000000000', 18446744073709551615 = 104.000000000, 18446744073709551615 != 104.000000000, 18446744073709551615 < 104.000000000, 18446744073709551615 <= 104.000000000, 18446744073709551615 > 104.000000000, 18446744073709551615 >= 104.000000000, 104.000000000 = 18446744073709551615, 104.000000000 != 18446744073709551615, 104.000000000 < 18446744073709551615, 104.000000000 <= 18446744073709551615, 104.000000000 > 18446744073709551615, 104.000000000 >= 18446744073709551615 , toUInt64(18446744073709551615) = 104.000000000, toUInt64(18446744073709551615) != 104.000000000, toUInt64(18446744073709551615) < 104.000000000, toUInt64(18446744073709551615) <= 104.000000000, toUInt64(18446744073709551615) > 104.000000000, toUInt64(18446744073709551615) >= 104.000000000, 104.000000000 = toUInt64(18446744073709551615), 104.000000000 != toUInt64(18446744073709551615), 104.000000000 < toUInt64(18446744073709551615), 104.000000000 <= toUInt64(18446744073709551615), 104.000000000 > toUInt64(18446744073709551615), 104.000000000 >= toUInt64(18446744073709551615) ;
SELECT '0.021378001462867';
select [1] = multiSearchAllPositions(materialize('abc'), ['abc']);
SHOW CREATE DATABASE test_lux3pxa2
SELECT toStartOfQuarter(toDateTime(1412106600), 'Asia/Istanbul');
SELECT bitmaskToArray(7);
SELECT count() = 2 FROM t1 CROSS JOIN t2 WHERE t1.x = t2.x;
CREATE TABLE test_45396A25574223263E7A20294D27505A762253622E506172703C53725531555D317347406C752B20(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_10_624 VALUES 
select '-------addMinutes---------';
CREATE TABLE table1__fuzz_19 (`id` LowCardinality(UInt16), `v` DateTime64(3, 'UTC')) ENGINE = ReplacingMergeTree(v) PARTITION BY id % 200 ORDER BY id SETTINGS index_granularity = 3536, min_bytes_for_wide_part = 997999905, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 61, merge_max_block_size = 19800, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 69, min_merge_bytes_to_use_direct_io = 6261476371, index_granularity_bytes = 1690926, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 71708, primary_key_compress_block_size = 76017
SELECT 1, sleep(0.0119448)
CREATE TABLE test_01193_18429.table_10_895 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT count() FROM t HAVING count() > 0;
CREATE TABLE test (`id` UInt64, `v` Variant(String, UInt64, LowCardinality(String), Tuple(a UInt32, b UInt32), Array(UInt64))) ENGINE = MergeTree ORDER BY id SETTINGS min_rows_for_wide_part = 100000000, min_bytes_for_wide_part = 1000000000, index_granularity = 47499, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 13143, prefer_fetch_merged_part_size_threshold = 1546666022, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 2271417, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 63245, primary_key_compress_block_size = 67660
SELECT byteSize([], []);
DROP DATABASE IF EXISTS test_ouy9kg26 
INSERT INTO enum (y) VALUES 
SELECT 'hello is ipv4 string: ', isIPv4String('hello');
INSERT INTO dst SELECT * FROM src;
CREATE TABLE test_01193_18429.table_7_463 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
RENAME TABLE table_for_renames8 TO table_for_renames9
CREATE TABLE test_table_join_1 ( id UInt64, value String, value_join_1 String ) ENGINE=TinyLog;
INSERT INTO test_02908_r1_222 SELECT rand64() FROM numbers(5);
SELECT '-- non-const UInt*';
SELECT entropy([NULL],[NULL]);
INSERT INTO m VALUES 
select 11 <= all (select number from numbers(11));
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (10 < 32 AND 45 > 0 ? 10 : 0)), throwIf(last != (10 < 32 AND 45 > 0 ? least(32 - 1, 10 + 45 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(32) LIMIT 10, 45);
SELECT t1.id, t1.value, t2.id, t2.value, t3.id, t3.value FROM test_table_join_1 AS t1 FULL JOIN test_table_join_2 AS t2 ON t1.id = t2.id AND t1.value == 'Join_1_Value_0' LEFT JOIN test_table_join_3 AS t3 ON t2.id = t3.id AND t2.value == 'Join_2_Value_0';
CREATE DICTIONARY 01720_dictionary_db.dictionary ( key UInt64, value String ) PRIMARY KEY key SOURCE(CLICKHOUSE(DB '01720_dictionary_db' TABLE 'dictionary_source_table' HOST hostName() PORT tcpPort())) LIFETIME(0) LAYOUT(FLAT());
CREATE TABLE test_01193_18429.table_2_577 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select 0 = sequenceCount('(?4)')(time, data = 0, data = 1, data = 2, data = 3) from sequence_test;
SELECT toTypeName(arraySort(arrayIntersect([1, 2, 3]::Array(UInt256), [2, 3, 4]::Array(UInt128))));
DROP DATABASE IF EXISTS test_6ztqwvhd 
SELECT 'Running test stateless/02028_system_data_skipping_indices_size.sql from pid=1715' 
INSERT INTO test_01193_18429.table_6_74 VALUES 
CREATE TABLE test_666D374C342760402F2A5D5D2130212C50737542692744317C635F29787C6E787777644F6F663121(x UInt8) Engine=Memory;
DELETE FROM t_missed_subcolumns WHERE obj.k1.k3 = 'fee';
SELECT multiIf((number % 2) = 0, [toInt16(1), toInt16(2)], (number % 3) = 0, [toInt16(2), toInt16(3)], [toUInt16(3), toUInt16(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_3_573 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_1_149 VALUES 
CREATE TABLE test_7126465354507C3E764D4A426C514F596F605A334F372E324E573425317D3828577D442963287E5A(x UInt8) Engine=Memory;
CREATE TABLE test_5C532A522C41362D452857603633426037552B5D4F635C337B3A28697D535E604D3B295F65614152(x UInt8) Engine=Memory;
select 1 = multiSearchAny(materialize('abc'), ['abc']);
CREATE TABLE mt ON CLUSTER test_shard_localhost (`a` Int32, `timestamp` DateTime) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 44927, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 96, merge_max_block_size = 8811, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 522773, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 17999236, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 48146, primary_key_compress_block_size = 71967
INSERT INTO test_01193_18429.table_10_757 VALUES 
CREATE TABLE test_7B7A3A607D44652140442F47325163605674516B42376F6D7C25603631482061696D6274445F614C(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_9_469 VALUES 
INSERT INTO test_01193_18429.table_3_123 VALUES 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (48 < 27 AND 102 > 0 ? 48 : 0)), throwIf(last != (48 < 27 AND 102 > 0 ? least(27 - 1, 48 + 102 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(27) LIMIT 48, 102);
SELECT count() FROM system.opentelemetry_span_log WHERE finish_date >= yesterday() AND lower(hex(trace_id)) = '3a3f7230820347e19aa0d1238a7e377c' AND kind = 'SERVER' ;
SELECT 'Running test stateless/02801_transform_nullable.sql from pid=1713' 
CREATE TEMPORARY TABLE test_temporary_table_02989 (`id` UInt64, `value` String) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 47207, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 83, merge_max_block_size = 4352, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 4212837, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 81539, primary_key_compress_block_size = 22104
CREATE TABLE test_01193_18429.table_9_111 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DATABASE IF NOT EXISTS test_5htjxeom 
CREATE TABLE test_01193_18429.table_3_986 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT toDateTime64('2011-11-11 11:11:11.1', 0);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (67 < 15 AND 0 > 0 ? 67 : 0)), throwIf(last != (67 < 15 AND 0 > 0 ? least(15 - 1, 67 + 0 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(15) LIMIT 67, 0);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (13 < 30 AND 18 > 0 ? 13 : 0)), throwIf(last != (13 < 30 AND 18 > 0 ? least(30 - 1, 13 + 18 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(30) LIMIT 13, 18);
SELECT argMin(NULL);
SELECT tuple([NULL]);
select * from file(02482_data.capnp, auto, '`nested.x` Array(Int64), `nested.y` Array(Int64)') settings format_schema='test_02482/02482_list_of_structs.capnp:Nested'
OPTIMIZE TABLE t_sparse_full FINAL;
SELECT groupArrayLast(NULL, NULL);
SELECT medianTiming(t), medianTimingWeighted(t, w) FROM (SELECT number AS t, number = 77 ? 0 : 0 AS w FROM system.numbers LIMIT 100);
DROP TABLE pipe_01019;
select count() from test_log
INSERT INTO test_01193_18429.table_7_372 VALUES 
SELECT 12 AS n GROUP BY n WITH ROLLUP;
SELECT count() FROM null_in_1 WHERE u IN (1, 2, NULL);
DROP DATABASE IF EXISTS test_cyw3ipah 
optimize table test final;
SELECT 'Running test stateless/02967_parallel_replicas_join_algo_and_analyzer.sh from pid=1724' 
CREATE TABLE test_56752543284255463728615D464C742B5B6E3750552C273938347C62765F32585D2B716651787B79(x UInt8) Engine=Memory;
DROP TABLE optimize_final;
DROP DATABASE IF EXISTS test_dsk4s61f 
SELECT transform(number, [3, 5, 7], ['hello', 'world', 'abc'], materialize('')) FROM system.numbers LIMIT 10;
ALTER TABLE concurrent_alter_column DROP COLUMN f 
CREATE TABLE test_2762706D73594A337D41355E332559703D7C61522E77553E71542D4143287B7B2323353E333A6341(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_8_101 VALUES 
CREATE TABLE test_2B73517E53703E35664A2F3A374D4963212738666B236E3C217953316B44794A30537B5C213B6962(x UInt8) Engine=Memory;
SELECT type, serialization_kind FROM system.parts_columns WHERE database = currentDatabase() AND table = 't_sparse_mutations_4' AND column = 'v' AND active ORDER BY name;
SELECT 'Running test stateless/01822_union_and_constans_error.sql from pid=1715' 
SELECT 'Running test stateless/00116_storage_set.sql from pid=1714' 
select 1 intersect select count() from (select 1 except select 2 intersect select 2 union all select 1);
select length(currentUser()) > 0;
drop table replacing_m3;
DROP TABLE IF EXISTS check_system_tables_null;
SELECT nothingNullArrayIf([NULL], 0) AS x FROM remote('127.0.0.{1,2}', numbers(3));
desc format(CSV, '"{\'key1\' : [[\'2020-01-01 00:00:00\']], \'key2\' : [[\'2020-01-01\']]}"\n"{\'key1\' : [[\'2020-01-01\']], \'key2\' : [[\'Some string\']]}"');
CREATE TEMPORARY TABLE t7 AS SELECT quantileResampleState(0.10, 1, 2, 42)(number, number) FROM numbers(100);
SYSTEM STOP REPLICATION QUEUES checksums_r2;
SELECT t1.id, test_table_join_1.id, t1.value, test_table_join_1.value, t2.id, test_table_join_2.id, t2.value, test_table_join_2.value, t3.id, test_table_join_3.id, t3.value, test_table_join_3.value FROM test_table_join_1 AS t1 RIGHT JOIN test_table_join_2 AS t2 ON test_table_join_1.id = test_table_join_2.id LEFT JOIN test_table_join_3 AS t3 ON test_table_join_2.id = test_table_join_3.id;
SELECT arrayAvg(NULL, NULL, NULL);
CREATE TABLE B (`k` UInt32, `t` Decimal128(5), `b` Float64) ENGINE = MergeTree ORDER BY (k, t) SETTINGS index_granularity = 57643, min_bytes_for_wide_part = 636221231, ratio_of_defaults_for_sparse_serialization = 0.34237709641456604, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 6784, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 2424484770, index_granularity_bytes = 8067457, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 32242, primary_key_compress_block_size = 12095
SELECT 70 = 10 * sum(t1.id) + sum(t2.id) AND count() == 4 FROM t1 JOIN t2 ON 1 = 1;
SELECT toUnixTimestamp(toString(toDateTime(1426415400), 'Europe/London'), 'Europe/London');
CREATE TABLE test_01193_18429.table_10_178 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT multiIf((number % 2) = 0, [toFloat64(1), toFloat64(2)], (number % 3) = 0, [toFloat64(2), toFloat64(3)], [toFloat32(3), toFloat32(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE no_prop_table ( some_column UInt64 ) ENGINE MergeTree() ORDER BY tuple();
SELECT count() FROM t_cnf_fuzz WHERE (c2 AND c1 AND (NOT c2) AND c3 AND (NOT c3)) OR (c2 AND c3 AND (NOT c0) AND c4 AND c2) OR (c3 AND (NOT c9) AND (NOT c3)) SETTINGS convert_query_to_cnf = 0
create table s(a Int64, b Int64, c String) engine = Memory;
CREATE TABLE test_5148612E5855353B76413A5E326667507E303867753240267A4D7A4D232C443530426A28406E5B6D(x UInt8) Engine=Memory;
DROP TABLE long_insert
select substringIndex('www.clickhouse.com', '.', materialize(-4));
SELECT 'x, y FROM 02763_a_merge';
DROP DATABASE IF EXISTS test_9s336cfv 
SELECT 'Running test stateless/00260_like_and_curly_braces.sql from pid=1714' 
DROP DATABASE IF EXISTS test_ajfaws73 
CREATE TABLE codecs4 (a UInt8 CODEC(LZ4, LZ4)) ENGINE = MergeTree ORDER BY tuple();
DROP DATABASE IF EXISTS test_n8xgcsuf 
CREATE TABLE test_01193_18429.table_5_784 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Running test stateless/02165_insert_from_infile.sql from pid=1724' 
SELECT trim(LEADING 'a' arg_1 FROM 'abca' arg_2), arg_1, arg_2;
INSERT INTO test_01193_18429.table_1_797 VALUES 
CREATE TABLE test_7B7638343B5A642F324C626639285A712259327E382F612A59473C484A6A7937733C746C77536439(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS collate_test1;
SELECT * FROM url('http://127.0.0.1:8123?query=select+12', 'RawBLOB', headers('X-ClickHouse-Database' = '[HIDDEN]'))
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 18441, 500 settings ignore_materialized_views_with_dropped_target_table=1
INSERT INTO test_01193_18429.table_6_705 VALUES 
DROP TABLE IF EXISTS codecs9;
CREATE TABLE test_01193_18429.table_4_922 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_4626765027714E3C705C7D796320415F4132536B5A507E58536F556D7D6C347132263366293D767B(x UInt8) Engine=Memory;
 select s, y from (select sum(x) as s, y from ( select number as x, number + 1 as y from numbers(10)) group by y ) where y != 0 order by s, y settings enable_optimize_predicate_expression=0
CREATE TABLE test_01193_18429.table_7_417 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT column, type, column_position FROM system.parts_columns WHERE database = currentDatabase() AND table = 'test';
CREATE TABLE test_424239736D3D28232B66546D756A357924512A7A6A4A5820496E6E22524448493C3341303E4A217D(x UInt8) Engine=Memory;
SELECT multiIf((number % 2) = 0, toUInt32(1), (number % 3) = 0, toInt16(2), toUInt8(3)) FROM system.numbers LIMIT 10;
set output_format_orc_compression_method = 'none';
CREATE TABLE test_4D5C75426B346A4E407A225A77734F57425F4C375A6E2630246D4B3D675A703F5B3D5E543A7E3428(x UInt8) Engine=Memory;
SELECT 4294967296, -9223372036854775808, 4294967296 = -9223372036854775808, 4294967296 != -9223372036854775808, 4294967296 < -9223372036854775808, 4294967296 <= -9223372036854775808, 4294967296 > -9223372036854775808, 4294967296 >= -9223372036854775808, -9223372036854775808 = 4294967296, -9223372036854775808 != 4294967296, -9223372036854775808 < 4294967296, -9223372036854775808 <= 4294967296, -9223372036854775808 > 4294967296, -9223372036854775808 >= 4294967296 , toUInt64(4294967296) = toInt64(-9223372036854775808), toUInt64(4294967296) != toInt64(-9223372036854775808), toUInt64(4294967296) < toInt64(-9223372036854775808), toUInt64(4294967296) <= toInt64(-9223372036854775808), toUInt64(4294967296) > toInt64(-9223372036854775808), toUInt64(4294967296) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toUInt64(4294967296), toInt64(-9223372036854775808) != toUInt64(4294967296), toInt64(-9223372036854775808) < toUInt64(4294967296), toInt64(-9223372036854775808) <= toUInt64(4294967296), toInt64(-9223372036854775808) > toUInt64(4294967296), toInt64(-9223372036854775808) >= toUInt64(4294967296) , toInt64(4294967296) = toInt64(-9223372036854775808), toInt64(4294967296) != toInt64(-9223372036854775808), toInt64(4294967296) < toInt64(-9223372036854775808), toInt64(4294967296) <= toInt64(-9223372036854775808), toInt64(4294967296) > toInt64(-9223372036854775808), toInt64(4294967296) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toInt64(4294967296), toInt64(-9223372036854775808) != toInt64(4294967296), toInt64(-9223372036854775808) < toInt64(4294967296), toInt64(-9223372036854775808) <= toInt64(4294967296), toInt64(-9223372036854775808) > toInt64(4294967296), toInt64(-9223372036854775808) >= toInt64(4294967296) 
SELECT * FROM nested_table
select * from format(JSONEachRow, '{"x" : [123, "str"]}');
CREATE DATABASE IF NOT EXISTS test_erpojy9w 
CREATE TABLE test_3777243C7D7E25473D7E5A243665267A4479592131392458294D66742273792F2F682F323C744744(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00980_skip_unused_shards_without_sharding_key.sql from pid=1713' 
INSERT INTO test_01193_18429.table_3_531 VALUES 
CREATE TABLE t_from (`id` UInt64, `value` Object('json')) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 847, min_bytes_for_wide_part = 689129609, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 17904, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 7994825886, index_granularity_bytes = 25514085, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 55005, primary_key_compress_block_size = 47591
SELECT DATE_FORMAT(toDateTime('2018-01-02 00:33:44'), '%p'), DATE_FORMAT(toDate32('2018-01-02'), '%p');
INSERT INTO test_01193_18429.table_4_68 VALUES 
SELECT JSONExtractFloat('[1]', toNullable(1));
SELECT 'Test unsigned integer values';
SELECT toIntervalDay(5) AS interval, toDateTime('2017-01-01 00:00:00') + interval AS res;
INSERT INTO table_with_some_columns SELECT rand(), number + 10 from numbers(100000);
CREATE TABLE test_01193_18429.table_4_424 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_02908_r3_75 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_75', 'r3') ORDER BY tuple()
DROP DATABASE IF EXISTS test_jrum0uua 
CREATE TABLE test_01193_18429.table_1_696 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select parseDateTimeInJodaSyntaxOrNull('2001 invalid 366 2000', 'yyyy D yyyy', 'UTC') IS NULL;
CREATE TABLE test_5C434C724A7A68674276433B4D2F677B48763938704E29564E7656776C637861644F5F6B7B32782F(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_2cjy7mr7 
select 'concurrent_delete_before'
CREATE TABLE test_01193_18429.table_7_453 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'B';
SELECT toDecimal64('123456789.123456789', 9) AS x, -x AS y, round(x), round(y), round(x, 5), round(y, 5), round(x, -5), round(y, -5);
CREATE TABLE test_01193_18429.table_8_868 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO src_2 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 31
CREATE DATABASE IF NOT EXISTS test_1l3vjbeu 
SELECT format('The {0} to all questions is {1}.', 'answer', materialize('bar' :: Nullable(FixedString(3))));
CREATE TABLE test_444C74312E637E7D606C612E22512E6174794632505B35613E45423A567E4F275A77467E3F294953(x UInt8) Engine=Memory;
SELECT dictGetOrDefault('direct_dictionary', 'array_value', toUInt64(1), [2,3,4]);
SELECT multiIf((number % 2) = 0, [toInt32(1), toInt32(2)], (number % 3) = 0, [toUInt32(2), toUInt32(3)], [toFloat64(3), toFloat64(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_2_986 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT toTypeName(randomFixedString(10));
SELECT 1, 'a', [1, 2, 3], (1, 'a'), null, nan FORMAT JSONStrings;
select 0 = isValidUTF8('\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xF0\x80\x80\x80') from system.numbers limit 10;
insert into test select number == 3 ? 'some value' : null from numbers(5);
SELECT 'Running test stateless/01926_order_by_desc_limit.sql from pid=1713' 
CREATE TABLE test_01193_18429.table_10_469 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT sum(length(arr)) FROM (SELECT range(number % 10) AS arr FROM (SELECT * FROM system.numbers LIMIT 1000) WHERE length(arr) % 2 = 0);
SELECT categoricalInformationValue(dummy, dummy);
CREATE DATABASE IF NOT EXISTS test_735npjuj 
SELECT topK(10)(n) FROM (SELECT if(number % 100 < 10, number % 10, number) AS n FROM system.numbers LIMIT 100000);
select hex(sipHash64Keyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50)));
WITH '2020-02-05 14:34:12.333' as S, toDateTime64(S, 3) as DT64 SELECT * WHERE S = DT64;
SELECT toUInt64(0) AS x, toUInt32(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
CREATE TABLE test_61714842287E34264B51695E6F3B2D23282253254C777B63454A25424F5E5A206C255F29665E7E30(x UInt8) Engine=Memory;
select groupArrayLast(3)([number+1]) state from remote('127.{1,1}', view(select * from numbers(10)));
drop table if exists z_00725_3;
insert into enums (e, sign, letter) values 
SELECT 'HashedArray dictionary';
CREATE TABLE test_01193_18429.table_10_278 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT reinterpretAsUInt16(-1);
select makeDate(0xffffffffffffffff+2010,1,4);
SELECT toUInt32(1) AS x, [[1, 2, 3], [4, 5], []] as a FORMAT RowBinaryWithNamesAndTypes
SELECT 't1 ALL FULL JOIN USING t2 | bs = 1';
SELECT sipHash128Reference('');
CREATE TABLE test_01193_18429.table_10_156 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_4_593 VALUES 
SELECT 'Running test stateless/00290_shard_aggregation_memory_efficient.sql from pid=1726' 
SELECT 'Running test stateless/02220_array_join_format.sql from pid=1722' 
CREATE TABLE test_334A45516A3371777A235B2D357E583E525B256369304331657324433A325A7D4B3143343F613D34(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_0r5l4tmj 
CREATE TABLE test_5B2C6F6439505B543E4E682F4B2B607C48235B785D623F4B5B4927756760267B634677237C78227E(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_2_277 VALUES 
drop table tbl_8parts_3granules_seq;
CREATE DATABASE IF NOT EXISTS test_2e2dfqnu 
CREATE DATABASE IF NOT EXISTS test_kq8i1am1 
SELECT s, replaceAll(s, '_', 'o') AS a, replaceRegexpAll(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['_._', '._']) AS s);
explain ast create function double AS (n) -> 2*n;
INSERT INTO src VALUES /* (10, 3) */ 
CREATE TABLE test_01193_18429.table_1_484 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_0ilpmtsi 
set max_bytes_before_external_group_by = '2G', max_threads = 16, aggregation_memory_efficient_merge_threads = 16, distributed_aggregation_memory_efficient = 1, prefer_localhost_replica = 1, group_by_two_level_threshold = 100000, group_by_two_level_threshold_bytes = 1000000, max_block_size = 65505;
SELECT quantilesTDigest(0.95)(x) FROM (SELECT inf*(number%2-0.5) x FROM numbers(300));
INSERT INTO r7 SELECT 4 % 10 = 7 ? 4 - 1 : 4
INSERT INTO test_01193_18429.table_3_596 VALUES 
select toYear(x1) from t1;
SELECT * FROM ( EXPLAIN PLAN indexes = 1 SELECT * FROM tokenbf_tab WHERE match(str, '.*(ClickHouse|World)') ORDER BY id ) WHERE explain LIKE '%Granules: %' SETTINGS allow_experimental_analyzer = 1;
SELECT 'Running test stateless/02481_analyzer_optimize_grouping_sets_keys.sql from pid=1726' 
alter table many_mutations delete where y = 754 * 2 settings mutations_sync = 0;
SELECT multiIf((col1 % 2) = 0, toFixedString('foo', 16), (col1 % 3) = 0, toFixedString(col3, 16), col4) FROM multi_if_check;
with '2018-01-12 22:33:44' as s, toDateTime(s) as datetime, toDateTime64(s, 6) as datetime64, toDate(s) as date, toDate32(s) as date32 SELECT formatDateTimeInJodaSyntax(datetime, 'kkk'), formatDateTimeInJodaSyntax(datetime64, 'kkk'), formatDateTimeInJodaSyntax(date, 'kkk'), formatDateTimeInJodaSyntax(date32, 'kkk');
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (37 < 97 AND 26 > 0 ? 37 : 0)), throwIf(last != (37 < 97 AND 26 > 0 ? least(97 - 1, 37 + 26 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(97) LIMIT 37, 26);
CREATE TABLE test_01193_18429.table_9_879 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT toUInt8OrNull('');
SELECT arrayJoin(['hello', 'world']) LIKE '%o%';
SELECT sipHash64Keyed(NULL);
CREATE DATABASE IF NOT EXISTS test_h1qr4nqq 
DROP DATABASE IF EXISTS test_c39blzcg 
CREATE TABLE test_01193_18429.table_3_914 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_90d18zpg 
SELECT 'Running test stateless/00570_empty_array_is_const.sql from pid=1724' 
CREATE TABLE test_782B727A6C2C55475E363F40232E324F594747584062592C6B6C394E786C6626327439653327597E(x UInt8) Engine=Memory;
select hasAll([-128, 1.0, 512], [1.0, 513]);
SELECT `x` FROM `test_q0imjckn`.`test1`
SELECT 'ÃÂ¿ÃÂÃÂ¸ÃÂ²ÃÂµÃÂ' AS x, 'ÃÂ¼ÃÂ¸ÃÂ' AS y FORMAT Pretty;
DROP TABLE t_s3_events_02496;
DROP DATABASE IF EXISTS test_6lrgrhot 
INSERT INTO r2 SELECT 53
backup database test_ty7wh8tu on cluster test_shard_localhost to Disk('backups', '02907_backup_mv_with_no_source_table_test_ty7wh8tu2');
CREATE DATABASE IF NOT EXISTS test_5aa5aa9n 
CREATE TABLE test_01676.dict_data (`key` UInt64, `value` UInt64) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 3308, min_bytes_for_wide_part = 295818773, ratio_of_defaults_for_sparse_serialization = 0.962952196598053, replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 6353, prefer_fetch_merged_part_size_threshold = 3820627465, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 14, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 11721682, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 72547, primary_key_compress_block_size = 68316
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toFloat64(2) ELSE toFloat64(3) END FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/01475_mutation_with_if.sql from pid=1713' 
insert into test select number + 15, range(number + 1)::Array(UInt64) from numbers(3);
SELECT * FROM fuzzJSON(02918_json_fuzzer, random_seed=6667, max_nesting_level=0) LIMIT 10;
SELECT nb.t FROM na FULL JOIN nb USING (x);
SELECT 23 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'asn', tuple(IPv4StringToNum('255.255.254.0')))
EXPLAIN QUERY TREE SELECT value FROM ( SELECT tupleElement(value, 'a') AS value FROM test_table SETTINGS optimize_functions_to_subcolumns = 0 ) SETTINGS optimize_functions_to_subcolumns = 1;
select * from test_02312;
SELECT toUInt64(2147483648) AS x, b == x, x == ((b - 42) + x) FROM decimal WHERE a = 42;
CREATE TABLE test_4B4A77232327636949345B6F20746A444B516725673D5165376F643C444E2D3B572651545C235756(x UInt8) Engine=Memory;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (45 < 96 AND 69 > 0 ? 45 : 0)), throwIf(last != (45 < 96 AND 69 > 0 ? least(96 - 1, 45 + 69 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(96) LIMIT 45, 69);
SELECT id FROM test_bf_indexOf WHERE 0 <= indexOf(ary, 'value1') ORDER BY id FORMAT TSV;
CREATE TABLE test_2C2D4C565445486173613B293C3B262E655A4F56793C665471615F487051402671286F7529427069(x UInt8) Engine=Memory;
SELECT 'dt64 > const dt' FROM dt64test WHERE dt64_column > toDateTime('2020-01-13 13:37:00');
SELECT -.3_4e+21;
SELECT 32768, 9223372036854775808, 32768 = 9223372036854775808, 32768 != 9223372036854775808, 32768 < 9223372036854775808, 32768 <= 9223372036854775808, 32768 > 9223372036854775808, 32768 >= 9223372036854775808, 9223372036854775808 = 32768, 9223372036854775808 != 32768, 9223372036854775808 < 32768, 9223372036854775808 <= 32768, 9223372036854775808 > 32768, 9223372036854775808 >= 32768 , toUInt16(32768) = toUInt64(9223372036854775808), toUInt16(32768) != toUInt64(9223372036854775808), toUInt16(32768) < toUInt64(9223372036854775808), toUInt16(32768) <= toUInt64(9223372036854775808), toUInt16(32768) > toUInt64(9223372036854775808), toUInt16(32768) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toUInt16(32768), toUInt64(9223372036854775808) != toUInt16(32768), toUInt64(9223372036854775808) < toUInt16(32768), toUInt64(9223372036854775808) <= toUInt16(32768), toUInt64(9223372036854775808) > toUInt16(32768), toUInt64(9223372036854775808) >= toUInt16(32768) , toUInt32(32768) = toUInt64(9223372036854775808), toUInt32(32768) != toUInt64(9223372036854775808), toUInt32(32768) < toUInt64(9223372036854775808), toUInt32(32768) <= toUInt64(9223372036854775808), toUInt32(32768) > toUInt64(9223372036854775808), toUInt32(32768) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toUInt32(32768), toUInt64(9223372036854775808) != toUInt32(32768), toUInt64(9223372036854775808) < toUInt32(32768), toUInt64(9223372036854775808) <= toUInt32(32768), toUInt64(9223372036854775808) > toUInt32(32768), toUInt64(9223372036854775808) >= toUInt32(32768) , toInt32(32768) = toUInt64(9223372036854775808), toInt32(32768) != toUInt64(9223372036854775808), toInt32(32768) < toUInt64(9223372036854775808), toInt32(32768) <= toUInt64(9223372036854775808), toInt32(32768) > toUInt64(9223372036854775808), toInt32(32768) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toInt32(32768), toUInt64(9223372036854775808) != toInt32(32768), toUInt64(9223372036854775808) < toInt32(32768), toUInt64(9223372036854775808) <= toInt32(32768), toUInt64(9223372036854775808) > toInt32(32768), toUInt64(9223372036854775808) >= toInt32(32768) , toUInt64(32768) = toUInt64(9223372036854775808), toUInt64(32768) != toUInt64(9223372036854775808), toUInt64(32768) < toUInt64(9223372036854775808), toUInt64(32768) <= toUInt64(9223372036854775808), toUInt64(32768) > toUInt64(9223372036854775808), toUInt64(32768) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toUInt64(32768), toUInt64(9223372036854775808) != toUInt64(32768), toUInt64(9223372036854775808) < toUInt64(32768), toUInt64(9223372036854775808) <= toUInt64(32768), toUInt64(9223372036854775808) > toUInt64(32768), toUInt64(9223372036854775808) >= toUInt64(32768) , toInt64(32768) = toUInt64(9223372036854775808), toInt64(32768) != toUInt64(9223372036854775808), toInt64(32768) < toUInt64(9223372036854775808), toInt64(32768) <= toUInt64(9223372036854775808), toInt64(32768) > toUInt64(9223372036854775808), toInt64(32768) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toInt64(32768), toUInt64(9223372036854775808) != toInt64(32768), toUInt64(9223372036854775808) < toInt64(32768), toUInt64(9223372036854775808) <= toInt64(32768), toUInt64(9223372036854775808) > toInt64(32768), toUInt64(9223372036854775808) >= toInt64(32768) 
CREATE TABLE test_01193_18429.table_2_500 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE tab (`foo` Array(LowCardinality(String)), INDEX idx foo TYPE bloom_filter GRANULARITY 1) ENGINE = MergeTree PRIMARY KEY tuple() SETTINGS index_granularity = 42362, min_bytes_for_wide_part = 162428162, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 7024, prefer_fetch_merged_part_size_threshold = 3273300102, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 7131357509, index_granularity_bytes = 10387929, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 70401, primary_key_compress_block_size = 79864
SELECT 'Running test stateless/02889_parts_columns_filenames.sql from pid=1726' 
CREATE TABLE test_01193_18429.table_10_496 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_3_415 VALUES 
SELECT 'Running test stateless/00815_left_join_on_stepanel.sql from pid=1722' 
select parseDateTimeInJodaSyntax('0/', 's/', 'UTC') = toDateTime('1970-01-01 00:00:00', 'UTC');
CREATE INDEX idx_tab2_1 ON tab2 (col1 DESC,col4 DESC,col3,col0 DESC);
INSERT INTO test_01193_18429.table_8_176 VALUES 
INSERT INTO my_table (values) VALUES 
CREATE TABLE test_5C245849727A7C2F5335565B6454244730617C3E23782F62492D26683D617021646A326C41262431(x UInt8) Engine=Memory;
SELECT dateDiff('day', materialize(toDateTime64('1927-01-01 00:00:00', 3, 'UTC')), materialize(toDate32('1927-01-02', 'UTC')), 'UTC');
ALTER TABLE dst_15 DROP PARTITION 1
select 0 = multiSearchAnyCaseInsensitive(materialize('RIDPJWYYSGBFWyXikHofbTcZAnj'), ['aFxQyVe', 'OcnZBgPsA', 'iBQaH', 'oesSvsWtgQprSSIPaDHdW', 'EfytiMfW', 'qHiFjeUvQRm', 'LfQkfmhTMUfoTOmGJUnJpevIoPpfpzMuKKjv', 'scYbCYNzJhEMMg', 'yTLwClSbqklywqDiSKmEdyfU', 'HYlGFMM', 'TMQhjOMTImXbCv', 'AVtzpxurFkmpVkddQANedlyVlQsCXWcRjEr']) from system.numbers limit 10;
CREATE DATABASE IF NOT EXISTS test_gsf2sf2h 
select 1 = isValidUTF8(toValidUTF8('\x00\x7F')) from system.numbers limit 10;
SELECT toIntervalWeek(NULL, NULL, NULL);
CREATE TABLE test_2C3A254B335C5A714340503238382A544E2C473F6850276673715E73454A3046322E716143334E62(x UInt8) Engine=Memory;
SET input_format_allow_errors_num=1;
SELECT 'Nullable and LowCardinality';
SELECT IPv6CIDRToRange(IPv6StringToNum('2001:0db8:0000:85a3:0000:0000:ac1f:8001'), 0);
CREATE ROW POLICY 02703_filter_5 ON 02703_db.* USING y>=20 AS restrictive TO ALL;
CREATE TABLE test_01193_18429.table_10_185 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT COLUMNS('test') FROM (SELECT 1 AS id, 'a' AS test) a LEFT JOIN (SELECT 1 AS id, 'b' AS test) b ON b.id = a.id LEFT JOIN (SELECT 1 AS id, 'c' AS test) c ON c.id = a.id;
SELECT YYYYMMDDhhmmssToDateTime64(toDecimal64(23000101000000.1, 5));
 SELECT * FROM ( SELECT toString(number) AS user_id FROM system.numbers LIMIT 10000 OFFSET 20000 ) AS t1 LEFT JOIN ( SELECT * FROM join_block_test AS i1 ANY LEFT JOIN ( SELECT * FROM join_block_test ) AS i2 ON i1.id = toString(i2.num) ) AS t2 ON t1.user_id = t2.id 
EXPLAIN SYNTAX (SELECT (sum(float64) + 2 * count(float64)) - (sum(float64) + 3 * count(float64)) From test_table);
INSERT INTO test_01193_18429.table_9_321 VALUES 
DROP TABLE IF EXISTS 01914_db.table_2;
select uniqExact(_part), count() from tMM where d >= '2020-01-16 00:00:00' and d < toDateTime('2021-08-17 00:00:00', 'Asia/Istanbul');
CREATE DATABASE IF NOT EXISTS test_tr8i2bcn 
CREATE DATABASE IF NOT EXISTS test_pgc2s5rd 
select * from format(JSONEachRow, 'payload Array(String)', '{"payload" : null}') settings input_format_null_as_default=1;
SELECT splitByRegexp('', 'a12bc23de345f', -1);
DROP DATABASE IF EXISTS test_w9e6tg7v 
CREATE USER admin
SELECT 'flat: any left + any_join_distinct_right_table_keys';
CREATE TABLE test_3A212F346C63784869662D4D3C693049412833236B44744F4363355D706842596E6F3C263B204357(x UInt8) Engine=Memory;
DROP TABLE 02907_table;
SELECT 'Running test stateless/02340_parts_refcnt_mergetree.sh from pid=1726' 
INSERT INTO test_01193_18429.table_10_644 VALUES 
set max_rows_to_read = 2, optimize_use_projections = 1, optimize_use_implicit_projections = 1;
insert into dedup_test settings max_insert_block_size=110000, min_insert_block_size_rows=110000 format TSV 
ALTER TABLE clear_column CLEAR COLUMN num IN PARTITION '201611';
SELECT 'Running test stateless/02263_lazy_mark_load.sh from pid=1705' 
CREATE TABLE points_01862 (x Float64, y Float64) ENGINE = Memory;
SELECT '(forward, first_match, A)', id, sequenceNextNode('forward', 'first_match')(dt, action, 1, action = 'A') AS next_node FROM test_sequenceNextNode_Nullable GROUP BY id ORDER BY id;
SELECT second_column FROM test_8yvdjyfm.dict1 WHERE key_column = 11
INSERT INTO test_01193_18429.table_3_342 VALUES 
INSERT INTO src_1 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 45
SELECT sumIfArrayArray([[1, NULL]], [[1, 0]]) AS `x` FROM numbers(3)
CREATE PROFILE s2_01294 SETTINGS readonly readonly;
SELECT id, data.k1, data.k2, data.k3 FROM t_json_null ORDER BY id;
SELECT 'Running test stateless/01732_alters_bad_conversions.sql from pid=1720' 
select distinct sum(number) over w as x, max(number) over w as y from remote('127.0.0.{1,2}', '', t_01568) window w as (partition by p) order by x, y;
DROP TABLE IF EXISTS user_data
CREATE TABLE test_01193_18429.table_7_263 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT sum(a), sum(b) FROM t_ab1 LEFT JOIN t_ab2 USING (a, b);
select runningDifference(x) from (select arrayJoin([0, 1, 5, 10]) as x);
SELECT 1 AS `x` FROM `test_mpmi3jaz`.`nested` ARRAY JOIN `n`.`x`
DROP DATABASE IF EXISTS test_flvgmwru 
INSERT INTO size_hint SELECT arrayMap(x -> 'Hello', range(1000)) FROM numbers(10000);
INSERT INTO test_01193_18429.table_7_825 VALUES 
CREATE TABLE test_387067545B43656651393336676E292030656D5D3F6E4C75722C29504B225A61453E22264E245462(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_9_789 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select status, last_refresh_time, next_refresh_time from refreshes -- 64
DROP DATABASE IF EXISTS test_9t3ewgpr 
SELECT * APPLY (x -> toString(x)) FROM test_table;
CREATE TABLE test_4477723A322226405C6A3F455727577D4A5B522F343A504824593D70676228642620227A6C6E654D(x UInt8) Engine=Memory;
select [3, 2, 1, 1, 0, 0, 0, 14, 6, 0] = multiSearchAllPositionsUTF8(materialize('ÃÂ½ÃÂÃÂÃÂ½ÃÂ½ÃÂ¹ÃÂÃÂ¼ÃÂÃÂÃÂ±ÃÂÃÂÃÂ ÃÂ¾ÃÂ²ÃÂ²ÃÂÃÂÃÂ±ÃÂ´ÃÂµÃÂ¸ÃÂÃÂ¸ÃÂ¾ÃÂ ÃÂ»'), ['ÃÂÃÂ½ÃÂ½ÃÂ¹ÃÂ', 'ÃÂÃÂÃÂ½ÃÂ½ÃÂ¹ÃÂÃÂ¼', 'ÃÂ½', 'ÃÂ½ÃÂ', 'ÃÂ´ÃÂ²ÃÂÃÂÃÂ ÃÂ¹ÃÂ·ÃÂ³ÃÂµÃÂ¸ÃÂµÃÂ¸ÃÂ°ÃÂÃÂ¸ÃÂ¼ÃÂ±ÃÂÃÂ ÃÂ¼ÃÂÃÂÃÂÃÂÃÂÃÂ', 'ÃÂ¿ÃÂÃÂÃÂ¼ÃÂÃÂ¹ÃÂÃÂ·ÃÂÃÂÃÂÃÂ·ÃÂÃÂ³ÃÂ½ÃÂ ÃÂÃÂÃÂÃÂÃÂÃÂ¶ÃÂÃÂ»ÃÂ¿ÃÂ°ÃÂ²ÃÂ²ÃÂÃÂ³ÃÂ ÃÂ ÃÂ²', 'ÃÂ»ÃÂÃÂ¼ÃÂÃÂÃÂµ', 'ÃÂ ÃÂ¾ÃÂ²ÃÂ²ÃÂÃÂÃÂ±ÃÂ´', 'ÃÂ¹ÃÂÃÂ¼ÃÂÃÂÃÂ±ÃÂÃÂÃÂ ÃÂ¾ÃÂ²ÃÂ²ÃÂÃÂÃÂ±ÃÂ´ÃÂµÃÂ¸', 'ÃÂ³ÃÂ½ÃÂ´ÃÂÃÂÃÂÃÂÃÂÃÂÃÂ·ÃÂÃÂÃÂ¶ÃÂ¸ÃÂºÃÂÃÂ·ÃÂÃÂ¶ÃÂ±ÃÂ¸ÃÂ»']) from system.numbers limit 10;
SELECT 'Running test stateless/02313_multiple_limits.sql from pid=1724' 
SELECT arrayLast(x -> 1, [1, 2, 3]);
DROP TABLE destination_set;
CREATE TABLE test_byte_size_string (`key` Int32, `str1` String, `str2` String, `fstr1` FixedString(8), `fstr2` FixedString(8)) ENGINE = MergeTree ORDER BY key SETTINGS index_granularity = 37647, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.3201562762260437, replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 16569, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 170779, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 16965335, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 78674, primary_key_compress_block_size = 62953
SELECT avgWeighted(x, w) FROM values('x Int64, w UInt64', (0, 0), (1, 0));
select '<2: refreshed>', count(), sum(x=0), sum(x=1) from a
CREATE TABLE test_table (`id` UInt64, `value` String) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 47207, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 83, merge_max_block_size = 4352, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 4212837, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 81539, primary_key_compress_block_size = 22104
INSERT INTO collapsing_00155 (x) SELECT number AS x FROM system.numbers LIMIT 8191
CREATE DATABASE IF NOT EXISTS test_hzack974 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (33 < 75 AND 105 > 0 ? 33 : 0)), throwIf(last != (33 < 75 AND 105 > 0 ? least(75 - 1, 33 + 105 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(75) LIMIT 33, 105);
SELECT arrayJoin(['hello', 'world']) LIKE '%l%o%';
INSERT INTO buffer_00126 (a, c) VALUES 
CREATE DATABASE IF NOT EXISTS test_2tv1e41n 
INSERT INTO r1 SELECT 47
SELECT countDigits(toNullable(toDecimal32(4.2, 1))), countDigits(materialize(toNullable(toDecimal32(4.2, 2)))), countDigits(toNullable(toDecimal64(4.2, 3))), countDigits(materialize(toNullable(toDecimal64(4.2, 4)))), countDigits(toNullable(toDecimal128(4.2, 5))), countDigits(materialize(toNullable(toDecimal128(4.2, 6))));
DROP TABLE t_json_array;
CREATE DATABASE IF NOT EXISTS test_lywnzkb5 
CREATE DATABASE IF NOT EXISTS test_8vud8rmp 
SELECT CASE WHEN (number % 2) = 0 THEN toFloat32(1) WHEN (number % 3) = 0 THEN toFloat64(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
SELECT L2Distance(NULL, NULL);
SELECT * FROM ( SELECT countDistinct(dev_tag) AS total_devtags FROM ( SELECT dev_tag FROM ( SELECT * FROM tags ) AS t GROUP BY dev_tag ) AS t ) SETTINGS optimize_uniq_to_count=1;
INSERT INTO t_json_10 FORMAT JSONAsObject 
SELECT 'Running test stateless/02967_analyzer_fuzz.sql from pid=1722' 
CREATE TABLE sum_map(date Date, timeslot DateTime, statusMap Nested(status UInt16, requests UInt64)) ENGINE = Log;
/* we can now check that r1 waits for r2 */ SELECT table, type, new_part_name, num_postponed > 0 AS has_postpones, postpone_reason FROM system.replication_queue WHERE table LIKE 'execute\\_on\\_single\\_replica\\_r%' AND database = currentDatabase() ORDER BY table FORMAT Vertical;
CREATE TABLE test_01193_18429.table_9_817 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT addWeeks('2023-10-22', materialize(1)), addWeeks('2023-10-22 12:34:56.123', materialize(1));
SELECT toFloat64(999999999999.999999) as x, toDecimal128(x, 6), toDecimal128(-x, 6);
DROP TABLE minmax_idx1;
CREATE TABLE test_4037512657515E343F763941332A6622362767266C762B71717E51423C417B6A713C4A3929676843(x UInt8) Engine=Memory;
SELECT 'Const Offset';
SELECT dictGetString(concat('test_g0lvg7te', '.test_dict_01080'), 'dim_id', x) FROM (SELECT tuple(toInt64(materialize(0))) AS x)
SELECT farmFingerprint64([]);
DROP TABLE IF EXISTS test_inserts;
select toTypeName(materialize(js1.k)), toTypeName(materialize(js2.k)), toTypeName(materialize(js1.s)), toTypeName(materialize(js2.s)) from (select toLowCardinality(number) k, toLowCardinality(toString(number)) s from numbers(2)) as js1 join (select toLowCardinality(number+1) k, toLowCardinality(toString(number+1)) s from numbers(2)) as js2 using k order by js1.k, js2.k;
select toTypeName(res), if(NULL, [1,2,3], 'str_1'::Nullable(String)) as res;
CREATE TABLE test_02908_r2_129 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_129', 'r2') ORDER BY tuple()
alter table many_mutations delete where y = 321 * 2 settings mutations_sync = 0;
CREATE TABLE test_585F697533284566375C212A67456E5F694C6D3375633B35605C515E297C6F2C697D6B4122256F7D(x UInt8) Engine=Memory;
select date, value, version, sign from mult_tab;
DROP DATABASE IF EXISTS test_62relib9 
SELECT joinGet(test_joinGet, 'c', 'ab', '1');
DROP TABLE IF EXISTS uncomparable_keys;
CREATE DATABASE test_01392;
DROP DATABASE IF EXISTS test_g1ln1dmu 
INSERT INTO test_01193_18429.table_4_667 VALUES 
SELECT 'Running test stateless/00472_create_view_if_not_exists.sql from pid=1713' 
SELECT age('second', toDateTime('2015-08-18 00:00:00', 'UTC'), toDateTime64('2015-08-18 01:00:00', 3, 'UTC'));
DROP ROW POLICY 02131_filter_5 ON 02131_rqtable;
DROP DATABASE IF EXISTS test_bg3u8er6 
CREATE TABLE test_5763394771746162557C4A3A6C4F5A5864464834757A626371414932387D7A23652F2C6F662D6B24(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_9_478 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_2_427 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE DATABASE IF NOT EXISTS test_orlbfibw 
SELECT sipHash64Keyed();
select substringIndex('www.clickhouse.com', '.', materialize(2));
INSERT INTO mt2 VALUES 
DROP DATABASE IF EXISTS test_vlf8o729 
INSERT INTO bm VALUES 
CREATE QUOTA q3_01297 KEYED BY client_key, user_name FOR 0.5 YEAR ERRORS MAX 11, QUERIES MAX 100, FOR 2 MONTH RESULT ROWS MAX 1002;
SELECT simpleJSONExtractBool('{"myparam":true}', 'myparam');
INSERT INTO test_01193_18429.table_1_56 VALUES 
INSERT INTO test_01193_18429.table_5_89 VALUES 
DROP TABLE 02810_async_insert_dedup_collapsing
DROP FUNCTION 02148_test_function_nested;
CREATE ROW POLICY 02559_filter_1 ON test_02559 USING id2=2 AS permissive TO ALL;
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat64(1), toFloat64(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toUInt16(3), toUInt16(3)] END FROM system.numbers LIMIT 10;
SELECT * FROM (SELECT * FROM test_00597) ANY INNER JOIN (SELECT * FROM (SELECT * FROM test_00597)) as r USING id WHERE r.id = 1 SETTINGS allow_experimental_analyzer=1;
INSERT INTO test_01193_18429.table_8_982 VALUES 
CREATE DATABASE IF NOT EXISTS test_mqlp30m5 
EXPLAIN SYNTAX SELECT min(n + 1), min(1 + n), min(n - 1), min(1 - n) FROM (SELECT number n FROM numbers(10));
INSERT INTO test_01193_18429.table_1_701 VALUES 
SELECT countArray([NULL, NULL]) AS `x` FROM numbers(3)
CREATE TABLE insub (`i` int, `j` int) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 1, min_bytes_for_wide_part = 547215153, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 110, merge_max_block_size = 15209, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 2080939139, index_granularity_bytes = 11756899, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 30316, primary_key_compress_block_size = 72850
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c4)) OR ((NOT c5) AND (NOT c6) AND (NOT c4)) OR (c5 AND c9 AND (NOT c9) AND (NOT c1) AND c0) OR (c7 AND c8) OR ((NOT c9) AND (NOT c8) AND (NOT c3) AND (NOT c2)) OR ((NOT c9) AND (NOT c0) AND (NOT c1) AND c2) SETTINGS convert_query_to_cnf = 1
CREATE TABLE test_54372A374044402C715C7E4C46705370436456362F6B413A666C402A28702874693F626E20363A58(x UInt8) Engine=Memory;
select (toInt128(-1) * toInt64(1)) x, (toInt256(-1) * toInt64(1)) y, toTypeName(x), toTypeName(y);
SELECT JSONExtract( '{"x": [\n "", \n "undefined", \n "undef", \n "null", \n "NULL", \n "(null)", \n "nil", \n "NIL", \n "true", \n "false", \n "True", \n "False", \n "TRUE", \n "FALSE", \n "None", \n "hasOwnProperty", \n "then", \n "\\\\", \n "\\\\\\\\", \n "0", \n "1", \n "1.00", \n "$1.00", \n "1/2", \n "1E2", \n "1E02", \n "1E+02", \n "-1", \n "-1.00", \n "-$1.00", \n "-1/2", \n "-1E2", \n "-1E02", \n "-1E+02", \n "1/0", \n "0/0", \n "-2147483648/-1", \n "-9223372036854775808/-1", \n "-0", \n "-0.0", \n "+0", \n "+0.0", \n "0.00", \n "0..0", \n ".", \n "0.0.0", \n "0,00", \n "0,,0", \n ",", \n "0,0,0", \n "0.0/0", \n "1.0/0.0", \n "0.0/0.0", \n "1,0/0,0", \n "0,0/0,0", \n "--1", \n "-", \n "-.", \n "-,", \n "999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999", \n "NaN", \n "Infinity", \n "-Infinity", \n "INF", \n "1#INF", \n "-1#IND", \n "1#QNAN", \n "1#SNAN", \n "1#IND", \n "0x0", \n "0xffffffff", \n "0xffffffffffffffff", \n "0xabad1dea", \n "123456789012345678901234567890123456789", \n "1,000.00", \n "1 000.00", \n "1\'000.00", \n "1,000,000.00", \n "1 000 000.00", \n "1\'000\'000.00", \n "1.000,00", \n "1 000,00", \n "1\'000,00", \n "1.000.000,00", \n "1 000 000,00", \n "1\'000\'000,00", \n "01000", \n "08", \n "09", \n "2.2250738585072011e-308", \n ",./;\'[]\\\\-=", \n "<>?:\\"{}|_+", \n "!@#$%^&*()`~", \n "\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f", \n "ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ", \n "\\t\\u000b\\f ÃÂ ÃÂ Ã¡ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂ Ã¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂ¨Ã¢ÂÂ©Ã¢ÂÂ¯Ã¢ÂÂÃ£ÂÂ", \n "ÃÂ­ÃÂÃÂÃÂÃÂÃÂÃÂ ÃÂÃÂÃÂÃ¡Â ÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂªÃ¢ÂÂ«Ã¢ÂÂ¬Ã¢ÂÂ­Ã¢ÂÂ®Ã¢ÂÂ Ã¢ÂÂ¡Ã¢ÂÂ¢Ã¢ÂÂ£Ã¢ÂÂ¤Ã¢ÂÂ¦Ã¢ÂÂ§Ã¢ÂÂ¨Ã¢ÂÂ©Ã¢ÂÂªÃ¢ÂÂ«Ã¢ÂÂ¬Ã¢ÂÂ­Ã¢ÂÂ®Ã¢ÂÂ¯Ã¯Â»Â¿Ã¯Â¿Â¹Ã¯Â¿ÂºÃ¯Â¿Â»Ã°ÂÂÂ½Ã°ÂÂ²Â Ã°ÂÂ²Â¡Ã°ÂÂ²Â¢Ã°ÂÂ²Â£Ã°ÂÂ Â³Ã°ÂÂ Â´Ã°ÂÂ ÂµÃ°ÂÂ Â¶Ã°ÂÂ Â·Ã°ÂÂ Â¸Ã°ÂÂ Â¹Ã°ÂÂ ÂºÃ³Â ÂÂÃ³Â ÂÂ Ã³Â ÂÂ¡Ã³Â ÂÂ¢Ã³Â ÂÂ£Ã³Â ÂÂ¤Ã³Â ÂÂ¥Ã³Â ÂÂ¦Ã³Â ÂÂ§Ã³Â ÂÂ¨Ã³Â ÂÂ©Ã³Â ÂÂªÃ³Â ÂÂ«Ã³Â ÂÂ¬Ã³Â ÂÂ­Ã³Â ÂÂ®Ã³Â ÂÂ¯Ã³Â ÂÂ°Ã³Â ÂÂ±Ã³Â ÂÂ²Ã³Â ÂÂ³Ã³Â ÂÂ´Ã³Â ÂÂµÃ³Â ÂÂ¶Ã³Â ÂÂ·Ã³Â ÂÂ¸Ã³Â ÂÂ¹Ã³Â ÂÂºÃ³Â ÂÂ»Ã³Â ÂÂ¼Ã³Â ÂÂ½Ã³Â ÂÂ¾Ã³Â ÂÂ¿Ã³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂ Ã³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂÃ³Â ÂÂ Ã³Â ÂÂ¡Ã³Â ÂÂ¢Ã³Â ÂÂ£Ã³Â ÂÂ¤Ã³Â ÂÂ¥Ã³Â ÂÂ¦Ã³Â ÂÂ§Ã³Â ÂÂ¨Ã³Â ÂÂ©Ã³Â ÂÂªÃ³Â ÂÂ«Ã³Â ÂÂ¬Ã³Â ÂÂ­Ã³Â ÂÂ®Ã³Â ÂÂ¯Ã³Â ÂÂ°Ã³Â ÂÂ±Ã³Â ÂÂ²Ã³Â ÂÂ³Ã³Â ÂÂ´Ã³Â ÂÂµÃ³Â ÂÂ¶Ã³Â ÂÂ·Ã³Â ÂÂ¸Ã³Â ÂÂ¹Ã³Â ÂÂºÃ³Â ÂÂ»Ã³Â ÂÂ¼Ã³Â ÂÂ½Ã³Â ÂÂ¾Ã³Â ÂÂ¿", \n "Ã¯Â»Â¿", \n "Ã¯Â¿Â¾", \n "ÃÂ©Ã¢ÂÂÃÂ§Ã¢ÂÂÃ¢ÂÂ«ÃÂÃÂµÃ¢ÂÂ¤Ã¢ÂÂ¥ÃÂ·", \n "ÃÂ¥ÃÂÃ¢ÂÂÃÂÃÂ©ÃÂÃ¢ÂÂÃÂÃÂ¬Ã¢ÂÂ¦ÃÂ¦", \n "Ã ÂÃ¢ÂÂÃÂ´ÃÂ®Ã¢ÂÂ ÃÂ¥ÃÂ¨ÃÂÃÂ¸ÃÂÃ¢ÂÂÃ¢ÂÂ", \n "ÃÂ¡Ã¢ÂÂ¢ÃÂ£ÃÂ¢Ã¢ÂÂÃÂ§ÃÂ¶Ã¢ÂÂ¢ÃÂªÃÂºÃ¢ÂÂÃ¢ÂÂ ", \n "ÃÂ¸ÃÂÃÂÃ¢ÂÂÃÂ±ÃÂÃÂÃÂ¯ÃÂÃÂ¿", \n "ÃÂ ÃÂÃÂÃÂÃÂÃÂÃÂÃ¯Â£Â¿ÃÂÃÂÃÂÃ¢ÂÂ", \n "Ã ÂÃ¢ÂÂÃÂ´Ã¢ÂÂ°ÃÂÃÂÃÂ¨ÃÂÃÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂ", \n "`Ã¢ÂÂÃ¢ÂÂ¬Ã¢ÂÂ¹Ã¢ÂÂºÃ¯Â¬ÂÃ¯Â¬ÂÃ¢ÂÂ¡ÃÂ°ÃÂ·Ã¢ÂÂÃ¢ÂÂÃÂ±", \n "Ã¢Â ÂÃ¢Â ÂÃ¢Â ÂÃ¢Â Â", \n "ÃÂÃÂÃÂÃÂÃÂ ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ ÃÂ¡ÃÂ¢ÃÂ£ÃÂ¤ÃÂ¥ÃÂ¦ÃÂ§ÃÂ¨ÃÂ©ÃÂªÃÂ«ÃÂ¬ÃÂ­ÃÂ®ÃÂ¯ÃÂ°ÃÂ±ÃÂ²ÃÂ³ÃÂ´ÃÂµÃÂ¶ÃÂ·ÃÂ¸ÃÂ¹ÃÂºÃÂ»ÃÂ¼ÃÂ½ÃÂ¾ÃÂ¿ÃÂÃÂÃÂÃÂÃÂÃÂ ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ", \n "ÃÂ ÃÂ¡ÃÂ¢ÃÂ£ÃÂ¤ÃÂ¥ÃÂ¦ÃÂ§ÃÂ¨ÃÂ©", \n "Ã¢ÂÂ°Ã¢ÂÂ´Ã¢ÂÂµ", \n "Ã¢ÂÂÃ¢ÂÂÃ¢ÂÂ", \n "Ã¢ÂÂ°Ã¢ÂÂ´Ã¢ÂÂµÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂ", \n "Ã Â¸ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹Â Ã Â¸ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹Â Ã Â¸ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹ÂÃ Â¹Â", \n "\'", \n "\\"", \n "\'\'", \n "\\"\\"", \n "\'\\"\'", \n "\\"\'\'\'\'\\"\'\\"", \n "\\"\'\\"\'\\"\'\'\'\'\\"", \n "<foo val=Ã¢ÂÂbarÃ¢ÂÂ />", \n "<foo val=Ã¢ÂÂbarÃ¢ÂÂ />", \n "<foo val=Ã¢ÂÂbarÃ¢ÂÂ />", \n "<foo val=`bar\' />", \n "Ã§ÂÂ°Ã¤Â¸Â­Ã£ÂÂÃ£ÂÂÃ£ÂÂ«Ã£ÂÂÃ£ÂÂÃ£ÂÂ¦Ã¤Â¸ÂÃ£ÂÂÃ£ÂÂ", \n "Ã£ÂÂÃ£ÂÂ¼Ã£ÂÂÃ£ÂÂ£Ã£ÂÂ¼Ã£ÂÂ¸Ã¨Â¡ÂÃ£ÂÂÃ£ÂÂªÃ£ÂÂÃ£ÂÂ", \n "Ã¥ÂÂÃ¨Â£Â½Ã¦Â¼Â¢Ã¨ÂªÂ", \n "Ã©ÂÂ¨Ã¨ÂÂ½Ã¦Â Â¼", \n "Ã¬ÂÂ¬Ã­ÂÂÃªÂ³Â¼Ã­ÂÂÃ¬ÂÂ Ã¬ÂÂ´Ã­ÂÂÃ¬ÂÂ°ÃªÂµÂ¬Ã¬ÂÂ", \n "Ã¬Â°Â¦Ã¬Â°Â¨Ã«Â¥Â¼ Ã­ÂÂÃªÂ³Â Ã¬ÂÂ¨ Ã­ÂÂ²Ã¬ÂÂÃ«Â§Â¨ÃªÂ³Â¼ Ã¬ÂÂÃ«ÂÂ¤Ã«Â¦Â¬ Ã«ÂÂ Ã«Â°Â©ÃªÂ°ÂÃ­ÂÂ", \n "Ã§Â¤Â¾Ã¦ÂÂÃ§Â§ÂÃ¥Â­Â¸Ã©ÂÂ¢Ã¨ÂªÂÃ¥Â­Â¸Ã§Â ÂÃ§Â©Â¶Ã¦ÂÂ", \n "Ã¬ÂÂ¸Ã«ÂÂÃ«Â°ÂÃ­ÂÂ Ã«Â¥Â´", \n "Ã°Â ÂÂÃ°Â ÂÂ±Ã°Â ÂÂ¹Ã°Â Â±ÂÃ°Â Â±Â¸Ã°Â Â²ÂÃ°Â Â³Â", \n "Ã°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ¡Ã°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ¡Ã°ÂÂÂÃ°ÂÂÂ/Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ¤Ã°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ¡Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ¤Ã°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂ±Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ¡Ã°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂ¤Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ¡Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ",\n "Ã¨Â¡Â¨Ã£ÂÂÃ£ÂÂAÃ©Â·ÂÃ ÂÃÂ©Ã¯Â¼Â¢Ã©ÂÂÃÂÃÂÃÂªÃÂ ÃÂ±Ã¤Â¸ÂÃ£ÂÂÃ°Â ÂÂ", \n "ÃÂº", \n "ÃÂ¾", \n "Ã£ÂÂ½Ã Â¼Â¼Ã ÂºÂÃÂÃÂÃ ÂºÂÃ Â¼Â½Ã¯Â¾Â Ã£ÂÂ½Ã Â¼Â¼Ã ÂºÂÃÂÃÂÃ ÂºÂÃ Â¼Â½Ã¯Â¾Â", \n "(Ã¯Â½Â¡Ã¢ÂÂ Ã¢ÂÂ Ã¢ÂÂÃ¯Â½Â¡)", \n "Ã¯Â½ÂÃ¯Â½Â¨(ÃÂ´Ã¢ÂÂÃ¯Â½ÂÃ¢ÂÂ©", \n "__Ã¯Â¾Â(,_,*)", \n "Ã£ÂÂ»(Ã¯Â¿Â£Ã¢ÂÂÃ¯Â¿Â£)Ã£ÂÂ»:*:", \n "Ã¯Â¾ÂÃ¯Â½Â¥Ã¢ÂÂ¿Ã£ÂÂ¾Ã¢ÂÂ²(Ã¯Â½Â¡Ã¢ÂÂÃ¢ÂÂ¿Ã¢ÂÂÃ¯Â½Â¡)Ã¢ÂÂ±Ã¢ÂÂ¿Ã¯Â½Â¥Ã¯Â¾Â", \n ",Ã£ÂÂÃ£ÂÂ»:*:Ã£ÂÂ»Ã£ÂÂÃ¢ÂÂ( Ã¢ÂÂ» ÃÂ Ã¢ÂÂ» )Ã£ÂÂÃ£ÂÂ»:*:Ã£ÂÂ»Ã£ÂÂÃ¢ÂÂ", \n "(Ã¢ÂÂ¯ÃÂ°Ã¢ÂÂ¡ÃÂ°Ã¯Â¼ÂÃ¢ÂÂ¯Ã¯Â¸Âµ Ã¢ÂÂ»Ã¢ÂÂÃ¢ÂÂ»)", \n "(Ã¯Â¾ÂÃ Â²Â¥Ã§ÂÂÃ Â²Â¥Ã¯Â¼ÂÃ¯Â¾ÂÃ¯Â»Â¿ Ã¢ÂÂ»Ã¢ÂÂÃ¢ÂÂ»", \n "Ã¢ÂÂ¬Ã¢ÂÂÃ¢ÂÂ¬Ã£ÂÂ( ÃÂº _ ÃÂºÃ£ÂÂ)", \n "( ÃÂ¡ÃÂ° ÃÂÃÂ ÃÂ¡ÃÂ°)", \n "ÃÂ¯\\\\_(Ã£ÂÂ)_/ÃÂ¯", \n "Ã°ÂÂÂ", \n "Ã°ÂÂÂ©Ã°ÂÂÂ½", \n "Ã°ÂÂÂ¨Ã¢ÂÂÃ°ÂÂ¦Â° Ã°ÂÂÂ¨Ã°ÂÂÂ¿Ã¢ÂÂÃ°ÂÂ¦Â° Ã°ÂÂÂ¨Ã¢ÂÂÃ°ÂÂ¦Â± Ã°ÂÂÂ¨Ã°ÂÂÂ¿Ã¢ÂÂÃ°ÂÂ¦Â± Ã°ÂÂ¦Â¹Ã°ÂÂÂ¿Ã¢ÂÂÃ¢ÂÂÃ¯Â¸Â", \n "Ã°ÂÂÂ¾ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ", \n "Ã°ÂÂÂµ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ", \n "Ã¢ÂÂ¤Ã¯Â¸Â Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ", \n "Ã¢ÂÂÃ°ÂÂÂ¿ Ã°ÂÂÂªÃ°ÂÂÂ¿ Ã°ÂÂÂÃ°ÂÂÂ¿ Ã°ÂÂÂÃ°ÂÂÂ¿ Ã°ÂÂÂÃ°ÂÂÂ¿ Ã°ÂÂÂÃ°ÂÂÂ¿", \n "Ã°ÂÂÂ¨Ã¢ÂÂÃ°ÂÂÂ©Ã¢ÂÂÃ°ÂÂÂ¦ Ã°ÂÂÂ¨Ã¢ÂÂÃ°ÂÂÂ©Ã¢ÂÂÃ°ÂÂÂ§Ã¢ÂÂÃ°ÂÂÂ¦ Ã°ÂÂÂ¨Ã¢ÂÂÃ°ÂÂÂ¨Ã¢ÂÂÃ°ÂÂÂ¦ Ã°ÂÂÂ©Ã¢ÂÂÃ°ÂÂÂ©Ã¢ÂÂÃ°ÂÂÂ§ Ã°ÂÂÂ¨Ã¢ÂÂÃ°ÂÂÂ¦ Ã°ÂÂÂ¨Ã¢ÂÂÃ°ÂÂÂ§Ã¢ÂÂÃ°ÂÂÂ¦ Ã°ÂÂÂ©Ã¢ÂÂÃ°ÂÂÂ¦ Ã°ÂÂÂ©Ã¢ÂÂÃ°ÂÂÂ§Ã¢ÂÂÃ°ÂÂÂ¦", \n "Ã°ÂÂÂ¾ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂ§", \n "0Ã¯Â¸ÂÃ¢ÂÂ£ 1Ã¯Â¸ÂÃ¢ÂÂ£ 2Ã¯Â¸ÂÃ¢ÂÂ£ 3Ã¯Â¸ÂÃ¢ÂÂ£ 4Ã¯Â¸ÂÃ¢ÂÂ£ 5Ã¯Â¸ÂÃ¢ÂÂ£ 6Ã¯Â¸ÂÃ¢ÂÂ£ 7Ã¯Â¸ÂÃ¢ÂÂ£ 8Ã¯Â¸ÂÃ¢ÂÂ£ 9Ã¯Â¸ÂÃ¢ÂÂ£ Ã°ÂÂÂ", \n "Ã°ÂÂÂºÃ°ÂÂÂ¸Ã°ÂÂÂ·Ã°ÂÂÂºÃ°ÂÂÂ¸ Ã°ÂÂÂ¦Ã°ÂÂÂ«Ã°ÂÂÂ¦Ã°ÂÂÂ²Ã°ÂÂÂ¸", \n "Ã°ÂÂÂºÃ°ÂÂÂ¸Ã°ÂÂÂ·Ã°ÂÂÂºÃ°ÂÂÂ¸Ã°ÂÂÂ¦Ã°ÂÂÂ«Ã°ÂÂÂ¦Ã°ÂÂÂ²", \n "Ã°ÂÂÂºÃ°ÂÂÂ¸Ã°ÂÂÂ·Ã°ÂÂÂºÃ°ÂÂÂ¸Ã°ÂÂÂ¦", \n "Ã¯Â¼ÂÃ¯Â¼ÂÃ¯Â¼Â", \n "ÃÂ¡ÃÂ¢ÃÂ£", \n "ÃÂ«ÃÂ ÃÂÃÂÃÂ³ ÃÂ³ÃÂÃÂ·ÃÂª ÃÂÃÂ¨ÃÂ§ÃÂÃÂªÃÂ­ÃÂ¯ÃÂÃÂ¯ÃÂ, ÃÂ¬ÃÂ²ÃÂÃÂ±ÃÂªÃÂ ÃÂ¨ÃÂ§ÃÂ³ÃÂªÃÂ®ÃÂ¯ÃÂ§ÃÂ ÃÂ£ÃÂ ÃÂ¯ÃÂÃÂ. ÃÂ¥ÃÂ° ÃÂÃÂÃÂ§ÃÂ ÃÂ§ÃÂÃÂ³ÃÂªÃÂ§ÃÂ± ÃÂÃÂªÃÂÃÂµÃÂÃÂ¨ ÃÂÃÂ§ÃÂ. ÃÂ£ÃÂÃÂÃÂ ÃÂ§ÃÂÃÂ·ÃÂ§ÃÂÃÂÃÂ§ÃÂ ÃÂ¨ÃÂ±ÃÂÃÂ·ÃÂ§ÃÂÃÂÃÂ§-ÃÂÃÂ±ÃÂÃÂ³ÃÂ§ ÃÂÃÂ¯ ÃÂ£ÃÂ®ÃÂ°. ÃÂ³ÃÂÃÂÃÂ ÃÂ§ÃÂÃÂ ÃÂ¥ÃÂªÃÂÃÂ§ÃÂÃÂÃÂ© ÃÂ¨ÃÂÃÂ ÃÂ ÃÂ§, ÃÂÃÂ°ÃÂÃÂ± ÃÂ§ÃÂÃÂ­ÃÂ¯ÃÂÃÂ¯ ÃÂ£ÃÂ ÃÂ¨ÃÂ¹ÃÂ¯, ÃÂ ÃÂ¹ÃÂ§ÃÂ ÃÂÃÂ© ÃÂ¨ÃÂÃÂÃÂÃÂ¯ÃÂ§ÃÂ ÃÂ§ÃÂÃÂ¥ÃÂ·ÃÂÃÂ§ÃÂ ÃÂ¹ÃÂ ÃÂ¥ÃÂÃÂ.", \n "ÃÂÃÂ°ÃÂ¼ÃÂ¨ÃÂµÃÂÃÂ©ÃÂ´ÃÂÃÂÃÂª, ÃÂÃÂ¸ÃÂ¼ÃÂ¨ÃÂ¸ÃÂ ÃÂÃÂ±ÃÂÃÂ¹ÃÂÃÂ´ÃÂÃÂ, ÃÂÃÂµÃÂª ÃÂÃÂ·ÃÂ©ÃÂ¸ÃÂ¼ÃÂÃÂÃÂ·ÃÂÃÂ´ÃÂ, ÃÂÃÂ°ÃÂÃÂµÃÂª ÃÂÃÂ¸ÃÂÃÂ¸ÃÂ¨ÃÂ¶ÃÂ¥", \n "ÃÂÃÂ¸ÃÂÃÂ°ÃÂªÃÂ¸ÃÂtestÃÂ§ÃÂÃÂµÃÂÃÂ­ÃÂ§ÃÂª ÃÂ§ÃÂÃÂªÃÂÃÂ­ÃÂÃÂ", \n "Ã¯Â·Â½", \n "Ã¯Â·Âº",\n "ÃÂ ÃÂÃÂÃÂÃÂ§ÃÂÃÂÃÂ´ÃÂÃÂ©ÃÂ ÃÂ³ÃÂÃÂ¨ÃÂÃÂÃÂ ÃÂ§ÃÂÃÂ³ÃÂÃÂªÃÂÃÂ®ÃÂÃÂ¯ÃÂÃÂ§ÃÂ ÃÂ ÃÂ§ÃÂÃÂÃÂÃÂÃÂºÃÂÃÂ©ÃÂ ÃÂÃÂÃÂ ÃÂ§ÃÂÃÂÃÂÃÂÃÂ¸ÃÂÃÂ ÃÂ ÃÂ§ÃÂÃÂÃÂÃÂÃÂ§ÃÂ¦ÃÂÃÂ ÃÂÃÂ©ÃÂ ÃÂÃÂÃÂÃÂÃÂÃÂ ÃÂÃÂÃÂ®ÃÂÃÂµÃÂÃÂ ÃÂ§ÃÂÃÂªÃÂÃÂÃÂ·ÃÂÃÂ¨ÃÂÃÂÃÂÃÂÃÂ§ÃÂªÃÂ ÃÂ§ÃÂÃÂÃÂ­ÃÂ§ÃÂ³ÃÂÃÂÃÂ¨ÃÂÃÂÃÂÃÂÃÂ©ÃÂÃÂ ", \n "Ã¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂ Ã¡ÂÂÃ¢ÂÂªÃ¢ÂÂªÃ¢ÂÂª", \n "Ã¢ÂÂªÃ¢ÂÂªÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¡ÂÂÃ¢ÂÂª",\n "Ã¢ÂÂªÃ¢ÂÂªtestÃ¢ÂÂª", \n "Ã¢ÂÂ«testÃ¢ÂÂ«", \n "Ã¢ÂÂ©testÃ¢ÂÂ©", \n "testÃ¢ÂÂ testÃ¢ÂÂ«", \n "Ã¢ÂÂ¦testÃ¢ÂÂ§", \n "Ã¡Â¹Â°ÃÂºÃÂºÃÂoÃÂ ÃÂ·iÃÂ²ÃÂ¬ÃÂÃÂªÃÂnÃÂÃÂÃÂvÃÂÃÂÃÂÃÂ¦ÃÂoÃÂ¶ÃÂÃÂ°ÃÂ kÃÂ¨ÃÂÃÂ®ÃÂºÃÂªÃÂ¹ÃÂ±ÃÂ¤ ÃÂtÃÂÃÂÃÂ³ÃÂ£ÃÂ»ÃÂªÃÂhÃÂ¼ÃÂÃÂ²ÃÂ¦ÃÂ³ÃÂÃÂ²eÃÂÃÂ£ÃÂ°ÃÂ¦ÃÂ¬ÃÂ ÃÂ¢ÃÂ¼ÃÂ»ÃÂ±ÃÂhÃÂÃÂÃÂÃÂÃÂ£ÃÂ²ÃÂ iÃÂ¦ÃÂ²ÃÂ£ÃÂ°ÃÂ¤vÃÂ»ÃÂeÃÂºÃÂ­ÃÂ³ÃÂªÃÂ°-mÃÂ¢iÃÂ nÃÂÃÂºÃÂÃÂ²ÃÂ¯ÃÂ°dÃÂµÃÂ¼ÃÂÃÂÃÂ©ÃÂ¼ÃÂÃÂ³ ÃÂÃÂ¥ÃÂ±ÃÂ³ÃÂ­rÃÂÃÂÃÂeÃÂpÃÂ rÃÂ¼ÃÂÃÂ»ÃÂ­ÃÂeÃÂºÃÂ ÃÂ£ÃÂsÃÂÃÂÃÂ³ÃÂÃÂÃÂeÃÂÃÂ¥ÃÂ¯ÃÂÃÂ²ÃÂÃÂ¬ÃÂÃÂ¹ÃÂ¬ÃÂÃÂÃÂÃÂÃÂÃÂ¤tÃÂÃÂ¬ÃÂ¤ÃÂÃÂ¼ÃÂ­ÃÂÃÂ iÃÂªÃÂ±nÃÂ gÃÂ´ÃÂ ÃÂÃÂÃÂ cÃÂ¬ÃÂhÃÂ¡aÃÂ«ÃÂ»ÃÂ¯ÃÂoÃÂ«ÃÂÃÂÃÂÃÂÃÂÃÂsÃÂÃÂ¦ÃÂ².ÃÂ¨ÃÂ¹ÃÂÃÂ£", \n "ÃÂ¡ÃÂÃÂÃÂ IÃÂÃÂÃÂ¦ÃÂnÃÂÃÂÃÂvÃÂ®ÃÂ«okÃÂ²ÃÂ«ÃÂÃÂiÃÂÃÂÃÂ­ÃÂ¹ÃÂ ÃÂnÃÂ¡ÃÂ»ÃÂ®ÃÂ£ÃÂºgÃÂ²ÃÂÃÂÃÂ­ÃÂÃÂ¬ÃÂ ÃÂ°tÃÂÃÂ¦hÃÂÃÂ²eÃÂ¢ÃÂ¤ ÃÂÃÂ¬ÃÂ²ÃÂfÃÂ´ÃÂÃÂÃÂ£ÃÂ¨ÃÂÃ¡ÂºÂ¹ÃÂ¥ÃÂ©lÃÂÃÂÃÂiÃÂÃÂÃÂ¦ÃÂ nÃÂÃÂÃÂÃÂÃÂ³ÃÂ®gÃÂ ÃÂ¨oÃÂÃÂªÃÂ¡fÃÂÃÂ£ÃÂ¬ ÃÂÃÂÃÂÃÂÃÂÃÂ®cÃÂÃÂÃÂ«ÃÂÃÂÃÂÃÂÃÂ hÃÂµÃÂ¤ÃÂ£ÃÂÃÂÃÂ¡ÃÂÃÂ¼ÃÂÃÂ oÃÂ¼ÃÂ£ÃÂ¥sÃÂ±ÃÂÃÂºÃÂÃÂ¦ÃÂ»ÃÂ¢.ÃÂÃÂÃÂÃÂ ÃÂ«ÃÂ°", \n "ÃÂÃÂºÃÂÃÂ¹ÃÂ¯ÃÂÃ¡Â¹Â®ÃÂ¤ÃÂÃÂ¥ÃÂÃÂhÃÂ²ÃÂeÃÂÃÂÃÂ¼ÃÂÃÂÃÂ¼ÃÂ£ÃÂ ÃÂÃÂÃÂ±ÃÂ ÃÂÃÂÃÂ NÃÂÃÂ eÃÂÃÂ±zÃÂÃÂÃÂÃÂºÃÂpÃÂ¤ÃÂºÃÂ¹ÃÂÃÂ¯ÃÂeÃÂ ÃÂ»ÃÂ ÃÂrÃÂ¨ÃÂ¤ÃÂÃÂºÃÂÃÂÃÂÃÂdÃÂ ÃÂÃÂ­ÃÂ¬ÃÂÃÂiÃÂ¦ÃÂÃÂ©ÃÂÃÂÃÂ¤aÃÂ ÃÂÃÂ¬ÃÂÃÂnÃÂÃÂ ÃÂ»ÃÂÃÂ°ÃÂÃÂ hÃÂµÃÂiÃÂ³ÃÂvÃÂ¢ÃÂÃ¡Â¸ÂÃÂÃÂ-ÃÂÃÂ­ÃÂ©ÃÂ¼ÃÂmÃÂ¤ÃÂ­ÃÂ«iÃÂÃÂÃÂÃÂ¦nÃÂÃÂÃ¡Â¸ÂÃÂ ÃÂ¯ÃÂ²ÃÂÃÂÃÂ«ÃÂÃÂ¯ÃÂ°ÃÂ²ÃÂÃÂ»ÃÂf ÃÂªÃÂ°ÃÂ°ÃÂÃÂÃÂ­ÃÂÃÂcÃÂ¦ÃÂÃÂ²ÃÂÃÂÃÂ©ÃÂÃ¡Â¸Â¥ÃÂaÃÂ®ÃÂÃÂÃÂÃÂÃÂ¡ÃÂ©ÃÂ¹ÃÂsÃÂ¤.ÃÂÃÂ ÃÂZÃÂ¡ÃÂÃÂÃÂÃÂ°ÃÂ£ÃÂÃÂaÃÂÃÂ°ÃÂÃÂ¬ÃÂ¡lÃÂ²ÃÂ«ÃÂ³ÃÂÃÂ©gÃÂ¡ÃÂÃÂ¼ÃÂ±ÃÂÃÂÃÂ¬ÃÂ oÃÂÃÂ.ÃÂ", \n "ÃÂ¦HÃÂ¬ÃÂ¤ÃÂÃÂ¤ÃÂeÃÂ ÃÂÃÂ¥ÃÂÃÂ»ÃÂÃÂÃÂwÃÂhÃÂÃÂ¯ÃÂoÃÂÃÂÃÂÃÂÃÂ±ÃÂ® ÃÂÃÂºÃÂÃÂÃÂÃÂWÃÂ·ÃÂ¼ÃÂ­aÃÂºÃÂªÃÂÃÂ¯ÃÂÃÂÃÂ­ÃÂÃÂ¯ÃÂtÃÂ¶ÃÂ¼ÃÂ®sÃÂÃÂÃÂÃÂ ÃÂ ÃÂ«ÃÂ BÃÂ»ÃÂÃÂÃÂÃÂ³ÃÂ eÃÂµhÃÂµÃÂ¬ÃÂÃÂ«ÃÂiÃÂ¹ÃÂÃÂ³ÃÂ³ÃÂ®ÃÂÃÂ«ÃÂnÃÂdÃÂ´ÃÂªÃÂÃÂ ÃÂ°ÃÂÃÂ©ÃÂÃÂÃÂ²ÃÂÃÂ TÃÂÃÂ¼ÃÂÃÂªÃÂ¢hÃÂÃÂÃÂ®ÃÂ»eÃÂ¬ÃÂÃÂÃÂ ÃÂ¤ÃÂ¹ÃÂWÃÂÃÂÃÂÃÂÃÂÃÂÃÂ aÃÂÃÂÃÂÃÂ¹ÃÂ¼ÃÂ£lÃÂ´ÃÂÃÂ°ÃÂ¤ÃÂÃÂÃ¡Â¸Â½ÃÂ«.ÃÂ", \n "ZÃÂ®ÃÂÃÂ ÃÂÃÂÃÂ Ã¡Â¸ÂÃÂÃÂÃÂÃÂ»ÃÂÃ¡Â¸Â¶ÃÂÃÂÃÂ¯ÃÂ¹ÃÂÃÂGÃÂ»OÃÂ­ÃÂÃÂ®", \n "ÃÂÃÂnbÃ¡Â´ÂlÃÂ ÃÂuÃÂÃÂÃÂ¯ ÃÂÃÂ¹olop ÃÂÃÂ ÃÂÃÂ¹oqÃÂl ÃÂn ÃÂunpÃ¡Â´ÂpÃ¡Â´ÂÃÂuÃ¡Â´Â ÃÂ¹odÃÂ¯ÃÂÃÂ poÃÂ¯snÃ¡Â´ÂÃÂ op pÃÂs \'ÃÂÃ¡Â´ÂlÃÂ ÃÂuÃ¡Â´ÂÃÂsÃ¡Â´ÂdÃ¡Â´ÂpÃÂ ÃÂ¹nÃÂÃÂÃÂÃÂÃÂsuoÃÂ \'ÃÂÃÂÃÂ¯ÃÂ ÃÂÃ¡Â´Âs ÃÂ¹olop ÃÂ¯nsdÃ¡Â´Â ÃÂ¯ÃÂÃÂ¹oÃÂ¥", \n "00ÃÂÃÂ$-", \n "Ã¯Â¼Â´Ã¯Â½ÂÃ¯Â½Â Ã¯Â½ÂÃ¯Â½ÂÃ¯Â½ÂÃ¯Â½ÂÃ¯Â½Â Ã¯Â½ÂÃ¯Â½ÂÃ¯Â½ÂÃ¯Â½ÂÃ¯Â½Â Ã¯Â½ÂÃ¯Â½ÂÃ¯Â½Â Ã¯Â½ÂÃ¯Â½ÂÃ¯Â½ÂÃ¯Â½ÂÃ¯Â½Â Ã¯Â½ÂÃ¯Â½ÂÃ¯Â½Â Ã¯Â½Â Ã¯Â½ÂÃ¯Â½ÂÃ¯Â½Â Ã¯Â½ÂÃ¯Â½ÂÃ¯Â½ÂÃ¯Â½Â Ã¯Â½ÂÃ¯Â½ÂÃ¯Â½Â", \n "Ã°ÂÂÂÃ°ÂÂÂ¡Ã°ÂÂÂ Ã°ÂÂÂªÃ°ÂÂÂ®Ã°ÂÂÂ¢Ã°ÂÂÂÃ°ÂÂÂ¤ Ã°ÂÂÂÃ°ÂÂÂ«Ã°ÂÂÂ¨Ã°ÂÂÂ°Ã°ÂÂÂ§ Ã°ÂÂÂÃ°ÂÂÂ¨Ã°ÂÂÂ± Ã°ÂÂÂ£Ã°ÂÂÂ®Ã°ÂÂÂ¦Ã°ÂÂÂ©Ã°ÂÂÂ¬ Ã°ÂÂÂ¨Ã°ÂÂÂ¯Ã°ÂÂÂÃ°ÂÂÂ« Ã°ÂÂÂ­Ã°ÂÂÂ¡Ã°ÂÂÂ Ã°ÂÂÂ¥Ã°ÂÂÂÃ°ÂÂÂ³Ã°ÂÂÂ² Ã°ÂÂÂÃ°ÂÂÂ¨Ã°ÂÂÂ ", \n "Ã°ÂÂÂ¿Ã°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ", \n "Ã°ÂÂÂ»Ã°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂ", \n "Ã°ÂÂÂ£Ã°ÂÂÂ±Ã°ÂÂÂ® Ã°ÂÂÂºÃ°ÂÂÂ¾Ã°ÂÂÂ²Ã°ÂÂÂ¬Ã°ÂÂÂ´ Ã°ÂÂÂ«Ã°ÂÂÂ»Ã°ÂÂÂ¸Ã°ÂÂÂÃ°ÂÂÂ· Ã°ÂÂÂ¯Ã°ÂÂÂ¸Ã°ÂÂÂ Ã°ÂÂÂ³Ã°ÂÂÂ¾Ã°ÂÂÂ¶Ã°ÂÂÂ¹Ã°ÂÂÂ¼ Ã°ÂÂÂ¸Ã°ÂÂÂ¿Ã°ÂÂÂ®Ã°ÂÂÂ» Ã°ÂÂÂ½Ã°ÂÂÂ±Ã°ÂÂÂ® Ã°ÂÂÂµÃ°ÂÂÂªÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂ­Ã°ÂÂÂ¸Ã°ÂÂÂ°", \n "Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂ¢Ã°ÂÂÂ¦Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂ£Ã°ÂÂÂ Ã°ÂÂÂ¨Ã°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂ© Ã°ÂÂÂÃ°ÂÂÂ¦Ã°ÂÂÂÃ°ÂÂÂ¡Ã°ÂÂÂ¤ Ã°ÂÂÂ Ã°ÂÂÂ§Ã°ÂÂÂÃ°ÂÂÂ£ Ã°ÂÂÂ¥Ã°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ«Ã°ÂÂÂª Ã°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂ", \n "Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ¡ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ£Ã°ÂÂÂ¢ Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ", \n "Ã¢ÂÂ¯Ã¢ÂÂ£Ã¢ÂÂ Ã¢ÂÂ¬Ã¢ÂÂ°Ã¢ÂÂ¤Ã¢ÂÂÃ¢ÂÂ¦ Ã¢ÂÂÃ¢ÂÂ­Ã¢ÂÂªÃ¢ÂÂ²Ã¢ÂÂ© Ã¢ÂÂ¡Ã¢ÂÂªÃ¢ÂÂ³ Ã¢ÂÂ¥Ã¢ÂÂ°Ã¢ÂÂ¨Ã¢ÂÂ«Ã¢ÂÂ® Ã¢ÂÂªÃ¢ÂÂ±Ã¢ÂÂ Ã¢ÂÂ­ Ã¢ÂÂ¯Ã¢ÂÂ£Ã¢ÂÂ Ã¢ÂÂ§Ã¢ÂÂÃ¢ÂÂµÃ¢ÂÂ´ Ã¢ÂÂÃ¢ÂÂªÃ¢ÂÂ¢", \n "<script>alert(123)</script>", \n "&lt;script&gt;alert(&#39;123&#39;);&lt;/script&gt;", \n "<img src=x onerror=alert(123) />", \n "<svg><script>123<1>alert(123)</script>", \n "\\"><script>alert(123)</script>", \n "\'><script>alert(123)</script>", \n "><script>alert(123)</script>", \n "</script><script>alert(123)</script>", \n "< / script >< script >alert(123)< / script >", \n " onfocus=JaVaSCript:alert(123) autofocus", \n "\\" onfocus=JaVaSCript:alert(123) autofocus", \n "\' onfocus=JaVaSCript:alert(123) autofocus", \n "Ã¯Â¼ÂscriptÃ¯Â¼Âalert(123)Ã¯Â¼Â/scriptÃ¯Â¼Â", \n "<sc<script>ript>alert(123)</sc</script>ript>", \n "--><script>alert(123)</script>", \n "\\";alert(123);t=\\"", \n "\';alert(123);t=\'", \n "JavaSCript:alert(123)", \n ";alert(123);", \n "src=JaVaSCript:prompt(132)", \n "\\"><script>alert(123);</script x=\\"", \n "\'><script>alert(123);</script x=\'", \n "><script>alert(123);</script x=", \n "\\" autofocus onkeyup=\\"javascript:alert(123)", \n "\' autofocus onkeyup=\'javascript:alert(123)", \n "<script\\\\x20type=\\"text/javascript\\">javascript:alert(1);</script>", \n "<script\\\\x3Etype=\\"text/javascript\\">javascript:alert(1);</script>", \n "<script\\\\x0Dtype=\\"text/javascript\\">javascript:alert(1);</script>", \n "<script\\\\x09type=\\"text/javascript\\">javascript:alert(1);</script>", \n "<script\\\\x0Ctype=\\"text/javascript\\">javascript:alert(1);</script>", \n "<script\\\\x2Ftype=\\"text/javascript\\">javascript:alert(1);</script>", \n "<script\\\\x0Atype=\\"text/javascript\\">javascript:alert(1);</script>", \n "\'`\\"><\\\\x3Cscript>javascript:alert(1)</script>", \n "\'`\\"><\\\\x00script>javascript:alert(1)</script>", \n "ABC<div style=\\"x\\\\x3Aexpression(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:expression\\\\x5C(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:expression\\\\x00(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:exp\\\\x00ression(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:exp\\\\x5Cression(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:\\\\x0Aexpression(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:\\\\x09expression(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:\\\\xE3\\\\x80\\\\x80expression(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:\\\\xE2\\\\x80\\\\x84expression(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:\\\\xC2\\\\xA0expression(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:\\\\xE2\\\\x80\\\\x80expression(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:\\\\xE2\\\\x80\\\\x8Aexpression(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:\\\\x0Dexpression(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:\\\\x0Cexpression(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:\\\\xE2\\\\x80\\\\x87expression(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:\\\\xEF\\\\xBB\\\\xBFexpression(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:\\\\x20expression(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:\\\\xE2\\\\x80\\\\x88expression(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:\\\\x00expression(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:\\\\xE2\\\\x80\\\\x8Bexpression(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:\\\\xE2\\\\x80\\\\x86expression(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:\\\\xE2\\\\x80\\\\x85expression(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:\\\\xE2\\\\x80\\\\x82expression(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:\\\\x0Bexpression(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:\\\\xE2\\\\x80\\\\x81expression(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:\\\\xE2\\\\x80\\\\x83expression(javascript:alert(1)\\">DEF", \n "ABC<div style=\\"x:\\\\xE2\\\\x80\\\\x89expression(javascript:alert(1)\\">DEF", \n "<a href=\\"\\\\x0Bjavascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x0Fjavascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\xC2\\\\xA0javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x05javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\xE1\\\\xA0\\\\x8Ejavascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x18javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x11javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\xE2\\\\x80\\\\x88javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\xE2\\\\x80\\\\x89javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\xE2\\\\x80\\\\x80javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x17javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x03javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x0Ejavascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x1Ajavascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x00javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x10javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\xE2\\\\x80\\\\x82javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x20javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x13javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x09javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\xE2\\\\x80\\\\x8Ajavascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x14javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x19javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\xE2\\\\x80\\\\xAFjavascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x1Fjavascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\xE2\\\\x80\\\\x81javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x1Djavascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\xE2\\\\x80\\\\x87javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x07javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\xE1\\\\x9A\\\\x80javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\xE2\\\\x80\\\\x83javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x04javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x01javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x08javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\xE2\\\\x80\\\\x84javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\xE2\\\\x80\\\\x86javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\xE3\\\\x80\\\\x80javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x12javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x0Djavascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x0Ajavascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x0Cjavascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x15javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\xE2\\\\x80\\\\xA8javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x16javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x02javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x1Bjavascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x06javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\xE2\\\\x80\\\\xA9javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\xE2\\\\x80\\\\x85javascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x1Ejavascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\xE2\\\\x81\\\\x9Fjavascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"\\\\x1Cjavascript:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"javascript\\\\x00:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"javascript\\\\x3A:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"javascript\\\\x09:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"javascript\\\\x0D:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "<a href=\\"javascript\\\\x0A:javascript:alert(1)\\" id=\\"fuzzelement1\\">test</a>", \n "`\\"\'><img src=xxx:x \\\\x0Aonerror=javascript:alert(1)>", \n "`\\"\'><img src=xxx:x \\\\x22onerror=javascript:alert(1)>", \n "`\\"\'><img src=xxx:x \\\\x0Bonerror=javascript:alert(1)>", \n "`\\"\'><img src=xxx:x \\\\x0Donerror=javascript:alert(1)>", \n "`\\"\'><img src=xxx:x \\\\x2Fonerror=javascript:alert(1)>", \n "`\\"\'><img src=xxx:x \\\\x09onerror=javascript:alert(1)>", \n "`\\"\'><img src=xxx:x \\\\x0Conerror=javascript:alert(1)>", \n "`\\"\'><img src=xxx:x \\\\x00onerror=javascript:alert(1)>", \n "`\\"\'><img src=xxx:x \\\\x27onerror=javascript:alert(1)>", \n "`\\"\'><img src=xxx:x \\\\x20onerror=javascript:alert(1)>", \n "\\"`\'><script>\\\\x3Bjavascript:alert(1)</script>", \n "\\"`\'><script>\\\\x0Djavascript:alert(1)</script>", \n "\\"`\'><script>\\\\xEF\\\\xBB\\\\xBFjavascript:alert(1)</script>", \n "\\"`\'><script>\\\\xE2\\\\x80\\\\x81javascript:alert(1)</script>", \n "\\"`\'><script>\\\\xE2\\\\x80\\\\x84javascript:alert(1)</script>", \n "\\"`\'><script>\\\\xE3\\\\x80\\\\x80javascript:alert(1)</script>", \n "\\"`\'><script>\\\\x09javascript:alert(1)</script>", \n "\\"`\'><script>\\\\xE2\\\\x80\\\\x89javascript:alert(1)</script>", \n "\\"`\'><script>\\\\xE2\\\\x80\\\\x85javascript:alert(1)</script>", \n "\\"`\'><script>\\\\xE2\\\\x80\\\\x88javascript:alert(1)</script>", \n "\\"`\'><script>\\\\x00javascript:alert(1)</script>", \n "\\"`\'><script>\\\\xE2\\\\x80\\\\xA8javascript:alert(1)</script>", \n "\\"`\'><script>\\\\xE2\\\\x80\\\\x8Ajavascript:alert(1)</script>", \n "\\"`\'><script>\\\\xE1\\\\x9A\\\\x80javascript:alert(1)</script>", \n "\\"`\'><script>\\\\x0Cjavascript:alert(1)</script>", \n "\\"`\'><script>\\\\x2Bjavascript:alert(1)</script>", \n "\\"`\'><script>\\\\xF0\\\\x90\\\\x96\\\\x9Ajavascript:alert(1)</script>", \n "\\"`\'><script>-javascript:alert(1)</script>", \n "\\"`\'><script>\\\\x0Ajavascript:alert(1)</script>", \n "\\"`\'><script>\\\\xE2\\\\x80\\\\xAFjavascript:alert(1)</script>", \n "\\"`\'><script>\\\\x7Ejavascript:alert(1)</script>", \n "\\"`\'><script>\\\\xE2\\\\x80\\\\x87javascript:alert(1)</script>", \n "\\"`\'><script>\\\\xE2\\\\x81\\\\x9Fjavascript:alert(1)</script>", \n "\\"`\'><script>\\\\xE2\\\\x80\\\\xA9javascript:alert(1)</script>", \n "\\"`\'><script>\\\\xC2\\\\x85javascript:alert(1)</script>", \n "\\"`\'><script>\\\\xEF\\\\xBF\\\\xAEjavascript:alert(1)</script>", \n "\\"`\'><script>\\\\xE2\\\\x80\\\\x83javascript:alert(1)</script>", \n "\\"`\'><script>\\\\xE2\\\\x80\\\\x8Bjavascript:alert(1)</script>", \n "\\"`\'><script>\\\\xEF\\\\xBF\\\\xBEjavascript:alert(1)</script>", \n "\\"`\'><script>\\\\xE2\\\\x80\\\\x80javascript:alert(1)</script>", \n "\\"`\'><script>\\\\x21javascript:alert(1)</script>", \n "\\"`\'><script>\\\\xE2\\\\x80\\\\x82javascript:alert(1)</script>", \n "\\"`\'><script>\\\\xE2\\\\x80\\\\x86javascript:alert(1)</script>", \n "\\"`\'><script>\\\\xE1\\\\xA0\\\\x8Ejavascript:alert(1)</script>", \n "\\"`\'><script>\\\\x0Bjavascript:alert(1)</script>", \n "\\"`\'><script>\\\\x20javascript:alert(1)</script>", \n "\\"`\'><script>\\\\xC2\\\\xA0javascript:alert(1)</script>", \n "<img \\\\x00src=x onerror=\\"alert(1)\\">", \n "<img \\\\x47src=x onerror=\\"javascript:alert(1)\\">", \n "<img \\\\x11src=x onerror=\\"javascript:alert(1)\\">", \n "<img \\\\x12src=x onerror=\\"javascript:alert(1)\\">", \n "<img\\\\x47src=x onerror=\\"javascript:alert(1)\\">", \n "<img\\\\x10src=x onerror=\\"javascript:alert(1)\\">", \n "<img\\\\x13src=x onerror=\\"javascript:alert(1)\\">", \n "<img\\\\x32src=x onerror=\\"javascript:alert(1)\\">", \n "<img\\\\x47src=x onerror=\\"javascript:alert(1)\\">", \n "<img\\\\x11src=x onerror=\\"javascript:alert(1)\\">", \n "<img \\\\x47src=x onerror=\\"javascript:alert(1)\\">", \n "<img \\\\x34src=x onerror=\\"javascript:alert(1)\\">", \n "<img \\\\x39src=x onerror=\\"javascript:alert(1)\\">", \n "<img \\\\x00src=x onerror=\\"javascript:alert(1)\\">", \n "<img src\\\\x09=x onerror=\\"javascript:alert(1)\\">", \n "<img src\\\\x10=x onerror=\\"javascript:alert(1)\\">", \n "<img src\\\\x13=x onerror=\\"javascript:alert(1)\\">", \n "<img src\\\\x32=x onerror=\\"javascript:alert(1)\\">", \n "<img src\\\\x12=x onerror=\\"javascript:alert(1)\\">", \n "<img src\\\\x11=x onerror=\\"javascript:alert(1)\\">", \n "<img src\\\\x00=x onerror=\\"javascript:alert(1)\\">", \n "<img src\\\\x47=x onerror=\\"javascript:alert(1)\\">", \n "<img src=x\\\\x09onerror=\\"javascript:alert(1)\\">", \n "<img src=x\\\\x10onerror=\\"javascript:alert(1)\\">", \n "<img src=x\\\\x11onerror=\\"javascript:alert(1)\\">", \n "<img src=x\\\\x12onerror=\\"javascript:alert(1)\\">", \n "<img src=x\\\\x13onerror=\\"javascript:alert(1)\\">", \n "<img[a][b][c]src[d]=x[e]onerror=[f]\\"alert(1)\\">", \n "<img src=x onerror=\\\\x09\\"javascript:alert(1)\\">", \n "<img src=x onerror=\\\\x10\\"javascript:alert(1)\\">", \n "<img src=x onerror=\\\\x11\\"javascript:alert(1)\\">", \n "<img src=x onerror=\\\\x12\\"javascript:alert(1)\\">", \n "<img src=x onerror=\\\\x32\\"javascript:alert(1)\\">", \n "<img src=x onerror=\\\\x00\\"javascript:alert(1)\\">", \n "<a href=java&#1&#2&#3&#4&#5&#6&#7&#8&#11&#12script:javascript:alert(1)>XXX</a>", \n "<img src=\\"x` `<script>javascript:alert(1)</script>\\"` `>", \n "<img src onerror /\\" \'\\"= alt=javascript:alert(1)//\\">", \n "<title onpropertychange=javascript:alert(1)></title><title title=>", \n "<a href=http://foo.bar/#x=`y></a><img alt=\\"`><img src=x:x onerror=javascript:alert(1)></a>\\">", \n "<!--[if]><script>javascript:alert(1)</script -->", \n "<!--[if<img src=x onerror=javascript:alert(1)//]> -->", \n "<script src=\\"/\\\\%(jscript)s\\"></script>", \n "<script src=\\"\\\\\\\\%(jscript)s\\"></script>", \n "<IMG \\"\\"\\"><SCRIPT>alert(\\"XSS\\")</SCRIPT>\\">", \n "<IMG SRC=javascript:alert(String.fromCharCode(88,83,83))>", \n "<IMG SRC=# onmouseover=\\"alert(\'xxs\')\\">", \n "<IMG SRC= onmouseover=\\"alert(\'xxs\')\\">", \n "<IMG onmouseover=\\"alert(\'xxs\')\\">", \n "<IMG SRC=&#106;&#97;&#118;&#97;&#115;&#99;&#114;&#105;&#112;&#116;&#58;&#97;&#108;&#101;&#114;&#116;&#40;&#39;&#88;&#83;&#83;&#39;&#41;>", \n "<IMG SRC=&#0000106&#0000097&#0000118&#0000097&#0000115&#0000099&#0000114&#0000105&#0000112&#0000116&#0000058&#0000097&#0000108&#0000101&#0000114&#0000116&#0000040&#0000039&#0000088&#0000083&#0000083&#0000039&#0000041>", \n "<IMG SRC=&#x6A&#x61&#x76&#x61&#x73&#x63&#x72&#x69&#x70&#x74&#x3A&#x61&#x6C&#x65&#x72&#x74&#x28&#x27&#x58&#x53&#x53&#x27&#x29>", \n "<IMG SRC=\\"jav ascript:alert(\'XSS\');\\">", \n "<IMG SRC=\\"jav&#x09;ascript:alert(\'XSS\');\\">", \n "<IMG SRC=\\"jav&#x0A;ascript:alert(\'XSS\');\\">", \n "<IMG SRC=\\"jav&#x0D;ascript:alert(\'XSS\');\\">", \n "perl -e \'print \\"<IMG SRC=java\\\\0script:alert(\\\\\\"XSS\\\\\\")>\\";\' > out", \n "<IMG SRC=\\" &#14; javascript:alert(\'XSS\');\\">", \n "<SCRIPT/XSS SRC=\\"http://ha.ckers.org/xss.js\\"></SCRIPT>", \n "<BODY onload!#$%&()*~+-_.,:;?@[/|\\\\]^`=alert(\\"XSS\\")>", \n "<SCRIPT/SRC=\\"http://ha.ckers.org/xss.js\\"></SCRIPT>", \n "<<SCRIPT>alert(\\"XSS\\");//<</SCRIPT>", \n "<SCRIPT SRC=http://ha.ckers.org/xss.js?< B >", \n "<SCRIPT SRC=//ha.ckers.org/.j>", \n "<IMG SRC=\\"javascript:alert(\'XSS\')\\"", \n "<iframe src=http://ha.ckers.org/scriptlet.html <", \n "\\\\\\";alert(\'XSS\');//", \n "<u oncopy=alert()> Copy me</u>", \n "<i onwheel=alert(1)> Scroll over me </i>", \n "<plaintext>", \n "http://a/%%30%30", \n "</textarea><script>alert(123)</script>", \n "1;DROP TABLE users", \n "1\'; DROP TABLE users-- 1", \n "\' OR 1=1 -- 1", \n "\' OR \'1\'=\'1", \n "\'; EXEC sp_MSForEachTable \'DROP TABLE ?\'; --",\n " ", \n "%", \n "_", \n "-", \n "--", \n "--version", \n "--help", \n "$USER", \n "/dev/null; touch /tmp/blns.fail ; echo", \n "`touch /tmp/blns.fail`", \n "$(touch /tmp/blns.fail)", \n "@{[system \\"touch /tmp/blns.fail\\"]}", \n "eval(\\"puts \'hello world\'\\")", \n "System(\\"ls -al /\\")", \n "`ls -al /`", \n "Kernel.exec(\\"ls -al /\\")", \n "Kernel.exit(1)", \n "%x(\'ls -al /\')", \n "<?xml version=\\"1.0\\" encoding=\\"ISO-8859-1\\"?><!DOCTYPE foo [ <!ELEMENT foo ANY ><!ENTITY xxe SYSTEM \\"file:///etc/passwd\\" >]><foo>&xxe;</foo>", \n "$HOME", \n "$ENV{\'HOME\'}", \n "%d", \n "%s%s%s%s%s", \n "{0}", \n "%*.*s", \n "%@", \n "%n", \n "File:///", \n "../../../../../../../../../../../etc/passwd%00", \n "../../../../../../../../../../../etc/hosts", \n "() { 0; }; touch /tmp/blns.shellshock1.fail;", \n "() { _; } >_[$($())] { touch /tmp/blns.shellshock2.fail; }", \n "<<< %s(un=\'%s\') = %u", \n "+++ATH0", \n "CON", \n "PRN", \n "AUX", \n "CLOCK$", \n "NUL", \n "A:", \n "ZZ:", \n "COM1", \n "LPT1", \n "LPT2", \n "LPT3", \n "COM2", \n "COM3", \n "COM4", \n "DCC SEND STARTKEYLOGGER 0 0 0", \n "Scunthorpe General Hospital", \n "Penistone Community Church", \n "Lightwater Country Park", \n "Jimmy Clitheroe", \n "Horniman Museum", \n "shitake mushrooms", \n "RomansInSussex.co.uk", \n "http://www.cum.qc.ca/", \n "Craig Cockburn, Software Specialist", \n "Linda Callahan", \n "Dr. Herman I. Libshitz", \n "magna cum laude", \n "Super Bowl XXX", \n "medieval erection of parapets", \n "evaluate", \n "mocha", \n "expression", \n "Arsenal canal", \n "classic", \n "Tyson Gay", \n "Dick Van Dyke", \n "basement", \n "If you\'re reading this, you\'ve been in a coma for almost 20 years now. We\'re trying a new technique. We don\'t know where this message will end up in your dream, but we hope it works. Please wake up, we miss you.", \n "Roses are \\u001b[0;31mred\\u001b[0m, violets are \\u001b[0;34mblue. Hope you enjoy terminal hue", \n "But now...\\u001b[20Cfor my greatest trick...\\u001b[8m", \n "The quic\\b\\b\\b\\b\\b\\bk brown fo\\u0007\\u0007\\u0007\\u0007\\u0007\\u0007\\u0007\\u0007\\u0007\\u0007\\u0007x... [Beeeep]", \n "PowerÃÂÃÂÃÂÃÂÃÂµÃÂÃÂ¨ÃÂÃÂÃÂÃÂÃÂµÃÂÃÂ¨ÃÂÃÂ±ÃÂ±ÃÂ Ã Â¥Â£ Ã Â¥Â£h Ã Â¥Â£ Ã Â¥Â£Ã¥ÂÂ", \n "Ã°ÂÂÂ³0Ã°ÂÂÂÃ¯Â¸Â",\n "Ã Â°ÂÃ Â±ÂÃ Â°ÂÃ¢ÂÂÃ Â°Â¾",\n "ÃÂ¯ÃÂÃÂ¾ÃÂ",\n "{% print \'x\' * 64 * 1024**3 %}",\n "{{ \\"\\".__class__.__mro__[2].__subclasses__()[40](\\"/etc/passwd\\").read() }}"\n]\n}', 'x', 'Array(String)') FORMAT Values;
SELECT toRelativeSecondNum(toDateTime(1412106600), 'Europe/London') - toRelativeSecondNum(toDateTime(0), 'Europe/London');
CREATE TABLE test_02250 (`field_1` Int32, `field_2` Int32, `field_3` Int32, `field_4` Int32, `field_5` Int32, `field_6` Int32, `field_7` Int32, `field_8` Int32, `field_9` Int32, `field_10` Int32, `field_11` Int32, `field_12` Int32, `field_13` Int32, `field_14` Int32, `field_15` Int32, `field_16` Int32, `field_17` Int32, `field_18` Int32, `field_19` Int32, `field_20` Int32, `field_21` Int32, `field_22` Int32, `field_23` Int32, `field_24` Int32, `field_25` Int32, `field_26` Int32, `field_27` Int32, `field_28` Int32, `field_29` Int32, `field_30` Int32, `field_31` Int32, `field_32` Int32, `field_33` Int32, `field_34` Int32, `field_35` Int32, `field_36` Int32, `field_37` Int32, `field_38` Int32, `field_39` Int32, `field_40` Int32, `field_41` Int32, `field_42` Int32, `field_43` Int32, `field_44` Int32, `field_45` Int32, `field_46` Int32, `field_47` Int32, `field_48` Int32, `field_49` Int32, `field_50` Int32, `field_51` Int32, `field_52` Int32, `field_53` Int32, `field_54` Int32, `field_55` Int32, `field_56` Int32, `field_57` Int32, `field_58` Int32, `field_59` Int32, `field_60` Int32, `field_61` Int32, `field_62` Int32, `field_63` Int32, `field_64` Int32, `field_65` Int32, `field_66` Int32, `field_67` Int32, `field_68` Int32, `field_69` Int32, `field_70` Int32, `field_71` Int32, `field_72` Int32, `field_73` Int32, `field_74` Int32, `field_75` Int32, `field_76` Int32, `field_77` Int32, `field_78` Int32, `field_79` Int32, `field_80` Int32, `field_81` Int32, `field_82` Int32, `field_83` Int32, `field_84` Int32, `field_85` Int32, `field_86` Int32, `field_87` Int32, `field_88` Int32, `field_89` Int32, `field_90` Int32, `field_91` Int32, `field_92` Int32, `field_93` Int32, `field_94` Int32, `field_95` Int32, `field_96` Int32, `field_97` Int32, `field_98` Int32, `field_99` Int32, `field_100` Int32, `field_101` Int32, `field_102` Int32, `field_103` Int32, `field_104` Int32, `field_105` Int32, `field_106` Int32, `field_107` Int32, `field_108` Int32, `field_109` Int32, `field_110` Int32, `field_111` Int32, `field_112` Int32, `field_113` Int32, `field_114` Int32, `field_115` Int32, `field_116` Int32, `field_117` Int32, `field_118` Int32, `field_119` Int32, `field_120` Int32, `field_121` Int32, `field_122` Int32, `field_123` Int32, `field_124` Int32, `field_125` Int32, `field_126` Int32, `field_127` Int32, `field_128` Int32, `field_129` Int32, `field_130` Int32, `field_131` Int32, `field_132` Int32, `field_133` Int32, `field_134` Int32, `field_135` Int32, `field_136` Int32, `field_137` Int32, `field_138` Int32, `field_139` Int32, `field_140` Int32, `field_141` Int32, `field_142` Int32, `field_143` Int32, `field_144` Int32, `field_145` Int32, `field_146` Int32, `field_147` Int32, `field_148` Int32, `field_149` Int32, `field_150` Int32, `field_151` Int32, `field_152` Int32, `field_153` Int32, `field_154` Int32, `field_155` Int32, `field_156` Int32, `field_157` Int32, `field_158` Int32, `field_159` Int32, `field_160` Int32, `field_161` Int32, `field_162` Int32, `field_163` Int32, `field_164` Int32, `field_165` Int32, `field_166` Int32, `field_167` Int32, `field_168` Int32, `field_169` Int32, `field_170` Int32, `field_171` Int32, `field_172` Int32, `field_173` Int32, `field_174` Int32, `field_175` Int32, `field_176` Int32, `field_177` Int32, `field_178` Int32, `field_179` Int32, `field_180` Int32, `field_181` Int32, `field_182` Int32, `field_183` Int32, `field_184` Int32, `field_185` Int32, `field_186` Int32, `field_187` Int32, `field_188` Int32, `field_189` Int32, `field_190` Int32, `field_191` Int32, `field_192` Int32, `field_193` Int32, `field_194` Int32, `field_195` Int32, `field_196` Int32, `field_197` Int32, `field_198` Int32, `field_199` Int32, `field_200` Int32, `field_201` Int32, `field_202` Int32, `field_203` Int32, `field_204` Int32, `field_205` Int32, `field_206` Int32, `field_207` Int32, `field_208` Int32, `field_209` Int32, `field_210` Int32, `field_211` Int32, `field_212` Int32, `field_213` Int32, `field_214` Int32, `field_215` Int32, `field_216` Int32, `field_217` Int32, `field_218` Int32, `field_219` Int32, `field_220` Int32, `field_221` Int32, `field_222` Int32, `field_223` Int32, `field_224` Int32, `field_225` Int32, `field_226` Int32, `field_227` Int32, `field_228` Int32, `field_229` Int32, `field_230` Int32, `field_231` Int32, `field_232` Int32, `field_233` Int32, `field_234` Int32, `field_235` Int32, `field_236` Int32, `field_237` Int32, `field_238` Int32, `field_239` Int32, `field_240` Int32, `field_241` Int32, `field_242` Int32, `field_243` Int32, `field_244` Int32, `field_245` Int32, `field_246` Int32, `field_247` Int32, `field_248` Int32, `field_249` Int32, `field_250` Int32, `field_251` Int32, `field_252` Int32, `field_253` Int32, `field_254` Int32, `field_255` Int32, `field_256` Int32, `field_257` Int32) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 58621, min_bytes_for_wide_part = 187240816, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 18561, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 248857955, index_granularity_bytes = 6598316, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 67741, primary_key_compress_block_size = 70207
SELECT avg(f32 + f64) FROM test_01035_avg;
select hasSubsequence('garbage', 'arbw');
SELECT addYears(NULL, NULL, NULL);
SELECT multiIf(1, [col2, 'bar'], 1, [col4, col5], ['foo', col7]) FROM multi_if_check;
CREATE TABLE t_projections_lwd (`a` UInt32, `b` UInt32, PROJECTION p (SELECT * ORDER BY b)) ENGINE = MergeTree ORDER BY a SETTINGS index_granularity = 28471, min_bytes_for_wide_part = 455573481, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 5776, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 20526777, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 16086, primary_key_compress_block_size = 9742
CREATE TABLE summing_merge_tree (d Date, a String, x UInt32, y UInt64, z Float64) ENGINE = SummingMergeTree(d, a, 8192, (y, z));
CREATE TABLE test_01193_18429.table_1_589 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
explain syntax select min((n as a) + (1 as b)) c from (select number n from numbers(10)) where a > 0 and b > 0 having c > 0;
CREATE DATABASE IF NOT EXISTS test_l7dzji4e 
CREATE TABLE set (val UInt64) ENGINE = Set() SETTINGS persistent=1;
SELECT * FROM t;
create table dist_01670 (key Int) engine=Distributed(test_shard_localhost, currentDatabase(), data_01670) settings bytes_to_throw_insert=1;
CREATE TABLE test_01193_18429.table_6_67 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_225D26457534603C2346634D513456214A656A3A495563742F426D4870767D39203D516732416F6A(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS tt_01373;
SELECT _state FROM system.parts FORMAT Null;
CREATE TABLE test_01193_18429.table_10_988 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_sgkl3oov 
SELECT toDecimal256OrZero ('54.1234567', 4);
SELECT count() FROM t_cnf_fuzz WHERE (c6 AND c2 AND (NOT c6)) OR (c8) SETTINGS convert_query_to_cnf = 0
SELECT 'Running test stateless/01276_random_string.sql from pid=1722' 
CREATE TABLE test_51292871423D2B7161677C78434325403927562D38673763694F7A79365235622C5139332B745B27(x UInt8) Engine=Memory;
SELECT * FROM merge(currentDatabase(), 'test_distributed_1|test_distributed_2') WHERE _table = 'test_distributed_1';
select key, groupArray(repeat('a', 200)), count() from data_01513 group by key format Null settings optimize_aggregation_in_order=1;
alter table many_mutations delete where y = 261 * 2 settings mutations_sync = 0;
CREATE TABLE test_6A63477743786941453C716842537B3B7138313942367969416B6B71316D50712667627751552F7E(x UInt8) Engine=Memory;
SELECT byteSwap(4294967296::UInt64);
INSERT INTO test_01193_18429.table_4_511 VALUES 
SELECT * FROM TestView ORDER BY key;
INSERT INTO test_01193_18429.table_6_727 VALUES 
SELECT 'Running test stateless/01383_log_broken_table.sh from pid=1718' 
CREATE DATABASE IF NOT EXISTS test_9jlm2l5j 
CREATE TABLE test_01193_18429.table_1_852 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP TABLE IF EXISTS test5;
SELECT 'SELECT addQuarters(N, 1, \'Asia/Istanbul\')';
select 1 != any (select 1 from numbers(10));
CREATE TABLE test_4C59515C3977594836624C352D2B757C482447503C296941303977374C6E4F6272453F4F543E2B5C(x UInt8) Engine=Memory;
SYSTEM SYNC REPLICA clear_column2;
SELECT moduloLegacy(NULL, NULL);
create table merge2 ( CounterID UInt32, StartDate Date, Sign Int8, VisitID UInt64, UserID UInt64, StartTime DateTime, ClickLogID UInt64) ENGINE = CollapsingMergeTree(StartDate, intHash32(UserID), tuple(CounterID, StartDate, intHash32(UserID), VisitID, ClickLogID), 8192, Sign);
SELECT '0', '9007199254740991.000000000', 0 = 9007199254740991.000000000, 0 != 9007199254740991.000000000, 0 < 9007199254740991.000000000, 0 <= 9007199254740991.000000000, 0 > 9007199254740991.000000000, 0 >= 9007199254740991.000000000, 9007199254740991.000000000 = 0, 9007199254740991.000000000 != 0, 9007199254740991.000000000 < 0, 9007199254740991.000000000 <= 0, 9007199254740991.000000000 > 0, 9007199254740991.000000000 >= 0 , toUInt8(0) = 9007199254740991.000000000, toUInt8(0) != 9007199254740991.000000000, toUInt8(0) < 9007199254740991.000000000, toUInt8(0) <= 9007199254740991.000000000, toUInt8(0) > 9007199254740991.000000000, toUInt8(0) >= 9007199254740991.000000000, 9007199254740991.000000000 = toUInt8(0), 9007199254740991.000000000 != toUInt8(0), 9007199254740991.000000000 < toUInt8(0), 9007199254740991.000000000 <= toUInt8(0), 9007199254740991.000000000 > toUInt8(0), 9007199254740991.000000000 >= toUInt8(0) , toInt8(0) = 9007199254740991.000000000, toInt8(0) != 9007199254740991.000000000, toInt8(0) < 9007199254740991.000000000, toInt8(0) <= 9007199254740991.000000000, toInt8(0) > 9007199254740991.000000000, toInt8(0) >= 9007199254740991.000000000, 9007199254740991.000000000 = toInt8(0), 9007199254740991.000000000 != toInt8(0), 9007199254740991.000000000 < toInt8(0), 9007199254740991.000000000 <= toInt8(0), 9007199254740991.000000000 > toInt8(0), 9007199254740991.000000000 >= toInt8(0) , toUInt16(0) = 9007199254740991.000000000, toUInt16(0) != 9007199254740991.000000000, toUInt16(0) < 9007199254740991.000000000, toUInt16(0) <= 9007199254740991.000000000, toUInt16(0) > 9007199254740991.000000000, toUInt16(0) >= 9007199254740991.000000000, 9007199254740991.000000000 = toUInt16(0), 9007199254740991.000000000 != toUInt16(0), 9007199254740991.000000000 < toUInt16(0), 9007199254740991.000000000 <= toUInt16(0), 9007199254740991.000000000 > toUInt16(0), 9007199254740991.000000000 >= toUInt16(0) , toInt16(0) = 9007199254740991.000000000, toInt16(0) != 9007199254740991.000000000, toInt16(0) < 9007199254740991.000000000, toInt16(0) <= 9007199254740991.000000000, toInt16(0) > 9007199254740991.000000000, toInt16(0) >= 9007199254740991.000000000, 9007199254740991.000000000 = toInt16(0), 9007199254740991.000000000 != toInt16(0), 9007199254740991.000000000 < toInt16(0), 9007199254740991.000000000 <= toInt16(0), 9007199254740991.000000000 > toInt16(0), 9007199254740991.000000000 >= toInt16(0) , toUInt32(0) = 9007199254740991.000000000, toUInt32(0) != 9007199254740991.000000000, toUInt32(0) < 9007199254740991.000000000, toUInt32(0) <= 9007199254740991.000000000, toUInt32(0) > 9007199254740991.000000000, toUInt32(0) >= 9007199254740991.000000000, 9007199254740991.000000000 = toUInt32(0), 9007199254740991.000000000 != toUInt32(0), 9007199254740991.000000000 < toUInt32(0), 9007199254740991.000000000 <= toUInt32(0), 9007199254740991.000000000 > toUInt32(0), 9007199254740991.000000000 >= toUInt32(0) , toInt32(0) = 9007199254740991.000000000, toInt32(0) != 9007199254740991.000000000, toInt32(0) < 9007199254740991.000000000, toInt32(0) <= 9007199254740991.000000000, toInt32(0) > 9007199254740991.000000000, toInt32(0) >= 9007199254740991.000000000, 9007199254740991.000000000 = toInt32(0), 9007199254740991.000000000 != toInt32(0), 9007199254740991.000000000 < toInt32(0), 9007199254740991.000000000 <= toInt32(0), 9007199254740991.000000000 > toInt32(0), 9007199254740991.000000000 >= toInt32(0) , toUInt64(0) = 9007199254740991.000000000, toUInt64(0) != 9007199254740991.000000000, toUInt64(0) < 9007199254740991.000000000, toUInt64(0) <= 9007199254740991.000000000, toUInt64(0) > 9007199254740991.000000000, toUInt64(0) >= 9007199254740991.000000000, 9007199254740991.000000000 = toUInt64(0), 9007199254740991.000000000 != toUInt64(0), 9007199254740991.000000000 < toUInt64(0), 9007199254740991.000000000 <= toUInt64(0), 9007199254740991.000000000 > toUInt64(0), 9007199254740991.000000000 >= toUInt64(0) , toInt64(0) = 9007199254740991.000000000, toInt64(0) != 9007199254740991.000000000, toInt64(0) < 9007199254740991.000000000, toInt64(0) <= 9007199254740991.000000000, toInt64(0) > 9007199254740991.000000000, toInt64(0) >= 9007199254740991.000000000, 9007199254740991.000000000 = toInt64(0), 9007199254740991.000000000 != toInt64(0), 9007199254740991.000000000 < toInt64(0), 9007199254740991.000000000 <= toInt64(0), 9007199254740991.000000000 > toInt64(0), 9007199254740991.000000000 >= toInt64(0) ;
INSERT INTO test_01193_18429.table_8_996 VALUES 
CREATE TABLE test_44766C255A4240214B633A505C3353425E5A2F453777244A526E553B6A384A227D4C443230553C6B(x UInt8) Engine=Memory;
SELECT * FROM t1 ALL INNER JOIN tjj ON t1.key1 = tjj.key1 AND t1.key1 = tjj.key3 AND t1.key1 = tjj.key2 ORDER BY t1.key1;
CREATE DATABASE IF NOT EXISTS test_4s56a52o 
SELECT 'Running test stateless/02345_implicit_transaction.sql from pid=1718' 
CREATE TABLE test_01193_18429.table_3_548 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_1_968 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT addQuarters(NULL);
CREATE DATABASE IF NOT EXISTS test_wd66p3gj 
INSERT INTO test_01193_18429.table_7_935 VALUES 
select [0] = multiSearchAllPositions(materialize('abc'), ['abcdefg']) from system.numbers limit 10;
SELECT 'Running test stateless/00392_enum_nested_alter.sql from pid=1713' 
select hasSubsequenceCaseInsensitive('GARGAGE', 'arg');
INSERT INTO test_01193_18429.table_1_910 VALUES 
SELECT id, query, formatQuerySingleLineOrNull(query) FROM all_valid ORDER BY id;
DROP TABLE IF EXISTS nullable_00457;
select t1.a as t1_a, t2.a as t2_a, t2.b as t2_b, t3.b as t3_b from table1 as t1 join table2 as t2 on t1.a = t2.a join table3 as t3 on t2.b = t3.b ORDER BY t1.a;
SELECT s, replaceAll(s, '_', 'o') AS a, replaceRegexpAll(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['__.__', '__.']) AS s);
SELECT toInt32OrZero('');
SELECT * FROM s3Cluster('test_cluster_one_shard_three_replicas_localhost', 'http://localhost:11111/test/{a,b}.tsv', NOSIGN, '[HIDDEN]', 'auto', 'auto') ORDER BY c1 ASC, c2 ASC, c3 ASC
CREATE TABLE promotion (`p_promo_sk` Int64, `p_promo_id` String, `p_start_date_sk` Nullable(Int64), `p_end_date_sk` Nullable(Int64), `p_item_sk` Nullable(Int64), `p_cost` Nullable(Float64), `p_response_target` Nullable(Int64), `p_promo_name` Nullable(String), `p_channel_dmail` Nullable(String), `p_channel_email` Nullable(String), `p_channel_catalog` Nullable(String), `p_channel_tv` Nullable(String), `p_channel_radio` Nullable(String), `p_channel_press` Nullable(String), `p_channel_event` Nullable(String), `p_channel_demo` Nullable(String), `p_channel_details` Nullable(String), `p_purpose` Nullable(String), `p_discount_active` Nullable(String)) ENGINE = MergeTree ORDER BY p_promo_sk SETTINGS index_granularity = 54709, min_bytes_for_wide_part = 729090018, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 22777, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 256871, vertical_merge_algorithm_min_columns_to_activate = 36, min_merge_bytes_to_use_direct_io = 7728769504, index_granularity_bytes = 9282957, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 19664, primary_key_compress_block_size = 11428
SELECT 4294967295, -2147483648, 4294967295 = -2147483648, 4294967295 != -2147483648, 4294967295 < -2147483648, 4294967295 <= -2147483648, 4294967295 > -2147483648, 4294967295 >= -2147483648, -2147483648 = 4294967295, -2147483648 != 4294967295, -2147483648 < 4294967295, -2147483648 <= 4294967295, -2147483648 > 4294967295, -2147483648 >= 4294967295 , toUInt32(4294967295) = toInt32(-2147483648), toUInt32(4294967295) != toInt32(-2147483648), toUInt32(4294967295) < toInt32(-2147483648), toUInt32(4294967295) <= toInt32(-2147483648), toUInt32(4294967295) > toInt32(-2147483648), toUInt32(4294967295) >= toInt32(-2147483648), toInt32(-2147483648) = toUInt32(4294967295), toInt32(-2147483648) != toUInt32(4294967295), toInt32(-2147483648) < toUInt32(4294967295), toInt32(-2147483648) <= toUInt32(4294967295), toInt32(-2147483648) > toUInt32(4294967295), toInt32(-2147483648) >= toUInt32(4294967295) , toUInt32(4294967295) = toInt64(-2147483648), toUInt32(4294967295) != toInt64(-2147483648), toUInt32(4294967295) < toInt64(-2147483648), toUInt32(4294967295) <= toInt64(-2147483648), toUInt32(4294967295) > toInt64(-2147483648), toUInt32(4294967295) >= toInt64(-2147483648), toInt64(-2147483648) = toUInt32(4294967295), toInt64(-2147483648) != toUInt32(4294967295), toInt64(-2147483648) < toUInt32(4294967295), toInt64(-2147483648) <= toUInt32(4294967295), toInt64(-2147483648) > toUInt32(4294967295), toInt64(-2147483648) >= toUInt32(4294967295) , toUInt64(4294967295) = toInt32(-2147483648), toUInt64(4294967295) != toInt32(-2147483648), toUInt64(4294967295) < toInt32(-2147483648), toUInt64(4294967295) <= toInt32(-2147483648), toUInt64(4294967295) > toInt32(-2147483648), toUInt64(4294967295) >= toInt32(-2147483648), toInt32(-2147483648) = toUInt64(4294967295), toInt32(-2147483648) != toUInt64(4294967295), toInt32(-2147483648) < toUInt64(4294967295), toInt32(-2147483648) <= toUInt64(4294967295), toInt32(-2147483648) > toUInt64(4294967295), toInt32(-2147483648) >= toUInt64(4294967295) , toUInt64(4294967295) = toInt64(-2147483648), toUInt64(4294967295) != toInt64(-2147483648), toUInt64(4294967295) < toInt64(-2147483648), toUInt64(4294967295) <= toInt64(-2147483648), toUInt64(4294967295) > toInt64(-2147483648), toUInt64(4294967295) >= toInt64(-2147483648), toInt64(-2147483648) = toUInt64(4294967295), toInt64(-2147483648) != toUInt64(4294967295), toInt64(-2147483648) < toUInt64(4294967295), toInt64(-2147483648) <= toUInt64(4294967295), toInt64(-2147483648) > toUInt64(4294967295), toInt64(-2147483648) >= toUInt64(4294967295) , toInt64(4294967295) = toInt32(-2147483648), toInt64(4294967295) != toInt32(-2147483648), toInt64(4294967295) < toInt32(-2147483648), toInt64(4294967295) <= toInt32(-2147483648), toInt64(4294967295) > toInt32(-2147483648), toInt64(4294967295) >= toInt32(-2147483648), toInt32(-2147483648) = toInt64(4294967295), toInt32(-2147483648) != toInt64(4294967295), toInt32(-2147483648) < toInt64(4294967295), toInt32(-2147483648) <= toInt64(4294967295), toInt32(-2147483648) > toInt64(4294967295), toInt32(-2147483648) >= toInt64(4294967295) , toInt64(4294967295) = toInt64(-2147483648), toInt64(4294967295) != toInt64(-2147483648), toInt64(4294967295) < toInt64(-2147483648), toInt64(4294967295) <= toInt64(-2147483648), toInt64(4294967295) > toInt64(-2147483648), toInt64(4294967295) >= toInt64(-2147483648), toInt64(-2147483648) = toInt64(4294967295), toInt64(-2147483648) != toInt64(4294967295), toInt64(-2147483648) < toInt64(4294967295), toInt64(-2147483648) <= toInt64(4294967295), toInt64(-2147483648) > toInt64(4294967295), toInt64(-2147483648) >= toInt64(4294967295) 
INSERT INTO src VALUES /* (-1, 1) */ 
DROP DATABASE IF EXISTS test_3di653z5 
INSERT INTO alter_00121 VALUES 
select runningDifference(x) from (select arrayJoin([Null, 1]) as x);
CREATE TABLE test_01193_18429.table_3_702 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT sipHash64Keyed((toUInt64(0), toUInt64(0)), 1, 'test');
SELECT 9, toFixedString('Hello', 10), bin(bitShiftLeft(toFixedString('Hello', 10), 9));
CREATE TABLE test_02908_r3_300 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_300', 'r3') ORDER BY tuple()
SELECT intDiv(toDecimal64(4.4, 2), toDecimal64(2.2, 2));
CREATE TABLE test1_00395(col1 Array(Nullable(UInt8)), col2 String) ENGINE=TinyLog;
INSERT INTO test_02908_r1_245 SELECT rand64() FROM numbers(5);
DROP DATABASE IF EXISTS test_qwrzijzb 
INSERT INTO test_01193_18429.table_9_323 VALUES 
CREATE TABLE rep_fsync_r1 (`key` Int) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/rep_fsync', 'r1') ORDER BY key SETTINGS min_bytes_for_wide_part = 0, fsync_after_insert = 1, fsync_part_directory = 1, index_granularity = 25801, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 79, merge_max_block_size = 9385, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 853151, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 5985280, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 59185, primary_key_compress_block_size = 77080
SET output_format_pretty_row_numbers=1;
OPTIMIZE TABLE ttl_repl2 FINAL SETTINGS optimize_throw_if_noop = 1
SELECT * FROM system.query_cache LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
CREATE DATABASE IF NOT EXISTS test_oukwz8qk 
DROP TABLE IF EXISTS test_race_condition_mv_4
SELECT materialize('ÃÂÃÂÃÂ¸ÃÂ²ÃÂµÃÂ, World') AS s WHERE (s LIKE 'hell%') OR (s LIKE '%ÃÂ¿ÃÂÃÂ¸ÃÂ²ÃÂµÃÂ%') OR (s ILIKE '%world') SETTINGS optimize_or_like_chain = 0, allow_experimental_analyzer = 1;
select number, number + 1, concat('string: ', toString(number)) from numbers(200000) format RowBinaryWithNames
INSERT INTO test_01193_18429.table_7_983 VALUES 
alter table src update A = 5 where 1 settings mutations_sync=2
SELECT '1', '0.000000000', 1 = 0.000000000, 1 != 0.000000000, 1 < 0.000000000, 1 <= 0.000000000, 1 > 0.000000000, 1 >= 0.000000000, 0.000000000 = 1, 0.000000000 != 1, 0.000000000 < 1, 0.000000000 <= 1, 0.000000000 > 1, 0.000000000 >= 1 , toUInt8(1) = 0.000000000, toUInt8(1) != 0.000000000, toUInt8(1) < 0.000000000, toUInt8(1) <= 0.000000000, toUInt8(1) > 0.000000000, toUInt8(1) >= 0.000000000, 0.000000000 = toUInt8(1), 0.000000000 != toUInt8(1), 0.000000000 < toUInt8(1), 0.000000000 <= toUInt8(1), 0.000000000 > toUInt8(1), 0.000000000 >= toUInt8(1) , toInt8(1) = 0.000000000, toInt8(1) != 0.000000000, toInt8(1) < 0.000000000, toInt8(1) <= 0.000000000, toInt8(1) > 0.000000000, toInt8(1) >= 0.000000000, 0.000000000 = toInt8(1), 0.000000000 != toInt8(1), 0.000000000 < toInt8(1), 0.000000000 <= toInt8(1), 0.000000000 > toInt8(1), 0.000000000 >= toInt8(1) , toUInt16(1) = 0.000000000, toUInt16(1) != 0.000000000, toUInt16(1) < 0.000000000, toUInt16(1) <= 0.000000000, toUInt16(1) > 0.000000000, toUInt16(1) >= 0.000000000, 0.000000000 = toUInt16(1), 0.000000000 != toUInt16(1), 0.000000000 < toUInt16(1), 0.000000000 <= toUInt16(1), 0.000000000 > toUInt16(1), 0.000000000 >= toUInt16(1) , toInt16(1) = 0.000000000, toInt16(1) != 0.000000000, toInt16(1) < 0.000000000, toInt16(1) <= 0.000000000, toInt16(1) > 0.000000000, toInt16(1) >= 0.000000000, 0.000000000 = toInt16(1), 0.000000000 != toInt16(1), 0.000000000 < toInt16(1), 0.000000000 <= toInt16(1), 0.000000000 > toInt16(1), 0.000000000 >= toInt16(1) , toUInt32(1) = 0.000000000, toUInt32(1) != 0.000000000, toUInt32(1) < 0.000000000, toUInt32(1) <= 0.000000000, toUInt32(1) > 0.000000000, toUInt32(1) >= 0.000000000, 0.000000000 = toUInt32(1), 0.000000000 != toUInt32(1), 0.000000000 < toUInt32(1), 0.000000000 <= toUInt32(1), 0.000000000 > toUInt32(1), 0.000000000 >= toUInt32(1) , toInt32(1) = 0.000000000, toInt32(1) != 0.000000000, toInt32(1) < 0.000000000, toInt32(1) <= 0.000000000, toInt32(1) > 0.000000000, toInt32(1) >= 0.000000000, 0.000000000 = toInt32(1), 0.000000000 != toInt32(1), 0.000000000 < toInt32(1), 0.000000000 <= toInt32(1), 0.000000000 > toInt32(1), 0.000000000 >= toInt32(1) , toUInt64(1) = 0.000000000, toUInt64(1) != 0.000000000, toUInt64(1) < 0.000000000, toUInt64(1) <= 0.000000000, toUInt64(1) > 0.000000000, toUInt64(1) >= 0.000000000, 0.000000000 = toUInt64(1), 0.000000000 != toUInt64(1), 0.000000000 < toUInt64(1), 0.000000000 <= toUInt64(1), 0.000000000 > toUInt64(1), 0.000000000 >= toUInt64(1) , toInt64(1) = 0.000000000, toInt64(1) != 0.000000000, toInt64(1) < 0.000000000, toInt64(1) <= 0.000000000, toInt64(1) > 0.000000000, toInt64(1) >= 0.000000000, 0.000000000 = toInt64(1), 0.000000000 != toInt64(1), 0.000000000 < toInt64(1), 0.000000000 <= toInt64(1), 0.000000000 > toInt64(1), 0.000000000 >= toInt64(1) ;
SELECT CASE 1 WHEN 0 THEN 'ZERO' WHEN 1 THEN 'ONE' ELSE 'NONE' END AS result;
SELECT 'Running test stateless/01532_primary_key_without_order_by_zookeeper.sql from pid=1720' 
ATTACH TABLE test_hklfjq8i.tablefunc02
select mortonEncode((1,2,3,1), 1,2,3,4);
CREATE DATABASE IF NOT EXISTS test_01516_test_u75vly87;
CREATE TABLE test_01193_18429.table_4_2 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP DATABASE IF EXISTS test_55g0hslw 
SELECT number AS id, toString(number) AS s, range(number) AS arr FROM numbers(10) FORMAT Values
SELECT multiIf(1, toFixedString(col2, 16), (col1 % 3) = 0, toFixedString('bar', 16), col4) FROM multi_if_check;
CREATE TABLE test_01193_18429.table_7_912 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TEMPORARY TABLE tmp_log (n int);
DROP TABLE IF EXISTS test_01048.mt_2;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (57 < 79 AND 107 > 0 ? 57 : 0)), throwIf(last != (57 < 79 AND 107 > 0 ? least(79 - 1, 57 + 107 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(79) LIMIT 57, 107);
select countMatchesCaseInsensitive('foobarfoo', 'FOo.*');
CREATE TABLE test_01193_18429.table_1_686 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT count(*) FROM system.session_log WHERE user = '02834_USER_25758' and client_port = 0
INSERT INTO tab (k) VALUES 
CREATE DATABASE IF NOT EXISTS test_lcqm5o2q 
CREATE TABLE test_01193_18429.table_3_588 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 1 + arrayJoin(a) AS m FROM (SELECT [1, 2, 3] AS a) GROUP BY m;
/* Check Nested */ INSERT INTO test_table_2 FORMAT JSONCompactEachRowWithNamesAndTypes 
SET insert_deduplication_token = 'test';
SELECT arrayPartialShuffle([toFixedString('123', 3), toFixedString('456', 3), toFixedString('789', 3), toFixedString('ABC', 3), NULL], 0, 0xbad_cafe);
CREATE DATABASE IF NOT EXISTS test_epkuchwe 
CREATE TABLE test_table_compound ( id UInt64, tuple_value Tuple(value_1 UInt64, value_2 String) ) ENGINE=TinyLog;
INSERT INTO test_01193_18429.table_8_228 VALUES 
CREATE TABLE tt (`n` int) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 23174, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.16704043745994568, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 9607, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 45399, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 35988, primary_key_compress_block_size = 52109
SELECT CASE WHEN (number % 2) = 0 THEN [toInt32(1), toInt32(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toFloat64(3), toFloat64(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_2_374 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_10_657 VALUES 
DROP TABLE IF EXISTS too_many_parts;
INSERT INTO r4 SELECT 83 % 10 = 4 ? 83 - 1 : 83
select concat(materialize(toFixedString('a', 1)), materialize(toFixedString('b', 1)), 'c') == 'abc' from system.numbers limit 5;
insert into test_02127 settings format_custom_escaping_rule='Raw' format CustomSeparated
SELECT '', [];
SELECT d, k1, sumMerge(Sum), avgMerge(Avg), uniqMerge(Uniq), anyMerge(Any), anyIfMerge(AnyIf), arrayMap(x -> round(x, 6), quantilesMerge(0.5, 0.9)(Quantiles)), groupArrayMerge(GroupArray) FROM stored_aggregates GROUP BY d, k1 ORDER BY d, k1;
SELECT pointInPolygon((-inf, 1023), [(10.000100135803223, 10000000000.), (inf, 0.9998999834060669), (1.1920928955078125e-7, 100.0000991821289), (1.000100016593933, 100.0000991821289)]);
select 1 = multiSearchAny(materialize('abcdefgh'), ['b']) from system.numbers limit 10;
SELECT and(CAST(1 AS Int8),CAST( 0 AS Nullable(Int8)));
CREATE TABLE summing_r1(x UInt32, y UInt32, val UInt32) ENGINE ReplicatedSummingMergeTree('/clickhouse/tables/{database}/test_00754/summing', 'r1') ORDER BY (x, y);
SELECT quantilesTiming(0.5, 0.9)(t), quantilesTimingWeighted(0.5, 0.9)(t, w) FROM (SELECT number AS t, number = 77 ? 10 : 1 AS w FROM system.numbers LIMIT 100);
SELECT HOUR(NULL, NULL);
SELECT dt64, dts64, dtms64 FROM generateRandom('dt64 DateTime64(3, \'UTC\'), dts64 DateTime64(6, \'UTC\'), dtms64 DateTime64(6 ,\'UTC\')', 1, 10, 10) LIMIT 10;
CREATE TABLE test_01193_18429.table_8_554 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_492141365C3B313C2F367035557B4C402129434A225A373D482646277266324A2D63753356325C50(x UInt8) Engine=Memory;
SELECT count(), min(x), max(x), sum(x) FROM r5;
SELECT 'Running test stateless/02813_array_agg.sql from pid=1722' 
CREATE TABLE test_3A235C7628236D34744E5D6D544A51612340504832285540542D61523178582277742D6D383B5934(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_fnqwi61y 
SELECT dictGet('02176_test_simple_key_dictionary', 'value', '0');
SELECT count(*) FROM line_as_string3
CREATE TABLE test_01193_18429.table_2_347 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_5B7C47392A383F7937202443277A6476244C5D4379274A6D4D3F445C754F7B71537C592C5C777A62(x UInt8) Engine=Memory;
INSERT INTO r3 SELECT 47
CREATE TABLE test_514F475D5C327E7251222A562F5B77702B503A772327457B363735686939393C367B435B5345787A(x UInt8) Engine=Memory;
CREATE TABLE test_267160547D337C5D2B43734673514848333857317E6326564369495A6C47585F3F3C2F797875422C(x UInt8) Engine=Memory;
select hex(sipHash128ReferenceKeyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8)));
CREATE TABLE file (x UInt64) ENGINE = File(TSV, 'test_3jf9fl6r/bz2.tsv.bz2')
SELECT 0, 1, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (0 < 13 AND 1 > 0 ? 0 : 0)), throwIf(last != (0 < 13 AND 1 > 0 ? least(13 - 1, 0 + 1 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 0, 1);
CREATE DATABASE IF NOT EXISTS test_dgiowgr6 
DROP DATABASE IF EXISTS test_fdnk5l4j 
DROP TABLE IF EXISTS merge_00401;
CREATE DATABASE IF NOT EXISTS test_akbfizkr 
INSERT INTO any_right_join (x, s) VALUES 
DROP TABLE IF EXISTS tab_00651;
SELECT '333' = t1.key FROM t1 INNER ANY JOIN t2_nullable as t2 ON t1.id == t2.id AND isNull(t2.key2);
CREATE INDEX idx_tab3_3 ON tab3 (col3 DESC,col4 DESC);
CREATE TABLE IF NOT EXISTS test_01444.t24816 (`x` UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 49736, min_bytes_for_wide_part = 645103364, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 6, merge_max_block_size = 15200, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 21360504, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75390, primary_key_compress_block_size = 98921
select X'30';
ALTER USER u1_01292 SETTINGS readonly=1;
INSERT INTO test_01193_18429.table_1_757 VALUES 
set output_format_parquet_data_page_size = 800;
CREATE TABLE test_2234742D6179335E5B552D3E347742224B2B2F38775871386F3B6E6E6978504F575A6C36617D652E(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02377_majority_insert_quorum_zookeeper_long.sql from pid=1718' 
CREATE TABLE alter_00147 (d Date DEFAULT toDate('2015-01-01'), n Nested(x String)) ENGINE = MergeTree(d, d, 8192);
select '(key, left array join n.x) in (1, 1)';
SELECT countIf(explain like '%COMMA%' OR explain like '%CROSS%'), countIf(explain like '%INNER%') FROM ( EXPLAIN QUERY TREE SELECT t1.a FROM t1, t2 CROSS JOIN t3 SETTINGS allow_experimental_analyzer = 1);
INSERT INTO r8 SELECT 84 % 10 = 8 ? 84 - 1 : 84
SELECT multiIf((col1 % 2) = 0, [col2, 'bar'], 1, [col4, col5], [col6, col7]) FROM multi_if_check;
SELECT toDateTime(timestamp) FROM tdm2 WHERE toHour(toDateTime(timestamp)) = 13;
SELECT count() FROM t_cnf_fuzz WHERE (c2) OR ((NOT c2) AND c9) OR (c8 AND c6 AND c4 AND (NOT c3) AND (NOT c4)) OR ((NOT c6) AND c5 AND c2 AND (NOT c0)) SETTINGS convert_query_to_cnf = 1
DROP DATABASE IF EXISTS test_adshjm23 
SELECT corrMatrix(-1);
INSERT INTO r1 SELECT 63 % 10 = 1 ? 63 - 1 : 63
select if(0, map(1,2,3,4), map(3,4,5,6)) from numbers(2);
select x from (select toDecimal32(1.3, 2) x) group by x;
SELECT 'HELLO' ilike 'hell%';
SELECT uid, retention(1, date = '2018-08-06', date = '2018-08-07') AS r FROM retention_test WHERE date IN ('2018-08-06', '2018-08-07') GROUP BY uid ORDER BY uid LIMIT 5;
SELECT -0b10000000000000000000000000000000 as number, toTypeName(number);
CREATE DATABASE IF NOT EXISTS test_a8nkwboc 
SELECT ignore([], [], []);
CREATE TABLE test_39652F4B57372977303263345838317E57345F233E4A6B7E692E3B29744B7D345440593B752F592B(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_dz48tr88 
SELECT toDecimal64(-12345.6789, 4) AS x, roundBankers(x, -1), roundBankers(x, -2), roundBankers(x, -3), roundBankers(x, -4), roundBankers(x, -5);
SELECT substringUTF8(materialize('hello, ÃÂ¿ÃÂÃÂ¸ÃÂ²ÃÂµÃÂ'), 1, number) FROM numbers(16);
SELECT REGEXP_MATCHES(NULL, NULL);
CREATE TABLE test_3C38417D746142652E276D57303A4029345B385E2B57683A382550352978787B7D5F3B652D7B3461(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_5_239 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT toDate32(-1);
INSERT INTO test_01193_18429.table_7_649 VALUES 
ATTACH TABLE r_prop_table1;
INSERT INTO r3 SELECT 27
SELECT dateDiff('second', toDateTime64('2015-08-18 00:00:00', 0, 'UTC'), toDateTime('2015-08-18 01:00:00', 'UTC'));
DROP DATABASE IF EXISTS test_fsazfau2 
CREATE DATABASE IF NOT EXISTS test_ss0mpfzt 
CREATE TABLE test_7D6D505B5F313E335D3262386A7D67567346235C20325020533C375C74347A63206022544D5E785D(x UInt8) Engine=Memory;
CREATE TABLE test_78763D2859664E7A21397E6D243A3E78772A463D77275364463566474C383B2D616D717638703328(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_8_110 VALUES 
CREATE DATABASE IF NOT EXISTS test_1wgc2g70 
SELECT h3GetUnidirectionalEdgesFromHexagon(stringToH3('85283473ffffff'));
INSERT INTO test_01193_18429.table_10_640 VALUES 
INSERT INTO test.infile_progress FROM INFILE '/tmp/clickhouse-test/0_stateless/test_23nmdcw2/infile_progress.tsv'
CREATE DATABASE IF NOT EXISTS test_s5wpyi15 
desc format(JSONEachRow, '{"x" : [1, 2]}, {"x" : [null]}');
CREATE INDEX idx_tab3_0 ON tab3 (col3 DESC,col4 DESC);
CREATE TABLE test_68424E6B682260383F4A6F6F4F572C7650645455702B4C432D73662A536929464664404D214B3C41(x UInt8) Engine=Memory;
SELECT extractAllGroupsVertical(materialize(CAST('hello world' AS FixedString(12))), '(\\w+)');
CREATE TABLE IF NOT EXISTS test_01444.t17896 (`x` UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 49736, min_bytes_for_wide_part = 645103364, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 6, merge_max_block_size = 15200, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 21360504, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75390, primary_key_compress_block_size = 98921
DROP DATABASE IF EXISTS test_yk4pjxwf 
SELECT toYearWeek(NULL);
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toUInt8(2) ELSE toInt16(3) END FROM system.numbers LIMIT 10;
SELECT x, y FROM merge_one_two WHERE arrayExists(_ -> _ IN (4294967290), x);
SELECT number % 4 AS k, groupArray(number-10), groupBitOr(number-10), groupBitAnd(number-10), groupBitXor(number-10) FROM (SELECT * FROM system.numbers LIMIT 20) GROUP BY k ORDER BY k;
select 1 = multiSearchAny(materialize('abc'), ['bc']);
SELECT dateDiff('year', toDate32('2015-08-18', 'UTC'), toDate('2016-08-18', 'UTC'), 'UTC');
SELECT a, toTypeName(a) FROM ( SELECT * FROM (SELECT 1 :: Int32 as a) t1 RIGHT JOIN (SELECT 2 :: UInt32 as key) t2 ON t1.a = t2.key ) ORDER BY 1;
SELECT multiIf((number % 2) = 0, [toInt8(1), toInt8(2)], (number % 3) = 0, [toFloat64(2), toFloat64(3)], [toInt16(3), toInt16(3)]) FROM system.numbers LIMIT 10;
INSERT INTO r10 SELECT 84 % 10 = 10 ? 84 - 1 : 84
INSERT INTO test_z6hjjj8u.underlying (key) VALUES
CREATE TABLE test_01193_18429.table_5_268 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO pk_in_tuple_perf SELECT number, number * 10 FROM numbers(100);
CREATE TABLE test_01193_18429.table_6_907 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_6_968 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT quantiles(0.5)(inf) FROM numbers(300);
CREATE DATABASE IF NOT EXISTS test_zkiop9z3 
DROP DATABASE IF EXISTS test_h5kk4ipn 
SELECT CASE WHEN (number % 2) = 0 THEN [toInt64(1), toInt64(2)] WHEN (number % 3) = 0 THEN [toInt64(2), toInt64(3)] ELSE [toUInt16(3), toUInt16(3)] END FROM system.numbers LIMIT 10;
CREATE NAMED COLLECTION IF NOT EXISTS 02883_named_collections_override_test_5r4han3w_collection2 AS url = 'http://127.0.0.1:8123?query=select+1', format = 'RawBLOB';
CREATE TABLE custom_separated (n UInt64, d Date, s String) ENGINE = Memory()
DROP TABLE distributed_tf;
DROP DATABASE IF EXISTS test_8g3nh80v 
DROP TABLE IF EXISTS simple_key_hierarchy_table;
KILL QUERY WHERE query_id = 'test_pdyya2du-17413' SYNC
select [9, 0, 0, 0, 1, 4, 2, 0, 0, 0, 0, 8, 0, 2, 0, 3, 0, 3] = multiSearchAllPositionsCaseInsensitive(materialize('PFkLcrbouhBTisTkuUcO'), ['UhBtistKU', 'ioQunYMFWHD', 'VgYHTKZazRtfgRtvywtIgVoBqNBwVn', 'ijSNLKch', 'pFKlcrBOuhbtIsTku', 'lCRboUHBtI', 'fKLCRBOu', 'XTeBYUCBQVFwqRkElrvDOpZiZYmh', 'KzXfBUupnT', 'OgIjgQO', 'icmYVdmekJlUGSmPLXHc', 'OuH', 'BWDGzBZFhTKQErIRCbtUDIIjzw', 'F', 'LuWyPfSdNHIAOYwRMFhP', 'kL', 'PQmvXDCkEhrlFBkUmRqqWBxYi', 'kLcrbo']) from system.numbers limit 10;
select count() from test_02241
DROP DATABASE IF EXISTS test_inxeql38 
select arrayResize([1, 2, 3, 4, 5, 6], 3);
SELECT 'Running test stateless/00984_parser_stack_overflow.sh from pid=1724' 
SELECT sum(t) FROM XXXX WHERE indexHint(t = 42);
CREATE TABLE test_58577C78702325636531653B282C5D6545645258565468746F614524613C546A5A48223873525C3A(x UInt8) Engine=Memory;
alter table many_mutations delete where y = 180 * 2 settings mutations_sync = 0;
DROP DATABASE IF EXISTS test_4o5dc2w4 
INSERT INTO test_01193_18429.table_2_433 VALUES 
create table t_local(a int) engine Log;
select startsWithUTF8('Ã¥Â¯ÂÃ¥Â¼ÂºÃ¦Â°ÂÃ¤Â¸Â»Ã¦ÂÂÃ¦ÂÂÃ¥ÂÂÃ¨Â°Â', '');
SELECT arrayEnumerateUniqRanked(2, [[], [1], [1]]);
select hex(sipHash64Keyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62)));
CREATE TABLE test_01193_18429.table_1_748 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT argMin((n, n), n) t, toTypeName(t) FROM (SELECT if(number >= 100, NULL, number::Int32) AS n from numbers(5, 10));
INSERT INTO test_01193_18429.table_6_913 VALUES 
CREATE DATABASE IF NOT EXISTS test_18ac6iuv 
DROP DATABASE IF EXISTS test_o7nkzmlm 
DROP TABLE capnp_nested_table
CREATE TABLE test_4B6C2A456472757A355639703A3F704441615D4E476753562E4E713B3B514955307B4F55253A282D(x UInt8) Engine=Memory;
select sum(toUInt64(str)), sum(toUInt64(s)) from lc_prewhere prewhere val == 1;
INSERT INTO test_01193_18429.table_3_977 VALUES 
SELECT arrayExists(x -> number % 2, arrayMap(x -> toString(x), range(number))) FROM system.numbers LIMIT 10;
SELECT sum(e) from tab_02473 PREWHERE b > 10 AND b <= 70 AND c > 46 AND c <= 76 WHERE a == 0;
SELECT anyHeavy([NULL]);
SELECT 'Running test stateless/00175_partition_by_ignore.sql from pid=1713' 
select count(ignore(*)) from data_02051 settings min_bytes_to_use_direct_io=1, local_filesystem_read_method='io_uring', local_filesystem_read_prefetch=1, read_priority=1, max_read_buffer_size=65505 ;
CREATE TABLE test_01193_18429.table_7_900 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT CASE WHEN (col1 % 2) = 0 THEN col2 WHEN 1 THEN toFixedString(col3, 16) ELSE col4 END FROM multi_if_check;
SELECT 1 FROM (SELECT arrayJoin(if(empty(range(number)), [1], [2])) from numbers(1));
SELECT c2 = ('abc') FROM nullt;
CREATE DATABASE IF NOT EXISTS test_sz3gfzsc 
set allow_experimental_database_replicated=1;
INSERT INTO test_01193_18429.table_5_80 VALUES 
INSERT INTO test_01193_18429.table_8_548 VALUES 
select 7 as x format Native 
CREATE TABLE test_416A705B47675D7447612D596E29456C224A3E78534E4C3F42225445493E6C465E3D23522F734D33(x UInt8) Engine=Memory;
DROP TABLE old_partition_key;
SELECT 'foo'
SELECT ProfileEvents['QueryCacheHits'], ProfileEvents['QueryCacheMisses'] FROM system.query_log WHERE type = 'QueryFinish' AND current_database = currentDatabase() /* NOTE: client incorrectly join comments from the previous line into query, hence LIKE */ AND query LIKE '%\nSELECT 1 SETTINGS use_query_cache = true, enable_writes_to_query_cache = false;' ORDER BY event_time_microseconds;
CREATE TABLE morton_numbers_mask_1_02457 (`n1` UInt64, `n2` UInt64, `n3` UInt64, `n4` UInt64) ENGINE = MergeTree ORDER BY n1 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 667073379, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 4777, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 9068, primary_key_compress_block_size = 59207
DROP TABLE IF EXISTS tab1;
select 2 = windowFunnel(10000)(timestamp, event = 1000, event = 1001) from funnel_test;
CREATE TABLE test_6252483F35597561747A62477C55264C502B3D276657342C34207D61527D40645B762B4F20397C75(x UInt8) Engine=Memory;
CREATE TABLE test_3022545E223B7179595A765C622F32412242485E40397239314C6B726C5A4F315A4C3A5B4C214926(x UInt8) Engine=Memory;
DELETE FROM 02416_rocksdb WHERE 1 = 1;
insert into test_array values 
CREATE TABLE test_5D24444E585923615F782C68752D362B252D4E56303A2A4E74406A713F4420406F75453C4721743A(x UInt8) Engine=Memory;
DROP DICTIONARY dict_hashed_simple_String;
SELECT `x` FROM generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8)))))))))))))))))))))))))))))))))))))', 1, 1, 1) LIMIT 1
CREATE TABLE test_02908_r3_254 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_254', 'r3') ORDER BY tuple()
CREATE DATABASE IF NOT EXISTS test_a78a959h 
CREATE TABLE test_01193_18429.table_3_722 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT YYYYMMDDToDate(9999999999999);
CREATE TABLE ttl (`d` Date, `i` Int, `s` String) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 13670, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 5862, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 550364, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 5066172097, index_granularity_bytes = 542010, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 29005, primary_key_compress_block_size = 72504
SELECT multiIf((number % 2) = 0, [toUInt16(1), toUInt16(2)], (number % 3) = 0, [toFloat32(2), toFloat32(3)], [toFloat32(3), toFloat32(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_table_6 (`key` UInt64, `value` UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/02962_system_sync_replica_lightweight_from_modifier_test_87x3igkp/test_table', '6') ORDER BY key SETTINGS index_granularity = 41789, min_bytes_for_wide_part = 23797492, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 26, prefer_fetch_merged_part_size_threshold = 8232197432, vertical_merge_algorithm_min_rows_to_activate = 563505, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 7613754576, index_granularity_bytes = 30142180, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 58102, primary_key_compress_block_size = 92486
DROP TABLE IF EXISTS t_02267;
insert into decimals values 
CREATE TABLE secure3 ( date Date, a Int32, b Int32, c Int32, d Int32) ENGINE = Distributed(test_shard_localhost_secure, currentDatabase(), 'secure2');
EXPLAIN PLAN actions=1, header=1, sorting=1 SELECT a FROM optimize_sorting WHERE a > 0
CREATE TABLE test_222A3F2B634A7A6C305A625165735A24782F51645D4629402622515E37226F6A484B4D444A643F25(x UInt8) Engine=Memory;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), N == toUInt16(1) as r FORMAT CSV;
CREATE TABLE string_test_table (val String) ENGINE = MergeTree ORDER BY val SETTINGS index_granularity = 1, index_granularity_bytes = 0, min_bytes_for_wide_part = 0;
SELECT B, neighbor(B, 1) AS next_B FROM (SELECT * FROM test ORDER BY B);
CREATE DATABASE IF NOT EXISTS test_uhgiamuz 
select 0 = isValidUTF8(toFixedString('\xe2\x82\x28', 3)) from system.numbers limit 10;
INSERT INTO test_01193_18429.table_1_219 VALUES 
CREATE TABLE test_01193_18429.table_1_641 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DATABASE dict_db_01225 ENGINE=Ordinary;
SELECT '{a' AS x, x LIKE (concat('%', x, '%') AS pat), materialize(x) LIKE pat;
DROP DATABASE IF EXISTS test_trig3v1o 
SELECT min(number) as min_number FROM numbers(10) GROUP BY number HAVING 1 ORDER BY min_number;
CREATE TABLE test_01193_18429.table_6_254 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT arrayEnumerateUniqRanked(NULL);
SELECT COUNT() FROM versioned_collapsing_table;
alter table data_01900_1 update s = 'foo_68' where 1;
CREATE TABLE test_3827503B6A456940746F326257385D29426F5924292728436A62383B5C72575A6B4C3867655A3B22(x UInt8) Engine=Memory;
SELECT multiIf((number % 2) = 0, [toUInt32(1), toUInt32(2)], (number % 3) = 0, [toInt16(2), toInt16(3)], [toInt8(3), toInt8(3)]) FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_65f13ccp 
SELECT data.k1, data.k2.k3, data.k2.k4 FROM t_json_dist;
CREATE TABLE test_357359452D6161623F5638462334213B3A3D4854274D7634257E6B385A6643464A71312824342B3E(x UInt8) Engine=Memory;
CREATE TABLE distributed_01099_a AS local_01099_a ENGINE = Distributed('test_cluster_two_shards', currentDatabase(), local_01099_a, rand());
SELECT 'Running test stateless/02456_progress_tty.expect from pid=1724' 
INSERT INTO FUNCTION remote('127.0.0.1', currentDatabase(), t_async_inserts_logs) VALUES 
SET max_threads = 1500;
CREATE TABLE test_38324D4932516D684A4F323735716269242E4F416440627B293D596749395A6361504E657C5B6E30(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS t_sparse_detach;
SELECT * FROM userid_test WHERE userid IN (userid_set);
INSERT INTO test_01193_18429.table_6_864 VALUES 
CREATE TABLE test_01193_18429.table_1_136 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
set optimize_distributed_group_by_sharding_key=1;
select count(ignore(*)) from data_02051 settings min_bytes_to_use_direct_io=0, local_filesystem_read_method='read', local_filesystem_read_prefetch=0, read_priority=1, max_read_buffer_size=65505 ;
select formatDateTime(toDateTime('2022-01-08 02:11:29', 'UTC'), '%k') settings formatdatetime_format_without_leading_zeros = 1;
CREATE TABLE test_686B2F396D7B554864505B6A69782B4576512E2E282F294C4D5B282C2B202E282A222F6C3D6C4036(x UInt8) Engine=Memory;
ALTER TABLE t_modify_to_nullable MODIFY COLUMN s Nullable(String);
SELECT count() FROM lc_nullable WHERE has(i32, 100);
SELECT multiIf((number % 2) = 0, [toInt8(1), toInt8(2)], (number % 3) = 0, [toInt8(2), toInt8(3)], [toInt8(3), toInt8(3)]) FROM system.numbers LIMIT 10;
CREATE TEMPORARY TABLE test (`i` Int64, `d` DateTime64);
CREATE TABLE test_01193_18429.table_9_208 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 21 + j, 21 - j, 84 - j, 21 * j, -21 * j, 21 / j, 84 / j, intDiv(21, j), intDivOrZero(84, j) FROM decimal WHERE j > 0;
SELECT fromUnixTimestamp64Micro(NULL);
CREATE TABLE test_01193_18429.table_1_812 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_7_12 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select 2 = position('abcdefgh', materialize('bcdef'));
CREATE TABLE test_01193_18429.table_6_381 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select if(number > 0, intDiv(42, number), 1) from numbers(5);
alter table data_01900_2 update s = 'bar_6' where 1;
CREATE TABLE t_remove_sample_by(id UInt64) ENGINE = Memory;
CREATE TABLE test_01193_18429.table_5_933 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
GRANT SELECT, CREATE ON *.* TO quoted_by_ip_test_ljhmihp3;
INSERT INTO test_01193_18429.table_1_240 VALUES 
SELECT 25;
SELECT materialize('Hello') LIKE '%%';
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (68 < 22 AND 84 > 0 ? 68 : 0)), throwIf(last != (68 < 22 AND 84 > 0 ? least(22 - 1, 68 + 84 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(22) LIMIT 68, 84);
select 'Integers';
DROP DATABASE IF EXISTS test_kikus53g 
CREATE TABLE test_252B2F7A2D58263656623E6658444A356271214E5E243A795B3B3D5B2534705E3E7E6D6F23693C30(x UInt8) Engine=Memory;
SELECT halfMD5([], [], []);
INSERT INTO r4 SELECT 15
CREATE DATABASE IF NOT EXISTS test_i3mmmkps 
CREATE DICTIONARY 01682_database_for_cache_dictionary.cache_dictionary_complex_key_simple_attributes ( id UInt64, id_key String, value_first String DEFAULT 'value_first_default', value_second String DEFAULT 'value_second_default' ) PRIMARY KEY id, id_key SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'complex_key_simple_attributes_source_table' DB '01682_database_for_cache_dictionary')) LIFETIME(MIN 1 MAX 1000) LAYOUT(COMPLEX_KEY_CACHE(SIZE_IN_CELLS 10));
ALTER TABLE concurrent_alter_column ADD COLUMN c170 DOUBLE;
select * from auto_assign_enum where x = 1;
CREATE TABLE test_497B3B41444B572A2F3D5E4F4B47554741535A6F2E6976542368342B21474F3B2B314A5D6B5C425C(x UInt8) Engine=Memory;
SELECT nothingNull();
SET short_circuit_function_evaluation = 'force_enable';
SELECT translateUTF8(toString(number), '1234567890', 'Ã¡ÂÂ©Ã Â¤Â¯Ã°ÂÂÂ¿Ã°ÂÂÂÃ Â¦Â¨ÃÂ ÃÂ°ÃÂ¹ÃÂ¿Ã Â¸Â') FROM numbers(987654, 5);
SELECT toStartOfMonth(d32) as d32, count() FROM with_fill_date GROUP BY d32 ORDER BY d32 WITH FILL STEP INTERVAL 1 MONTH LIMIT 5;
alter table many_mutations delete where y = 668 * 2 settings mutations_sync = 0;
INSERT INTO test_01193_18429.table_7_486 VALUES 
SELECT multiIf((number % 2) = 0, [toUInt16(1), toUInt16(2)], (number % 3) = 0, [toUInt8(2), toUInt8(3)], [toUInt32(3), toUInt32(3)]) FROM system.numbers LIMIT 10;
SELECT 'test add[...]seconds()';
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (110 < 81 AND 56 > 0 ? 110 : 0)), throwIf(last != (110 < 81 AND 56 > 0 ? least(81 - 1, 110 + 56 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(81) LIMIT 110, 56);
SELECT count(), sum(x) FROM r1
SELECT * FROM ps WHERE (i = _CAST(2, 'UInt8')) AND (s = 'test')
ALTER TABLE merge_tree DROP PARTITION '20200104';
SELECT replaceRegexpAll('a', 'z*', '') == 'a';
DROP DATABASE IF EXISTS test_yyhntc4h 
INSERT INTO r2 SELECT 77 % 10 = 2 ? 77 - 1 : 77
CREATE TABLE test_01193_18429.table_8_947 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP DATABASE IF EXISTS test_ookqcbpw 
ALTER TABLE test_table_1 MODIFY SETTING max_replicated_merges_in_queue=0
CREATE DATABASE IF NOT EXISTS test_goilto98 
DESCRIBE (SELECT tuple_value.* APPLY x -> toString(x) FROM test_table_compound);
select 6 = position('abcdefgh', materialize('fg')) from system.numbers limit 129;
SELECT 32768, -32768, 32768 = -32768, 32768 != -32768, 32768 < -32768, 32768 <= -32768, 32768 > -32768, 32768 >= -32768, -32768 = 32768, -32768 != 32768, -32768 < 32768, -32768 <= 32768, -32768 > 32768, -32768 >= 32768 , toUInt16(32768) = toInt16(-32768), toUInt16(32768) != toInt16(-32768), toUInt16(32768) < toInt16(-32768), toUInt16(32768) <= toInt16(-32768), toUInt16(32768) > toInt16(-32768), toUInt16(32768) >= toInt16(-32768), toInt16(-32768) = toUInt16(32768), toInt16(-32768) != toUInt16(32768), toInt16(-32768) < toUInt16(32768), toInt16(-32768) <= toUInt16(32768), toInt16(-32768) > toUInt16(32768), toInt16(-32768) >= toUInt16(32768) , toUInt16(32768) = toInt32(-32768), toUInt16(32768) != toInt32(-32768), toUInt16(32768) < toInt32(-32768), toUInt16(32768) <= toInt32(-32768), toUInt16(32768) > toInt32(-32768), toUInt16(32768) >= toInt32(-32768), toInt32(-32768) = toUInt16(32768), toInt32(-32768) != toUInt16(32768), toInt32(-32768) < toUInt16(32768), toInt32(-32768) <= toUInt16(32768), toInt32(-32768) > toUInt16(32768), toInt32(-32768) >= toUInt16(32768) , toUInt16(32768) = toInt64(-32768), toUInt16(32768) != toInt64(-32768), toUInt16(32768) < toInt64(-32768), toUInt16(32768) <= toInt64(-32768), toUInt16(32768) > toInt64(-32768), toUInt16(32768) >= toInt64(-32768), toInt64(-32768) = toUInt16(32768), toInt64(-32768) != toUInt16(32768), toInt64(-32768) < toUInt16(32768), toInt64(-32768) <= toUInt16(32768), toInt64(-32768) > toUInt16(32768), toInt64(-32768) >= toUInt16(32768) , toUInt32(32768) = toInt16(-32768), toUInt32(32768) != toInt16(-32768), toUInt32(32768) < toInt16(-32768), toUInt32(32768) <= toInt16(-32768), toUInt32(32768) > toInt16(-32768), toUInt32(32768) >= toInt16(-32768), toInt16(-32768) = toUInt32(32768), toInt16(-32768) != toUInt32(32768), toInt16(-32768) < toUInt32(32768), toInt16(-32768) <= toUInt32(32768), toInt16(-32768) > toUInt32(32768), toInt16(-32768) >= toUInt32(32768) , toUInt32(32768) = toInt32(-32768), toUInt32(32768) != toInt32(-32768), toUInt32(32768) < toInt32(-32768), toUInt32(32768) <= toInt32(-32768), toUInt32(32768) > toInt32(-32768), toUInt32(32768) >= toInt32(-32768), toInt32(-32768) = toUInt32(32768), toInt32(-32768) != toUInt32(32768), toInt32(-32768) < toUInt32(32768), toInt32(-32768) <= toUInt32(32768), toInt32(-32768) > toUInt32(32768), toInt32(-32768) >= toUInt32(32768) , toUInt32(32768) = toInt64(-32768), toUInt32(32768) != toInt64(-32768), toUInt32(32768) < toInt64(-32768), toUInt32(32768) <= toInt64(-32768), toUInt32(32768) > toInt64(-32768), toUInt32(32768) >= toInt64(-32768), toInt64(-32768) = toUInt32(32768), toInt64(-32768) != toUInt32(32768), toInt64(-32768) < toUInt32(32768), toInt64(-32768) <= toUInt32(32768), toInt64(-32768) > toUInt32(32768), toInt64(-32768) >= toUInt32(32768) , toInt32(32768) = toInt16(-32768), toInt32(32768) != toInt16(-32768), toInt32(32768) < toInt16(-32768), toInt32(32768) <= toInt16(-32768), toInt32(32768) > toInt16(-32768), toInt32(32768) >= toInt16(-32768), toInt16(-32768) = toInt32(32768), toInt16(-32768) != toInt32(32768), toInt16(-32768) < toInt32(32768), toInt16(-32768) <= toInt32(32768), toInt16(-32768) > toInt32(32768), toInt16(-32768) >= toInt32(32768) , toInt32(32768) = toInt32(-32768), toInt32(32768) != toInt32(-32768), toInt32(32768) < toInt32(-32768), toInt32(32768) <= toInt32(-32768), toInt32(32768) > toInt32(-32768), toInt32(32768) >= toInt32(-32768), toInt32(-32768) = toInt32(32768), toInt32(-32768) != toInt32(32768), toInt32(-32768) < toInt32(32768), toInt32(-32768) <= toInt32(32768), toInt32(-32768) > toInt32(32768), toInt32(-32768) >= toInt32(32768) , toInt32(32768) = toInt64(-32768), toInt32(32768) != toInt64(-32768), toInt32(32768) < toInt64(-32768), toInt32(32768) <= toInt64(-32768), toInt32(32768) > toInt64(-32768), toInt32(32768) >= toInt64(-32768), toInt64(-32768) = toInt32(32768), toInt64(-32768) != toInt32(32768), toInt64(-32768) < toInt32(32768), toInt64(-32768) <= toInt32(32768), toInt64(-32768) > toInt32(32768), toInt64(-32768) >= toInt32(32768) , toUInt64(32768) = toInt16(-32768), toUInt64(32768) != toInt16(-32768), toUInt64(32768) < toInt16(-32768), toUInt64(32768) <= toInt16(-32768), toUInt64(32768) > toInt16(-32768), toUInt64(32768) >= toInt16(-32768), toInt16(-32768) = toUInt64(32768), toInt16(-32768) != toUInt64(32768), toInt16(-32768) < toUInt64(32768), toInt16(-32768) <= toUInt64(32768), toInt16(-32768) > toUInt64(32768), toInt16(-32768) >= toUInt64(32768) , toUInt64(32768) = toInt32(-32768), toUInt64(32768) != toInt32(-32768), toUInt64(32768) < toInt32(-32768), toUInt64(32768) <= toInt32(-32768), toUInt64(32768) > toInt32(-32768), toUInt64(32768) >= toInt32(-32768), toInt32(-32768) = toUInt64(32768), toInt32(-32768) != toUInt64(32768), toInt32(-32768) < toUInt64(32768), toInt32(-32768) <= toUInt64(32768), toInt32(-32768) > toUInt64(32768), toInt32(-32768) >= toUInt64(32768) , toUInt64(32768) = toInt64(-32768), toUInt64(32768) != toInt64(-32768), toUInt64(32768) < toInt64(-32768), toUInt64(32768) <= toInt64(-32768), toUInt64(32768) > toInt64(-32768), toUInt64(32768) >= toInt64(-32768), toInt64(-32768) = toUInt64(32768), toInt64(-32768) != toUInt64(32768), toInt64(-32768) < toUInt64(32768), toInt64(-32768) <= toUInt64(32768), toInt64(-32768) > toUInt64(32768), toInt64(-32768) >= toUInt64(32768) , toInt64(32768) = toInt16(-32768), toInt64(32768) != toInt16(-32768), toInt64(32768) < toInt16(-32768), toInt64(32768) <= toInt16(-32768), toInt64(32768) > toInt16(-32768), toInt64(32768) >= toInt16(-32768), toInt16(-32768) = toInt64(32768), toInt16(-32768) != toInt64(32768), toInt16(-32768) < toInt64(32768), toInt16(-32768) <= toInt64(32768), toInt16(-32768) > toInt64(32768), toInt16(-32768) >= toInt64(32768) , toInt64(32768) = toInt32(-32768), toInt64(32768) != toInt32(-32768), toInt64(32768) < toInt32(-32768), toInt64(32768) <= toInt32(-32768), toInt64(32768) > toInt32(-32768), toInt64(32768) >= toInt32(-32768), toInt32(-32768) = toInt64(32768), toInt32(-32768) != toInt64(32768), toInt32(-32768) < toInt64(32768), toInt32(-32768) <= toInt64(32768), toInt32(-32768) > toInt64(32768), toInt32(-32768) >= toInt64(32768) , toInt64(32768) = toInt64(-32768), toInt64(32768) != toInt64(-32768), toInt64(32768) < toInt64(-32768), toInt64(32768) <= toInt64(-32768), toInt64(32768) > toInt64(-32768), toInt64(32768) >= toInt64(-32768), toInt64(-32768) = toInt64(32768), toInt64(-32768) != toInt64(32768), toInt64(-32768) < toInt64(32768), toInt64(-32768) <= toInt64(32768), toInt64(-32768) > toInt64(32768), toInt64(-32768) >= toInt64(32768) 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), N < toInt64(-1) as r FORMAT CSV;
CREATE TABLE test_01193_18429.table_7_116 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
alter table many_mutations delete where y = 93 * 2 settings mutations_sync = 0;
system enable failpoint replicated_queue_fail_next_entry
SELECT round(h3ExactEdgeLengthM(h3_index), 2) FROM h3_indexes ORDER BY h3_index;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt16(1), toUInt16(2)] WHEN (number % 3) = 0 THEN [toFloat32(2), toFloat32(3)] ELSE [toInt8(3), toInt8(3)] END FROM system.numbers LIMIT 10;
select b from table_map where a = map('name','lisi', 'gender', 'female');
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 2251, 500 settings ignore_materialized_views_with_dropped_target_table=1
 SELECT sipHash64(9, groupArray((name, type))) FROM (SELECT name, type FROM system.columns WHERE database = 'system' AND table = 'session_log' ORDER BY position) 
CREATE TABLE test_01193_18429.table_7_89 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select mortonDecode(tuple(1), 4294967286);
SELECT splitByNonAlpha('128.0.0.1', 2);
SELECT * FROM file('test_02103.data', 'TSVWithNamesAndTypes', 'number UInt64, array Array(UInt64), string String') ORDER BY number SETTINGS input_format_parallel_parsing=1, min_chunk_bytes_for_parallel_parsing=40
CREATE TABLE test_3E2073776B642F645D64556E573A5E5D4176316F2C793859576B6079387C3E2C5F32296A73587D47(x UInt8) Engine=Memory;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), toUInt8(1) == N as r FORMAT CSV;
CREATE DATABASE IF NOT EXISTS test_kgmjnaj9 
select -44 as offset, -36 as length, 'Hello' as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
INSERT INTO orc_arrays VALUES 
select sipHash64Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39)) == sipHash64(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39));
SELECT CASE WHEN 1 THEN ['foo', 'bar'] WHEN (col1 % 3) = 0 THEN [col4, col5] ELSE [col6, 'bar'] END FROM multi_if_check;
SELECT 'ANY INNER | join_use_nulls = 1 | copmosite key';
CREATE TABLE test_3F245D3B4A5B48324A442C354A6A3D6D656530205323615C7B5D2A454F506A707423337520724E79(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_5_808 VALUES 
DROP TABLE IF EXISTS mytable_local;
CREATE TABLE test_01193_18429.table_5_593 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_2_685 VALUES 
CREATE TABLE concurrent_alter_mt_5 (`key` UInt64, `value1` UInt64, `value2` Int32) ENGINE = ReplicatedMergeTree('/clickhouse/tables/01079_parallel_alter_modify_zookeeper_long_test_8vpf77vf/concurrent_alter_mt', '5') ORDER BY key SETTINGS max_replicated_mutations_in_queue = 1000, number_of_free_entries_in_pool_to_execute_mutation = 0, max_replicated_merges_in_queue = 1000, index_granularity = 59838, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 30, merge_max_block_size = 9045, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 5477784109, index_granularity_bytes = 4966886, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 47646, primary_key_compress_block_size = 68831
SELECT throwIf((SELECT (count(), sum(n)) FROM merge(currentDatabase(), '') WHERE type=4) != (toUInt8(11/2 + 1), (select sum(number) from numbers(1, 11) where number % 2 or number=11))) FORMAT Null
select parseDateTime('00/', '%s/', 'UTC') = toDateTime('1970-01-01 00:00:00', 'UTC');
INSERT INTO test_01193_18429.table_5_437 VALUES 
SELECT fromUnixTimestampInJodaSyntax(1669804872, 'GGGGG', 'UTC');
CREATE TABLE test_01193_18429.table_2_630 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP DATABASE IF EXISTS test_f102mns5 
CREATE TABLE test_5A7D553F4E79272429232D2363353761742C212F44425D5E383847705D2B724E6A506C2E754C2650(x UInt8) Engine=Memory;
insert into test_rows_wide_part select 0,arrayJoin(range(10000)) ;
DROP DATABASE IF EXISTS test_8vkjg790 
select arrayPopBack(Null);
INSERT INTO test_01193_18429.table_6_871 VALUES 
optimize table data final;
DROP TABLE IF EXISTS test_s64_distributed;
SELECT 1 FORMAT PrettySpace;
SELECT 'Running test stateless/01323_add_scalars_in_time.sql from pid=1724' 
SELECT bitHammingDistance(s1, s2) FROM test_string;
CREATE TABLE test_6958274B42702938313D3F2654422C717C397725606C67553F4C2C7640213E3041247548206D3574(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_tbpkvgg5 
ALTER USER u2_01292@'%.myhost.com' HOST ANY;
CREATE DATABASE IF NOT EXISTS test_mexlee10 
INSERT INTO test_01193_18429.table_1_524 VALUES 
SELECT '\\xyz\\' LIKE '\\\\%_%\\\\';
CREATE TABLE test_01193_18429.table_1_634 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_mcom722g 
SELECT '(forward, first_match, A->B)', id, sequenceNextNode('forward', 'first_match')(dt, action, 1, action = 'A', action = 'B') AS next_node FROM test_sequenceNextNode GROUP BY id ORDER BY id;
INSERT INTO test_01193_18429.table_2_670 VALUES 
SELECT * FROM merge(currentDatabase(), '02763_merge.*1') as a LEFT JOIN merge(currentDatabase(), '02763_merge.*2') as b USING (x) ORDER BY x SETTINGS optimize_move_to_prewhere= 0;
SELECT 'Running test stateless/01412_mod_float.sql from pid=1718' 
select * from test_ins_arr_null limit 10;
SELECT c2, c1 FROM t_02784 WHERE c1 = 0 AND c2 = 0;
SELECT countIf(explain like '%COMMA%' OR explain like '%CROSS%'), countIf(explain like '%INNER%') FROM ( EXPLAIN QUERY TREE SELECT t1.a FROM t1, t2, t3, t4 WHERE t4.a = t1.a AND t4.a = t2.a AND t4.a = t3.a SETTINGS allow_experimental_analyzer = 1);
CREATE TABLE test_754A2A5A785322317B5E456642256476677D2D674A5A26784D76702761647864414C2E355B605837(x UInt8) Engine=Memory;
SELECT avgWeighted(x, w) FROM values('x Float64, w Int64', (4, 1), (1, 0), (10, 2));
CREATE DATABASE IF NOT EXISTS test_boy7nywi 
SELECT 'Running test stateless/01643_replicated_merge_tree_fsync_smoke.sql from pid=1705' 
create table test_quantile (x AggregateFunction(quantileTiming(0.2), UInt64)) engine = Memory;
SHOW CREATE DATABASE replicated_database_params;
SELECT * FROM enum_mapping_protobuf_00825
SELECT * FROM remote('127.0.0.{1,2}', generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8)))))))))))))))))))))))))))))))))))))))))))))))))))))))', 1, 1, 1)) LIMIT 1 FORMAT Null
SELECT * FROM numbers(34549)
TRUNCATE TABLE parquet_types2
EXPLAIN QUERY TREE run_passes=1 SELECT value1 FROM date_t WHERE toYYYYMM(date1) < 199203 AND id BETWEEN 1 AND 3 SETTINGS allow_experimental_analyzer=1;
DROP TABLE hypothesis_test_test3;
CREATE TABLE test_01193_18429.table_3_185 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT length(randomPrintableASCII(1000));
INSERT INTO test_01193_18429.table_3_530 VALUES 
select '-- distinct with primary key prefix and order by columns are prefix of distinct columns -> pre-distinct and final distinct optimization'
select toTypeName(makeDate32(1991, 8, 24));
CREATE TABLE test_306B414E5545233833764E434D2A66316A4C2D6E55526979733F527E2D472269583B2B5B3E41625C(x UInt8) Engine=Memory;
select count() from file('02841.parquet') where indexHint(s > '');
CREATE TABLE numbers3 ENGINE = Log AS SELECT number FROM numbers(10);
create table t_01568 engine Memory as select intDiv(number, 3) p, modulo(number, 3) o, number from numbers(9);
CREATE TABLE sipHashKeyed_keys (key0 UInt64, key1 UInt64) ENGINE=Memory;
CREATE USER u11_01292 HOST IP '127.0.0.1';
insert into tab_00612 values 
SELECT COUNT(*) FROM system.session_log WHERE user = '02833_HTTP_USER_25955' AND type = 'LoginFailure'
select parseDateTimeInJodaSyntax('+102', 'xxM', 'UTC') = toDateTime('2010-02-01', 'UTC');
SELECT dummy FROM system.one ORDER BY materialize('{"k":"v"}'::JSON);
CREATE TABLE master (id Int32, name String) ENGINE = Join (ANY, LEFT, id) SETTINGS any_join_distinct_right_table_keys = 1;
EXPLAIN SYNTAX SELECT * FROM t_02147_merge ORDER BY toStartOfHour(date), v;
SELECT toString(toStartOfInterval(toDate(17933), INTERVAL 1 day, 'Asia/Istanbul'), 'Asia/Istanbul');
SELECT materialize(1) IN (SELECT materialize(1));
CREATE TABLE inner_join (x UInt32, s String) engine = Join(ALL, INNER, x);
INSERT INTO mt_with_pk (d, x, y, z, `n.Age`, `n.Name`) VALUES 
SELECT 1 AS x FORMAT ArrowStream
SELECT key, value FROM dict_flat ORDER BY key ASC;
ALTER TABLE r_prop_table2 MODIFY COLUMN column_default REMOVE DEFAULT;
CREATE TABLE test_01193_18429.table_5_319 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT (1,'') IN ((-1,''),(1,''));
SYSTEM RESTART REPLICA test_alter_r2;
SELECT DISTINCT * FROM ( SELECT DISTINCT * FROM ( SELECT DISTINCT number as a, 2*number as b FROM numbers(3) ) ) ORDER BY a, b
SELECT CASE WHEN (number % 2) = 0 THEN toUInt16(1) WHEN (number % 3) = 0 THEN toUInt8(2) ELSE toInt32(3) END FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/02189_join_type_conversion.sql from pid=1720' 
select count() from t1 where c1 in (select 'BBBBBB' union all select null);
GRANT USAGE ON *.* TO test_user_01999 WITH REPLACE OPTION;
SELECT /*/**/*/ 1;
drop table with_overflow;
SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (x) ORDER BY x, lc;
drop table data_01072;
CREATE TABLE test_01193_18429.table_2_525 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_8_37 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT max(a) FROM tt_m group by b order by b;
ALTER TABLE concurrent_alter_column ADD COLUMN c180 DOUBLE;
insert into xp select number, number + 2 from numbers(10);
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c6) AND (NOT c8)) OR ((NOT c4) AND c4 AND c7 AND (NOT c4)) SETTINGS convert_query_to_cnf = 0
select count() from view(select 1 union all (select 2 union all select 3));
INSERT INTO test_01193_18429.table_3_675 VALUES 
SELECT hex(-123.978);
DROP TABLE userid_set;
DROP DATABASE IF EXISTS test_5bg3zhso 
INSERT INTO test_01193_18429.table_7_325 VALUES 
INSERT INTO prop_table (column_materialized, column_alias, column_codec, column_comment, column_ttl) VALUES 
DROP TABLE IF EXISTS cube;
CREATE TABLE test_3841603343782474784725483B43223A3539283654214B4F7D3F5A752A4C75626926495D3D627653(x UInt8) Engine=Memory;
SHOW CREATE TABLE system.session_log
CREATE TABLE r10 (`x` UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/tables/01459_manual_write_to_replicas_test_rtlzcyyu/r', 'r10') ORDER BY x SETTINGS index_granularity = 13972, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 16861, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 3148779030, index_granularity_bytes = 14261115, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 47059, primary_key_compress_block_size = 60410
select 5 from t as l join t as r on l.id = r.id where l.x and r.x;
INSERT INTO test_01193_18429.table_1_814 VALUES 
SELECT toUUID(value) FROM to_uuid_test;
CREATE TABLE distinct (Num UInt32, Name String) ENGINE = Memory;
CREATE DATABASE IF NOT EXISTS test_gmla4knt 
SELECT sparkbar(2)(number, -number) FROM numbers(10);
CREATE TABLE test_01193_18429.table_5_662 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_6D524E2F562575574550672E6862795E71283F79653E45375F7526413041244C5940576E5D774F62(x UInt8) Engine=Memory;
CREATE TABLE test_4F2A31737A682F5A47595A637B5F35293B7D6B4577402D573F44335D6C66323D694B42445D31553E(x UInt8) Engine=Memory;
SELECT * FROM numbers(34622)
CREATE TABLE test_01193_18429.table_9_855 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_4C2A7675643739732921236B273D7D6D5C7A6B5F54575C6A23733732227C3D507A69266C427B263A(x UInt8) Engine=Memory;
ALTER TABLE 02581_trips UPDATE description='a' WHERE id IN (SELECT (number*10 + 1)::UInt32 FROM numbers(200000000)) SETTINGS mutations_sync=2, max_rows_in_set=1000;
CREATE DATABASE IF NOT EXISTS test_5u9xpf2p 
SELECT YYYYMMDDhhmmssToDateTime64(20230911150505.1);
INSERT INTO r7 SELECT 75 % 10 = 7 ? 75 - 1 : 75
DROP TABLE IF EXISTS 02184_range_dictionary_source_table;
CREATE TABLE test_01193_18429.table_1_257 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT CASE WHEN 1 THEN toFixedString('foo', 16) WHEN (col1 % 3) = 0 THEN col3 ELSE toFixedString(col4, 16) END FROM multi_if_check;
SELECT coalesce(minOrNull(is_done), 1) FROM system.mutations WHERE database='test_8vpf77vf' AND table like 'concurrent_alter_mt_%'
INSERT INTO json FORMAT JSONEachRow 
INSERT INTO dst_0 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 15
select array, d1, a1, a2, a3, a4, a5, a6 from aliases_test array join a4;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c7)) OR ((NOT c6) AND (NOT c2) AND (NOT c7) AND c7 AND c7) OR (c6 AND c5 AND c4 AND c9) OR (c8 AND (NOT c5)) OR ((NOT c9) AND (NOT c4) AND (NOT c9)) OR (c3 AND c5) OR (c1 AND c8 AND (NOT c9) AND c1) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_74412E354F3E49642427312C2B673235353A65703A422A6F294B733F3E696E427A793E466E5E7227(x UInt8) Engine=Memory;
SELECT 'type;toStartOfWeek;toDate32;true', toTypeName(toStartOfWeek(toDate32('1920-02-02'))) SETTINGS enable_extended_results_for_datetime_functions = true;
DESCRIBE (SELECT cast(tuple(1, 'Value'), 'Tuple (id UInt64, value String)') AS a, untuple(a) AS b);
select port('127.0.0.1:80');
ALTER TABLE dst REPLACE PARTITION 1 FROM dst;
DROP DATABASE IF EXISTS test_zwac3sdp 
CREATE QUOTA q5_01297 TO r1_01297, u1_01297;
SELECT getSetting(NULL);
CREATE DATABASE IF NOT EXISTS test_8tqraa5f 
DESCRIBE (SELECT COLUMNS(id), COLUMNS(value) FROM test_table);
DROP TABLE IF EXISTS student_ttest;
SELECT intDiv(toInt64(number), -1) FROM numbers(9223372036854775807, 10);
SELECT 'Running test stateless/00918_json_functions.sql from pid=1726' 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (0 < 15 AND 13 > 0 ? 0 : 0)), throwIf(last != (0 < 15 AND 13 > 0 ? least(15 - 1, 0 + 13 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(15) LIMIT 0, 13);
SELECT count() FROM binary_op_mono6 WHERE 1000 - i = 1234;
SELECT name, value, changed FROM system.settings WHERE name = 'readonly'
alter table many_mutations delete where y = 272 * 2 settings mutations_sync = 0;
CREATE TABLE test_table3 (`key` UInt64, `value1` UInt8, `value2` UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/02122_4letter_words_stress_zookeeper_test_0kxibqoo/test_table3', '0') ORDER BY key SETTINGS index_granularity = 17541, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.23175950348377228, replace_long_file_name_to_hash = false, max_file_name_length = 50, merge_max_block_size = 8729, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 46, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 18782046, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 70172, primary_key_compress_block_size = 58564
SELECT materialize('a\0b') LIKE materialize('a\0b');
CREATE TABLE test_01193_18429.table_4_135 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
EXPLAIN SYNTAX SELECT * FROM (SELECT 1 AS id, 2 AS value) INNER JOIN (SELECT 1 AS id, 3 AS value_1) USING id WHERE arrayMap(x -> x + value + value_1, [1]) = [6];
SELECT 0, 2147483649, 0 = 2147483649, 0 != 2147483649, 0 < 2147483649, 0 <= 2147483649, 0 > 2147483649, 0 >= 2147483649, 2147483649 = 0, 2147483649 != 0, 2147483649 < 0, 2147483649 <= 0, 2147483649 > 0, 2147483649 >= 0 , toUInt8(0) = toUInt32(2147483649), toUInt8(0) != toUInt32(2147483649), toUInt8(0) < toUInt32(2147483649), toUInt8(0) <= toUInt32(2147483649), toUInt8(0) > toUInt32(2147483649), toUInt8(0) >= toUInt32(2147483649), toUInt32(2147483649) = toUInt8(0), toUInt32(2147483649) != toUInt8(0), toUInt32(2147483649) < toUInt8(0), toUInt32(2147483649) <= toUInt8(0), toUInt32(2147483649) > toUInt8(0), toUInt32(2147483649) >= toUInt8(0) , toUInt8(0) = toUInt64(2147483649), toUInt8(0) != toUInt64(2147483649), toUInt8(0) < toUInt64(2147483649), toUInt8(0) <= toUInt64(2147483649), toUInt8(0) > toUInt64(2147483649), toUInt8(0) >= toUInt64(2147483649), toUInt64(2147483649) = toUInt8(0), toUInt64(2147483649) != toUInt8(0), toUInt64(2147483649) < toUInt8(0), toUInt64(2147483649) <= toUInt8(0), toUInt64(2147483649) > toUInt8(0), toUInt64(2147483649) >= toUInt8(0) , toUInt8(0) = toInt64(2147483649), toUInt8(0) != toInt64(2147483649), toUInt8(0) < toInt64(2147483649), toUInt8(0) <= toInt64(2147483649), toUInt8(0) > toInt64(2147483649), toUInt8(0) >= toInt64(2147483649), toInt64(2147483649) = toUInt8(0), toInt64(2147483649) != toUInt8(0), toInt64(2147483649) < toUInt8(0), toInt64(2147483649) <= toUInt8(0), toInt64(2147483649) > toUInt8(0), toInt64(2147483649) >= toUInt8(0) , toInt8(0) = toUInt32(2147483649), toInt8(0) != toUInt32(2147483649), toInt8(0) < toUInt32(2147483649), toInt8(0) <= toUInt32(2147483649), toInt8(0) > toUInt32(2147483649), toInt8(0) >= toUInt32(2147483649), toUInt32(2147483649) = toInt8(0), toUInt32(2147483649) != toInt8(0), toUInt32(2147483649) < toInt8(0), toUInt32(2147483649) <= toInt8(0), toUInt32(2147483649) > toInt8(0), toUInt32(2147483649) >= toInt8(0) , toInt8(0) = toUInt64(2147483649), toInt8(0) != toUInt64(2147483649), toInt8(0) < toUInt64(2147483649), toInt8(0) <= toUInt64(2147483649), toInt8(0) > toUInt64(2147483649), toInt8(0) >= toUInt64(2147483649), toUInt64(2147483649) = toInt8(0), toUInt64(2147483649) != toInt8(0), toUInt64(2147483649) < toInt8(0), toUInt64(2147483649) <= toInt8(0), toUInt64(2147483649) > toInt8(0), toUInt64(2147483649) >= toInt8(0) , toInt8(0) = toInt64(2147483649), toInt8(0) != toInt64(2147483649), toInt8(0) < toInt64(2147483649), toInt8(0) <= toInt64(2147483649), toInt8(0) > toInt64(2147483649), toInt8(0) >= toInt64(2147483649), toInt64(2147483649) = toInt8(0), toInt64(2147483649) != toInt8(0), toInt64(2147483649) < toInt8(0), toInt64(2147483649) <= toInt8(0), toInt64(2147483649) > toInt8(0), toInt64(2147483649) >= toInt8(0) , toUInt16(0) = toUInt32(2147483649), toUInt16(0) != toUInt32(2147483649), toUInt16(0) < toUInt32(2147483649), toUInt16(0) <= toUInt32(2147483649), toUInt16(0) > toUInt32(2147483649), toUInt16(0) >= toUInt32(2147483649), toUInt32(2147483649) = toUInt16(0), toUInt32(2147483649) != toUInt16(0), toUInt32(2147483649) < toUInt16(0), toUInt32(2147483649) <= toUInt16(0), toUInt32(2147483649) > toUInt16(0), toUInt32(2147483649) >= toUInt16(0) , toUInt16(0) = toUInt64(2147483649), toUInt16(0) != toUInt64(2147483649), toUInt16(0) < toUInt64(2147483649), toUInt16(0) <= toUInt64(2147483649), toUInt16(0) > toUInt64(2147483649), toUInt16(0) >= toUInt64(2147483649), toUInt64(2147483649) = toUInt16(0), toUInt64(2147483649) != toUInt16(0), toUInt64(2147483649) < toUInt16(0), toUInt64(2147483649) <= toUInt16(0), toUInt64(2147483649) > toUInt16(0), toUInt64(2147483649) >= toUInt16(0) , toUInt16(0) = toInt64(2147483649), toUInt16(0) != toInt64(2147483649), toUInt16(0) < toInt64(2147483649), toUInt16(0) <= toInt64(2147483649), toUInt16(0) > toInt64(2147483649), toUInt16(0) >= toInt64(2147483649), toInt64(2147483649) = toUInt16(0), toInt64(2147483649) != toUInt16(0), toInt64(2147483649) < toUInt16(0), toInt64(2147483649) <= toUInt16(0), toInt64(2147483649) > toUInt16(0), toInt64(2147483649) >= toUInt16(0) , toInt16(0) = toUInt32(2147483649), toInt16(0) != toUInt32(2147483649), toInt16(0) < toUInt32(2147483649), toInt16(0) <= toUInt32(2147483649), toInt16(0) > toUInt32(2147483649), toInt16(0) >= toUInt32(2147483649), toUInt32(2147483649) = toInt16(0), toUInt32(2147483649) != toInt16(0), toUInt32(2147483649) < toInt16(0), toUInt32(2147483649) <= toInt16(0), toUInt32(2147483649) > toInt16(0), toUInt32(2147483649) >= toInt16(0) , toInt16(0) = toUInt64(2147483649), toInt16(0) != toUInt64(2147483649), toInt16(0) < toUInt64(2147483649), toInt16(0) <= toUInt64(2147483649), toInt16(0) > toUInt64(2147483649), toInt16(0) >= toUInt64(2147483649), toUInt64(2147483649) = toInt16(0), toUInt64(2147483649) != toInt16(0), toUInt64(2147483649) < toInt16(0), toUInt64(2147483649) <= toInt16(0), toUInt64(2147483649) > toInt16(0), toUInt64(2147483649) >= toInt16(0) , toInt16(0) = toInt64(2147483649), toInt16(0) != toInt64(2147483649), toInt16(0) < toInt64(2147483649), toInt16(0) <= toInt64(2147483649), toInt16(0) > toInt64(2147483649), toInt16(0) >= toInt64(2147483649), toInt64(2147483649) = toInt16(0), toInt64(2147483649) != toInt16(0), toInt64(2147483649) < toInt16(0), toInt64(2147483649) <= toInt16(0), toInt64(2147483649) > toInt16(0), toInt64(2147483649) >= toInt16(0) , toUInt32(0) = toUInt32(2147483649), toUInt32(0) != toUInt32(2147483649), toUInt32(0) < toUInt32(2147483649), toUInt32(0) <= toUInt32(2147483649), toUInt32(0) > toUInt32(2147483649), toUInt32(0) >= toUInt32(2147483649), toUInt32(2147483649) = toUInt32(0), toUInt32(2147483649) != toUInt32(0), toUInt32(2147483649) < toUInt32(0), toUInt32(2147483649) <= toUInt32(0), toUInt32(2147483649) > toUInt32(0), toUInt32(2147483649) >= toUInt32(0) , toUInt32(0) = toUInt64(2147483649), toUInt32(0) != toUInt64(2147483649), toUInt32(0) < toUInt64(2147483649), toUInt32(0) <= toUInt64(2147483649), toUInt32(0) > toUInt64(2147483649), toUInt32(0) >= toUInt64(2147483649), toUInt64(2147483649) = toUInt32(0), toUInt64(2147483649) != toUInt32(0), toUInt64(2147483649) < toUInt32(0), toUInt64(2147483649) <= toUInt32(0), toUInt64(2147483649) > toUInt32(0), toUInt64(2147483649) >= toUInt32(0) , toUInt32(0) = toInt64(2147483649), toUInt32(0) != toInt64(2147483649), toUInt32(0) < toInt64(2147483649), toUInt32(0) <= toInt64(2147483649), toUInt32(0) > toInt64(2147483649), toUInt32(0) >= toInt64(2147483649), toInt64(2147483649) = toUInt32(0), toInt64(2147483649) != toUInt32(0), toInt64(2147483649) < toUInt32(0), toInt64(2147483649) <= toUInt32(0), toInt64(2147483649) > toUInt32(0), toInt64(2147483649) >= toUInt32(0) , toInt32(0) = toUInt32(2147483649), toInt32(0) != toUInt32(2147483649), toInt32(0) < toUInt32(2147483649), toInt32(0) <= toUInt32(2147483649), toInt32(0) > toUInt32(2147483649), toInt32(0) >= toUInt32(2147483649), toUInt32(2147483649) = toInt32(0), toUInt32(2147483649) != toInt32(0), toUInt32(2147483649) < toInt32(0), toUInt32(2147483649) <= toInt32(0), toUInt32(2147483649) > toInt32(0), toUInt32(2147483649) >= toInt32(0) , toInt32(0) = toUInt64(2147483649), toInt32(0) != toUInt64(2147483649), toInt32(0) < toUInt64(2147483649), toInt32(0) <= toUInt64(2147483649), toInt32(0) > toUInt64(2147483649), toInt32(0) >= toUInt64(2147483649), toUInt64(2147483649) = toInt32(0), toUInt64(2147483649) != toInt32(0), toUInt64(2147483649) < toInt32(0), toUInt64(2147483649) <= toInt32(0), toUInt64(2147483649) > toInt32(0), toUInt64(2147483649) >= toInt32(0) , toInt32(0) = toInt64(2147483649), toInt32(0) != toInt64(2147483649), toInt32(0) < toInt64(2147483649), toInt32(0) <= toInt64(2147483649), toInt32(0) > toInt64(2147483649), toInt32(0) >= toInt64(2147483649), toInt64(2147483649) = toInt32(0), toInt64(2147483649) != toInt32(0), toInt64(2147483649) < toInt32(0), toInt64(2147483649) <= toInt32(0), toInt64(2147483649) > toInt32(0), toInt64(2147483649) >= toInt32(0) , toUInt64(0) = toUInt32(2147483649), toUInt64(0) != toUInt32(2147483649), toUInt64(0) < toUInt32(2147483649), toUInt64(0) <= toUInt32(2147483649), toUInt64(0) > toUInt32(2147483649), toUInt64(0) >= toUInt32(2147483649), toUInt32(2147483649) = toUInt64(0), toUInt32(2147483649) != toUInt64(0), toUInt32(2147483649) < toUInt64(0), toUInt32(2147483649) <= toUInt64(0), toUInt32(2147483649) > toUInt64(0), toUInt32(2147483649) >= toUInt64(0) , toUInt64(0) = toUInt64(2147483649), toUInt64(0) != toUInt64(2147483649), toUInt64(0) < toUInt64(2147483649), toUInt64(0) <= toUInt64(2147483649), toUInt64(0) > toUInt64(2147483649), toUInt64(0) >= toUInt64(2147483649), toUInt64(2147483649) = toUInt64(0), toUInt64(2147483649) != toUInt64(0), toUInt64(2147483649) < toUInt64(0), toUInt64(2147483649) <= toUInt64(0), toUInt64(2147483649) > toUInt64(0), toUInt64(2147483649) >= toUInt64(0) , toUInt64(0) = toInt64(2147483649), toUInt64(0) != toInt64(2147483649), toUInt64(0) < toInt64(2147483649), toUInt64(0) <= toInt64(2147483649), toUInt64(0) > toInt64(2147483649), toUInt64(0) >= toInt64(2147483649), toInt64(2147483649) = toUInt64(0), toInt64(2147483649) != toUInt64(0), toInt64(2147483649) < toUInt64(0), toInt64(2147483649) <= toUInt64(0), toInt64(2147483649) > toUInt64(0), toInt64(2147483649) >= toUInt64(0) , toInt64(0) = toUInt32(2147483649), toInt64(0) != toUInt32(2147483649), toInt64(0) < toUInt32(2147483649), toInt64(0) <= toUInt32(2147483649), toInt64(0) > toUInt32(2147483649), toInt64(0) >= toUInt32(2147483649), toUInt32(2147483649) = toInt64(0), toUInt32(2147483649) != toInt64(0), toUInt32(2147483649) < toInt64(0), toUInt32(2147483649) <= toInt64(0), toUInt32(2147483649) > toInt64(0), toUInt32(2147483649) >= toInt64(0) , toInt64(0) = toUInt64(2147483649), toInt64(0) != toUInt64(2147483649), toInt64(0) < toUInt64(2147483649), toInt64(0) <= toUInt64(2147483649), toInt64(0) > toUInt64(2147483649), toInt64(0) >= toUInt64(2147483649), toUInt64(2147483649) = toInt64(0), toUInt64(2147483649) != toInt64(0), toUInt64(2147483649) < toInt64(0), toUInt64(2147483649) <= toInt64(0), toUInt64(2147483649) > toInt64(0), toUInt64(2147483649) >= toInt64(0) , toInt64(0) = toInt64(2147483649), toInt64(0) != toInt64(2147483649), toInt64(0) < toInt64(2147483649), toInt64(0) <= toInt64(2147483649), toInt64(0) > toInt64(2147483649), toInt64(0) >= toInt64(2147483649), toInt64(2147483649) = toInt64(0), toInt64(2147483649) != toInt64(0), toInt64(2147483649) < toInt64(0), toInt64(2147483649) <= toInt64(0), toInt64(2147483649) > toInt64(0), toInt64(2147483649) >= toInt64(0) 
SELECT jsonMergePatch(NULL);
SELECT parseDateTimeBestEffortOrNull('2020-05-14 11:37:03 AM', 3, 'UTC') AS a, toTypeName(a);
SELECT toInt64(partition) as p FROM system.parts WHERE table='table1' and database=currentDatabase() ORDER BY p;
CREATE TABLE test_01193_18429.table_6_543 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT name, comment FROM system.tables WHERE name IN ('t1', 't2', 't3') AND database = currentDatabase() order by name;
INSERT INTO ttl_group_by SELECT toDate('2000-10-10'), number, number FROM numbers(100);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (79 < 85 AND 33 > 0 ? 79 : 0)), throwIf(last != (79 < 85 AND 33 > 0 ? least(85 - 1, 79 + 33 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(85) LIMIT 79, 33);
CREATE TABLE test_443053335B2D787636222D483F3876473454473D3673705C6B304059582F754D242230286B225B70(x UInt8) Engine=Memory;
attach database rdb_test_5mr53c62_2
SELECT space(i64), length(space(i64)) FROM defaults;
select '-------subtractWeeks---------';
SYSTEM SYNC REPLICA minmax_idx;
CREATE TABLE test_01193_18429.table_4_423 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_6_193 VALUES 
select sipHash128ReferenceKeyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21)) == sipHash128Reference(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21));
DROP DATABASE IF EXISTS test_9dbshs3x 
SELECT CASE WHEN (col1 % 2) = 0 THEN ['foo', col3] WHEN (col1 % 3) = 0 THEN [col4, col5] ELSE ['foo', col7] END FROM multi_if_check;
CREATE TABLE test_01193_18429.table_9_144 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_2_363 VALUES 
select hex(sipHash128ReferenceKeyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25)));
SELECT CASE WHEN (number % 2) = 0 THEN [toInt16(1), toInt16(2)] WHEN (number % 3) = 0 THEN [toInt16(2), toInt16(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
SELECT arraySort(x -> (x.1, x.2), groupArray(t)) == [(1, '1')] FROM null_in_tuple WHERE t in ((1, '1'), (1, NULL));
SHOW CREATE TABLE mv;
INSERT INTO test_01193_18429.table_5_736 VALUES 
DROP DATABASE IF EXISTS test_b41abdlm 
select number, arrayReduce( 'sumMap', [a],[b] ) from (select [100,100,200] a,[10,20,30] b, number from numbers(1));
SELECT CASE WHEN (number % 2) = 0 THEN [toInt8(1), toInt8(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toFloat64(3), toFloat64(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_705F3071227078542B725F5B76325F7E68526B76734C5845464E786C38423871276371422931382F(x UInt8) Engine=Memory;
SELECT toInt64(999999999) as x, toDecimal32(x, 0), toDecimal32(-x, 0), toDecimal64(x, 0), toDecimal64(-x, 0);
SELECT coalesce(toDecimal32(5, 0), NULL), coalesce(toDecimal64(5, 0), NULL), coalesce(toDecimal128(5, 0), NULL);
SELECT toDecimal128OrDefault ('\'', 4);
select * from file(dump14.sql, MySQLDump) settings input_format_mysql_dump_table_name='test2', max_threads=1
SELECT * FROM t__fuzz_0 PREWHERE 7 AND (i < 2147483647) AND (j IN (2147483646, -2, 1)) SETTINGS allow_experimental_analyzer = true;
INSERT INTO 01684_database_for_cache_dictionary.simple_key_complex_attributes_source_table VALUES
DROP DATABASE IF EXISTS test_n6lig2oj 
CREATE DATABASE IF NOT EXISTS test_nlocgyvn 
DROP DATABASE IF EXISTS test_s42arjgo 
SELECT '--------------Distributed Merge Distributed------------';
DROP DATABASE IF EXISTS test_2e0a8bic 
SELECT * FROM (SELECT year, month, day, count(*) FROM days GROUP BY year, month, day WITH ROLLUP) ORDER BY 1, 2, 3
DROP TABLE IF EXISTS ttl_group_by;
select 0 = isValidUTF8(toFixedString('\xEF\x80\x00', 3)) from system.numbers limit 10;
CREATE TABLE test_01193_18429.table_8_874 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT a, e FROM t_fixed_prefix WHERE a = 1 AND b = 1 ORDER BY a, e SETTINGS optimize_read_in_order = 1
SELECT welchTTest(NULL);
SELECT multiIf((col1 % 2) = 0, ['foo', 'bar'], (col1 % 3) = 0, ['foo', 'bar'], ['foo', col7]) FROM multi_if_check;
drop table if exists lc_fix_str_0;
CREATE TABLE test_01193_18429.table_7_598 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_8_369 VALUES 
SELECT 'Union non constants';
SELECT d64, count() FROM with_fill_date GROUP BY d64 ORDER BY d64 WITH FILL STEP INTERVAL 15 MINUTE LIMIT 5;
SELECT 'dictGet existing value';
DROP DATABASE IF EXISTS test_scmimxii 
INSERT INTO r4 SELECT 49
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a ANTI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d USING (id) ;
set use_variant_as_common_type=1;
CREATE MATERIALIZED VIEW with_deduplication_mv UUID '00000510-1000-4000-8000-000000000001' ENGINE = ReplicatedAggregatingMergeTree('/clickhouse/tables/{database}/test_00510/with_deduplication_mv', 'r1') ORDER BY dummy SETTINGS index_granularity = 21782, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 84, merge_max_block_size = 10797, prefer_fetch_merged_part_size_threshold = 2889815521, vertical_merge_algorithm_min_rows_to_activate = 294603, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 7707334, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 25255, primary_key_compress_block_size = 64689 AS SELECT 0 AS dummy, countState(x) AS cnt FROM with_deduplication
SELECT toInt256(NULL, NULL, NULL);
drop table if exists ttl_test_02129;
DETACH TABLE codecs2;
select [0] = multiSearchAllPositions(materialize('abc'), ['d']);
SELECT * FROM set_idx WHERE i32 = 5 AND i32 + f64 < 12 AND 3 < d AND d < 7 AND (s = 'bac' OR s = 'cba') ORDER BY dt FORMAT JSON
CREATE TABLE test_01193_18429.table_7_505 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_table_ipv4 ( ip String, ipv4 IPv4 ) ENGINE = TinyLog;
SELECT CASE WHEN (number % 2) = 0 THEN toFloat64(1) WHEN (number % 3) = 0 THEN toInt16(2) ELSE toInt16(3) END FROM system.numbers LIMIT 10;
DESCRIBE (SELECT 1 AS id, 2 AS value, * FROM test_table AS t1);
SELECT sumMerge(s) FROM (SELECT sumMergeState(n) s FROM (SELECT sumState(number) n FROM numbers(0)));
CREATE TABLE test_02908_r1_241 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_241', 'r1') ORDER BY tuple()
SELECT k, l, m, n, count() FROM t2 GROUP BY k, l, m, n ORDER BY k, l, m, n;
INSERT INTO replicated_versioned_collapsing VALUES 
CREATE TABLE test_01193_18429.table_3_562 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select histogram(5)(number) from (select * from system.numbers limit 20);
SELECT detectLanguage('Ã¦ÂÂÃ¦ÂÂ Ã©Â¥Â®Ã¦Â°Â´Ã©Â¥Â±Ã¯Â¼ÂÃ¦ÂÂ Ã¦ÂÂ Ã©Â£ÂÃ©Â¥Â­Ã©Â¥Â¥Ã£ÂÂ');
ALTER TABLE src_11 MODIFY SETTING max_replicated_merges_in_queue=0
SELECT toUInt8(128), bitPositionsToArray(toUInt8(128));
SELECT COUNT(*) FROM zero_rows_per_granule2;
DROP DATABASE IF EXISTS test_gswmgsr4 
select a, b from order_by_another order by a desc nulls last, b desc limit 4;
select s2ToGeo(4573517609713934091);
SELECT 'Running test stateless/02345_partial_sort_transform_optimization.sql from pid=1718' 
INSERT INTO alter_table0 SELECT 8084, 14
SELECT [NULL, '25.6', '-0.02', NULL], [NULL], 1024, [NULL, '10485.76', NULL, NULL], [NULL, '-922337203.6854775808', toNullable(NULL)], [NULL] FROM (SELECT [multiIf((number % 1023) = -inf, toString(number), NULL)], NULL, '-1', multiIf((number % NULL) = NULL, toString(number), ''), [NULL, NULL], multiIf((number % NULL) = 65536, toString(number), '') AS s FROM system.numbers) LIMIT 1024 format Null 
SELECT 1 WHERE not ignore(sleep(0.520)) /* QUERY_GROUP_ID:main_dashboard_top_query */;
select 1 = isValidUTF8(toValidUTF8('\xF4\x8F\x88\xAA')) from system.numbers limit 10;
CREATE TABLE test_01193_18429.table_9_621 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Still alive'
CREATE DATABASE IF NOT EXISTS test_lki0g3z1 
INSERT INTO r4 SELECT 69 % 10 = 4 ? 69 - 1 : 69
SELECT * FROM visits_dist ORDER BY StartDate, Name2;
CREATE TABLE test_01193_18429.table_3_18 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP TABLE 01760_db.example_complex_key_source;
SELECT 'a' AS key, 'b' as value GROUP BY ignore(1) WITH CUBE;
SELECT multiIf((number % 2) = 0, toFloat64(1), (number % 3) = 0, toInt32(2), toFloat64(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_5_509 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select toDateOrDefault('1xx', '2023-05-30'::Date);
CREATE TABLE test_01193_18429.table_8_769 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
create table mut (n int, m int, k int) engine=ReplicatedMergeTree('/test/02441/{database}/mut', '1') order by n;
INSERT INTO r1 SELECT 48
select count(), any(is_readonly), any(state) from system.transactions where tid=(391,34,'4fa7d06d-ba4e-4748-a58f-9b2d37612e2a')
SELECT 'Running test stateless/01702_toDateTime_from_string_clamping.sql from pid=1718' 
SELECT count(n) FROM t_func_to_subcolumns;
select 5 = position('abcabc', 'b', 5);
INSERT INTO test_01193_18429.table_3_349 VALUES 
DROP DATABASE IF EXISTS test_x1witltf 
SELECT s, replaceAll(s, '_', 'oo') AS a, replaceRegexpAll(s, '_', 'oo') AS b, a = b FROM (SELECT arrayJoin(['_.', '._']) AS s);
CREATE TABLE t3 (`id` UInt32, `value3` String) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 40377, min_bytes_for_wide_part = 194702321, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 6175, prefer_fetch_merged_part_size_threshold = 7318358710, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 517036807, index_granularity_bytes = 29731311, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 31087, primary_key_compress_block_size = 19781
drop view my_view;
INSERT INTO test_01193_18429.table_7_54 VALUES 
SELECT 'Running test stateless/00993_system_parts_race_condition_drop_zookeeper.sh from pid=1705' 
select hasSubsequence(materialize('garbage'), materialize(''));
SELECT '***ipv6 trie dict***';
CREATE INDEX idx_tab3_5 ON tab3 (col1 DESC);
SELECT nothing(NULL);
DROP DICTIONARY IF EXISTS 02185_range_dictionary;
CREATE TABLE test_627D697D5A5C2F2A6E6749682D43646F736E614C24763E6E79267D375A452D622D3854474A55263B(x UInt8) Engine=Memory;
select 0 = multiSearchAnyCaseInsensitiveUTF8(materialize('ÃÂºÃÂ§ÃÂ±ÃÂ¾ÃÂÃÂ¥ÃÂÃÂ²ÃÂÃÂ¥ÃÂ ÃÂÃÂÃÂ¼ÃÂ¨ÃÂ³ÃÂÃÂ°ÃÂ¨ÃÂ¨ÃÂ°ÃÂÃÂ·ÃÂ'), ['ÃÂ£ÃÂÃÂ¸', 'ÃÂ»ÃÂÃÂÃÂÃÂÃÂºÃÂÃÂÃÂ·ÃÂÃÂ¦ÃÂ¡ÃÂÃÂÃÂ´ÃÂ©ÃÂÃÂÃÂ¨ÃÂÃÂ¹ÃÂÃÂÃÂÃÂµÃÂÃÂ¸ÃÂ³ÃÂÃÂ»ÃÂÃÂÃÂ', 'ÃÂÃÂÃÂÃÂÃÂ´ÃÂÃÂ¦ÃÂ°ÃÂÃÂ¹ÃÂ¡ÃÂ¢ÃÂÃÂÃÂÃÂ»ÃÂ ÃÂÃÂÃÂ¦ÃÂ´ÃÂ¸ÃÂ¿ÃÂ¶ÃÂ¨ÃÂÃÂºÃÂÃÂÃÂÃÂ¥ÃÂ¦ÃÂ', 'ÃÂÃÂ£ÃÂºÃÂ¶ÃÂÃÂ¤ÃÂÃÂÃÂÃÂÃÂ¦ÃÂ§ÃÂ¼', 'ÃÂ¤ÃÂÃÂ»ÃÂ½ÃÂÃÂ°ÃÂÃÂ¡ÃÂ¥ÃÂ·ÃÂÃÂ¾ÃÂ¥ÃÂÃÂ¡ÃÂÃÂ¾ÃÂ¡ÃÂ³ÃÂÃÂ¢ÃÂÃÂºÃÂÃÂ§ÃÂ¹ÃÂ', 'ÃÂ¦ÃÂÃÂ¡ÃÂÃÂÃÂÃÂÃÂÃÂ¼ÃÂ½ÃÂÃÂ½ÃÂ¥ÃÂÃÂ¸ÃÂ²ÃÂÃÂÃÂÃÂÃÂ¶ÃÂ²', 'ÃÂ¶ÃÂ·ÃÂÃÂ³ÃÂ½ÃÂÃÂ¸ÃÂ¤', 'ÃÂÃÂ¨ÃÂÃÂÃÂÃÂ§ÃÂÃÂÃÂÃÂÃÂ¶ÃÂ´', 'ÃÂÃÂÃÂ¸ÃÂÃÂ¶ÃÂÃÂ¾ÃÂ ÃÂÃÂ ', 'ÃÂ§ÃÂ±ÃÂ¹ÃÂÃÂÃÂ¥ÃÂÃÂÃÂÃÂÃÂºÃÂÃÂ§ÃÂÃÂµÃÂÃÂ', 'ÃÂ¦ÃÂ´ÃÂ©ÃÂÃÂºÃÂÃÂ²ÃÂ ÃÂ¦ÃÂ¶ÃÂÃÂ§ÃÂÃÂ¸ÃÂµÃÂºÃÂÃÂ ÃÂ¹ÃÂ ÃÂÃÂ±ÃÂ±ÃÂÃÂÃÂ§', 'ÃÂ¸ÃÂÃÂ¶ÃÂµÃÂ½', 'ÃÂÃÂÃÂÃÂÃÂ¶ÃÂ²ÃÂÃÂÃÂÃÂ¶ÃÂÃÂÃÂ ÃÂÃÂ', 'ÃÂ¨ÃÂ¾ÃÂÃÂ´ÃÂÃÂÃÂÃÂÃÂÃÂ§ÃÂµÃÂ³ÃÂÃÂ¼ÃÂÃÂ', 'ÃÂ¹ÃÂÃÂÃÂ', 'ÃÂ ÃÂÃÂµÃÂ´ÃÂ²ÃÂ¢']) from system.numbers limit 10;
DETACH TABLE test_hjqqp1i2.t_mv_00751
DROP TABLE IF EXISTS 01062_window_view_event_hop_watch_asc.wv SYNC
INSERT INTO test_01193_18429.table_7_408 VALUES 
INSERT INTO r3 SELECT 37
INSERT INTO test_01193_18429.table_9_827 VALUES 
DROP DATABASE IF EXISTS test_c6uygibu 
CREATE DATABASE IF NOT EXISTS test_yk9180p3 
SELECT toDate32(NULL, NULL);
SELECT count() FROM t_cnf_fuzz WHERE (c6 AND c8) OR (c6 AND c4) OR ((NOT c6) AND (NOT c5)) SETTINGS convert_query_to_cnf = 0
INSERT INTO test_01193_18429.table_6_270 VALUES 
INSERT INTO mt VALUES /* (-10, 2) */ 
INSERT INTO r1 SELECT 91 % 10 = 1 ? 91 - 1 : 91
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), N >= toUInt64(1) as r FORMAT CSV;
select 1 = positionCaseInsensitiveUTF8(materialize(''), '') from system.numbers limit 10;
SELECT 'Running test stateless/02503_cache_on_write_with_small_segment_size.sh from pid=1705' 
SYSTEM SYNC REPLICA alter_table_4 STRICT
CREATE DATABASE IF NOT EXISTS test_biyq758n 
DROP DATABASE IF EXISTS test_tg8vt4st 
INSERT INTO src_9 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 13
SELECT count() FROM t_sparse WHERE u > 0;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (14 < 93 AND 2 > 0 ? 14 : 0)), throwIf(last != (14 < 93 AND 2 > 0 ? least(93 - 1, 14 + 2 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(93) LIMIT 14, 2);
CREATE TABLE test_01193_18429.table_4_342 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_10_437 VALUES 
SELECT 'Running test stateless/02022_storage_filelog_one_file.sh from pid=1715' 
CREATE TABLE test_2C5C4723726745556A58612F5B68493F7B5728276254743A2C774F2E7652554B454C5A766A4A577A(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_yxp9m1sb 
CREATE TABLE test_6B6934394C4868573B5263625B7D493163692D3F56492430373E3A3B504D5A7C212E4D6F736A5960(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01889_postgresql_protocol_null_fields.sh from pid=1705' 
CREATE TABLE test_696D245236285139215F55702D6C312A795E597C5821465C61445D535272412341312E257872455F(x UInt8) Engine=Memory;
DROP DATABASE database_123456789abcde;
select v, variantElement(v, 'Decimal256(6)') from format(JSONEachRow, 'v Variant(String, Decimal256(6))', '{"v" : null}, {"v" : "string"}, {"v" : 42.42}, {"v" : 4242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242.424242424242424242}') format JSONEachRow;
insert into one_table select today(), toUInt64(1) from system.numbers limit 100000;
INSERT INTO test_01193_18429.table_1_510 VALUES 
WITH x -> x + 1 AS lambda SELECT lambda(1);
SELECT 18446744073709551615, -9223372036854775808, 18446744073709551615 = -9223372036854775808, 18446744073709551615 != -9223372036854775808, 18446744073709551615 < -9223372036854775808, 18446744073709551615 <= -9223372036854775808, 18446744073709551615 > -9223372036854775808, 18446744073709551615 >= -9223372036854775808, -9223372036854775808 = 18446744073709551615, -9223372036854775808 != 18446744073709551615, -9223372036854775808 < 18446744073709551615, -9223372036854775808 <= 18446744073709551615, -9223372036854775808 > 18446744073709551615, -9223372036854775808 >= 18446744073709551615 , toUInt64(18446744073709551615) = toInt64(-9223372036854775808), toUInt64(18446744073709551615) != toInt64(-9223372036854775808), toUInt64(18446744073709551615) < toInt64(-9223372036854775808), toUInt64(18446744073709551615) <= toInt64(-9223372036854775808), toUInt64(18446744073709551615) > toInt64(-9223372036854775808), toUInt64(18446744073709551615) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toUInt64(18446744073709551615), toInt64(-9223372036854775808) != toUInt64(18446744073709551615), toInt64(-9223372036854775808) < toUInt64(18446744073709551615), toInt64(-9223372036854775808) <= toUInt64(18446744073709551615), toInt64(-9223372036854775808) > toUInt64(18446744073709551615), toInt64(-9223372036854775808) >= toUInt64(18446744073709551615) 
select initializeAggregation('sumMap', [1, 2], [1, 2], [1, null]);
INSERT INTO test_01193_18429.table_7_116 VALUES 
select 'left subs';
Select argMax((n, n), n) t, toTypeName(t) FROM (Select if(number % 3 == 0, NULL, number) as n from numbers(10));
SELECT length(haystack), length(matches), length(matches[1]), arrayReduce('sum', arrayMap((x) -> length(x), matches[1])) FROM ( SELECT repeat('abcdefghijklmnopqrstuvwxyz', number * 10) AS haystack, extractAllGroupsHorizontal(haystack, '(\\w)') AS matches FROM numbers(3) );
DROP DICTIONARY hierachical_cache_dictionary;
SET DEFAULT ROLE session_log_test_role, session_log_test_role2 TO session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_plaintext_password_two_profiles_two_roles;
SELECT 'sign(Int32)';
CREATE TABLE test2 (`col1` UInt64, `col3` Int16) ENGINE = MergeTree ORDER BY col1 SETTINGS index_granularity = 34414, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8926, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 29829688, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 62842, primary_key_compress_block_size = 43154
CREATE TABLE test_6C67737C76386F3578264032473B485C782949302453216E692056653E7A7562453E4B435550326A(x UInt8) Engine=Memory;
select '-------toDate32---------';
SELECT lc, toTypeName(lc) FROM l_lc AS l RIGHT JOIN r_lc AS r USING (x) ORDER BY x, lc;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt8(1), toInt8(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toUInt8(3), toUInt8(3)] END FROM system.numbers LIMIT 10;
SELECT h3kRing(arrayJoin([579205133326352383]), arrayJoin([toUInt16(1),toUInt16(2),toUInt16(3)]));
CREATE TABLE test_01193_18429.table_2_477 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
create materialized view a refresh after 1 second engine Memory empty as select number as x from numbers(2) union all select rand64() as x
CREATE TABLE test_01193_18429.table_4_124 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select v, variantElement(v, 'UInt8') from format(TSV, 'v Variant(String, UInt8, Int64)', '\\N\nstring\n-1\n0\n10000000000\n42d42') format TSV;
CREATE TABLE dst (`id` UInt64, `delta` Int64) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 8733, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.5229409337043762, replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 2846, prefer_fetch_merged_part_size_threshold = 1151533464, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 12986057, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 46754, primary_key_compress_block_size = 51185
SELECT arrayZip([0, 1], ['hello', 'world']);
drop dictionary if exists dict2;
SELECT hex(1.234567890123456789012345678901::Decimal(60, 30));
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), N <= toInt32(-1) as r FORMAT CSV;
SELECT * FROM file('/var/lib/clickhouse/user_files/02661_read_from_archive_test_t8u0u0ho_tarxz_archive{1,2}.tar.xz :: 02661_read_from_archive_test_t8u0u0ho_tarxz_data{1,3}.csv') ORDER BY 1, 2
CREATE TABLE test_01193_18429.table_9_823 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP TABLE IF EXISTS replicated_table_detach_all2;
CREATE INDEX idx_tab4_3 ON tab4 (col1 DESC,col0);
CREATE TABLE test_553B2A757B3B7D3F7B6F3D2B294D315D21682B7B422837792C577635747D6C7868443E2C553D5447(x UInt8) Engine=Memory;
DROP DICTIONARY IF EXISTS 02184_range_dictionary;
DROP DATABASE IF EXISTS test_bz3ge6l0 
SELECT 'Running test stateless/01670_test_repeat_mysql_dialect.sql from pid=1714' 
SELECT rtrim('');
CREATE DATABASE IF NOT EXISTS test_o0a87i0l 
select * from t_00725_3 all left join z_00725_3 on (z_00725_3.c = t_00725_3.a and z_00725_3.d = t_00725_3.b) ORDER BY t_00725_3.a;
SELECT 'Running test stateless/02473_map_element_nullable.sql from pid=1714' 
INSERT INTO test_01193_18429.table_1_170 VALUES 
SELECT * FROM nullable_key WHERE k < 10;
DROP ROW POLICY 02703_filter_3 ON 02703_db.02703_rptable;
INSERT INTO test_01193_18429.table_5_618 VALUES 
CREATE DATABASE IF NOT EXISTS test_o1d3cj7x 
CREATE TABLE test_653C42256B2275667E55515B6F68602F3C2250233A50302C273774577C777A543330446D202D386A(x UInt8) Engine=Memory;
CREATE TABLE test_3D43312A477C39323B3235554C2A4947594E507045555F4D382B3026715E71233B7C2B222E5D2521(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_znqaijze 
INSERT INTO test_01193_18429.table_8_89 VALUES 
SELECT '0.0000000001' AS x, toDecimal32(x, 9);
CREATE TABLE test_datetime (`time` DateTime) ENGINE = MergeTree PARTITION BY time ORDER BY time SETTINGS index_granularity = 29175, min_bytes_for_wide_part = 852640511, ratio_of_defaults_for_sparse_serialization = 0.7352479696273804, replace_long_file_name_to_hash = true, max_file_name_length = 117, merge_max_block_size = 3553, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 374136, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 9076579821, index_granularity_bytes = 11045374, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 63678, primary_key_compress_block_size = 33841
SELECT 'Running test stateless/02790_fix_coredump_when_compile_expression.sql from pid=1713' 
INSERT INTO test_01193_18429.table_3_564 VALUES 
SELECT empty(toIPv4('127.0.0.1'));
SET max_rows_to_read = 8192;
CREATE DATABASE IF NOT EXISTS test_d9gzqsru 
CREATE TABLE test_02908_r1_57 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_57', 'r1') ORDER BY tuple()
INSERT INTO test_01193_18429.table_1_320 VALUES 
INSERT INTO test_01193_18429.table_4_750 VALUES 
select 0 = isValidUTF8('\xf8\x90\x80\x80\x80') from system.numbers limit 10;
CREATE DATABASE IF NOT EXISTS test_7ma7bo7c 
SELECT 'Running test stateless/02013_json_function_null_column.sql from pid=1722' 
OPTIMIZE TABLE part_log_bytes_uncompressed FINAL;
CREATE TABLE test_2C76442D696A53747A3D2C7E3476734A575546203E4E644C575E4460642E456C3A225231355F6D22(x UInt8) Engine=Memory;
CREATE TABLE union1 ( date Date, a Int32, b Int32, c Int32, d Int32) ENGINE = MergeTree(date, (a, date), 8192);
SELECT toString(toStartOfMinute(toDateTime(1549483055), 'Asia/Tokyo'), 'Asia/Tokyo');
insert into function file(02384_data.arrow) select toLowCardinality(toNullable('abc')) as lc settings output_format_arrow_low_cardinality_as_dictionary=1, output_format_arrow_string_as_string=0, engine_file_truncate_on_insert=1;
CREATE TABLE t_object_convert(id UInt64, data Object(Nullable('JSON'))) Engine=Memory;
CREATE TABLE test_02908_r1_138 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_138', 'r1') ORDER BY tuple()
INSERT INTO alter_table1 SELECT 28814, 20
CREATE TABLE test_4A3A2C5C6B392C7D505D2B747B2C2B694D447325684A6E5F31547D5A785F4F7A69307C704F6B7D4E(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_zxppemgr 
SELECT 'Running test stateless/02455_extract_fixed_string_from_nested_json.sql from pid=1718' 
select javaHash(toInt64(-12345678901));
SELECT * FROM merge(currentDatabase(), 'test_local_1|test_local_2') ORDER BY _table;
SELECT 'Running test stateless/01071_prohibition_secondary_index_with_old_format_merge_tree.sql from pid=1713' 
SELECT skewSamp(NULL, NULL, NULL);
alter table many_mutations delete where y = 176 * 2 settings mutations_sync = 0;
SELECT quantilesExactHigh(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)(a) FROM decimal;
INSERT INTO test_01193_18429.table_2_504 VALUES 
CREATE TABLE t1 (`a` UInt32, `b` UInt32) ENGINE = MergeTree ORDER BY (a, b) SETTINGS index_granularity = 8192, min_bytes_for_wide_part = 742812778, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 41, merge_max_block_size = 11946, prefer_fetch_merged_part_size_threshold = 10029230549, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 1318328, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 85245, primary_key_compress_block_size = 38466
SELECT 'ALL INNER';
CREATE TABLE test_74653D35644A6A23422E30445F3347524D205433607561544B777C4263712F57447326792E466B60(x UInt8) Engine=Memory;
SELECT toDate('2018-06-21') % 234 = toUInt16(toDate('2018-06-21')) % 234;
DROP TABLE dst SYNC 
INSERT INTO test_01193_18429.table_7_468 VALUES 
SELECT '= agg =';
CREATE TABLE test_01193_18429.table_10_179 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT today() = current_date();
SELECT '\\w' LIKE '%\\w%';
alter table many_mutations delete where y = 965 * 2 settings mutations_sync = 0;
SELECT 'Running test stateless/00604_show_create_database.sql from pid=1726' 
INSERT INTO 02538_bf_ngrambf_map_values_test VALUES 
SELECT count(*) FROM test_array_ops where arr = CAST([10, -20] AS Array(Nullable(Int64)));
CREATE MATERIALIZED VIEW IF NOT EXISTS test_race_condition_mv_3 TO test_race_condition_target AS select count() as number FROM (SELECT a.number, a.n, a.n2, b.number, b.n, b.n2, c.number, c.n, c.n2 FROM test_race_condition_landing a CROSS JOIN test_race_condition_landing b CROSS JOIN test_race_condition_landing c)
select number, number + 1, concat('string: ', toString(number)) from numbers(200000) group by number with totals order by number limit 190000 format JSONCompactStrings
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (35 < 53 AND 47 > 0 ? 35 : 0)), throwIf(last != (35 < 53 AND 47 > 0 ? least(53 - 1, 35 + 47 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(53) LIMIT 35, 47);
SELECT CASE WHEN (number % 2) = 0 THEN toUInt8(1) WHEN (number % 3) = 0 THEN toFloat64(2) ELSE toUInt8(3) END FROM system.numbers LIMIT 10;
drop database rdb_test_5mr53c62
INSERT INTO dst_8 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 30
create table data (key UInt64 CODEC(NONE)) engine=MergeTree() order by tuple() settings min_bytes_for_wide_part=1e9;
SELECT generateRandomStructure(NULL, NULL);
CREATE DATABASE IF NOT EXISTS test_xc3yuxvo 
INSERT INTO test_01193_18429.table_5_944 VALUES 
CREATE TABLE test_01193_18429.table_10_676 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 11266, 500 settings ignore_materialized_views_with_dropped_target_table=1
select 'GROUP BY (Distributed-over-Distributed) distributed_group_by_no_merge';
SELECT studentTTest(NULL);
CREATE TABLE test_01193_18429.table_6_496 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_alter_decimal (n UInt64, d Decimal(15, 8)) ENGINE = ReplicatedMergeTree('/clickhouse/{database}/01761_alter_decimal_zookeeper', 'r1') ORDER BY tuple();
INSERT INTO src_15 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 67
CREATE TABLE test_01193_18429.table_6_807 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT uniqExact(NULL, NULL, NULL);
INSERT INTO test_01193_18429.table_2_66 VALUES 
INSERT INTO test_01193_18429.table_4_846 VALUES 
CREATE TABLE test_2347397129345D6F672C3E556E2A225E537C203872644F6A3F294B203652237234543B6A686B7677(x UInt8) Engine=Memory;
SELECT dt, user_id, tryDecrypt('aes-256-gcm', '[HIDDEN]') AS value FROM decrypt_null ORDER BY user_id ASC
select hasSubstr([-128, 1.0, 512], [.3]);
SELECT sum(uint64 - 1) AS j from test_table having j > 0;
DROP DATABASE IF EXISTS test_ajf8ctbc 
SELECT count() < 4000000, max(x) FROM file('test_3jf9fl6r/bz2.tsv.bz2', RowBinary, 'x UInt8', 'none')
INSERT INTO TABLE test2(year, uv) select '2021',2;
INSERT INTO test_01193_18429.table_6_204 VALUES 
CREATE TABLE r_lc (x UInt32, lc LowCardinality(String)) ENGINE = Memory;
CREATE TABLE test_01193_18429.table_6_391 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT nullIf(toDecimal128(1, 0), toNullable(toDecimal128(1, 0)));
CREATE DATABASE IF NOT EXISTS test_3xcoslue 
SELECT count() FROM t_cnf_fuzz WHERE (c5) OR (c8) OR (c5 AND (NOT c5) AND c4 AND (NOT c0) AND (NOT c1)) OR ((NOT c0)) OR ((NOT c0) AND c7) OR (c4 AND c0 AND c7 AND c6 AND c4) SETTINGS convert_query_to_cnf = 1
SELECT isDecimalOverflow(toDecimal32(1000000000, 0), 9), isDecimalOverflow(toDecimal32(1000000000, 0)), isDecimalOverflow(toDecimal32(-1000000000, 0), 9), isDecimalOverflow(toDecimal32(-1000000000, 0));
SELECT toFixedString('00000000-0000-02f8-9cb8-cb1b82fb3900', 36) AS str, toUUID(str);
select 0 = multiMatchAny(materialize('abcd'), materialize(['cdefg'])) from system.numbers limit 10;
SELECT formatDateTime(NULL, NULL, NULL);
CREATE TABLE shard2 (`id` Int32) ENGINE = MergeTree ORDER BY cityHash64(id) SETTINGS index_granularity = 17709, min_bytes_for_wide_part = 911265414, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 118, merge_max_block_size = 21853, prefer_fetch_merged_part_size_threshold = 4651377202, vertical_merge_algorithm_min_rows_to_activate = 200955, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 3148621, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 59876, primary_key_compress_block_size = 22272
SELECT [] = multiMatchAllIndices(materialize('aaaa'), materialize(['.*aa.*aaa.*', 'aaaaaa{2}', '\(aa\){3}']));
CREATE DATABASE IF NOT EXISTS test_42sj4dun 
CREATE DATABASE IF NOT EXISTS test_6zzp4dvx 
alter table many_mutations delete where y = 723 * 2 settings mutations_sync = 0;
INSERT INTO test_01193_18429.table_3_788 VALUES 
select substringIndex('www.clickhouse.com', '.', -2);
CREATE TABLE test_7C36283E48384977245221523A674E387B2C657C5327653C61614A625C30676A2F3B232D5E7A6F47(x UInt8) Engine=Memory;
SELECT `number`, `number` % 2, sum(`number`) AS `val` FROM numbers(10) GROUP BY `number`, `number` % 2 WITH ROLLUP ORDER BY `number` ASC, `number` % 2 ASC, `val` ASC
SELECT arrayCompact(x -> x.2, groupArray((toString(number), intDiv(number, 3) % 3))) FROM numbers(10);
SELECT DISTINCT dumpColumnStructure([[], [1]]) FROM numbers(2);
select [0, 0, 15, 1, 0, 0, 8, 1, 0, 0, 0, 4, 8, 10] = multiSearchAllPositionsCaseInsensitiveUTF8(materialize('ÃÂ ÃÂ¸ÃÂÃÂÃÂÃÂ¸ÃÂ¹ÃÂ´ÃÂ¥ÃÂÃÂÃÂÃÂÃÂÃÂÃÂ¿ÃÂÃÂ¸ÃÂÃÂ´'), ['ÃÂ©ÃÂ¼ÃÂ³ÃÂÃÂ»ÃÂÃÂÃÂ', 'ÃÂÃÂ¡ÃÂ¶ÃÂ¡ÃÂ»ÃÂ©ÃÂ§ÃÂÃÂÃÂ³ÃÂÃÂÃÂ»ÃÂ', 'ÃÂ´ÃÂ', '', 'ÃÂÃÂÃÂ¦ÃÂ°ÃÂÃÂÃÂÃÂ¨ÃÂÃÂ·ÃÂ¦ÃÂ¡ÃÂÃÂÃÂ¸ÃÂ¡ÃÂÃÂ±ÃÂ', 'ÃÂÃÂ´ÃÂ ÃÂ³ÃÂÃÂÃÂ¢ÃÂ¨', 'ÃÂ´', '', 'ÃÂÃÂÃÂ±ÃÂÃÂÃÂ¡ÃÂ¥ÃÂ¦ÃÂ¢ÃÂÃÂ¦ÃÂÃÂÃÂ¥ÃÂ¿ÃÂÃÂ°ÃÂ§ÃÂ¹ÃÂ¾ÃÂ¥ÃÂÃÂ»', 'ÃÂ¼ÃÂ¢ÃÂ²ÃÂ·ÃÂµÃÂ»ÃÂÃÂÃÂÃÂÃÂ§ÃÂ¦ÃÂÃÂ¿ÃÂÃÂÃÂ²ÃÂ´ÃÂ¨ÃÂÃÂµÃÂ¨ÃÂ¹ÃÂ', 'ÃÂÃÂÃÂ¢ÃÂÃÂÃÂÃÂ¡ÃÂ¨ÃÂ¿ÃÂ¨ÃÂ´', 'ÃÂ§ÃÂ', 'ÃÂÃÂ¥ÃÂ£ÃÂ¢ÃÂÃÂÃÂÃÂ´', 'ÃÂ£ÃÂ¢ÃÂ´']) from system.numbers limit 10;
select number, number + 1, concat('string: ', toString(number)) from numbers(200000) format PrettyCompactNoEscapes
DROP DATABASE IF EXISTS test1;
SELECT toDate('2017-01-01') + INTERVAL 13 MONTH AS x;
INSERT INTO test_02908_r1_220 SELECT rand64() FROM numbers(5);
SELECT meanZTest(NULL);
DROP DATABASE IF EXISTS test_0ej0ddfu 
CREATE TABLE test_707A72313427505A3172725F675044795D273C60397166626556773064697C36712A2D3264652264(x UInt8) Engine=Memory;
SELECT multiIf(1, col2, (col1 % 3) = 0, toFixedString('bar', 16), toFixedString('baz', 16)) FROM multi_if_check;
select * from system.errors where last_error_message like '%TOPSECRET%';
CREATE TABLE test_44703B35627A36445D79253D23705E675B23536F6A5C315E2549772D5A512778787E2A2A7B793248(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_4_282 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_5_416 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT t1.id, test_table_join_1.id, t1.value, test_table_join_1.value, t2.id, test_table_join_2.id, t2.value, test_table_join_2.value, t3.id, test_table_join_3.id, t3.value, test_table_join_3.value FROM test_table_join_1 AS t1 RIGHT JOIN test_table_join_2 AS t2 ON test_table_join_1.id = test_table_join_2.id INNER JOIN test_table_join_3 AS t3 ON test_table_join_2.id = test_table_join_3.id;
SELECT 'Running test stateless/02461_mullable_pk_monotonicity_bug.sql from pid=1722' 
DROP DATABASE IF EXISTS test_gezgk2jg 
DROP DATABASE IF EXISTS test_9z2dbvsd 
SELECT d2, f2, greatest(d2, f2) FROM t ORDER BY f2;
SELECT * FROM numbers(10) FORMAT PrettyCompactNoEscapes;
DROP DATABASE IF EXISTS test_2sg5v2ph 
DROP DICTIONARY IF EXISTS dict_flat_simple;
select part_type, column, now()-modification_time < 10, modification_time - column_modification_time < 5 from system.parts_columns where database = currentDatabase() and table = 'data_compact';
SELECT 'Running test stateless/02315_optimize_monotonous_functions_in_order_by_remote.sql from pid=1720' 
SELECT CASE WHEN (col1 % 2) = 0 THEN col2 WHEN 1 THEN toFixedString('bar', 16) ELSE col4 END FROM multi_if_check;
select toValidUTF8('\x80') from system.numbers limit 10;
SELECT arrayAll(x -> 0, [1, 2, 3]);
DROP TABLE IF EXISTS dist_2;
ALTER TABLE alter_attach ATTACH PARTITION 2;
INSERT INTO test_01193_18429.table_5_943 VALUES 
SELECT transform(toString(number), ['2', '4', '6'], ['google', 'yandex', 'yahoo'], 'other') as x FROM numbers(10) GROUP BY x ORDER BY x;
CREATE TABLE test_01193_18429.table_5_746 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO dst_9 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 33
DROP VIEW mv_1_1;
DROP TABLE IF EXISTS pk_test23;
DROP DATABASE IF EXISTS imdb_01148;
DROP DATABASE IF EXISTS test_ehjomc20 
SELECT rightPad('ÃÂ°ÃÂ±ÃÂ²ÃÂ³', 2), rightPad('ÃÂ°ÃÂ±ÃÂ²ÃÂ³', 2::Int32);
SELECT dateDiff('second', toDateTime64('2015-08-18 00:00:00', 0, 'UTC'), toDateTime('2015-08-18 00:10:00', 'UTC'));
CREATE TABLE test_01193_18429.table_9_917 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/01812_optimize_skip_unused_shards_single_node.sql from pid=1714' 
CREATE DATABASE IF NOT EXISTS test_kp1c3mb3 
SELECT splitByWhitespace(NULL);
SELECT 'Running test stateless/01059_storage_file_compression.sh from pid=1726' 
SELECT '1' != number FROM numbers(3);
DROP TABLE IF EXISTS byte_identical_r1;
SELECT 'Running test stateless/02524_fuzz_and_fuss_2.sql from pid=1715' 
CREATE TABLE test_01193_18429.table_8_971 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/01386_negative_float_constant_key_condition.sql from pid=1718' 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (11 < 41 AND 3 > 0 ? 11 : 0)), throwIf(last != (11 < 41 AND 3 > 0 ? least(41 - 1, 11 + 3 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(41) LIMIT 11, 3);
SET max_block_size = 32001;
DROP DATABASE IF EXISTS test_llg4furt 
EXPLAIN SYNTAX SELECT i FROM index_append_test_test WHERE a = 0 SETTINGS convert_query_to_cnf = 1 , optimize_using_constraints = 1 , optimize_move_to_prewhere = 1 , optimize_substitute_columns = 1 , optimize_append_index = 1
select sipHash128ReferenceKeyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56)) == sipHash128Reference(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56));
create table lc_null_str_0 (str LowCardinality(Nullable(String))) engine = Memory;
INSERT INTO test_01193_18429.table_9_688 VALUES 
SELECT 'Running test stateless/02941_variant_type_1.sh from pid=1713' 
CREATE TABLE test_4D78205629394B77277E657E5F6E7E4277356F3F5B54242A42323E7948312447724F5F7A7461284E(x UInt8) Engine=Memory;
ALTER TABLE t_limit_mutations UPDATE v = 3 WHERE 1;
CREATE DATABASE IF NOT EXISTS test_7i56ay38 
ALTER TABLE table_with_version_replicated_1 MODIFY COLUMN version UInt32 SETTINGS replication_alter_partitions_sync=2;
CREATE TABLE test_53517A4E525277306A2B6A2222644C31495A30315F592A4B776155687C3E7D384D3E7C337126254A(x UInt8) Engine=Memory;
SELECT bitmapToArray(bitmapSubsetLimit(bitmapBuild(emptyArrayUInt16()), toUInt32(0), toUInt64(10)));
CREATE TABLE test_01193_18429.table_1_994 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT id_alias_2, id AS id_alias, id_alias as id_alias_2 FROM test_table;
INSERT INTO test_replicated SELECT 3;
create table 02900_buffer (k Int8) engine Buffer(currentDatabase(), '02900_destination', 1, 1000, 1000, 10000, 10000, 1000000, 1000000)
CREATE TABLE ttl (`i` Int, `a` Int, `s` String DEFAULT 'b' TTL if((a % 2) = 0, today() - 10, toDate('2100-01-01')), INDEX ind_s s TYPE set(1) GRANULARITY 1) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 11449, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 23425, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 8531942, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 12781, primary_key_compress_block_size = 25733
CREATE DATABASE IF NOT EXISTS test_kmhacd9z 
SELECT toIntervalMinute(lc) as e, toTypeName(e) FROM t1;
DROP DATABASE IF EXISTS test_myouw0qc 
SELECT t1.value AS t1_value, toTypeName(t1_value), t2.value AS t2_value, toTypeName(t2_value), t3.value AS t3_value, toTypeName(t3_value) FROM test_table_join_1 AS t1 INNER JOIN test_table_join_2 AS t2 USING (id) LEFT JOIN test_table_join_3 AS t3 USING(id);
DROP TABLE IF EXISTS pk_test1;
SELECT * FROM (SELECT number AS key FROM numbers(5)) s1 ANY LEFT JOIN dict_flat d USING(key) ORDER BY key SETTINGS any_join_distinct_right_table_keys = '1';
CREATE TABLE test_02908_r2_228 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_228', 'r2') ORDER BY tuple()
SELECT sum(if(toUInt8(1), toUInt8(1), toUInt8(1))) AS metric, groupArray(if(toUInt8(1), toUInt8(1), toUInt8(1))), groupArray(if(toUInt8(1), toUInt8(1), 1)), sum(if(toUInt8(1), toUInt8(1), 1)) FROM (SELECT materialize(toUInt64(1)) AS key FROM numbers(22)) WHERE key = _CAST(1, 'Int64')
DROP TABLE 01753_dictionary_db.simple_key_hierarchy_table;
SELECT * FROM replace_partition_dest1_2;
drop table if exists data2_01071;
EXPLAIN SYNTAX SELECT substring(reverse(b), 1, 1) FROM column_swap_test_test WHERE substring(reverse(b), 1, 1) = 'c';
create table part_01278_4 as data_01278 Engine=Buffer('test_frugcm3n', null_01278, 1, 86400, 86400, 1e5, 1e6, 10e6, 100e6);
SELECT pickup_date, groupBitmap( uid ) AS user_num, bitmapToArray(groupBitmapState( uid )) AS users FROM bitmap_test GROUP BY pickup_date order by pickup_date;
CREATE TABLE test_296A373D6C417A6224313D326826505449507B6429284B4A30753948347E5F726070742E39312047(x UInt8) Engine=Memory;
select arrayUniq(thread_ids) from system.query_log where current_database = currentDatabase() and type != 'QueryStart' and query like '%insert into testX %' and Settings['parallel_view_processing'] = '0' and Settings['optimize_trivial_insert_select'] = '0' and Settings['max_insert_threads'] = '16';
INSERT INTO test_01193_18429.table_7_660 VALUES 
CREATE DATABASE IF NOT EXISTS test_5r7uf4wr 
SELECT shell, count() AS c FROM passwd GROUP BY shell ORDER BY c DESC
CREATE TABLE test_01193_18429.table_5_553 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT dictGet('polygon_dictionary', 'array_value', tuple(1.5, 1.5));
CREATE TABLE test_2E322B4E3F4C5931743C386F23794974572E304E2D5F7E7023242F7B557C34284F32386327417D62(x UInt8) Engine=Memory;
SELECT dictGetString('01053_db.ssd_dict', 'c', toUInt64(2));
select randomString(50000) FROM numbers(1000)
DETACH TABLE view_no_nulls_set;
INSERT INTO test_01193_18429.table_7_977 VALUES 
CREATE TABLE test_3F7D623E24632E4968663A656731766A2670794633692E5C363C383E463D2741504A416A5C51582F(x UInt8) Engine=Memory;
SELECT substringUTF8(NULL);
SELECT multiIf((col1 % 2) = 0, col2, 1, toFixedString(col3, 16), col4) FROM multi_if_check;
INSERT INTO test_01193_18429.table_5_677 VALUES 
CREATE DATABASE IF NOT EXISTS test_6jr0q2jl 
INSERT INTO test_01193_18429.table_7_320 VALUES 
CREATE TABLE test_parallel_index (`z` UInt64, INDEX i z TYPE set(8) GRANULARITY 1) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 5816, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 23148, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 29, min_merge_bytes_to_use_direct_io = 4246493515, index_granularity_bytes = 23724075, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 73702, primary_key_compress_block_size = 42902
CREATE DATABASE IF NOT EXISTS test_5yqslr1d 
CREATE TABLE test_2B7B2A487D264E5D635B6771536740597670364D512B5067314B473A403B62663E352F6B34463538(x UInt8) Engine=Memory;
CREATE TABLE test_34393A454B39273C5E2B603D31393E77714C4A207C547925712F3B79575A225D703D677545615433(x UInt8) Engine=Memory;
SELECT CAST(1 AS Enum8( 'hello' = 1, 'world' = 2));
DROP DATABASE IF EXISTS test_7l0pd4gw 
DROP DATABASE IF EXISTS test_2738u9s3 
GRANT SELECT ON INFORMATION_SCHEMA.* TO 02833_TCP_USER_25955_2
OPTIMIZE TABLE shard_0.from_0;
INSERT INTO test_ahwppifc.distributed_01099_b SELECT * FROM urlCluster('test_cluster_two_shards', 'http://localhost:8123/?query=select+{1,2,3}+format+TSV', 'TSV', 's String')
INSERT INTO test_01193_18429.table_5_295 VALUES 
alter table data_01900_2 update s = 'bar_16' where 1;
CREATE INDEX idx_tab2_4 ON tab2 (col4,col1 DESC);
SELECT 'dt <= dt64' FROM dt64test WHERE dt_column <= materialize(toDateTime64('2020-01-13 13:37:00', 3));
INSERT INTO test_01193_18429.table_2_562 VALUES 
INSERT INTO test_01193_18429.table_10_30 VALUES 
CREATE USER u2_01292@'%.myhost.com';
SELECT 1 IN (1.23, '1', 2);
select 1 = multiSearchAnyCaseInsensitive(materialize('KXoTIgVktxiXoEwfoLCENiEhz'), ['oLCENie', 'xix', 'en', 'IgvktxIXoEWFOLCEnieHz', 'xOEWFoL', 'LC', 'ktxIxoEwfolCenie', 'ce', 'oTIGvktXIXOE', 'eW', 'otigVKTXIXOEwFolC', 'E', 'CEni', 'gVKtxIxoEwfOLCENieh']) from system.numbers limit 10;
DROP DATABASE IF EXISTS test_xg01t8re 
INSERT INTO test_01193_18429.table_3_210 VALUES 
CREATE TABLE test_01193_18429.table_6_689 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE DATABASE IF NOT EXISTS test_nrtycl7g 
CREATE INDEX idx_tab3_5 ON tab3 (col3,col0 DESC,col4);
SELECT toUUID('61f0c404-5cb3-11e7-907b-a6006ad3dba0') != '61f0c404-5cb3-11e7-907b-a6006ad3dba1';
SELECT `Id`, `Timestamp` FROM `test_enj2aujs`.`test5346` FINAL ORDER BY identity(`Timestamp`) ASC
CREATE TABLE test_01193_18429.table_6_918 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT toInt8(number - 10) AS x, round(x), roundBankers(x), floor(x), ceil(x), trunc(x) FROM system.numbers LIMIT 20;
EXPLAIN QUERY TREE run_passes=1 SELECT value1 FROM datetime_t WHERE toYYYYMM(date1) = 199312 AND id BETWEEN 1 AND 3 SETTINGS allow_experimental_analyzer=1;
CREATE TABLE test_01193_18429.table_3_337 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
alter table mutation_table update dt = Null where name is not null SETTINGS mutations_sync = 2;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (12 < 47 AND 27 > 0 ? 12 : 0)), throwIf(last != (12 < 47 AND 27 > 0 ? least(47 - 1, 12 + 27 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(47) LIMIT 12, 27);
SELECT multiIf((number % 2) = 0, [toFloat32(1), toFloat32(2)], (number % 3) = 0, [toFloat64(2), toFloat64(3)], [toFloat64(3), toFloat64(3)]) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_6_313 VALUES 
DROP TABLE IF EXISTS t_distr;
CREATE DATABASE IF NOT EXISTS test_kxuead63 
DROP DATABASE IF EXISTS test_5r2psd31 
SHOW CREATE DATABASE test_01192_renamed
CREATE TABLE test_01193_18429.table_6_451 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT JSONLength('{"a": "hello", "b": [-100, 200.0, 300]}', 'b');
INSERT INTO test_01193_18429.table_4_776 VALUES 
SELECT arrayEnumerateUniqRanked(2,[[1], [1]]);
INSERT INTO test_01193_18429.table_7_750 VALUES 
SELECT mapPartialSort(NULL, NULL, NULL);
SELECT toDateTime('2000-01-01 00:00:00', 'Asia/Istanbul') AS x, toDate('2000-01-02') AS y, 1 ? x : y AS z;
SELECT count() FROM s3Cluster('test_cluster_two_shards_localhost', 'http://localhost:11111/test/{a,b,c}.tsv', 'TSV', '`c1` Nullable(Int64), `c2` Nullable(Int64), `c3` Nullable(Int64)')
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), N != DT64 as r FORMAT CSV;
CREATE TABLE table_02184 (x UInt8) PRIMARY KEY x;
DROP DATABASE IF EXISTS test_dqvgv3bv 
select round(1000 * ngramDistanceCaseInsensitiveUTF8('', materialize('ÃÂ°ÃÂ±ÃÂ²'))) = round(1000 * ngramDistanceCaseInsensitiveUTF8(materialize(''), 'ÃÂ°ÃÂ±ÃÂ²')) from system.numbers limit 5;
INSERT INTO test_01193_18429.table_6_329 VALUES 
CREATE TABLE t1 (`id` Int) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 63207, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.1622386872768402, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 17416, prefer_fetch_merged_part_size_threshold = 5514538604, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 3105288151, index_granularity_bytes = 17082365, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 79992, primary_key_compress_block_size = 61096
INSERT INTO test_01193_18429.table_5_428 VALUES 
INSERT INTO test_01193_18429.table_4_594 VALUES 
SELECT toTypeName(sum(toFixedString('a', toLowCardinality(toNullable(1))) IN toFixedString('a', 1))) AS x;
CREATE TABLE test_6B7C7744637826517E4058317224314D282751325A506D244078776D5051505F5133715021546B2A(x UInt8) Engine=Memory;
SELECT arrayReduce('maxOrDefault', ['hello']);
SELECT JSONKey('');
CREATE TABLE test_aggregation (x Array(Decimal64(8))) ENGINE=TinyLog;
CREATE DATABASE IF NOT EXISTS test_1jejc7zg 
INSERT INTO test_01193_18429.table_8_392 VALUES 
SELECT * FROM data_01515 WHERE d1 = 0 SETTINGS force_data_skipping_indices=' d1_idx ';
INSERT INTO test_01193_18429.table_2_751 VALUES 
INSERT INTO test_01193_18429.table_8_52 VALUES 
select arrayConcat(arr1, arr2, arr1), arr1, arr2 from array_functions;
INSERT INTO test_01193_18429.table_7_528 VALUES 
CREATE DATABASE IF NOT EXISTS test_gbvdnp6j 
DROP TABLE IF EXISTS storage;
CREATE TABLE test_4A3470257C7D713C685F34507E45392A5D334721774D7E564D4F4B6A2A4E4C2258644B22394E4125(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_9_776 VALUES 
EXPLAIN SYNTAX SELECT max(1 + n + 1), max(1 + 1 + n), max(1 + n - 1), max(1 + 1 - n) FROM (SELECT number n FROM numbers(10));
DROP DATABASE IF EXISTS test_rhj9qhng 
CREATE TABLE test_01193_18429.table_4_911 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE INDEX idx_tab3_3 ON tab3 (col3 DESC,col1);
EXPLAIN SYNTAX SELECT count() FROM t_constraints_where PREWHERE b > 20 OR b < 8;
select (1 ? (toUInt32(0) as i) : toUInt64(1)) = i;
DROP USER 02835_USER_25518
SELECT multiIf((number % 2) = 0, toInt16(1), (number % 3) = 0, toUInt16(2), toUInt16(3)) FROM system.numbers LIMIT 10;
INSERT INTO tags(id, seqs) VALUES 
INSERT INTO test_01193_18429.table_3_84 VALUES 
SELECT CASE WHEN (col1 % 2) = 0 THEN ['foo', col3] WHEN 1 THEN ['foo', 'bar'] ELSE [col6, 'bar'] END FROM multi_if_check;
DROP DATABASE IF EXISTS test_6vfjaev5 
CREATE TABLE test_01193_18429.table_5_958 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_3_899 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_7_805 VALUES 
SELECT randUniform(NULL, NULL);
create table t(a Int64, b Int64) engine = TinyLog;
SELECT arrayElement(['a',NULL,'c','d'], 1);
CREATE DATABASE IF NOT EXISTS test_o8xzruor 
INSERT INTO test_01193_18429.table_2_678 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toInt16(3), toInt16(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE line_changes (`sign` Int8, `line_number_old` UInt32, `line_number_new` UInt32, `hunk_num` UInt32, `hunk_start_line_number_old` UInt32, `hunk_start_line_number_new` UInt32, `hunk_lines_added` UInt32, `hunk_lines_deleted` UInt32, `hunk_context` LowCardinality(String), `line` LowCardinality(String), `indent` UInt8, `line_type` Enum('Empty' = 0, 'Comment' = 1, 'Punct' = 2, 'Code' = 3), `prev_commit_hash` String, `prev_author` LowCardinality(String), `prev_time` DateTime, `file_change_type` Enum('Add' = 1, 'Delete' = 2, 'Modify' = 3, 'Rename' = 4, 'Copy' = 5, 'Type' = 6), `path` LowCardinality(String), `old_path` LowCardinality(String), `file_extension` LowCardinality(String), `file_lines_added` UInt32, `file_lines_deleted` UInt32, `file_hunks_added` UInt32, `file_hunks_removed` UInt32, `file_hunks_changed` UInt32, `commit_hash` String, `author` LowCardinality(String), `time` DateTime, `commit_message` String, `commit_files_added` UInt32, `commit_files_deleted` UInt32, `commit_files_renamed` UInt32, `commit_files_modified` UInt32, `commit_lines_added` UInt32, `commit_lines_deleted` UInt32, `commit_hunks_added` UInt32, `commit_hunks_removed` UInt32, `commit_hunks_changed` UInt32) ENGINE = MergeTree ORDER BY time SETTINGS index_granularity = 5379, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 105, merge_max_block_size = 11042, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 5608893419, index_granularity_bytes = 30545372, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 30487, primary_key_compress_block_size = 19380
EXPLAIN SYNTAX SELECT uniq(a) FROM (SELECT DISTINCT test_rewrite_uniq_to_count.a FROM test_rewrite_uniq_to_count) t settings allow_experimental_analyzer=0;
SELECT DISTINCT 'a';
CREATE TABLE test_01193_18429.table_2_715 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_2_380 VALUES 
DESC TABLE test_2dc1tn7z.dummy
CREATE TABLE test_5452765657267C5264213074275960413024516E36237A2B667B2A2C4343624D2233692E4D366F3D(x UInt8) Engine=Memory;
SELECT col1, col2, coalesce(col1, col2) FROM test1_00395 ORDER BY col1, col2 ASC;
INSERT INTO test_01193_18429.table_3_889 VALUES 
INSERT INTO test_01193_18429.table_8_686 VALUES 
SELECT _part, x FROM part_header_r2 ORDER BY x;
DROP TABLE polygon_dictionary_nullable_source_table;
SELECT mapContains(NULL, NULL);
CREATE TABLE test_364C4930715140707730376C2C745E7C635D63484C77322C687B74505042655F703F75684B32432A(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_10_52 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_7_974 VALUES 
SELECT '(0, C->B->A) id = 11', count() FROM (SELECT id, sequenceNextNode('backward', 'tail')(dt, action, 1, action = 'C', action = 'B', action = 'A') AS next_node FROM test_sequenceNextNode WHERE id = 11 GROUP BY id HAVING next_node is null);
DROP DATABASE IF EXISTS test_vzm0wzz6 
select 'table with 4 blocks final';
select format('{}{}', materialize('a'), materialize(toFixedString('b', 1))) == 'ab';
select arrayPushFront([Null], 1);
alter table many_mutations delete where y = 879 * 2 settings mutations_sync = 0;
SELECT * FROM t1, test_table AS t1;
SELECT 255, -2147483649, 255 = -2147483649, 255 != -2147483649, 255 < -2147483649, 255 <= -2147483649, 255 > -2147483649, 255 >= -2147483649, -2147483649 = 255, -2147483649 != 255, -2147483649 < 255, -2147483649 <= 255, -2147483649 > 255, -2147483649 >= 255 , toUInt8(255) = toInt64(-2147483649), toUInt8(255) != toInt64(-2147483649), toUInt8(255) < toInt64(-2147483649), toUInt8(255) <= toInt64(-2147483649), toUInt8(255) > toInt64(-2147483649), toUInt8(255) >= toInt64(-2147483649), toInt64(-2147483649) = toUInt8(255), toInt64(-2147483649) != toUInt8(255), toInt64(-2147483649) < toUInt8(255), toInt64(-2147483649) <= toUInt8(255), toInt64(-2147483649) > toUInt8(255), toInt64(-2147483649) >= toUInt8(255) , toUInt16(255) = toInt64(-2147483649), toUInt16(255) != toInt64(-2147483649), toUInt16(255) < toInt64(-2147483649), toUInt16(255) <= toInt64(-2147483649), toUInt16(255) > toInt64(-2147483649), toUInt16(255) >= toInt64(-2147483649), toInt64(-2147483649) = toUInt16(255), toInt64(-2147483649) != toUInt16(255), toInt64(-2147483649) < toUInt16(255), toInt64(-2147483649) <= toUInt16(255), toInt64(-2147483649) > toUInt16(255), toInt64(-2147483649) >= toUInt16(255) , toInt16(255) = toInt64(-2147483649), toInt16(255) != toInt64(-2147483649), toInt16(255) < toInt64(-2147483649), toInt16(255) <= toInt64(-2147483649), toInt16(255) > toInt64(-2147483649), toInt16(255) >= toInt64(-2147483649), toInt64(-2147483649) = toInt16(255), toInt64(-2147483649) != toInt16(255), toInt64(-2147483649) < toInt16(255), toInt64(-2147483649) <= toInt16(255), toInt64(-2147483649) > toInt16(255), toInt64(-2147483649) >= toInt16(255) , toUInt32(255) = toInt64(-2147483649), toUInt32(255) != toInt64(-2147483649), toUInt32(255) < toInt64(-2147483649), toUInt32(255) <= toInt64(-2147483649), toUInt32(255) > toInt64(-2147483649), toUInt32(255) >= toInt64(-2147483649), toInt64(-2147483649) = toUInt32(255), toInt64(-2147483649) != toUInt32(255), toInt64(-2147483649) < toUInt32(255), toInt64(-2147483649) <= toUInt32(255), toInt64(-2147483649) > toUInt32(255), toInt64(-2147483649) >= toUInt32(255) , toInt32(255) = toInt64(-2147483649), toInt32(255) != toInt64(-2147483649), toInt32(255) < toInt64(-2147483649), toInt32(255) <= toInt64(-2147483649), toInt32(255) > toInt64(-2147483649), toInt32(255) >= toInt64(-2147483649), toInt64(-2147483649) = toInt32(255), toInt64(-2147483649) != toInt32(255), toInt64(-2147483649) < toInt32(255), toInt64(-2147483649) <= toInt32(255), toInt64(-2147483649) > toInt32(255), toInt64(-2147483649) >= toInt32(255) , toUInt64(255) = toInt64(-2147483649), toUInt64(255) != toInt64(-2147483649), toUInt64(255) < toInt64(-2147483649), toUInt64(255) <= toInt64(-2147483649), toUInt64(255) > toInt64(-2147483649), toUInt64(255) >= toInt64(-2147483649), toInt64(-2147483649) = toUInt64(255), toInt64(-2147483649) != toUInt64(255), toInt64(-2147483649) < toUInt64(255), toInt64(-2147483649) <= toUInt64(255), toInt64(-2147483649) > toUInt64(255), toInt64(-2147483649) >= toUInt64(255) , toInt64(255) = toInt64(-2147483649), toInt64(255) != toInt64(-2147483649), toInt64(255) < toInt64(-2147483649), toInt64(255) <= toInt64(-2147483649), toInt64(255) > toInt64(-2147483649), toInt64(255) >= toInt64(-2147483649), toInt64(-2147483649) = toInt64(255), toInt64(-2147483649) != toInt64(255), toInt64(-2147483649) < toInt64(255), toInt64(-2147483649) <= toInt64(255), toInt64(-2147483649) > toInt64(255), toInt64(-2147483649) >= toInt64(255) 
SELECT 'Running test stateless/01533_multiple_nested.sql from pid=1714' 
CREATE TABLE test_02908_r1_54 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_54', 'r1') ORDER BY tuple()
with maxSimpleState(number) as c select toTypeName(c), c from numbers(1);
SELECT [toNullable(1)] AS x, x[toNullable(1)] AS y;
CREATE TEMPORARY TABLE _tmp_baz (qux UInt64);
CREATE TABLE test_01193_18429.table_9_43 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_226D405535774E23684E2470467B7D77535462445F637A214973435B55542F6B5162467C45232872(x UInt8) Engine=Memory;
SELECT t1.id, t1.value, t2.id, t2.value, t3.id, t3.value FROM test_table_join_1 AS t1 INNER JOIN test_table_join_2 AS t2 ON test_table_join_1.id = test_table_join_2.id INNER JOIN test_table_join_3 AS t3 ON test_table_join_2.id = test_table_join_3.id;
INSERT INTO test_01193_18429.table_6_293 VALUES 
CREATE TABLE test_697B3443226271647D2534402F484E72647E273647562A6F723E5E6146543E705B52785B5D75226B(x UInt8) Engine=Memory;
CREATE TABLE columns_transformers (i Int64, j Int16, k Int64) Engine=TinyLog;
CREATE TABLE test_01193_18429.table_10_170 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT h3IndexesAreNeighbors(617420388351344639, 617420388352655359);
DROP DATABASE IF EXISTS test_zjj14om0 
select hasSubsequence('garbage', materialize('arbw'));
SELECT _part, * FROM fetches_r2 ORDER BY x
SELECT 'Running test stateless/02575_merge_prewhere_default_expression.sql from pid=1722' 
SELECT count() FROM test_02559 PREWHERE 1 OR ignore(id1);
CREATE TABLE test_4F3021223B503C7A39666E387B7B71764B3C7C3B427E364B557E6778466B7D385E52607B676B2142(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_3_646 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT arrayPartialShuffle([1,2,3,4,5,6,7,8,9,10.1], 0, 0xbad_cafe);
CREATE TABLE test_5B392F52347725753B60616342265864562A744B2774744B544C35625F3E675D3E57686A43663120(x UInt8) Engine=Memory;
alter table many_mutations delete where y = 517 * 2 settings mutations_sync = 0;
select any_value(number) from numbers(10);
CREATE TABLE test_01193_18429.table_9_782 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
drop database if exists db_test_piw8e8fv
select parseDateTimeInJodaSyntax('0 PM', 'H a', 'UTC') = toDateTime('1970-01-01 00:00:00', 'UTC');
INSERT INTO test_01193_18429.table_3_902 VALUES 
CREATE TABLE test_01193_18429.table_6_813 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_4_157 VALUES 
create table in_01277 as out_01277 Engine=Null();
SET keeper_map_strict_mode = 1;
INSERT INTO r2 SELECT 34
DROP DATABASE IF EXISTS test_2nkkglt9 
ALTER TABLE t_materialize_column ADD COLUMN s LowCardinality(String) DEFAULT toString(i);
SELECT CASE WHEN (number % 2) = 0 THEN [toInt8(1), toInt8(2)] WHEN (number % 3) = 0 THEN [toUInt32(2), toUInt32(3)] ELSE [toUInt8(3), toUInt8(3)] END FROM system.numbers LIMIT 10;
DROP TABLE IF EXISTS test_gmo80lov.local_opentelemetry;
CREATE TABLE test_5D44732E377B7457227B51247D3C44315D63564A74322E747D386D7960223A46576B285E6A4D7B4E(x UInt8) Engine=Memory;
SELECT arrayRandomSample(arr, 2) FROM kYP7EOzkB0b3P.array_test
CREATE ROLE user_role_1
INSERT INTO test_01193_18429.table_10_659 VALUES 
DROP DATABASE IF EXISTS test_9e99uiwf 
CREATE TABLE test_01193_18429.table_1_471 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT -2147483648, 9223372036854775808, -2147483648 = 9223372036854775808, -2147483648 != 9223372036854775808, -2147483648 < 9223372036854775808, -2147483648 <= 9223372036854775808, -2147483648 > 9223372036854775808, -2147483648 >= 9223372036854775808, 9223372036854775808 = -2147483648, 9223372036854775808 != -2147483648, 9223372036854775808 < -2147483648, 9223372036854775808 <= -2147483648, 9223372036854775808 > -2147483648, 9223372036854775808 >= -2147483648 , toInt32(-2147483648) = toUInt64(9223372036854775808), toInt32(-2147483648) != toUInt64(9223372036854775808), toInt32(-2147483648) < toUInt64(9223372036854775808), toInt32(-2147483648) <= toUInt64(9223372036854775808), toInt32(-2147483648) > toUInt64(9223372036854775808), toInt32(-2147483648) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toInt32(-2147483648), toUInt64(9223372036854775808) != toInt32(-2147483648), toUInt64(9223372036854775808) < toInt32(-2147483648), toUInt64(9223372036854775808) <= toInt32(-2147483648), toUInt64(9223372036854775808) > toInt32(-2147483648), toUInt64(9223372036854775808) >= toInt32(-2147483648) , toInt64(-2147483648) = toUInt64(9223372036854775808), toInt64(-2147483648) != toUInt64(9223372036854775808), toInt64(-2147483648) < toUInt64(9223372036854775808), toInt64(-2147483648) <= toUInt64(9223372036854775808), toInt64(-2147483648) > toUInt64(9223372036854775808), toInt64(-2147483648) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toInt64(-2147483648), toUInt64(9223372036854775808) != toInt64(-2147483648), toUInt64(9223372036854775808) < toInt64(-2147483648), toUInt64(9223372036854775808) <= toInt64(-2147483648), toUInt64(9223372036854775808) > toInt64(-2147483648), toUInt64(9223372036854775808) >= toInt64(-2147483648) 
select h3GetUnidirectionalEdge(stringToH3('85283473fffffff'), stringToH3('85283477fffffff'));
SELECT arr, [] AS other, round(arrayJaccardIndex(arr, other), 2) FROM array_jaccard_index ORDER BY arr;
SELECT multiIf(1, col2, (col1 % 3) = 0, toFixedString(col3, 16), col4) FROM multi_if_check;
INSERT INTO test_01193_18429.table_8_768 VALUES 
SELECT JSONExtract(materialize('{"key":null}'), 'Tuple(key LowCardinality(Nullable(String)))');
CREATE TABLE test_01193_18429.table_6_212 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT * FROM compression_codec_multiple_tiny_log ORDER BY id;
DROP USER test_01541
CREATE DATABASE IF NOT EXISTS test_gr8jrsdq 
# Values should be between 0 and 1 SELECT DISTINCT if (a >= toFloat64(0) AND a <= toFloat64(1), 'Ok', 'Fail') FROM (SELECT randUniform(0, 1) AS a FROM numbers(100000));
SELECT dummy FROM system.one ORDER BY materialize('{"k":"v"}'::JSON), dummy;
CREATE TABLE test_57747D7B494B52693F6361653C5453533D4E283842372133662D6E322523524B2D3F3C38482E7D56(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_4_753 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP TABLE buffer_;
CREATE TABLE test_01193_18429.table_8_955 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'Hello' ILIKE '_';
SELECT arr FROM t_json_array ARRAY JOIN arr ORDER BY arr.k1 FORMAT JSONEachRow;
SELECT concat('With ', materialize('2001:0001:130F:0002:0003:09C0:876A:130B' :: IPv6));
CREATE DATABASE IF NOT EXISTS test_hz8ft3l5 
SELECT (1, 2) * toDecimal32(3.1, 8);
SYSTEM SYNC REPLICA ttl_table1 STRICT
INSERT INTO test_01193_18429.table_1_873 VALUES 
SELECT NOT NOT cos(MAX(pow(1523598955, 763027371))) FROM numbers(1) SETTINGS compile_expressions = 0;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (45 < 18 AND 18 > 0 ? 45 : 0)), throwIf(last != (45 < 18 AND 18 > 0 ? least(18 - 1, 45 + 18 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(18) LIMIT 45, 18);
INSERT INTO test_01193_18429.table_7_517 VALUES 
SELECT * FROM table_for_rename1 ORDER BY key;
CREATE DATABASE IF NOT EXISTS test_32yrscme 
SELECT 'main_table_01818', count() FROM main_table_01818 WHERE `advertiser_id` = 'ClickHouse';
SELECT multiIf((number % 2) = 0, [toInt8(1), toInt8(2)], (number % 3) = 0, [toInt16(2), toInt16(3)], [toInt8(3), toInt8(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_5A772B4660703837532E6C3D7E6E56767B3233544C542434433F6156226E72762A5A38343B273C56(x UInt8) Engine=Memory;
detach database rdb_test_5mr53c62
SELECT multiIf((col1 % 2) = 0, [col2, col3], (col1 % 3) = 0, [col4, 'bar'], ['foo', col7]) FROM multi_if_check;
SELECT hasColumnInTable(NULL);
insert into tab_00386 values 
CREATE TABLE test_01193_18429.table_1_101 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/02899_indexing_by_space_filling_curves.sql from pid=1726' 
SELECT (c1, c2) as t FROM values((-5, 0), (nan, 0.), (0., 0.), (5., 5.)) ORDER BY t ASC LIMIT 1;
CREATE TABLE test_01193_18429.table_10_167 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
alter table many_mutations delete where y = 445 * 2 settings mutations_sync = 0;
select 0 = multiMatchAny(materialize('qjjzqexjpgkglgxpzrbqbnskq'), ['vaiatcjacmlffdzsejpdareqzy', 'xspcfzdufkmecud', 'bcvtbuqtctq', 'nkcopwbfytgemkqcfnnno', 'dylxnzuyhq', 'tno', 'scukuhufly', 'cdyquzuqlptv', 'ohluyfeksyxepezdhqmtfmgkvzsyph', 'ualzwtahvqvtijwp', 'jg', 'gwbawqlngzcknzgtmlj', 'qimvjcgbkkp', 'eaedbcgyrdvv', 'qcwrncjoewwedyyewcdkh', 'uqcvhngoqngmitjfxpznqomertqnqcveoqk', 'ydrgjiankgygpm', 'axepgap']) from system.numbers limit 10;
SELECT s, replaceOne(s, '_', 'o') AS a, replaceRegexpOne(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['_._', '_._']) AS s);
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), N - DT as r FORMAT CSV;
DROP TABLE IF EXISTS t_constant_index;
CREATE TABLE array (arr Array(Nullable(Float64))) ENGINE = Memory;
CREATE INDEX idx_tab4_1 ON tab4 (col3 DESC,col0);
SELECT 'UInt64';
CREATE TABLE test_01193_18429.table_9_952 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_5B71344B7D6B4B7027387C2C7878217C34532E50496A5130482B464033234A52404F6E4F7A6F4F3B(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00712_prewhere_with_alias.sql from pid=1722' 
INSERT INTO test_01193_18429.table_3_539 VALUES 
CREATE TABLE test_01193_18429.table_6_584 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_9_960 VALUES 
select 'test MergeTree undrop';
CREATE TABLE t0 ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 14230, min_bytes_for_wide_part = 413888342, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 13457, prefer_fetch_merged_part_size_threshold = 10299341877, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 7653548221, index_granularity_bytes = 13204504, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 97916, primary_key_compress_block_size = 86685 AS SELECT rowNumberInAllBlocks(), * FROM (SELECT toLowCardinality(arrayJoin(['exchange', 'tables'])))
SELECT '-------Forbid push down-------';
CREATE DATABASE IF NOT EXISTS test_9q0dfl9k 
INSERT INTO test_01193_18429.table_1_355 VALUES 
CREATE TABLE test_755F432E73743924287E5B31483D56417468485F35242932275B496A7E4A37283626565C75224E7C(x UInt8) Engine=Memory;
select isFinite(1) = 1;
ALTER TABLE tmp ADD COLUMN s String MATERIALIZED toString(x);
insert into table function file('test_02167.TSVWithNames', 'auto', 'x UInt64') select * from numbers(2)
SELECT 'Running test stateless/02685_bson2.sql from pid=1718' 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c9)) OR ((NOT c6)) OR ((NOT c3) AND c0) OR ((NOT c8) AND c5 AND c3) OR (c7 AND c6 AND (NOT c0)) OR (c4 AND c7) OR ((NOT c8)) OR ((NOT c6) AND (NOT c8) AND (NOT c0) AND c0) OR (c3) OR ((NOT c7) AND (NOT c6)) SETTINGS convert_query_to_cnf = 1
INSERT INTO test_01193_18429.table_10_204 VALUES 
SELECT 'Running test stateless/01665_running_difference_ubsan.sql from pid=1713' 
CREATE TABLE test_527E3D76527E43752F334C5A323140425A4C3C4C777A7753446A5A45675835526852736666364F45(x UInt8) Engine=Memory;
drop table if exists 02681_undrop_uuid_on_cluster on cluster test_shard_localhost sync format Null;
SELECT value,f FROM bool_test;
SELECT -12.34;
SELECT '77' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:fff8::')))
SELECT 'Running test stateless/01710_projection_in_set.sql from pid=1718' 
DROP DATABASE IF EXISTS test_4ssf5g9v 
INSERT INTO test_01193_18429.table_7_901 VALUES 
INSERT INTO test_01193_18429.table_3_23 VALUES 
CREATE TABLE test_4F3A60264E6B5720442A31273370477130593E2C426D3521615145645B2F68686E7C663B4132487A(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01118_is_constant.sql from pid=1718' 
INSERT INTO r6 SELECT 1
CREATE TABLE test_01193_18429.table_5_160 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_4_77 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO t2 SELECT number - 5 as a, 200 + number - 5 as b FROM system.numbers LIMIT 1, 10;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 43609, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE FUNCTION 02126_function AS () -> 5;
select v from test order by id;
CREATE TABLE test_45494057545E2449665C4728463B716D205F646E677B4338775B6024665C447C30546D3862353E7A(x UInt8) Engine=Memory;
SELECT c, d FROM t_fixed_prefix WHERE a = 1 ORDER BY c, d SETTINGS optimize_read_in_order = 0
CREATE TABLE test_01193_18429.table_10_126 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
drop table if exists data_r2;
SET window_view_heartbeat_interval = 1
INSERT INTO src VALUES /* (59, 2) */ 
INSERT INTO memory ( x ) VALUES 
DROP DATABASE IF EXISTS test_2bvadt7r 
CREATE TABLE test_6045412F3B4C206E764C624C5B737125325922364C3C756D7C3F703B594A6B3343723A544F372754(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_10_768 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_10_180 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c2) AND (NOT c1) AND (NOT c3) AND (NOT c8)) OR ((NOT c9) AND c6 AND (NOT c8) AND c5) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_51633E77444D6D38616932332E6E403341723A2A704E30412F2C6841383B406F385E7C3674275E27(x UInt8) Engine=Memory;
SELECT countDigits(1);
SELECT arrayDistinct([(1, 2), (1, 3), (1, 2), (1, 2), (1, 2), (1, 5)]);
INSERT INTO test_01193_18429.table_2_11 VALUES 
SELECT 'Running test stateless/01624_soft_constraints.sh from pid=1724' 
((SELECT (((3)))));
SHOW CREATE USER u1_01292;
SELECT cutToFirstSignificantSubdomainCustomWithWWW(NULL, NULL);
CREATE DATABASE IF NOT EXISTS test_tk0lhycw 
SELECT 'Running test stateless/02411_merge_tree_zero_max_read_buffer_size.sql from pid=1705' 
CREATE TABLE test_01193_18429.table_5_389 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT toJSONString([NULL]);
SELECT TIMESTAMPADD(INTERVAL 1 YEAR, DATE '2022-01-01');
CREATE TABLE test_3F35585F21416D764271532154305E52316A684D6447253D7373256A2760695470764275615A5041(x UInt8) Engine=Memory;
SELECT regionToName(number::UInt32, 'en') FROM numbers(13);
SELECT a, b, sum(s), count() from cube GROUP BY CUBE(a, b) ORDER BY a, b;
SELECT CASE WHEN (number % 2) = 0 THEN toFloat32(1) WHEN (number % 3) = 0 THEN toInt8(2) ELSE toUInt8(3) END FROM system.numbers LIMIT 10;
alter table many_mutations delete where y = 122 * 2 settings mutations_sync = 0;
CREATE DICTIONARY 02186_range_dictionary ( id UInt64, start Date, end Date, value String ) PRIMARY KEY id SOURCE(CLICKHOUSE(TABLE '02186_range_dictionary_source_table')) LAYOUT(RANGE_HASHED(range_lookup_strategy 'max')) RANGE(MIN start MAX end) LIFETIME(0);
CREATE TABLE test1 (key UInt32) Engine = Buffer(currentDatabase(), test2, 16, 10, 100, 10000, 1000000, 10000000, 100000000);
SELECT 1 x FROM system.one;
CREATE DATABASE IF NOT EXISTS test_apcdshes 
CREATE TABLE test_01193_18429.table_1_895 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
EXPLAIN SYNTAX SELECT * FROM test_order_by ORDER BY toDate(timestamp), timestamp LIMIT 10;
SELECT * FROM mass_table_457;
CREATE TABLE test_01193_18429.table_3_17 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT JSONExtract('{"a":-1234567890}', 'a', 'Int32') as a, toTypeName(a);
INSERT INTO r2 SELECT 62 % 10 = 2 ? 62 - 1 : 62
desc format(CSV, '"[1, 2]"\n"[null]"');
CREATE TABLE test_5B6559384D362138624F3B2F5F40594F3C32322234617169757E7346343F406F3157522E3C2B7C39(x UInt8) Engine=Memory;
CREATE TABLE test_3B4B5570633F51422F4D4B45474B2223795F463729592720714D77395F7D335E5A5E79576059734D(x UInt8) Engine=Memory;
CREATE TABLE test_5339376A40776A625D536B7E2B673957724274493F5429645B51522D443B56633F4B702D344A7D3F(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_0kv2j6ph 
ALTER TABLE test_02559 ADD COLUMN z UInt8 DEFAULT 10;
SELECT materialize([NULL]);
CREATE TABLE test_02908_r1_106 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_106', 'r1') ORDER BY tuple()
CREATE TABLE 02763_engine_merge_12 (x UInt8, y UInt64) ENGINE = Merge(currentDatabase(), '02763_merge_merge');
SELECT 15
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat32(1), toFloat32(2)] WHEN (number % 3) = 0 THEN [toInt8(2), toInt8(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_9_136 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP DATABASE IF EXISTS test_ppeg0s5q 
CREATE DATABASE IF NOT EXISTS test_z2bad25c 
select 11 AS z from (SELECT 2 UNION ALL SELECT 3) group by 42, 43, 44 WITH TOTALS;
CREATE TABLE test_22234B3253756C3A64263674566529793A2C726223272A6361687155315E385531655671213D4D7A(x UInt8) Engine=Memory;
INSERT INTO t1 SELECT number, number FROM numbers(28, 2);
SELECT count() from tab_02473 PREWHERE b > 0 AND b <= 70 WHERE a == 0;
INSERT INTO r7 SELECT 90 % 10 = 7 ? 90 - 1 : 90
CREATE TABLE src_13 (`p` UInt64, `k` UInt64, `v` UInt64) ENGINE = ReplicatedMergeTree('/test/01154_move_partition_long_test_uepaqe2p/{shard}/src', concat('{replica}_', toString(randConstant()))) PARTITION BY p % 10 ORDER BY k SETTINGS index_granularity = 13557, min_bytes_for_wide_part = 756562708, ratio_of_defaults_for_sparse_serialization = 0.35682085156440735, replace_long_file_name_to_hash = false, max_file_name_length = 50, merge_max_block_size = 13985, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 376025, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 6001059207, index_granularity_bytes = 10151118, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 83048, primary_key_compress_block_size = 78650
CREATE TABLE test_312A4069786B5A5B4167224778782932336A5577236B344F5E402A3B2626474F37637744665D4755(x UInt8) Engine=Memory;
SELECT multiIf(1, 'foo', (col1 % 3) = 0, toFixedString('bar', 16), toFixedString(col4, 16)) FROM multi_if_check;
select toStartOfWeek(toDateTime(0, 'Asia/Istanbul'));
DROP DATABASE IF EXISTS test_gvfp2afk 
SELECT count() FROM test_mtree WHERE x = NULL;
CREATE INDEX idx_tab4_0 ON tab4 (col1,col4,col0 DESC);
SELECT tj.a FROM t ALL RIGHT JOIN tj USING (key1, key2) ORDER BY key1 FORMAT TSVWithNames;
INSERT INTO test_01193_18429.table_10_903 VALUES 
INSERT INTO test_01193_18429.table_1_928 VALUES 
CREATE TABLE test_2B5043215646526F7C592844234A7E612E4D4578474D7222493A5F7C5566786F5A3A60383A2C7C46(x UInt8) Engine=Memory;
INSERT INTO mt VALUES /* (8, 2) */ 
DROP DATABASE IF EXISTS test_7w0lhjlc 
CREATE DATABASE IF NOT EXISTS test_z1gqaxpz 
CREATE TABLE test_542E5F5C60416070546E79445132215556365D642F5057743D433463706D476C306C4C51587D5539(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_4_189 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT factorial(-1);
WITH 'number: 1' as year SELECT extract(year, '\\d+');
SELECT dictGet('01684_database_for_cache_dictionary.cache_dictionary_simple_key_simple_attributes', 'value_first', number) as value_first, dictGet('01684_database_for_cache_dictionary.cache_dictionary_simple_key_simple_attributes', 'value_second', number) as value_second FROM system.numbers LIMIT 4;
CREATE TABLE test_785E556F3A5E3A3C504A73435F5F7B25263C6437436C60682F5F544420557B3F5E22545A6E452958(x UInt8) Engine=Memory;
DROP TABLE mt_00168_buffer;
INSERT INTO mt VALUES /* (50, 1) */ 
select ' 4294967299:';
SELECT uniqExact([]);
INSERT INTO t_sparse_s3 SELECT 18, number % 2, '' FROM numbers(24576);
INSERT INTO test_01193_18429.table_5_633 VALUES 
CREATE TABLE test_01193_18429.table_2_174 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP TABLE matview_join_d_e;
INSERT INTO src VALUES /* (45, 1) */ 
CREATE TABLE test_01193_18429.table_2_108 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_tzpvlpja 
select mapAdd(map(toInt32(1), toInt32(1), 2, 1), map(toInt32(1), toInt32(1), 2, 1)) as res, toTypeName(res);
DROP DATABASE IF EXISTS test_g9itf2zx 
CREATE TABLE test_2640635E6A5A62412E40552A59766C574E65652C22425C70312C223A56257A4D296247706B366E41(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_8_817 VALUES 
CREATE TABLE test_01193_18429.table_5_87 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT shardNum() AS `_shard_num`, `id` FROM view(SELECT toUInt16(`id`) AS `id` FROM `data` HAVING `id` IN (0, 32768)) WHERE `id` IN (0, 32768) ORDER BY `_shard_num` ASC, `id` ASC
DROP TABLE IF EXISTS test_dup_index;
CREATE TABLE test_38297E3C635D54392C3B767E2B46777E3C7E562E6027357A5D3973422F4B642F4B253D37505B7D32(x UInt8) Engine=Memory;
SELECT 'a}a' AS x, x LIKE (concat('%', x, '%') AS pat), materialize(x) LIKE pat;
INSERT INTO regexp SETTINGS format_regexp='id: (.+?) array: (.+?) string: (.+?) date: (.+?)', format_regexp_escaping_rule='Escaped' FORMAT Regexp 
CREATE TABLE output AS input Engine=Null;
INSERT INTO test_01193_18429.table_3_299 VALUES 
CREATE DATABASE IF NOT EXISTS test_rl0mi85t 
DROP TABLE array_3dim_protobuf_00825
INSERT INTO test_01193_18429.table_3_646 VALUES 
SELECT toNullable(toString(number)) as nullable1 FROM numbers(5) FORMAT CapnProto SETTINGS format_schema='/usr/share/clickhouse-test/queries/0_stateless/format_schemas/02030_capnp_fake_nullable:Message'
SELECT 't1 ALL LEFT JOIN tn2 | bs = 5';
insert into test select number + 1000000, range(number % 20 + 1)::Array(UInt64) from numbers(200000);
DROP DATABASE IF EXISTS test_ahkiibqc 
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toUInt64(2) ELSE toUInt8(3) END FROM system.numbers LIMIT 10;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 7715, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE TABLE catalog_sales (`cs_sold_date_sk` Nullable(Int64), `cs_sold_time_sk` Nullable(Int64), `cs_ship_date_sk` Nullable(Int64), `cs_bill_customer_sk` Nullable(Int64), `cs_bill_cdemo_sk` Nullable(Int64), `cs_bill_hdemo_sk` Nullable(Int64), `cs_bill_addr_sk` Nullable(Int64), `cs_ship_customer_sk` Nullable(Int64), `cs_ship_cdemo_sk` Nullable(Int64), `cs_ship_hdemo_sk` Nullable(Int64), `cs_ship_addr_sk` Nullable(Int64), `cs_call_center_sk` Nullable(Int64), `cs_catalog_page_sk` Nullable(Int64), `cs_ship_mode_sk` Nullable(Int64), `cs_warehouse_sk` Nullable(Int64), `cs_item_sk` Int64, `cs_promo_sk` Nullable(Int64), `cs_order_number` Int64, `cs_quantity` Nullable(Int64), `cs_wholesale_cost` Nullable(Float32), `cs_list_price` Nullable(Float32), `cs_sales_price` Nullable(Float32), `cs_ext_discount_amt` Nullable(Float32), `cs_ext_sales_price` Nullable(Float32), `cs_ext_wholesale_cost` Nullable(Float32), `cs_ext_list_price` Nullable(Float32), `cs_ext_tax` Nullable(Float32), `cs_coupon_amt` Nullable(Float32), `cs_ext_ship_cost` Nullable(Float32), `cs_net_paid` Nullable(Float32), `cs_net_paid_inc_tax` Nullable(Float32), `cs_net_paid_inc_ship` Nullable(Float32), `cs_net_paid_inc_ship_tax` Nullable(Float32), `cs_net_profit` Nullable(Float32)) ENGINE = MergeTree ORDER BY (cs_item_sk, cs_order_number) SETTINGS index_granularity = 54709, min_bytes_for_wide_part = 729090018, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 22777, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 256871, vertical_merge_algorithm_min_columns_to_activate = 36, min_merge_bytes_to_use_direct_io = 7728769504, index_granularity_bytes = 9282957, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 19664, primary_key_compress_block_size = 11428
INSERT INTO test_01193_18429.table_6_21 VALUES 
CREATE DATABASE IF NOT EXISTS test_05b8hzgf 
INSERT INTO test_01193_18429.table_3_840 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toInt64(2) ELSE toUInt8(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_1_814 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT CASE WHEN 1 THEN toFixedString('foo', 16) WHEN (col1 % 3) = 0 THEN 'bar' ELSE toFixedString('baz', 16) END FROM multi_if_check;
CREATE TABLE test_606D2B5443213B5179536C4F3A23786D50243A716671454F444B585024325D28686C283D4B507345(x UInt8) Engine=Memory;
INSERT INTO table1 VALUES
INSERT INTO test_01193_18429.table_1_696 VALUES 
INSERT INTO test_01193_18429.table_8_897 VALUES 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), toDayOfYear(N, 'Asia/Istanbul') as r FORMAT CSV;
INSERT INTO test_01193_18429.table_5_482 VALUES 
INSERT INTO r1 SELECT 28
CREATE TABLE test_01193_18429.table_4_817 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select * from url('http://127.0.0.1:8123/?query=select%201%2C%202%20format%20CSV%20settings%20format_csv_delimiter%3D%27/%27%3B%0A', CSV, 'a int, b int') settings format_csv_delimiter = '/';
CREATE TABLE insert_big_json (`a` String, `b` String) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 28261, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 14263, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 8691533597, index_granularity_bytes = 8009831, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 14642, primary_key_compress_block_size = 90242
 DROP TABLE test_lazy_01014_concurrent_test_bo56il5m.tlog2; 
SELECT 'SELECT toInt32(-1) > N';
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (12 < 26 AND 17 > 0 ? 12 : 0)), throwIf(last != (12 < 26 AND 17 > 0 ? least(26 - 1, 12 + 17 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(26) LIMIT 12, 17);
insert into morton_numbers_mask_1_02457 select untuple(mortonDecode((1,2,1,2), mortonEncode((1,2,1,2), n1, n2, n3, n4))) from morton_numbers_mask_02457;
CREATE DATABASE IF NOT EXISTS test_cmoqcuj0 
SELECT any([[[number]],[[number + 1], [number + 2, number + 3]]]) AS k FROM remote('127.0.0.{1,2}', numbers(10));
SELECT arrayStringConcat(arrayMap(x -> toString(x), range(number))) FROM system.numbers LIMIT 10;
CREATE INDEX idx_tab4_3 ON tab4 (col0 DESC,col3 DESC);
SELECT toDateOrZero('');
DROP DATABASE IF EXISTS test_5a1px6lu 
INSERT INTO test_01193_18429.table_9_76 VALUES 
DROP TABLE date_t;
GRANT SELECT ON system.* TO 02833_MYSQL_USER_25955
drop table if exists test_table_url_syntax ;
SELECT 'Running test stateless/02795_full_join_assert_cast.sql from pid=1715' 
DROP DATABASE IF EXISTS test_yzidre52 
SELECT 1 % CAST(materialize(NULL), 'Nullable(Float32)');
SELECT kql_array_sort_desc([]);
SELECT count() FROM datetime_date_table WHERE col_datetime_string > '2020-03-04 10:20:45';
CREATE TABLE test_4346454C317B26263B772F6F525B43784B375B72476330412A3D6E2A5A7A4A7B44762C2632405169(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_83nhqbdw 
SELECT intDivOrZero(toDecimal256(4.4, 2), toDecimal64(2.2, 2));
CREATE TABLE test_01193_18429.table_6_569 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_2378612A3E536B516E4E7A515A59284F2F6854683B552D704C4F7E6F6D2A5B3E275A58444B5B522E(x UInt8) Engine=Memory;
CREATE TABLE t ( `rDate` String, `cpu_total` Int64 ) ENGINE = Log;
SELECT 3.5 % 0;
CREATE DATABASE IF NOT EXISTS test_qdsa60jx 
INSERT INTO test_01193_18429.table_10_574 VALUES 
DROP DATABASE IF EXISTS test_a1oixmvx 
SELECT path('http://127.0.0.1') AS Path;
DROP DATABASE IF EXISTS test_erti9g9j 
INSERT INTO date_interval VALUES 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (107 < 81 AND 45 > 0 ? 107 : 0)), throwIf(last != (107 < 81 AND 45 > 0 ? least(81 - 1, 107 + 45 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(81) LIMIT 107, 45);
select * from ttl_00933_1 order by d;
SELECT cityHash64(toDecimal128(number, 16)) from numbers(123, 2);
CREATE TABLE test_01193_18429.table_10_196 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_4_957 VALUES 
EXPLAIN SYNTAX SELECT * FROM prewhere_move_select_final FINAL WHERE y > 100 and z > 400;
INSERT INTO default_table FORMAT Values
INSERT INTO dst_3 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 90
CREATE TABLE test_01193_18429.table_3_641 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO src VALUES /* (-33, 1) */ 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), N + toUInt16(1) as r FORMAT CSV;
select 0 = multiSearchAny(materialize('abc'), ['abcdefg']);
drop table if exists filenames;
CREATE TABLE test_4544694B3659725C4534764E483E70662C2628492A3E5D4141365A7740297A6D224F367B45696D5C(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS tuple_values;
EXPLAIN PIPELINE SELECT b, c FROM t_fixed_prefix ORDER BY b, c SETTINGS optimize_read_in_order = 1
DROP DATABASE IF EXISTS test_olewa740 
SELECT s, replaceAll(s, '_', 'o') AS a, REGEXP_REPLACE(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['__.__', '__.']) AS s);
insert into t_group_by_lowcardinality select today() as p_date, toString(number/5) as val from numbers(10000);
CREATE TABLE test_4827452D2E53392B444D606F3B66545F2C333C4B5E27377551283050604C632574487D61653D6A79(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat64(1), toFloat64(2)] WHEN (number % 3) = 0 THEN [toInt16(2), toInt16(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
select toStartOfYear(toDateTime(0, 'Asia/Istanbul'));
SELECT 'Running test stateless/02122_parallel_formatting_JSONCompactStrings.sh from pid=1722' 
INSERT INTO test_58hb5b9d.check_system_tables_null (key) VALUES
SELECT dateDiff('hour', toDate32('2015-08-18', 'UTC'), toDateTime('2015-08-19 00:00:00', 'UTC'), 'UTC');
CREATE DATABASE IF NOT EXISTS test_4omsee14 
INSERT INTO test_01193_18429.table_3_351 VALUES 
CREATE DATABASE IF NOT EXISTS test_s4gh7vtc 
INSERT INTO test_02908_r1_121 SELECT rand64() FROM numbers(5);
CREATE TABLE 01062_window_view_event_hop_watch_asc.mt(a Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple()
ALTER TABLE cool_table ADD COLUMN IF NOT EXISTS `n.lc2` Array(Array(LowCardinality(String)));
SELECT count() FROM t_cnf_fuzz WHERE (c4) OR (c8) OR ((NOT c2) AND c5) OR ((NOT c8) AND c6 AND (NOT c0) AND c0 AND (NOT c8)) OR (c5) OR (c0 AND c4 AND (NOT c1) AND c9 AND c2) OR (c3 AND (NOT c2) AND (NOT c6) AND (NOT c3) AND c7) SETTINGS convert_query_to_cnf = 1
select (1 ? (toUInt32(0) as i) : toInt16(1)) = i;
CREATE TABLE test_343E6F7A647751504445205E6E6A4B615824216C662C6C776A75452C27664E63382C78377C383C2C(x UInt8) Engine=Memory;
CREATE TABLE test_01192.mt AS test_01192_renamed.mt ENGINE=MergeTree ORDER BY n
SELECT 1 SETTINGS max_execution_time=-0.0;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 34103, 500 settings ignore_materialized_views_with_dropped_target_table=1
alter table many_mutations delete where y = 215 * 2 settings mutations_sync = 0;
SELECT rightPad('abc', 0), rightPad('abc', 0::Int32);
SELECT arrayMap(x -> 123, arrayMap(x -> toString(x), [1, 2, 3]));
select 'table with 2 blocks final';
CREATE DATABASE IF NOT EXISTS test_um4hakgq 
CREATE TABLE test_01193_18429.table_10_328 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT toUInt64(1) as key, dictGet('simple_key_cache_dictionary_01862', 'value', key) FORMAT Null;
CREATE TABLE test_02908_r2_173 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_173', 'r2') ORDER BY tuple()
SELECT multiIf((col1 % 2) = 0, [col2, 'bar'], 1, ['foo', 'bar'], ['foo', col7]) FROM multi_if_check;
SELECT mapPopulateSeries(map(toUInt64(18446744073709551610), toUInt64(5)), 18446744073709551615);
select toYYYYMMDD(toDateTime64(recordTimestamp, 3, 'Europe/Amsterdam')), toDateTime64(recordTimestamp, 3, 'Europe/Amsterdam'), toInt32(1665519765) as recordTimestamp, toTypeName(recordTimestamp);
CREATE TABLE test_02908_r2_261 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_261', 'r2') ORDER BY tuple()
CREATE TABLE test_01193_18429.table_4_955 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select hex(sipHash128ReferenceKeyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55)));
CREATE TABLE test_3C4650586B7E43372C66633F736223633A34226F38594F634C337A776F605C533E273E673A426244(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00800_low_cardinality_merge_join.gen.sql from pid=1726' 
CREATE TABLE test_58592A24326D5A57222F3B314D4C762C3025345546495B356D6327607B3C5069726A2137205E3752(x UInt8) Engine=Memory;
select * from (explain plan actions = 1 select * from tab where d + 1 = 3 and (a + b) = 4 and c = 2 order by (d + 1) * 4, sin(a / b)) where explain ilike '%sort description%';
desc format(Values, '([\'2020-01-01\', \'2020-01-02\'])');
DROP DATABASE IF EXISTS test_jbyziefx 
SELECT * FROM remote('127.0.0.{1,2}', generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8))))))))))))))))))))))))))))))))))))))))))))))))))))))))))', 1, 1, 1)) LIMIT 1 FORMAT Null
drop table if exists td;
SELECT 'Running test stateless/02026_accurate_cast_or_default.sql from pid=1724' 
CREATE TABLE test_01193_18429.table_9_328 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO t_enum16 Values
SET log_comment='session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_double_sha1_password_two_profiles_no_roles double_sha1_password - Two profiles, no roles';
INSERT INTO nested SELECT number, arrayMap(x -> (x, arrayMap(y -> (toString(y * x), y + x), range(number % 17))), range(number % 19)) FROM numbers(100000);
SELECT arrayReverseSplit(x -> 1, []);
SELECT dictGetChildren('hierarchy_flat_dictionary', 5);
select * from remote('127.{1,2}', view(select 'foo.com' key), cityHash64(key)) where key = cutToFirstSignificantSubdomainCustom('foo.com', 'public_suffix_list') settings optimize_skip_unused_shards=1, force_optimize_skip_unused_shards=1;
SELECT 'Running test stateless/01802_rank_corr_mann_whitney_over_window.sql from pid=1722' 
CREATE TABLE test_54784D41582053704B6A6F26684B6A5E6B417A3D3F3979685D5D4F3D452466253E2D4A3E25437547(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS low_card_buffer_test
SELECT age('quarter', toDate32('2015-08-18', 'UTC'), toDate('2015-11-18', 'UTC'), 'UTC');
SET compile_expressions=true;
DROP TABLE IF EXISTS 02919_test_table_invalid_col_type;
SELECT hex(SHA512(''));
DROP TABLE IF EXISTS columns_transformers;
DESCRIBE (SELECT cast(tuple(1, 'Value'), 'Tuple (id UInt64, value String)') AS compound_value, arrayMap(x -> compound_value.* EXCEPT value, [1,2,3]));
INSERT INTO test_01193_18429.table_2_157 VALUES 
INSERT INTO dst_7 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 78
CREATE TABLE test_5229314C78665E6A676529452B572843614F42743A6E30777323356D35374B3A6D786B5572206537(x UInt8) Engine=Memory;
CREATE TABLE test_255358646B255F7C46727A44777E40276668554B737244362E246653495922693E5C46504B422B34(x UInt8) Engine=Memory;
select format('{}{}{}', 'a', toFixedString('b', 1), materialize('c')) == 'abc' from system.numbers limit 5;
SELECT k1, k3, sum(value) v FROM in_order_agg_partial_01710 GROUP BY k1, k3 ORDER BY k1, k3 SETTINGS optimize_aggregation_in_order=0
INSERT INTO test_01193_18429.table_3_633 VALUES 
DROP TABLE IF EXISTS 02500_nested;
SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 WHERE 1 IN (SELECT 1 WHERE 0);
SELECT multiIf(1, [col2, 'bar'], (col1 % 3) = 0, [col4, 'bar'], [col6, 'bar']) FROM multi_if_check;
CREATE TABLE test_234B5F496450503B2C2C2B5225245444335D6220585974763C2D58472E3429534F693E694F5F4D45(x UInt8) Engine=Memory;
select a, b from order_by_another order by a desc nulls first, b desc limit 4;
SELECT dictHas('test_dictionary', materialize('Key'));
CREATE TABLE test_01193_18429.table_6_951 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_2_979 VALUES 
DROP DATABASE IF EXISTS test_akbpg5ss 
SELECT 'Running test stateless/01760_polygon_dictionaries.sql from pid=1705' 
CREATE TABLE restore_01640 (`i` Int64, `d` Date, `s` String) ENGINE = ReplicatedMergeTree('/clickhouse/{database}/{shard}/tables/restore_01640', '{replica}') PARTITION BY toYYYYMM(d) ORDER BY i SETTINGS allow_remote_fs_zero_copy_replication = 0, index_granularity = 57562, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 20386, prefer_fetch_merged_part_size_threshold = 9261943308, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1820226841, index_granularity_bytes = 24855324, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 79328, primary_key_compress_block_size = 87615
SELECT CAST('hello' AS FixedString(5)) LIKE '%o%w%';
SELECT toDecimal32OrZero ('\0', 4);
DROP TABLE IF EXISTS table_to_rename
INSERT INTO test_01193_18429.table_9_657 VALUES 
SHOW CREATE TABLE test_01457.tf_remote_explicit_structure;
DROP TABLE IF EXISTS rdb;
SELECT 'Running test stateless/01825_type_json_missed_values.sql from pid=1714' 
select intDiv(-9223372036854775808, 65535);
with '2018-01-12 22:33:44' as s, toDateTime(s) as datetime, toDateTime64(s, 6) as datetime64, toDate(s) as date, toDate32(s) as date32 SELECT formatDateTimeInJodaSyntax(datetime, 'G\'aaa\'DDD'), formatDateTimeInJodaSyntax(datetime64, 'G\'aaa\'DDD'), formatDateTimeInJodaSyntax(date, 'G\'aaa\'DDD'), formatDateTimeInJodaSyntax(date32, 'G\'aaa\'DDD');
SELECT COUNT() FROM startsWith_test WHERE startsWith(S1, S2);
SELECT '02177_CTE_GLOBAL_OFF', ProfileEvents['SleepFunctionCalls'] as sleep_calls, ProfileEvents['SleepFunctionMicroseconds'] as sleep_microseconds, ProfileEvents['ScalarSubqueriesGlobalCacheHit'] as scalar_cache_global_hit, ProfileEvents['ScalarSubqueriesLocalCacheHit'] as scalar_cache_local_hit, ProfileEvents['ScalarSubqueriesCacheMiss'] as scalar_cache_miss FROM system.query_log WHERE current_database = currentDatabase() AND type = 'QueryFinish' AND query LIKE '%02177_CTE_GLOBAL_OFF%' AND event_date >= yesterday() AND event_time > now() - interval 10 minute;
INSERT INTO test_01179 values 
CREATE DATABASE IF NOT EXISTS test_yfv0l1hv 
INSERT INTO src_3 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 41
DETACH DATABASE test_01193_18429
SELECT 314776434768051644139306697240981192872::UInt128 AS x, 14776434768051644139306697240981192872314776434768051644139306697240981192872::UInt256 AS y, bitCount(bitXor(x, y)) AS a, bitHammingDistance(x, y) AS b;
EXPLAIN QUERY TREE run_passes = 1 SELECT number > 5 ? 'censor.net' : 'google' FROM system.numbers LIMIT 10;
CREATE INDEX idx_tab3_4 ON tab3 (col0,col1 DESC);
WITH 'Asia/Makassar' as timezone, toDateTime64('2019-09-16 19:20:12.345678910', 3, timezone) AS dt64 SELECT dt64, fromUnixTimestamp64Milli(toUnixTimestamp64Milli(dt64), timezone), fromUnixTimestamp64Micro(toUnixTimestamp64Micro(dt64), timezone), fromUnixTimestamp64Nano(toUnixTimestamp64Nano(dt64), timezone) AS v, toTypeName(v);
INSERT INTO test_01193_18429.table_5_290 VALUES 
INSERT INTO test_01193_18429.table_7_840 VALUES 
SELECT DATE_ADD(toDateTime(1234567890, 'UTC'), INTERVAL 2 day);
CREATE TABLE test_01193_18429.table_6_370 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_9_507 VALUES 
SELECT 'ComparisionOperator column with same column';
INSERT INTO test_01193_18429.table_3_507 VALUES 
CREATE TABLE test_3F6266662A6724714B38795741755776412B73657B27652644394D443C59702D364379404D3A4A3B(x UInt8) Engine=Memory;
ALTER TABLE dst_13 DROP PARTITION 7
CREATE DATABASE IF NOT EXISTS test_9qa8o4rs 
SELECT * FROM 02417_test_another ORDER BY key;
INSERT INTO test_01193_18429.table_7_739 VALUES 
/* IPv4ToIPv6 */ SELECT hex(IPv4ToIPv6(1297626935));
SELECT 1 FROM database_for_range_dict.range_dictionary ORDER BY CountryID, StartDate, EndDate;
CREATE DATABASE IF NOT EXISTS test_azupdjxj 
INSERT INTO src_12 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 74
select '----- Map/Array hash / State / ip6 -----';
CREATE DATABASE IF NOT EXISTS test_auz1wzz4 
CREATE TABLE test_01193_18429.table_10_525 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_10_478 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_39216A5C4058656379504826626F665F5F4B6C3828385A5F5729537C76262432795B7C374A7C5557(x UInt8) Engine=Memory;
SELECT count() == 66666 FROM null_in_subquery WHERE i global not in (SELECT i FROM null_in_subquery WHERE dt = 0);
SELECT * FROM mem_test FORMAT Null;
DROP TABLE d;
DROP DATABASE IF EXISTS test_rw64vwov 
SELECT 1 subquery, 1 allow_experimental_analyzer, ProfileEvents['InsertQuery'] InsertQuery, ProfileEvents['SelectQuery'] SelectQuery, ProfileEvents['InsertQueriesWithSubqueries'] InsertQueriesWithSubqueries, ProfileEvents['SelectQueriesWithSubqueries'] SelectQueriesWithSubqueries, ProfileEvents['QueriesWithSubqueries'] QueriesWithSubqueries FROM system.query_log WHERE current_database = currentDatabase() AND type = 'QueryFinish' AND query_id = 'foryqoiags' FORMAT TSVWithNames;
SELECT a, b, and(a, b), or(a, b), xor(a, b) FROM test_table_nullable;
WITH 'test_distributed_1' AS `_table`, 'test_8g7ngcfb' AS `_database` SELECT `date`, `value` FROM `test_8g7ngcfb`.`test_local_1`
select countSubstringsCaseInsensitive('com.foobar', 'COM');
INSERT INTO test_01193_18429.table_4_305 VALUES 
CREATE TABLE 01766_db.complex_key_simple_attributes_source_table ( id UInt64, id_key String, value_first String, value_second String ) ENGINE = TinyLog;
SELECT 'Scalar subqueries';
SELECT sipHash128Keyed(NULL);
CREATE TABLE test_6E55514164523D672735753B22666648504A72247965345E4A43386E4C28582A4E62715526527066(x UInt8) Engine=Memory;
SELECT * FROM 01753_dictionary_db.direct_dictionary_simple_key_simple_attributes;
SELECT *, _version FROM 02577_keepermap_delete_update ORDER BY key;
INSERT INTO test_01193_18429.table_1_792 VALUES 
CREATE TABLE test_2E66236D54315455752E50646156513F326F643B4F283475796E665B2F413C7522714B6073627E3D(x UInt8) Engine=Memory;
select dim1, dim2, count() from test group by dim1, dim2 with rollup order by dim1, dim2, count();
EXPLAIN header = 1, actions = 1 SELECT id, value FROM test_table PREWHERE id = 5 settings allow_experimental_analyzer=0;
INSERT INTO r10 SELECT 41 % 10 = 10 ? 41 - 1 : 41
SELECT 'Running test stateless/02381_client_prints_server_side_time.sh from pid=1718' 
set allow_suspicious_codecs=1;
SELECT *, _table FROM merge(currentDatabase(), 'test_distributed_1|test_distributed_2') ORDER BY _table;
INSERT INTO dictionary_decimal_source_table VALUES 
DROP TABLE IF EXISTS orc
CREATE WINDOW VIEW wv ENGINE Memory AS SELECT count(a), tumbleStart(wid) AS w_start FROM mt WHERE a != 1 GROUP BY tumble(timestamp, INTERVAL '3' SECOND) AS wid;
INSERT INTO test_01193_18429.table_2_301 VALUES 
CREATE TABLE test_01193_18429.table_1_336 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_72702A4A453C36383E31316329682E7E415B5E726B6B28455056204C23235D2E452E303B53723D43(x UInt8) Engine=Memory;
CREATE TABLE test_2A3D4628536F773C537A487A2528605956647E296D242B563B5B377470234E292C55442A2B782447(x UInt8) Engine=Memory;
DROP TABLE `01851_merge_tree_mv`;
drop table if exists test_02149
SELECT multiIf((number % 2) = 0, toUInt16(1), (number % 3) = 0, toInt64(2), toInt32(3)) FROM system.numbers LIMIT 10;
SELECT count(distinct data) FROM compression_codec_multiple_tiny_log;
SELECT sum(DISTINCT number % 13) FROM remote('127.0.0.{1,2}', numbers_mt(100000));
SELECT 'Running test stateless/01070_template_empty_file.sql from pid=1715' 
DROP DATABASE IF EXISTS test_54xc6mzy 
CREATE TABLE discounts ( advertiser_id UInt64, discount_start_date Date, discount_end_date Nullable(Date), amount Float64 ) ENGINE = Memory;
CREATE TABLE test_4E367B4E687E5E715159557541435D40717A2D652A60532378265E5E30607368602F742A6F562A63(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_7_48 VALUES 
INSERT INTO test_01193_18429.table_5_40 VALUES 
SELECT count() FROM lc_nullable WHERE has(u8, 10);
INSERT INTO test_01193_18429.table_7_746 VALUES 
INSERT INTO mt VALUES /* (37, 1) */ 
SELECT least(0, 1), least(-400, -200), least(toInt8(127), 255), least(-1, 1), least(toUInt64(1), toInt64(-1)), least(-128, 254), least(-128, 255), least(-9223372036854775808, 18446744073709551615), least(-9223372036854775807, 18446744073709551615), least(toInt64(9223372036854775807), 9223372036854775808);
CREATE DATABASE IF NOT EXISTS test_xtzme6yk 
CREATE DATABASE IF NOT EXISTS test_eqjzlbfx 
DROP VIEW IF EXISTS test_02428_pv5
CREATE TABLE test_01193_18429.table_9_544 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select makeDate(0.0, 1, 2);
CREATE TABLE test_50543B32592F215D6D473C4D22675D214371265C6B3D486D617A2B6D5A797244532773504E2C6336(x UInt8) Engine=Memory;
INSERT INTO type_json_dst VALUES 
SELECT '12 -> ', dictGetInt64('dictdb_01042.dict', 'y', toUInt64(12))
select sipHash128Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59)) == sipHash128(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59));
SELECT has(materialize(['a', NULL, 'b']), 'c');
INSERT INTO test_01193_18429.table_5_6 VALUES 
SELECT multiIf((number % 2) = 0, [toUInt8(1), toUInt8(2)], (number % 3) = 0, [toFloat32(2), toFloat32(3)], [toUInt16(3), toUInt16(3)]) FROM system.numbers LIMIT 10;
SELECT groupBitmapAnd(NULL, NULL, NULL);
CREATE TABLE test_01193_18429.table_10_892 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_3_592 VALUES 
INSERT INTO test_01193_18429.table_10_222 VALUES 
ALTER TABLE alter_test ADD COLUMN Added2 UInt32 AFTER NestedColumn;
select startsWith([], [1]);
SELECT 'Running test stateless/00672_arrayDistinct.sql from pid=1726' 
INSERT INTO test_01193_18429.table_2_99 VALUES 
CREATE DATABASE IF NOT EXISTS test_nhy4o91y 
INSERT INTO test_01193_18429.table_8_222 VALUES 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (67 < 87 AND 24 > 0 ? 67 : 0)), throwIf(last != (67 < 87 AND 24 > 0 ? least(87 - 1, 67 + 24 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(87) LIMIT 67, 24);
SELECT parseDateTime32BestEffort('2020-05-14 03:37:03', 'UTC') AS a, toTypeName(a);
select count(ignore(*)) from data_02051 settings min_bytes_to_use_direct_io=0, local_filesystem_read_method='read', local_filesystem_read_prefetch=0, read_priority=1, max_read_buffer_size=1048576 ;
CREATE TABLE test1 (`a` UInt8) ENGINE = MergeTree ORDER BY a SETTINGS index_granularity = 5983, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 6591, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 46, min_merge_bytes_to_use_direct_io = 5938796149, index_granularity_bytes = 7721377, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 44520, primary_key_compress_block_size = 61145
SELECT multiIf((number % 2) = 0, toUInt8(1), (number % 3) = 0, toUInt16(2), toUInt16(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_02286 (key UInt32, value String) Engine=MergeTree() ORDER BY key SETTINGS storage_policy='s3_cache', min_bytes_for_wide_part = 10485760
INSERT INTO test_01193_18429.table_6_902 VALUES 
SELECT arr, arr, round(arrayJaccardIndex(arr, arr), 2) FROM array_jaccard_index ORDER BY arr;
select 'src_to_dst', 8, 'src', type, n, _part from src order by type, n
CREATE TABLE test_01193_18429.table_10_33 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT tumble(toDateTime('2020-01-09 12:00:01', 'US/Samoa'), INTERVAL '1' QUARTER, 'US/Samoa');
ALTER TABLE dst_6 DROP PARTITION 9
SELECT name, rows, level FROM system.parts WHERE table = 'async_inserts' AND database = 'test_17nad8o6' ORDER BY name
CREATE DATABASE IF NOT EXISTS test_1aujee07 
SELECT multiIf((col1 % 2) = 0, toFixedString(col2, 16), 1, toFixedString('bar', 16), 'baz') FROM multi_if_check;
INSERT INTO test_01193_18429.table_7_475 VALUES 
CREATE TABLE test_01193_18429.table_1_371 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select mapPopulateSeries([toInt8(1), 2], [toInt8(1), 1]) as res, toTypeName(res);
DROP DATABASE IF EXISTS test_ayv12phq 
CREATE TABLE test_6A543252632F407934595F3857693B7461524F796463664F6B214E28376936587B584E57313C4C44(x UInt8) Engine=Memory;
select * from test_23634 where (id, s, s1) = ('s', 's', 's') order by id, s1, s1;
DROP TABLE t_json_analyzer;
CREATE TABLE 02416_test (k UInt32, value UInt64, dummy Tuple(UInt32, Float64), bm AggregateFunction(groupBitmap, UInt64)) Engine=KeeperMap('/' || currentDatabase() || '/test2416') PRIMARY KEY(k);
SELECT '--- name clashes ---';
SELECT toNullable(-1);
CREATE TABLE tt_01373 (`a` Int64, `d` Int64, `val` Int64) ENGINE = SummingMergeTree PARTITION BY a ORDER BY d SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 437214303, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 9827, prefer_fetch_merged_part_size_threshold = 6909108014, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 62101, primary_key_compress_block_size = 56534
INSERT INTO test_01193_18429.table_1_359 VALUES 
SELECT 'Running test stateless/01104_fixed_string_like.sql from pid=1715' 
CREATE TABLE test_01193_18429.table_1_563 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE DATABASE IF NOT EXISTS test_6e82qawa 
SELECT 127, 129, 127 = 129, 127 != 129, 127 < 129, 127 <= 129, 127 > 129, 127 >= 129, 129 = 127, 129 != 127, 129 < 127, 129 <= 127, 129 > 127, 129 >= 127 , toUInt8(127) = toUInt8(129), toUInt8(127) != toUInt8(129), toUInt8(127) < toUInt8(129), toUInt8(127) <= toUInt8(129), toUInt8(127) > toUInt8(129), toUInt8(127) >= toUInt8(129), toUInt8(129) = toUInt8(127), toUInt8(129) != toUInt8(127), toUInt8(129) < toUInt8(127), toUInt8(129) <= toUInt8(127), toUInt8(129) > toUInt8(127), toUInt8(129) >= toUInt8(127) , toUInt8(127) = toUInt16(129), toUInt8(127) != toUInt16(129), toUInt8(127) < toUInt16(129), toUInt8(127) <= toUInt16(129), toUInt8(127) > toUInt16(129), toUInt8(127) >= toUInt16(129), toUInt16(129) = toUInt8(127), toUInt16(129) != toUInt8(127), toUInt16(129) < toUInt8(127), toUInt16(129) <= toUInt8(127), toUInt16(129) > toUInt8(127), toUInt16(129) >= toUInt8(127) , toUInt8(127) = toInt16(129), toUInt8(127) != toInt16(129), toUInt8(127) < toInt16(129), toUInt8(127) <= toInt16(129), toUInt8(127) > toInt16(129), toUInt8(127) >= toInt16(129), toInt16(129) = toUInt8(127), toInt16(129) != toUInt8(127), toInt16(129) < toUInt8(127), toInt16(129) <= toUInt8(127), toInt16(129) > toUInt8(127), toInt16(129) >= toUInt8(127) , toUInt8(127) = toUInt32(129), toUInt8(127) != toUInt32(129), toUInt8(127) < toUInt32(129), toUInt8(127) <= toUInt32(129), toUInt8(127) > toUInt32(129), toUInt8(127) >= toUInt32(129), toUInt32(129) = toUInt8(127), toUInt32(129) != toUInt8(127), toUInt32(129) < toUInt8(127), toUInt32(129) <= toUInt8(127), toUInt32(129) > toUInt8(127), toUInt32(129) >= toUInt8(127) , toUInt8(127) = toInt32(129), toUInt8(127) != toInt32(129), toUInt8(127) < toInt32(129), toUInt8(127) <= toInt32(129), toUInt8(127) > toInt32(129), toUInt8(127) >= toInt32(129), toInt32(129) = toUInt8(127), toInt32(129) != toUInt8(127), toInt32(129) < toUInt8(127), toInt32(129) <= toUInt8(127), toInt32(129) > toUInt8(127), toInt32(129) >= toUInt8(127) , toUInt8(127) = toUInt64(129), toUInt8(127) != toUInt64(129), toUInt8(127) < toUInt64(129), toUInt8(127) <= toUInt64(129), toUInt8(127) > toUInt64(129), toUInt8(127) >= toUInt64(129), toUInt64(129) = toUInt8(127), toUInt64(129) != toUInt8(127), toUInt64(129) < toUInt8(127), toUInt64(129) <= toUInt8(127), toUInt64(129) > toUInt8(127), toUInt64(129) >= toUInt8(127) , toUInt8(127) = toInt64(129), toUInt8(127) != toInt64(129), toUInt8(127) < toInt64(129), toUInt8(127) <= toInt64(129), toUInt8(127) > toInt64(129), toUInt8(127) >= toInt64(129), toInt64(129) = toUInt8(127), toInt64(129) != toUInt8(127), toInt64(129) < toUInt8(127), toInt64(129) <= toUInt8(127), toInt64(129) > toUInt8(127), toInt64(129) >= toUInt8(127) , toInt8(127) = toUInt8(129), toInt8(127) != toUInt8(129), toInt8(127) < toUInt8(129), toInt8(127) <= toUInt8(129), toInt8(127) > toUInt8(129), toInt8(127) >= toUInt8(129), toUInt8(129) = toInt8(127), toUInt8(129) != toInt8(127), toUInt8(129) < toInt8(127), toUInt8(129) <= toInt8(127), toUInt8(129) > toInt8(127), toUInt8(129) >= toInt8(127) , toInt8(127) = toUInt16(129), toInt8(127) != toUInt16(129), toInt8(127) < toUInt16(129), toInt8(127) <= toUInt16(129), toInt8(127) > toUInt16(129), toInt8(127) >= toUInt16(129), toUInt16(129) = toInt8(127), toUInt16(129) != toInt8(127), toUInt16(129) < toInt8(127), toUInt16(129) <= toInt8(127), toUInt16(129) > toInt8(127), toUInt16(129) >= toInt8(127) , toInt8(127) = toInt16(129), toInt8(127) != toInt16(129), toInt8(127) < toInt16(129), toInt8(127) <= toInt16(129), toInt8(127) > toInt16(129), toInt8(127) >= toInt16(129), toInt16(129) = toInt8(127), toInt16(129) != toInt8(127), toInt16(129) < toInt8(127), toInt16(129) <= toInt8(127), toInt16(129) > toInt8(127), toInt16(129) >= toInt8(127) , toInt8(127) = toUInt32(129), toInt8(127) != toUInt32(129), toInt8(127) < toUInt32(129), toInt8(127) <= toUInt32(129), toInt8(127) > toUInt32(129), toInt8(127) >= toUInt32(129), toUInt32(129) = toInt8(127), toUInt32(129) != toInt8(127), toUInt32(129) < toInt8(127), toUInt32(129) <= toInt8(127), toUInt32(129) > toInt8(127), toUInt32(129) >= toInt8(127) , toInt8(127) = toInt32(129), toInt8(127) != toInt32(129), toInt8(127) < toInt32(129), toInt8(127) <= toInt32(129), toInt8(127) > toInt32(129), toInt8(127) >= toInt32(129), toInt32(129) = toInt8(127), toInt32(129) != toInt8(127), toInt32(129) < toInt8(127), toInt32(129) <= toInt8(127), toInt32(129) > toInt8(127), toInt32(129) >= toInt8(127) , toInt8(127) = toUInt64(129), toInt8(127) != toUInt64(129), toInt8(127) < toUInt64(129), toInt8(127) <= toUInt64(129), toInt8(127) > toUInt64(129), toInt8(127) >= toUInt64(129), toUInt64(129) = toInt8(127), toUInt64(129) != toInt8(127), toUInt64(129) < toInt8(127), toUInt64(129) <= toInt8(127), toUInt64(129) > toInt8(127), toUInt64(129) >= toInt8(127) , toInt8(127) = toInt64(129), toInt8(127) != toInt64(129), toInt8(127) < toInt64(129), toInt8(127) <= toInt64(129), toInt8(127) > toInt64(129), toInt8(127) >= toInt64(129), toInt64(129) = toInt8(127), toInt64(129) != toInt8(127), toInt64(129) < toInt8(127), toInt64(129) <= toInt8(127), toInt64(129) > toInt8(127), toInt64(129) >= toInt8(127) , toUInt16(127) = toUInt8(129), toUInt16(127) != toUInt8(129), toUInt16(127) < toUInt8(129), toUInt16(127) <= toUInt8(129), toUInt16(127) > toUInt8(129), toUInt16(127) >= toUInt8(129), toUInt8(129) = toUInt16(127), toUInt8(129) != toUInt16(127), toUInt8(129) < toUInt16(127), toUInt8(129) <= toUInt16(127), toUInt8(129) > toUInt16(127), toUInt8(129) >= toUInt16(127) , toUInt16(127) = toUInt16(129), toUInt16(127) != toUInt16(129), toUInt16(127) < toUInt16(129), toUInt16(127) <= toUInt16(129), toUInt16(127) > toUInt16(129), toUInt16(127) >= toUInt16(129), toUInt16(129) = toUInt16(127), toUInt16(129) != toUInt16(127), toUInt16(129) < toUInt16(127), toUInt16(129) <= toUInt16(127), toUInt16(129) > toUInt16(127), toUInt16(129) >= toUInt16(127) , toUInt16(127) = toInt16(129), toUInt16(127) != toInt16(129), toUInt16(127) < toInt16(129), toUInt16(127) <= toInt16(129), toUInt16(127) > toInt16(129), toUInt16(127) >= toInt16(129), toInt16(129) = toUInt16(127), toInt16(129) != toUInt16(127), toInt16(129) < toUInt16(127), toInt16(129) <= toUInt16(127), toInt16(129) > toUInt16(127), toInt16(129) >= toUInt16(127) , toUInt16(127) = toUInt32(129), toUInt16(127) != toUInt32(129), toUInt16(127) < toUInt32(129), toUInt16(127) <= toUInt32(129), toUInt16(127) > toUInt32(129), toUInt16(127) >= toUInt32(129), toUInt32(129) = toUInt16(127), toUInt32(129) != toUInt16(127), toUInt32(129) < toUInt16(127), toUInt32(129) <= toUInt16(127), toUInt32(129) > toUInt16(127), toUInt32(129) >= toUInt16(127) , toUInt16(127) = toInt32(129), toUInt16(127) != toInt32(129), toUInt16(127) < toInt32(129), toUInt16(127) <= toInt32(129), toUInt16(127) > toInt32(129), toUInt16(127) >= toInt32(129), toInt32(129) = toUInt16(127), toInt32(129) != toUInt16(127), toInt32(129) < toUInt16(127), toInt32(129) <= toUInt16(127), toInt32(129) > toUInt16(127), toInt32(129) >= toUInt16(127) , toUInt16(127) = toUInt64(129), toUInt16(127) != toUInt64(129), toUInt16(127) < toUInt64(129), toUInt16(127) <= toUInt64(129), toUInt16(127) > toUInt64(129), toUInt16(127) >= toUInt64(129), toUInt64(129) = toUInt16(127), toUInt64(129) != toUInt16(127), toUInt64(129) < toUInt16(127), toUInt64(129) <= toUInt16(127), toUInt64(129) > toUInt16(127), toUInt64(129) >= toUInt16(127) , toUInt16(127) = toInt64(129), toUInt16(127) != toInt64(129), toUInt16(127) < toInt64(129), toUInt16(127) <= toInt64(129), toUInt16(127) > toInt64(129), toUInt16(127) >= toInt64(129), toInt64(129) = toUInt16(127), toInt64(129) != toUInt16(127), toInt64(129) < toUInt16(127), toInt64(129) <= toUInt16(127), toInt64(129) > toUInt16(127), toInt64(129) >= toUInt16(127) , toInt16(127) = toUInt8(129), toInt16(127) != toUInt8(129), toInt16(127) < toUInt8(129), toInt16(127) <= toUInt8(129), toInt16(127) > toUInt8(129), toInt16(127) >= toUInt8(129), toUInt8(129) = toInt16(127), toUInt8(129) != toInt16(127), toUInt8(129) < toInt16(127), toUInt8(129) <= toInt16(127), toUInt8(129) > toInt16(127), toUInt8(129) >= toInt16(127) , toInt16(127) = toUInt16(129), toInt16(127) != toUInt16(129), toInt16(127) < toUInt16(129), toInt16(127) <= toUInt16(129), toInt16(127) > toUInt16(129), toInt16(127) >= toUInt16(129), toUInt16(129) = toInt16(127), toUInt16(129) != toInt16(127), toUInt16(129) < toInt16(127), toUInt16(129) <= toInt16(127), toUInt16(129) > toInt16(127), toUInt16(129) >= toInt16(127) , toInt16(127) = toInt16(129), toInt16(127) != toInt16(129), toInt16(127) < toInt16(129), toInt16(127) <= toInt16(129), toInt16(127) > toInt16(129), toInt16(127) >= toInt16(129), toInt16(129) = toInt16(127), toInt16(129) != toInt16(127), toInt16(129) < toInt16(127), toInt16(129) <= toInt16(127), toInt16(129) > toInt16(127), toInt16(129) >= toInt16(127) , toInt16(127) = toUInt32(129), toInt16(127) != toUInt32(129), toInt16(127) < toUInt32(129), toInt16(127) <= toUInt32(129), toInt16(127) > toUInt32(129), toInt16(127) >= toUInt32(129), toUInt32(129) = toInt16(127), toUInt32(129) != toInt16(127), toUInt32(129) < toInt16(127), toUInt32(129) <= toInt16(127), toUInt32(129) > toInt16(127), toUInt32(129) >= toInt16(127) , toInt16(127) = toInt32(129), toInt16(127) != toInt32(129), toInt16(127) < toInt32(129), toInt16(127) <= toInt32(129), toInt16(127) > toInt32(129), toInt16(127) >= toInt32(129), toInt32(129) = toInt16(127), toInt32(129) != toInt16(127), toInt32(129) < toInt16(127), toInt32(129) <= toInt16(127), toInt32(129) > toInt16(127), toInt32(129) >= toInt16(127) , toInt16(127) = toUInt64(129), toInt16(127) != toUInt64(129), toInt16(127) < toUInt64(129), toInt16(127) <= toUInt64(129), toInt16(127) > toUInt64(129), toInt16(127) >= toUInt64(129), toUInt64(129) = toInt16(127), toUInt64(129) != toInt16(127), toUInt64(129) < toInt16(127), toUInt64(129) <= toInt16(127), toUInt64(129) > toInt16(127), toUInt64(129) >= toInt16(127) , toInt16(127) = toInt64(129), toInt16(127) != toInt64(129), toInt16(127) < toInt64(129), toInt16(127) <= toInt64(129), toInt16(127) > toInt64(129), toInt16(127) >= toInt64(129), toInt64(129) = toInt16(127), toInt64(129) != toInt16(127), toInt64(129) < toInt16(127), toInt64(129) <= toInt16(127), toInt64(129) > toInt16(127), toInt64(129) >= toInt16(127) , toUInt32(127) = toUInt8(129), toUInt32(127) != toUInt8(129), toUInt32(127) < toUInt8(129), toUInt32(127) <= toUInt8(129), toUInt32(127) > toUInt8(129), toUInt32(127) >= toUInt8(129), toUInt8(129) = toUInt32(127), toUInt8(129) != toUInt32(127), toUInt8(129) < toUInt32(127), toUInt8(129) <= toUInt32(127), toUInt8(129) > toUInt32(127), toUInt8(129) >= toUInt32(127) , toUInt32(127) = toUInt16(129), toUInt32(127) != toUInt16(129), toUInt32(127) < toUInt16(129), toUInt32(127) <= toUInt16(129), toUInt32(127) > toUInt16(129), toUInt32(127) >= toUInt16(129), toUInt16(129) = toUInt32(127), toUInt16(129) != toUInt32(127), toUInt16(129) < toUInt32(127), toUInt16(129) <= toUInt32(127), toUInt16(129) > toUInt32(127), toUInt16(129) >= toUInt32(127) , toUInt32(127) = toInt16(129), toUInt32(127) != toInt16(129), toUInt32(127) < toInt16(129), toUInt32(127) <= toInt16(129), toUInt32(127) > toInt16(129), toUInt32(127) >= toInt16(129), toInt16(129) = toUInt32(127), toInt16(129) != toUInt32(127), toInt16(129) < toUInt32(127), toInt16(129) <= toUInt32(127), toInt16(129) > toUInt32(127), toInt16(129) >= toUInt32(127) , toUInt32(127) = toUInt32(129), toUInt32(127) != toUInt32(129), toUInt32(127) < toUInt32(129), toUInt32(127) <= toUInt32(129), toUInt32(127) > toUInt32(129), toUInt32(127) >= toUInt32(129), toUInt32(129) = toUInt32(127), toUInt32(129) != toUInt32(127), toUInt32(129) < toUInt32(127), toUInt32(129) <= toUInt32(127), toUInt32(129) > toUInt32(127), toUInt32(129) >= toUInt32(127) , toUInt32(127) = toInt32(129), toUInt32(127) != toInt32(129), toUInt32(127) < toInt32(129), toUInt32(127) <= toInt32(129), toUInt32(127) > toInt32(129), toUInt32(127) >= toInt32(129), toInt32(129) = toUInt32(127), toInt32(129) != toUInt32(127), toInt32(129) < toUInt32(127), toInt32(129) <= toUInt32(127), toInt32(129) > toUInt32(127), toInt32(129) >= toUInt32(127) , toUInt32(127) = toUInt64(129), toUInt32(127) != toUInt64(129), toUInt32(127) < toUInt64(129), toUInt32(127) <= toUInt64(129), toUInt32(127) > toUInt64(129), toUInt32(127) >= toUInt64(129), toUInt64(129) = toUInt32(127), toUInt64(129) != toUInt32(127), toUInt64(129) < toUInt32(127), toUInt64(129) <= toUInt32(127), toUInt64(129) > toUInt32(127), toUInt64(129) >= toUInt32(127) , toUInt32(127) = toInt64(129), toUInt32(127) != toInt64(129), toUInt32(127) < toInt64(129), toUInt32(127) <= toInt64(129), toUInt32(127) > toInt64(129), toUInt32(127) >= toInt64(129), toInt64(129) = toUInt32(127), toInt64(129) != toUInt32(127), toInt64(129) < toUInt32(127), toInt64(129) <= toUInt32(127), toInt64(129) > toUInt32(127), toInt64(129) >= toUInt32(127) , toInt32(127) = toUInt8(129), toInt32(127) != toUInt8(129), toInt32(127) < toUInt8(129), toInt32(127) <= toUInt8(129), toInt32(127) > toUInt8(129), toInt32(127) >= toUInt8(129), toUInt8(129) = toInt32(127), toUInt8(129) != toInt32(127), toUInt8(129) < toInt32(127), toUInt8(129) <= toInt32(127), toUInt8(129) > toInt32(127), toUInt8(129) >= toInt32(127) , toInt32(127) = toUInt16(129), toInt32(127) != toUInt16(129), toInt32(127) < toUInt16(129), toInt32(127) <= toUInt16(129), toInt32(127) > toUInt16(129), toInt32(127) >= toUInt16(129), toUInt16(129) = toInt32(127), toUInt16(129) != toInt32(127), toUInt16(129) < toInt32(127), toUInt16(129) <= toInt32(127), toUInt16(129) > toInt32(127), toUInt16(129) >= toInt32(127) , toInt32(127) = toInt16(129), toInt32(127) != toInt16(129), toInt32(127) < toInt16(129), toInt32(127) <= toInt16(129), toInt32(127) > toInt16(129), toInt32(127) >= toInt16(129), toInt16(129) = toInt32(127), toInt16(129) != toInt32(127), toInt16(129) < toInt32(127), toInt16(129) <= toInt32(127), toInt16(129) > toInt32(127), toInt16(129) >= toInt32(127) , toInt32(127) = toUInt32(129), toInt32(127) != toUInt32(129), toInt32(127) < toUInt32(129), toInt32(127) <= toUInt32(129), toInt32(127) > toUInt32(129), toInt32(127) >= toUInt32(129), toUInt32(129) = toInt32(127), toUInt32(129) != toInt32(127), toUInt32(129) < toInt32(127), toUInt32(129) <= toInt32(127), toUInt32(129) > toInt32(127), toUInt32(129) >= toInt32(127) , toInt32(127) = toInt32(129), toInt32(127) != toInt32(129), toInt32(127) < toInt32(129), toInt32(127) <= toInt32(129), toInt32(127) > toInt32(129), toInt32(127) >= toInt32(129), toInt32(129) = toInt32(127), toInt32(129) != toInt32(127), toInt32(129) < toInt32(127), toInt32(129) <= toInt32(127), toInt32(129) > toInt32(127), toInt32(129) >= toInt32(127) , toInt32(127) = toUInt64(129), toInt32(127) != toUInt64(129), toInt32(127) < toUInt64(129), toInt32(127) <= toUInt64(129), toInt32(127) > toUInt64(129), toInt32(127) >= toUInt64(129), toUInt64(129) = toInt32(127), toUInt64(129) != toInt32(127), toUInt64(129) < toInt32(127), toUInt64(129) <= toInt32(127), toUInt64(129) > toInt32(127), toUInt64(129) >= toInt32(127) , toInt32(127) = toInt64(129), toInt32(127) != toInt64(129), toInt32(127) < toInt64(129), toInt32(127) <= toInt64(129), toInt32(127) > toInt64(129), toInt32(127) >= toInt64(129), toInt64(129) = toInt32(127), toInt64(129) != toInt32(127), toInt64(129) < toInt32(127), toInt64(129) <= toInt32(127), toInt64(129) > toInt32(127), toInt64(129) >= toInt32(127) , toUInt64(127) = toUInt8(129), toUInt64(127) != toUInt8(129), toUInt64(127) < toUInt8(129), toUInt64(127) <= toUInt8(129), toUInt64(127) > toUInt8(129), toUInt64(127) >= toUInt8(129), toUInt8(129) = toUInt64(127), toUInt8(129) != toUInt64(127), toUInt8(129) < toUInt64(127), toUInt8(129) <= toUInt64(127), toUInt8(129) > toUInt64(127), toUInt8(129) >= toUInt64(127) , toUInt64(127) = toUInt16(129), toUInt64(127) != toUInt16(129), toUInt64(127) < toUInt16(129), toUInt64(127) <= toUInt16(129), toUInt64(127) > toUInt16(129), toUInt64(127) >= toUInt16(129), toUInt16(129) = toUInt64(127), toUInt16(129) != toUInt64(127), toUInt16(129) < toUInt64(127), toUInt16(129) <= toUInt64(127), toUInt16(129) > toUInt64(127), toUInt16(129) >= toUInt64(127) , toUInt64(127) = toInt16(129), toUInt64(127) != toInt16(129), toUInt64(127) < toInt16(129), toUInt64(127) <= toInt16(129), toUInt64(127) > toInt16(129), toUInt64(127) >= toInt16(129), toInt16(129) = toUInt64(127), toInt16(129) != toUInt64(127), toInt16(129) < toUInt64(127), toInt16(129) <= toUInt64(127), toInt16(129) > toUInt64(127), toInt16(129) >= toUInt64(127) , toUInt64(127) = toUInt32(129), toUInt64(127) != toUInt32(129), toUInt64(127) < toUInt32(129), toUInt64(127) <= toUInt32(129), toUInt64(127) > toUInt32(129), toUInt64(127) >= toUInt32(129), toUInt32(129) = toUInt64(127), toUInt32(129) != toUInt64(127), toUInt32(129) < toUInt64(127), toUInt32(129) <= toUInt64(127), toUInt32(129) > toUInt64(127), toUInt32(129) >= toUInt64(127) , toUInt64(127) = toInt32(129), toUInt64(127) != toInt32(129), toUInt64(127) < toInt32(129), toUInt64(127) <= toInt32(129), toUInt64(127) > toInt32(129), toUInt64(127) >= toInt32(129), toInt32(129) = toUInt64(127), toInt32(129) != toUInt64(127), toInt32(129) < toUInt64(127), toInt32(129) <= toUInt64(127), toInt32(129) > toUInt64(127), toInt32(129) >= toUInt64(127) , toUInt64(127) = toUInt64(129), toUInt64(127) != toUInt64(129), toUInt64(127) < toUInt64(129), toUInt64(127) <= toUInt64(129), toUInt64(127) > toUInt64(129), toUInt64(127) >= toUInt64(129), toUInt64(129) = toUInt64(127), toUInt64(129) != toUInt64(127), toUInt64(129) < toUInt64(127), toUInt64(129) <= toUInt64(127), toUInt64(129) > toUInt64(127), toUInt64(129) >= toUInt64(127) , toUInt64(127) = toInt64(129), toUInt64(127) != toInt64(129), toUInt64(127) < toInt64(129), toUInt64(127) <= toInt64(129), toUInt64(127) > toInt64(129), toUInt64(127) >= toInt64(129), toInt64(129) = toUInt64(127), toInt64(129) != toUInt64(127), toInt64(129) < toUInt64(127), toInt64(129) <= toUInt64(127), toInt64(129) > toUInt64(127), toInt64(129) >= toUInt64(127) , toInt64(127) = toUInt8(129), toInt64(127) != toUInt8(129), toInt64(127) < toUInt8(129), toInt64(127) <= toUInt8(129), toInt64(127) > toUInt8(129), toInt64(127) >= toUInt8(129), toUInt8(129) = toInt64(127), toUInt8(129) != toInt64(127), toUInt8(129) < toInt64(127), toUInt8(129) <= toInt64(127), toUInt8(129) > toInt64(127), toUInt8(129) >= toInt64(127) , toInt64(127) = toUInt16(129), toInt64(127) != toUInt16(129), toInt64(127) < toUInt16(129), toInt64(127) <= toUInt16(129), toInt64(127) > toUInt16(129), toInt64(127) >= toUInt16(129), toUInt16(129) = toInt64(127), toUInt16(129) != toInt64(127), toUInt16(129) < toInt64(127), toUInt16(129) <= toInt64(127), toUInt16(129) > toInt64(127), toUInt16(129) >= toInt64(127) , toInt64(127) = toInt16(129), toInt64(127) != toInt16(129), toInt64(127) < toInt16(129), toInt64(127) <= toInt16(129), toInt64(127) > toInt16(129), toInt64(127) >= toInt16(129), toInt16(129) = toInt64(127), toInt16(129) != toInt64(127), toInt16(129) < toInt64(127), toInt16(129) <= toInt64(127), toInt16(129) > toInt64(127), toInt16(129) >= toInt64(127) , toInt64(127) = toUInt32(129), toInt64(127) != toUInt32(129), toInt64(127) < toUInt32(129), toInt64(127) <= toUInt32(129), toInt64(127) > toUInt32(129), toInt64(127) >= toUInt32(129), toUInt32(129) = toInt64(127), toUInt32(129) != toInt64(127), toUInt32(129) < toInt64(127), toUInt32(129) <= toInt64(127), toUInt32(129) > toInt64(127), toUInt32(129) >= toInt64(127) , toInt64(127) = toInt32(129), toInt64(127) != toInt32(129), toInt64(127) < toInt32(129), toInt64(127) <= toInt32(129), toInt64(127) > toInt32(129), toInt64(127) >= toInt32(129), toInt32(129) = toInt64(127), toInt32(129) != toInt64(127), toInt32(129) < toInt64(127), toInt32(129) <= toInt64(127), toInt32(129) > toInt64(127), toInt32(129) >= toInt64(127) , toInt64(127) = toUInt64(129), toInt64(127) != toUInt64(129), toInt64(127) < toUInt64(129), toInt64(127) <= toUInt64(129), toInt64(127) > toUInt64(129), toInt64(127) >= toUInt64(129), toUInt64(129) = toInt64(127), toUInt64(129) != toInt64(127), toUInt64(129) < toInt64(127), toUInt64(129) <= toInt64(127), toUInt64(129) > toInt64(127), toUInt64(129) >= toInt64(127) , toInt64(127) = toInt64(129), toInt64(127) != toInt64(129), toInt64(127) < toInt64(129), toInt64(127) <= toInt64(129), toInt64(127) > toInt64(129), toInt64(127) >= toInt64(129), toInt64(129) = toInt64(127), toInt64(129) != toInt64(127), toInt64(129) < toInt64(127), toInt64(129) <= toInt64(127), toInt64(129) > toInt64(127), toInt64(129) >= toInt64(127) 
SELECT hasTokenCaseInsensitiveOrNull(NULL, NULL);
SELECT COUNT(*) FROM zero_rows_per_granule;
SELECT CASE WHEN (number % 2) = 0 THEN toFloat32(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toFloat64(3) END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_8_744 VALUES 
OPTIMIZE TABLE t_sparse_columns_clear FINAL;
SELECT TRIM(LEADING 'abc' FROM 'abcdef');
INSERT INTO test_01193_18429.table_7_439 VALUES 
SELECT '30' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv4StringToNum('255.255.255.252')))
CREATE TABLE test_01193_18429.table_6_685 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT '--- comma and or ---';
SELECT trim(BOTH 'a' arg_1 FROM 'abca' arg_2), arg_1, arg_2;
DROP TABLE t_sparse_mutations_2;
CREATE TABLE test_01193_18429.table_5_524 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT toDecimal64(-12345.6789, 4) AS x, round(x, -1), round(x, -2), round(x, -3), round(x, -4), round(x, -5);
SELECT max(NULL);
CREATE DATABASE IF NOT EXISTS test_0irhuru7 
INSERT INTO enum_mapping_protobuf_00825 VALUES 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), toRelativeDayNum(N, 'Asia/Istanbul') as r FORMAT CSV;
CREATE TABLE test_662968626440533B4E4E6E65353D69353139595650317E225457594A6C2D77502D31502F2F4A633B(x UInt8) Engine=Memory;
select * from (select * from numbers(1) union all select * from numbers(2) union all select * from numbers(3)) order by number;
CREATE TABLE test_01193_18429.table_1_194 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO src VALUES /* (-55, 1) */ 
SELECT (SELECT number FROM numbers(100) ORDER BY number LIMIT 1), (SELECT number FROM numbers(100) ORDER BY number DESC LIMIT 1);
DROP DATABASE IF EXISTS test_smatz8da 
CREATE TABLE test_01193_18429.table_9_498 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE test_n6lig2oj_1
SELECT * FROM (SELECT 1 as a) as t1 SEMI JOIN ( SELECT ('b', 256) as b ) AS t2 ON NULL;
INSERT INTO test_01193_18429.table_3_877 VALUES 
CREATE TABLE test_01193_18429.table_5_530 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP DATABASE IF EXISTS test_o9biqex1 
INSERT INTO t1 SELECT number, number FROM numbers(24, 2);
INSERT INTO r8 SELECT 3
drop table dist_01758
INSERT INTO src VALUES /* (10, 2) */ 
DROP DATABASE IF EXISTS test_pbje0dfd 
CREATE TABLE test_01193_18429.table_2_472 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/01710_minmax_count_projection_constant_query.sql from pid=1726' 
SELECT JSONExtractRaw('');
SELECT * FROM information_schema.STATISTICS LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
INSERT INTO test_01193_18429.table_9_288 VALUES 
SELECT * FROM 02668_logical_optimizer WHERE a = 1 OR 1 = a;
SELECT count() FROM t_cnf_fuzz WHERE (c4 AND (NOT c8) AND (NOT c0) AND (NOT c0)) OR (c6 AND c1 AND (NOT c2) AND (NOT c7)) OR (c9 AND (NOT c8)) OR (c6 AND c2 AND (NOT c6)) OR (c0 AND c2 AND (NOT c1) AND (NOT c3) AND c6) OR (c6 AND (NOT c6) AND (NOT c1)) OR ((NOT c9) AND c4 AND c3 AND (NOT c3) AND (NOT c5)) OR ((NOT c2) AND (NOT c5) AND c4) OR ((NOT c4)) OR ((NOT c7)) SETTINGS convert_query_to_cnf = 1
CREATE TABLE test_01193_18429.table_2_746 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_3_48 VALUES 
create database db_hang engine=Ordinary;
SELECT name FROM system.parts WHERE active AND database='test_uepaqe2p' and table='dst_12' ORDER BY rand() LIMIT 1
CREATE TABLE 01785_db.simple_key_source_table ( id UInt64, value String ) ENGINE = TinyLog();
SELECT arrayExists(x -> ((x.1) = 'pattern'), cast([tuple('a', 1)] as Array(Tuple(LowCardinality(String), UInt8))));
select 1, * from rmt1 order by n;
SELECT 'SELECT toUInt64(1) == N';
CREATE TABLE test_4C61233F56525C396C4B477E672C4B224D466646406D756F5E674B6058454C3A427E5653417A563E(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_3_679 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE MATERIALIZED VIEW mv2_00726 ENGINE = Memory AS SELECT x FROM src_00726 WHERE x % 2 = 1;
CREATE TABLE test_663D5F245A5D6F434F63635E3C5F6F523A3F74364D4D3C4A6957483D42424E643073462E2D755551(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_zjbndmkb 
DROP DATABASE IF EXISTS test_97t37h8w 
CREATE TABLE test_6d2x9kvl.optimize_me_finally ( date Date, Sign Int8, ki UInt64, ds String, di01 UInt64, di02 UInt64, di03 UInt64, di04 UInt64, di05 UInt64, di06 UInt64, di07 UInt64, di08 UInt64, di09 UInt64, di10 UInt64, n Nested( i UInt64, s String ) ) ENGINE = CollapsingMergeTree(date, (date, ki), 8192, Sign)
select joinGet('join_test', 'b', 1);
CREATE TABLE test_01193_18429.table_9_533 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
EXPLAIN QUERY TREE SELECT count() FROM constraint_test_constants WHERE (a > 100 OR b > 100 OR c > 100) AND (a <= 100 OR b > 100 OR c > 100) AND (NOT b > 100 OR c > 100) AND (c <= 100) SETTINGS allow_experimental_analyzer = 1;
CREATE TABLE test_01193_18429.table_6_239 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE DATABASE IF NOT EXISTS test_z516s93g 
SELECT multiIf((col1 % 2) = 0, toFixedString('foo', 16), 1, toFixedString('bar', 16), col4) FROM multi_if_check;
INSERT INTO test_insert_t3 SELECT '2019-09-01', uid, name, city FROM ( SELECT dt, uid, name, city FROM test_insert_t1 WHERE dt = '2019-09-01') t1 GLOBAL SEMI LEFT JOIN (SELECT uid FROM test_insert_t2 WHERE dt = '2019-09-01') t2 ON t1.uid=t2.uid;
CREATE TABLE dictionary_source_ru ( id UInt64, value String ) ENGINE = TinyLog;
DROP DATABASE IF EXISTS test_vdj32cgq 
SELECT CASE WHEN (number % 2) = 0 THEN [toInt32(1), toInt32(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toInt32(3), toInt32(3)] END FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/00634_rename_view.sql from pid=1724' 
SELECT 'Running test stateless/02811_ip_dict_attribute.sql from pid=1718' 
SELECT * FROM system.time_zones LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
SELECT 'Running test stateless/01034_order_by_pk_prefix.sql from pid=1726' 
INSERT INTO test_01193_18429.table_2_600 VALUES 
CREATE TABLE test_53626670792A7064547D38496840225E5A287C516E25203625412952355E465E7D30387C7A406131(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_0n3ucf46 
set max_block_size = 1;
select toTime(toDateTime(0, 'Africa/Monrovia'), 'Africa/Monrovia');
insert into data_01223 select * from numbers(3);
create materialized view summing_merge_tree_aggregate_function ( d Date, k UInt64, c UInt64, u AggregateFunction(uniq, UInt64) ) engine=SummingMergeTree(d, k, 8192) as select d, k, sum(c) as c, uniqState(u) as u from summing_merge_tree_null group by d, k;
CREATE TABLE test_01193_18429.table_4_644 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT * FROM parquet_nested_arrays
SELECT * FROM t_buffer_map
CREATE TABLE test_02908_r2_166 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_166', 'r2') ORDER BY tuple()
SELECT v1, v2 FROM primary_key_test FINAL ORDER BY v1, v2;
SELECT quantilesTDigest(0, 0.001, 0.01, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 0.99, 0.999, 1)(x) FROM (SELECT number AS x FROM system.numbers LIMIT 1001);
DROP TABLE IF EXISTS mutation_table SYNC
CREATE TABLE one_00458 (x Array(UInt32), z String DEFAULT '', y Array(UInt32)) ENGINE = Memory;
SELECT visibleWidth((1, 2)), visibleWidth([1, 2, 3]), visibleWidth((1, [2]));
SELECT 3, * FROM merge_tree ORDER BY d;
SELECT a, e FROM t_fixed_prefix ORDER BY a, e SETTINGS optimize_read_in_order = 1
DROP DICTIONARY IF EXISTS test_dict;
CREATE DATABASE IF NOT EXISTS test_p8mgzzga 
CREATE TABLE test_02908_r1_219 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_219', 'r1') ORDER BY tuple()
/* ddl_entry=query-0000000118 */ ALTER TABLE test_990cm9di.t1 ADD COLUMN `newcol` UInt32
CREATE TABLE test_734B206F7373386D4C7E4C2D413468695D5D5F3463442332486057695A295D31415B6436653A7834(x UInt8) Engine=Memory;
SELECT toDecimal128OrDefault ('', 4);
select 0 = isValidUTF8(toFixedString('123456789012345\xed', 16)) from system.numbers limit 10;
CREATE TABLE test_722F465A4E3A79263E244377377E5D302E284975454B41262E5637383B5963325F3E3E4962672549(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00267_tuple_array_access_operators_priority.sql from pid=1726' 
select hex(sipHash64Keyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)));
SELECT * FROM bloom_filter_idx3 WHERE s IN ('some string', 'abc') ORDER BY k
DROP TABLE test_gmo80lov.local_opentelemetry;
ALTER TABLE concurrent_alter_column ADD COLUMN c258 DOUBLE;
SELECT number, grouping(number % 2, number) AS gr FROM numbers(10) GROUP BY GROUPING SETS ( (number), (number % 2) ) ORDER BY number, gr SETTINGS force_grouping_standard_compatibility=0;
DROP DATABASE IF EXISTS test_max_num_to_warn_9;
SELECT total_rows, total_bytes > 0 FROM system.tables WHERE database = currentDatabase() AND name = 'dict' FORMAT CSV;
CREATE DATABASE IF NOT EXISTS test_qo4x4tji 
SELECT '24' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:c000::')))
SELECT 'Running test stateless/02835_fuzz_remove_redundant_sorting.sql from pid=1718' 
SYSTEM STOP MERGES xMM;
INSERT INTO mt VALUES /* (1, 2) */ 
CREATE TABLE test_465D4F39603C52734D2544502E402D55315229362F7D21696E4B46202B6F66563F55636D21486532(x UInt8) Engine=Memory;
SELECT addQuarters('2023-10-22', materialize(1)), addQuarters('2023-10-22 12:34:56.123', materialize(1));
select match('Too late', '(?i)too late');
select uniqExact(_part), count() from tDD where toDate(d)=toDate('2020-09-24');
INSERT INTO test_01193_18429.table_10_180 VALUES 
CREATE TABLE tab (`x` UInt32, `y` UInt32) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 41882, min_bytes_for_wide_part = 172817117, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 2269, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 754084, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 7019310802, index_granularity_bytes = 18366323, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 44232, primary_key_compress_block_size = 68635
DROP TABLE IF EXISTS local_statements;
SELECT [lc] as array_lc, tuple(lc) as tuple_lc, toLowCardinality(toString(number)) as lc from numbers(10) FORMAT ORC
CREATE DATABASE IF NOT EXISTS test_zquexkip 
SELECT count() > 0 FROM system.text_log WHERE query_id in (select query_id from system.query_log where current_database = currentDatabase() AND log_comment = '02875_190aed82-2423-413b-ad4c-24dcca50f65b') AND message LIKE '%Parallel reading from replicas is disabled for cluster%';
optimize table data_r1 final settings optimize_throw_if_noop=1, alter_sync=1;
CREATE DATABASE IF NOT EXISTS test_i8uh21vf 
CREATE DATABASE IF NOT EXISTS test_mnyf2m4w 
SELECT 'Array sum ', (arraySum(array(1,2,3,4,5,6)));
SELECT 'Running test stateless/01667_aes_args_check.sql from pid=1713' 
CREATE TABLE test_5C2E5874606D456D5D612F6F687A23235E6A764741385A2321546B3575396325713C452E444A386C(x UInt8) Engine=Memory;
CREATE TABLE test_466B466824533341246855794A6525692C6B5E7B324B5D7D6A2A414F5C513234312665763C7A4F56(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_5r4han3w 
SELECT round(abs(COVAR1 - COVAR2), 6) FROM ( SELECT arrayJoin([1]) AS ID2, covarSamp(x_value, y_value) AS COVAR1 FROM series ) ANY INNER JOIN ( SELECT arrayJoin([1]) AS ID2, sum(VAL) / (count() - 1) AS COVAR2 FROM ( SELECT (X - AVG_X) * (Y - AVG_Y) AS VAL FROM ( SELECT toUInt32(arrayJoin([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])) AS ID, avg(x_value) AS AVG_X, avg(y_value) AS AVG_Y FROM series ) ANY INNER JOIN ( SELECT i AS ID, x_value AS X, y_value AS Y FROM series ) USING ID ) ) USING ID2;
INSERT INTO test_01193_18429.table_3_10 VALUES 
SELECT multiIf((number % 2) = 0, toUInt32(1), (number % 3) = 0, toUInt64(2), toUInt8(3)) FROM system.numbers LIMIT 10;
SELECT * FROM system.mutations WHERE database = 'test_8vpf77vf' and is_done=0 and table = 'concurrent_alter_mt_2'
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toInt16(2), toInt16(3)] ELSE [toUInt16(3), toUInt16(3)] END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_5_5 VALUES 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c9) AND c0 AND c5 AND c3) OR ((NOT c1) AND c0 AND (NOT c4) AND c1) OR ((NOT c1) AND (NOT c0) AND c2) OR (c5 AND c1 AND c4) OR ((NOT c2) AND (NOT c1) AND (NOT c3) AND c4 AND (NOT c9)) OR (c0 AND c1 AND c7 AND c0 AND c6) OR (c8) OR ((NOT c9) AND c7) SETTINGS convert_query_to_cnf = 0
with (select number from numbers(10) intersect select 5) as a select a * 10;
SELECT assumeNotNull(-1);
CREATE DATABASE IF NOT EXISTS test_jv1mkbie 
CREATE DATABASE IF NOT EXISTS test_nvt7mvhg 
DROP TABLE IF EXISTS t_02156_dist;
select * from file('test_02149.data', 'TSV')
SELECT 'Running test stateless/01550_type_map_formats.sql from pid=1724' 
DROP DATABASE IF EXISTS test_bq57v4pi 
SELECT 'implicit_True', count() as all, transaction_id = (0,0,'00000000-0000-0000-0000-000000000000') as is_empty FROM system.query_log WHERE current_database = currentDatabase() AND event_date >= yesterday() AND query LIKE '-- Verify that the transaction_id column is populated correctly%' GROUP BY transaction_id FORMAT JSONEachRow;
ATTACH TABLE r5
detach table rmt3 sync;
CREATE TABLE test_4B5E554A52383A72625C624051244B73235A587379514D27616132224F3543265C28526466656D50(x UInt8) Engine=Memory;
SELECT name FROM system.tables WHERE database=currentDatabase() AND name like 'alter_table%' ORDER BY rand() LIMIT 1
GRANT SELECT ON system.one TO session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_double_sha1_password_two_profiles_two_roles;
DROP TABLE test3_00550;
ALTER TABLE concurrent_alter_column ADD COLUMN c336 DOUBLE;
SELECT count(1) from file('1m_rows_cr_end_of_line.csv.xz') settings input_format_csv_allow_cr_end_of_line=1, optimize_count_from_files=1
DROP TABLE IF EXISTS table_to_store_data;
INSERT INTO test_01193_18429.table_10_829 VALUES 
CREATE TABLE sample_table_2 (`key` UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/02221_system_zookeeper_unrestricted_like_test_90m2pvar/02221_system_zookeeper_unrestricted_like_2', '1') ORDER BY tuple() SETTINGS index_granularity = 32085, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 115, merge_max_block_size = 22908, prefer_fetch_merged_part_size_threshold = 5483353878, vertical_merge_algorithm_min_rows_to_activate = 134139, vertical_merge_algorithm_min_columns_to_activate = 9, min_merge_bytes_to_use_direct_io = 6748343395, index_granularity_bytes = 14707862, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 78531, primary_key_compress_block_size = 76630
CREATE TABLE test_block_mismatch (`a` UInt32, `b` DateTime) ENGINE = ReplacingMergeTree PARTITION BY toYYYYMM(b) ORDER BY (toDate(b), a) SETTINGS index_granularity = 50965, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.16602949798107147, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 5229, prefer_fetch_merged_part_size_threshold = 318570174, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 7032476, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 12499, primary_key_compress_block_size = 86644
INSERT INTO test_01193_18429.table_5_782 VALUES 
CREATE TABLE test_2B796D3F403666424357273A274D68532C313F20376C5C325663207D2738454D4D2E5A486A7B3032(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_cos1h49k 
WITH test1 AS (SELECT number-1 as n FROM numbers(42)) SELECT max(n+1)+1 z FROM test1;
INSERT INTO t64 SELECT (intExp2(56) - 1 + number) AS x, x, x, x, x, x, x, x FROM numbers(2049);
DROP DATABASE IF EXISTS test_3hfwq467 
SELECT 'Running test stateless/02816_s2_invalid_point.sql from pid=1724' 
SELECT wkt(p) FROM geo ORDER BY id;
DROP TABLE table_00305a 
select dictGetAll('regexp_dict3', 'tag', 'clickhouse.com');
DROP DATABASE IF EXISTS test_qpgfxebm 
drop dictionary if exists test_table_select
select count() from system.processes where query_id = 'drop-dahgtcvfwx'
CREATE TABLE test_01193_18429.table_9_383 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_3_549 VALUES 
CREATE TABLE test_634E5F4C395A7563673D565F7B5F794D285E69587A472836684428246B6F29794B33287B4F4C662D(x UInt8) Engine=Memory;
INSERT INTO dst_3 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 40
SELECT name, round(polygonAreaSpherical(p), 6) from country_polygons
DROP USER IF EXISTS kek_02243;
SELECT uniqTheta(`dummy`) FROM `system`.`one`
SELECT count() FROM t_cnf_fuzz WHERE (c0 AND c0) OR ((NOT c9)) OR ((NOT c2)) SETTINGS convert_query_to_cnf = 0
DROP TABLE IF EXISTS num_processed_rows_test_0
SELECT 'Running test stateless/02116_tuple_element.sql from pid=1714' 
INSERT INTO test_01193_18429.table_5_514 VALUES 
CREATE TABLE test_02908_r2_69 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_69', 'r2') ORDER BY tuple()
select 0 = multiMatchAny(materialize('drqianqtangmgbdwruvblkqd'), ['wusajejyucamkyl', 'wsgibljugzrpkniliy', 'lhwqqiuafwffyersqjgjvvvfurx', 'jfokpzzxfdonelorqu', 'ccwkpcgac', 'jmyulqpndkmzbfztobwtm', 'rwrgfkccgxht', 'ggldjecrgbngkonphtcxrkcviujihidjx', 'spwweavbiokizv', 'lv', 'krb', 'vstnhvkbwlqbconaxgbfobqky', 'pvxwdc', 'thrl', 'ahsblffdveamceonqwrbeyxzccmux', 'yozji', 'oejtaxwmeovtqtz', 'zsnzznvqpxdvdxhznxrjn', 'hse', 'kcmkrccxmljzizracxwmpoaggywhdfpxkq']) from system.numbers limit 10;
CREATE WINDOW VIEW 01062_window_view_event_hop_watch_asc.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, hopEnd(wid) AS w_end FROM 01062_window_view_event_hop_watch_asc.mt GROUP BY hop(timestamp, INTERVAL '2' SECOND, INTERVAL '3' SECOND, 'US/Samoa') AS wid
CREATE TABLE 01753_dictionary_db.simple_key_hierarchy_table ( id UInt64, parent_id UInt64 ) ENGINE = TinyLog();
CREATE TABLE Sub (`Id` UInt64, `PropertyId` UInt64) ENGINE = MergeTree PRIMARY KEY Id ORDER BY Id SETTINGS index_granularity = 24076, min_bytes_for_wide_part = 708470616, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 25, merge_max_block_size = 4737, prefer_fetch_merged_part_size_threshold = 6005256440, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 4899276248, index_granularity_bytes = 6410912, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 63887, primary_key_compress_block_size = 75388
DROP DATABASE IF EXISTS test_ixwy7a8e 
DROP TABLE IF EXISTS test_01915_db.test_source_table_2;
SELECT 'Running test stateless/01337_mysql_global_variables.sql from pid=1722' 
SELECT concat(42, materialize(NULL :: Nullable(UInt64)), materialize(NULL :: Nullable(UInt64)));
SELECT 'Running test stateless/00698_validate_array_sizes_for_nested.sql from pid=1720' 
INSERT INTO test_01193_18429.table_2_464 VALUES 
CREATE DATABASE IF NOT EXISTS test_7m5hvjum 
alter table data_01900_1 update s = 'foo_24' where 1;
SELECT arrayJoin(range(100)) AS `x` FROM `system`.`one` WHERE `x` GLOBAL IN (`_subquery3581`) GROUP BY `x` ORDER BY `x` ASC LIMIT 10
SELECT format('The {0} to all questions is {1}.', 'answer', materialize('foo' :: LowCardinality(String)));
CREATE TABLE tab_str_lc (`x` LowCardinality(String)) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 4873, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 21002, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 10438750, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 16979, primary_key_compress_block_size = 74278
INSERT INTO r4 SELECT 4
CREATE TABLE test_4F244928642A512D272F6826565C205A7D525B215D686D355B595D513D5770565E2C616F32427D78(x UInt8) Engine=Memory;
select number, intDiv(number, 2) p, mod(number, 3) o, count(number) over w as c from numbers(31) window w as (partition by p order by o range unbounded preceding) order by number settings max_block_size = 5 ;
CREATE TABLE test_4E457C535B386D634349774B4359203828215D764242736728474B43795240575225567C6560783C(x UInt8) Engine=Memory;
SYSTEM FLUSH ASYNC INSERT QUEUE
SELECT kql_array_sort_desc(NULL, NULL, NULL);
CREATE TABLE test_01193_18429.table_9_693 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_karrq3ph 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (0 < 18 AND 0 > 0 ? 0 : 0)), throwIf(last != (0 < 18 AND 0 > 0 ? least(18 - 1, 0 + 0 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(18) LIMIT 0, 0);
SELECT 't1 ANY LEFT JOIN t2 | bs = 1';
SELECT 'Running test stateless/02020_alter_table_modify_comment.sh from pid=1715' 
select jsonMergePatch('{"a":1, "b":2}', '{"b":null}');
SELECT '0.090773324285671';
select parseDateTime('1980 001', '%Y %j', 'UTC') = toDateTime('1980-01-01', 'UTC');
SELECT 57;
CREATE TABLE database_for_dict.table_for_dict (`key_column` UInt64, `second_column` UInt8, `third_column` String, `fourth_column` Float64) ENGINE = MergeTree ORDER BY key_column SETTINGS index_granularity = 8464, min_bytes_for_wide_part = 452729523, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 5204, prefer_fetch_merged_part_size_threshold = 1068098372, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 9146181, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 62114, primary_key_compress_block_size = 99770
CREATE TABLE test_01193_18429.table_10_510 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_7_583 VALUES 
SELECT id, value FROM test_table WHERE id IN (SELECT 1);
desc s3Cluster('test_cluster_one_shard_three_replicas_localhost', 'http://localhost:11111/test/{a,b}.tsv', NOSIGN, 'TSV');
SELECT Y, uniqCombined(X) FROM (SELECT number AS X, round(toFloat32(1/(1 + (3*X*X - 7*X + 11) % 37)), 3) AS Y FROM system.numbers LIMIT 3000) GROUP BY Y ORDER BY Y;
SELECT '18446744073709551615', '-1.500000000', 18446744073709551615 = -1.500000000, 18446744073709551615 != -1.500000000, 18446744073709551615 < -1.500000000, 18446744073709551615 <= -1.500000000, 18446744073709551615 > -1.500000000, 18446744073709551615 >= -1.500000000, -1.500000000 = 18446744073709551615, -1.500000000 != 18446744073709551615, -1.500000000 < 18446744073709551615, -1.500000000 <= 18446744073709551615, -1.500000000 > 18446744073709551615, -1.500000000 >= 18446744073709551615 , toUInt64(18446744073709551615) = -1.500000000, toUInt64(18446744073709551615) != -1.500000000, toUInt64(18446744073709551615) < -1.500000000, toUInt64(18446744073709551615) <= -1.500000000, toUInt64(18446744073709551615) > -1.500000000, toUInt64(18446744073709551615) >= -1.500000000, -1.500000000 = toUInt64(18446744073709551615), -1.500000000 != toUInt64(18446744073709551615), -1.500000000 < toUInt64(18446744073709551615), -1.500000000 <= toUInt64(18446744073709551615), -1.500000000 > toUInt64(18446744073709551615), -1.500000000 >= toUInt64(18446744073709551615) ;
SET min_insert_block_size_bytes = 1000000;
CREATE TABLE test_01193_18429.table_8_111 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_6_873 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_3D30343560615D5C36537C547C6A282A45416D777330217357614D245D26604F7C4F3E296B445F48(x UInt8) Engine=Memory;
CREATE TABLE vec1f (id UInt64, v Array(Float32)) ENGINE = Memory;
CREATE TABLE test_01193_18429.table_10_148 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
OPTIMIZE TABLE src_5
DROP TABLE IF EXISTS nullable_key;
WITH '2020-02-05 14:34:12.333' as S, toDateTime64(S, 3) as DT64 SELECT S = DT64;
CREATE TABLE test_01193_18429.table_2_613 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_5455786976414D7C5D374C762E707B4F67494627214D5F7B57445531407E6C6A3725222C74505E45(x UInt8) Engine=Memory;
INSERT INTO r4 SELECT 28
SELECT arraySum(x -> 10, range(number)) FROM system.numbers LIMIT 10;
SELECT 'Result type is Date32';
CREATE TABLE test_727568683A2B5F56636B7B6431707B31695B795C374F5D4A3D4428203C35683046425A65316F275B(x UInt8) Engine=Memory;
CREATE TABLE test_3D5D6E3F577258486F60317127566A4A6768316D3142687E7E2F533325625868582B5A5C2B7A2E76(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_2_302 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'SELECT N == toUInt32(1)';
SELECT cutIPv6(IPv6StringToNum('2001:0DB8:AC10:FE01:FEED:BABE:CAFE:F00D'), 8, 0);
select number from numbers(20) intersect select number from numbers(5, 5);
INSERT INTO test_01193_18429.table_1_321 VALUES 
SELECT '-- readonly ambiguity';
CREATE TABLE test_01193_18429.table_4_744 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE IF NOT EXISTS decimal (a DECIMAL(9,0), b DECIMAL(18,0), c DECIMAL(38,0), d DECIMAL(9, 9), e Decimal64(18), f Decimal128(38), g Decimal32(5), h Decimal64(9), i Decimal128(18), j dec(4,2)) ENGINE = Memory;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c4) AND (NOT c7) AND (NOT c9) AND (NOT c4) AND (NOT c1)) OR ((NOT c8) AND (NOT c7)) OR (c8 AND (NOT c7)) OR (c7 AND (NOT c8) AND (NOT c5) AND (NOT c5)) SETTINGS convert_query_to_cnf = 1
SET distributed_group_by_no_merge = 0, extremes = 1;
select 2 = positionCaseInsensitiveUTF8(materialize('ÃÂ°ÃÂ±ÃÂ²'), 'ÃÂÃÂ²');
DROP DATABASE IF EXISTS test_jlnyr8ig_1
INSERT INTO test_01193_18429.table_5_278 VALUES 
SELECT fromUnixTimestampInJodaSyntax(1669804872, 'CC', 'UTC');
DROP DATABASE IF EXISTS test_3eoo55sl 
CREATE TABLE test_47412A5D2D345B7637646E253128683953595152274F44364A7B244C55343B7B6057257E4A446563(x UInt8) Engine=Memory;
SELECT multiIf((number % 2) = 0, [toFloat64(1), toFloat64(2)], (number % 3) = 0, [toFloat32(2), toFloat32(3)], [toFloat64(3), toFloat64(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_7_483 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
with '2018-01-12 22:33:44' as s, toDateTime(s) as datetime, toDateTime64(s, 6) as datetime64, toDate(s) as date, toDate32(s) as date32 SELECT formatDateTimeInJodaSyntax(datetime, 'KKK'), formatDateTimeInJodaSyntax(datetime64, 'KKK'), formatDateTimeInJodaSyntax(date, 'KKK'), formatDateTimeInJodaSyntax(date32, 'KKK');
CREATE TABLE test_5F2F3576295D70733C70256D24567B56252F3D232E402B20574C2B7359246D4C6F7134315A714A5F(x UInt8) Engine=Memory;
SELECT a, b FROM order_by_all ORDER BY * DESC;
EXPLAIN QUERY TREE (SELECT sum(uint64 - 1 AS i) from test_table where i > 0);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (99 < 76 AND 40 > 0 ? 99 : 0)), throwIf(last != (99 < 76 AND 40 > 0 ? least(76 - 1, 99 + 40 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(76) LIMIT 99, 40);
SELECT YYYYMMDDToDate(20230940);
alter table many_mutations delete where y = 3 * 2 settings mutations_sync = 0;
CREATE TABLE t_buffer_string(key String) ENGINE = Buffer('', '', 1, 1, 1, 1000000000000, 1000000000000, 1000000000000, 1000000000000)
DROP DATABASE IF EXISTS test_mh6l3jxh 
SELECT 'Running test stateless/02561_temporary_table_sessions.sh from pid=1705' 
CREATE TABLE partitioned_by_week (`d` Date, `x` UInt8) ENGINE = MergeTree PARTITION BY toMonday(d) ORDER BY x SETTINGS index_granularity = 12923, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.386675089597702, replace_long_file_name_to_hash = true, max_file_name_length = 108, merge_max_block_size = 10924, prefer_fetch_merged_part_size_threshold = 1621319835, vertical_merge_algorithm_min_rows_to_activate = 900265, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 24252738, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 77672, primary_key_compress_block_size = 83477
SELECT * FROM (SELECT 1 UNION ALL (SELECT 1 UNION SELECT 1 UNION ALL (SELECT 1 UNION ALL SELECT 1)));
DROP DATABASE IF EXISTS test_jluipcjf 
select round(1000 * ngramDistanceCaseInsensitive(materialize('abcdefgh'), 'abcdeFG')) from system.numbers limit 5;
SELECT 'Running test stateless/01043_h3_edge_length_m.sql from pid=1724' 
CREATE TABLE test_4E35372D7B79393072622C77225A446C47447522402B2429276A6E27785D4D5E4F6A5D7C48773744(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_9_683 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE DATABASE IF NOT EXISTS test_jtlojs8t 
SELECT '--grant option 1';
INSERT INTO r1 SELECT 63
insert into function file('02366_data_8.jsonl') select range(number % 1000) from numbers(100000) settings output_format_parallel_formatting=1
DROP DATABASE IF EXISTS test_2e8hd46i 
select (toLowCardinality('a') as val) || 'b' group by val order by val;
INSERT INTO test_01193_18429.table_1_481 VALUES 
CREATE TABLE test_01193_18429.table_2_72 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/02346_inverted_index_search.sql from pid=1722' 
DROP DATABASE IF EXISTS test_max_num_to_warn_3;
CREATE TABLE test_01193_18429.table_2_574 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Running test stateless/02293_compatibility_ignore_auto_increment_in_create_table.sql from pid=1724' 
SELECT 'Running test stateless/01509_format_raw_blob.sh from pid=1715' 
DROP USER test_00463
DESCRIBE TABLE s3Cluster('test_cluster_two_shards_localhost', 'http://localhost:11111/test/{a,b,c}.tsv', 'test', '[HIDDEN]', 'TSV', 'c1 UInt64, c2 UInt64, c3 UInt64', 'auto')
CREATE TABLE test_01193_18429.table_10_999 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE SETTINGS PROFILE s2_01418 SETTINGS custom_null = NULL;
DROP DATABASE IF EXISTS test_ns9hiw20 
SELECT count() FROM `test_ny0ja0kb`.`sample_final` FINAL
SELECT replaceRegexpAll(',,1', '^[,]*|[,]*$', '');
select dummy from (select dummy + dummy + 0 as l, dummy from remote('127.{1,1}', system.one) where dummy + dummy >= 0 limit 1 by l) settings prefer_localhost_replica=1,distributed_group_by_no_merge=1,distributed_push_down_limit=0;
drop table log_errors;
CREATE TABLE table1 (`id` Int64, `v` UInt64) ENGINE = ReplicatedReplacingMergeTree('/clickhouse/tables/{database}/test_table12', '1', v) PARTITION BY id % 200 ORDER BY id SETTINGS index_granularity = 32958, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 3687, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 11033009, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 72330, primary_key_compress_block_size = 46222
INSERT INTO test_01193_18429.table_1_700 VALUES 
INSERT INTO test_01193_18429.table_5_509 VALUES 
select tuple(toNullable(number), toNullable(number)) = tuple(number, number) from numbers(1);
SELECT '13', peak_threads_usage, (select count() from system.query_thread_log WHERE system.query_thread_log.query_id = '02871_1_215652_13' AND current_database = currentDatabase()) = length(thread_ids), length(thread_ids) >= peak_threads_usage FROM system.query_log WHERE type = 'QueryFinish' AND query_id = '02871_1_215652_13' AND current_database = currentDatabase()
SELECT sum(if(number % 2 == 0, 0, 1)) FROM numbers(100);
SELECT 1, 7, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (1 < 13 AND 7 > 0 ? 1 : 0)), throwIf(last != (1 < 13 AND 7 > 0 ? least(13 - 1, 1 + 7 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 1, 7);
INSERT INTO src VALUES /* (37, 2) */ 
select makeDateTime64(1984, 1, 1, 0, 70, 0, 0, 9, 'UTC');
DROP DATABASE IF EXISTS test_g9w6ns70 
CREATE TABLE test_542F2F52735B51796C356E552B3641333158597B4C247E79537A3F5F49425946604E4F4566572E5F(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_575xcuul 
SELECT 'Running test stateless/02980_s3_plain_DROP_TABLE_MergeTree.sh from pid=1715' 
alter table rmt modify column k String;
SELECT 1 and 10;
EXPLAIN PIPELINE SELECT b, c, e FROM t_fixed_prefix WHERE c = 1 ORDER BY b, c, e SETTINGS optimize_read_in_order = 1
INSERT INTO r10 SELECT 31
CREATE TABLE test_01193_18429.table_1_430 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select toTypeName(map(1, assumeNotNull(materialize(NULL))));
INSERT INTO test_01193_18429.table_1_502 VALUES 
SELECT multiIf((number % 2) = 0, toUInt32(1), (number % 3) = 0, toInt8(2), toInt32(3)) FROM system.numbers LIMIT 10;
SELECT bitSlice(NULL);
SELECT sum(e) from tab_02473 PREWHERE b > 10 AND b <= 70 WHERE a == 0;
SELECT arrayJoin(['hello', 'world']) LIKE '%he__o%';
CREATE DATABASE database_for_dict_01268;
CREATE TABLE test_3E7675415D556D3F6B2565666D4F2754765E704A5C593B5D2E65442E40724C71416F5F41776E255E(x UInt8) Engine=Memory;
CREATE TABLE ontime (FlightDate Date, Carrier String, FlightNum String) ENGINE = Memory;
insert into table function file('test_02167.Parquet', 'auto', 'x UInt64') select * from numbers(2)
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (67 < 42 AND 42 > 0 ? 67 : 0)), throwIf(last != (67 < 42 AND 42 > 0 ? least(42 - 1, 67 + 42 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(42) LIMIT 67, 42);
SELECT 'NOT IN empty set', count() FROM (SELECT number FROM system.numbers LIMIT 10) WHERE number NOT IN (SELECT toUInt64(1) WHERE 0);
SELECT covarPop(x_value, y_value) FROM (SELECT x_value, y_value FROM series LIMIT 1);
INSERT INTO test_01193_18429.table_9_421 VALUES 
SELECT dictGetDateOrDefault(NULL, NULL, NULL);
SELECT count(s) FROM tab WHERE hasToken(s, '4C4B4B4B4B4B5040');
CREATE TABLE test_3A626429564C5148664B4A342C205D503E55214D6B286A4D427B78283C7A25435D23502027206263(x UInt8) Engine=Memory;
SELECT JSONArrayLength('');
select arrayReduce('groupArrayResample(1, 7, 1)', [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);
CREATE DATABASE IF NOT EXISTS test_s3jtl8b3 
DROP DATABASE IF EXISTS test_ihhdfu89 
SELECT `ÃÂ¿ÃÂÃÂ¸ÃÂ²ÃÂµÃÂ` FROM non_ascii;
CREATE TABLE test_01193_18429.table_5_764 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_aazivhnc 
SELECT 'Running test stateless/02527_storage_merge_prewhere_different_type.sql from pid=1724' 
DROP DATABASE IF EXISTS test_0m31mhl7 
WITH toDateTime(1 + rand() % 0xFFFFFFFF) AS t SELECT count() FROM numbers(1000000) WHERE formatDateTime(t, '%F %R:%S') != toString(t);
INSERT INTO test_01193_18429.table_1_472 VALUES 
SELECT cutIPv6(toFixedString(unhex('00000000000000000000FFFFC1FC110A'), 16), 0, 13);
SELECT `system`.`one`.* FROM system.one;
select num_columns, num_rows, num_row_groups from file(tiny_row_groups_02735.parquet, ParquetMetadata);
CREATE DATABASE IF NOT EXISTS test_bo4y6afc 
CREATE DATABASE IF NOT EXISTS test_8orsg9bp 
CREATE TABLE test_757040382820495949776129206271632D21487B675A2B396A39366C712C3A5C685B586F7E3D4474(x UInt8) Engine=Memory;
select s.*, j.* from (select * from X) as s inner join (select * from Y) as j on s.id = j.id order by s.id, s.x_a, s.x_b, j.id, j.y_a, j.y_b;
SELECT 't1 ANY LEFT JOIN tn2 | bs = 5';
SELECT toDate('2017-01-01') + INTERVAL -11 MONTH AS x;
CREATE TABLE test_7C2B7C462B43332A7049373F4A714E5D543960324D55303A737C6177682F385537234A5E7A5F357C(x UInt8) Engine=Memory;
CREATE TABLE test_table2 (`key` UInt64, `value1` UInt8, `value2` UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/02122_4letter_words_stress_zookeeper_test_0kxibqoo/test_table2', '0') ORDER BY key SETTINGS index_granularity = 17541, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.23175950348377228, replace_long_file_name_to_hash = false, max_file_name_length = 50, merge_max_block_size = 8729, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 46, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 18782046, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 70172, primary_key_compress_block_size = 58564
SYSTEM SYNC REPLICA ttl_table4 PULL
CREATE TABLE test_60374E225C7A5B633D612B5C5F2B6A534F763525405865362D6731607825715A486B5A622D465F42(x UInt8) Engine=Memory;
SELECT multiIf((number % 2) = 0, toFloat32(1), (number % 3) = 0, toFloat64(2), toUInt32(3)) FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/01872_functions_to_subcolumns.sql from pid=1715' 
CREATE TABLE test_01193_18429.table_6_588 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO 02186_range_dictionary_source_table VALUES 
DROP DATABASE IF EXISTS test_b9dqs08v 
SELECT count(), `data_01247`.`number` FROM `test_tc1uzesn`.`data_01247` GROUP BY `number` ORDER BY `number` ASC LIMIT 1 BY `number`
CREATE TABLE test_01193_18429.table_8_877 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE DATABASE IF NOT EXISTS test_cvmygc16 
DROP DATABASE IF EXISTS test_0r5l4tmj 
SELECT 'uniqCombined(round(float))';
SELECT cityHash64(1, 2, materialize('')) AS x1, cityHash64((1, 2), materialize('')) AS x2, cityHash64(1, (2, materialize(''))) AS x3, cityHash64((1, 2, materialize(''))) AS x4;
insert into function file(data.bsonEachRow) select number, 42::Int128 as int, range(number) as arr from numbers(3) settings engine_file_truncate_on_insert=1
INSERT INTO test_01193_18429.table_5_345 VALUES 
INSERT INTO file SELECT * FROM numbers(10000)
DROP TABLE ttt01778;
INSERT INTO test_01193_18429.table_5_125 VALUES 
CREATE DATABASE IF NOT EXISTS test_hu1op1z6 
SELECT arrayPartialShuffle([toFixedString('123', 3), toFixedString('456', 3), toFixedString('789', 3), toFixedString('ABC', 3), NULL], 3, 0xbad_cafe);
SELECT JSON_QUERY('{"123":["1"]}', '$.123[0]');
CREATE TABLE four_rows_per_granule ( p Date, k UInt64, v1 UInt64, v2 Int64 ) ENGINE ReplacingMergeTree() PARTITION BY toYYYYMM(p) ORDER BY k SETTINGS index_granularity_bytes = 110, min_index_granularity_bytes=100, write_final_mark = 0, enable_vertical_merge_algorithm=1, vertical_merge_algorithm_min_rows_to_activate=0, vertical_merge_algorithm_min_columns_to_activate=0, min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0;
select atan(0) = 0;
SET max_memory_usage = 8000000;
DROP TABLE IF EXISTS ta;
SELECT 'Running test stateless/02496_remove_redundant_sorting_analyzer.sh from pid=1715' 
SELECT 'Running test stateless/01580_column_const_comparision.sql from pid=1722' 
SELECT sum(1 + uint64 AS i) j from test_table where i > 0 having j > 0;
CREATE TABLE signed_table (`k` UInt32, `v` String, `s` Int8) ENGINE = CollapsingMergeTree(s) ORDER BY k SETTINGS index_granularity = 55329, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 58, merge_max_block_size = 10615, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 28060121, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 68680, primary_key_compress_block_size = 31971
DROP POLICY p1_01296, p2_01296 ON table;
CREATE TABLE test_01193_18429.table_10_849 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT reinterpretAsUInt8(-1);
DROP DATABASE IF EXISTS test_0xogsehx 
SELECT roundBankers(result.2, 1025) FROM ( SELECT studentTTest(sample, variant) AS result FROM ( SELECT toFloat64(number) % 30 AS sample, 1048576 AS variant FROM system.numbers LIMIT 1 UNION ALL SELECT (toFloat64(number) % 7) + inf AS sample, 255 AS variant FROM system.numbers LIMIT 1023 ) );
CREATE TABLE dst_1 (`p` UInt64, `k` UInt64, `v` UInt64) ENGINE = ReplicatedMergeTree('/test/01154_move_partition_long_test_uepaqe2p/dst', '1') PARTITION BY p % 10 ORDER BY k SETTINGS index_granularity = 13557, min_bytes_for_wide_part = 756562708, ratio_of_defaults_for_sparse_serialization = 0.35682085156440735, replace_long_file_name_to_hash = false, max_file_name_length = 50, merge_max_block_size = 13985, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 376025, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 6001059207, index_granularity_bytes = 10151118, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 83048, primary_key_compress_block_size = 78650
SELECT toIPv6OrDefault('::ffff:127.0.0.1');
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 48454, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE TABLE test_287655604932227554662E61232D225224492042557C382E753A4158595F2D4B5D666F6C4664396A(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_7_201 VALUES 
INSERT INTO test_01193_18429.table_2_531 VALUES 
SELECT arrayReduceInRanges(NULL, NULL, NULL);
SELECT age('month', toDateTime('2015-08-18 00:00:00', 'UTC'), toDate32('2015-09-18', 'UTC'), 'UTC');
INSERT INTO a VALUES 
desc format(Values, '(123)');
DETACH TABLE alter_drop_version;
SET max_memory_usage = 2000000;
SELECT CASE WHEN (number % 2) = 0 THEN toInt8(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toInt32(3) END FROM system.numbers LIMIT 10;
INSERT INTO dst_11 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 37
SELECT quantilesTDigestArray(0.01, 0.1, 0.25, 0.5, 0.75, 0.9, 0.99)(arrayResize(arrayResize([inf], 500000, inf), 1000000, -inf));
SELECT obj.key_0.key_1.key_2, obj.key_0.key_1.key_8, obj.key_0.key_10, obj.key_0.key_0 FROM t_json_15 ORDER BY obj.id
SELECT x, txt FROM 02540_date WHERE txt == 'CAST(65535 as Date)';
CREATE TABLE test_3236593B3A7943435E347A736C7156755857627D422329612875323227486D7B567434402543605B(x UInt8) Engine=Memory;
SELECT 'SELECT DT <= N';
CREATE INDEX idx_tab4_5 ON tab4 (col0 DESC,col1);
CREATE TABLE test_516D2B7E434A4134683D53484E547A25485F71333449227A7941337556314F44227C2420443C243F(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_1;
SELECT throwIf((SELECT (count(), sum(n)) FROM merge(currentDatabase(), '') WHERE type=4) != (toUInt8(5/2 + 1), (select sum(number) from numbers(1, 5) where number % 2 or number=5))) FORMAT Null;
DROP DICTIONARY test_dictionary_10_shards_nullable;
CREATE TABLE test_667A5C222F7E5C2D3D5F5E5B5F3065294D4957262F5B7727237C3068747674332C2E793934617A22(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_2_805 VALUES 
CREATE TABLE data_02176 (`key` Int) ENGINE = MergeTree ORDER BY key SETTINGS index_granularity = 17811, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 8, merge_max_block_size = 21209, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 4778375328, index_granularity_bytes = 8353270, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 38064, primary_key_compress_block_size = 63846
INSERT INTO test_01193_18429.table_2_613 VALUES 
CREATE TABLE test_01193_18429.table_2_691 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
EXPLAIN PLAN actions = 1 SELECT * FROM t_order_by_monotonic AS test ORDER BY a DESC, -b
SELECT toDecimal32('1.1', 1), toDecimal32('1.1', 2), toDecimal32('1.1', 8);
SELECT 1.23::Decimal(3, 2) IN (1.2::Decimal(60, 30), 3.4::Decimal(60, 30));
SELECT sum(mul)/sqrt(sum(sqr_dif_1) * sum(sqr_dif_2)) AS z_r FROM( SELECT (SELECT avg(z_1) AS z_1_avg, avg(z_2) AS z_2_avg FROM ( SELECT perf_1.site, perf_1.z AS z_1 FROM perf AS perf_1 WHERE user_id = 000 ) jss1 ALL INNER JOIN ( SELECT perf_2.site, perf_2.z AS z_2 FROM perf AS perf_2 WHERE user_id = 999 ) jss2 USING site) as avg_values, z_1 - avg_values.1 AS dif_1, z_2 - avg_values.2 AS dif_2, dif_1 * dif_2 AS mul, dif_1*dif_1 AS sqr_dif_1, dif_2*dif_2 AS sqr_dif_2 FROM ( SELECT perf_1.site, perf_1.z AS z_1 FROM perf AS perf_1 WHERE user_id = 000 ) js1 ALL INNER JOIN ( SELECT perf_2.site, perf_2.z AS z_2 FROM perf AS perf_2 WHERE user_id = 999 ) js2 USING site);
INSERT INTO mutation_table select number, toString(number) from numbers(100000) where number % 10 != 0
CREATE TABLE test_01193_18429.table_2_763 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_p3e8u2nr 
CREATE TABLE test_774D58613C68623E647B6E664D7261272E7E3B5A3E622B705C3C4D4C56227D54207920347C5C224A(x UInt8) Engine=Memory;
SELECT arrayJoin(CAST(['hello', 'world'] AS Array(FixedString(5)))) LIKE 'hell';
SELECT count() FROM (SELECT * FROM test_distributed) SETTINGS max_rows_to_read_leaf = 60000;
insert into t_l5ydey values 
DROP DATABASE IF EXISTS test_71jgb6yl 
CREATE DATABASE IF NOT EXISTS test_4f5t6hhb 
insert into da_memory_efficient_shard select number, number from numbers(100000);
EXPLAIN QUERY TREE (SELECT (sum(uint64) - 2 * count(uint64)) + (sum(uint64) - 3 * count(uint64)) From test_table);
SELECT COUNT() FROM parallel_q1
select toDateTimeOrDefault('1xxx', 'UTC', '2023-05-30 14:38:20'::DateTime('UTC'));
with '2018-01-12 22:33:44.55' as s, toDateTime64(s, 6) as datetime64 SELECT formatDateTimeInJodaSyntax(datetime64, 'SSSS');
SELECT max(number) FROM numbers(10)
CREATE TABLE test_3C4E635236232175676658786F2F664736476F2B2E5435625C79287E5F4D2D40734F383D4F452A50(x UInt8) Engine=Memory;
drop table refreshes;
SELECT *, * APPLY toTypeName FROM ( SELECT a FROM (SELECT 1 :: Int32 as a) t1 LEFT JOIN (SELECT 2 :: UInt32 as key) t2 ON t1.a = t2.key ) ORDER BY 1;
select 0 = multiSearchFirstIndexCaseInsensitive(materialize('ZHcEinZEFtfmHBLuCHntUhbIgY'), ['GKElMPEtmkLl', 'mkrzzjSRfXThuCQHkbZxRbhcymzTxcn', 'PREwQjxBJkpkiyuYEvtMZNFELgbINWsgf', 'lFEGlPtaDJSyoXzwREiRfpzNpsaBYo', 'tmVTuLPhqhgnFNhHvqpmc', 'NtijVhVfAwpRsvkUTkhwxcHJ', 'O', 'FSweqlUXdDcrlT', 'uljEFtKVjIzAEUBUeKZXzCWmG', 'dBIsjfm', 'CNaZCAQdKGiRUDOGMtUvFigloLEUr', 'yWjizKZ', 'QqPVdyIFXcweHz', 'uPmgGWGjhzt']) from system.numbers limit 10;
CREATE DATABASE IF NOT EXISTS test_yugpitg6 
DROP DATABASE IF EXISTS test_l7kbmmo8 
CREATE TABLE test_01193_18429.table_1_201 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat64(1), toFloat64(2)] WHEN (number % 3) = 0 THEN [toUInt8(2), toUInt8(3)] ELSE [toUInt8(3), toUInt8(3)] END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_7_34 VALUES 
DESC file('/var/lib/clickhouse/user_files/02661_read_from_archive_test_fyi66vcq_targz_archive{1..2}.tar.gz :: 02661_read_from_archive_test_fyi66vcq_targz_data1.csv')
CREATE TABLE test_01193_18429.table_2_634 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_xtvcg8ld 
SELECT `UserID` FROM `test_c5zukzwt`.`users` WHERE `UserID` IN ((SELECT arrayJoin([1468013291393583084, 1321770221388956068])) AS `_subquery3934`)
SELECT subtractDays('2023-10-22', 1), subtractDays('2023-10-22 12:34:56.123', 1);
INSERT INTO t3 VALUES 
CREATE TABLE test_01193_18429.table_9_433 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SYSTEM SYNC REPLICA summing_r2;
INSERT INTO test_02908_r1_278 SELECT rand64() FROM numbers(5);
SELECT multiIf((number % 2) = 0, [toUInt16(1), toUInt16(2)], (number % 3) = 0, [toFloat64(2), toFloat64(3)], [toUInt32(3), toUInt32(3)]) FROM system.numbers LIMIT 10;
SELECT quantileTDigest(x) FROM (SELECT -inf AS x UNION ALL SELECT inf UNION ALL SELECT -inf);
select formatRow('CSVWithNamesAndTypes', number, toDate(number)) from numbers(5);
SELECT cast('1234', 'UInt32' AS rhs), rhs;
INSERT INTO r4 SELECT 34
INSERT INTO test_01193_18429.table_6_309 VALUES 
CREATE TABLE array_3dim_protobuf_00825 (`a_b_c` Array(Array(Array(Int32)))) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 56491, min_bytes_for_wide_part = 1058334392, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 811, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 8348578103, index_granularity_bytes = 20546672, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 53697, primary_key_compress_block_size = 86006
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 7281, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE TABLE test_5C725D782F6E503A4B7C2833246D233B642B3270232D4746604A2F6B21494A7177257B706730503E(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_pwybj99e 
SELECT count() FROM t_cnf_fuzz WHERE (c1) OR ((NOT c3) AND c4 AND c6) SETTINGS convert_query_to_cnf = 1
INSERT INTO test_01193_18429.table_8_31 VALUES 
SELECT tumble(toDateTime('2020-01-09 12:00:01', 'US/Samoa'), INTERVAL '1' DAY, 'US/Samoa');
SELECT * FROM system.numbers LIMIT 10000 FORMAT ArrowStream
INSERT INTO test_kmr4g4wb.dist (n) VALUES
DETACH TABLE alter_index_test;
CREATE TABLE test1_00395(col1 Array(Nullable(String)), col2 String) Engine=TinyLog;
SELECT addNanoseconds('2023-10-22', 1), addNanoseconds('2023-10-22 12:34:56.123', 1);
SELECT CASE WHEN 1 THEN [col2, col3] WHEN (col1 % 3) = 0 THEN ['foo', 'bar'] ELSE [col6, 'bar'] END FROM multi_if_check;
CREATE TABLE p (`polygon_id` Int64, `polygon_name` String, `shape` Array(Array(Tuple(Float64, Float64))), `state` String) ENGINE = Memory();
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c4) AND (NOT c5)) OR (c2 AND c0) OR ((NOT c8)) OR (c9 AND (NOT c2) AND (NOT c5) AND (NOT c3) AND (NOT c0)) OR ((NOT c3) AND c3) OR (c9) OR (c1 AND c7 AND (NOT c6)) OR (c6 AND (NOT c0)) OR (c3 AND (NOT c6) AND c4 AND c7 AND (NOT c4)) OR (c6 AND c0 AND (NOT c8)) SETTINGS convert_query_to_cnf = 0
EXPLAIN SYNTAX SELECT max(n * 2), max(2 * n), max(n / 2), max(1 / n) FROM (SELECT number n FROM numbers(10));
SELECT age('day', toDate('2017-12-31'), toDate('2018-01-01'));
CREATE TABLE test_5B54555270717D772071495E5E79547928245E7A5B3A4D637C304C25742E644F27515B20397E7569(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_8_349 VALUES 
INSERT INTO r2 SELECT 89
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (76 < 12 AND 35 > 0 ? 76 : 0)), throwIf(last != (76 < 12 AND 35 > 0 ? least(12 - 1, 76 + 35 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(12) LIMIT 76, 35);
DROP TABLE IF EXISTS merge_item_10
CREATE TABLE test_01193_18429.table_8_603 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE table_for_synchronous_mutations1 (`k` UInt32, `v1` UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01049/table_for_synchronous_mutations', '1') ORDER BY k SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 2849, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 44653, primary_key_compress_block_size = 71435
CREATE DATABASE IF NOT EXISTS test_stcggjy8 
insert into tab select number, number from numbers(20);
CREATE TABLE test_6A76224B43604B64413E42604D2840525C2271266A5D7D5767287D64667C2957674B45325A2B2D35(x UInt8) Engine=Memory;
desc generateRandom(10000000);
DROP TABLE IF EXISTS data_01917_2;
select minMap([1], [toInt32(number) - 50]) from numbers(1, 100);
CREATE TABLE test_01193_18429.table_5_360 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT ifNull(toNullable(toDecimal32(2, 0)), NULL), ifNull(toNullable(toDecimal64(2, 0)), NULL), ifNull(toNullable(toDecimal128(2, 0)), NULL);
INSERT INTO r6 SELECT 48 % 10 = 6 ? 48 - 1 : 48
INSERT INTO test_01193_18429.table_5_788 VALUES 
SELECT count(), sum(1), uniq(123) FROM (SELECT * FROM system.numbers LIMIT 10);
SELECT 'Running test stateless/01372_wrong_order_by_removal.sql from pid=1724' 
DROP DATABASE IF EXISTS test_su4bb106 
SELECT visitParamExtractFloat(NULL, NULL);
ALTER TABLE alter_test DROP COLUMN AddedNested1.B;
SELECT multiIf((number % 2) = 0, [toUInt8(1), toUInt8(2)], (number % 3) = 0, [toUInt16(2), toUInt16(3)], [toUInt32(3), toUInt32(3)]) FROM system.numbers LIMIT 10;
SET allow_experimental_window_view = 1
CREATE TABLE test_01193_18429.table_2_65 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_3_13 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select * from file(02475_data.bsonEachRow, auto, 'uint64 UInt32, int64 UInt32')
select isNaN(-inf) = 0;
SELECT data, toTypeName(data) FROM t_json_bools;
SELECT * FROM remote('127.0.0.{1,2}', generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8)))))))))))))))))))))))))))))))))', 1, 1, 1)) LIMIT 1 FORMAT Null
DROP TABLE t_sparse;
select s.a + 1 as b, s.a + 2 as a from (select 10 as a) s;
CREATE TABLE test_01193_18429.table_3_709 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT CAST('hello' AS FixedString(5)) LIKE 'world';
CREATE TABLE test_01193_18429.table_1_556 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP TABLE merge_00160;
SELECT * FROM t3 where number > 17 and number < 25;
INSERT INTO test_01193_18429.table_8_494 VALUES 
select format('{}{}{}', toFixedString('a', 1), materialize('b'), materialize(toFixedString('c', 1))) == 'abc';
CREATE TABLE alter_table_9 (`a` UInt8, `b` Int16, `c` Float32, `d` String, `e` Array(UInt8), `f` Nullable(UUID), `g` Tuple(UInt8, UInt16)) ENGINE = ReplicatedMergeTree('/clickhouse/tables/00993_system_parts_race_condition_drop_zookeeper_test_zoczfe66/alter_table', 'r_9') PARTITION BY b % 10 ORDER BY a SETTINGS old_parts_lifetime = 1, cleanup_delay_period = 0, cleanup_delay_period_random_add = 0, cleanup_thread_preferred_points_per_iteration = 0, replicated_max_mutations_in_one_entry = 589, index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 17222, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 5082719006, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75985, primary_key_compress_block_size = 73298
CREATE TABLE test_01193_18429.table_7_145 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_5_519 VALUES 
SELECT uniq([]);
SELECT 'Running test stateless/02149_schema_inference_formats_with_schema_1.sh from pid=1714' 
INSERT INTO test_01193_18429.table_9_583 VALUES 
CREATE TABLE size_hint (`s` Array(String)) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 1000, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 740244751, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 96, merge_max_block_size = 1436, prefer_fetch_merged_part_size_threshold = 10172052270, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 5196668292, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 22188, primary_key_compress_block_size = 84480
insert into t_avro_3 select number, 'str' from numbers(1000) settings engine_file_truncate_on_insert=1
CREATE TABLE test_773A4B793379364B6C2F72717836236940333773642B7D5B3734325837574437693E4E5C2262627E(x UInt8) Engine=Memory;
select 1 = isValidUTF8('\xF4\x8F\x88\xAA') from system.numbers limit 10;
CREATE TABLE test (`c_id` String, `p_id` String, `d` String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test/test_table', '1') ORDER BY (c_id, p_id) SETTINGS index_granularity = 22547, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 19172, prefer_fetch_merged_part_size_threshold = 1800348226, vertical_merge_algorithm_min_rows_to_activate = 962802, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 8532868625, index_granularity_bytes = 24503129, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 75360, primary_key_compress_block_size = 69838
SELECT COUNT(), part_type FROM system.parts WHERE database = currentDatabase() AND table = 'merge_table_standard_delete' AND active GROUP BY part_type ORDER BY part_type;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (93 < 71 AND 37 > 0 ? 93 : 0)), throwIf(last != (93 < 71 AND 37 > 0 ? least(71 - 1, 93 + 37 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(71) LIMIT 93, 37);
INSERT INTO mt VALUES /* (-22, 1) */ 
CREATE DATABASE IF NOT EXISTS test_76ey8pog 
SELECT toDateTimeOrZero(arrayJoin(['', '2018', '2018-01-02 01:02:03', '2018-01-02T01:02:03', '2018-01-02 01:02:03 abc']), 'UTC');
CREATE TABLE test_01193_18429.table_4_619 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT toMonday(toDateTime(1419800400), 'Pacific/Pitcairn');
CREATE DATABASE IF NOT EXISTS test_hq8du52g 
CREATE TABLE test_01193_18429.table_1_584 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select '-- no order';
SELECT count() FROM test_table AS t1 INNER JOIN (SELECT number AS id FROM numbers(10)) AS t2 ON t1.id = t2.id WHERE t1.id = 1 AND t1.value_1 = '1' AND t1.value_2 = '1' AND t1.value_3 = '1' SETTINGS force_primary_key = 1, force_data_skipping_indices = 'value_1_idx, value_2_idx, value_3_idx';
DROP TABLE replacing_00616;
CREATE TABLE test_77516A4C7A50314A4332357175623C6B573559757139492E375E79422D3C5A3B6B253321323A5F41(x UInt8) Engine=Memory;
INSERT INTO r6 SELECT 5
DROP TABLE IF EXISTS collapsing_table;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), N - toUInt64(1) as r FORMAT CSV;
SELECT throwIf((SELECT sum(nm) FROM mv) != 100) FORMAT Null;
SELECT in(NULL, NULL);
CREATE TABLE test_01193_18429.table_6_4 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), D >= N as r FORMAT CSV;
SELECT 'Running test stateless/00688_low_cardinality_dictionary_deserialization.sql from pid=1713' 
alter table test update value=21 where id=2
explain syntax select negate(-9223372036854775808), -(-9223372036854775808), - -9223372036854775808;
SELECT toDateTime('2000-01-01 00:00:00', 'Asia/Istanbul') AS x, materialize(toDate('2000-01-02')) AS y, x > y ? x : y AS z;
SELECT multiIf((number % 2) = 0, toInt8(1), (number % 3) = 0, toUInt32(2), toInt64(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_5_827 VALUES 
INSERT INTO r7 SELECT 16 % 10 = 7 ? 16 - 1 : 16
INSERT INTO t_async_insert_02193_2 VALUES 
SELECT COUNT(*) FROM mt_without_pk WHERE x > toDateTime('2018-10-01 23:57:57');
SELECT groupArray(x) from (SELECT number as x FROM numbers(3) ORDER BY exp(x), x) SETTINGS allow_experimental_analyzer=1;
CREATE TABLE test_01193_18429.table_7_347 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TEMPORARY TABLE t7_02271 (x INT() DEFAULT 1);
SELECT isDecimalOverflow(NULL, NULL);
DROP DATABASE IF EXISTS 01280_db;
CREATE DATABASE IF NOT EXISTS test_sp8ydz82 
DROP TABLE IF EXISTS rocksdb_with_filter;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 42058, 500 settings ignore_materialized_views_with_dropped_target_table=1
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 21862, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE TABLE test_4D5F2653697B4F3438573D243754596D6B28423B28734E235C2E7724574F47384C252D59545D4624(x UInt8) Engine=Memory;
select number from numbers_mt(10) having number >= 9;
DROP TABLE compact_alter_0;
SELECT toDecimal32OrNull(NULL, NULL);
SELECT substringUTF8(materialize('hello, ÃÂ¿ÃÂÃÂ¸ÃÂ²ÃÂµÃÂ'), 1, 10) FROM numbers(3);
INSERT INTO test_01193_18429.table_9_31 VALUES 
CREATE DATABASE IF NOT EXISTS test_kzsfnhm2 
CREATE TABLE test_27547C2760462C6F33344F52283F7B2360735D2A67503F265E604D5C486752463174396046576679(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_10_122 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT partition, name FROM system.parts WHERE database = currentDatabase() AND table = 'partitioned_by_string' AND active ORDER BY name;
WITH ( 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000 ) AS tuple SELECT tuple.1, tuple.300, tuple.500, tuple.700, tuple.1000;
SELECT arrayMap(x -> 123, arrayMap(x -> toString(x), range(number))) FROM system.numbers LIMIT 10;
SELECT s, replaceOne(s, '_', 'oo') AS a, replaceRegexpOne(s, '_', 'oo') AS b, a = b FROM (SELECT arrayJoin(['._', '_.']) AS s);
SYSTEM SYNC REPLICA r9;
SELECT substring(materialize('clickhouse'), 2, -2);
create table data_02051 (key Int, value String) engine=MergeTree() order by key settings index_granularity_bytes=10485760, /* to suppress "Table can't create parts with adaptive granularity, but settings ..." warning */ min_bytes_for_wide_part=0 as select number, repeat(toString(number), 5) from numbers(1e6);
INSERT INTO mt VALUES /* (-11, 1) */ 
CREATE DATABASE IF NOT EXISTS test_1zafox0g 
CREATE DICTIONARY polygons_test_dictionary ( key Array(Array(Array(Tuple(Float64, Float64)))), name String ) PRIMARY KEY key SOURCE(CLICKHOUSE(TABLE 'polygons_test_table')) LAYOUT(POLYGON(STORE_POLYGON_KEY_COLUMN 1)) LIFETIME(0);
select toTypeName(res), if(1, range(number + 1), ('str_' || toString(number))::Nullable(String)) as res from numbers(4);
DROP TABLE IF EXISTS customer;
CREATE TABLE test_02908_r3_55 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_55', 'r3') ORDER BY tuple()
INSERT INTO test_02908_r1_66 SELECT rand64() FROM numbers(5);
INSERT INTO test_01193_18429.table_6_477 VALUES 
select toValidUTF8('ÃÂºÃÂ°ÃÂºÃÂ¾ÃÂ¹-ÃÂÃÂ¾ ÃÂÃÂµÃÂºÃÂÃÂ') from system.numbers limit 10;
select [0, 0, 2, 1, 0, 0, 12, 0, 17, 0, 0, 0, 2, 0] = multiSearchAllPositionsCaseInsensitiveUTF8(materialize('ÃÂÃÂ£ÃÂÃÂÃÂ¥ÃÂ¤ÃÂÃÂÃÂ¥ÃÂÃÂ²ÃÂ±ÃÂÃÂ¦ÃÂ¸ÃÂ½ÃÂ ÃÂ²ÃÂÃÂÃÂ¤ÃÂÃÂ ÃÂºÃÂ¼ÃÂ¸ÃÂµÃÂÃÂ¿'), ['ÃÂ¢ÃÂÃÂ©ÃÂÃÂ·ÃÂ ÃÂÃÂ¼ÃÂÃÂÃÂÃÂ§ÃÂÃÂÃÂ¤ÃÂÃÂ°ÃÂÃÂ³ÃÂÃÂ¢ÃÂ¸ÃÂÃÂ¦ÃÂÃÂÃÂÃÂ¿ÃÂ¡ÃÂ©ÃÂ¡ÃÂÃÂ©ÃÂÃÂÃÂÃÂÃÂµÃÂ', 'ÃÂ¹ÃÂ»ÃÂÃÂÃÂÃÂÃÂÃÂÃÂ°ÃÂ¨ÃÂÃÂ¨ÃÂ©ÃÂÃÂ¥ÃÂ¦ÃÂÃÂÃÂÃÂ', 'ÃÂ£ÃÂ§ÃÂ»', '', 'ÃÂÃÂÃÂÃÂÃÂÃÂ¼ÃÂÃÂ¦ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ¸ÃÂÃÂºÃÂ°', 'ÃÂ ÃÂ¢ÃÂ¢ÃÂÃÂ¢ÃÂÃÂÃÂÃÂ»ÃÂ©ÃÂÃÂ³ÃÂÃÂÃÂÃÂÃÂ»ÃÂÃÂÃÂ¨ÃÂÃÂ·ÃÂ¦ÃÂÃÂ²ÃÂ½ÃÂ', 'ÃÂÃÂÃÂÃÂÃÂÃÂ ÃÂ²ÃÂ½ÃÂ ÃÂ', 'ÃÂÃÂÃÂÃÂÃÂ´ÃÂÃÂÃÂÃÂÃÂ°ÃÂ¸ÃÂÃÂ¢ÃÂÃÂ¼ÃÂÃÂ·ÃÂ§ÃÂÃÂÃÂÃÂ¨ÃÂÃÂÃÂµÃÂ©ÃÂÃÂÃÂ»ÃÂ¡ÃÂ¨ÃÂÃÂ¾ÃÂÃÂÃÂ©ÃÂÃÂÃÂ¿', 'ÃÂÃÂ²ÃÂÃÂ ÃÂÃÂÃÂÃÂºÃÂÃÂ¸', 'ÃÂ¦ÃÂ·ÃÂÃÂÃÂ¡ÃÂ¸ÃÂÃÂÃÂ£ÃÂ¶ÃÂÃÂ£ÃÂ©ÃÂÃÂÃÂÃÂ£ÃÂÃÂ²ÃÂ»ÃÂ±ÃÂ´ÃÂÃÂÃÂÃÂÃÂÃÂ¢ÃÂÃÂ²ÃÂÃÂ·', 'ÃÂ·ÃÂ»ÃÂ¡ÃÂÃÂµ', 'ÃÂÃÂ´ÃÂÃÂÃÂ²ÃÂÃÂÃÂ ÃÂÃÂÃÂ¶ÃÂ¥ÃÂ', 'ÃÂÃÂÃÂÃÂ¥ÃÂÃÂ§ÃÂ»', 'ÃÂÃÂÃÂÃÂÃÂ¨ÃÂ±ÃÂ£ÃÂ·ÃÂÃÂ¢ÃÂ·ÃÂÃÂÃÂ¿ÃÂ¸ÃÂ¨ÃÂ¶ÃÂ½ÃÂµÃÂ·ÃÂ²ÃÂ¾ÃÂµÃÂ']) from system.numbers limit 10;
SELECT `demo_loan_01568`.`id`, `demo_loan_01568`.`date_stat`, `demo_loan_01568`.`customer_no`, `demo_loan_01568`.`loan_principal` FROM `demo_loan_01568` ORDER BY `id` ASC
CREATE TABLE test_01193_18429.table_3_926 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_3_345 VALUES 
SELECT date_trunc('week', toDateTime64('2020-01-01 04:11:22.123', 3, 'Europe/London'), 'America/Vancouver');
DROP DATABASE IF EXISTS test_7s2bo1us 
SELECT (0.1, 0.2)::Tuple(Decimal(75, 70), Decimal(75, 70));
select sum(tl.v) from test_distributed td asof join test_mvyzkn4n.test_local tl on td.k = tl.k and td.v < tl.v group by td.k;
DROP DATABASE IF EXISTS test_qa87w7ym 
SELECT CASE WHEN (col1 % 2) = 0 THEN toFixedString('foo', 16) WHEN (col1 % 3) = 0 THEN col3 ELSE toFixedString(col4, 16) END FROM multi_if_check;
SELECT 'Running test stateless/00732_decimal_summing_merge_tree.sql from pid=1714' 
create table enums_copy engine = TinyLog as select * from remote('127.0.0.2', currentDatabase(), enums);
INSERT INTO r9 SELECT 97
RENAME DATABASE test_01155_ordinary TO test_01155_atomic;
select if(number % 5 == 0, toInt32OrZero(toString(number)), Null) from numbers(20);
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 21927, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT 'Running test stateless/01017_in_unconvertible_complex_type.sql from pid=1718' 
SELECT blockSerializedSize([NULL]);
INSERT INTO test_01193_18429.table_1_832 VALUES 
INSERT INTO test_01193_18429.table_2_306 VALUES 
SELECT hasToken('n,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay', 'n'), ' expecting ', 1;
SELECT multiIf((number % 2) = 0, [toInt64(1), toInt64(2)], (number % 3) = 0, [toUInt8(2), toUInt8(3)], [toInt64(3), toInt64(3)]) FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_hah9ocll 
SELECT arrayJoin([1, 2, 3, 3, 2, 1]) AS id, dictGetInt32('01053_db.ssd_dict', 'b', toUInt64(id));
OPTIMIZE TABLE index_compact FINAL;
SELECT a, b, c, d FROM t_fixed_prefix WHERE bitNot(a) = 1 AND bitNot(b) = 1 ORDER BY a, b, c, d SETTINGS optimize_read_in_order = 1
INSERT INTO test_01193_18429.table_8_546 VALUES 
SELECT CASE WHEN (col1 % 2) = 0 THEN ['foo', 'bar'] WHEN (col1 % 3) = 0 THEN [col4, 'bar'] ELSE ['foo', 'bar'] END FROM multi_if_check;
select [1, 1, 0, 0, 1, 0, 0, 3, 3, 3, 1, 0, 8, 0, 8, 1, 0, 1] = multiSearchAllPositionsCaseInsensitive(materialize('OTMMDcziXMLglehgkklbcGeAZkkdh'), ['', 'OTmmDCZiX', 'SfwUmhcGTvdYgxlzsBJpikOxVrg', 'ngqLQNIkqwguAHyqA', '', 'VVZPhzGizPnKJAkRPbosoNGJTeO', 'YHpLYTVkHnhTxMODfABor', 'mMdcZi', 'MmdCZI', 'MMdCZixmlg', '', 'hgaQHHHkIQRpPjv', 'ixMLgLeHgkkL', 'uKozJxZBorYWjrx', 'i', '', 'WSOYdEKatHkWiCtlwsCbKRnXuKcLggbkBxoq', '']) from system.numbers limit 10;
select firstSignificantSubdomainCustom('xx.blogspot.co.at', 'public_suffix_list');
ALTER TABLE alter_compression_codec1 MODIFY COLUMN alter_column CODEC(NONE);
ALTER PROFILE s2_01294, s3_01294, s4_01294 TO r1_01294;
drop table if exists rep_data_01810;
CREATE TABLE foo_distributed AS foo_local ENGINE = Distributed('test_cluster_two_shards_localhost', currentDatabase(), foo_local);
DESCRIBE TABLE data_01646;
insert into t11 select number, number from numbers_mt(100);
CREATE TABLE test_01193_18429.table_9_46 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_6_717 VALUES 
INSERT INTO tt1 VALUES 
CREATE TABLE test_01193_18429.table_6_957 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT * FROM bf_ngrambf_map_keys_test WHERE map_fixed['K2'] = 'V2' SETTINGS force_data_skipping_indices='map_fixed_keys_ngrambf';
SYSTEM START MERGES collapsing_00155
DROP DATABASE IF EXISTS test_f84m76im 
CREATE DATABASE IF NOT EXISTS test_pldepsbz 
create table coords (x Float32, y Float32) engine = Memory;
SELECT cityHash64(CAST(NULL AS Nullable(DateTime)));
SELECT * FROM merge(currentDatabase(), '02763_merge_log') WHERE x>1 ORDER BY x SETTINGS optimize_move_to_prewhere= 0;
CREATE TABLE test_62693A5E7556687D4C4B69295363542E634F6A30315C583A466B3B457734744C63422F6C265E706B(x UInt8) Engine=Memory;
SELECT constant_null ? then_non_constant_nullable : else_non_constant AS res FROM nullable_00431;
SELECT isNullable([]);
CREATE TABLE test_39244A67242E6F785A3B555A203F6E2D676F3865236A47645E7E634C4D4B347D32562C4A725D275D(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_7_442 VALUES 
DROP TABLE IF EXISTS t_01906;
SELECT CASE WHEN (number % 2) = 0 THEN toInt16(1) WHEN (number % 3) = 0 THEN toUInt8(2) ELSE toFloat64(3) END FROM system.numbers LIMIT 10;
insert into test settings input_format_null_as_default=1, input_format_defaults_for_omitted_fields=1 format Arrow
SELECT 'Running test stateless/02780_final_streams_data_skipping_index.sql from pid=1720' 
INSERT INTO r9 SELECT 58
SELECT 'Running test stateless/00754_distributed_optimize_skip_select_on_unused_shards_with_prewhere.sh from pid=1720' 
CREATE TABLE test_01193_18429.table_5_726 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO t1 SELECT * FROM numbers(10);
SELECT count() FROM t_cnf_fuzz WHERE (c2 AND (NOT c9)) OR ((NOT c6) AND c6 AND (NOT c1) AND (NOT c3)) OR (c8) SETTINGS convert_query_to_cnf = 0
SELECT dateDiff('day', toDate('2017-12-31'), toDate('2018-01-01'));
CREATE TABLE table_map (`id` UInt32, `col` Map(String, UInt64)) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 60048, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 6304, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 25611557, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 57443, primary_key_compress_block_size = 29855
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (73 < 33 AND 36 > 0 ? 73 : 0)), throwIf(last != (73 < 33 AND 36 > 0 ? least(33 - 1, 73 + 36 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(33) LIMIT 73, 36);
CREATE TABLE test_2242613E4E7A2758686D246A375523543B2C65237A6A524042497D63356C49593E5F552A3A6D3340(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_4_109 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP USER IF EXISTS u_02377
SELECT 'Running test stateless/02867_nullable_primary_key_final.sql from pid=1720' 
CREATE TABLE test_6D373E407568532B707736206B632A627B67797470535C754B3F6F24654D403B7C6D58795674466E(x UInt8) Engine=Memory;
WITH INTERVAL 1 SECOND + INTERVAL 1 SECOND + INTERVAL 1 SECOND as expr SELECT expr, toTypeName(expr);
CREATE TABLE test_3936234D59275D2B2C53397B442A4A737046265A516E7137354B273C50543F33544E7C3D5D606330(x UInt8) Engine=Memory;
EXPLAIN SYNTAX WITH (1, 2)::Tuple(a UInt32, b UInt32) AS t SELECT t.1, tupleElement(t, 'b');
SHOW TABLES
alter table tab delete where x > 1000 and y in (select sum(number + 1) from numbers_mt(1e7) group by number % 2 with totals);
CREATE DATABASE IF NOT EXISTS test_pyh7sk9g 
SELECT count() FROM binary_op_mono4 WHERE 1000 + i = 500;
alter table many_mutations delete where y = 198 * 2 settings mutations_sync = 0;
SELECT 'Running test stateless/01783_http_chunk_size.sh from pid=1724' 
SELECT 'Running test stateless/02116_interactive_hello.expect from pid=1715' 
CREATE TABLE t_00366 (x UInt64) ENGINE = TinyLog;
SELECT 'JOIN FULL';
DROP TABLE IF EXISTS any_left_join;
select arrayMap(x -> finalizeAggregation(x), state) from ( select sumStateResample(0,20,1)(number, number%20) as state from numbers(200) group by number % 3 order by number % 3 );
INSERT INTO test_01193_18429.table_1_580 VALUES 
SELECT * FROM table_gcd_codec_int256;
CREATE TABLE table_00305a(x Int8) ENGINE=Log 
SELECT 'Running test stateless/02410_to_decimal_or_default.sql from pid=1726' 
SELECT * FROM bf_ngrambf_map_values_test WHERE map['K3'] != '';
select 5 = positionUTF8(materialize('ÃÂ°ÃÂ±ÃÂ²ÃÂ°ÃÂ±ÃÂ²'), materialize('ÃÂ±'), 4) from system.numbers limit 10;
SELECT s FROM t1 WHERE e AND (e = 1);
CREATE TABLE test_7D272A4675334258683D355E475179733468624A426E307D4D6C603043297D527825476749204A2E(x UInt8) Engine=Memory;
SELECT 'Array';
SELECT COUNT() FROM tmp_table
CREATE TABLE test_02908_r3_34 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_34', 'r3') ORDER BY tuple()
CREATE TABLE test_01193_18429.table_1_800 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT * FROM dist_test_01040 ORDER BY key;
SELECT -1 IN (SELECT 1);
CREATE TABLE test_5D4C2246442D24214A546D76405A30393453302975326131455B6377724767542A2F2E7836296557(x UInt8) Engine=Memory;
ALTER TABLE concurrent_alter_add_drop_3 ADD COLUMN value1 UInt32 DEFAULT 42 SETTINGS replication_alter_partitions_sync=0
CREATE DATABASE IF NOT EXISTS test_f39nx6iw 
SELECT _database, _table, n FROM 01902_db.t_merge ORDER BY _database, _table, n;
INSERT INTO test_01193_18429.table_3_306 VALUES 
INSERT INTO r8 SELECT 60
SELECT '15 MINUTE';
CREATE TABLE collate_test3 (x UInt32, s Array(Array(String))) ENGINE=Memory();
select * from file(02475_data.bsonEachRow, auto, 'int128 Int128, uint128 UInt128, int256 Int256, uint256 UInt256')
INSERT INTO test_01193_18429.table_8_572 VALUES 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (34 < 85 AND 98 > 0 ? 34 : 0)), throwIf(last != (34 < 85 AND 98 > 0 ? least(85 - 1, 34 + 98 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(85) LIMIT 34, 98);
INSERT INTO test_01193_18429.table_7_159 VALUES 
DROP DATABASE IF EXISTS test_dt4ejo75 
INSERT INTO src_11 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 17
SELECT 'Running test stateless/01072_select_constant_limit.sql from pid=1715' 
SELECT hasColumnInTable('system', 'one', '');
CREATE TABLE test_01193_18429.table_8_636 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
BACKUP TABLE data TO S3(s3_conn, 'backups/test_s5wpyi15/data_no_native_copy') SETTINGS allow_s3_native_copy=false
INSERT INTO test_01193_18429.table_5_504 VALUES 
EXPLAIN PIPELINE SELECT toStartOfMonth(date) as d, i FROM t_read_in_order ORDER BY d, i LIMIT 5;
SELECT multiIf((number % 2) = 0, toInt8(1), (number % 3) = 0, toInt8(2), toUInt8(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_6D524134404431667138776238424C233A21775C3539605A7437423171554F2B7A667C4761576C6E(x UInt8) Engine=Memory;
desc format(TSV, '2020-01-01 00:00:00\nSome string');
select X.id, Y.id from X right join Y on X.id = (Y.id - 1) order by X.id, Y.id;
select str, str in (select str from lc_00688) from lc_00688;
/* toRelativeMinuteNum */ SELECT 'toRelativeMinuteNum';
SELECT avgWeighted(if(number < 10000, NULL, number), if(number < 10000, NULL, number)) t, toTypeName(t) FROM numbers(100);
CREATE DATABASE IF NOT EXISTS test_wv410ck4 
select count(b) from replacing_m3 FINAL;
DROP TABLE test_01915_db.test_source_table_1;
SELECT sum(1 + n * 2), sum(1 + 2 * n), sum(1 + n / 2), sum(1 + 1 / n) FROM (SELECT number n FROM numbers(10));
INSERT INTO test_02908_r1_299 SELECT rand64() FROM numbers(5);
INSERT INTO test_01193_18429.table_10_259 VALUES 
CREATE TABLE test_01193_18429.table_6_185 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TEMPORARY TABLE t1 AS SELECT quantileDistinctState(0.10)(number) FROM numbers(100);
SET select_sequential_consistency=0;
SET distributed_ddl_entry_format_version = 2;
SELECT parseDateTime64BestEffortOrZero('bar', 3, 'UTC');
CREATE TABLE test_01193_18429.table_7_983 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_3k0abenr 
select t.*, s.* from t left join s on (t.a=s.a and t.b=s.b) order by t.a;
INSERT INTO src_2 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 89
CREATE TABLE test_576B4E2E7D5C3A455F732A6D6C7E286A3A7D3B566A3C31683C5A5D67325E383E752B4A53694E7341(x UInt8) Engine=Memory;
CREATE DICTIONARY 02183_hashed_dictionary ( id UInt64, value_date Date, value_date_32 Date32, value_date_time DateTime, value_date_time_64 DateTime64 ) PRIMARY KEY id SOURCE(CLICKHOUSE(TABLE '02183_dictionary_source_table')) LIFETIME(0) LAYOUT(HASHED());
CREATE DATABASE IF NOT EXISTS test_c0saa62z 
DROP USER user_test_42gh7d9q
SELECT 'Running test stateless/02552_regression_crash.sql from pid=1726' 
SELECT CASE WHEN (number % 2) = 0 THEN [toInt32(1), toInt32(2)] WHEN (number % 3) = 0 THEN [toInt16(2), toInt16(3)] ELSE [toFloat32(3), toFloat32(3)] END FROM system.numbers LIMIT 10;
CREATE INDEX idx_tab2_3 ON tab2 (col3,col4 DESC);
SELECT CASE WHEN (number % 2) = 0 THEN toFloat64(1) WHEN (number % 3) = 0 THEN toUInt8(2) ELSE toFloat32(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_7C476F5A453F70413B2233527E41622E2C50577D4B2B23752E2E75694B324C2239427259633C2A22(x UInt8) Engine=Memory;
select round(1000 * ngramDistanceCaseInsensitive('abCdefgH', 'Abcdefgh'));
DROP TABLE goal_view;
CREATE TABLE test_01193_18429.table_2_692 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE ROLE r4_01293 SETTINGS PROFILE 'default', max_memory_usage=5000000, readonly=1;
SELECT CASE WHEN (col1 % 2) = 0 THEN ['foo', 'bar'] WHEN (col1 % 3) = 0 THEN ['foo', 'bar'] ELSE [col6, 'bar'] END FROM multi_if_check;
CREATE TABLE test_6148567341324935554C282B3D752679314F4B7066295F50523024745F3D3F57554A7157533D2366(x UInt8) Engine=Memory;
SELECT -1_2.34;
 select * from (select key, value from num_1) l inner join (select key, value from num_2 inner join (select number * 7 as key from numbers(1e5)) as nn on num_2.key = nn.key settings parallel_replicas_prefer_local_join=1) r on l.key = r.key order by l.key limit 10 offset 10000 SETTINGS allow_experimental_analyzer=1, join_algorithm='full_sorting_merge', send_logs_level='trace', allow_experimental_parallel_reading_from_replicas = 2, max_parallel_replicas = 2, parallel_replicas_for_non_replicated_merge_tree = 1, cluster_for_parallel_replicas = 'test_cluster_one_shard_three_replicas_localhost', parallel_replicas_prefer_local_join=1
DROP TABLE IF EXISTS two_rows_per_granule;
CREATE TABLE test_02908_r2_107 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_107', 'r2') ORDER BY tuple()
SELECT lpad(NULL);
DROP DATABASE IF EXISTS test_ne463wgl 
CREATE DATABASE IF NOT EXISTS test_sh663xjk 
 SELECT sleep(1.5) FROM remote('127.{1..10}', system.one) FORMAT Null
INSERT INTO test_01193_18429.table_3_372 VALUES 
SELECT 1 FROM distributed_table1 AS t1 GLOBAL JOIN distributed_table2 AS t2 ON t1.a = t2.c LIMIT 1;
SELECT 'Running test stateless/01155_rename_move_materialized_view.sql from pid=1705' 
insert into t2 select number, number from numbers(4000, 1000);
DROP DATABASE IF EXISTS test_mzagysx3 
CREATE DATABASE IF NOT EXISTS test_5i6jltrq 
SELECT count() FROM test WHERE key = '1';
CREATE TABLE test_2232385866216D793F2C2353446E2E7C3E6B3C707D4779247435675037525270224C66717B2A6D3F(x UInt8) Engine=Memory;
SELECT count(id) FROM t_func_to_subcolumns;
SELECT `number` FROM numbers(2)
INSERT INTO test_01193_18429.table_6_125 VALUES 
CREATE TABLE right_join (x UInt32, s String) engine = Join(ALL, RIGHT, x) SETTINGS join_use_nulls = 1;
SELECT arrayPartialShuffle(['storage','tiger','imposter','terminal','uniform','sensation'], 0, 0xbad_cafe);
INSERT INTO test_01193_18429.table_8_660 VALUES 
CREATE TABLE minimum_sample_size_continuos (baseline UInt64, sigma UInt64) ENGINE = Memory();
CREATE TABLE merge_tree_table1 (`s` LowCardinality(String), `x` UInt32) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 1, min_bytes_for_wide_part = 194477220, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 2825, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 528756, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 17842338, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 36062, primary_key_compress_block_size = 40666
insert into summing_merge_tree_aggregate_function select 1, 1, topKState(2)(3);
DROP DATABASE IF EXISTS test_95gzsaf2 
DROP DATABASE IF EXISTS test_i1bmzqku 
SELECT '-- negative tests';
SET compile_expressions = 1;
SELECT '====QUERY STRING====';
CREATE TABLE test_01193_18429.table_6_538 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_5_866 VALUES 
DROP DICTIONARY range_hashed_dictionary;
INSERT INTO test_01193_18429.table_5_957 VALUES 
SELECT 'Running test stateless/01581_to_int_inf_nan.sql from pid=1722' 
SELECT number, COLUMNS('x') FROM numbers(2);
select v.`Tuple(a UInt32, b UInt32)`.b from test order by id;
CREATE TABLE test_444E4F4E5B7179607D463D546D5C722977754B2552324D3D3757555D585965605B577A706A7D4B5F(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00528_const_of_nullable.sql from pid=1714' 
system stop distributed sends buf;
SELECT 'Running test stateless/02122_parallel_formatting_JSONStrings.sh from pid=1713' 
INSERT INTO test_01193_18429.table_8_946 VALUES 
DROP DATABASE IF EXISTS test_g13qm2eq 
INSERT INTO test_01193_18429.table_8_108 VALUES 
WITH round(exp(number), 6) AS x, x > 0xFFFFFFFFFFFFFFFF ? 0xFFFFFFFFFFFFFFFF : toUInt64(x) AS y, x > 0x7FFFFFFF ? 0x7FFFFFFF : toInt32(x) AS z SELECT FORMAT_BYTES(x), format_bytes(y), formatReadableSize(z) FROM system.numbers LIMIT 70;
SELECT uniqCombined(number) FROM numbers(10000) GROUP BY number WITH TOTALS ORDER BY number DESC LIMIT 10 SETTINGS /* force aggregates serialization to trigger the issue with */ max_bytes_before_external_group_by=1, /* overflow row: */ max_rows_to_group_by=10000000000, group_by_overflow_mode='any', totals_mode='before_having', /* this is to account memory under 4MB (for max_bytes_before_external_group_by) to use less rows */ max_untracked_memory=0, group_by_two_level_threshold=10000, /* explicitly */ max_block_size=1000, max_threads=1 ;
INSERT INTO test_01193_18429.table_6_713 VALUES 
CREATE TABLE test_01193_18429.table_5_191 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT arrayJoin(['hello', 'world']) LIKE 'xyz';
SELECT * FROM information_schema.schemata WHERE schema_name ilike 'information_schema' ORDER BY schema_name;
SELECT multiIf((number % 2) = 0, [toUInt16(1), toUInt16(2)], (number % 3) = 0, [toUInt8(2), toUInt8(3)], [toInt16(3), toInt16(3)]) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_5_111 VALUES 
INSERT INTO r4 SELECT 91
DROP TABLE IF EXISTS ip_trie_dictionary_array_source_table;
INSERT INTO r1 SELECT 80
DROP DATABASE IF EXISTS test_mxy75tzb 
OPTIMIZE TABLE alter_table_9 FINAL
INSERT INTO test_01193_18429.table_10_107 VALUES 
INSERT INTO test_01193_18429.table_10_795 VALUES 
SELECT * FROM remote('127.0.0.{1,2}', generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8))))))))))))))))))))))))))))))))))))))))))))))))))))))', 1, 1, 1)) LIMIT 1 FORMAT Null
SELECT 22,toFixedString('Hello', 10), bin(bitShiftRight(toFixedString('Hello', 10), 22));
SELECT 'Running test stateless/01532_tuple_with_name_type.sql from pid=1718' 
CREATE FUNCTION test_user_defined_function AS x -> x + 1;
INSERT INTO test_01193_18429.table_9_186 VALUES 
SELECT '9223372036854775808', '0.000000000', 9223372036854775808 = 0.000000000, 9223372036854775808 != 0.000000000, 9223372036854775808 < 0.000000000, 9223372036854775808 <= 0.000000000, 9223372036854775808 > 0.000000000, 9223372036854775808 >= 0.000000000, 0.000000000 = 9223372036854775808, 0.000000000 != 9223372036854775808, 0.000000000 < 9223372036854775808, 0.000000000 <= 9223372036854775808, 0.000000000 > 9223372036854775808, 0.000000000 >= 9223372036854775808 , toUInt64(9223372036854775808) = 0.000000000, toUInt64(9223372036854775808) != 0.000000000, toUInt64(9223372036854775808) < 0.000000000, toUInt64(9223372036854775808) <= 0.000000000, toUInt64(9223372036854775808) > 0.000000000, toUInt64(9223372036854775808) >= 0.000000000, 0.000000000 = toUInt64(9223372036854775808), 0.000000000 != toUInt64(9223372036854775808), 0.000000000 < toUInt64(9223372036854775808), 0.000000000 <= toUInt64(9223372036854775808), 0.000000000 > toUInt64(9223372036854775808), 0.000000000 >= toUInt64(9223372036854775808) ;
select 9 as x format TSV 
select 0 = multiSearchAny(materialize('abc'), ['de']);
SELECT key1, key2, key3, attr FROM t1 ALL INNER JOIN tj USING (key3, key2, key1) ORDER BY key1;
CREATE USER user7_02713 IDENTIFIED WITH double_sha1_password
INSERT INTO test_01193_18429.table_10_92 VALUES 
INSERT INTO test_01193_18429.table_6_860 VALUES 
CREATE TABLE test_6D382B2B27674F445C335A6B4E6B6468373623363070635B6879576D385E3720562C4E74745A3365(x UInt8) Engine=Memory;
SELECT arraySplit(NULL, NULL, NULL);
select toTypeName(toLowCardinality(number % 2) and 2) from numbers(1);
set distributed_foreground_insert=1;
ALTER TABLE merge_tree_deduplication DROP PART '77_13_13_0';
INSERT INTO test_01193_18429.table_1_491 VALUES 
DROP DATABASE IF EXISTS test_u2x8txzw 
DROP DATABASE IF EXISTS test_aexd3x18 
SELECT STD(NULL, NULL);
GRANT SELECT ON INFORMATION_SCHEMA.* TO session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_no_password_two_profiles_no_roles;
SELECT dictIsIn('database_for_dict.dictionary_with_hierarchy', toUInt64(11), materialize(toUInt64(22)));
DROP TABLE collapsing;
DROP DATABASE IF EXISTS test_brywrzit 
WITH map(1, 2, 3, NULL) AS m SELECT m[materialize(toNullable(1))], m[materialize(toNullable(2))], m[materialize(toNullable(3))];
DESC TABLE test_98lyhnbc.nested
INSERT INTO r3 SELECT 31 % 10 = 3 ? 31 - 1 : 31
CREATE TABLE test_48524E794520664828594D464D337A645B5C3E303C464B285642497D4F7D40547858432069765F5F(x UInt8) Engine=Memory;
CREATE INDEX idx_tab3_2 ON tab3 (col0,col1 DESC);
SELECT dictHas('02184_range_dictionary', 1, 18446744073709551615);
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 6676, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT round(abs(COVAR1 - COVAR2), 6) FROM ( SELECT arrayJoin([1]) AS ID2, covarPop(x_value, y_value) AS COVAR1 FROM series ) ANY INNER JOIN ( SELECT arrayJoin([1]) AS ID2, sum(VAL) / count() AS COVAR2 FROM ( SELECT (X - AVG_X) * (Y - AVG_Y) AS VAL FROM ( SELECT toUInt32(arrayJoin([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])) AS ID, avg(x_value) AS AVG_X, avg(y_value) AS AVG_Y FROM series ) ANY INNER JOIN ( SELECT i AS ID, x_value AS X, y_value AS Y FROM series ) USING ID ) ) USING ID2;
CREATE MATERIALIZED VIEW `01746_null_mv` ENGINE = Memory AS SELECT n1, n2 FROM `01746_null`;
INSERT INTO src_8 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 52
DROP DATABASE IF EXISTS test_7yb5p3v5 
select toDateOrDefault(cast(19 as UInt64));
CREATE TABLE test_hllqnldx.A (`A` UInt8) ENGINE = TinyLog
CREATE TABLE t (`n` int, `m` int DEFAULT joinGet(test_2j4sloxh.join, 'm', CAST('42', 'int')), `s` String DEFAULT dictGet(test_2j4sloxh.dict1, 's', CAST('42', 'UInt64')), `y` DEFAULT dictGet(test_2j4sloxh.dict2, 'm', CAST('42', 'UInt64'))) ENGINE = MergeTree ORDER BY n SETTINGS index_granularity = 48156, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.3903268277645111, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 1794, prefer_fetch_merged_part_size_threshold = 4566724619, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 3915780837, index_granularity_bytes = 3791544, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 89831, primary_key_compress_block_size = 16654
desc file('test_02247.data', 'JSONEachRow')
DROP TABLE summing;
SELECT multiIf((number % 2) = 0, [toFloat64(1), toFloat64(2)], (number % 3) = 0, [toInt16(2), toInt16(3)], [toInt8(3), toInt8(3)]) FROM system.numbers LIMIT 10;
SELECT x FROM (SELECT 1 AS x UNION ALL SELECT NULL UNION ALL SELECT 1.0) ORDER BY x DESC;
DROP DATABASE IF EXISTS test_m8v7focf 
DROP DATABASE IF EXISTS test_ta9e9hec 
CREATE TABLE test_447E6D37444158515E334E303F4A54552031602A7E74642C54452D3069683C3D7470274427496C72(x UInt8) Engine=Memory;
INSERT INTO src_13 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 94
SELECT dictHas('02183_cache_dictionary', 2);
DROP TABLE src;
DROP USER IF EXISTS test_user_01999;
kill query where query_id = '02450_kill_distributed_query_deadlock_test_ft363ahb-42' sync
CREATE TABLE test_3145405E3D7D2B7D6C437C203F203B2E374C642A6B3928507D576B577D345E4B67376F4042614D7D(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_6_100 VALUES 
SELECT s2RectAdd(NULL, NULL, NULL);
SELECT id FROM test_bf_indexOf WHERE indexOf(ary, 'value3') = 0 ORDER BY id FORMAT TSV;
INSERT INTO r5 SELECT 56
SELECT keycol, enum_col FROM table_with_enum LEFT JOIN table_key USING (keycol) ORDER BY keycol;
DROP DATABASE IF EXISTS test_h4n3zcw8 
INSERT INTO 01785_db.simple_key_source_table VALUES 
CREATE TABLE test_01193_18429.table_4_95 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select toStartOfQuarter(toDateTime(0, 'Asia/Istanbul'));
create table test (x Map(UInt8, AggregateFunction(uniq, UInt64))) engine=Memory;
SELECT * FROM mysql('127.0.0.1:9004', 'system', 'one', '02834_USER_25758', '[HIDDEN]')
CREATE TABLE test_6060507D39572B2239227A285C7E253958586D453C66506C7E7743443F4F623F2A736E563A5F3F67(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_4_492 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_2_971 VALUES 
DROP DATABASE IF EXISTS test_nlqn662a 
INSERT INTO test_01193_18429.table_10_123 VALUES 
SELECT s FROM index_for_like WHERE s LIKE 'Good%';
CREATE DATABASE IF NOT EXISTS test_y37l8992 
select 0 = multiMatchAny(materialize('abc'), ['abcd']) from system.numbers limit 10;
SELECT `UserID` FROM `test_c5zukzwt`.`users` WHERE `UserID` IN ((SELECT arrayJoin([1468013291393583084, 1321770221388956068])) AS `_subquery3877`)
CREATE TABLE alter_table_4 (`a` UInt8, `b` Int16, `c` Float32, `d` String, `e` Array(UInt8), `f` Nullable(UUID), `g` Tuple(UInt8, UInt16)) ENGINE = ReplicatedMergeTree('/clickhouse/tables/00993_system_parts_race_condition_drop_zookeeper_test_zoczfe66/alter_table', 'r_4') PARTITION BY b % 10 ORDER BY a SETTINGS old_parts_lifetime = 1, cleanup_delay_period = 0, cleanup_delay_period_random_add = 0, cleanup_thread_preferred_points_per_iteration = 0, replicated_max_mutations_in_one_entry = 120, index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 17222, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 5082719006, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75985, primary_key_compress_block_size = 73298
select uniqStateForEachMerge(x) as y from (select uniqStateForEachState([number]) as x from numbers(10));
DROP TABLE IF EXISTS splitted_nested_protobuf_00825;
SELECT cityHash64(groupArray(d)) FROM enum_pk WHERE 1 = 1;
SELECT 'Running test stateless/00026_shard_something_distributed.sql from pid=1720' 
CREATE TABLE test_01193_18429.table_3_905 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
WITH map(1, [1, 2, 3]) AS value, 'Array(Tuple(UInt64, Array(String)))' AS type SELECT value, cast(value, type), cast(materialize(value), type);
select 412 from test54378 where part_date in ('2018-04-19');
DROP DATABASE IF EXISTS test_0zmj5798 
select '16 left', * from (select 1 as x, 2 as y) t1 left join (select 1 as xx, 2 as yy from numbers(16)) t2 on x = xx or y = yy;
CREATE TEMPORARY TABLE table_gcd_codec_int16 (n Int16 CODEC(GCD, LZ4)) ENGINE = Memory;
CREATE DATABASE IF NOT EXISTS test_3161vkm0 
INSERT INTO test_01193_18429.table_7_919 VALUES 
SELECT 'Running test stateless/01273_arrow_load.sh from pid=1714' 
SELECT * FROM mv_target ORDER BY a;
SELECT 32,toFixedString('Hello', 10), bin(bitShiftRight(toFixedString('Hello', 10), 32));
SELECT any_value([]);
SELECT age('month', toDate('2017-12-31'), toDate('2017-01-01'));
DROP TABLE IF EXISTS part_c;
CREATE TABLE test_01193_18429.table_4_358 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO decimal (a, b, c, e) VALUES 
INSERT INTO test_01193_18429.table_7_991 VALUES 
CREATE INDEX idx_tab4_0 ON tab4 (col3 DESC,col1 DESC,col0);
CREATE TABLE test_7623354D372F3A526952726A60532A4B5255587E333C235C42576E667753726E5E2E6D237C7D7025(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_go03elkf 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), N >= toUInt16(1) as r FORMAT CSV;
select tuple(number) <= tuple(materialize(toUInt64OrNull(''))) from numbers(1);
CREATE TABLE test_01193_18429.table_1_773 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT has(['a', NULL, 'b'], materialize('a'));
CREATE TABLE test_2B532E2C3829664B296A725F792D4B427437402445576A3E5E7371364B32746A3A5A304668244F4D(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_7_106 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT COUNT() FROM bloom_filter_array_types_test WHERE has(u64, 1);
SELECT 'Running test stateless/01825_type_json_13.sh from pid=1713' 
CREATE TABLE test_01193_18429.table_1_491 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT formatDateTime(toDateTime64('2105-12-12 12:12:12', 6, 'Asia/Istanbul'), '%C');
alter table a8x update number=0 WHERE number=-3;
CREATE TABLE test_692E206B6F533164404C5C3D6F5726473C6A4167327077703F21787B3464452E256D482C7A7E4256(x UInt8) Engine=Memory;
CREATE DICTIONARY 02184_range_dictionary ( id UInt64, start UInt64, end UInt64, value_0 String, value_1 String, value_2 String ) PRIMARY KEY id SOURCE(CLICKHOUSE(TABLE '02184_range_dictionary_source_table')) LAYOUT(RANGE_HASHED()) RANGE(MIN start MAX end) LIFETIME(0);
SELECT name, part_type FROM system.parts WHERE (database = currentDatabase()) AND (table = 'lwd_test') AND active ORDER BY name;
SELECT value FROM system.events WHERE event = 'InitialQuery'
INSERT INTO dst_12 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 15
DROP DATABASE IF EXISTS test_c50tjmd0 
SELECT arrayLastOrNull(x -> 1, emptyArrayUInt8());
SELECT count() FROM t_cnf_fuzz WHERE (c1 AND c0 AND (NOT c7) AND c8 AND (NOT c9)) SETTINGS convert_query_to_cnf = 1
KILL QUERY WHERE 1 TEST
DROP TABLE IF EXISTS a
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c4) AND (NOT c9)) OR ((NOT c8) AND c2 AND (NOT c8) AND c8 AND (NOT c0)) OR ((NOT c4) AND c7) OR ((NOT c0) AND (NOT c9) AND (NOT c7)) OR ((NOT c0) AND c8 AND c3 AND (NOT c2) AND (NOT c1)) SETTINGS convert_query_to_cnf = 1
DROP TABLE IF EXISTS concurrent_alter_mt_2
CREATE TABLE test_01193_18429.table_1_965 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
ALTER TABLE mt_with_pk MODIFY COLUMN y Array(String);
CREATE TABLE test_6861412431613B7C457470343767692C3874486D3F326E313D474F6F4A686A6F2B745C7229396D29(x UInt8) Engine=Memory;
SELECT count() FROM t_cnf_fuzz WHERE (c2 AND (NOT c0)) OR ((NOT c7) AND (NOT c5) AND c9) OR ((NOT c2) AND c5) OR ((NOT c1)) OR ((NOT c6)) OR (c4 AND c7 AND c6) OR (c4 AND c6) SETTINGS convert_query_to_cnf = 0
SELECT toString(toStartOfInterval(toDateTime(1549483055), INTERVAL 2 day, 'Asia/Istanbul'), 'Asia/Istanbul');
select intDiv(toInt128(-1), toInt64(-1)) x, intDiv(toInt256(-1), toInt64(-1)) y, toTypeName(x), toTypeName(y);
DROP DATABASE IF EXISTS test_pldepsbz 
SELECT multiIf((number % 2) = 0, [toUInt8(1), toUInt8(2)], (number % 3) = 0, [toUInt16(2), toUInt16(3)], [toInt16(3), toInt16(3)]) FROM system.numbers LIMIT 10;
INSERT INTO r5 SELECT 73 % 10 = 5 ? 73 - 1 : 73
CREATE DATABASE IF NOT EXISTS test_4w6xk6sw 
select c2, count(*) from group_by_null_key group by c2 WITH TOTALS;
CREATE TABLE test_02908_r3_234 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_234', 'r3') ORDER BY tuple()
select b as a, d as c from t1 join t2 on c = a;
select substringIndexUTF8('Ã¥Â¯ÂÃ¥Â¼ÂºÃ¯Â¼ÂÃ¦Â°ÂÃ¤Â¸Â»Ã¯Â¼ÂÃ¦ÂÂÃ¦ÂÂ', 'Ã¯Â¼Â', materialize(2));
SELECT avg(arrayJoin([NULL]));
select [2, 1, 0, 16, 8, 1, 6, 0, 0, 1, 8, 0, 7, 0, 9, 1, 1, 0, 0, 1] = multiSearchAllPositionsCaseInsensitive(materialize('WGVvkXuhsbzkLqiIEOuyiRfomy'), ['GVv', '', 'VbldWXHWzdziNcJKqIkDWrO', 'iEOUyIRFomy', 'hsBZklqiieOuy', '', 'X', 'emXjmIqLvXsNz', 'rxhVkujX', 'wgvvK', 'HsBzKLQiie', 'wVzJBMSdKOqjiNrXrfLEjjXozolCgYv', 'UHsbzklQiiEouyirf', 'UOvUsiKtUnwIt', 'SBZKLqiIEoUYIrfom', 'wg', '', 'BefhETEirL', 'WyTCSmbKLbkQ', '']) from system.numbers limit 10;
CREATE TABLE test_02908_r2_153 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_153', 'r2') ORDER BY tuple()
INSERT INTO test_01193_18429.table_7_563 VALUES 
SELECT 'Running test stateless/02662_sparse_columns_mutations_2.sql from pid=1713' 
INSERT INTO r1 SELECT 72
SELECT * from join_all_left ORDER BY k;
CREATE DATABASE IF NOT EXISTS test_wmoehdvx 
SELECT a FROM t_max_rows_to_read WHERE a = 10 OR a = 20 SETTINGS max_rows_to_read = 12;
SELECT * FROM system.remote_data_paths LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
INSERT INTO nested_table SETTINGS input_format_arrow_import_nested = 1, input_format_arrow_case_insensitive_column_matching = true FORMAT Arrow
SELECT multiIf((number % 2) = 0, [toUInt32(1), toUInt32(2)], (number % 3) = 0, [toFloat64(2), toFloat64(3)], [toUInt16(3), toUInt16(3)]) FROM system.numbers LIMIT 10;
SELECT '49' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ffff:fff0::')))
CREATE TABLE test_01193_18429.table_1_397 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT id AS using_id, toTypeName(using_id), t1.id AS t1_id, toTypeName(t1_id), t1.value AS t1_value, toTypeName(t1_value), t2.id AS t2_id, toTypeName(t2_id), t2.value AS t2_value, toTypeName(t2_value), t3.id AS t3_id, toTypeName(t3_id), t3.value AS t3_value, toTypeName(t3_value) FROM test_table_join_1 AS t1 FULL JOIN test_table_join_2 AS t2 USING (id) INNER JOIN test_table_join_3 AS t3 USING(id);
DROP DATABASE IF EXISTS test_bfcrisu2 
SELECT toDateOrZero(NULL, NULL);
create table dist_monitor_sleep_time_ms as system.one engine=Distributed(default, system, one) settings monitor_sleep_time_ms=1;
INSERT INTO test_01193_18429.table_3_236 VALUES 
INSERT INTO test_01193_18429.table_7_520 VALUES 
DROP DATABASE IF EXISTS test_av15qdgn 
OPTIMIZE TABLE table_merge_tree_02525 FINAL;
select 1 = multiSearchAny(materialize('mznihnmshftvnmmhnrulizzpslq'), ['nrul', 'mshftvnmmhnr', 'z', 'mhnrulizzps', 'hftvnmmhnrul', 'ihnmshftvnmmhnrulizzp', 'izz', '', 'uli', 'nihnmshftvnmmhnru', 'hnrulizzp', 'nrulizz']) from system.numbers limit 10;
CREATE TABLE test_01193_18429.table_3_3 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE DATABASE IF NOT EXISTS test_wfpizmrj 
INSERT INTO test FORMAT Values 
INSERT INTO test_02908_r1_23 SELECT rand64() FROM numbers(5);
explain syntax select max(x1), x2 from test group by 2 order by 1, 2;
INSERT INTO src_2 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 90
CREATE TABLE test_2230774E3B7C6C4D374A4F4D627D527866402325722F2A5C363125416E6B62552E215E2A467C364A(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_tf6rkmlm 
CREATE DATABASE IF NOT EXISTS test_7behtfgc 
CREATE TABLE data_a_02187 ( `a` Nullable(Int64) ) ENGINE = Memory;
alter table many_mutations delete where y = 658 * 2 settings mutations_sync = 0;
INSERT INTO test_01193_18429.table_9_635 VALUES 
SELECT YYYYMMDDToDate(toDecimal64(20230911.1, 5));
INSERT INTO A(t) VALUES 
SELECT CRC32('');
select sipHash64Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62)) == sipHash64(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62));
SELECT 'Running test stateless/02558_system_processes_elapsed.sh from pid=1713' 
SELECT multiIf((col1 % 2) = 0, 'foo', (col1 % 3) = 0, 'bar', 'baz') FROM multi_if_check;
alter table many_mutations delete where y = 34 * 2 settings mutations_sync = 0;
CREATE TABLE distinct_cardinality_low (`low` UInt64, `medium` UInt64, `high` UInt64) ENGINE = MergeTree ORDER BY (low, medium) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.9116511940956116, replace_long_file_name_to_hash = false, max_file_name_length = 113, merge_max_block_size = 15341, prefer_fetch_merged_part_size_threshold = 9592371138, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 4347443583, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 80489, primary_key_compress_block_size = 54980
SELECT b, c FROM t_fixed_prefix WHERE a = 1 AND b = 1 ORDER BY b, c SETTINGS optimize_read_in_order = 0
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c2)) OR ((NOT c3) AND c8 AND (NOT c8)) OR ((NOT c8) AND (NOT c8) AND c0) SETTINGS convert_query_to_cnf = 0
SELECT 'Running test stateless/01644_distributed_async_insert_fsync_smoke.sql from pid=1718' 
CREATE TABLE test_01193_18429.table_4_432 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT intDiv(toDecimal32(4.4, 2), toDecimal64(2.2, 2));
DROP DATABASE IF EXISTS test_xkt40k1i 
SELECT * FROM remote('127.0.0.{1,2}', generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8)))))))))))))))))))))))))))))))))))))))))))))))))))))))))', 1, 1, 1)) LIMIT 1 FORMAT Null
select 'GROUP BY WITH TOTALS ORDER BY LIMIT';
SELECT tupleElement(materialize(('hello', 'world')), 2, 'default');
CREATE TABLE 02661_archive_table Engine=File('CSV', '/var/lib/clickhouse/user_files/02661_read_from_archive_test_t8u0u0ho_tarxz_archive{1..2}.tar.xz :: 02661_read_from_archive_test_t8u0u0ho_tarxz_data1.csv')
CREATE TABLE ip4test (ip IPv4) ENGINE=Memory;
SELECT 'Running test stateless/01040_dictionary_invalidate_query_switchover_long.sh from pid=1705' 
INSERT INTO test_01193_18429.table_9_292 VALUES 
INSERT INTO test_01037.polygons_array VALUES 
select '---Q1---';
CREATE TABLE test_2A6C50342B5937577471477E55575969537A396D58685E68412230514E6024442432435659744536(x UInt8) Engine=Memory;
SELECT $doc$$doc$;
SELECT round(sum(f64 * toDecimal64(80, 2)), 6) FROM test01603;
SELECT multiIf((number % 2) = 0, [toUInt16(1), toUInt16(2)], (number % 3) = 0, [toFloat64(2), toFloat64(3)], [toFloat32(3), toFloat32(3)]) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_8_634 VALUES 
CREATE TABLE test_01193_18429.table_4_84 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE lazy_test_16wuveew;
DROP DATABASE IF EXISTS test_u98xcrrw 
SELECT [1] < [1000], ['abc'] = [NULL], ['abc'] = [toNullable('abc')], [[]] = [[]], [[], [1]] > [[], []], [[1]] < [[], []], [[], []] > [[]], [([], ([], []))] < [([], ([], ['hello']))] ;
SELECT multiSearchAllPositions(NULL, NULL);
SELECT randomString(NULL, NULL);
SELECT 'Running test stateless/00820_multiple_joins_subquery_requires_alias.sql from pid=1718' 
SELECT * FROM summing_r2;
SELECT minIf(number::Float64, rand() % 2 == 3) from numbers(10);
SHOW CREATE test_complex_dictionary_10_shards;
DROP DATABASE IF EXISTS test_gp3e676p 
CREATE TABLE test_57702050622B3C6828345277467E78417B7B57624651607B7C6D634445225957723B4F5766784D6B(x UInt8) Engine=Memory;
select hasSubstr([1, 2, 3, 4], [1, 3]);
alter table many_mutations delete where y = 986 * 2 settings mutations_sync = 0;
desc format(JSONCompactEachRow, '[[["2020-01-01", null, "1234"], ["abcd"]]]');
SELECT 'R4, R5: (x <= 2) AND (x >= 2)';
CREATE TABLE test_01193_18429.table_1_539 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP TABLE d_one;
SELECT ngrams('Test', 1);
select v, variantElement(v, 'Decimal64(6)') from format(TSV, 'v Variant(String, Decimal64(6))', '\\N\nstring\n42.42\n42d42\n4242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242.424242424242424242') format TSV;
INSERT INTO test_01193_18429.table_5_712 VALUES 
insert into function file(nullables_02735.parquet) select * from nullables_02735;
DROP DATABASE IF EXISTS test_w55z36ou 
alter table many_mutations delete where y = 887 * 2 settings mutations_sync = 0;
drop table if exists dist_t;
INSERT INTO alter_column (x, y) SELECT number AS x, -number AS y FROM system.numbers LIMIT 50;
DROP DATABASE IF EXISTS test_khuioth6 
SELECT max(abs(n) * 2), max(abs(n) * n), max(n / abs(n)), max(1 / abs(n)) FROM (SELECT number n FROM numbers(10));
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS id) AS d ON a.id = d.id ;
CREATE TABLE test_372F306766492231306D314B35697849345138583A6E204F3D4F262253596A46247D4756516F5762(x UInt8) Engine=Memory;
INSERT INTO arrow_types4 FORMAT ArrowStream
INSERT INTO test_01193_18429.table_5_564 VALUES 
DROP DATABASE IF EXISTS test_riy5u3l8 
DROP DATABASE IF EXISTS test_uofsla12 
INSERT INTO r2 SELECT 3
SELECT arraySum([toDecimal32(0.0,4), toDecimal32(1.0,4)]) x, toTypeName(x);
select [4] = multiSearchAllPositions(materialize('abcdefgh'), ['d']);
DROP DATABASE IF EXISTS test_s4quh8qu 
INSERT INTO test_01193_18429.table_5_158 VALUES 
select round(1000 * ngramDistanceCaseInsensitive('abcdefgh', 'abcdeFG'));
alter table mt update n=n*10 where 1
CREATE TABLE test_01193_18429.table_7_920 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT formatDateTime(toDateTime('2018-01-02 11:33:44'), '%I');
CREATE TABLE arrow_dicts (a LowCardinality(String)) ENGINE=Memory()
CREATE TABLE test_01193_18429.table_7_220 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_10_78 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select '----- Arg / finalizeAggregation / State / ip4 -----';
SELECT 'Running test stateless/01088_benchmark_query_id.sh from pid=1714' 
DROP DATABASE IF EXISTS test_5hhkjiq8 
drop table tbl2;
INSERT INTO B (b,t) VALUES 
SELECT 'Running test stateless/02267_join_dup_columns_issue36199.sql from pid=1713' 
CREATE INDEX idx_tab3_5 ON tab3 (col0 DESC);
CREATE TABLE current_failed_query_metrics (event LowCardinality(String), value UInt64) ENGINE = Memory();
ALTER TABLE concurrent_alter_column ADD COLUMN c147 DOUBLE;
 select number from numbers_mt(1e6) where number = 42 group by number settings max_threads = 10, max_bytes_before_external_group_by = 1, group_by_two_level_threshold = 1, output_format_pretty_color=1 format PrettyCompact 
SELECT showCertificate();
DROP DATABASE IF EXISTS test_ymtv6jv2 
INSERT INTO test_01193_18429.table_1_155 VALUES 
INSERT INTO test_01193_18429.table_1_168 VALUES 
SELECT dictGet('ssd_cache_dictionary', 'value', toUInt64(2));
select asin(-1) = -pi() / 2;
INSERT INTO test_01193_18429.table_2_225 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN toInt32(1) WHEN (number % 3) = 0 THEN toUInt16(2) ELSE toInt64(3) END FROM system.numbers LIMIT 10;
DESC TABLE test_z1xszoi9.data_01730
DROP TABLE IF EXISTS 2025_test_db.test_table;
select uniqStateMapForEachResample(30, 75, 30)([map(1, number)], 30) from numbers(10);
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c3) AND c5 AND c1) SETTINGS convert_query_to_cnf = 0
CREATE DATABASE IF NOT EXISTS test_hjd5vqb4 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (89 < 37 AND 109 > 0 ? 89 : 0)), throwIf(last != (89 < 37 AND 109 > 0 ? least(37 - 1, 89 + 109 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(37) LIMIT 89, 109);
CREATE TABLE test_01193_18429.table_10_256 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT toUInt64(number) y, toDecimal32(y, 1), toDecimal64(y, 5), toDecimal128(y, 6), toDecimal256(y, 7) FROM numbers(3, 1);
INSERT INTO test_01193_18429.table_3_179 VALUES 
SELECT count() FROM test_table WHERE id = 1 AND value_1 = '1' AND value_2 = '1' AND value_3 = '1' SETTINGS force_primary_key = 1, force_data_skipping_indices = 'value_1_idx, value_2_idx, value_3_idx';
DROP TABLE t_json_11;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 44759, 500 settings ignore_materialized_views_with_dropped_target_table=1
DROP TABLE other_table;
CREATE DATABASE IF NOT EXISTS test_lnkn9ezt 
select bin(512);
CREATE TABLE test_01193_18429.table_7_662 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/01053_drop_database_mat_view.sql from pid=1714' 
INSERT INTO test_01193_18429.table_2_763 VALUES 
INSERT INTO test_01193_18429.table_7_385 VALUES 
CREATE TABLE test_distributed (text String, text2 String) ENGINE = Distributed('test_shard_localhost', currentDatabase(), test_local);
CREATE TABLE test_01193_18429.table_2_499 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_2_698 VALUES 
CREATE TABLE test_01193_18429.table_2_936 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/01671_aggregate_function_group_bitmap_data.sql from pid=1714' 
SELECT 'Running test stateless/01232_extremes.sql from pid=1705' 
DROP TABLE t_skip_index_in;
alter table many_mutations delete where y = 237 * 2 settings mutations_sync = 0;
CREATE DATABASE IF NOT EXISTS test_6d2x9kvl 
select -number % 2 as i, toDecimal32(number % 20, 3) as j from numbers(600) order by i, j;
INSERT INTO test_01193_18429.table_7_446 VALUES 
select round(1000 * ngramSearchCaseInsensitiveUTF8('', materialize(''))) = round(1000 * ngramSearchCaseInsensitiveUTF8(materialize(''), '')) from system.numbers limit 5;
SELECT sum(e) from tab_02473 PREWHERE b > 10 AND b <= 70 AND c > 46 AND c <= 76 AND d > 5 AND d <= 79 WHERE a == 0;
select concat(toFixedString('a', 1), materialize('b'), materialize(toFixedString('c', 1))) == 'abc';
select makeDateTime64(1984, 1, 1, 0, 0, 0, 0.5, 9, 'UTC');
ALTER TABLE src_6 REPLACE PARTITION 3 FROM src_0
INSERT INTO test_01193_18429.table_5_195 VALUES 
INSERT INTO test_01193_18429.table_7_100 VALUES 
CREATE TABLE test_01193_18429.table_7_16 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT argMax((n, n), n) t, toTypeName(t) FROM (SELECT if(number % 3 = 0, NULL, number) AS n from numbers(10));
INSERT INTO testJoinTable VALUES 
INSERT INTO test_01193_18429.table_7_27 VALUES 
INSERT INTO r2 SELECT 72 % 10 = 2 ? 72 - 1 : 72
SELECT multiIf((number % 2) = 0, [toFloat32(1), toFloat32(2)], (number % 3) = 0, [toUInt8(2), toUInt8(3)], [toUInt16(3), toUInt16(3)]) FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_b6egs5kw 
CREATE TABLE test_01193_18429.table_7_25 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_2_568 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01320.r (`x` UInt64) ENGINE = ReplicatedMergeTree('/test/01320_create_sync_race_condition_zookeeper_test_nbejf3oj/table', 'r') ORDER BY x SETTINGS index_granularity = 49581, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 7743, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 16858566, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 22555, primary_key_compress_block_size = 66080
SELECT multiIf((col1 % 2) = 0, [col2, col3], 1, [col4, col5], [col6, col7]) FROM multi_if_check;
select abs(log1p(exp(2) - 1) - 2) < 1e8;
SELECT * FROM t1 ALL JOIN t2 USING (dt) ORDER BY t1.time, t2.time;
SELECT * FROM tab PREWHERE (s['foo']) = 'Click a03' SETTINGS allow_experimental_analyzer=1;
SELECT hopStart(toDateTime('2020-01-09 12:00:01', 'US/Samoa'), INTERVAL '1' DAY, INTERVAL '3' DAY, 'US/Samoa');
SELECT trim(TRAILING 'a' AS arg_1 FROM 'abca' AS arg_2), arg_1, arg_2;
select 1 = isValidUTF8(toValidUTF8('\xe2\x82\x28')) from system.numbers limit 10;
SELECT sipHash128();
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (53 < 1 AND 17 > 0 ? 53 : 0)), throwIf(last != (53 < 1 AND 17 > 0 ? least(1 - 1, 53 + 17 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(1) LIMIT 53, 17);
SELECT dateDiff('week', toDateTime('2014-10-26 00:00:00', 'UTC'), toDateTime('2014-10-27 00:00:00', 'UTC'));
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 23085, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE TABLE test_6E6453564939704450252C304647262D257538457822337D235E6A707843266A7D795976722B6A66(x UInt8) Engine=Memory;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c6) AND c4 AND c6 AND (NOT c3) AND (NOT c9)) OR (c7 AND (NOT c0) AND c0 AND c6) OR ((NOT c6) AND (NOT c8) AND (NOT c2) AND c9) OR (c6) OR ((NOT c4)) OR (c1 AND (NOT c2) AND c6) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_6ztqwvhd.date_table (`CountryID` UInt64, `StartDate` Date, `EndDate` Date, `Tax` Float64) ENGINE = MergeTree ORDER BY CountryID SETTINGS index_granularity = 25955, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 5263, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 6565404, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 32133, primary_key_compress_block_size = 57993
insert into tab3 select number * 4, number * 4 from numbers(4);
DROP TABLE t_index_hypothesis
SELECT is_done, parts_to_do FROM system.mutations where table='mutation_table' and database='test_v0nq0hvy' FORMAT TSVWithNames
SELECT max(blockSize()) <= 100 FROM t1 FULL JOIN t2 ON 1 = 2;
CREATE TABLE test_4A52755D527C653F487377402A2A696B79327E56604937725232463D5C5364476A28575E7D45714D(x UInt8) Engine=Memory;
SELECT * FROM url('http://[2001:db8:1::242:ac11:2]:40865/','JSONAsString') SETTINGS max_download_buffer_size=20;
INSERT INTO src VALUES /* (-70, 2) */ 
select 0 = multiMatchAny(materialize('abc'), materialize(['bcdefgh'])) from system.numbers limit 10;
SELECT 'Running test stateless/00500_point_in_polygon_bug_3_linestring_rotation_precision.sql from pid=1718' 
DROP DICTIONARY IF EXISTS example_simple_key_dictionary;
select countSubstrings(toString(number), '') from numbers(1);
CREATE TABLE test_272F41737B67297C4965633F6855363A745644534C682C705330575A2664225F4E5D4A5C417B5565(x UInt8) Engine=Memory;
select arrayRotateRight([1,2,3,4,5], 2);
CREATE TABLE prewhere (`light` UInt8, `heavy` String) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 1689, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 3484, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 888469, vertical_merge_algorithm_min_columns_to_activate = 89, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 17178321, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 41045, primary_key_compress_block_size = 10367
DROP DATABASE IF EXISTS test_ycy03j14 
select c from prewhere_alias prewhere a = 1;
SELECT or(CAST(1 AS Int8),CAST( 0 AS Nullable(UInt64)));
SELECT toInt64(999999999999999999) as x, toDecimal128(x, 20), toDecimal128(-x, 20);
SELECT 'Running test stateless/00600_replace_running_query.sh from pid=1705' 
DROP TABLE IF EXISTS product_uint64_uint64;
SELECT 'Running test stateless/01616_untuple_access_field.sql from pid=1715' 
insert into test select x, 1 from file(02458_data.jsonl);
DROP DATABASE IF EXISTS test_wxoce550 
DROP DATABASE IF EXISTS test_f3bjf6e2 
CREATE TABLE test_5B5F3364405C683C404765607B66304B3D6E79685B4C3F67402C666F7D4F40433E67447B6427662E(x UInt8) Engine=Memory;
SELECT 'tn1 ALL INNER JOIN t2 | bs = 9';
SELECT date_trunc('month', toDateTime64('2020-01-01 04:11:22.123', 3, 'Europe/London'), 'America/Vancouver');
INSERT INTO test_01193_18429.table_1_293 VALUES 
CREATE TABLE test_01193_18429.table_4_928 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT concatWithSeparator('|', toFixedString('a', 1), materialize('b')) == 'a|b';
SELECT metroHash64([]);
ALTER TABLE src_15 REPLACE PARTITION 5 FROM src_2
SELECT x, lc, r.lc, toTypeName(r.lc) FROM t AS l LEFT JOIN nr AS r USING (x) ORDER BY x;
DROP DATABASE IF EXISTS test_bt83ouxp 
CREATE TABLE test_01193_18429.table_8_940 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT lon/5 - 40 AS lon1, lat/5 - 20 AS lat1, lon1 + 0.0000000001 AS lon2, lat1 + 0.0000000001 AS lat2, geohashesInBox(lon1, lat1, lon2, lat2, 1) AS g FROM (SELECT arrayJoin(range(80*5)) AS lon, arrayJoin(range(10*5)) AS lat) WHERE length(g) != 1;
DROP DATABASE IF EXISTS test_875a14g9 
select 0 = multiMatchAny(materialize(''), materialize(['some string']));
CREATE TABLE test_76535368725E2B33244F6E233448255A4A4F4129385D604D5655292A7B536F77665E5F56595A7A2D(x UInt8) Engine=Memory;
SELECT 't1 ALL INNER JOIN tn2 | bs = 9';
insert into test select * from numbers(10) settings engine_file_truncate_on_insert=1;
SELECT 'Ok';
INSERT INTO test_01193_18429.table_1_191 VALUES 
alter table many_mutations delete where y = 875 * 2 settings mutations_sync = 0;
CREATE TABLE test_01193_18429.table_9_586 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select a1, b1 from tab1 any left join (select * from tab2) on b1 = a2;
SELECT arrayFilter(x -> materialize(0), range(number)) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_7_182 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP TABLE IF EXISTS numbers;
SELECT mapAdd(map('Hello', 1.2::Decimal128(30), 'World', 3.4::Decimal128(30)), map('World', 5.6::Decimal128(30), 'GoodBye', -111.222::Decimal128(30)));
 ATTACH TABLE test_lazy_01294_concurrent_test_qna5lrny.log; 
SELECT count(), min(x), max(x), sum(x), uniqExact(x) FROM sample_00276 SAMPLE 1;
SELECT arraySort(topK(10)(val1)) FROM topk;
alter table data_01900_1 update s = 'foo_96' where 1;
SELECT YYYYMMDDhhmmssToDateTime64(189912315959);
SELECT CASE WHEN 1 THEN [col2, col3] WHEN (col1 % 3) = 0 THEN ['foo', 'bar'] ELSE ['foo', 'bar'] END FROM multi_if_check;
INSERT INTO test_01193_18429.table_10_771 VALUES 
select v.`LowCardinality(String)` from test format Null;
INSERT INTO test_01193_18429.table_7_777 VALUES 
INSERT INTO r7 SELECT 27
CREATE TABLE test_date (`data` Date) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 52066, min_bytes_for_wide_part = 619585264, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 28, merge_max_block_size = 5636, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 7023086542, index_granularity_bytes = 8242145, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 40217, primary_key_compress_block_size = 81189
desc format(Values, '([\'2020-01-01 00:00:00\']), ([\'2020-01-01\'])');
SELECT CASE WHEN (number % 2) = 0 THEN toFloat32(1) WHEN (number % 3) = 0 THEN toFloat64(2) ELSE toInt32(3) END FROM system.numbers LIMIT 10;
DROP TABLE IF EXISTS test02008;
select isFinite(materialize(1)) = 1;
SELECT 22,'Hello',bin(bitShiftLeft('Hello', 22));
SELECT count() FROM t_cnf_fuzz WHERE (c1 AND c1) OR ((NOT c9) AND (NOT c2) AND c2 AND c1) OR ((NOT c4) AND c8 AND c4 AND (NOT c3)) OR (c8 AND c9 AND c0 AND (NOT c0)) OR (c9 AND c6 AND c8 AND c1 AND (NOT c8)) OR ((NOT c5) AND c6 AND c3) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_4A30456E6D377B7B3D703B7852565C6E564078612D4027712A402D606F5635396C3C31224C497D54(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_8_83 VALUES 
CREATE TABLE t_tuple_numeric (t Tuple(`1` Tuple(`2` Int, `3` Int), `4` Int)) ENGINE = Memory;
SELECT arrayCumSum(x -> 10, range(number)) FROM system.numbers LIMIT 10;
DROP TABLE test_tuple_nested_in_map_nested_in_tuple;
SELECT throwIf((SELECT count() FROM mt) % 2 != 0) FORMAT Null;
SELECT 'Running test stateless/01263_type_conversion_nvartolomei.sql from pid=1722' 
CREATE TABLE test_7D3A232161797D7D6A613E2952724A277352286330342050766A725576583B3233756C38367A2361(x UInt8) Engine=Memory;
SELECT 'toStartOfQuarter;toDate32;false', toStartOfQuarter(toDate32('1920-02-02')) SETTINGS enable_extended_results_for_datetime_functions = false;
SELECT addNanoseconds(NULL, NULL);
INSERT INTO r8 SELECT 93 % 10 = 8 ? 93 - 1 : 93
SHOW CREATE USER user11_02713
INSERT INTO r3 SELECT 91
CREATE TABLE test_01193_18429.table_10_461 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
EXPLAIN QUERY TREE SELECT value FROM ( SELECT tupleElement(value, 'a') AS value FROM test_table ) SETTINGS optimize_functions_to_subcolumns = 1;
SELECT 'SELECT toDayOfMonth(N, \'Asia/Istanbul\')';
SELECT CASE WHEN (number % 2) = 0 THEN toUInt64(1) WHEN (number % 3) = 0 THEN toUInt8(2) ELSE toUInt64(3) END FROM system.numbers LIMIT 10;
SELECT 58;
CREATE TABLE test_4E6B28516E3472314A443A5C57465948634F614D296A635E283527363965332F2243647644545876(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_2xqanglh 
CREATE DATABASE IF NOT EXISTS test_144gl0bf 
DROP DATABASE IF EXISTS test_iuxr2xco 
drop table mv_01277_1;
CREATE TABLE test_485F4B3E21795956614C682A7173573A764E4E51755A5B715533764D39433B465F353C6B24304D74(x UInt8) Engine=Memory;
DROP USER IF EXISTS u1_01297;
CREATE TABLE test_01193_18429.table_9_362 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Hello' LIKE '%_';
CREATE TABLE test_5652233C662D2B6265394F626A292C3064754B76296669463E5F547D45572D4B484132504F542C33(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01925_join_materialized_columns.sql from pid=1715' 
CREATE TABLE test_01193_18429.table_9_202 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
EXPLAIN PIPELINE SELECT b, c FROM t_fixed_prefix WHERE bitNot(c) = 1 ORDER BY b, c SETTINGS optimize_read_in_order = 1
kill query where query_id = '02450_kill_distributed_query_deadlock_test_ft363ahb-8' sync
CREATE TABLE test_01193_18429.table_3_388 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT sum(multiIf(id IS NULL, 1, 0)) FROM t_subcolumns_if SETTINGS allow_experimental_analyzer = 1, optimize_functions_to_subcolumns = 1;
SELECT DISTINCT id FROM dist_01213 SETTINGS optimize_skip_unused_shards=1, optimize_distributed_group_by_sharding_key=1;
INSERT INTO lc_nullable SELECT n AS order_key, n AS i8, n AS i16, n AS i32, n AS i64, n AS u8, n AS u16, n AS u32, n AS u64, n AS f32, n AS f64, n AS date, n AS date_time, n AS str, n AS fixed_string FROM (SELECT [NULL] AS n);
select * from file('test_02247.data', 'JSONEachRow')
SELECT toSecond(NULL, NULL, NULL);
CREATE DATABASE IF NOT EXISTS test_quo1r6e6 
SELECT arraySum(x -> 10, emptyArrayString());
OPTIMIZE TABLE tab_00625;
DROP TABLE 01760_db.example_simple_key_source;
SELECT avgWeighted(x, w) FROM values('x Int64, w UInt8', (4, 1), (1, 0), (10, 2));
SELECT YYYYMMDDhhmmssToDateTime(-20230911111111);
CREATE TABLE test_01193_18429.table_8_823 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE DATABASE db_01048;
EXPLAIN QUERY TREE (SELECT sum(uint64 - 2) - sum(uint64 - 3) From test_table);
INSERT INTO test_01193_18429.table_8_701 VALUES 
DROP TABLE t_index_non_materialized;
select hex(sipHash128ReferenceKeyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19)));
SELECT arrayEnumerateUniqRanked(1, [['a','b','a'],['a','b','a'],['c']], 2);
CREATE TABLE test_304B3A233767414C762232436C3A49554360655B7D69512A6877322B2261293D4B47394266762A4C(x UInt8) Engine=Memory;
select multiFuzzyMatchAny(materialize('123'), 0, materialize(['1']));
SELECT * FROM table1 t1 FORMAT PrettyCompact;
CREATE DATABASE test_02177
select v, variantElement(v, 'Int16') from format(JSONEachRow, 'v Variant(String, Int16, Int64)', '{"v" : null}, {"v" : "string"}, {"v" : -1}, {"v" : 0}, {"v" : 10000000000}') format JSONEachRow;
SELECT 'Running test stateless/02125_tskv_proper_names_reading.sh from pid=1705' 
SELECT s, replaceOne(s, '_', 'o') AS a, replaceRegexpOne(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['_.', '_.']) AS s);
CREATE TABLE test_array_joins (`id` UInt64 DEFAULT rowNumberInAllBlocks() + 1, `arr_1` Array(String), `arr_2` Array(String), `arr_3` Array(String), `arr_4` Array(String)) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 38177, min_bytes_for_wide_part = 915862545, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 2, merge_max_block_size = 682, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 3180856496, index_granularity_bytes = 25479982, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 28068, primary_key_compress_block_size = 90234
INSERT INTO src VALUES /* (8, 1) */ 
CREATE TABLE test_01193_18429.table_8_261 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_4_847 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE DATABASE IF NOT EXISTS test_n8xgcsuf 
select [4] = multiSearchAllPositions(materialize('abcdefgh'), ['defg']) from system.numbers limit 10;
CREATE TABLE mv_source (`a` UInt64) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 31815, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.22951553761959076, replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 7421, prefer_fetch_merged_part_size_threshold = 6748274359, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 58, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 27955410, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 41623, primary_key_compress_block_size = 86771
SELECT toStartOfDay(now()) = toDateTime(toDate(now()));
insert into mult_tab select '2018-01-31', number, number, 0, if(number < 64, 1, -1) from system.numbers limit 128;
create table tab (date Date, time DateTime, data String) ENGINE = MergeTree(date, (time, data), 8192);
SELECT 'Special cases';
CREATE DATABASE IF NOT EXISTS test_6pa47001 
SELECT emptyArrayToSingle([NULL]);
SELECT COUNT(*) FROM remote('127.0.0.1', currentDatabase(), remote_test);
SELECT 'Running test stateless/02015_global_in_threads.sh from pid=1705' 
create table ttl_00933_1 (b Int, a Int ttl '2000-10-10 00:00:00'::DateTime) engine = MergeTree order by tuple() partition by tuple() settings min_bytes_for_wide_part = 0;
SELECT 'test3', number FROM system.numbers GROUP BY number ORDER BY number;
DROP TABLE IF EXISTS test_table_ipv4_materialized;
INSERT INTO test_01193_18429.table_8_312 VALUES 
CREATE DATABASE IF NOT EXISTS test_hsx7pohu 
DROP TABLE IF EXISTS old_syntax_01071_test;
SELECT CASE WHEN (number % 2) = 0 THEN toFloat32(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_216024474F2A4351683644615A415D6A72224C76215E40346725465F225551252021345C2F235B5C(x UInt8) Engine=Memory;
INSERT INTO t2 SELECT number, number FROM numbers(15, 15);
SELECT roundBankers(kolmogorovSmirnovTest('two-sided', 'asymp')(left, right).1, 16) as t_stat, roundBankers(kolmogorovSmirnovTest('two-sided', 'asymp')(left, right).2, 16) as p_value FROM ks_test FORMAT TabSeparatedWithNames;
select mapPopulateSeries(map(toInt16(1), toInt16(1), 2, 1)) as res, toTypeName(res);
SELECT * FROM msgpack
CREATE TABLE test_324E462C6C747A5C6A5F2722382C5F7C7B50613F3247644468613E763C3B6120324A247D7179577D(x UInt8) Engine=Memory;
INSERT INTO predicate_table VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat32(1), toFloat32(2)] WHEN (number % 3) = 0 THEN [toInt16(2), toInt16(3)] ELSE [toFloat32(3), toFloat32(3)] END FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_gg22zyju 
CREATE DATABASE IF NOT EXISTS test_5vql1nrn 
DROP DATABASE IF EXISTS test_t36bew6q 
select 12 = multiSearchFirstIndexCaseInsensitiveUTF8(materialize('ÃÂÃÂ¹ÃÂÃÂ¦ÃÂ£ÃÂÃÂ²ÃÂÃÂÃÂÃÂ±ÃÂ¼ÃÂ»ÃÂ¢ÃÂÃÂÃÂ¾ÃÂ ÃÂ¡ÃÂÃÂÃÂ£'), ['ÃÂ ÃÂÃÂ¢ÃÂÃÂ¿ÃÂ¢ÃÂ¾ÃÂ¨ÃÂ ÃÂÃÂÃÂÃÂÃÂ¿ÃÂ²ÃÂÃÂÃÂÃÂÃÂÃÂÃÂ±ÃÂÃÂÃÂÃÂÃÂ´', 'ÃÂ¥ÃÂÃÂÃÂÃÂ¡ÃÂÃÂÃÂ¡ÃÂ¹ÃÂ ÃÂ¶ÃÂ¼ÃÂÃÂ³ÃÂ»ÃÂÃÂ¨ÃÂÃÂ»ÃÂ¹ÃÂÃÂºÃÂ¡ÃÂ¤ÃÂÃÂ¹ÃÂ', 'ÃÂ ÃÂ¿ÃÂ¼ÃÂÃÂ¦ÃÂÃÂ£ÃÂ¨ÃÂµÃÂÃÂ', 'ÃÂÃÂ·ÃÂ¼ÃÂ§ÃÂÃÂ²ÃÂ»ÃÂ±ÃÂ§ÃÂºÃÂÃÂÃÂÃÂºÃÂ·ÃÂ¢ÃÂ³ÃÂµÃÂÃÂÃÂÃÂÃÂ±', 'ÃÂÃÂ·ÃÂ¶ÃÂÃÂÃÂ´', 'ÃÂµÃÂÃÂÃÂÃÂÃÂÃÂ¹ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ¸ÃÂÃÂ¼ÃÂÃÂÃÂÃÂ³ÃÂ¤ÃÂ£ÃÂ»', 'ÃÂºÃÂ½ÃÂÃÂÃÂ ÃÂ¾ÃÂ¾ÃÂÃÂ¢ÃÂÃÂÃÂµ', 'ÃÂ²ÃÂÃÂ·ÃÂÃÂ½ÃÂ¢ÃÂÃÂ¶ÃÂ¤ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ»ÃÂ±ÃÂ²ÃÂÃÂ»ÃÂÃÂÃÂ°ÃÂ·', 'ÃÂ¼ÃÂ¿', 'ÃÂÃÂÃÂÃÂ¹ÃÂÃÂ·ÃÂ½ÃÂÃÂ¿ÃÂÃÂÃÂºÃÂÃÂ ÃÂµÃÂÃÂ±ÃÂ´ÃÂÃÂÃÂ¹ÃÂ³ÃÂÃÂ¼ÃÂÃÂ¨ÃÂÃÂÃÂ©', 'ÃÂÃÂÃÂ¿ÃÂ·ÃÂ¨ÃÂ¨ÃÂÃÂÃÂ¤ÃÂ¤ÃÂ½ÃÂ²ÃÂ£ÃÂ§ÃÂ³ÃÂ¶ÃÂÃÂ¸ÃÂ½ÃÂ´ÃÂ§ÃÂ', 'ÃÂÃÂÃÂ¤ÃÂ©ÃÂ¨ÃÂ±ÃÂ¼ÃÂÃÂ¢ÃÂ½', 'ÃÂ±ÃÂ¼', 'ÃÂÃÂ¿ÃÂÃÂ½ÃÂºÃÂ½ÃÂ¹ÃÂÃÂÃÂÃÂ´ÃÂ§ÃÂ©ÃÂ±ÃÂ']) from system.numbers limit 10;
alter table many_mutations delete where y = 704 * 2 settings mutations_sync = 0;
CREATE TABLE huge_granularity_small_blocks ( p Date, k UInt64, v1 UInt64, v2 Int64 ) ENGINE ReplacingMergeTree() PARTITION BY toYYYYMM(p) ORDER BY k SETTINGS index_granularity_bytes=1000000, write_final_mark = 0, enable_vertical_merge_algorithm=1, vertical_merge_algorithm_min_rows_to_activate=0, vertical_merge_algorithm_min_columns_to_activate=0, min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0;
SELECT 'Running test stateless/02211_jsonl_format_extension.sql from pid=1705' 
SELECT nest.a, arrayPopBack(nest.a), arrayPopFront(nest.a), arrayResize(nest.a, 1), arraySlice(nest.a, 2, 1) FROM decimal;
INSERT INTO test_01193_18429.table_8_939 VALUES 
CREATE TABLE test_33766C3B275F79467A3C74294257576E43283F365A466E7C4E754E3A4A266828765D6C515C576759(x UInt8) Engine=Memory;
SELECT COUNT() FROM startsWith_test WHERE startsWith(S1, S1);
SELECT gccMurmurHash(-1);
SELECT arrayFilter(NULL);
system drop database replica 'r1' from shard 's2' from database rdb_test_5mr53c62
CREATE TABLE test_617B672F6544367337252D36635D22223565384E7A254A365E557D652C58465275523F226D623534(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_1ndtbysf 
CREATE TABLE test_4A275250294A39305D27646F494B7D2D3A592C5359353327383020553F40545C463E6A692E4B6467(x UInt8) Engine=Memory;
SELECT arrayZip([NULL]);
SELECT CASE WHEN 1 THEN col2 WHEN (col1 % 3) = 0 THEN 'bar' ELSE 'baz' END FROM multi_if_check;
SELECT array([], []);
DROP DATABASE IF EXISTS test_hbgqqew3 
DROP DATABASE IF EXISTS test_sgdg4ke9 
CREATE TABLE test_01193_18429.table_10_770 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT decodeURLComponent('%D%9');
CREATE TABLE test_01193_18429.table_7_593 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_02908_r1_238 SELECT rand64() FROM numbers(5);
INSERT INTO mutation_table (id, price) VALUES 
DROP TABLE IF EXISTS t_02156_mt1;
CREATE TABLE test_7B594865525A6461244A3F523B3F6B5C77575D2C38603128753833776B315D756E6A3A727B577071(x UInt8) Engine=Memory;
SELECT * FROM test_tuple_filter WHERE ((id, value), tuple(log_date)) = ((1, 'A'), tuple('2021-01-01'));
DROP DATABASE IF EXISTS test_aoagfgvc 
SELECT quantileExactWeighted(0.5)(x, y) FROM ( SELECT CAST(1 AS Nullable(UInt8)) AS x, CAST(0 AS Nullable(UInt8)) AS y UNION ALL SELECT CAST(NULL AS Nullable(UInt8)) AS x, CAST(1 AS Nullable(UInt8)) AS y UNION ALL SELECT CAST(2 AS Nullable(UInt8)) AS x, CAST(NULL AS Nullable(UInt8)) AS y UNION ALL SELECT CAST(number AS Nullable(UInt8)) AS x, CAST(number AS Nullable(UInt8)) AS y FROM system.numbers LIMIT 10 );
SELECT cutToFirstSignificantSubdomainRFC('example.com');
SELECT toUInt32(0) AS x, toInt16(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
select * from (select 1) as a, (select 2), (select 1) as b;
CREATE INDEX idx_tab2_3 ON tab2 (col4 DESC,col0 DESC,col1 DESC);
SYSTEM SYNC REPLICA cast2;
DROP DATABASE IF EXISTS test_2la07r4l 
SELECT max((number % 5) * (number % 7)) AS a FROM numbers(10000000) GROUP BY number % 7, number % 5 ORDER BY a;
INSERT INTO test_01193_18429.table_2_22 VALUES 
CREATE DATABASE IF NOT EXISTS test_wd9em32z 
INSERT INTO src_12 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 41
SELECT 02148_test_function(1);
SELECT any_value([NULL]);
EXPLAIN PIPELINE SELECT a, b FROM t_fixed_prefix WHERE c = 1 ORDER BY a, b SETTINGS optimize_read_in_order = 1
DROP TABLE bloom_filter_idx2
SELECT coalesce(NULL);
DROP TABLE dist_tbl;
SELECT 2242, 'local_cache', * FROM test_2242 FORMAT Null
CREATE TABLE test_01193_18429.table_2_714 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT toStartOfWeek(NULL);
INSERT INTO r10 SELECT 96
DESC format(JSONEachRow, '{"id" : 1, "age" : 25, "name" : "Josh", "status" : null, "hobbies" : ["football", "cooking"]}') SETTINGS schema_inference_hints = 'age LowCardinality(UInt8), status Nullable(String)', allow_suspicious_low_cardinality_types=1 FORMAT CSV
select if(number % 5 == 0, Null, toDecimal256OrZero(toString(number), 5)) from numbers(20);
CREATE TABLE data_01882 (`key` Int) ENGINE = MergeTree PARTITION BY key ORDER BY key SETTINGS index_granularity = 2733, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 57, merge_max_block_size = 1318, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 5559573632, index_granularity_bytes = 23811635, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 44008, primary_key_compress_block_size = 43060 AS SELECT * FROM numbers(10)
INSERT INTO test_01193_18429.table_6_546 VALUES 
INSERT INTO test_01193_18429.table_6_435 VALUES 
select * from nullable_set_index where b = 'a';
INSERT INTO test_01193_18429.table_4_630 VALUES 
SELECT domain(NULL);
select 1 from remote('127.0.0.2', system, one) settings allow_experimental_analyzer = 1 format Null 
INSERT INTO test_01193_18429.table_9_393 VALUES 
CREATE TABLE test_01193_18429.table_7_434 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
create table mult_tab (date Date, value String, version UInt64, sign Int8) engine = VersionedCollapsingMergeTree(date, (date), 8192, sign, version);
INSERT INTO table_with_pk_clear SELECT number, number * number, toString(number), toString(number * number) FROM numbers(1000);
CREATE TABLE test_01193_18429.table_8_879 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_5_400 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT multiIf((number % 2) = 0, [toInt8(1), toInt8(2)], (number % 3) = 0, [toInt8(2), toInt8(3)], [toInt32(3), toInt32(3)]) FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/01141_join_get_negative.sql from pid=1718' 
CREATE TABLE test_01193_18429.table_7_186 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_6_630 VALUES 
CREATE TABLE test_6B2D7C21465A7B234E5B62794F2A4E2C3A2623534F3F3E613D796B4A665B71655365626771384570(x UInt8) Engine=Memory;
SELECT length([]);
INSERT INTO table_with_some_columns SELECT rand(), number + 10 from numbers(1);
CREATE TABLE test_01193_18429.table_2_622 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_8_909 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_8_53 VALUES 
CREATE TABLE check (x UInt64) ENGINE = Memory;
DROP DATABASE IF EXISTS test_9s49d4od 
select (1, 'a') in tuple((2, 'b'), (3, 'c'), (4, 'd'));
CREATE TABLE test_3043506664324E663F3B39334C654958675D2C302F32256C6F6C347D6C35256F4D622A33613D6B27(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN toInt16(1) WHEN (number % 3) = 0 THEN toFloat64(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_7_980 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select hex(sipHash128ReferenceKeyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2)));
ALTER TABLE concurrent_alter_column ADD COLUMN c66 DOUBLE;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 6245, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT 'Running test stateless/00718_format_datetime.sql from pid=1722' 
select regexpExtract(materialize('100-200'), '(\\d+).*', materialize(1));
CREATE TABLE test_01193_18429.table_6_922 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_table (`number` UInt64) ENGINE = MergeTree ORDER BY number SETTINGS index_granularity = 52931, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 17946, prefer_fetch_merged_part_size_threshold = 5539127104, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 9335814518, index_granularity_bytes = 30078789, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 61246, primary_key_compress_block_size = 50522
SELECT multiIf((number % 2) = 0, [toUInt64(1), toUInt64(2)], (number % 3) = 0, [toUInt16(2), toUInt16(3)], [toUInt8(3), toUInt8(3)]) FROM system.numbers LIMIT 10;
ALTER TABLE concurrent_alter_column ADD COLUMN c316 DOUBLE;
INSERT INTO test_01193_18429.table_6_535 VALUES 
SELECT 'And detach permanently again to check how database drop will behave';
SHOW CREATE USER u9_01292;
INSERT INTO src VALUES /* (54, 1) */ 
set receive_timeout=300;
INSERT INTO json_square_brackets FORMAT JSONAsString 
CREATE TABLE parquet_load (`foo` Nullable(String)) ENGINE = Memory;
CREATE DATABASE IF NOT EXISTS test_oeo7euv2 
INSERT INTO test_01193_18429.table_2_707 VALUES 
WITH 'n' as n SELECT haystack, needle, hasToken(haystack, n) as result FROM ht WHERE func = 'hasToken' AND needle = n AND result != match;
SELECT multiIf((number % 2) = 0, toInt32(1), (number % 3) = 0, toUInt32(2), toInt64(3)) FROM system.numbers LIMIT 10;
SELECT windowID(NULL, NULL, NULL);
SELECT puny, tryPunycodeDecode(puny) AS original FROM tab;
DROP DATABASE IF EXISTS test_az7t2j4e 
SELECT sumMapFiltered([1])(statusMap.status, statusMap.requests) FROM sum_map;
SELECT sum(`number` GLOBAL IN (`_subquery6292`) AS `res`), sum(`number` * `res`) FROM numbers(10)
SELECT 5 AS constant, arrayMap(x -> x + arrayMap(x -> x + id + constant, [1])[1], [1,2,3]) FROM test_table;
DROP DATABASE IF EXISTS test_akmc7ls9 
CREATE TABLE test_2D7B5C657D4E23682F64375661657179432F23335E4671322D41714A747C347C71255771212D6739(x UInt8) Engine=Memory;
select parseDateTime('00/', '%M/', 'UTC') = toDateTime('1970-01-01 00:00:00', 'UTC');
SELECT 'test_x9vk2dpt', 'threads finished'
SELECT *, * APPLY toTypeName FROM ( SELECT t1.* FROM (SELECT 1 :: Int32 as a) t1 FULL JOIN (SELECT 2 :: UInt32 as a) t2 ON t1.a = t2.a ) ORDER BY 1;
CREATE TABLE t_01411_num( num UInt8, arr Array(LowCardinality(Int64)) default [num] ) ENGINE = MergeTree() ORDER BY tuple();
SELECT toTypeName(sum(v)), sum(v) FROM ( SELECT v FROM ( SELECT CAST('9007199254740992', 'Float64') AS v UNION ALL SELECT CAST('1', 'Float64') AS v UNION ALL SELECT CAST('1', 'Float64') AS v ) ORDER BY v ASC )
ATTACH TABLE view_no_nulls;
CREATE TABLE merge (n Int8) ENGINE = Merge('', lower('DISTRIBUTED'));
SELECT sum(n + -1 + -1), sum(-1 + n + -1), sum(n - -1 + -1), sum(-1 - n + -1) FROM (SELECT number n FROM numbers(10));
DROP DATABASE IF EXISTS test_yqkxzsr9 
 select * from (select key, value from num_1) l inner join (select key, value from num_2) r on l.key = r.key order by l.key limit 10 offset 700000 SETTINGS allow_experimental_analyzer=1, allow_experimental_parallel_reading_from_replicas = 2, send_logs_level='trace', max_parallel_replicas = 2, parallel_replicas_for_non_replicated_merge_tree = 1, cluster_for_parallel_replicas = 'test_cluster_one_shard_three_replicas_localhost', parallel_replicas_prefer_local_join=0
DESC tuple;
DROP DATABASE IF EXISTS test_ev7bjr3o 
CREATE TABLE test_01193_18429.table_9_69 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT fromModifiedJulianDayOrNull(59154);
SELECT _CAST([('a', [(1, [(10, 1), (20, 2)]), (2, [(30, 3), (40, 4)])]), ('b', [(3, [(50, 5), (60, 6)]), (4, [(70, 7), (80, 8)])])], 'Map(String, Array(Tuple(UInt8, Map(UInt32, Int64))))'), toTypeName(_CAST([('a', [(1, [(10, 1), (20, 2)]), (2, [(30, 3), (40, 4)])]), ('b', [(3, [(50, 5), (60, 6)]), (4, [(70, 7), (80, 8)])])], 'Map(String, Array(Tuple(UInt8, Map(UInt32, Int64))))'))
SELECT countEqual([], []);
SELECT 'trunc() : ', toDecimal128('1234567890.123456789', 20) AS x, -x AS y, trunc(x), trunc(y), trunc(x, -3), trunc(y, -3);
SELECT * FROM test LIMIT 50 OFFSET 190;
INSERT INTO dst_4 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 12
SELECT firstSignificantSubdomainRFC('');
show create dist_background_insert_sleep_time_ms;
CREATE TABLE test_294C61414F614E242630452C597D7A607D3B2873345F4964745E5B2F7338546752326F56452C3A5F(x UInt8) Engine=Memory;
SELECT 'U8';
SELECT decodeURLComponent(materialize(pathFull('www.example.com/?query=hello%20world+foo%2Bbar'))) AS Path;
INSERT INTO test_01193_18429.table_1_981 VALUES 
SELECT bitShiftLeft(if(number = NULL, '14342', '4242348'), 1) FROM numbers(1);
SELECT hex(CAST(x, 'AggregateFunction(sum, Decimal(50, 10))')) FROM (SELECT arrayReduce('sumState', [toDecimal256('0.0000010.000001', 10)]) AS x) GROUP BY x;
INSERT INTO test_01193_18429.table_4_259 VALUES 
desc file('test_02149_external_schema_inference_test_r6b0wy2t.data', 'CapnProto') settings format_schema='test_02149/02030_capnp_nested_tuples:Message'
INSERT INTO test_01193_18429.table_5_417 VALUES 
CREATE TABLE test_01193_18429.table_7_916 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
alter table many_mutations delete where y = 637 * 2 settings mutations_sync = 0;
INSERT INTO table_for_ttl SELECT now(), 4, toString(number) from numbers(3000, 1000);
CREATE TABLE test_414B585D385D36324D627A727E46495458536C673C6460653D60255C2F7E2C6A466322226C6C2E3F(x UInt8) Engine=Memory;
INSERT INTO decimal (b) VALUES 
alter table data_01900_1 update s = 'foo_52' where 1;
SELECT * FROM fill ORDER BY date WITH FILL FROM toDate('2019-05-01') TO toDate('2019-05-31'), val WITH FILL;
SELECT 'Running test stateless/01936_empty_function_support_uuid.sql from pid=1724' 
DROP DATABASE IF EXISTS test_vioe4ycx 
SELECT addMilliseconds(NULL, NULL);
alter table ttl materialize ttl settings mutations_sync=2;
CREATE TABLE t (`n` int) ENGINE = MergeTree ORDER BY n SETTINGS index_granularity = 795, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 19249, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 9208414378, index_granularity_bytes = 24630823, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 63883, primary_key_compress_block_size = 90977
DROP DATABASE IF EXISTS test_zoojlx6l 
select hasAny([], []);
CREATE TABLE test_645B475A3F6F6E4541387A417A71742B776357434C2D766E365B63447D745A4F67522F4645437539(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_1_211 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT addHours('2023-10-22', materialize(1)), addHours('2023-10-22 12:34:56.123', materialize(1));
select 0 = isValidUTF8(toFixedString('\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xF1\x80\xC2\x80', 34)) from system.numbers limit 10;
SELECT concat(materialize(42 :: Int32), materialize(144 :: UInt64), materialize(255 :: UInt32));
SELECT * FROM (SELECT materialize([0] :: Array(LowCardinality(Int64))) as pt) AS m0 LEFT JOIN (SELECT materialize([0] :: Array(Int64)) as pt) AS m2 ON m0.pt = m2.pt ;
INSERT INTO test_01193_18429.table_5_183 VALUES 
CREATE TABLE test_01193_18429.table_8_857 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP TABLE strings;
CHECK TABLE check_query_test_non_adaptive SETTINGS max_threads = 1;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 47489, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT count() from tab_02473 PREWHERE b > 0 AND b <= 70 AND c > 0 AND c <= 30 AND d > 5 AND d <= 35 WHERE a == 0;
CREATE TABLE constraint_constant_number_expression ( id UInt64, CONSTRAINT `c0` CHECK 1, CONSTRAINT `c1` CHECK 1 < 2, CONSTRAINT `c2` CHECK isNull(cast(NULL, 'Nullable(UInt8)')) ) ENGINE = TinyLog();
SELECT s from array_of_tuples;
INSERT INTO ttl_table3 SELECT now() + rand() % 5 - rand() % 3 FROM numbers(5)
CREATE TABLE test_365F71607733677C5F3B5C7C345B227B4374696F4872527D4571522F416338535137325F4C79685E(x UInt8) Engine=Memory;
SELECT i + i, i - i, i * i, i / i, intDiv(i, i), intDivOrZero(i, i) FROM decimal WHERE i > 0;
DROP DATABASE IF EXISTS test_ipmxrq0b 
DROP DATABASE IF EXISTS test_8572jozi 
SELECT 'Running test stateless/02901_analyzer_recursive_window.sql from pid=1718' 
SELECT (c1, c2) as t FROM values((NULL, 0.), (0., 0.), (5., 5.), (NULL, 0.)) ORDER BY t DESC LIMIT 1;
INSERT INTO test_01193_18429.table_6_939 VALUES 
SELECT id, max(value1), max(value2), max(value3), max(value4) FROM test_table_nullable_unsigned_values GROUP BY id ORDER BY id;
SET allow_experimental_analyzer=0;
INSERT INTO test_6ztqwvhd.datetime_table FORMAT Values
DESCRIBE (SELECT count() OVER (ORDER BY id WITH FILL FROM ((1 + 1) AS from) TO (6 AS to) STEP ((1 + 1) AS step)) FROM test_table);
DROP TABLE IF EXISTS ttl_where;
SELECT * FROM t1 FULL JOIN rdb ON rdb.key == t1.k FORMAT Null SETTINGS join_algorithm = 'direct,hash';
ALTER TABLE test_db.test_t RENAME COLUMN col1 TO col2
CREATE DATABASE IF NOT EXISTS test_b5q8dsm2 
CREATE TABLE test_4F7A3D3E5A6C27447B4472564F4D59673B3C30615E4B21594323437452487B5E4E594A67704D4734(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_luiwe81x 
CREATE TABLE test_71584755547179676B4B615A3561575841556B2B537E355951383D284823416D7732387055467E6F(x UInt8) Engine=Memory;
CREATE TABLE source (`ts` DateTime('UTC'), `n` Int32) ENGINE = MergeTree PARTITION BY toYYYYMM(ts) ORDER BY tuple() SETTINGS index_granularity = 60657, min_bytes_for_wide_part = 241913120, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 119, merge_max_block_size = 4695, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 12143239, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 98188, primary_key_compress_block_size = 91381
CREATE TABLE dt_interval (`id` String, `start` DateTime, `end` DateTime) ENGINE = MergeTree ORDER BY start SETTINGS index_granularity = 33349, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 78, merge_max_block_size = 8523, prefer_fetch_merged_part_size_threshold = 2254813064, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 30866957, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 23319, primary_key_compress_block_size = 21894
CREATE DATABASE IF NOT EXISTS test_iom48vcu 
INSERT INTO test_01193_18429.table_5_154 VALUES 
CREATE TABLE test_01193_18429.table_3_806 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), DT64 != N as r FORMAT CSV;
DROP TABLE IF EXISTS bloom_filter_null_types_test;
CREATE DATABASE IF NOT EXISTS test_hb5p7407 
CREATE TABLE test_5B484065347D5B3867295558436D506672513D647136592A733E465238536F216D745166414B2E2D(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS columns_with_multiple_streams_bad_case;
CREATE DATABASE IF NOT EXISTS test_3rummss3 
SELECT Title, round(1000 * distance) FROM test_entry_distance ORDER BY ngramSearchCaseInsensitiveUTF8(Title, 'metriKS') as distance, Title;
CREATE TABLE test_6D4972502E64422755792556722E4C2E64282046624E3D61346A414C3174483641485048204F6455(x UInt8) Engine=Memory;
SELECT mapAdd(NULL, NULL, NULL);
CREATE DICTIONARY test_dictionary ( id UInt64, value String ) PRIMARY KEY id LAYOUT(FLAT()) SOURCE(CLICKHOUSE(TABLE 'test_table')) LIFETIME(0);
CREATE TABLE test_324E5A2B632D647A6622586066426C4E2E7C422E58295E3E4A4268536C5356612F724124704C4172(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_3_497 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT INTERVAL number - 15 MONTH + toDate('2017-01-01') AS x FROM system.numbers LIMIT 30;
SELECT 'Running test stateless/00179_lambdas_with_common_expressions_and_filter.sql from pid=1713' 
select count(ignore(*)) from data_02051 settings min_bytes_to_use_direct_io=1, local_filesystem_read_method='io_uring', local_filesystem_read_prefetch=0, read_priority=1, max_read_buffer_size=65505 ;
INSERT INTO lookup_table VALUES
INSERT INTO test_01193_18429.table_9_510 VALUES 
INSERT INTO r3 SELECT 67 % 10 = 3 ? 67 - 1 : 67
INSERT INTO test_01193_18429.table_2_639 VALUES 
SELECT 'Running test stateless/00937_test_use_header_csv.sh from pid=1726' 
SELECT 'any';
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c0)) OR (c2 AND c2 AND c1 AND (NOT c2) AND (NOT c4)) SETTINGS convert_query_to_cnf = 1
CREATE TABLE test_01193_18429.table_7_717 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT mapApply((x, y) -> ('x', 'y'), materialize(map(1, 0, 2, 0)));
CREATE TABLE test_505F3A67454B717560492B4E6C572B2155762B272D3622697237753B57335A6C493776686D26422A(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02525_range_hashed_dictionary_update_field.sql from pid=1714' 
CREATE DATABASE IF NOT EXISTS test_jsj6hagy 
SELECT * FROM merge(currentDatabase(), '^numbers\\d+$') SAMPLE 0.01;
CREATE DATABASE IF NOT EXISTS test_lz7nk8zz 
SELECT 'Running test stateless/02480_s3_support_wildcard.sql from pid=1705' 
SELECT toUUID('417ddc5de5564d2795dda34d84e46a50');
SELECT 'SELECT y from merge(currentDatabase(), 02763_merge)';
DROP DATABASE IF EXISTS test_ce66wfeq 
DROP DATABASE IF EXISTS test_jqegbpci 
SELECT CASE WHEN 1 THEN 'foo' WHEN (col1 % 3) = 0 THEN 'bar' ELSE toFixedString('baz', 16) END FROM multi_if_check;
SELECT isDecimalOverflow(materialize(toDecimal32(1000000000, 0)), 9), isDecimalOverflow(materialize(toDecimal32(1000000000, 0))), isDecimalOverflow(materialize(toDecimal32(-1000000000, 0)), 9), isDecimalOverflow(materialize(toDecimal32(-1000000000, 0)));
INSERT INTO test_01193_18429.table_6_382 VALUES 
CREATE DATABASE IF NOT EXISTS test_a1hct9ea 
DROP TABLE IF EXISTS 01070_window_view_watch_events.wv SYNC
DROP DATABASE IF EXISTS test_47kp02sa 
CREATE TABLE test_01193_18429.table_3_585 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE DATABASE IF NOT EXISTS test_raemqlz0 
SELECT CASE WHEN (number % 2) = 0 THEN [toInt8(1), toInt8(2)] WHEN (number % 3) = 0 THEN [toFloat64(2), toFloat64(3)] ELSE [toInt16(3), toInt16(3)] END FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_ymmpo2lb 
select '-------toStartOfQuarter---------';
CREATE TABLE alter_table_6 (`a` UInt8, `b` Int16, `c` Float32, `d` String, `e` Array(UInt8), `f` Nullable(UUID), `g` Tuple(UInt8, UInt16)) ENGINE = ReplicatedMergeTree('/clickhouse/tables/00993_system_parts_race_condition_drop_zookeeper_test_zoczfe66/alter_table', 'r_6') PARTITION BY b % 10 ORDER BY a SETTINGS old_parts_lifetime = 1, cleanup_delay_period = 0, cleanup_delay_period_random_add = 0, cleanup_thread_preferred_points_per_iteration = 0, replicated_max_mutations_in_one_entry = 353, index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 17222, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 5082719006, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75985, primary_key_compress_block_size = 73298
CREATE TABLE lc_null_int8_defnull (`val` LowCardinality(Nullable(Int8)) DEFAULT NULL) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 42575, min_bytes_for_wide_part = 591726207, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 93, merge_max_block_size = 2812, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 632677, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 59271, primary_key_compress_block_size = 73290
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat32(1), toFloat32(2)] WHEN (number % 3) = 0 THEN [toInt8(2), toInt8(3)] ELSE [toInt32(3), toInt32(3)] END FROM system.numbers LIMIT 10;
with c as ( select 1 ID, toDate('2023-06-24') dt, 0 p ) select multiIf(t.ID = 1, formatRowNoNewline('JSONEachRow', dd), '') AS params from (select ID, case when p = 0 then toString(date_add(hour, p, dt)) else '2022-01-01' end as dd from c) t;
set optimize_skip_unused_shards=1;
WITH '::192.168.100.1' as addr, arrayJoin(['::192.168.100.0/118', '::192.168.100.0/120', '::192.168.100.0/128']) as prefix SELECT addr, prefix, isIPAddressInRange(addr, prefix);
CREATE TABLE mutation_table (`dt` Nullable(Date), `name` Nullable(String)) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 17719, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 27, merge_max_block_size = 3878, prefer_fetch_merged_part_size_threshold = 7280188279, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 19741675, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 75306, primary_key_compress_block_size = 56753
DROP DATABASE IF EXISTS test_2raroakp 
CREATE TABLE `02815_first_line_vector` (`n` Int32, `text` String) ENGINE = MergeTree ORDER BY n SETTINGS index_granularity = 20275, min_bytes_for_wide_part = 951042230, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 125, merge_max_block_size = 12337, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 20, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 23403695, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 78144, primary_key_compress_block_size = 74726
SELECT 11 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'asn', tuple(IPv4StringToNum('255.224.0.0')))
INSERT INTO t1__fuzz_13 VALUES 
CREATE TABLE test_01193_18429.table_7_445 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_3_527 VALUES 
DROP TABLE IF EXISTS lol;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), addWeeks(N, 1, 'Asia/Istanbul') as r FORMAT CSV;
CREATE TABLE test_7439262F69215C3C663E2E2C4C3F3853764D2145677C5C3B4834716035382A7E55703E563D5A4F22(x UInt8) Engine=Memory;
SELECT [1, 2, 3, 4, 5] AS arr, 3 AS len, arrayShingles(arr, len), arrayShingles(materialize(arr), len);
SELECT count() FROM t_cnf_fuzz WHERE (c2 AND (NOT c3)) OR (c5 AND c7 AND (NOT c3) AND c2) OR ((NOT c6) AND (NOT c3) AND c5) OR (c3) OR (c1 AND (NOT c5) AND (NOT c7) AND c9) SETTINGS convert_query_to_cnf = 0
INSERT INTO test_02908_r1_135 SELECT rand64() FROM numbers(5);
optimize table 02900_buffer
CREATE TABLE test_01193_18429.table_4_867 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select 4 = multiSearchFirstIndexCaseInsensitive(materialize('mDFzyOuNsuOCSzyjWXxePRRIAHi'), ['TfejIlXcxqqoVmNHsOocEogH', 'clyblaTFmyY', 'JQfxMAWVnQDucIQ', 'jw', 'fGetlRA', 'uWwCOCd', 'rInhyxSIFiogdCCdTPqJNrqVaKIPWvLFI', 'mimSJjfCWI', 'jqnJvNZXMEPorpIxpWkhCoiGzlcfqRGyWxQL', 'bxCJeVlWhqGHoakarZcK', 'unsUOcSZyjwxxe', 'E', 'PR', 'nsUoCSZyjwxXEPr', 'sfotzRPMmalUSjHkZDDOzjens', 'zYJwxx', 'DFzyouNsUocsZ', 'QBaQfeznthSEMIPFwuvtolRzrXjjhpUY', 'sQPVBaoeYlUyZRHtapfGM', 'lPiZLi']) from system.numbers limit 10;
CREATE TABLE test_7E28424C383A3F714822323E6025583C5C70216F6624337466734E304A7D25744675224E3D4F305B(x UInt8) Engine=Memory;
SYSTEM START FETCHES r
SELECT * FROM t1_00826 cross join t2_00826 where t1_00826.a = t2_00826.a;
SELECT number IN (1, 2) AS x, count() FROM numbers(10) GROUP BY x ORDER BY x;
CREATE TABLE test_01193_18429.table_1_115 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select -1 as offset, 1 as length, 'Hello' as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
INSERT INTO 02952_disjunction_optimization VALUES 
CREATE TABLE test_01193_18429.table_1_580 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 4294967296, -2147483649, 4294967296 = -2147483649, 4294967296 != -2147483649, 4294967296 < -2147483649, 4294967296 <= -2147483649, 4294967296 > -2147483649, 4294967296 >= -2147483649, -2147483649 = 4294967296, -2147483649 != 4294967296, -2147483649 < 4294967296, -2147483649 <= 4294967296, -2147483649 > 4294967296, -2147483649 >= 4294967296 , toUInt64(4294967296) = toInt64(-2147483649), toUInt64(4294967296) != toInt64(-2147483649), toUInt64(4294967296) < toInt64(-2147483649), toUInt64(4294967296) <= toInt64(-2147483649), toUInt64(4294967296) > toInt64(-2147483649), toUInt64(4294967296) >= toInt64(-2147483649), toInt64(-2147483649) = toUInt64(4294967296), toInt64(-2147483649) != toUInt64(4294967296), toInt64(-2147483649) < toUInt64(4294967296), toInt64(-2147483649) <= toUInt64(4294967296), toInt64(-2147483649) > toUInt64(4294967296), toInt64(-2147483649) >= toUInt64(4294967296) , toInt64(4294967296) = toInt64(-2147483649), toInt64(4294967296) != toInt64(-2147483649), toInt64(4294967296) < toInt64(-2147483649), toInt64(4294967296) <= toInt64(-2147483649), toInt64(4294967296) > toInt64(-2147483649), toInt64(4294967296) >= toInt64(-2147483649), toInt64(-2147483649) = toInt64(4294967296), toInt64(-2147483649) != toInt64(4294967296), toInt64(-2147483649) < toInt64(4294967296), toInt64(-2147483649) <= toInt64(4294967296), toInt64(-2147483649) > toInt64(4294967296), toInt64(-2147483649) >= toInt64(4294967296) 
CREATE TABLE test_5E503233576638356F7040234E5023256A745A6A436129346D2B3F42663C7B293E2E327E2A3A5648(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_2_327 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP TABLE IF EXISTS test_readonly;
CREATE TABLE test_2141673C50362A5D66627D3B5B68593E362C482931697655383A70374471406669705646205C7046(x UInt8) Engine=Memory;
SELECT * FROM merge(currentDatabase(), 'test_local_1|test_local_2') WHERE _table in ('test_local_1', 'test_local_2') ORDER BY value;
DROP TABLE IF EXISTS 01062_window_view_event_hop_watch_asc.mt
INSERT INTO test_01193_18429.table_6_188 VALUES 
SELECT 'limit w/ GROUP BY' AS `'limit w/ GROUP BY'`, nothingUInt64(_CAST(NULL, 'Nullable(Nothing)')) AS `count(NULL)`, `__table1`.`number` AS `number` FROM view(SELECT intDiv(`number`, 2147483647) AS `number` FROM numbers(10)) AS `__table1` GROUP BY `__table1`.`number` WITH ROLLUP ORDER BY count() ASC, `__table1`.`number` DESC NULLS LAST LIMIT _CAST(2, 'UInt64')
SELECT 'Running test stateless/00900_orc_arrow_parquet_maps.sh from pid=1722' 
SET max_memory_usage='4Mi';
CREATE TABLE test_46512E366A547A4A6E214E386B5C723349672853292F30256D6D4B2A782559224734293F2568264A(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_10_398 VALUES 
INSERT INTO test_01193_18429.table_9_100 VALUES 
select 'join on OR chain (full)';
CREATE TABLE test_01193_18429.table_9_166 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE r (x UInt32, lc String) ENGINE = Memory;
SELECT * FROM main;
SELECT 'Running test stateless/01428_h3_range_check.sql from pid=1720' 
select 'Dynamic Nullable Offset, Dynamic Nullable Length';
SELECT roundBankers(welchTTest(0.95)(left, right).3, 6) as t_stat, roundBankers(welchTTest(0.95)(left, right).4, 6) as p_value from welch_ttest;
CREATE TABLE data_02228 (`key1` UInt32, `sign` Int8, `s` UInt64) ENGINE = CollapsingMergeTree(sign) PARTITION BY key1 % 1024 ORDER BY key1 SETTINGS index_granularity = 366, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 17, merge_max_block_size = 18499, prefer_fetch_merged_part_size_threshold = 6911664155, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 86, min_merge_bytes_to_use_direct_io = 3364259100, index_granularity_bytes = 21165956, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 79286, primary_key_compress_block_size = 56896
select sipHash64Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60)) == sipHash64(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60));
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), DT64 > N as r FORMAT CSV;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toFloat64(2), toFloat64(3)] ELSE [toInt8(3), toInt8(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE lazy_mark_test ( n0 UInt64, n1 UInt64, n2 UInt64, n3 UInt64, n4 UInt64, n5 UInt64, n6 UInt64, n7 UInt64, n8 UInt64, n9 UInt64 ) ENGINE = MergeTree ORDER BY n0 SETTINGS min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1; 
SELECT * FROM 02131_rptable WHERE x >= 2 SETTINGS additional_table_filters = {'02131_rptable': 'x > 1'} ;
SELECT intExp2(-1);
SELECT [(1, 'Hello'), (2, 'World')] AS nested, nested.1, nested.2;
CREATE TABLE quorum1 (`x` UInt32, `y` Date) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00732/quorum_lost', '1') PARTITION BY y ORDER BY x SETTINGS index_granularity = 23562, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 5006, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 4198371, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 87533, primary_key_compress_block_size = 98495
CREATE TABLE with_fill_date (d DateTime('UTC'), d64 DateTime64(3, 'UTC')) ENGINE = Memory;
alter table rmt1 update n=10 where n=123 settings mutations_sync=1;
SELECT MIN(t1.c0) FROM t1 SETTINGS aggregate_functions_null_for_empty = 1;
select 0 = multiSearchFirstIndex(materialize('tjcmtoisgbilkygushkpuxklis'), ['bkdohwx', 'dfohgzhcjqirlbrokwy', 'zaemgqgxltznvkccyumhgsftnfigbol', 'otgcaybejwe', 'qn', 'gvfzcyhvmsnbgkulsqrzeekmjkc', 'cajuyauvmhkrriehgwfmtqbkupysudle', 'pmcupysyllzpstolkfpdvieffxaupqtjty', 'elhlzvescbfpayngnnalzixxgunqdhx', 'cvxpgdnqcxeesk', 'etlewyipypeiiowuoewulkpalvcfe', 'ordhwrkwqq', 'wnroixlkrqnydblfrtlbywc', 'xshujuttvcdxzbetuvifiqi', 'meqqxqhntkvzwoptnwskdgsxsgjdawe', 'dnmicrfshqnzosxhnrftxxeifoqlnfdhheg']) from system.numbers limit 10;
RENAME TABLE test_01150.t1 TO test_01150.t2_tmp, test_01150.t2 TO test_01150.t1, test_01150.t2_tmp TO test_01150.t2
select sipHash128ReferenceKeyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16)) == sipHash128Reference(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16));
SELECT 'Running test stateless/01822_short_circuit.sql from pid=1726' 
INSERT INTO test_01193_18429.table_1_335 VALUES 
SELECT t.t.t as e, toTypeName(e) FROM nnna FULL JOIN nnnb USING (t.t.t);
SELECT '1M with 0', length(maxMerge(x)) from (select CAST(unhex('00001000') || randomString(0x00100000 - 1) || '\0', 'AggregateFunction(max, String)') as x);
DROP DATABASE IF EXISTS test_ndckc4zc 
CREATE TABLE test_01193_18429.table_9_588 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE rmt1 (`n` int, `m` int, `k` int) ENGINE = ReplicatedMergeTree('/test/02446/{database}/rmt', '1') ORDER BY n SETTINGS storage_policy = 's3_cache', allow_remote_fs_zero_copy_replication = 1, old_parts_lifetime = 0, cleanup_delay_period = 0, max_cleanup_delay_period = 1, cleanup_delay_period_random_add = 1, min_bytes_for_wide_part = 0, index_granularity = 5976, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 18397, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 7532255933, index_granularity_bytes = 24659542, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 79469, primary_key_compress_block_size = 82577
select 'dictGetOrDefault', 'complex_hashed_decimals' as dict_name, tuple(toUInt64(0)) as k, dictGetOrDefault(dict_name, 'd32', k, toDecimal32(42, 4)), dictGetOrDefault(dict_name, 'd64', k, toDecimal64(42, 6)), dictGetOrDefault(dict_name, 'd128', k, toDecimal128(42, 1)), dictGetOrDefault(dict_name, ('d32', 'd64', 'd128'), k, (toDecimal32(42, 4), toDecimal64(42, 6), toDecimal128(42, 1)));
SELECT mapExtractKeyLike(NULL, NULL, NULL);
SELECT uniq(NULL) FROM `test_1373z71y`.`t1` WITH TOTALS
CREATE TABLE test_305D353C2F2F337440422C4D6147773725405F595C4F4C7C736E687E364A655C784D275C6D6A2360(x UInt8) Engine=Memory;
create table data_01756_signed (key Int) engine=Null;
CREATE TABLE t50 (`a` Int, `b` Int, `s` String) ENGINE = MergeTree ORDER BY a SETTINGS index_granularity = 50, index_granularity_bytes = 1000, min_index_granularity_bytes = 500, min_bytes_for_wide_part = 140190416, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 4557, prefer_fetch_merged_part_size_threshold = 4640281828, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 47753, primary_key_compress_block_size = 18277
SELECT * FROM replica1;
SET totals_mode = 'after_having_auto';
INSERT INTO test_01193_18429.table_10_290 VALUES 
DROP DATABASE IF EXISTS test_o82468m0 
SELECT Title, round(1000 * distance) FROM test_entry_distance ORDER BY ngramSearch(Title, 'ÃÂ¿ÃÂÃÂ¸ÃÂ²ÃÂµÃÂ ÃÂºÃÂ°ÃÂº ÃÂ´ÃÂµÃÂ»ÃÂ°') as distance, Title;
DROP DATABASE IF EXISTS test_fzmksche 
INSERT INTO test_01193_18429.table_4_887 VALUES 
SELECT arrayJoin(['hello', 'world']) LIKE '%l%';
EXPLAIN SYNTAX (SELECT 2 * count(uint64) - sum(uint64) From test_table);
CREATE TABLE test_01193_18429.table_1_544 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_10_305 VALUES 
select 'inner expr';
DROP DATABASE IF EXISTS test_awms3i2e 
SELECT ngramMinHash('what a cute cat.');
CREATE DATABASE IF NOT EXISTS test_zbp4l38o 
SELECT punycodeDecode('');
ALTER TABLE enum_nested_alter MODIFY COLUMN tasks.errcategory Array(Enum8( 'undefined' = 0, 'system' = 1, 'generic' = 2, 'asio.netdb' = 3, 'asio.misc' = 4, 'asio.addrinfo' = 5, 'rtb.client' = 6, 'rtb.logic' = 7, 'http.status' = 8, 'http.code' = 9)), MODIFY COLUMN tasks.status Array(Enum8('hello' = 1, 'world' = 2, 'goodbye' = 3));
INSERT INTO test_01193_18429.table_3_640 VALUES 
CREATE TABLE numbers_indexed ENGINE = MergeTree PARTITION BY bitShiftRight(number, 8) ORDER BY number SETTINGS index_granularity = 8, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.4849412739276886, replace_long_file_name_to_hash = false, max_file_name_length = 79, merge_max_block_size = 22846, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 26416738, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 74587, primary_key_compress_block_size = 12777 AS SELECT * FROM numbers(16384)
SELECT CASE WHEN (number % 2) = 0 THEN [toInt16(1), toInt16(2)] WHEN (number % 3) = 0 THEN [toInt16(2), toInt16(3)] ELSE [toInt16(3), toInt16(3)] END FROM system.numbers LIMIT 10;
INSERT INTO r10 SELECT 66
INSERT INTO test_01193_18429.table_6_413 VALUES 
CREATE table t1 (v1 IntervalMinute) ENGINE = Memory;
INSERT INTO test_01193_18429.table_8_886 VALUES 
SELECT * FROM system.events FORMAT Parquet
INSERT INTO r4 SELECT 29
INSERT INTO test_02908_r1_215 SELECT rand64() FROM numbers(5);
select (1 ? (toUInt16(0) as i) : toInt16(1)) = i;
SELECT id, haystack, 'l', replacement, replaceOne(haystack, 'l', replacement) FROM test_tab ORDER BY id;
INSERT INTO enum (x) VALUES 
attach table mut;
CREATE INDEX idx_tab3_1 ON tab3 (col0,col4 DESC,col1);
select makeDateTime64(1991, 8, 24, 21, 4, 0, 1234, 9, 'CET');
SELECT ngramMinHashCaseInsensitive('');
set replication_alter_partitions_sync=0;
select 1 = multiMatchAny(materialize('mznihnmshftvnmmhnrulizzpslq'), materialize(['nrul', 'mshftvnmmhnr', 'z', 'mhnrulizzps', 'hftvnmmhnrul', 'ihnmshftvnmmhnrulizzp', 'izz', '', 'uli', 'nihnmshftvnmmhnru', 'hnrulizzp', 'nrulizz'])) from system.numbers limit 10;
INSERT INTO test_01193_18429.table_10_237 VALUES 
SELECT '87' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ffff:fe00::')))
SELECT x = 0x1.f7ced916872b0p-4 FROM t;
SELECT 'Running test stateless/00098_3_union_all.sql from pid=1715' 
INSERT INTO nested SELECT number, number % 2, range(number % 10) FROM system.numbers LIMIT 100000;
INSERT INTO test_01193_18429.table_7_8 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN [toInt8(1), toInt8(2)] WHEN (number % 3) = 0 THEN [toUInt8(2), toUInt8(3)] ELSE [toInt8(3), toInt8(3)] END FROM system.numbers LIMIT 10;
SELECT CASE WHEN (number % 2) = 0 THEN toInt16(1) WHEN (number % 3) = 0 THEN toUInt16(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_8_255 VALUES 
SELECT sum(ignore(bitTest(number, 65))) FROM numbers(10);
select 'where id % 200 < 0:';
CREATE TABLE test_414D7B48673D44716F495339423857712E502D595F6428464F5B652B464D6B43293E2725562E6D28(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_1g07sip1 
SELECT * FROM system.replication_queue LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
CREATE TABLE test_01193_18429.table_3_529 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE morton_numbers_2_02457 (`n1` UInt64, `n2` UInt64, `n3` UInt64, `n4` UInt64) ENGINE = MergeTree ORDER BY n1 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 24044022, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 1762, prefer_fetch_merged_part_size_threshold = 7331804285, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 47, min_merge_bytes_to_use_direct_io = 10737418240, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 78426, primary_key_compress_block_size = 76680
DROP DATABASE IF EXISTS test_muru23j7 
SELECT generateUUIDv4('');
EXPLAIN PIPELINE SELECT b, c FROM t_fixed_prefix WHERE bitNot(a) = 1 ORDER BY b, c SETTINGS optimize_read_in_order = 1
SELECT 'xn--80aaa0ahbbeh4c' AS ascii, idnaDecode(ascii) AS unicode, idnaEncode(unicode) AS original, tryIdnaEncode(unicode) AS original_try;
SYSTEM SYNC REPLICA concurrent_alter_mt_2 STRICT
CREATE TABLE file (x UInt64) ENGINE = File(JSONStringsEachRow, 'test_ztjtures/data.JSONStringsEachRow.lz4')
ALTER TABLE concurrent_alter_column ADD COLUMN c412 DOUBLE;
SYSTEM SYNC REPLICA replica_01108_2_tmp
SELECT * FROM t0 ANY LEFT JOIN t1 ON t1.x = t0.x;
CREATE TABLE test_01193_18429.table_1_195 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT sumIfArrayIf([1, NULL], [1, 0], 1) AS x FROM remote('127.0.0.{1,2}', numbers(3));
SELECT 'Running test stateless/02481_analyzer_join_alias_unknown_identifier_crash.sql from pid=1726' 
SELECT age('second', toDateTime64('2023-03-01 19:18:36.999', 3, 'UTC'), toDateTime64('2023-03-01 19:18:41.001', 3, 'UTC'));
CREATE TABLE test_01193_18429.table_6_626 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT -32768, 2147483649, -32768 = 2147483649, -32768 != 2147483649, -32768 < 2147483649, -32768 <= 2147483649, -32768 > 2147483649, -32768 >= 2147483649, 2147483649 = -32768, 2147483649 != -32768, 2147483649 < -32768, 2147483649 <= -32768, 2147483649 > -32768, 2147483649 >= -32768 , toInt16(-32768) = toUInt32(2147483649), toInt16(-32768) != toUInt32(2147483649), toInt16(-32768) < toUInt32(2147483649), toInt16(-32768) <= toUInt32(2147483649), toInt16(-32768) > toUInt32(2147483649), toInt16(-32768) >= toUInt32(2147483649), toUInt32(2147483649) = toInt16(-32768), toUInt32(2147483649) != toInt16(-32768), toUInt32(2147483649) < toInt16(-32768), toUInt32(2147483649) <= toInt16(-32768), toUInt32(2147483649) > toInt16(-32768), toUInt32(2147483649) >= toInt16(-32768) , toInt16(-32768) = toUInt64(2147483649), toInt16(-32768) != toUInt64(2147483649), toInt16(-32768) < toUInt64(2147483649), toInt16(-32768) <= toUInt64(2147483649), toInt16(-32768) > toUInt64(2147483649), toInt16(-32768) >= toUInt64(2147483649), toUInt64(2147483649) = toInt16(-32768), toUInt64(2147483649) != toInt16(-32768), toUInt64(2147483649) < toInt16(-32768), toUInt64(2147483649) <= toInt16(-32768), toUInt64(2147483649) > toInt16(-32768), toUInt64(2147483649) >= toInt16(-32768) , toInt16(-32768) = toInt64(2147483649), toInt16(-32768) != toInt64(2147483649), toInt16(-32768) < toInt64(2147483649), toInt16(-32768) <= toInt64(2147483649), toInt16(-32768) > toInt64(2147483649), toInt16(-32768) >= toInt64(2147483649), toInt64(2147483649) = toInt16(-32768), toInt64(2147483649) != toInt16(-32768), toInt64(2147483649) < toInt16(-32768), toInt64(2147483649) <= toInt16(-32768), toInt64(2147483649) > toInt16(-32768), toInt64(2147483649) >= toInt16(-32768) , toInt32(-32768) = toUInt32(2147483649), toInt32(-32768) != toUInt32(2147483649), toInt32(-32768) < toUInt32(2147483649), toInt32(-32768) <= toUInt32(2147483649), toInt32(-32768) > toUInt32(2147483649), toInt32(-32768) >= toUInt32(2147483649), toUInt32(2147483649) = toInt32(-32768), toUInt32(2147483649) != toInt32(-32768), toUInt32(2147483649) < toInt32(-32768), toUInt32(2147483649) <= toInt32(-32768), toUInt32(2147483649) > toInt32(-32768), toUInt32(2147483649) >= toInt32(-32768) , toInt32(-32768) = toUInt64(2147483649), toInt32(-32768) != toUInt64(2147483649), toInt32(-32768) < toUInt64(2147483649), toInt32(-32768) <= toUInt64(2147483649), toInt32(-32768) > toUInt64(2147483649), toInt32(-32768) >= toUInt64(2147483649), toUInt64(2147483649) = toInt32(-32768), toUInt64(2147483649) != toInt32(-32768), toUInt64(2147483649) < toInt32(-32768), toUInt64(2147483649) <= toInt32(-32768), toUInt64(2147483649) > toInt32(-32768), toUInt64(2147483649) >= toInt32(-32768) , toInt32(-32768) = toInt64(2147483649), toInt32(-32768) != toInt64(2147483649), toInt32(-32768) < toInt64(2147483649), toInt32(-32768) <= toInt64(2147483649), toInt32(-32768) > toInt64(2147483649), toInt32(-32768) >= toInt64(2147483649), toInt64(2147483649) = toInt32(-32768), toInt64(2147483649) != toInt32(-32768), toInt64(2147483649) < toInt32(-32768), toInt64(2147483649) <= toInt32(-32768), toInt64(2147483649) > toInt32(-32768), toInt64(2147483649) >= toInt32(-32768) , toInt64(-32768) = toUInt32(2147483649), toInt64(-32768) != toUInt32(2147483649), toInt64(-32768) < toUInt32(2147483649), toInt64(-32768) <= toUInt32(2147483649), toInt64(-32768) > toUInt32(2147483649), toInt64(-32768) >= toUInt32(2147483649), toUInt32(2147483649) = toInt64(-32768), toUInt32(2147483649) != toInt64(-32768), toUInt32(2147483649) < toInt64(-32768), toUInt32(2147483649) <= toInt64(-32768), toUInt32(2147483649) > toInt64(-32768), toUInt32(2147483649) >= toInt64(-32768) , toInt64(-32768) = toUInt64(2147483649), toInt64(-32768) != toUInt64(2147483649), toInt64(-32768) < toUInt64(2147483649), toInt64(-32768) <= toUInt64(2147483649), toInt64(-32768) > toUInt64(2147483649), toInt64(-32768) >= toUInt64(2147483649), toUInt64(2147483649) = toInt64(-32768), toUInt64(2147483649) != toInt64(-32768), toUInt64(2147483649) < toInt64(-32768), toUInt64(2147483649) <= toInt64(-32768), toUInt64(2147483649) > toInt64(-32768), toUInt64(2147483649) >= toInt64(-32768) , toInt64(-32768) = toInt64(2147483649), toInt64(-32768) != toInt64(2147483649), toInt64(-32768) < toInt64(2147483649), toInt64(-32768) <= toInt64(2147483649), toInt64(-32768) > toInt64(2147483649), toInt64(-32768) >= toInt64(2147483649), toInt64(2147483649) = toInt64(-32768), toInt64(2147483649) != toInt64(-32768), toInt64(2147483649) < toInt64(-32768), toInt64(2147483649) <= toInt64(-32768), toInt64(2147483649) > toInt64(-32768), toInt64(2147483649) >= toInt64(-32768) 
CREATE TABLE test_01193_18429.table_3_894 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_3_193 VALUES 
SELECT count() FROM system.parts WHERE database = currentDatabase() AND table = 'with_lonely' AND partition = '2022-10-29' AND active
SET custom_null = NULL;
CREATE TABLE test_01193_18429.table_5_962 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select makeDateTime(1924, 12, 31, 23, 59, 59, 'UTC');
INSERT INTO src_2 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 91
insert into test_table_insert values
CREATE DATABASE IF NOT EXISTS test_uicmzzjl 
CREATE TABLE test_5D735F46725C55313F6853334622584A3D3D4B57406931396B70204E5F5531555F407C256B484755(x UInt8) Engine=Memory;
SELECT subtractNanoseconds(NULL, NULL);
OPTIMIZE TABLE t_vertical_merge_memory FINAL;
select x from table_1 where x != 3 settings additional_table_filters={'table_1' : 'x != 2'};
SELECT read_rows==4 from system.query_log WHERE query_kind ='Select' AND current_database = currentDatabase() AND endsWith(trimRight(query), 'SELECT * FROM tab WHERE s LIKE \'%01%\' ORDER BY k;') AND type='QueryFinish' AND result_rows==2 LIMIT 1;
DROP DATABASE IF EXISTS test_74vtwf4v 
DROP DATABASE IF EXISTS test_k8cz8kj4 
INSERT INTO r3 SELECT 69 % 10 = 3 ? 69 - 1 : 69
DROP TABLE IF EXISTS bug_14144;
SELECT count() == 33333 FROM null_in_subquery WHERE i in (SELECT i FROM null_in_subquery WHERE dt = 2);
CREATE TABLE test_02908_r2_169 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_169', 'r2') ORDER BY tuple()
DROP DATABASE IF EXISTS test_zcx6015b 
SET insert_allow_materialized_columns=0;
CREATE TABLE test_01193_18429.table_4_872 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
ALTER TABLE alter_column_02126 ALTER COLUMN x TYPE Float32;
INSERT INTO test_01193_18429.table_6_917 VALUES 
CREATE TABLE test_01193_18429.table_1_251 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_5C723C45312F7A364C5F4A4F722466343D4D2A43534532583139434F5B412A5A5352577323272F52(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_j90nzfdw 
CREATE TABLE test_47237B3D3B403F6257465645776440313A265775462A6E755D6A4424666E336B7D5F406A4C3F3B41(x UInt8) Engine=Memory;
ALTER TABLE nullable_00571 ADD COLUMN n Nullable(UInt64) DEFAULT NULL;
SELECT isZeroOrNull(-1);
SELECT sum(((uint64 AS m) - (1 AS n)) AS i) j from test_table where m > 0 and n > 0 and i > 0 having j > 0;
select formatDateTime(toDateTime64('1969-12-31 23:59:59.999', 3, 'UTC'), '%F %T.%f');
DROP DATABASE IF EXISTS test_tlfmbpxw 
SELECT randCanonical([NULL]);
DROP DATABASE IF EXISTS test_rzpzqju6 
CREATE TABLE test_01193_18429.table_3_88 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP TABLE IF EXISTS t2_01361;
INSERT INTO test_01193_18429.table_9_129 VALUES 
ALTER TABLE test MODIFY COLUMN x Enum('hello' = 1, 'world' = 2, 'goodbye' = 3);
SELECT multiIf((number % 2) = 0, toUInt16(1), (number % 3) = 0, toFloat32(2), toUInt16(3)) FROM system.numbers LIMIT 10;
SELECT 'After restart';
SELECT -128, -32767, -128 = -32767, -128 != -32767, -128 < -32767, -128 <= -32767, -128 > -32767, -128 >= -32767, -32767 = -128, -32767 != -128, -32767 < -128, -32767 <= -128, -32767 > -128, -32767 >= -128 , toInt8(-128) = toInt16(-32767), toInt8(-128) != toInt16(-32767), toInt8(-128) < toInt16(-32767), toInt8(-128) <= toInt16(-32767), toInt8(-128) > toInt16(-32767), toInt8(-128) >= toInt16(-32767), toInt16(-32767) = toInt8(-128), toInt16(-32767) != toInt8(-128), toInt16(-32767) < toInt8(-128), toInt16(-32767) <= toInt8(-128), toInt16(-32767) > toInt8(-128), toInt16(-32767) >= toInt8(-128) , toInt8(-128) = toInt32(-32767), toInt8(-128) != toInt32(-32767), toInt8(-128) < toInt32(-32767), toInt8(-128) <= toInt32(-32767), toInt8(-128) > toInt32(-32767), toInt8(-128) >= toInt32(-32767), toInt32(-32767) = toInt8(-128), toInt32(-32767) != toInt8(-128), toInt32(-32767) < toInt8(-128), toInt32(-32767) <= toInt8(-128), toInt32(-32767) > toInt8(-128), toInt32(-32767) >= toInt8(-128) , toInt8(-128) = toInt64(-32767), toInt8(-128) != toInt64(-32767), toInt8(-128) < toInt64(-32767), toInt8(-128) <= toInt64(-32767), toInt8(-128) > toInt64(-32767), toInt8(-128) >= toInt64(-32767), toInt64(-32767) = toInt8(-128), toInt64(-32767) != toInt8(-128), toInt64(-32767) < toInt8(-128), toInt64(-32767) <= toInt8(-128), toInt64(-32767) > toInt8(-128), toInt64(-32767) >= toInt8(-128) , toInt16(-128) = toInt16(-32767), toInt16(-128) != toInt16(-32767), toInt16(-128) < toInt16(-32767), toInt16(-128) <= toInt16(-32767), toInt16(-128) > toInt16(-32767), toInt16(-128) >= toInt16(-32767), toInt16(-32767) = toInt16(-128), toInt16(-32767) != toInt16(-128), toInt16(-32767) < toInt16(-128), toInt16(-32767) <= toInt16(-128), toInt16(-32767) > toInt16(-128), toInt16(-32767) >= toInt16(-128) , toInt16(-128) = toInt32(-32767), toInt16(-128) != toInt32(-32767), toInt16(-128) < toInt32(-32767), toInt16(-128) <= toInt32(-32767), toInt16(-128) > toInt32(-32767), toInt16(-128) >= toInt32(-32767), toInt32(-32767) = toInt16(-128), toInt32(-32767) != toInt16(-128), toInt32(-32767) < toInt16(-128), toInt32(-32767) <= toInt16(-128), toInt32(-32767) > toInt16(-128), toInt32(-32767) >= toInt16(-128) , toInt16(-128) = toInt64(-32767), toInt16(-128) != toInt64(-32767), toInt16(-128) < toInt64(-32767), toInt16(-128) <= toInt64(-32767), toInt16(-128) > toInt64(-32767), toInt16(-128) >= toInt64(-32767), toInt64(-32767) = toInt16(-128), toInt64(-32767) != toInt16(-128), toInt64(-32767) < toInt16(-128), toInt64(-32767) <= toInt16(-128), toInt64(-32767) > toInt16(-128), toInt64(-32767) >= toInt16(-128) , toInt32(-128) = toInt16(-32767), toInt32(-128) != toInt16(-32767), toInt32(-128) < toInt16(-32767), toInt32(-128) <= toInt16(-32767), toInt32(-128) > toInt16(-32767), toInt32(-128) >= toInt16(-32767), toInt16(-32767) = toInt32(-128), toInt16(-32767) != toInt32(-128), toInt16(-32767) < toInt32(-128), toInt16(-32767) <= toInt32(-128), toInt16(-32767) > toInt32(-128), toInt16(-32767) >= toInt32(-128) , toInt32(-128) = toInt32(-32767), toInt32(-128) != toInt32(-32767), toInt32(-128) < toInt32(-32767), toInt32(-128) <= toInt32(-32767), toInt32(-128) > toInt32(-32767), toInt32(-128) >= toInt32(-32767), toInt32(-32767) = toInt32(-128), toInt32(-32767) != toInt32(-128), toInt32(-32767) < toInt32(-128), toInt32(-32767) <= toInt32(-128), toInt32(-32767) > toInt32(-128), toInt32(-32767) >= toInt32(-128) , toInt32(-128) = toInt64(-32767), toInt32(-128) != toInt64(-32767), toInt32(-128) < toInt64(-32767), toInt32(-128) <= toInt64(-32767), toInt32(-128) > toInt64(-32767), toInt32(-128) >= toInt64(-32767), toInt64(-32767) = toInt32(-128), toInt64(-32767) != toInt32(-128), toInt64(-32767) < toInt32(-128), toInt64(-32767) <= toInt32(-128), toInt64(-32767) > toInt32(-128), toInt64(-32767) >= toInt32(-128) , toInt64(-128) = toInt16(-32767), toInt64(-128) != toInt16(-32767), toInt64(-128) < toInt16(-32767), toInt64(-128) <= toInt16(-32767), toInt64(-128) > toInt16(-32767), toInt64(-128) >= toInt16(-32767), toInt16(-32767) = toInt64(-128), toInt16(-32767) != toInt64(-128), toInt16(-32767) < toInt64(-128), toInt16(-32767) <= toInt64(-128), toInt16(-32767) > toInt64(-128), toInt16(-32767) >= toInt64(-128) , toInt64(-128) = toInt32(-32767), toInt64(-128) != toInt32(-32767), toInt64(-128) < toInt32(-32767), toInt64(-128) <= toInt32(-32767), toInt64(-128) > toInt32(-32767), toInt64(-128) >= toInt32(-32767), toInt32(-32767) = toInt64(-128), toInt32(-32767) != toInt64(-128), toInt32(-32767) < toInt64(-128), toInt32(-32767) <= toInt64(-128), toInt32(-32767) > toInt64(-128), toInt32(-32767) >= toInt64(-128) , toInt64(-128) = toInt64(-32767), toInt64(-128) != toInt64(-32767), toInt64(-128) < toInt64(-32767), toInt64(-128) <= toInt64(-32767), toInt64(-128) > toInt64(-32767), toInt64(-128) >= toInt64(-32767), toInt64(-32767) = toInt64(-128), toInt64(-32767) != toInt64(-128), toInt64(-32767) < toInt64(-128), toInt64(-32767) <= toInt64(-128), toInt64(-32767) > toInt64(-128), toInt64(-32767) >= toInt64(-128) 
INSERT INTO test_01193_18429.table_3_789 VALUES 
INSERT INTO src_2 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 46
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), N >= D as r FORMAT CSV;
SELECT CASE WHEN (number % 2) = 0 THEN toFloat64(1) WHEN (number % 3) = 0 THEN toUInt8(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
CREATE TABLE db_hang.test (`A` Int64) ENGINE = MergeTree ORDER BY A SETTINGS index_granularity = 4110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 11569, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 824121, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 28317023, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 70740, primary_key_compress_block_size = 71289
SELECT 32767, 9223372036854775807, 32767 = 9223372036854775807, 32767 != 9223372036854775807, 32767 < 9223372036854775807, 32767 <= 9223372036854775807, 32767 > 9223372036854775807, 32767 >= 9223372036854775807, 9223372036854775807 = 32767, 9223372036854775807 != 32767, 9223372036854775807 < 32767, 9223372036854775807 <= 32767, 9223372036854775807 > 32767, 9223372036854775807 >= 32767 , toUInt16(32767) = toUInt64(9223372036854775807), toUInt16(32767) != toUInt64(9223372036854775807), toUInt16(32767) < toUInt64(9223372036854775807), toUInt16(32767) <= toUInt64(9223372036854775807), toUInt16(32767) > toUInt64(9223372036854775807), toUInt16(32767) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toUInt16(32767), toUInt64(9223372036854775807) != toUInt16(32767), toUInt64(9223372036854775807) < toUInt16(32767), toUInt64(9223372036854775807) <= toUInt16(32767), toUInt64(9223372036854775807) > toUInt16(32767), toUInt64(9223372036854775807) >= toUInt16(32767) , toUInt16(32767) = toInt64(9223372036854775807), toUInt16(32767) != toInt64(9223372036854775807), toUInt16(32767) < toInt64(9223372036854775807), toUInt16(32767) <= toInt64(9223372036854775807), toUInt16(32767) > toInt64(9223372036854775807), toUInt16(32767) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toUInt16(32767), toInt64(9223372036854775807) != toUInt16(32767), toInt64(9223372036854775807) < toUInt16(32767), toInt64(9223372036854775807) <= toUInt16(32767), toInt64(9223372036854775807) > toUInt16(32767), toInt64(9223372036854775807) >= toUInt16(32767) , toInt16(32767) = toUInt64(9223372036854775807), toInt16(32767) != toUInt64(9223372036854775807), toInt16(32767) < toUInt64(9223372036854775807), toInt16(32767) <= toUInt64(9223372036854775807), toInt16(32767) > toUInt64(9223372036854775807), toInt16(32767) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toInt16(32767), toUInt64(9223372036854775807) != toInt16(32767), toUInt64(9223372036854775807) < toInt16(32767), toUInt64(9223372036854775807) <= toInt16(32767), toUInt64(9223372036854775807) > toInt16(32767), toUInt64(9223372036854775807) >= toInt16(32767) , toInt16(32767) = toInt64(9223372036854775807), toInt16(32767) != toInt64(9223372036854775807), toInt16(32767) < toInt64(9223372036854775807), toInt16(32767) <= toInt64(9223372036854775807), toInt16(32767) > toInt64(9223372036854775807), toInt16(32767) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toInt16(32767), toInt64(9223372036854775807) != toInt16(32767), toInt64(9223372036854775807) < toInt16(32767), toInt64(9223372036854775807) <= toInt16(32767), toInt64(9223372036854775807) > toInt16(32767), toInt64(9223372036854775807) >= toInt16(32767) , toUInt32(32767) = toUInt64(9223372036854775807), toUInt32(32767) != toUInt64(9223372036854775807), toUInt32(32767) < toUInt64(9223372036854775807), toUInt32(32767) <= toUInt64(9223372036854775807), toUInt32(32767) > toUInt64(9223372036854775807), toUInt32(32767) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toUInt32(32767), toUInt64(9223372036854775807) != toUInt32(32767), toUInt64(9223372036854775807) < toUInt32(32767), toUInt64(9223372036854775807) <= toUInt32(32767), toUInt64(9223372036854775807) > toUInt32(32767), toUInt64(9223372036854775807) >= toUInt32(32767) , toUInt32(32767) = toInt64(9223372036854775807), toUInt32(32767) != toInt64(9223372036854775807), toUInt32(32767) < toInt64(9223372036854775807), toUInt32(32767) <= toInt64(9223372036854775807), toUInt32(32767) > toInt64(9223372036854775807), toUInt32(32767) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toUInt32(32767), toInt64(9223372036854775807) != toUInt32(32767), toInt64(9223372036854775807) < toUInt32(32767), toInt64(9223372036854775807) <= toUInt32(32767), toInt64(9223372036854775807) > toUInt32(32767), toInt64(9223372036854775807) >= toUInt32(32767) , toInt32(32767) = toUInt64(9223372036854775807), toInt32(32767) != toUInt64(9223372036854775807), toInt32(32767) < toUInt64(9223372036854775807), toInt32(32767) <= toUInt64(9223372036854775807), toInt32(32767) > toUInt64(9223372036854775807), toInt32(32767) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toInt32(32767), toUInt64(9223372036854775807) != toInt32(32767), toUInt64(9223372036854775807) < toInt32(32767), toUInt64(9223372036854775807) <= toInt32(32767), toUInt64(9223372036854775807) > toInt32(32767), toUInt64(9223372036854775807) >= toInt32(32767) , toInt32(32767) = toInt64(9223372036854775807), toInt32(32767) != toInt64(9223372036854775807), toInt32(32767) < toInt64(9223372036854775807), toInt32(32767) <= toInt64(9223372036854775807), toInt32(32767) > toInt64(9223372036854775807), toInt32(32767) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toInt32(32767), toInt64(9223372036854775807) != toInt32(32767), toInt64(9223372036854775807) < toInt32(32767), toInt64(9223372036854775807) <= toInt32(32767), toInt64(9223372036854775807) > toInt32(32767), toInt64(9223372036854775807) >= toInt32(32767) , toUInt64(32767) = toUInt64(9223372036854775807), toUInt64(32767) != toUInt64(9223372036854775807), toUInt64(32767) < toUInt64(9223372036854775807), toUInt64(32767) <= toUInt64(9223372036854775807), toUInt64(32767) > toUInt64(9223372036854775807), toUInt64(32767) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toUInt64(32767), toUInt64(9223372036854775807) != toUInt64(32767), toUInt64(9223372036854775807) < toUInt64(32767), toUInt64(9223372036854775807) <= toUInt64(32767), toUInt64(9223372036854775807) > toUInt64(32767), toUInt64(9223372036854775807) >= toUInt64(32767) , toUInt64(32767) = toInt64(9223372036854775807), toUInt64(32767) != toInt64(9223372036854775807), toUInt64(32767) < toInt64(9223372036854775807), toUInt64(32767) <= toInt64(9223372036854775807), toUInt64(32767) > toInt64(9223372036854775807), toUInt64(32767) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toUInt64(32767), toInt64(9223372036854775807) != toUInt64(32767), toInt64(9223372036854775807) < toUInt64(32767), toInt64(9223372036854775807) <= toUInt64(32767), toInt64(9223372036854775807) > toUInt64(32767), toInt64(9223372036854775807) >= toUInt64(32767) , toInt64(32767) = toUInt64(9223372036854775807), toInt64(32767) != toUInt64(9223372036854775807), toInt64(32767) < toUInt64(9223372036854775807), toInt64(32767) <= toUInt64(9223372036854775807), toInt64(32767) > toUInt64(9223372036854775807), toInt64(32767) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toInt64(32767), toUInt64(9223372036854775807) != toInt64(32767), toUInt64(9223372036854775807) < toInt64(32767), toUInt64(9223372036854775807) <= toInt64(32767), toUInt64(9223372036854775807) > toInt64(32767), toUInt64(9223372036854775807) >= toInt64(32767) , toInt64(32767) = toInt64(9223372036854775807), toInt64(32767) != toInt64(9223372036854775807), toInt64(32767) < toInt64(9223372036854775807), toInt64(32767) <= toInt64(9223372036854775807), toInt64(32767) > toInt64(9223372036854775807), toInt64(32767) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toInt64(32767), toInt64(9223372036854775807) != toInt64(32767), toInt64(9223372036854775807) < toInt64(32767), toInt64(9223372036854775807) <= toInt64(32767), toInt64(9223372036854775807) > toInt64(32767), toInt64(9223372036854775807) >= toInt64(32767) 
CREATE TABLE test_01193_18429.table_10_802 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP TABLE IF EXISTS composite_partition_key
CREATE DATABASE IF NOT EXISTS test_3kw2nlpv 
CREATE DATABASE IF NOT EXISTS test_mtcmayve 
select toDateTime64(toDateTime(1), 2, 'Asia/Istanbul');
SELECT age('second', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), toDateTime64('1927-01-01 00:10:00', 0, 'UTC'));
select makeDate(2282,1,1);
SELECT 1234567 % 123;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt32(1), toInt32(2)] WHEN (number % 3) = 0 THEN [toFloat32(2), toFloat32(3)] ELSE [toInt16(3), toInt16(3)] END FROM system.numbers LIMIT 10;
SELECT 4, 'Hello',bin(bitShiftLeft('Hello', 4));
SELECT COUNT(*) FROM adaptive_granularity_alter1;
CREATE TABLE test_01193_18429.table_10_634 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP TABLE mutations
CREATE TABLE test_01193_18429.table_10_298 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select toStartOfISOYear(x1) from t1;
SELECT x, arrayJoin(x) FROM (SELECT materialize([(1, 2), (3, 4), (5, 6)]) AS x);
CREATE DATABASE IF NOT EXISTS test_d6qj0g2v 
SELECT toIntervalMillisecond(NULL, NULL, NULL);
SELECT 'Running test stateless/00956_sensitive_data_masking.sh from pid=1720' 
CREATE TABLE test_01193_18429.table_3_422 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select hasAll([1], []);
SELECT dictHas('02183_hashed_array_dictionary', 1);
SELECT 49;
SELECT * FROM fill ORDER BY date DESC WITH FILL, val WITH FILL FROM 1 TO 6;
INSERT INTO test_01193_18429.table_4_267 VALUES 
CREATE TABLE test_2F45276D487E5E4A70444E704B5B666F4976563170215957625A5D7E2B6E37566F372F56396F2321(x UInt8) Engine=Memory;
 explain select number from ( select number from numbers(5) where number in (select 1 + number from numbers(3)) ) where number != 2 settings enable_optimize_predicate_expression=0
drop table sensitive;
CREATE TABLE test_01193_18429.table_6_372 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT toTypeName(arrayAvg([toUInt8(0)])), toTypeName(arrayAvg([toUInt16(0)])), toTypeName(arrayAvg([toUInt32(0)])), toTypeName(arrayAvg([toUInt64(0)]));
drop table if exists replacing_m3;
SELECT count() < 10 FROM system.warnings
INSERT INTO test_01193_18429.table_2_769 VALUES 
SELECT 'SETTINGS optimize_move_to_prewhere= 1';
INSERT INTO test_01193_18429.table_8_337 VALUES 
SELECT `UserID` FROM `test_c5zukzwt`.`users` WHERE `UserID` IN ((SELECT arrayJoin([1468013291393583084, 1321770221388956068])) AS `_subquery3850`)
DROP TABLE IF EXISTS columns_with_multiple_streams_compact;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt16(1), toInt16(2)] WHEN (number % 3) = 0 THEN [toUInt32(2), toUInt32(3)] ELSE [toUInt16(3), toUInt16(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_02908_r2_233 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_233', 'r2') ORDER BY tuple()
CREATE TABLE test_78243E77285F653C7D6133592749503E40542C723A716B6D6D5A4720404E3E3C644D263B56723E37(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_qsiw6xnv 
alter table many_mutations delete where y = 692 * 2 settings mutations_sync = 0;
CREATE TABLE test_01193_18429.table_5_339 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP TABLE IF EXISTS optimize_final;
WITH 'aes-256-ecb' AS mode, 'test_key________________________' AS key SELECT mode, encrypt(mode, '[HIDDEN]')
ALTER TABLE src_4 MOVE PARTITION 9 TO TABLE dst_4
CREATE DATABASE IF NOT EXISTS test_voisju11 
CREATE TABLE test_01193_18429.table_8_642 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT current_schemas(true) AS result;
CREATE USER session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_sha256_password_two_profiles_no_roles IDENTIFIED WITH sha256_password
CREATE TABLE dPRyjSea5iiiY.array_test (arr Array(Int32)) ENGINE = Memory
with '2018-01-12 22:33:44.55' as s, toDateTime64(s, 6) as datetime64 SELECT formatDateTimeInJodaSyntax(datetime64, 'SSSSSSSSSS');
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (41 < 96 AND 96 > 0 ? 41 : 0)), throwIf(last != (41 < 96 AND 96 > 0 ? least(96 - 1, 41 + 96 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(96) LIMIT 41, 96);
INSERT INTO src VALUES /* (69, 2) */ 
SELECT avgWeighted(x, w) FROM values('x UInt32, w Int64', (4, 1), (1, 0), (10, 2));
SELECT a.*, b.* FROM ( SELECT number AS k FROM system.numbers LIMIT 10 ) AS a ALL INNER JOIN ( SELECT intDiv(number, 2) AS k, number AS joined FROM system.numbers LIMIT 10 ) AS b USING k ORDER BY k, joined;
CREATE TABLE array_element_test (arr Array(Int32), id Int32) ENGINE = Memory;
SELECT * FROM ( SELECT ([toString(number % 2)] :: Array(LowCardinality(String))) AS item_id, count() FROM numbers(3) GROUP BY item_id WITH TOTALS ) AS l FULL JOIN ( SELECT ([toString((number % 2) * 2)] :: Array(String)) AS item_id, count() FROM numbers(3) GROUP BY item_id WITH TOTALS ) AS r ON l.item_id = r.item_id ORDER BY 1,2,3 ;
SELECT arrayJoin([1, 2, 3]) AS arr, 'hello' AS s1, 'world' AS s2 FORMAT TSVRaw;
DESCRIBE TABLE test_01532_2;
INSERT INTO test_01193_18429.table_4_731 VALUES 
INSERT INTO test_01193_18429.table_6_217 VALUES 
ALTER PROFILE s3_01294 SETTINGS NONE;
CREATE TABLE test_6E436D693667262B2066312D3E423F70535322423D4F4873455D6D7A6D2A64725B4C7C265F505D4F(x UInt8) Engine=Memory;
SELECT xxHash32(CAST(1.2684 AS Float32)) = toUInt32(3120514536);
INSERT INTO test_01193_18429.table_7_66 VALUES 
SELECT 3.5 MOD 0;
DROP DATABASE IF EXISTS test_3nmhbwxm 
INSERT INTO test_01193_18429.table_4_402 VALUES 
SELECT [(arrayJoin([x]), x)] AS row FROM tab;
CREATE TABLE unhex_in_fix_string_table (`dt` Date, `s1` FixedString(20), `s2` String) ENGINE = MergeTree PARTITION BY dt ORDER BY tuple() SETTINGS index_granularity = 14226, min_bytes_for_wide_part = 755987123, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 49, merge_max_block_size = 16889, prefer_fetch_merged_part_size_threshold = 9409774114, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 9427836454, index_granularity_bytes = 15308916, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 58898, primary_key_compress_block_size = 16588
INSERT INTO r6 SELECT 42 % 10 = 6 ? 42 - 1 : 42
SELECT arrayEnumerate([]);
SELECT toIPv6OrDefault('');
CREATE TABLE t2 (`y` Int16, `z` Int16) ENGINE = MergeTree ORDER BY y SETTINGS index_granularity = 60001, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 13680, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 12, min_merge_bytes_to_use_direct_io = 2818909665, index_granularity_bytes = 29867841, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 87192, primary_key_compress_block_size = 55533
INSERT INTO test_01193_18429.table_8_656 VALUES 
SELECT 'Running test stateless/02014_query_parameters.sh from pid=1705' 
CREATE DATABASE IF NOT EXISTS test_bli3lsm2 
CREATE TABLE test_683C6370543A575D53346E29773D38542F52365E702A782D69367433467C2629657B4B6C35512368(x UInt8) Engine=Memory;
SELECT 9223372036854775809, -9223372036854775808, 9223372036854775809 = -9223372036854775808, 9223372036854775809 != -9223372036854775808, 9223372036854775809 < -9223372036854775808, 9223372036854775809 <= -9223372036854775808, 9223372036854775809 > -9223372036854775808, 9223372036854775809 >= -9223372036854775808, -9223372036854775808 = 9223372036854775809, -9223372036854775808 != 9223372036854775809, -9223372036854775808 < 9223372036854775809, -9223372036854775808 <= 9223372036854775809, -9223372036854775808 > 9223372036854775809, -9223372036854775808 >= 9223372036854775809 , toUInt64(9223372036854775809) = toInt64(-9223372036854775808), toUInt64(9223372036854775809) != toInt64(-9223372036854775808), toUInt64(9223372036854775809) < toInt64(-9223372036854775808), toUInt64(9223372036854775809) <= toInt64(-9223372036854775808), toUInt64(9223372036854775809) > toInt64(-9223372036854775808), toUInt64(9223372036854775809) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toUInt64(9223372036854775809), toInt64(-9223372036854775808) != toUInt64(9223372036854775809), toInt64(-9223372036854775808) < toUInt64(9223372036854775809), toInt64(-9223372036854775808) <= toUInt64(9223372036854775809), toInt64(-9223372036854775808) > toUInt64(9223372036854775809), toInt64(-9223372036854775808) >= toUInt64(9223372036854775809) 
insert into table function file('data.avro', 'Parquet', 'x UInt64') select * from numbers(10);
INSERT INTO r5 SELECT 94
INSERT INTO test_01193_18429.table_9_912 VALUES 
CREATE TABLE test_01193_18429.table_4_851 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
set max_rows_to_read = 6;
ALTER TABLE concurrent_alter_column ADD COLUMN c401 DOUBLE;
SELECT round(avg(log(2) * number), 6) AS k FROM numbers(10000000) GROUP BY number % 3, number % 2;
SELECT 'Running test stateless/02129_window_functions_disable_optimizations.sql from pid=1720' 
INSERT INTO test_01193_18429.table_9_41 VALUES 
select toValidUTF8('\xa0\xa1') from system.numbers limit 10;
SELECT count() FROM system.filesystem_cache WHERE key = '0c8ae72eaa396fd8d9e7948cb5bd58e3';
CREATE TABLE test_493C545B3B2846486077455961582079364A7A6A7136326F6E7C2053724265582B46716B76524431(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01001_rename_merge_race_condition.sh from pid=1720' 
SELECT 10, 13, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (10 < 13 AND 13 > 0 ? 10 : 0)), throwIf(last != (10 < 13 AND 13 > 0 ? least(13 - 1, 10 + 13 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 10, 13);
DROP DATABASE IF EXISTS test_kzcvw8g6 
select t1.a, t2.a, t2.b, t3.b from table1 as t1 join table2 as t2 on table1.a = table2.a join table3 as t3 on table2.b = table3.b ORDER BY t1.a;
CREATE TABLE test_table_4 (`key` UInt64, `value` UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/02962_system_sync_replica_lightweight_from_modifier_test_87x3igkp/test_table', '4') ORDER BY key SETTINGS index_granularity = 41789, min_bytes_for_wide_part = 23797492, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 26, prefer_fetch_merged_part_size_threshold = 8232197432, vertical_merge_algorithm_min_rows_to_activate = 563505, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 7613754576, index_granularity_bytes = 30142180, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 58102, primary_key_compress_block_size = 92486
SELECT 1 EXCEPT SELECT 1;
DROP DATABASE IF EXISTS test_qxqgg8w1 
SELECT 'y', * FROM (SELECT count('y'), count('y'), 2 AS x) AS t1 RIGHT JOIN (SELECT count('x'), count('y'), 3 AS x) AS t2 ON t1.x = t2.x;
SELECT count() OVER (ORDER BY number + 1) FROM numbers(10) ORDER BY number;
select multiFuzzyMatchAny(materialize('halo some wrld'), 2, materialize(['^halo.*world$', '^hello.*world$']));
SELECT age('month', toDateTime64('2015-01-02 20:30:36.200101', 6, 'UTC'), toDateTime64('2016-05-02 20:30:36.200100', 6, 'UTC'));
select 1 = multiSearchAny(materialize('abcdefgh'), ['abcde']);
INSERT INTO orders VALUES 
select tuple(toNullable(number), toNullable(number)) < tuple(number, number + 1) from numbers(1);
INSERT INTO r5 SELECT 63 % 10 = 5 ? 63 - 1 : 63
SELECT toUInt32(0) AS x, toUInt32(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
select * from format(TSV, '1\t1\n2\n\n3\t3\t3\t3') settings input_format_tsv_allow_variable_number_of_columns=1;
SELECT sipHash128('');
SELECT accurateCast(1e19, 'UInt128');
INSERT INTO test_01193_18429.table_6_236 VALUES 
SELECT toStartOfQuarter(toDateTime(1412106600), 'Asia/Tokyo');
SELECT windowFunnel(NULL, NULL, NULL);
/* ddl_entry=query-0000000164 */ SYSTEM STOP DISTRIBUTED SENDS db_01294.dist_01294
SELECT * FROM tabl_1 SETTINGS log_comment = 'ad15a651';
show create table part_moves_between_shards format TSVRaw;
select type, new_part_name from system.replication_queue where database=currentDatabase() and table='rmt2' order by new_part_name;
create table test (x UInt32, y String, d Date) engine=Memory() as select number as x, toString(number) as y, toDate(number) as d from numbers(10);
SELECT bar.a FROM (SELECT 1 AS a, 2 AS b) AS foo FULL JOIN (SELECT 1 AS a, 2 AS b) AS bar ON (foo.a = bar.b) AND (foo.b = bar.b) ORDER BY bar.a;
ATTACH TABLE test_view_00599;
select * from mt;
CREATE TABLE test_3F417326317A65705A255462375D2662312F3D45536469432E5432223526563C636C4844392F572E(x UInt8) Engine=Memory;
SELECT bitmapAndCardinality( z, bitmapBuild(cast([19,7] AS Array(UInt32))) ) FROM bitmap_column_expr_test;
SELECT table, name, error FROM system.part_log WHERE database = currentDatabase() ORDER BY table, name;
DROP DATABASE IF EXISTS test_guei4bg9 
SELECT count() FROM t_cnf_fuzz WHERE (c0 AND (NOT c3) AND (NOT c5) AND (NOT c5)) OR (c6 AND (NOT c3) AND c2 AND c5 AND (NOT c8)) OR (c4 AND c0) OR ((NOT c8) AND (NOT c1) AND c5) OR ((NOT c1) AND c3 AND (NOT c6)) OR ((NOT c6) AND (NOT c4) AND c9 AND (NOT c2) AND (NOT c1)) OR ((NOT c0)) OR (c9 AND (NOT c2) AND (NOT c4) AND c6) OR (c3) SETTINGS convert_query_to_cnf = 1
KILL MUTATION WHERE database = 'test_kzou0211' AND table = 'kill_mutation_r1' AND mutation_id = '0000000001'
CREATE TABLE empty (`key` UInt32, `val` UInt32, `date` Datetime) ENGINE = SummingMergeTree(val) PARTITION BY date ORDER BY key SETTINGS index_granularity = 30300, min_bytes_for_wide_part = 281321780, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 15968, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 788243, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 878983389, index_granularity_bytes = 24243420, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 63220, primary_key_compress_block_size = 81933
SELECT '0', '104.000000000', 0 = 104.000000000, 0 != 104.000000000, 0 < 104.000000000, 0 <= 104.000000000, 0 > 104.000000000, 0 >= 104.000000000, 104.000000000 = 0, 104.000000000 != 0, 104.000000000 < 0, 104.000000000 <= 0, 104.000000000 > 0, 104.000000000 >= 0 , toUInt8(0) = 104.000000000, toUInt8(0) != 104.000000000, toUInt8(0) < 104.000000000, toUInt8(0) <= 104.000000000, toUInt8(0) > 104.000000000, toUInt8(0) >= 104.000000000, 104.000000000 = toUInt8(0), 104.000000000 != toUInt8(0), 104.000000000 < toUInt8(0), 104.000000000 <= toUInt8(0), 104.000000000 > toUInt8(0), 104.000000000 >= toUInt8(0) , toInt8(0) = 104.000000000, toInt8(0) != 104.000000000, toInt8(0) < 104.000000000, toInt8(0) <= 104.000000000, toInt8(0) > 104.000000000, toInt8(0) >= 104.000000000, 104.000000000 = toInt8(0), 104.000000000 != toInt8(0), 104.000000000 < toInt8(0), 104.000000000 <= toInt8(0), 104.000000000 > toInt8(0), 104.000000000 >= toInt8(0) , toUInt16(0) = 104.000000000, toUInt16(0) != 104.000000000, toUInt16(0) < 104.000000000, toUInt16(0) <= 104.000000000, toUInt16(0) > 104.000000000, toUInt16(0) >= 104.000000000, 104.000000000 = toUInt16(0), 104.000000000 != toUInt16(0), 104.000000000 < toUInt16(0), 104.000000000 <= toUInt16(0), 104.000000000 > toUInt16(0), 104.000000000 >= toUInt16(0) , toInt16(0) = 104.000000000, toInt16(0) != 104.000000000, toInt16(0) < 104.000000000, toInt16(0) <= 104.000000000, toInt16(0) > 104.000000000, toInt16(0) >= 104.000000000, 104.000000000 = toInt16(0), 104.000000000 != toInt16(0), 104.000000000 < toInt16(0), 104.000000000 <= toInt16(0), 104.000000000 > toInt16(0), 104.000000000 >= toInt16(0) , toUInt32(0) = 104.000000000, toUInt32(0) != 104.000000000, toUInt32(0) < 104.000000000, toUInt32(0) <= 104.000000000, toUInt32(0) > 104.000000000, toUInt32(0) >= 104.000000000, 104.000000000 = toUInt32(0), 104.000000000 != toUInt32(0), 104.000000000 < toUInt32(0), 104.000000000 <= toUInt32(0), 104.000000000 > toUInt32(0), 104.000000000 >= toUInt32(0) , toInt32(0) = 104.000000000, toInt32(0) != 104.000000000, toInt32(0) < 104.000000000, toInt32(0) <= 104.000000000, toInt32(0) > 104.000000000, toInt32(0) >= 104.000000000, 104.000000000 = toInt32(0), 104.000000000 != toInt32(0), 104.000000000 < toInt32(0), 104.000000000 <= toInt32(0), 104.000000000 > toInt32(0), 104.000000000 >= toInt32(0) , toUInt64(0) = 104.000000000, toUInt64(0) != 104.000000000, toUInt64(0) < 104.000000000, toUInt64(0) <= 104.000000000, toUInt64(0) > 104.000000000, toUInt64(0) >= 104.000000000, 104.000000000 = toUInt64(0), 104.000000000 != toUInt64(0), 104.000000000 < toUInt64(0), 104.000000000 <= toUInt64(0), 104.000000000 > toUInt64(0), 104.000000000 >= toUInt64(0) , toInt64(0) = 104.000000000, toInt64(0) != 104.000000000, toInt64(0) < 104.000000000, toInt64(0) <= 104.000000000, toInt64(0) > 104.000000000, toInt64(0) >= 104.000000000, 104.000000000 = toInt64(0), 104.000000000 != toInt64(0), 104.000000000 < toInt64(0), 104.000000000 <= toInt64(0), 104.000000000 > toInt64(0), 104.000000000 >= toInt64(0) ;
SELECT dictHas('hashed_array_dictionary_complex_key_simple_attributes', (number, concat('id_key_', toString(number)))) FROM system.numbers LIMIT 4;
CREATE TABLE test_366B517E7E225944424A30677932275F505E6A7573203B5B7D3E5838567E5C793F763B6D294B5F44(x UInt8) Engine=Memory;
select hex(sipHash64Keyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5)));
select 'left';
ATTACH TABLE replicated_table_for_alter2;
select x'' == b'';
system sync replica rmt;
SELECT 'Running test stateless/02019_multiple_weird_with_fill.sql from pid=1724' 
drop table projection_without_key;
SELECT stddevSampOrDefaultIf(x, x > 0) FROM (SELECT 1 AS x);
SELECT toInt32(0) AS x, toDecimal64(1, 0) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
DROP DATABASE IF EXISTS test_tbxsh4s5 
CREATE TABLE test_02908_r1_154 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_154', 'r1') ORDER BY tuple()
set max_rows_to_read = 2;
CREATE TABLE test_01193_18429.table_3_295 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select arrayAUC(cast([10, 40, 35, 80] as Array(UInt32)), [0, 0, 1, 1]);
CREATE TABLE test_4D4D45762F3078345A352245797D4A566C632F642F75565E5E5C342C412021373D62763C583D636C(x UInt8) Engine=Memory;
ALTER POLICY p1_01296, p2_01296 ON table TO ALL;
SELECT '-- Special case: all columns in SELECT clause, ORDER BY *';
CREATE TABLE test_01193_18429.table_5_403 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select maxMap(val, cnt) from values ('val Array(Decimal(10, 2)), cnt Array(Int16)', (['1.01'], [1]), (['1.01'], [2]));
INSERT INTO test_01193_18429.table_10_954 VALUES 
ALTER TABLE src_7 REPLACE PARTITION 1 FROM src_8
INSERT INTO test_01193_18429.table_7_360 VALUES 
DROP DATABASE IF EXISTS test_umyfvmy7 
SELECT * FROM map_test_index_map_values WHERE map['K2'] IN 'V2' SETTINGS force_data_skipping_indices='map_bloom_filter_values';
ALTER TABLE replicated_alter1 ADD COLUMN `n.d` Array(Date);
DROP TABLE IF EXISTS t_map;
CREATE DATABASE IF NOT EXISTS test_u29o3k5u 
SELECT round(arrayJoin(categoricalInformationValue(x.1, x.2)), 3) FROM (SELECT arrayJoin([(0, 0), (NULL, 2), (1, 0), (1, 1)]) AS x);
INSERT INTO r3 SELECT 68 % 10 = 3 ? 68 - 1 : 68
SELECT 'Running test stateless/00917_least_sqr.sql from pid=1713' 
select positionCaseInsensitive(materialize('abc') as h, lower('Bc' as n)) = positionCaseInsensitive(h, n);
INSERT INTO test_01193_18429.table_9_999 VALUES 
CREATE INDEX idx_tab2_0 ON tab2 (col1,col0 DESC,col4 DESC);
ALTER TABLE alter_table_7 DELETE WHERE cityHash64(a,b,c,d,e,g) % 1048576 < 524288
CREATE TABLE test_60217B7D637A24456F3D71306B3C53714E2A7B7A5E5E22544B53745C2C5B5B59595D3A6A7A396552(x UInt8) Engine=Memory;
CREATE TABLE test_34382A61337D686269714878452E5A51213C5743335E6233467B3C47456172206D25796653562375(x UInt8) Engine=Memory;
SELECT * FROM minmax_idx2_r WHERE u64 * i32 >= 2 ORDER BY (u64, i32);
select tuple(toNullable(number), materialize('a'), number) = tuple(number, materialize('a'), number + 1) from numbers(1);
CREATE TABLE test_01193_18429.table_1_482 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT transform(number, [], [], 'Hello ' || number::String) FROM numbers(10);
CREATE TABLE test_01193_18429.table_10_130 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT JSONLength('{"a": "hello", "b": [-100, 200.0, 300]}');
SELECT t.x, l.s, r.s, toTypeName(l.s), toTypeName(r.s) FROM nr AS l LEFT JOIN t AS r USING (x) ORDER BY t.x;
SELECT count(), _part FROM 02581_trips WHERE description = '' GROUP BY _part ORDER BY _part;
select [1] = multiSearchAllPositions(materialize('abc'), ['ab']) from system.numbers limit 10;
SELECT `x` FROM generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))', 1, 1, 1) LIMIT 1
INSERT INTO r10 SELECT 78
CREATE TABLE t1 ( `n` Int8 ) ENGINE = Memory COMMENT 'this is a temtorary table';
INSERT INTO test_01193_18429.table_1_337 VALUES 
EXPLAIN SYNTAX SELECT value1 FROM date_t WHERE toYYYYMM(date1) <= 199203 AND id BETWEEN 1 AND 3;
SELECT toString(toTime(toDateTime(1420102800), 'Europe/London'), 'Europe/London'), toString(toTime(toDateTime(1428310800), 'Europe/London'), 'Europe/London');
DROP DATABASE IF EXISTS test_5vl3llr9 
DROP TABLE test_01048.mt;
insert into data values
DROP TABLE IF EXISTS default_codec_string;
SELECT sum(n1) FROM t;
SELECT LpNorm(tuple(-1), 3);
DROP DATABASE IF EXISTS test_uid0ngz3 
INSERT INTO r10 SELECT 81 % 10 = 10 ? 81 - 1 : 81
SELECT t1.id, t1.value, t2.id, t2.value, t3.id, t3.value FROM test_table_join_1 AS t1 INNER JOIN test_table_join_2 AS t2 ON t1.id = t2.id AND t1.value == 'Join_1_Value_0' INNER JOIN test_table_join_3 AS t3 ON t2.id = t3.id AND t2.value == 'Join_2_Value_0';
select countDistinct(initial_query_id) from system.processors_profile_log where query_id = '98d1436309c9daca543c0c3174744cef'
CREATE DATABASE IF NOT EXISTS test_a1buyzlq 
GRANT session_log_test_role2 TO session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_double_sha1_password_two_profiles_two_roles;
SELECT nothing([NULL], [NULL], [NULL]);
INSERT INTO test_01193_18429.table_8_877 VALUES 
SELECT 'Running test stateless/02902_diable_apply_deleted_mask.sql from pid=1726' 
SELECT 'Running test stateless/02250_lots_of_columns_in_csv_with_names.sh from pid=1718' 
SELECT CASE WHEN (number % 2) = 0 THEN [toInt16(1), toInt16(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toUInt16(3), toUInt16(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_4_624 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO rdb SELECT toUInt32(sipHash64(number) % 10) as key, [key, key+1] as value, ('val2' || toString(key)) as value2 FROM numbers_mt(10);
select 'FixedString';
CREATE TABLE test_01193_18429.table_5_956 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_7B3D76692A665E4E555948593A7835223C236040586A436B3E5275774B376F2757672F55337C2568(x UInt8) Engine=Memory;
select 0 = multiSearchFirstIndex(materialize('iepqqbvekaflprupsmnpoijrld'), ['kqomoeysekwcplpegdwcdoeh', 'mwdvr', 'aobviioktzwzmpilblbdwstndhimabfgct', 'vqustluciruiyfkoontehnwylnauwpol', 'utcqnitztcgr', 'ityszrqmlwzspnrwdcvdhtziob', 'hmll', 'ilfzvuxbkyppwejtp', 'euxdzqcqutnfeiivw', 'rbcjlmjniiznzaktsuawnfjzqjri', 'fzyxlzzretsshklrkwru', 'jrujmdevqqojloz']) from system.numbers limit 10;
select parseDateTime('1980 032', '%Y %j', 'UTC') = toDateTime('1980-02-01', 'UTC');
SELECT * FROM bloom_filter_idx WHERE startsWith(s, 'abra') AND endsWith(s, 'abra') FORMAT JSON
SELECT 'Running test stateless/02494_zero_copy_and_projection_and_mutation_work_together.sql from pid=1722' 
CREATE TABLE upyachka (x UInt64) ENGINE = Memory;
WITH 'aes-256-gcm' AS mode, 'test_key________________________' AS key, 'test_iv_____' AS iv SELECT mode, encrypt(mode, '[HIDDEN]')
desc urlCluster('test_cluster_one_shard_three_replicas_localhost', 'http://localhost:11111/test/{a,b}.tsv', 'TSV', 'auto');
DROP DATABASE 01754_dictionary_db;
CREATE TABLE test_01193_18429.table_7_806 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_10_498 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
create table `table_00483` (date Date, `Struct.Key1` Array(UInt64), `Struct.Key2` Array(UInt64), padding FixedString(16)) engine = MergeTree(date, (date), 16);
SELECT 'Running test stateless/00726_modulo_for_date.sql from pid=1718' 
INSERT INTO test_01193_18429.table_7_784 VALUES 
CREATE TABLE test_2D5B266D536D477B7B304F5626767E3929712C6B3A312E307C4C30775541245E276A793A525E6F36(x UInt8) Engine=Memory;
SELECT CAST('Hello' AS LowCardinality(Nullable(String)));
SELECT multiIf((number % 2) = 0, toUInt16(1), (number % 3) = 0, toUInt32(2), toFloat32(3)) FROM system.numbers LIMIT 10;
CREATE TABLE db_01038.table_for_dict (`key_column` UInt64, `value` Float64) ENGINE = MergeTree ORDER BY key_column SETTINGS index_granularity = 48801, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 13, merge_max_block_size = 11392, prefer_fetch_merged_part_size_threshold = 7271818060, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 20075131, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 10569, primary_key_compress_block_size = 90130
INSERT INTO test_01193_18429.table_8_170 VALUES 
SELECT name, value, changed, alias_for FROM system.settings WHERE name = 'replication_alter_partitions_sync'
INSERT INTO src VALUES /* (62, 2) */ 
SELECT * FROM full_duplicates;
SELECT toUInt32(0) AS x, toDecimal32(1, 0) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
SELECT 14776434768051644139306697240981192872314776434768051644139306697240981192872::UInt256 AS x, 0::UInt128 AS y, bitCount(bitXor(x, y)) AS a, bitHammingDistance(x, y) AS b;
CREATE TABLE test_2B466436745229396447644A26562C2C496E532E27435830216D7040494F5F586B3056215E514771(x UInt8) Engine=Memory;
select col3, col4 from defaulted;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt16(1), toInt16(2)] WHEN (number % 3) = 0 THEN [toUInt32(2), toUInt32(3)] ELSE [toInt32(3), toInt32(3)] END FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_2l8kb2zk 
CREATE TABLE test_2D62375C7E4B2624364F3F585F7C4F763349262573766B6A6D67355472394E624D6633603D25736E(x UInt8) Engine=Memory;
SELECT byteSwap(18439412204227788800::UInt64);
SELECT a, g > toUInt8(0), g > toUInt16(0), g > toUInt32(0), g > toUInt64(0) FROM decimal ORDER BY a;
CREATE DATABASE IF NOT EXISTS test_24ix0r86 
INSERT INTO r3 SELECT 89
SELECT geohashesInBox(1., materialize(2.), 3., 4., 3);
ATTACH DICTIONARY database_for_dict.dict1;
CREATE TABLE test_7E257042424D48233849597C463B7D725A3F57312B5A412C383E5169325E232A28797A296B265341(x UInt8) Engine=Memory;
CREATE VIEW null_view AS SELECT * FROM null_00481;
SELECT BIT_AND(NULL, NULL);
select t1.a as t1_a, t2.a as t2_a, t2.b as t2_b, t3.b as t3_b from table1 as t1 join table2 as t2 on t1.a = t2.a join table3 as t3 on t2.b = t3.b ORDER BY t1.a ;
SELECT number % 3 = 2 ? (number, toString(number)) : (number * 10, concat('! ', toString(number))) FROM system.numbers LIMIT 10;
CREATE TABLE test_356F2C707B21536F2F3673286D626E5D4D78707B2E48345A22574D667B32536C523972585D63252E(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02002_system_table_with_tuple.sh from pid=1724' 
CREATE DATABASE IF NOT EXISTS test_lux3pxa2 
SYSTEM SYNC REPLICA concurrent_kill_3 STRICT
CREATE TABLE test_42334D303127663B4C606F39334C7E2C72325B244969764C7E21416B7C22486F416C55784D245462(x UInt8) Engine=Memory;
SELECT 'Abc\nt\ndef' ILIKE '%abc%def%';
INSERT INTO src_8 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 40
select * from format(JSONEachRow, '{"payload" : {"pull_request": {"merged_by": {"login": "root"}}}}') settings input_format_null_as_default=1;
CREATE DATABASE IF NOT EXISTS test_1st6otf7 
CREATE TABLE file_02184 (id UInt64, name String, dt Date) ENGINE = File(TabSeparated);
SELECT count() FROM t_cnf_fuzz WHERE (c0 AND c2) OR ((NOT c4)) OR (c5 AND (NOT c2) AND (NOT c4) AND (NOT c6) AND c9) OR ((NOT c8) AND (NOT c7)) OR (c9 AND (NOT c1)) OR ((NOT c3) AND c7) OR ((NOT c3) AND c2 AND c6 AND (NOT c7)) OR (c0 AND c6 AND c0) OR (c8 AND c1 AND c0 AND (NOT c1)) SETTINGS convert_query_to_cnf = 1
select 1 = isValidUTF8(toValidUTF8('12345678901234\xed')) from system.numbers limit 10;
INSERT INTO test_01193_18429.table_1_946 VALUES 
CREATE TABLE test_01193_18429.table_4_990 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE r3 (`x` UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/tables/01459_manual_write_to_replicas_quorum_detach_attach_test_sp2m0q2m/r', 'r3') ORDER BY x SETTINGS index_granularity = 45640, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 20965, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 18210008, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 68614, primary_key_compress_block_size = 47402
OPTIMIZE TABLE another_indexed_table FINAL;
ALTER TABLE t_async_inserts_logs MODIFY SETTING parts_to_throw_insert = 1
CREATE TABLE test_01193_18429.table_6_446 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_6_938 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT extractAllGroupsHorizontal('hello world', '(\\w+)');
DROP DATABASE IF EXISTS test_crn1lvja 
DROP TABLE date_interval;
select JSONExtractString('{"abc":"\\n\\u0000"}', 'abc');
select parseDateTime('365', '%j', 'UTC') = toDateTime('2000-12-30', 'UTC');
SELECT hostname();
DROP DATABASE IF EXISTS test_nkrvyoy3 
INSERT INTO test_01193_18429.table_1_446 VALUES 
SELECT fromUnixTimestampInJodaSyntax(-1);
CREATE TABLE test_01193_18429.table_8_340 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_456A2E4268723F3E64262A425F5A3752326F355377726D4372774E4E272E577450476F507472687B(x UInt8) Engine=Memory;
SELECT arrayDifference([toDecimal32(0.0,4), toDecimal32(1.0,4)]) x, toTypeName(x);
CREATE TABLE test_4445386850684B5F737D2C412D594E5735323D7A31712A25424C6F7927263A45772473553F474B3A(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00170_lower_upper_utf8.sql from pid=1720' 
SELECT toDateTime('2000-01-01 00:00:00', 'Asia/Istanbul') AS x, toDate('2000-01-02') AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
CREATE INDEX idx_tab2_0 ON tab2 (col3);
SELECT toStartOfDay(toDate(16343), 'Europe/London');
insert into array_functions values 
CREATE TABLE test_01193_18429.table_10_755 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
ALTER POLICY p1_01295 ON db.table TO u1_01295;
SELECT 'Running test stateless/02871_clickhouse_client_restart_pager.sh from pid=1720' 
SELECT * FROM hierarchy_flat_dictionary_index;
SELECT marks FROM system.parts WHERE table = 'adaptive_table' and database=currentDatabase() and active;
SELECT * FROM (SELECT * FROM test_00597) ANY INNER JOIN (SELECT * FROM (SELECT * FROM test_00597)) as r USING id WHERE r.id = 1 SETTINGS allow_experimental_analyzer=0;
CREATE TABLE test_02908_r3_118 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_118', 'r3') ORDER BY tuple()
SELECT arrayZip(materialize([0, 1]), ['hello', 'world']);
CREATE TABLE tab (`country` LowCardinality(FixedString(7)) DEFAULT 'unknown', `city` LowCardinality(String) DEFAULT 'unknown', `region` LowCardinality(String) DEFAULT 'unknown', `continent` LowCardinality(FixedString(7)) DEFAULT 'unknown', `is_eu_country` Bool, `date` DateTime CODEC(DoubleDelta, LZ4), `viewer_date` DateTime ALIAS toTimezone(date, timezone), `device_browser` LowCardinality(String) DEFAULT 'unknown', `metro_code` LowCardinality(String) DEFAULT 'unknown', `domain` String DEFAULT 'unknown', `device_platform` LowCardinality(String) DEFAULT 'unknown', `device_type` LowCardinality(String) DEFAULT 'unknown', `device_vendor` LowCardinality(String) DEFAULT 'unknown', `ip` FixedString(39) DEFAULT 'unknown', `lat` Decimal(8, 6) CODEC(T64), `lng` Decimal(9, 6) CODEC(T64), `asset_id` String DEFAULT 'unknown', `is_personalized` Bool, `metric` String, `origin` String DEFAULT 'unknown', `product_id` UInt64 CODEC(T64), `referer` String DEFAULT 'unknown', `server_side` Int8 CODEC(T64), `third_party_id` String DEFAULT 'unknown', `partner_slug` LowCardinality(FixedString(10)) DEFAULT 'unknown', `user_agent` String DEFAULT 'unknown', `user_id` UUID, `zip` FixedString(10) DEFAULT 'unknown', `timezone` LowCardinality(String), `as_organization` LowCardinality(String) DEFAULT 'unknown', `content_cat` Array(String), `playback_method` LowCardinality(String) DEFAULT 'unknown', `store_id` LowCardinality(String) DEFAULT 'unknown', `store_url` String DEFAULT 'unknown', `timestamp` Nullable(DateTime), `ad_count` Int8 CODEC(T64), `ad_type` LowCardinality(FixedString(10)) DEFAULT 'unknown', `ad_categories` Array(FixedString(8)), `blocked_ad_categories` Array(FixedString(8)), `break_max_ad_length` Int8 CODEC(T64), `break_max_ads` Int8 CODEC(T64), `break_max_duration` Int8 CODEC(T64), `break_min_ad_length` Int8 CODEC(T64), `break_position` LowCardinality(FixedString(18)) DEFAULT 'unknown', `media_playhead` String DEFAULT 'unknown', `placement_type` Int8 CODEC(T64), `transaction_id` String, `universal_ad_id` Array(String), `client_ua` LowCardinality(String) DEFAULT 'unknown', `device_ip` FixedString(39) DEFAULT 'unknown', `device_ua` LowCardinality(String) DEFAULT 'unknown', `ifa` String, `ifa_type` LowCardinality(String) DEFAULT 'unknown', `vast_lat` Decimal(8, 6) CODEC(T64), `vast_long` Decimal(9, 6) CODEC(T64), `server_ua` String DEFAULT 'unknown', `app_bundle` String DEFAULT 'unknown', `page_url` String DEFAULT 'unknown', `api_framework` Array(UInt8), `click_type` LowCardinality(String), `extensions` Array(String), `media_mime` Array(String), `om_id_partner` LowCardinality(String) DEFAULT 'unknown', `player_capabilities` Array(FixedString(12)), `vast_versions` Array(UInt8), `verification_vendors` Array(String), `ad_play_head` String DEFAULT 'unknown', `ad_serving_id` String DEFAULT 'unknown', `asset_uri` String DEFAULT 'unknown', `content_id` String DEFAULT 'unknown', `content_uri` String DEFAULT 'unknown', `inventory_state` Array(FixedString(14)), `player_size` Array(UInt8), `player_state` Array(FixedString(12)), `pod_sequence` Int8 CODEC(T64), `click_position` Array(UInt32), `error_code` Int16 CODEC(T64), `error_reason` Int8 CODEC(T64), `gdpr_consent` String DEFAULT 'unknown', `limited_tracking` Bool, `regulations` String DEFAULT 'unknown', `content_category` Array(String), PROJECTION projection_TPAG_VAST_date (SELECT * ORDER BY toYYYYMMDD(date), metric, product_id, asset_id)) ENGINE = MergeTree ORDER BY (product_id, metric, asset_id, toYYYYMMDD(date)) SETTINGS index_granularity = 44034, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.4312794506549835, replace_long_file_name_to_hash = false, max_file_name_length = 23, merge_max_block_size = 17093, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 2, min_merge_bytes_to_use_direct_io = 4917636267, index_granularity_bytes = 8902002, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 92665, primary_key_compress_block_size = 16700
SELECT avgOrNullIfMerge(state) FROM (SELECT avgOrNullIfState(x, x > 0) AS state FROM (SELECT 1 AS x));
CREATE DATABASE IF NOT EXISTS test_pboae4c6 
select a, b.a, b.b.c, b.b.d from s3(s3_conn, filename='test_02245_s3_nested_parquet2_*', format='Parquet', structure='a Int64, b Tuple(a Int64, b Tuple(c Int64, d String))');
SELECT has([(a, b), (c, d)], (a, b)) FROM (SELECT materialize(1) AS a, 2 AS b, 3 AS c, 4 AS d);
create table tab_00386 (a Int8, b String, c Tuple(Int8), d Tuple(Tuple(Int8)), e Tuple(Int8, String), f Tuple(Tuple(Int8, String))) engine = MergeTree order by (a,c) partition by a
SELECT formatDateTime(toDate('2010-01-04'), '%G');
CREATE TABLE test_787E476D325D3A4A285C377342554F4F7B2745682B5A657A76504B5F7B2327233F6E3E4B547B472D(x UInt8) Engine=Memory;
DROP TABLE hits;
SELECT * FROM (SELECT * FROM t GROUP BY item_id, price_sold, date WITH TOTALS ORDER BY item_id, price_sold, date) l LEFT JOIN (SELECT * FROM t GROUP BY item_id, price_sold, date WITH TOTALS ORDER BY item_id, price_sold, date ) r ON l.item_id = r.item_id;
SELECT * FROM t1_00826, t2_00826 where t1_00826.a = t2_00826.a AND (t2_00826.b IS NULL OR t2_00826.b < 2);
CREATE TABLE test_01193_18429.table_9_53 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
desc file(dump7.sql, MySQLDump) settings input_format_mysql_dump_table_name='test 3'
INSERT INTO test_01193_18429.table_4_861 VALUES 
SELECT -0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001;
drop table t13;
SELECT toUInt256OrDefault(NULL);
SELECT id AS using_id, toTypeName(using_id), t1.id AS t1_id, toTypeName(t1_id), t1.value AS t1_value, toTypeName(t1_value), t2.id AS t2_id, toTypeName(t2_id), t2.value AS t2_value, toTypeName(t2_value), t3.id AS t3_id, toTypeName(t3_id), t3.value AS t3_value, toTypeName(t3_value) FROM test_table_join_1 AS t1 LEFT JOIN test_table_join_2 AS t2 USING (id) FULL JOIN test_table_join_3 AS t3 USING(id);
EXCHANGE TABLES test_01191.dict AND test_01191.t;
select count(ignore(*)) from data_02051 settings min_bytes_to_use_direct_io=0, local_filesystem_read_method='pread_threadpool', local_filesystem_read_prefetch=0, read_priority=1, max_read_buffer_size=1048576 ;
SELECT 'Running test stateless/02240_filesystem_cache_bypass_cache_threshold.sql from pid=1705' 
CREATE TABLE null_02184 AS system.one Engine=Null();
CREATE TABLE dst (`count` UInt64, `w_end` DateTime) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 8772, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 10760, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 67, min_merge_bytes_to_use_direct_io = 4397498654, index_granularity_bytes = 17916475, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 32306, primary_key_compress_block_size = 60762
INSERT INTO test_01193_18429.table_6_504 VALUES 
INSERT INTO test_01193_18429.table_10_635 VALUES 
insert into test values
SELECT '1,a2,1', arrayEnumerateUniqRanked(1,a2,1) FROM arrays_test ORDER BY a1, a2;
CREATE TEMPORARY TABLE table_gcd_codec_uint64 (n UInt64 CODEC(GCD, LZ4)) ENGINE = Memory;
CREATE DATABASE IF NOT EXISTS test_63hzyjbd 
DROP DATABASE IF EXISTS test_oka4pp4u 
SELECT hex('');
SYSTEM SYNC REPLICA zero_rows_per_granule1;
SELECT * FROM 02538_bf_ngrambf_map_values_test PREWHERE (map['']) = 'V2V\0V2V2V2V2V2V2' WHERE (map[NULL]) = 'V2V\0V2V2V2V2V2V2V2V\0V2V2V2V2V2V2V2V\0V2V2V2V2V2V2V2V\0V2V2V2V2V2V2' SETTINGS force_data_skipping_indices = 'map_values_ngrambf';
CREATE TABLE test_01193_18429.table_1_322 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
ALTER TABLE table_for_freeze_replicated FREEZE PARTITION '3' WITH NAME 'test_01417_single_part' FORMAT TSVWithNames SETTINGS alter_partition_verbose_result = 1;
INSERT INTO test_01193_18429.table_10_802 VALUES 
SELECT * FROM underlying_01797 FORMAT Null;
CREATE TABLE test_01193_18429.table_5_333 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
alter table data_01900_2 update s = 'bar_39' where 1;
select tuple_column from file('02906.orc', 'ORC', 'int64_column Int64, tuple_column Tuple(c Nullable(Int64))') where int64_column % 15 = 0;
DROP DATABASE IF EXISTS test_xinmww4j 
INSERT INTO t64 SELECT (intExp2(16) - 64 + number) AS x, x, x, x, x, x, x, x FROM numbers(65);
SELECT multiIf((number % 2) = 0, toFloat32(1), (number % 3) = 0, toUInt16(2), toUInt8(3)) FROM system.numbers LIMIT 10;
SELECT arrayEnumerateUniq(NULL, NULL);
INSERT INTO lazy_test_16wuveew.`ÃÂÃÂ°ÃÂ±ÃÂ»ÃÂ¸ÃÂÃÂ°_ÃÂÃÂ¾_ÃÂÃÂÃÂÃÂ°ÃÂ½ÃÂ½ÃÂÃÂ¼_ÃÂ½ÃÂ°ÃÂ·ÃÂ²ÃÂ°ÃÂ½ÃÂ¸ÃÂµÃÂ¼` VALUES 
ALTER TABLE check_query_comment_column COMMENT COLUMN first_column 'comment 1_1', COMMENT COLUMN second_column 'comment 2_1', COMMENT COLUMN third_column 'comment 3_1', COMMENT COLUMN fourth_column 'comment 4_1', COMMENT COLUMN fifth_column 'comment 5_1';
SELECT 'Pacific/Kwajalein', rand() as r, toHour(toDateTime(r, 'Pacific/Kwajalein') AS t) AS h, t, toTypeName(t) FROM numbers(1000000) WHERE h < 0 OR h > 23 ORDER BY h LIMIT 1 BY h;
SELECT x FROM (SELECT * FROM merge(currentDatabase(), '02763_merge') WHERE x IN (3,4)) ORDER BY x SETTINGS optimize_move_to_prewhere= 0;
SELECT partition, name, rows FROM system.parts WHERE database = currentDatabase() AND table = 'without_fixed_size_columns' AND active ORDER BY name;
CREATE TABLE test_482D684D7A50746F5D5558437C3B504437204A2A725172566E41624F245124542A43663664365225(x UInt8) Engine=Memory;
DROP TABLE tableMergeTree_00968;
CREATE TABLE test_datetime (`data` DateTime) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 52066, min_bytes_for_wide_part = 619585264, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 28, merge_max_block_size = 5636, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 7023086542, index_granularity_bytes = 8242145, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 40217, primary_key_compress_block_size = 81189
create table tab_00386 (a Int8, b String, c Tuple(Int8), d Tuple(Tuple(Int8)), e Tuple(Int8, String), f Tuple(Tuple(Int8, String))) engine = MergeTree order by (a,c) partition by tuple()
DROP DATABASE IF EXISTS test_gqvfx4b5 
CREATE TABLE test_42506A6F2E2B6D344B4070264B7A5731724A7B4E2B3F3C4456347B51564F5353573E5E797342527B(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00902_entropy.sql from pid=1720' 
CREATE TABLE test_493D352525707921424C27724A2379706A2849292C65362B272A7D716C5F3A4D3B5172615E67473F(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_2_521 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_7E31473C7044327D7E4047557B6750644E664A46332054274A213F293A4136587247532467504E77(x UInt8) Engine=Memory;
select 'LIMIT OFFSET';
CREATE TABLE test_22523E3A2F7A7D296A4A412E454D48635436343F4D3027387B5C423B2C637B4D3E616A26442F7D4A(x UInt8) Engine=Memory;
CREATE TABLE test_6E53454E6E484D3032655D756C28704F49673C362B6C302C7C7B6D736F5A532E7C4C64354370626A(x UInt8) Engine=Memory;
CREATE TABLE test_4437786B5B646D7A3725783D4073647D673B276A233D2D24413971795E5D2A2243643A7674516F53(x UInt8) Engine=Memory;
SELECT dictGet('flat_dictionary', 'value', toUInt64(2));
select key, Path, Value, Version, col from test_graphite order by key, Path, Time desc;
INSERT INTO test_01193_18429.table_10_227 VALUES 
SELECT multiIf((number % 2) = 0, [toUInt8(1), toUInt8(2)], (number % 3) = 0, [toUInt32(2), toUInt32(3)], [toUInt8(3), toUInt8(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_207747742A487A5A44242E7E3A2E75513D4E694242792D597A6E39793B4C463D495E79414C445732(x UInt8) Engine=Memory;
SELECT sum(x = 0) FROM (SELECT throwIf(number = 1000) AS x FROM numbers(1000))
DROP DATABASE IF EXISTS test_xg2v4fyl 
CREATE ROLE r02246
SELECT d, k1, k2, uniqMerge(Uniq), uniqThetaMerge(UniqThetaSketch) FROM stored_aggregates GROUP BY d, k1, k2 ORDER BY d, k1, k2;
INSERT INTO table_gcd_codec_int64 SELECT number FROM system.numbers LIMIT 50;
INSERT INTO test_01193_18429.table_4_832 VALUES 
CREATE TABLE t (`x` DateTime64(3)) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 42016, min_bytes_for_wide_part = 215663891, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 2452, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 10802842, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 40541, primary_key_compress_block_size = 10131
INSERT INTO test_01193_18429.table_7_810 VALUES 
DROP DATABASE IF EXISTS test_5zrmj1ip 
INSERT INTO r10 SELECT 90 % 10 = 10 ? 90 - 1 : 90
alter table many_mutations delete where y = 134 * 2 settings mutations_sync = 0;
INSERT INTO src VALUES /* (30, 2) */ 
CREATE TABLE test_01193_18429.table_9_647 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT toLastDayOfWeek(toDateTime(1419800400), 1, 'Asia/Tokyo');
CREATE TABLE test_01193_18429.table_10_990 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT `number` FROM `system`.`numbers` WHERE `number` < 10
INSERT INTO test_01193_18429.table_3_797 VALUES 
select [1] = multiSearchAllPositions(materialize('abab'), materialize(['ab']));
ALTER TABLE src_8 REPLACE PARTITION 9 FROM src_8
CREATE TABLE test_01193_18429.table_7_635 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE DATABASE IF NOT EXISTS test_zr9wr74x 
SELECT 'Running test stateless/00934_is_valid_utf8.sql from pid=1722' 
SELECT t2.1 FROM t_tuple_element;
INSERT INTO test_01193_18429.table_2_299 VALUES 
DROP DATABASE IF EXISTS test_gh0u9nlg 
CREATE TABLE test_2056565E6A3138293B5F2357692C425337597A685B69272C3C2D6825265A5D632F29757B3F464A46(x UInt8) Engine=Memory;
INSERT INTO index_for_like (s) VALUES 
CREATE TABLE test_675E55724A7D7272513D582F644D686C25294E6C3356695D60533E693D6824712549254E7E3B2F46(x UInt8) Engine=Memory;
select 3 = sequenceCount('(?2)')(time, data = 0, data = 1, data = 2, data = 3) from sequence_test;
INSERT INTO test_01193_18429.table_1_345 VALUES 
SELECT JSONExtractString('["a", "b", "c", "d", "e"]', idx) FROM (SELECT arrayJoin([2, NULL, 2147483646, 65535, 65535, 3]) AS idx);
CREATE DATABASE IF NOT EXISTS test_ze2ydd21 
SELECT has(col1, 7) FROM test1_00395;
WITH 'test_s64_distributed' AS `_table`, 'test_8g7ngcfb' AS `_database` SELECT `date`, `value` FROM `test_8g7ngcfb`.`test_s64_local` WHERE `_table` = 'test_u64_distributed' ORDER BY `value` ASC
SELECT '====map====';
SELECT '34' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:c000::')))
SELECT s2ToGeo(s2_index), geoToS2(longitude, latitude) FROM s2_indexes ORDER BY s2_index;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toUInt8(2) ELSE toInt32(3) END FROM system.numbers LIMIT 10;
INSERT INTO r8 SELECT 38
CREATE TABLE test_01193_18429.table_6_963 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT multiIf((number % 2) = 0, [toFloat32(1), toFloat32(2)], (number % 3) = 0, [toUInt8(2), toUInt8(3)], [toFloat32(3), toFloat32(3)]) FROM system.numbers LIMIT 10;
SELECT 7 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'asn', tuple(IPv4StringToNum('254.0.0.0')))
DETACH TABLE codecs10;
SELECT count() FROM t_cnf_fuzz WHERE (c1 AND (NOT c5) AND (NOT c1)) SETTINGS convert_query_to_cnf = 1
ALTER TABLE dst_10 DROP PARTITION 1
SELECT 'Running test stateless/02669_alter_modify_to_nullable.sql from pid=1726' 
CREATE TABLE test_6E657B57582C457C73726279523A706725456E3C5D3C2537555038337A7E6F344A796A7B7E596255(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_o2q2qquy 
SELECT dictHas('02185_range_dictionary', 0, 10001);
SELECT count() FROM t_cnf_fuzz WHERE (c2) OR (c5 AND (NOT c7)) OR (c3 AND c6 AND (NOT c5) AND (NOT c8)) OR ((NOT c7) AND (NOT c2) AND c3 AND c8 AND c4) OR ((NOT c6) AND c8) OR (c2 AND c1) OR ((NOT c1) AND (NOT c1) AND (NOT c0) AND c8 AND c1) OR (c6 AND (NOT c9)) OR (c9 AND c9 AND c0 AND (NOT c9) AND (NOT c0)) SETTINGS convert_query_to_cnf = 1
CREATE DATABASE IF NOT EXISTS test_jjh0lqte 
alter table many_mutations delete where y = 179 * 2 settings mutations_sync = 0;
select * from ts order by sensor_id, timestamp with fill to 10 step 1 interpolate (value as 9999) settings use_with_fill_by_sorting_prefix=0;
SELECT i FROM generateRandom('i Array(Nullable(Enum8(\'hello\' = 1, \'world\' = 5)))', 1, 10, 10) LIMIT 10;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toInt32(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
SELECT multiIf((number % 2) = 0, toUInt8(1), (number % 3) = 0, toInt8(2), toFloat32(3)) FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_62obsm3x 
SELECT 'Running test stateless/00451_left_array_join_and_constants.sql from pid=1720' 
SELECT 'SELECT CAST(N as DateTime64(3, \'Europe/Minsk\'))';
SELECT 'Running test stateless/02427_msan_group_array_resample.sql from pid=1724' 
DROP DATABASE IF EXISTS test_la7y1vpf 
Select argMinIf((n, n), n, n > 5) t, toTypeName(t) FROM (Select if(number % 3 == 0, NULL, number) as n from numbers(10));
CREATE TABLE rdb ( `key` UInt32, `value` String ) ENGINE = EmbeddedRocksDB PRIMARY KEY key;
CREATE TABLE test_01193_18429.table_8_350 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT create_table_query FROM system.tables WHERE database='' AND name='tmptable' 
CREATE TABLE test_01193_18429.table_5_920 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE INDEX idx_tab4_4 ON tab4 (col0 DESC,col1);
WITH minSampleSizeContinous(baseline, 10, 0.05, 0.8, 0.05) AS res SELECT 'continous UInt64 3', roundBankers(res.1, 2), roundBankers(res.2, 2), roundBankers(res.3, 2) FROM minimum_sample_size_continuos ORDER BY roundBankers(res.1, 2);
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c9) AND c9 AND c7 AND c7 AND (NOT c8)) OR ((NOT c7) AND (NOT c2) AND (NOT c1) AND (NOT c0)) OR ((NOT c8) AND (NOT c3) AND (NOT c5)) OR (c7 AND c6) OR (c1 AND (NOT c4) AND c3 AND c0 AND (NOT c3)) OR (c1 AND c6 AND c7 AND c3 AND c3) OR ((NOT c8) AND (NOT c6) AND c4 AND (NOT c9)) OR ((NOT c3) AND c7) OR ((NOT c1) AND c1) SETTINGS convert_query_to_cnf = 1
SYSTEM SYNC REPLICA r1
DROP DATABASE IF EXISTS test_m6vom9km 
CREATE TABLE test_5B7E7640437D40534A674827594C654C64534F366D5422674D51395A5B60756E75475E3B40742958(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_6_252 VALUES 
CREATE TABLE test_2D56627D7029405A2B517E7A55512A7B73624E234427654C52422446556930394A3E456B5A7A7170(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_z87gc3ws 
select substringIndexUTF8(materialize('Ã¥Â¯ÂÃ¥Â¼ÂºÃ¯Â¼ÂÃ¦Â°ÂÃ¤Â¸Â»Ã¯Â¼ÂÃ¦ÂÂÃ¦ÂÂ'), 'Ã¯Â¼Â', 3);
CREATE TABLE test_01193_18429.table_6_848 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'Running test stateless/01020_having_without_group_by.sql from pid=1713' 
INSERT INTO test_02908_r1_163 SELECT rand64() FROM numbers(5);
SELECT quantileExactHigh(0.4)(a), quantileExactHigh(0.4)(b), quantileExactHigh(0.4)(c) FROM decimal WHERE a >= 0;
CREATE TABLE test_6E574429793D693A5634375F776662673E2F6F692065634E6A763A422C5220247A4D235C37613B7C(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_4_449 VALUES 
CREATE TABLE test_492C672F232529466C56795E7C4A5278235C392467703939473C6B27744D7B7B774F4F2C3C6E7B23(x UInt8) Engine=Memory;
CREATE TABLE t2 (`s` String, `x` Array(UInt8), `k` UInt64) ENGINE = Join(ANY, INNER, k);
DROP DATABASE IF EXISTS test_52czqgbq 
SELECT min(is_done) FROM system.mutations WHERE database='test_rsn1deef' AND table='table_for_mutations' AND mutation_id='mutation_3.txt'
DROP TABLE test_mtree;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 37234, 500 settings ignore_materialized_views_with_dropped_target_table=1
DROP DATABASE IF EXISTS test_7syrfc5g 
SELECT toIntervalHour(NULL, NULL);
SHOW CREATE TABLE replicated_alter2;
INSERT INTO test_01193_18429.table_8_471 VALUES 
select distinct x, y from (select 1 as x, 2 as y from distinct_in_order order by x) order by y;
DROP DATABASE IF EXISTS test_cl96218w 
DROP DATABASE IF EXISTS test_qo4x4tji 
CREATE TABLE test_723E3D39324A415E644F373A3E4E635C36744F56546F29227C7E3A6838567145392465213E22726C(x UInt8) Engine=Memory;
SELECT toTypeName(first_valueIfState(number, isNull(number)) RESPECT NULLS) from (SELECT if(number > 8, NULL, number) as number FROM numbers(10));
SELECT 'Running test stateless/02531_ipv4_arithmetic.sql from pid=1720' 
CREATE MATERIALIZED VIEW mv TO dst AS SELECT x FROM src;
SELECT 'Running test stateless/01213_alter_table_rename_nested.sql from pid=1724' 
CREATE TABLE test_2D5659783C6767585A75534C64303C436A65736642544F2A5A4C423E56675F287137774E3C22582C(x UInt8) Engine=Memory;
DROP TABLE view_00699;
WITH x -> toString(x) AS lambda SELECT lambda(id), lambda(value) FROM test_table;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (32 < 98 AND 1 > 0 ? 32 : 0)), throwIf(last != (32 < 98 AND 1 > 0 ? least(98 - 1, 32 + 1 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(98) LIMIT 32, 1);
select empty(map(1,2,3,4));
select count() from data_02021 prewhere 1 or ignore(key) where ignore(key)=0;
select 'uniqCombined64State(10000000)', blockSerializedSize(uniqCombined64State(number)) from (select number from system.numbers limit 10000000);
DROP DATABASE IF EXISTS test_4qafwkdb 
select sipHash128Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5)) == sipHash128(char(0, 1, 2, 3, 4, 5));
DROP DICTIONARY IF EXISTS ddl_dictionary_test;
select toTime(toDateTime(0, 'Asia/Istanbul'));
CREATE DATABASE IF NOT EXISTS test_5ksz6fca 
ATTACH TABLE table_with_gap;
DROP VIEW IF EXISTS mv_3_1;
SELECT NULL AND (toDate(-2147483647, NULL) AND NULL) FROM view(SELECT NULL FROM `system`.`one` WHERE toDate(toDate(NULL, NULL, NULL), NULL) GROUP BY '')
SELECT hasColumnInTable(currentDatabase(), 'has_column_in_table', 'nest.y');
SELECT t1.key, t2.key, t1.s, length(t2.s) FROM t1 AS t1 ANY LEFT JOIN tn2 AS t2 ON t1.key == t2.key ORDER BY t1.key, t2.key, t1.s;
SELECT s, replaceAll(s, '_', 'oo') AS a, REGEXP_REPLACE(s, '_', 'oo') AS b, a = b FROM (SELECT arrayJoin(['._', '_.']) AS s);
CREATE TABLE test_345A244231783F44642F7B636D244F6F417E597E70686E682623726C5C575A6F4E403F3F4F66603B(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_7imlhhko 
DROP DICTIONARY IF EXISTS 02183_hashed_array_dictionary;
select [0] = multiSearchAllPositions(materialize('abc'), ['de']);
INSERT INTO t SELECT number, 0, 1 FROM numbers(1e3);
INSERT INTO test_01193_18429.table_2_774 VALUES 
CREATE TABLE test_01193_18429.table_6_661 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT materialize(toDateTime('2015-02-03 06:07:08')) > '2015-02-03 05:06:07';
SELECT arrayFirst(x -> materialize(1), emptyArrayString());
DROP DATABASE IF EXISTS test_8399scbk 
CREATE TABLE test_4B383B6C6624602B4F7124456C69523472545A335E337C683E734F48277078547A392674362E7C37(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_4_251 VALUES 
select substringIndexUTF8(materialize('Ã¥Â¯ÂÃ¥Â¼ÂºÃ¯Â¼ÂÃ¦Â°ÂÃ¤Â¸Â»Ã¯Â¼ÂÃ¦ÂÂÃ¦ÂÂ'), 'Ã¯Â¼Â', 2);
INSERT INTO test_01193_18429.table_10_586 VALUES 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c5)) OR ((NOT c3) AND (NOT c5) AND (NOT c5) AND c4) OR ((NOT c7)) OR (c0 AND (NOT c9) AND (NOT c7) AND (NOT c4)) OR (c5 AND c7 AND c3 AND c4 AND c2) OR (c0 AND (NOT c4) AND (NOT c0) AND (NOT c4) AND (NOT c4)) OR ((NOT c2) AND (NOT c7) AND c4 AND (NOT c6)) SETTINGS convert_query_to_cnf = 0
SELECT multiIf((number % 2) = 0, toUInt16(1), (number % 3) = 0, toUInt32(2), toUInt32(3)) FROM system.numbers LIMIT 10;
SELECT one.dummy FROM system.one one;
DROP DATABASE IF EXISTS test_s9tg44et 
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt16(1), toUInt16(2)] WHEN (number % 3) = 0 THEN [toFloat64(2), toFloat64(3)] ELSE [toInt16(3), toInt16(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE rmt (`n` int, `m` int) ENGINE = ReplicatedMergeTree('/test/02439/{shard}/{database}', '{replica}') PARTITION BY n ORDER BY n SETTINGS index_granularity = 11691, min_bytes_for_wide_part = 205920102, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 47, merge_max_block_size = 1774, prefer_fetch_merged_part_size_threshold = 5792778825, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 4647307, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 29995, primary_key_compress_block_size = 22974
DROP DATABASE IF EXISTS test_w13xaxgj 
CREATE ROW POLICY p4_01296 ON table, p5_01296 ON table2 USING a=b;
SELECT uniqExact(x) FROM (SELECT arrayJoin([[], ['a'], ['a', 'b'], []]) AS x);
alter table many_mutations delete where y = 242 * 2 settings mutations_sync = 0;
CREATE DATABASE IF NOT EXISTS test_x0bjzdns 
INSERT INTO test_01193_18429.table_1_560 VALUES 
CREATE TABLE test_693635607D667C44475A403B335D705520206956544935777B523D3E7D2074295B667D2D375B7575(x UInt8) Engine=Memory;
CREATE INDEX idx_tab4_2 ON tab4 (col0 DESC,col4);
alter table many_mutations delete where y = 514 * 2 settings mutations_sync = 0;
SELECT 0x1_2_3_4;
CREATE TABLE test_01193_18429.table_8_370 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT * FROM (SELECT 1 AS a, 'x' AS b) any left join (SELECT 1 as a, 'y' as b) using a;
insert into test_02381_compact values 
select b from tab_00717 group by b order by b;
CREATE TABLE test_315444786A4173306C3556516D263D5142442F3E4C33274723563C55367C6F34403C5E286D212360(x UInt8) Engine=Memory;
INSERT INTO src_7 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 63
select c in (select c from tab_00386) from tab_00386
SELECT 1 FROM test_table_join_1 AS t1 FULL JOIN test_table_join_2 AS t2 USING (id) FULL JOIN test_table_join_3 AS t3 USING(id);
SELECT count() FROM t_cnf_fuzz WHERE (c8 AND c9 AND (NOT c5)) OR (c7 AND (NOT c1) AND c8 AND (NOT c9) AND c4) OR (c6) OR ((NOT c6)) OR ((NOT c2) AND (NOT c3) AND (NOT c9) AND (NOT c0)) OR ((NOT c7) AND c1) OR (c6 AND (NOT c1) AND c9) OR (c6 AND c7 AND c8) OR (c5 AND c3 AND c9 AND c4 AND (NOT c0)) OR ((NOT c3)) SETTINGS convert_query_to_cnf = 0
SELECT lifetime_min, lifetime_max FROM system.dictionaries WHERE (database = 'test_qre9kwn4_1') AND (name = 'dict1')
SELECT * FROM persons_02240 ORDER BY name FORMAT ProtobufList SETTINGS format_schema = '/usr/share/clickhouse-test/queries/0_stateless/format_schemas/02240_protobuflist2_format_persons:AltPerson'
SHOW CREATE QUOTA q12_01297;
CREATE TABLE test_3D7D60647A6A625176593C5F274B4E75623D726D2165476D5F79297D4C7D342B207E2D3538397568(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt8(1) WHEN (number % 3) = 0 THEN toInt8(2) ELSE toUInt16(3) END FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/01074_h3_range_check.sql from pid=1714' 
CREATE TABLE test_6D624433653B2B59762D242E22607750702A4075455C3128665727626E246E2B22522C7C5B2A4147(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS foo1;
drop table if exists da_memory_efficient_shard;
WITH ((1, 1), (2, 2)) AS liter_prepared_set SELECT COUNT() FROM single_column_bloom_filter WHERE (i32, i64) IN liter_prepared_set SETTINGS max_rows_to_read = 6;
select parseDateTimeInJodaSyntax('01', 'xx', 'UTC') = toDateTime('2001-01-01', 'UTC');
drop table t_00818;
CREATE TABLE 2025_test_db.test_table ( id UInt64, value String ) ENGINE=TinyLog;
system sync replica data_r2 pull
SELECT 'Running test stateless/01378_alter_rename_with_ttl_zookeeper.sql from pid=1724' 
insert into defaulted (payload) values 
select firstLine('foo\rbar\rbaz');
SELECT count() FROM ( SELECT x, count() AS c FROM ( SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.00 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.01 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.02 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.03 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.04 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.05 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.06 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.07 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.08 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.09 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.10 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.11 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.12 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.13 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.14 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.15 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.16 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.17 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.18 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.19 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.20 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.21 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.22 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.23 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.24 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.25 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.26 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.27 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.28 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.29 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.30 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.31 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.32 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.33 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.34 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.35 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.36 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.37 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.38 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.39 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.40 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.41 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.42 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.43 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.44 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.45 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.46 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.47 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.48 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.49 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.50 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.51 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.52 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.53 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.54 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.55 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.56 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.57 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.58 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.59 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.60 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.61 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.62 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.63 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.64 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.65 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.66 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.67 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.68 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.69 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.70 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.71 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.72 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.73 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.74 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.75 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.76 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.77 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.78 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.79 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.80 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.81 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.82 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.83 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.84 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.85 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.86 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.87 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.88 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.89 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.90 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.91 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.92 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.93 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.94 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.95 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.96 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.97 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.98 UNION ALL SELECT * FROM sample_00276 SAMPLE 0.01 OFFSET 0.99 ) GROUP BY x HAVING c = 1 ORDER BY x ASC );
SELECT * FROM t2 FORMAT Null
SELECT 'TOTAL rows', count() FROM source_data;
SELECT Y, uniqCombined(12)(Z) FROM (SELECT number AS X, IPv4NumToString(toUInt32(X)) AS Z, (3*X*X - 7*X + 11) % 37 AS Y FROM system.numbers LIMIT 3000) GROUP BY Y ORDER BY Y;
SELECT tupleElement([[(count('2147483646'), 1)]], 'aaaa', [[1, 2, 3]]) -- bug #51525 
SELECT sum(multiIf(id IS NULL, 1, 0)) FROM t_subcolumns_if SETTINGS allow_experimental_analyzer = 1, optimize_functions_to_subcolumns = 0;
CREATE TABLE test_01193_18429.table_2_650 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE 02265_ordinary_db.join_table ( `a` Int64 ) ENGINE = Join(`ALL`, LEFT, a);
INSERT INTO test_01193_18429.table_1_905 VALUES 
SELECT age('day', toDateTime('2016-01-01 00:00:01', 'UTC'), toDateTime('2016-01-02 00:00:00', 'UTC'), 'UTC');
select accurateCastOrDefault('192.0.2.1', 'IPv6');
INSERT INTO src VALUES /* (85, 2) */ 
CREATE TABLE test_01193_18429.table_7_290 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP TABLE IF EXISTS hypothesis_test_test2;
SELECT count() FROM XXXX WHERE indexHint(p = 1.) SETTINGS optimize_use_implicit_projections = 1, allow_experimental_analyzer=0;
SELECT * FROM (SELECT 1 AS a UNION ALL SELECT 2 as a) ORDER BY a FORMAT PrettyCompact;
CREATE TABLE test_46765E2837613A527E335F5D7E62506B37636E6D7E2F2933414C3E235E4E44717D56574A24627C52(x UInt8) Engine=Memory;
SELECT multiIf((number % 2) = 0, [toUInt16(1), toUInt16(2)], (number % 3) = 0, [toUInt32(2), toUInt32(3)], [toInt8(3), toInt8(3)]) FROM system.numbers LIMIT 10;
SELECT 15;
CREATE ROW POLICY IF NOT EXISTS row_policy ON table_with_dot_column USING toDate(date) >= today() - 30 TO ALL;
CREATE DATABASE IF NOT EXISTS test_uv4t8hko 
CREATE TABLE test_4B21237D59685E41353B505B64793460354C4D5C624A57602A46687A3C25485F526C266D4672436E(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_9_185 VALUES 
INSERT INTO r6 SELECT 95
SELECT CAST(number, 'String') AS v2, caseWithExpression('x', 'y', 0, cond2) AS cond1, toNullable('0' = v2) AS cond2 FROM numbers(2);
CREATE TABLE test_5E5F597C4B6B347978247648203E3E5C5B2E7B29694144554B627C5B5129212A6763392966277451(x UInt8) Engine=Memory;
select toInt64('-1');
DROP DATABASE IF EXISTS test_p8lhvril 
SELECT arrayCumSumNonNegative(c) FROM test;
SELECT k, ignore(groupArrayInsertAt(x, x)) FROM (SELECT dummy AS k, (randConstant() * 10) % 10 AS x FROM remote('127.0.0.{1,1}', system.one)) GROUP BY k ORDER BY k;
SELECT concatWithSeparator('|', 'a', materialize('foo' :: Nullable(String))) == 'a|foo';
SELECT throwIf((SELECT (count(), sum(n)) FROM merge(currentDatabase(), '') WHERE type=3) != (7 + 1, 28 + 8)) FORMAT Null
CREATE TABLE test_7E4A483A307671284534302A23562546743936627A34564D746D693C5D386D3D7D4638625C3F2F7D(x UInt8) Engine=Memory;
SHOW CREATE QUOTA q4_01297;
SELECT 'Running test stateless/00763_create_query_as_table_engine_bug.sql from pid=1720' 
CREATE TABLE test_01193_18429.table_1_290 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_1_998 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_375220697E4A2E3D2A7B252051606E2D575C2F342C577A297D7B5734315C5E2D422A2240715F6055(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS t_async_insert
SELECT 'Running test stateless/01763_max_distributed_depth.sql from pid=1715' 
CREATE TABLE rename_table_multiple_compact (key Int32, value1 String, value2 Int32) ENGINE = MergeTree ORDER BY tuple() SETTINGS min_rows_for_wide_part = 100000;
SELECT number AS id, toString(number) AS s, range(number) AS arr FROM numbers(10) FORMAT TSKV
SELECT 'Running test stateless/00277_array_filter.sql from pid=1720' 
SELECT 1 IN (SELECT 'a') SETTINGS transform_null_in = 1;
SELECT 'Running test stateless/01603_decimal_mult_float.sql from pid=1715' 
CREATE TABLE test_01193_18429.table_6_79 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE QUOTA q4_01297 TO u1_01297;
INSERT INTO replicated_table_for_mutations select number, number from numbers(100000)
SELECT hasAll(NULL, NULL);
SELECT 'Running test stateless/02479_if_with_null_and_cullable_const.sql from pid=1722' 
SELECT 'Running test stateless/00534_functions_bad_arguments5.sh from pid=1724' 
SELECT '-- negative offset argument';
CREATE TABLE test_01193_18429.table_10_639 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP QUOTA IF EXISTS q02247
drop table if exists test_02377;
CREATE DATABASE IF NOT EXISTS test_ljq8n49h 
SELECT read_rows==8 from system.query_log WHERE query_kind ='Select' AND current_database = currentDatabase() AND endsWith(trimRight(query), 'SELECT * FROM tab_x WHERE hasToken(s, \'Alick\');') AND type='QueryFinish' AND result_rows==4 LIMIT 1;
SELECT CountryID, StartDate, Tax FROM database_for_range_dict.range_dictionary ORDER BY CountryID, StartDate, EndDate;
CREATE TABLE test_01193_18429.table_5_500 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE t1 (`c0` Int32) ENGINE = MergeTree PRIMARY KEY c0 SETTINGS index_granularity = 62413, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.7839828729629517, replace_long_file_name_to_hash = false, max_file_name_length = 27, merge_max_block_size = 2043, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 30039295, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 84728, primary_key_compress_block_size = 58326
SELECT 'using';
SELECT 54;
CREATE DATABASE dictdb_01076;
CREATE TABLE test_01193_18429.table_3_591 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT cityHash64(CAST( 0 AS Nullable(Int64)));
SELECT multiIf((number % 2) = 0, toUInt32(1), (number % 3) = 0, toInt16(2), toUInt32(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 2221, 500 settings ignore_materialized_views_with_dropped_target_table=1
DROP TABLE IF EXISTS nation;
SELECT * FROM landing FINAL ORDER BY time;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (39 < 32 AND 58 > 0 ? 39 : 0)), throwIf(last != (39 < 32 AND 58 > 0 ? least(32 - 1, 39 + 58 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(32) LIMIT 39, 58);
INSERT INTO test_01193_18429.table_10_743 VALUES 
insert into dist settings distributed_directory_monitor_split_batch_on_failure=1 values 
SELECT randStudentT(NULL);
INSERT INTO test_01193_18429.table_7_832 VALUES 
select bitmapHasAll(bitmapBuild([ 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33, 100,200,500]),bitmapBuild([ 100, 200, 501, 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33]));
SELECT concat([], ['Hello'], []);
CREATE DATABASE IF NOT EXISTS test_r6per57l 
DROP DATABASE IF EXISTS test_kn86ffco 
SELECT 8, 13, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (8 < 13 AND 13 > 0 ? 8 : 0)), throwIf(last != (8 < 13 AND 13 > 0 ? least(13 - 1, 8 + 13 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 8, 13);
SELECT cosineDistance((1, 1), (toNullable(0.5), 0.1)) from numbers(10);
SELECT n, count() AS m FROM t_inter_02233 GROUP BY n ORDER BY n WITH FILL INTERPOLATE ( m AS m + 1 );
SELECT 'parseDateTimeBestEffortOrZero';
INSERT INTO test_01193_18429.table_6_663 VALUES 
SELECT maxIntersections(NULL, NULL);
SELECT 'Running test stateless/02542_transform_old.sql from pid=1715' 
INSERT INTO test_01193_18429.table_9_893 VALUES 
SELECT 'Initial';
SELECT t1.*, t2.x FROM t1 ANY LEFT JOIN t2 USING (x,y) ORDER BY x;
CREATE TABLE t (`c` Decimal32(9)) ENGINE = MergeTree ORDER BY c SETTINGS index_granularity = 58271, min_bytes_for_wide_part = 130718805, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 7611, prefer_fetch_merged_part_size_threshold = 993741671, vertical_merge_algorithm_min_rows_to_activate = 900348, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 6677415893, index_granularity_bytes = 24237417, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 20699, primary_key_compress_block_size = 96252
CREATE TABLE test_01193_18429.table_10_946 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT dictIsIn('hierachical_cache_dictionary', number, number) FROM system.numbers LIMIT 6;
CREATE TABLE test_01193_18429.table_6_695 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT arrayPartialShuffle([]);
SELECT punycodeDecode(NULL);
CREATE TABLE test_60785D42506B3053713D677A355E713554787C4A363B696A5E492D3C456674623C6E442F362E616D(x UInt8) Engine=Memory;
INSERT INTO t64 SELECT (1 - toInt64(intExp2(40)) + number) AS x, x, x, x, x, x, x, x FROM numbers(513);
SELECT count(*) FROM source WHERE toYear(dt) > 2023;
SELECT * FROM test_papbazck.test_00571
DROP TABLE IF EXISTS prewhere_uint128;
CREATE DATABASE IF NOT EXISTS test_vbm869hr 
CREATE TABLE test_2F334B28483168313A30253B3C573A2E4D49456A384E516E5A215545363E7A617E7E2522396B413F(x UInt8) Engine=Memory;
CREATE TABLE test_02908_r1_199 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_199', 'r1') ORDER BY tuple()
SELECT soundex('');
SELECT 'Running test stateless/01746_extract_text_from_html.sql from pid=1713' 
system stop merges test_table;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (32 < 87 AND 100 > 0 ? 32 : 0)), throwIf(last != (32 < 87 AND 100 > 0 ? least(87 - 1, 32 + 100 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(87) LIMIT 32, 100);
alter table many_mutations delete where y = 911 * 2 settings mutations_sync = 0;
drop table if exists dist_01319;
SELECT 'Running test stateless/01682_cache_dictionary_complex_key.sql from pid=1705' 
SYSTEM STOP REPLICATION QUEUES execute_on_single_replica_r2;
INSERT INTO r10 SELECT 9 % 10 = 10 ? 9 - 1 : 9
drop table if exists data_01292;
SELECT dateDiff('day', toDateTime64('1927-01-01 00:00:00', 3, 'UTC'), materialize(toDate32('1927-01-02', 'UTC')), 'UTC');
CREATE DATABASE IF NOT EXISTS test_a688g476 
SELECT 'tn1 ANY RIGHT JOIN tn2 | bs = 9';
DROP DATABASE IF EXISTS test_pm1sosxf 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c6) AND (NOT c8)) OR ((NOT c4) AND c4 AND c7 AND (NOT c4)) SETTINGS convert_query_to_cnf = 1
CREATE TABLE test_01193_18429.table_1_252 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT dictHas('02176_test_complex_key_dictionary', tuple('0', '0'));
select 211 from test54378 prewhere part_date = '2018-04-19';
DROP DATABASE IF EXISTS test_bw4q5gzt 
INSERT INTO test_01193_18429.table_10_713 VALUES 
SELECT 'FixedString ConstVector';
INSERT INTO join_test (id, num) SELECT number, number FROM system.numbers LIMIT 1000;
CREATE DATABASE IF NOT EXISTS test_uepaqe2p 
OPTIMIZE TABLE four_rows_per_granule FINAL;
SELECT name, count() AS c FROM test_table GROUP BY name WITH TOTALS ORDER BY name FORMAT JSONStringsEachRow; 
SYSTEM STOP REPLICATED SENDS sqllt.table
SELECT 'Hello, "World"' AS x, 123 AS y, [1, 2, 3] AS z, (456, ['abc', 'def']) AS a, 'Newline\nhere' AS b FORMAT CSVWithNames;
DROP DATABASE IF EXISTS test_5fbhzonv 
CREATE TABLE distributed_01099_b AS local_01099_b ENGINE = Distributed('test_cluster_1_shard_3_replicas_1_unavailable', currentDatabase(), local_01099_b, rand());
CREATE TABLE test_3D4724543431505D3B5338482770366E3270684A38514F746D25667C6469392F3859546F6B6B3B41(x UInt8) Engine=Memory;
detach table test
DROP DATABASE IF EXISTS test_wz5ht6kg 
DROP DATABASE IF EXISTS test_libqe5ak 
INSERT INTO test_01193_18429.table_8_803 VALUES 
drop table if exists data_02572;
CREATE INDEX idx_tab3_2 ON tab3 (col0,col4);
SELECT 'Running test stateless/02543_alter_rename_modify_stuck.sh from pid=1720' 
alter table many_mutations delete where y = 681 * 2 settings mutations_sync = 0;
SELECT mapUpdate(materialize(map('k1', 1, 'k2', 2, 'k3', 3)), map('k2', 22, 'k3', 33, 'k4', 44));
CREATE TABLE test_table_1 (`id` UInt64, `value_1` String, `value_2` UInt64) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 678, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 12481, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 52, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 12976297, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 19884, primary_key_compress_block_size = 43253
CREATE TABLE t (`item_id` UInt64, `price_sold` Float32, `date` Date) ENGINE = MergeTree ORDER BY item_id SETTINGS index_granularity = 36642, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 83, merge_max_block_size = 19965, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 30, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 6236538, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 25600, primary_key_compress_block_size = 24689
INSERT INTO test_01193_18429.table_3_681 VALUES 
SELECT hasToken('needle hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay', 'needle'), ' expecting ', 1;
select 'constants:', [toDecimal32(1.1,4),toDecimal32(1.1,4)], byteSize([toDecimal32(1.1,4),toDecimal32(1.1,4)]), [toDate('2020-01-01'),toDate('2020-01-01')], byteSize([toDate('2020-01-01'),toDate('2020-01-01')]);
SELECT arrayCumSum([1.2::Decimal(60, 30), 3.45::Decimal(61, 29)]);
SELECT '94' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ffff:fffc::')))
drop table if exists data_01730;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt16(1), toUInt16(2)] WHEN (number % 3) = 0 THEN [toUInt32(2), toUInt32(3)] ELSE [toUInt8(3), toUInt8(3)] END FROM system.numbers LIMIT 10;
system enable failpoint replicated_merge_tree_insert_quorum_fail_0
SELECT parseDateTimeBestEffortOrNull(NULL);
SELECT medianGK(NULL);
DESC TABLE test_zm1mont4.data_02332
INSERT INTO test_01193_18429.table_3_300 VALUES 
SELECT a, toTypeName(a) FROM ( SELECT * FROM (SELECT 1 :: Int32 as a) t1 FULL JOIN (SELECT 2 :: UInt32 as a) t2 ON t1.a = t2.a ) ORDER BY 1;
SELECT domain('http://paul@www.example.com:80/') AS Host;
CREATE TABLE t_with_dots (`id` UInt32, `arr` Array(UInt32), `b.id` UInt32, `b.arr` Array(UInt32)) ENGINE = MergeTree ORDER BY id SETTINGS min_bytes_for_wide_part = 0, index_granularity = 62150, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 3029, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 13, min_merge_bytes_to_use_direct_io = 6221410830, index_granularity_bytes = 490418, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 81193, primary_key_compress_block_size = 13881
INSERT INTO src_7 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 67
SELECT 'Running test stateless/02307_join_get_array_null.sql from pid=1715' 
SET max_joined_block_size_rows = 69998;
INSERT INTO test_01193_18429.table_8_448 VALUES 
SELECT `UserID` FROM `test_c5zukzwt`.`users` WHERE `UserID` IN ((SELECT arrayJoin([1468013291393583084, 1321770221388956068])) AS `_subquery3773`)
SELECT number % 2 ? arrayMap(x -> toFixedString(x, 5), ['hello', 'world']) : arrayMap(x -> toFixedString(x, 5), ['a', 'b', 'c']) FROM system.numbers LIMIT 4;
DROP TABLE IF EXISTS BannerDict;
 select * from (select key, value from num_1) l inner join (select key, value from num_2 inner join (select number * 7 as key from numbers(1e5)) as nn on num_2.key = nn.key settings parallel_replicas_prefer_local_join=0) r on l.key = r.key order by l.key limit 10 offset 10000 SETTINGS allow_experimental_analyzer=1, send_logs_level='trace', allow_experimental_parallel_reading_from_replicas = 2, max_parallel_replicas = 2, parallel_replicas_for_non_replicated_merge_tree = 1, cluster_for_parallel_replicas = 'test_cluster_one_shard_three_replicas_localhost', parallel_replicas_prefer_local_join=0
SELECT (sum(uint64) - 2 * count(uint64)) - (sum(uint64) - 3 * count(uint64)) From test_table;
select key, arrayJoin(arr) as val from tab_00612 where (key, val) in ((1, 1), (2, 2)) order by key;
SELECT '-- resume merges --';
SELECT arrayEnumerateUniqRanked(2, [[], [3], [3]]);
CREATE DICTIONARY 01765_db.hashed_dictionary_simple_key_complex_attributes ( id UInt64, value_first String DEFAULT 'value_first_default', value_second Nullable(String) DEFAULT 'value_second_default' ) PRIMARY KEY id SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_complex_attributes_source_table')) LIFETIME(MIN 1 MAX 1000) LAYOUT(HASHED());
SELECT multiIf((number % 2) = 0, toInt32(1), (number % 3) = 0, toInt64(2), toInt64(3)) FROM system.numbers LIMIT 10;
CREATE TABLE src_table_3 (`n` UInt64) ENGINE = MergeTree ORDER BY n SETTINGS index_granularity = 9996, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 18, merge_max_block_size = 18952, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 25326443, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 33400, primary_key_compress_block_size = 43594 AS SELECT number * 100 FROM numbers(10)
INSERT INTO t64 SELECT (intExp2(32) - 1 + number) AS x, x, x, x, x, x, x, x FROM numbers(257);
SELECT halfMD5(NULL, NULL);
CREATE DATABASE IF NOT EXISTS test_7yaj62f7 
SELECT count(*) FROM test_block_mismatch_sk2 FINAL;
SELECT arrayJoin(CAST(['hello', 'world'] AS Array(FixedString(5)))) LIKE '%hell';
/* ddl_entry=query-0000000006 */ CREATE TABLE rdb_test_5mr53c62.t3 UUID 'dfaf8247-cd82-431c-9261-406a2e81489d' (`n` Int32) ENGINE = Log
SELECT JSONHas(NULL, NULL);
SELECT 'cube';
SELECT bitXor(NULL, NULL);
SELECT uniqExact(x), length(groupUniqArray(x)), arrayUniq(groupArray(x)), uniqExact(y), arrayUniq(groupArray(y)), uniqExact(concat(toString(x), '_', y)), arrayUniq(groupArray(x), groupArray(y)) FROM (SELECT round(log(intHash32(number))) AS x, toString(round(cbrt(intHash32(number)))) AS y FROM system.numbers LIMIT 10000);
CREATE TABLE test_4B427B2F53522E2844745422512E516748242775675B3A4C6221335C3E57292B325138437E49573F(x UInt8) Engine=Memory;
SELECT number AS id, toString(number) AS s, range(number) AS arr FROM numbers(10) FORMAT JSONCompactStringsEachRowWithNames
CREATE QUOTA q3_01297 FOR INTERVAL 1 MINUTE MAX query_selects = ' 12k ';
SELECT 'Running test stateless/01247_some_msan_crashs_from_22517.sql from pid=1714' 
SELECT 'Running test stateless/02833_concurrrent_sessions.sh from pid=1722' 
SELECT uniqUpTo([NULL], [NULL], [NULL]);
INSERT INTO test_01193_18429.table_10_719 VALUES 
SELECT multiIf((number % 2) = 0, [toUInt32(1), toUInt32(2)], (number % 3) = 0, [toInt32(2), toInt32(3)], [toInt16(3), toInt16(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_29617D664C32522C6B69255B2C5A607E582B6F516D357374244A283130335E41562B386D6D236166(x UInt8) Engine=Memory;
SELECT `dist_layer_01223`.`key` FROM `test_4zufzi3e`.`dist_layer_01223` ORDER BY `key` ASC LIMIT 1 BY `key`
CREATE DATABASE IF NOT EXISTS test_0mwnkmyz 
truncate table json;
CREATE TABLE test_6730577D6766662B574C78783B4873544D243A5377213739727E663A5B4A3E3A3D4C5067463A234B(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_10_618 VALUES 
INSERT INTO test_01193_18429.table_7_955 VALUES 
CREATE TABLE test_7E7E61487634472C73422E436C7541576D3E5B652C26627624383A274F56343A3D393D455B532252(x UInt8) Engine=Memory;
EXPLAIN QUERY TREE (SELECT sum(((uint64 AS m) + (1 AS n)) AS i) j from test_table where m > 0 and n > 0 and i > 0 having j > 0);
CREATE TABLE test_02099 (number UInt64, string String, date Date) ENGINE=Memory()
select * from tp_2 order by x;
SELECT id, anyLast(value1), anyLast(value2), anyLast(value3), anyLast(value4) FROM test_table_nullable_signed_values GROUP BY id ORDER BY id;
CREATE DATABASE IF NOT EXISTS test_35qm2s02 
SELECT avgWeighted(x, w) FROM values('x Int64, w Int64', (4, 1), (1, 0), (10, 2));
SELECT a, b, c, d FROM t_fixed_prefix WHERE a = 1 AND c = 1 ORDER BY a, b, c, d SETTINGS optimize_read_in_order = 0
select initializeAggregation('uniqStateForEach', [1, 2]);
CREATE TABLE test_48236F31234E6F50677E50745D407D7D3D4B506220232B51327D227E3F6C6E40636E315C4922773D(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02782_avro_decimals.sh from pid=1722' 
CREATE TABLE rmt1 (`n` int) ENGINE = ReplicatedMergeTree('/test/{database}/02438/', '1') ORDER BY tuple() SETTINGS index_granularity = 27128, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.18236669898033142, replace_long_file_name_to_hash = true, max_file_name_length = 88, merge_max_block_size = 601, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 409512, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 3849354, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 54496, primary_key_compress_block_size = 71988
CREATE TABLE test_696B767229434D7D4262402B2D58587D202228725335765B3F5F224B62437B772F6E426A6E5B794E(x UInt8) Engine=Memory;
CREATE TABLE test_2053356B233670623B233147245B60236F7E605E6C5C2C3C68627623332E74535048292A3C4E5A5A(x UInt8) Engine=Memory;
SELECT * FROM table_gcd_codec_date32;
DETACH TABLE concurrent_mutate_mt_3
SELECT positionCaseInsensitiveUTF8(materialize(concat('test a1ÃÂAa test', arrayStringConcat(arrayMap(x -> ' ', range(20000))))), 'a1Ã¡ÂºÂaa') AS res;
SELECT hex(INET6_ATON('2a02:6b8::11'));
INSERT INTO test_01193_18429.table_10_241 VALUES 
alter table shard_0.from_1 on cluster test_cluster_two_shards_different_databases move partition tuple() to table shard_0.to format Null settings distributed_ddl_output_mode='never_throw', distributed_ddl_task_timeout = 1;
CREATE DATABASE IF NOT EXISTS test_cm3octjt 
SELECT multiIf(1, [col2, 'bar'], 1, ['foo', 'bar'], [col6, 'bar']) FROM multi_if_check;
INSERT INTO topXtest SELECT number FROM numbers(100);
SELECT MONTH(NULL);
SELECT 'Running test stateless/01134_set_overflow_mode.sql from pid=1718' 
INSERT INTO r6 SELECT 29 % 10 = 6 ? 29 - 1 : 29
CREATE TABLE test_31652850685A2E4843444342223F424C54732B793256276C7A442D6B4D325B58307A373F37525D7D(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02688_long_aggregate_function_names.sql from pid=1726' 
DROP TABLE keeper_retries_r1 SYNC;
INSERT INTO test_01193_18429.table_1_882 VALUES 
select 1 = multiSearchAny(materialize('abcdefgh'), ['bc']) from system.numbers limit 129;
CREATE TABLE IF NOT EXISTS lhs (`x` String) ENGINE = ReplacingMergeTree ORDER BY x SETTINGS index_granularity = 53916, min_bytes_for_wide_part = 75575527, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 21770, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 107786, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10174945113, index_granularity_bytes = 15145779, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 14436, primary_key_compress_block_size = 57717
INSERT INTO r10 SELECT 85
select arr1, o, 2, arraySlice(arr1, o, 2) from array_functions;
select toTypeName(randConstant(Null));
select number + nan k from numbers(256) group by k;
SELECT '--- Original table';
SELECT has(b, toDecimal128(0.4, 3)) FROM decimal;
CREATE MATERIALIZED VIEW mv_checkouts2target TO target_table AS SELECT id, maxState( toDateTime(0, 'UTC') ) as latest_login_time, maxState( ts ) as latest_checkout_time, if(max(current_latest_login_time) > 0, minState( toUInt64(ts - current_latest_login_time)), minState( toUInt64(-1) ) ) as fastest_session, maxState( toUInt64(0) ) as biggest_inactivity_period FROM checkouts LEFT JOIN (SELECT id, maxMerge(latest_login_time) as current_latest_login_time FROM target_table WHERE id IN (SELECT id FROM checkouts) GROUP BY id) USING (id) GROUP BY id;
DROP TEMPORARY TABLE IF EXISTS table_merge_tree_02525;
DROP DATABASE IF EXISTS test_9xt4f83i 
CREATE TABLE defaults ( s FixedString(20) )ENGINE = Memory();
SELECT 1 IN ((SELECT 1) AS `_subquery219`) FROM `system`.`one` GROUP BY `dummy`
select arrayAUC(cast([10, 40, 35, 80] as Array(UInt8)), [0, 0, 1, 1]);
CREATE TABLE test_01193_18429.table_4_626 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT multiIf(1, toFixedString('foo', 16), 1, toFixedString('bar', 16), toFixedString('baz', 16)) FROM multi_if_check;
CREATE TABLE IF NOT EXISTS test_01444.t5224 (`x` UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 49736, min_bytes_for_wide_part = 645103364, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 6, merge_max_block_size = 15200, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 21360504, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75390, primary_key_compress_block_size = 98921
SELECT arrayDifference([toUInt256(1), 3]), toTypeName(arrayDifference([toUInt256(1), 3]));
create table test (x UInt64, y UInt64 default 42) engine=File(TSKV, '02562_data.tskv') settings input_format_defaults_for_omitted_fields=1
DROP DATABASE IF EXISTS test_9rf4el3i 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c3)) OR ((NOT c9) AND (NOT c0)) OR ((NOT c3) AND (NOT c0) AND c3 AND c0) OR (c6 AND (NOT c5) AND c4 AND c8) OR ((NOT c9) AND (NOT c7) AND (NOT c1) AND c9 AND (NOT c3)) OR (c5) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_3F42587C5856455F3E242553336C766A7949472A3F7C3E622A7973746578256D50546C4F4B4C3B7A(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_7_415 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_8_646 VALUES 
SELECT toTypeName(x), x, isNull(x), if(x = 0, 'fail', 'ok'), if(x = 1, 'fail', 'ok'), if(x >= 0, 'fail', 'ok') FROM (SELECT materialize(if(1 = 0, toNullable(toUInt8(0)), NULL)) AS x);
ALTER TABLE adaptive_granularity_alter MODIFY COLUMN v2 String;
SELECT erfc(-1);
SELECT 'Ok' FROM 02703_db.02703_unexpected_columns;
SELECT x, arrayJoin(x) FROM (SELECT materialize([1, NULL, 2]) AS x);
SELECT multiIf((number % 2) = 0, toUInt32(1), (number % 3) = 0, toInt32(2), toUInt16(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_9_62 VALUES 
SELECT 11, 4, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (11 < 13 AND 4 > 0 ? 11 : 0)), throwIf(last != (11 < 13 AND 4 > 0 ? least(13 - 1, 11 + 4 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 11, 4);
SELECT `key` FROM `test_4zufzi3e`.`data_01223` ORDER BY `key` ASC
CREATE TABLE test_01193_18429.table_5_474 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE bad_date_time (`time` Datetime('Asia/Istanbul'), `count` UInt16) ENGINE = MergeTree ORDER BY time SETTINGS index_granularity = 39757, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 82, merge_max_block_size = 18491, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 4331991747, index_granularity_bytes = 30659204, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 96589, primary_key_compress_block_size = 76639
SELECT 'Running test stateless/02354_window_expression_with_aggregation_expression.sql from pid=1726' 
SELECT `x`.`number` FROM `test_gkn6fgtl`.`x` ORDER BY `number` ASC
INSERT INTO src_10 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 3
CREATE TABLE test_794239252654736D6B224135317D4E6946256F4E536835687A693A4F594942226E43615E6D655844(x UInt8) Engine=Memory;
SELECT arrayFilter(x -> 0, arrayMap(x -> toString(x), [1, 2, 3]));
CREATE TABLE test_2E3F343163445B226E4F42656222563D2E59743A215D374A382B55494160386C2D373447326B4C4C(x UInt8) Engine=Memory;
select count(), sum(pointInPolygon((x, y),[(-82.311206, 28.960046), (-81.658722, 28.960345), (-81.65921, 29.047816), (-81.638697, 29.047761), (-81.641902, 29.276992), (-81.680709, 29.323243), (-81.675429, 29.338641), (-81.656377, 29.337981), (-81.668564, 29.371704), (-81.741634, 29.371123), (-81.741671, 29.429891), (-81.774905, 29.429249), (-81.776206, 29.487448), (-81.842765, 29.486042), (-81.844929, 29.521679), (-81.912052, 29.503906), (-81.93199, 29.51639), (-82.03174, 29.492385), (-82.055896, 29.471639), (-82.056748, 29.439952), (-82.080922, 29.440351), (-82.099886, 29.418665), (-82.101119, 29.438298), (-82.134555, 29.434982), (-82.148231, 29.417245), (-82.211144, 29.429693), (-82.212727, 29.465624), (-82.188, 29.456239), (-82.211448, 29.484017), (-82.40662, 29.485049), (-82.403059, 29.215536), (-82.534829, 29.2147), (-82.535191, 29.041186), (-82.471915, 29.052551), (-82.418649, 29.013144), (-82.401814, 29.019004), (-82.365594, 29.00246), (-82.311206, 28.960046)])) from coords;
SELECT * FROM file('test_02104_null.data', 'JSONStringsEachRow', 's Nullable(String)')
SELECT min(x), max(x) FROM (SELECT arrayJoin([toFloat64(0.0), -nan, toFloat64(1.0), toFloat64(-1.0)]) AS x);
DROP DATABASE IF EXISTS test_nj60d0l5 
INSERT INTO mt SELECT * FROM numbers(1000);
SELECT value1 FROM table_for_rename WHERE key = 1;
CREATE TABLE test_02908_r1_220 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_220', 'r1') ORDER BY tuple()
CREATE TABLE test_01193_18429.table_9_333 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO r3 SELECT 95 % 10 = 3 ? 95 - 1 : 95
CREATE TABLE test_01193_18429.table_6_603 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test1 SELECT * FROM numbers(10000);
SELECT count(), sum(n), sum(m=1), sum(m=2), sum(m=3) FROM mt;
select number % 10, (rand() % 10) as l, randomString(l) as s, cityHash64(s) from numbers(100000)
SELECT gccMurmurHash(NULL);
SELECT * FROM merge(currentDatabase(), 'test_local_1|test_local_2') WHERE _table = 'test_local_1';
SELECT * FROM test_table ORDER BY id;
DROP DATABASE IF EXISTS test_mle357t9 
DESCRIBE (SELECT arrayMap(x -> x + test_table.id + test_table.id + id, [1,2,3]) FROM test_table);
DESC (SELECT * FROM HASH_MV);
SELECT toString(toStartOfTenMinutes(toDateTime(1549483055), 'Europe/London'), 'Europe/London');
SELECT id FROM test_table UNION ALL SELECT id FROM test_table;
INSERT INTO test_01193_18429.table_10_78 VALUES 
DROP DATABASE IF EXISTS test_uge38r6t 
CREATE TABLE partitioned_by_week_replica2 (`d` Date, `x` UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test/partitioned_by_week_00502', '2') PARTITION BY toMonday(d) ORDER BY x SETTINGS index_granularity = 51693, min_bytes_for_wide_part = 334324242, ratio_of_defaults_for_sparse_serialization = 0.8895542621612549, replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 10896, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 7036590958, index_granularity_bytes = 19358850, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 84164, primary_key_compress_block_size = 18504
INSERT INTO test_01193_18429.table_6_468 VALUES 
SELECT arrayJoin(CAST(['hello', 'world'] AS Array(FixedString(5)))) LIKE '_orld%';
INSERT INTO r7 SELECT 64 % 10 = 7 ? 64 - 1 : 64
select '----- Map/Map hash / State / ip4 -----';
CREATE TABLE test_7C6F45657E275C28393C40594B3C50432275334666307E366E5D5E47356B21215A4C5750637C7B6B(x UInt8) Engine=Memory;
select accurateCast('192.0.2.1', 'IPv6');
SELECT toTypeName(sum(n)) FROM (SELECT toFloat32(number) AS n FROM system.numbers LIMIT 100);
drop table if exists testXA;
INSERT INTO test_01193_18429.table_1_578 VALUES 
SELECT tupleConcat(NULL);
DROP DATABASE IF EXISTS test_qsg13kbx 
ALTER TABLE t ATTACH PART 'all_1_1_0';
DROP TABLE IF EXISTS nested_table
INSERT INTO src_6 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 76
CREATE TABLE test_4427735A23452A453E2A3566752B4D474153387824585167334D344A405B48705465432841426C71(x UInt8) Engine=Memory;
CREATE TABLE input_function_table_4 (a String, b Date, c Int32, d Int16) ENGINE=Memory()
SELECT count() FROM t_cnf_fuzz WHERE (c0 AND c0 AND (NOT c5) AND c0 AND (NOT c2)) OR ((NOT c4) AND c9 AND (NOT c1) AND c3) OR ((NOT c8) AND c0 AND (NOT c4) AND (NOT c9) AND (NOT c0)) OR ((NOT c4) AND c6 AND c0) OR (c4 AND c5) OR ((NOT c1) AND (NOT c2) AND c4 AND c9 AND (NOT c4)) OR (c4) OR ((NOT c1) AND c0 AND (NOT c7) AND (NOT c6)) OR ((NOT c0) AND c9 AND c6) OR (c1 AND c8 AND c4 AND (NOT c6) AND (NOT c6)) SETTINGS convert_query_to_cnf = 0
SELECT addMilliseconds('2023-10-22', 1), addMilliseconds('2023-10-22 12:34:56.123', 1);
CREATE TABLE test_75357A2E403169353F612D4B465850586861554F243C6E5E794F4227443C5756786C4F4766372B5C(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_3_742 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE t2 (key UInt32, key1 UInt32, key2 UInt32, key3 Nullable(UInt32), s String) engine = TinyLog;
SELECT t1_id, t1.value, t2_id, t2.value, t3_id, t3.value FROM test_table_join_1 AS t1 FULL JOIN test_table_join_2 AS t2 ON (t1.id AS t1_id) = (t2.id AS t2_id) FULL JOIN test_table_join_3 AS t3 ON t2_id = (t3.id AS t3_id);
create table test1601_detach_permanently_lazy.test_name_reuse (number UInt64) engine=Log;
DROP DATABASE dict_db_01225;
 SELECT sipHash64(9, groupArray((name, type))) FROM (SELECT name, type FROM system.columns WHERE database = 'system' AND table = 'metric_log' ORDER BY position) 
DROP TABLE IF EXISTS t_dst;
SELECT rightPad(toFixedString('abc343243424324', 15), 1) as a, toTypeName(a);
CREATE TABLE test_01193_18429.table_6_984 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
EXPLAIN PIPELINE SELECT a, c FROM t_fixed_prefix WHERE b = 1 ORDER BY a, c SETTINGS optimize_read_in_order = 1
SELECT count() FROM file_changes
SELECT replaceRegexpAll('aazzqa', 'z*', '') == 'aaqa';
CREATE TABLE test_01193_18429.table_5_264 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT read_rows==8 from system.query_log WHERE query_kind ='Select' AND current_database = currentDatabase() AND endsWith(trimRight(query), 'SELECT * FROM tab WHERE s[\'Click\'] = \'Click a03\';') AND type='QueryFinish' AND result_rows==1 LIMIT 1;
CREATE TABLE test_7E57254F36363B262E322D2B3534317A23543E51795D76275528582D535E707D2029265175433241(x UInt8) Engine=Memory;
CREATE INDEX idx_tab3_1 ON tab3 (col4,col0);
OPTIMIZE TABLE index;
SELECT 'SELECT * FROM merge(currentDatabase(), 02763_merge_log) WHERE x>2';
CREATE DATABASE IF NOT EXISTS test_s0iewrqu 
CREATE TABLE test_01193_18429.table_6_525 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_4_565 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP TABLE empty_tiny_log;
CREATE DATABASE IF NOT EXISTS test_jmgkyguq 
SELECT 'Running test stateless/01137_order_by_func_final.sql from pid=1724' 
INSERT INTO test_01193_18429.table_6_423 VALUES 
DROP TABLE IF EXISTS trailing_comma_1 SYNC;
SELECT geohashDecode('');
INSERT INTO test_01193_18429.table_4_927 VALUES 
create temporary table t engine Memory as select * from generateRandom( $$ a Array(Int8), b UInt32, c Nullable(String), d Decimal32(4), e Nullable(Enum16('h' = 1, 'w' = 5 , 'o' = -200)), f Float64, g Tuple(Date, DateTime('Asia/Istanbul'), DateTime64(3, 'Asia/Istanbul'), UUID), h FixedString(2), i Array(Nullable(UUID)) $$, 10, 5, 3) limit 2;
set optimize_min_equality_disjunction_chain_length = 2;
CREATE TABLE IF NOT EXISTS replicated_deduplicate_by_columns_r1 (`id` Int32, `val` UInt32, `unique_value` UInt64 MATERIALIZED rowNumberInBlock()) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01581/replicated_deduplicate', 'r1') ORDER BY id SETTINGS index_granularity = 61131, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 22817, prefer_fetch_merged_part_size_threshold = 532513516, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 27339346, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 56178, primary_key_compress_block_size = 58887
INSERT INTO test_01193_18429.table_6_87 VALUES 
select 1 = sequenceMatch('(?1)(?t==1)(?2)')(time, data = 1, data = 2) from sequence_test;
CREATE TABLE full_join__fuzz_4 (`x` LowCardinality(UInt32), `s` LowCardinality(String)) ENGINE = Join(`ALL`, FULL, x) SETTINGS join_use_nulls = 1;
SELECT 'aes-192-cbc' AS mode, decrypt(mode, '[HIDDEN]') = input FROM encryption_test
drop table if exists pr_t;
DROP DATABASE IF EXISTS test_55ygjg5y 
INSERT INTO r7 SELECT 24 % 10 = 7 ? 24 - 1 : 24
CREATE DATABASE IF NOT EXISTS test_n1qblr1w 
CREATE TABLE roundtrip_persons_02240 AS persons_02240
SELECT 20,'Hello',bin(bitShiftRight('Hello', 20));
alter table many_mutations delete where y = 913 * 2 settings mutations_sync = 0;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toInt64(2), toInt64(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_5_619 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE DATABASE IF NOT EXISTS test_9yt80t8x 
CREATE TABLE test_505734674F367C5F574E4560657D58753D5C6F463320794E745A6A327478252266516E273B664941(x UInt8) Engine=Memory;
CREATE TABLE constraint_test_assumption (URL String, a Int32, CONSTRAINT c1 ASSUME domainWithoutWWW(URL) = 'bigmir.net', CONSTRAINT c2 ASSUME URL > 'zzz' AND startsWith(URL, 'test') = True) ENGINE = TinyLog;
SELECT * FROM set_idx WHERE multiSearchAny(s, ['data', 'base']) FORMAT JSON
select 43 AS z from remote('127.0.0.{2,3}', system.one) group by 42, 43, 44;
CREATE TABLE test_3E477A732131754D776D3D725E594C5A47414A7D5C4368705F7D2049567372395F65524B39357223(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_vyoyo2e3 
SELECT cbrt(-1);
CREATE QUOTA q6_01297 KEY BY client_key, ip_address;
CREATE TABLE test_26234D724B34697C442E4842475E4F765D4D734438364F4430752377656F5C58575D5C535A733A2D(x UInt8) Engine=Memory;
CREATE TABLE t2 (`c` Nullable(Int64), `d` Nullable(String)) engine = Memory;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (52 < 82 AND 10 > 0 ? 52 : 0)), throwIf(last != (52 < 82 AND 10 > 0 ? least(82 - 1, 52 + 10 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(82) LIMIT 52, 10);
CREATE TABLE test_02908_r3_269 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_269', 'r3') ORDER BY tuple()
INSERT INTO test_01193_18429.table_10_898 VALUES 
SELECT database, t.name FROM (SELECT name, database FROM system.tables) AS t JOIN (SELECT name AS database FROM system.databases) AS db USING database WHERE database = 'system' AND t.name = 'one' SETTINGS join_default_strictness = 'ALL' FORMAT PrettyCompactNoEscapes;
INSERT INTO t_parse_tuples VALUES 
CREATE TABLE tp (`type` Int32, `device` UUID, `cnt` UInt64) ENGINE = MergeTree ORDER BY (type, device) SETTINGS index_granularity = 27318, min_bytes_for_wide_part = 271972546, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 127, merge_max_block_size = 24363, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 9732105119, index_granularity_bytes = 14318316, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 56521, primary_key_compress_block_size = 38005
SELECT intDiv(1, CAST(1, 'Nullable(Float32)'));
DROP TABLE IF EXISTS arrow_nested_arrays
CREATE TABLE test_2D224D64492655476B694D296A383D3E7E35723E4E487D7B365C445836422C686757562445483074(x UInt8) Engine=Memory;
select minMerge(y) from ( select cast(x, 'AggregateFunction(min, Decimal(18, 10))') y from ( select arrayReduce('minState', [toDecimal64('0.000001', 10), toDecimal64('1.1', 10)]) x ) );
CREATE TABLE test_01193_18429.table_6_547 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select isNaN(nan) = 1;
SELECT t1.value, t2.value, t3.value FROM test_table_join_1 AS t1 LEFT JOIN test_table_join_2 AS t2 ON t1.id = t2.id OR t1.id = t2.id FULL JOIN test_table_join_3 AS t3 ON t2.id = t3.id OR t3.id = t2.id;
SELECT stem('fr', 'remplissage');
INSERT INTO test_01193_18429.table_6_203 VALUES 
CREATE INDEX idx_tab2_2 ON tab2 (col0 DESC,col3,col1);
CREATE TABLE test_01193_18429.table_5_61 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select 8 as offset, -8 as length, toFixedString('Hello', 6) as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
SELECT count() FROM test_01307 WHERE identity(val) = '2';
CREATE TABLE test_2B3F5E726740677B582851456E4D7D594429766223644B32267E407A6F6A255F5A702A662D6C6A4D(x UInt8) Engine=Memory;
SELECT 'Still alive';
SELECT _shard_num FROM cluster('test_cluster_one_shard_two_replicas') ORDER BY _shard_num;
CREATE DATABASE IF NOT EXISTS test_xjq0ysa4 
CREATE TABLE test_01193_18429.table_8_281 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT sumMapWithOverflow(NULL, NULL, NULL);
DROP TABLE IF EXISTS test_g0lvg7te.test_table_01080
INSERT INTO zstd_1_24 SELECT * FROM words;
select arraySort(arrayIntersect([-100], [156]));
SELECT '--- Other Types Empty ---';
SELECT 19
DROP DATABASE IF EXISTS test_e36rmybr 
select v.`Tuple(a UInt32, b UInt32)`.b from test format Null;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt16(1), toUInt16(2)] WHEN (number % 3) = 0 THEN [toUInt8(2), toUInt8(3)] ELSE [toUInt8(3), toUInt8(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE B (`k` UInt32, `t` Float32, `b` Float64) ENGINE = MergeTree ORDER BY (k, t) SETTINGS index_granularity = 57643, min_bytes_for_wide_part = 636221231, ratio_of_defaults_for_sparse_serialization = 0.34237709641456604, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 6784, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 2424484770, index_granularity_bytes = 8067457, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 32242, primary_key_compress_block_size = 12095
ALTER USER u2_01292 IDENTIFIED
select makeDate32(1984, 3, False);
SELECT toStartOfInterval(toDateTime64('2023-10-09 10:11:12.000999', 6), toIntervalMillisecond(1));
SELECT uniqIf(uuid, empty(uuid)), uniqIf(uuid, notEmpty(uuid)) FROM ( SELECT toUUID('00000000-0000-0000-0000-000000000002') AS uuid UNION ALL SELECT toUUID('00000000-0000-0000-0000-000000000000') AS uuid UNION ALL SELECT toUUID('00000000-0000-0000-0000-000000000001') AS uuid );
CREATE TABLE test1_00395(col1 Array(Nullable(UInt64))) Engine=TinyLog;
SELECT multiIf((number % 2) = 0, toUInt32(1), (number % 3) = 0, toUInt64(2), toUInt32(3)) FROM system.numbers LIMIT 10;
SELECT ['Hello', concat('wor', 'ld')];
CREATE INDEX idx_tab3_1 ON tab3 (col1);
SELECT timeZoneOffset(NULL, NULL, NULL);
CREATE TABLE test_5340294D25543226596D7E6D382E63216940347E4357732F214A76623C396D69434F432364577342(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_3_939 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select * from view_00840 order by table
SELECT bin(toInt8(100)) AS res;
create table local_t_l5ydey on cluster test_shard_localhost ( c_qv5rv INTEGER , c_rutjs4 INTEGER , c_wmj INTEGER , c_m3 TEXT NOT NULL, primary key(c_qv5rv) ) engine=ReplicatedMergeTree('/clickhouse/tables/test_' || currentDatabase() || '/{shard}/local_t_l5ydey', '{replica}');
SELECT sum(x) from empty_pk;
INSERT INTO test_01193_18429.table_9_638 VALUES 
INSERT INTO test_01193_18429.table_7_18 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat32(1), toFloat32(2)] WHEN (number % 3) = 0 THEN [toFloat32(2), toFloat32(3)] ELSE [toUInt16(3), toUInt16(3)] END FROM system.numbers LIMIT 10;
SELECT `UserID` FROM `test_c5zukzwt`.`users` WHERE `UserID` IN ((SELECT arrayJoin([1468013291393583084, 1321770221388956068])) AS `_subquery3865`)
create table dedup_test(A Int64) Engine = MergeTree order by A settings non_replicated_deduplication_window=1000;
CREATE DATABASE IF NOT EXISTS test_nnjpob7g 
CREATE DICTIONARY IF NOT EXISTS db_01501.cache_dict ( KeyField UInt64 DEFAULT 9999999, UInt8_ UInt8 DEFAULT 55, UInt16_ UInt16 DEFAULT 65535, UInt32_ UInt32 DEFAULT 4294967295, UInt64_ UInt64 DEFAULT 18446744073709551615, Int8_ Int8 DEFAULT -128, Int16_ Int16 DEFAULT -32768, Int32_ Int32 DEFAULT -2147483648, Int64_ Int64 DEFAULT -9223372036854775808, UUID_ UUID DEFAULT '550e8400-0000-0000-0000-000000000000', Date_ Date DEFAULT '2018-12-30', DateTime_ DateTime DEFAULT '2018-12-30 00:00:00', String_ String DEFAULT 'hi', Float32_ Float32 DEFAULT 111.11, Float64_ Float64 DEFAULT 222.11, Decimal32_ Decimal32(5) DEFAULT 333.11, Decimal64_ Decimal64(15) DEFAULT 444.11, Decimal128_ Decimal128(35) DEFAULT 555.11, ParentKeyField UInt64 DEFAULT 444) PRIMARY KEY KeyField SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_cache_dict' DB 'db_01501')) LIFETIME(5) LAYOUT(CACHE(SIZE_IN_CELLS 20));
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c8) AND c2 AND (NOT c1)) OR (c0 AND (NOT c1) AND c5 AND c1 AND (NOT c6)) OR (c7 AND c8 AND (NOT c4) AND c9 AND c1) OR (c8 AND c2 AND c8 AND (NOT c1) AND c2) OR ((NOT c7) AND c1) OR ((NOT c3) AND c3 AND (NOT c2) AND (NOT c5)) SETTINGS convert_query_to_cnf = 1
SELECT count(in(NULL, []));
INSERT INTO test_01193_18429.table_7_43 VALUES 
CREATE TABLE test_01193_18429.table_5_11 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_02908_r2_214 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_214', 'r2') ORDER BY tuple()
CREATE TABLE test_01193_18429.table_9_597 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
ALTER TABLE test_table_10 DELETE WHERE key % 2 = 0
CREATE TABLE t1 (`s` String, `x` Array(UInt8), `k` UInt64) ENGINE = Join(ANY, LEFT, k);
SELECT hiveHash(NULL, NULL, NULL);
drop table if exists t50;
select array, d1, a1, a2, a3, a4, a5, a6 from aliases_test array join d1;
CREATE DATABASE IF NOT EXISTS test_6ft8zzfr 
CREATE TABLE test_736E226F597655692A447B473D525B3F455F62763E6726577E685543325D5B3D5059292B3627736F(x UInt8) Engine=Memory;
SELECT intDivOrZero((5,4), 0);
SELECT count() FROM null_in_1 WHERE (a, b) IN (1, NULL);
SELECT toDecimal32OrNull ('54.1234567', 4);
WITH CAST(NULL, 'Nullable(String)') AS input, 'aes-256-ofb' AS mode SELECT toTypeName(input), hex(aes_encrypt_mysql(mode, '[HIDDEN]')) FROM encryption_test LIMIT 1
select makeDateTime(1984, 1, 0, 0, 0, 0, 'UTC');
DROP TABLE IF EXISTS test_table_9
CREATE TABLE test_6F744E5C3D43326B5B4A683437343D33483D4D2A3B4D294E30756E6D7D2555326F44274339565C20(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02845_arrayShiftRotate.sql from pid=1718' 
CREATE TABLE test_01193_18429.table_5_836 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DATABASE IF NOT EXISTS test_0vh3xtm3 
CREATE DATABASE IF NOT EXISTS test_uqb44yva 
SYSTEM SYNC REPLICA dst_5 STRICT
CREATE TABLE test_775E322A464A557B404747566824467A4B2E59246A7453343C70204927274B6A5E766762632D4E60(x UInt8) Engine=Memory;
insert into tbl_8parts_8granules_rnd select number, 1 from numbers_mt(524288);
SELECT toUInt16OrNull(NULL, NULL, NULL);
select 3 = positionUTF8('ÃÂ°ÃÂ±ÃÂ²', 'ÃÂ²');
SELECT covarPopMatrix(NULL, NULL, NULL);
INSERT INTO test_01193_18429.table_7_415 VALUES 
CREATE DATABASE IF NOT EXISTS test_buymlygc 
DROP DATABASE IF EXISTS test_3eb2h3zx 
SELECT 128, -2147483649, 128 = -2147483649, 128 != -2147483649, 128 < -2147483649, 128 <= -2147483649, 128 > -2147483649, 128 >= -2147483649, -2147483649 = 128, -2147483649 != 128, -2147483649 < 128, -2147483649 <= 128, -2147483649 > 128, -2147483649 >= 128 , toUInt8(128) = toInt64(-2147483649), toUInt8(128) != toInt64(-2147483649), toUInt8(128) < toInt64(-2147483649), toUInt8(128) <= toInt64(-2147483649), toUInt8(128) > toInt64(-2147483649), toUInt8(128) >= toInt64(-2147483649), toInt64(-2147483649) = toUInt8(128), toInt64(-2147483649) != toUInt8(128), toInt64(-2147483649) < toUInt8(128), toInt64(-2147483649) <= toUInt8(128), toInt64(-2147483649) > toUInt8(128), toInt64(-2147483649) >= toUInt8(128) , toUInt16(128) = toInt64(-2147483649), toUInt16(128) != toInt64(-2147483649), toUInt16(128) < toInt64(-2147483649), toUInt16(128) <= toInt64(-2147483649), toUInt16(128) > toInt64(-2147483649), toUInt16(128) >= toInt64(-2147483649), toInt64(-2147483649) = toUInt16(128), toInt64(-2147483649) != toUInt16(128), toInt64(-2147483649) < toUInt16(128), toInt64(-2147483649) <= toUInt16(128), toInt64(-2147483649) > toUInt16(128), toInt64(-2147483649) >= toUInt16(128) , toInt16(128) = toInt64(-2147483649), toInt16(128) != toInt64(-2147483649), toInt16(128) < toInt64(-2147483649), toInt16(128) <= toInt64(-2147483649), toInt16(128) > toInt64(-2147483649), toInt16(128) >= toInt64(-2147483649), toInt64(-2147483649) = toInt16(128), toInt64(-2147483649) != toInt16(128), toInt64(-2147483649) < toInt16(128), toInt64(-2147483649) <= toInt16(128), toInt64(-2147483649) > toInt16(128), toInt64(-2147483649) >= toInt16(128) , toUInt32(128) = toInt64(-2147483649), toUInt32(128) != toInt64(-2147483649), toUInt32(128) < toInt64(-2147483649), toUInt32(128) <= toInt64(-2147483649), toUInt32(128) > toInt64(-2147483649), toUInt32(128) >= toInt64(-2147483649), toInt64(-2147483649) = toUInt32(128), toInt64(-2147483649) != toUInt32(128), toInt64(-2147483649) < toUInt32(128), toInt64(-2147483649) <= toUInt32(128), toInt64(-2147483649) > toUInt32(128), toInt64(-2147483649) >= toUInt32(128) , toInt32(128) = toInt64(-2147483649), toInt32(128) != toInt64(-2147483649), toInt32(128) < toInt64(-2147483649), toInt32(128) <= toInt64(-2147483649), toInt32(128) > toInt64(-2147483649), toInt32(128) >= toInt64(-2147483649), toInt64(-2147483649) = toInt32(128), toInt64(-2147483649) != toInt32(128), toInt64(-2147483649) < toInt32(128), toInt64(-2147483649) <= toInt32(128), toInt64(-2147483649) > toInt32(128), toInt64(-2147483649) >= toInt32(128) , toUInt64(128) = toInt64(-2147483649), toUInt64(128) != toInt64(-2147483649), toUInt64(128) < toInt64(-2147483649), toUInt64(128) <= toInt64(-2147483649), toUInt64(128) > toInt64(-2147483649), toUInt64(128) >= toInt64(-2147483649), toInt64(-2147483649) = toUInt64(128), toInt64(-2147483649) != toUInt64(128), toInt64(-2147483649) < toUInt64(128), toInt64(-2147483649) <= toUInt64(128), toInt64(-2147483649) > toUInt64(128), toInt64(-2147483649) >= toUInt64(128) , toInt64(128) = toInt64(-2147483649), toInt64(128) != toInt64(-2147483649), toInt64(128) < toInt64(-2147483649), toInt64(128) <= toInt64(-2147483649), toInt64(128) > toInt64(-2147483649), toInt64(128) >= toInt64(-2147483649), toInt64(-2147483649) = toInt64(128), toInt64(-2147483649) != toInt64(128), toInt64(-2147483649) < toInt64(128), toInt64(-2147483649) <= toInt64(128), toInt64(-2147483649) > toInt64(128), toInt64(-2147483649) >= toInt64(128) 
CREATE TABLE test_02908_r1_197 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_197', 'r1') ORDER BY tuple()
INSERT INTO t_sparse_mutations_1 SELECT 1, number, if (number % 21 = 0, 'foo', '') FROM numbers (10000);
DROP DATABASE IF EXISTS test_tfvhgob7 
CREATE TABLE test_01193_18429.table_2_930 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT foo.a FROM (SELECT 1 AS a, 2 AS b) AS foo RIGHT JOIN (SELECT 1 AS a, 2 AS b) AS bar ON (foo.a = bar.b) AND (foo.b = bar.b) ORDER BY foo.a;
CREATE TABLE check_system_tables (key UInt16) ENGINE = Memory();
SELECT d1, f1, least(d1, f1) FROM t ORDER BY f1;
DROP DATABASE IF EXISTS test_npop2yp7 
SELECT multiIf((number % 2) = 0, [toUInt8(1), toUInt8(2)], (number % 3) = 0, [toFloat32(2), toFloat32(3)], [toUInt8(3), toUInt8(3)]) FROM system.numbers LIMIT 10;
INSERT INTO r5 SELECT 57
INSERT INTO test_table_join_1 VALUES 
DROP TABLE IF EXISTS test_01532_3;
DROP DATABASE IF EXISTS test_qycfbxfs 
INSERT INTO test_01193_18429.table_2_850 VALUES 
DROP TABLE IF EXISTS parquet_types1
DROP TABLE test_kna0pcoi.wv
SELECT COUNT() FROM table_01;
SELECT 'Running test stateless/00835_if_generic_case.sql from pid=1724' 
CREATE TABLE test_57373D3167487E4B7A2F4A4A217D416C43275A5C7E4B427D6E474B4C4468404A574E6C7576677863(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_59ox7gkj 
ALTER TABLE alter_table_5 DELETE WHERE cityHash64(a,b,c,d,e,g) % 1048576 < 524288
INSERT INTO test_01193_18429.table_3_418 VALUES 
SELECT shardNum() AS `_shard_num` FROM `test_rzij4415`.`mem1` ORDER BY `_shard_num` ASC
SELECT * FROM ( SELECT String1,String2,String3,String4,COUNT(*) FROM Test GROUP by String1,String2,String3,String4 ) AS expr_qry;
SET max_rows_to_read = 15;
SELECT 'Running test stateless/01605_dictinct_two_level.sql from pid=1715' 
SELECT '96' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ffff:ffff::')))
CREATE TABLE test_7337464A4B2C352A6B4636316F45544C3828625157492D7549694B3E66534B3A4D404B796E2C305C(x UInt8) Engine=Memory;
SELECT * FROM input_function_table_2 FORMAT CSV
SYSTEM DROP FILESYSTEM CACHE '02808_filesystem_cache_drop_query_test_5xms93bq' KEY 0c8ae72eaa396fd8d9e7948cb5bd58e3 
CREATE TABLE test_01193_18429.table_5_678 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_uipfb5vf 
CREATE TABLE replicated_constraints2 (`a` UInt32, `b` UInt32, CONSTRAINT a_constraint CHECK a < 10) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00988/alter_constraints', 'r2') ORDER BY a SETTINGS index_granularity = 21481, min_bytes_for_wide_part = 80014906, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 6375, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 10649454, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 36772, primary_key_compress_block_size = 39307
CREATE TABLE test_677C63767871792F3C202030503D7462565F3A6D33652B5C7A796B59442E2A2E69724352532E5878(x UInt8) Engine=Memory;
SELECT multiIf((number % 2) = 0, [toInt32(1), toInt32(2)], (number % 3) = 0, [toUInt32(2), toUInt32(3)], [toFloat32(3), toFloat32(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_2_19 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_5_759 VALUES 
CREATE TABLE test_01193_18429.table_5_961 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT COLUMNS(id, value) EXCEPT (id) APPLY toString FROM test_table;
CREATE TABLE test_6F2C2B4A6A5B673F7C5E44675A6B7A5120537E6B504C2C5C61354F3F40685B2F772A2C726E3E3C44(x UInt8) Engine=Memory;
SELECT reinterpret(257, 'Int32'), reinterpretAsInt32(257);
CREATE TABLE test_02908_r3_21 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_21', 'r3') ORDER BY tuple()
CREATE INDEX idx_tab3_0 ON tab3 (col4 DESC,col1);
SELECT throwIf((SELECT sum(nm) FROM mv) != 73) FORMAT Null;
SELECT 129, -2147483647, 129 = -2147483647, 129 != -2147483647, 129 < -2147483647, 129 <= -2147483647, 129 > -2147483647, 129 >= -2147483647, -2147483647 = 129, -2147483647 != 129, -2147483647 < 129, -2147483647 <= 129, -2147483647 > 129, -2147483647 >= 129 , toUInt8(129) = toInt32(-2147483647), toUInt8(129) != toInt32(-2147483647), toUInt8(129) < toInt32(-2147483647), toUInt8(129) <= toInt32(-2147483647), toUInt8(129) > toInt32(-2147483647), toUInt8(129) >= toInt32(-2147483647), toInt32(-2147483647) = toUInt8(129), toInt32(-2147483647) != toUInt8(129), toInt32(-2147483647) < toUInt8(129), toInt32(-2147483647) <= toUInt8(129), toInt32(-2147483647) > toUInt8(129), toInt32(-2147483647) >= toUInt8(129) , toUInt8(129) = toInt64(-2147483647), toUInt8(129) != toInt64(-2147483647), toUInt8(129) < toInt64(-2147483647), toUInt8(129) <= toInt64(-2147483647), toUInt8(129) > toInt64(-2147483647), toUInt8(129) >= toInt64(-2147483647), toInt64(-2147483647) = toUInt8(129), toInt64(-2147483647) != toUInt8(129), toInt64(-2147483647) < toUInt8(129), toInt64(-2147483647) <= toUInt8(129), toInt64(-2147483647) > toUInt8(129), toInt64(-2147483647) >= toUInt8(129) , toUInt16(129) = toInt32(-2147483647), toUInt16(129) != toInt32(-2147483647), toUInt16(129) < toInt32(-2147483647), toUInt16(129) <= toInt32(-2147483647), toUInt16(129) > toInt32(-2147483647), toUInt16(129) >= toInt32(-2147483647), toInt32(-2147483647) = toUInt16(129), toInt32(-2147483647) != toUInt16(129), toInt32(-2147483647) < toUInt16(129), toInt32(-2147483647) <= toUInt16(129), toInt32(-2147483647) > toUInt16(129), toInt32(-2147483647) >= toUInt16(129) , toUInt16(129) = toInt64(-2147483647), toUInt16(129) != toInt64(-2147483647), toUInt16(129) < toInt64(-2147483647), toUInt16(129) <= toInt64(-2147483647), toUInt16(129) > toInt64(-2147483647), toUInt16(129) >= toInt64(-2147483647), toInt64(-2147483647) = toUInt16(129), toInt64(-2147483647) != toUInt16(129), toInt64(-2147483647) < toUInt16(129), toInt64(-2147483647) <= toUInt16(129), toInt64(-2147483647) > toUInt16(129), toInt64(-2147483647) >= toUInt16(129) , toInt16(129) = toInt32(-2147483647), toInt16(129) != toInt32(-2147483647), toInt16(129) < toInt32(-2147483647), toInt16(129) <= toInt32(-2147483647), toInt16(129) > toInt32(-2147483647), toInt16(129) >= toInt32(-2147483647), toInt32(-2147483647) = toInt16(129), toInt32(-2147483647) != toInt16(129), toInt32(-2147483647) < toInt16(129), toInt32(-2147483647) <= toInt16(129), toInt32(-2147483647) > toInt16(129), toInt32(-2147483647) >= toInt16(129) , toInt16(129) = toInt64(-2147483647), toInt16(129) != toInt64(-2147483647), toInt16(129) < toInt64(-2147483647), toInt16(129) <= toInt64(-2147483647), toInt16(129) > toInt64(-2147483647), toInt16(129) >= toInt64(-2147483647), toInt64(-2147483647) = toInt16(129), toInt64(-2147483647) != toInt16(129), toInt64(-2147483647) < toInt16(129), toInt64(-2147483647) <= toInt16(129), toInt64(-2147483647) > toInt16(129), toInt64(-2147483647) >= toInt16(129) , toUInt32(129) = toInt32(-2147483647), toUInt32(129) != toInt32(-2147483647), toUInt32(129) < toInt32(-2147483647), toUInt32(129) <= toInt32(-2147483647), toUInt32(129) > toInt32(-2147483647), toUInt32(129) >= toInt32(-2147483647), toInt32(-2147483647) = toUInt32(129), toInt32(-2147483647) != toUInt32(129), toInt32(-2147483647) < toUInt32(129), toInt32(-2147483647) <= toUInt32(129), toInt32(-2147483647) > toUInt32(129), toInt32(-2147483647) >= toUInt32(129) , toUInt32(129) = toInt64(-2147483647), toUInt32(129) != toInt64(-2147483647), toUInt32(129) < toInt64(-2147483647), toUInt32(129) <= toInt64(-2147483647), toUInt32(129) > toInt64(-2147483647), toUInt32(129) >= toInt64(-2147483647), toInt64(-2147483647) = toUInt32(129), toInt64(-2147483647) != toUInt32(129), toInt64(-2147483647) < toUInt32(129), toInt64(-2147483647) <= toUInt32(129), toInt64(-2147483647) > toUInt32(129), toInt64(-2147483647) >= toUInt32(129) , toInt32(129) = toInt32(-2147483647), toInt32(129) != toInt32(-2147483647), toInt32(129) < toInt32(-2147483647), toInt32(129) <= toInt32(-2147483647), toInt32(129) > toInt32(-2147483647), toInt32(129) >= toInt32(-2147483647), toInt32(-2147483647) = toInt32(129), toInt32(-2147483647) != toInt32(129), toInt32(-2147483647) < toInt32(129), toInt32(-2147483647) <= toInt32(129), toInt32(-2147483647) > toInt32(129), toInt32(-2147483647) >= toInt32(129) , toInt32(129) = toInt64(-2147483647), toInt32(129) != toInt64(-2147483647), toInt32(129) < toInt64(-2147483647), toInt32(129) <= toInt64(-2147483647), toInt32(129) > toInt64(-2147483647), toInt32(129) >= toInt64(-2147483647), toInt64(-2147483647) = toInt32(129), toInt64(-2147483647) != toInt32(129), toInt64(-2147483647) < toInt32(129), toInt64(-2147483647) <= toInt32(129), toInt64(-2147483647) > toInt32(129), toInt64(-2147483647) >= toInt32(129) , toUInt64(129) = toInt32(-2147483647), toUInt64(129) != toInt32(-2147483647), toUInt64(129) < toInt32(-2147483647), toUInt64(129) <= toInt32(-2147483647), toUInt64(129) > toInt32(-2147483647), toUInt64(129) >= toInt32(-2147483647), toInt32(-2147483647) = toUInt64(129), toInt32(-2147483647) != toUInt64(129), toInt32(-2147483647) < toUInt64(129), toInt32(-2147483647) <= toUInt64(129), toInt32(-2147483647) > toUInt64(129), toInt32(-2147483647) >= toUInt64(129) , toUInt64(129) = toInt64(-2147483647), toUInt64(129) != toInt64(-2147483647), toUInt64(129) < toInt64(-2147483647), toUInt64(129) <= toInt64(-2147483647), toUInt64(129) > toInt64(-2147483647), toUInt64(129) >= toInt64(-2147483647), toInt64(-2147483647) = toUInt64(129), toInt64(-2147483647) != toUInt64(129), toInt64(-2147483647) < toUInt64(129), toInt64(-2147483647) <= toUInt64(129), toInt64(-2147483647) > toUInt64(129), toInt64(-2147483647) >= toUInt64(129) , toInt64(129) = toInt32(-2147483647), toInt64(129) != toInt32(-2147483647), toInt64(129) < toInt32(-2147483647), toInt64(129) <= toInt32(-2147483647), toInt64(129) > toInt32(-2147483647), toInt64(129) >= toInt32(-2147483647), toInt32(-2147483647) = toInt64(129), toInt32(-2147483647) != toInt64(129), toInt32(-2147483647) < toInt64(129), toInt32(-2147483647) <= toInt64(129), toInt32(-2147483647) > toInt64(129), toInt32(-2147483647) >= toInt64(129) , toInt64(129) = toInt64(-2147483647), toInt64(129) != toInt64(-2147483647), toInt64(129) < toInt64(-2147483647), toInt64(129) <= toInt64(-2147483647), toInt64(129) > toInt64(-2147483647), toInt64(129) >= toInt64(-2147483647), toInt64(-2147483647) = toInt64(129), toInt64(-2147483647) != toInt64(129), toInt64(-2147483647) < toInt64(129), toInt64(-2147483647) <= toInt64(129), toInt64(-2147483647) > toInt64(129), toInt64(-2147483647) >= toInt64(129) 
select * from format(JSONEachRow, 'x String', '{"x" : true}, {"x" : false}, {"x" : "str"}');
select toDateTime64(toDate(1), 2, 'GMT');
CREATE TABLE test_5B427E6B762C3A483139745F22384B2C597E2F7127225A3E5E3223756F39436E61276E4B252A2F6A(x UInt8) Engine=Memory;
SELECT [1::UInt32, 2::UInt32]::Array(UInt64);
CREATE TABLE test_01193_18429.table_3_180 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_6_189 VALUES 
SELECT materialize(toInt32(0)) AS x, toFloat32(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
ATTACH TABLE report;
SELECT startsWith([], []);
EXPLAIN QUERY TREE SELECT uniq(t.a) FROM (SELECT DISTINCT a FROM test_rewrite_uniq_to_count) t settings allow_experimental_analyzer=1;
SELECT sum(c = 1) IN (0, 5), sum(c = 2) IN (5, 10) FROM (SELECT number, count() AS c FROM remote('127.0.0.{2,3}', currentDatabase(), numbers_10_00223) WHERE number < (randConstant() % 2 ? 5 : 10) GROUP BY number);
INSERT INTO r7 SELECT 26 % 10 = 7 ? 26 - 1 : 26
CREATE DATABASE IF NOT EXISTS test_vld3dbv9 
CREATE TABLE test_01193_18429.table_3_748 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE DATABASE IF NOT EXISTS test_ummhwzzj 
SELECT 4, * FROM merge_tree ORDER BY d;
SELECT avg(bitCount(number)) FROM numbers(256);
SELECT toInt32(number) y, toDecimal32(y, 1), toDecimal64(y, 5), toDecimal128(y, 6), toDecimal256(y, 7) FROM numbers(1, 1);
SELECT materialize('Hello') WHERE toNullable(materialize(0));
CREATE TABLE test_295E3A79207D525D504F694F3D22537120514F6A6757555F264C2E407B5D5A48792A79392267725C(x UInt8) Engine=Memory;
DROP FUNCTION 02148_test_function;
CREATE TABLE test_3F39663753584F432732727E765C4D2826324C6C3F567C4E3C4E4F5A725B4861554225403E525246(x UInt8) Engine=Memory;
SELECT 'type;toLastDayOfWeek;toDate32;true', toTypeName(toLastDayOfWeek(toDate32('1920-02-02'))) SETTINGS enable_extended_results_for_datetime_functions = true;
CREATE TABLE test_01193_18429.table_3_366 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT cityHash64(CAST( 0 AS Nullable(Float64)));
CREATE TABLE modify_sample_old (d Date DEFAULT '2000-01-01', x UInt8, y UInt64) ENGINE = MergeTree(d, (x, y), 8192);
CREATE TABLE test_552C415D746D786140444F5821533F4A772A505865696E4D4131372A262F3A49766939467E794042(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_cuzzncwu 
INSERT INTO test_01193_18429.table_10_930 VALUES 
CREATE TABLE test_6E417452266E32592F6F4C3437572B324D7C24462863784A3229757A706D242D6A3522517A3A6653(x UInt8) Engine=Memory;
INSERT INTO test_7kssh40k.table_ipv4_trie FORMAT Values
CREATE TABLE test_4E506B517C7D52205132425969276568477C5F207B377661673E304C5076645D314B5D304E25722B(x UInt8) Engine=Memory;
CREATE TABLE test_7E75753C29306134613F616A63252B756D2A7D3C3748374743346B483D7957352639706B6B786579(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS test
SELECT 16
CREATE DATABASE IF NOT EXISTS test_yjnc6gem 
DROP TABLE IF EXISTS distributed_00588;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c3) AND (NOT c2) AND c1 AND c4 AND (NOT c1)) OR (c6 AND (NOT c2) AND c1 AND c9 AND (NOT c1)) OR ((NOT c9) AND c2) OR ((NOT c5) AND c6 AND (NOT c8)) SETTINGS convert_query_to_cnf = 1
DROP DATABASE IF EXISTS test_z42woh84 
DROP DATABASE IF EXISTS test_vh7y74hb 
SELECT pi();
SELECT 'Running test stateless/02911_system_symbols.sql from pid=1718' 
drop table if exists mt2;
SELECT count() FROM system.processes WHERE query_id = '01572_kill_window_function-test_6m9z4j16'
SELECT c1, c2, c3, c4 FROM format('CSV', '1,2,"[1,2,3]","[[\'abc\'], [], [\'d\', \'e\']]"');
SELECT `data`.`k1`, `data`.`k2`.`k3`, `data`.`k2`.`k4` FROM `test_auas3s6x`.`t_json_local`
INSERT INTO test_01193_18429.table_5_142 VALUES 
CREATE TABLE fl_interval (`id` String, `start` Float, `end` Float) ENGINE = MergeTree ORDER BY start SETTINGS index_granularity = 33349, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 78, merge_max_block_size = 8523, prefer_fetch_merged_part_size_threshold = 2254813064, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 30866957, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 23319, primary_key_compress_block_size = 21894
select toTypeName(makeDate(1991, cast(8 as Nullable(UInt64))));
DROP TABLE tmp;
SELECT * FROM union ORDER BY test;
CREATE DATABASE IF NOT EXISTS test_m6nvmx9n 
INSERT INTO test_01193_18429.table_10_128 VALUES 
CREATE TABLE test_01193_18429.table_4_20 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT partition, name FROM system.parts WHERE database = currentDatabase() AND table = 'partitioned_by_week_replica1' AND active ORDER BY name;
DROP TABLE IF EXISTS mutations_r2 SYNC
select 12, * from test order by id
set preferred_max_column_in_block_size_bytes = 1152;
CREATE TABLE test_6A687A375A495C4B7A4A396928256C2B5C5A6E513B7D20757658276D3E41315B6E5B5C5B3F686471(x UInt8) Engine=Memory;
SELECT avg(i8 * i16) FROM test_01035_avg;
INSERT INTO test_01193_18429.table_9_857 VALUES 
SELECT 10, 10, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (10 < 13 AND 10 > 0 ? 10 : 0)), throwIf(last != (10 < 13 AND 10 > 0 ? least(13 - 1, 10 + 10 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 10, 10);
SELECT toTypeName(1 and 10);
SELECT '----- 256, 8 -----';
SELECT * FROM orc_arrays FORMAT ORC
ALTER TABLE 02483_substitute_udf DROP COLUMN number;
CREATE DATABASE IF NOT EXISTS test_90d18zpg 
SELECT 'Running test stateless/01670_log_comment.sql from pid=1714' 
select uniqExact(_part), count() from tMM where toDate(d)=toDate('2020-10-15');
CREATE TABLE test_01193_18429.table_8_231 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT lowerUTF8(NULL);
INSERT INTO complex_key_source_table_01862 VALUES 
SELECT DAYOFMONTH(NULL, NULL);
SELECT tag_id, bitmapToArray(z), replace.from, replace.to, bitmapToArray(bitmapTransform(z, replace.from, replace.to)) FROM bitmap_column_expr_test3 ORDER BY tag_id;
INSERT INTO test_01193_18429.table_8_350 VALUES 
INSERT INTO test_01193_18429.table_3_94 VALUES 
select formatRow('TSVWithNamesAndTypes', number, toDate(number)) from numbers(5);
CREATE TABLE test_01193_18429.table_1_415 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_6_369 VALUES 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (29 < 76 AND 85 > 0 ? 29 : 0)), throwIf(last != (29 < 76 AND 85 > 0 ? least(76 - 1, 29 + 85 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(76) LIMIT 29, 85);
CREATE TABLE test_7527633F293C4C214D586E56203632556723702657444127216B52586C2E59553B48476668382341(x UInt8) Engine=Memory;
/* ddl_entry=query-0000000126 */ DROP TABLE IF EXISTS test_9ten3usb.test_repl SYNC
CREATE TABLE alter_00665 (`boolean_false` Nullable(String)) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 54865, min_bytes_for_wide_part = 695035196, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 4769, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 3743669175, index_granularity_bytes = 5287812, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 56830, primary_key_compress_block_size = 14307
INSERT INTO buffer_ SELECT toUInt64(number) FROM system.numbers LIMIT toUInt64(10e6+1);
INSERT INTO test_01193_18429.table_6_323 VALUES 
SELECT CASE WHEN (col1 % 2) = 0 THEN 'foo' WHEN 1 THEN toFixedString('bar', 16) ELSE col4 END FROM multi_if_check;
CREATE DATABASE IF NOT EXISTS test_3mplfxkp 
INSERT INTO dst_9 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 7
CREATE TABLE test_01193_18429.table_9_372 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_503279593173735F3025342B384930404A3B65455D78696B334954372732607C282671286C2B642D(x UInt8) Engine=Memory;
select (1 ? (toInt32(0) as i) : toUInt16(1)) = i;
SELECT * FROM test_filter PREWHERE b != 0 WHERE intDiv(b, c) > 0;
select toDateOrDefault(19507, '2000-01-01'::Date);
SELECT toStartOfWeek(NULL, NULL, NULL);
INSERT INTO test_02908_r1_209 SELECT rand64() FROM numbers(5);
select moduloOrZero(1, 1) = 0;
select [7, 1, 9, 3, 0, 0, 2, 0, 1, 11] = multiSearchAllPositionsCaseInsensitive(materialize('xUHVawrEvgeYyUZGmGZejClfinvNS'), ['RevGeYyuz', 'XUHvAWrev', 'Vg', 'hvawR', 'eRQbWyincvqjohEcYHMwmDbjU', 'nuQCxaoxEdadhptAhZMxkZl', 'UhVAwREvGEy', 'lHtwTFqlcQcoOAkujHSaj', '', 'eYYUzgMgzEjCLfIn']) from system.numbers limit 10;
DROP ROLE r1_01297;
SET optimize_trivial_insert_select = 'false';
SELECT '(0, C->B->A) id = 11', count() FROM (SELECT id, sequenceNextNode('backward', 'tail')(dt, action, 1, action = 'C', action = 'B', action = 'A') AS next_node FROM test_sequenceNextNode_Nullable WHERE id = 11 GROUP BY id HAVING next_node is null);
DROP TABLE Sub_distributed;
CREATE DATABASE IF NOT EXISTS test_1585gjqq 
CREATE TABLE replicated_versioned_collapsing_merge_tree_with_sampling (d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = ReplicatedVersionedCollapsingMergeTree('/clickhouse/tables/{database}/test_00083/01/replicated_versioned_collapsing_merge_tree_with_sampling/', 'r1', d, sipHash64(a) + b, (a, sipHash64(a) + b, b), 111, y, b);
INSERT INTO test_01193_18429.table_6_308 VALUES 
SELECT toTypeName(arr) FROM t_json_array LIMIT 1;
select * from (select * from tab where (a + b) * c = 8 union all select * from tab4) order by sin(a / b);
SELECT toDecimal32OrNull ('x123', 4);
CREATE TABLE test_7840493B50255844714B3F5F372739676C6F5172366753382C53676D7B53685A20672C3D765D5A40(x UInt8) Engine=Memory;
SELECT sleep(1);
INSERT INTO r8 SELECT 68 % 10 = 8 ? 68 - 1 : 68
SELECT '02177_MV_3', ProfileEvents['ScalarSubqueriesGlobalCacheHit'] as scalar_cache_global_hit, ProfileEvents['ScalarSubqueriesLocalCacheHit'] as scalar_cache_local_hit, ProfileEvents['ScalarSubqueriesCacheMiss'] as scalar_cache_miss FROM system.query_log WHERE current_database = currentDatabase() AND type = 'QueryFinish' AND query LIKE '-- THIRD INSERT\nINSERT INTO t1%' AND event_date >= yesterday() AND event_time > now() - interval 10 minute;
INSERT INTO r7 SELECT 22
INSERT INTO test_01193_18429.table_3_257 VALUES 
CREATE DATABASE IF NOT EXISTS test_d1dl4ccq 
INSERT INTO src VALUES /* (-73, 1) */ 
ATTACH TABLE t_large;
DROP TABLE 01682_database_for_cache_dictionary.complex_key_simple_attributes_source_table;
SELECT 'Running test stateless/00225_join_duplicate_columns.sql from pid=1720' 
SELECT 'comparison:';
SELECT 'Running test stateless/02680_mysql_ast_logical_err.sql from pid=1718' 
SELECT -1, 4294967296, -1 = 4294967296, -1 != 4294967296, -1 < 4294967296, -1 <= 4294967296, -1 > 4294967296, -1 >= 4294967296, 4294967296 = -1, 4294967296 != -1, 4294967296 < -1, 4294967296 <= -1, 4294967296 > -1, 4294967296 >= -1 , toInt8(-1) = toUInt64(4294967296), toInt8(-1) != toUInt64(4294967296), toInt8(-1) < toUInt64(4294967296), toInt8(-1) <= toUInt64(4294967296), toInt8(-1) > toUInt64(4294967296), toInt8(-1) >= toUInt64(4294967296), toUInt64(4294967296) = toInt8(-1), toUInt64(4294967296) != toInt8(-1), toUInt64(4294967296) < toInt8(-1), toUInt64(4294967296) <= toInt8(-1), toUInt64(4294967296) > toInt8(-1), toUInt64(4294967296) >= toInt8(-1) , toInt8(-1) = toInt64(4294967296), toInt8(-1) != toInt64(4294967296), toInt8(-1) < toInt64(4294967296), toInt8(-1) <= toInt64(4294967296), toInt8(-1) > toInt64(4294967296), toInt8(-1) >= toInt64(4294967296), toInt64(4294967296) = toInt8(-1), toInt64(4294967296) != toInt8(-1), toInt64(4294967296) < toInt8(-1), toInt64(4294967296) <= toInt8(-1), toInt64(4294967296) > toInt8(-1), toInt64(4294967296) >= toInt8(-1) , toInt16(-1) = toUInt64(4294967296), toInt16(-1) != toUInt64(4294967296), toInt16(-1) < toUInt64(4294967296), toInt16(-1) <= toUInt64(4294967296), toInt16(-1) > toUInt64(4294967296), toInt16(-1) >= toUInt64(4294967296), toUInt64(4294967296) = toInt16(-1), toUInt64(4294967296) != toInt16(-1), toUInt64(4294967296) < toInt16(-1), toUInt64(4294967296) <= toInt16(-1), toUInt64(4294967296) > toInt16(-1), toUInt64(4294967296) >= toInt16(-1) , toInt16(-1) = toInt64(4294967296), toInt16(-1) != toInt64(4294967296), toInt16(-1) < toInt64(4294967296), toInt16(-1) <= toInt64(4294967296), toInt16(-1) > toInt64(4294967296), toInt16(-1) >= toInt64(4294967296), toInt64(4294967296) = toInt16(-1), toInt64(4294967296) != toInt16(-1), toInt64(4294967296) < toInt16(-1), toInt64(4294967296) <= toInt16(-1), toInt64(4294967296) > toInt16(-1), toInt64(4294967296) >= toInt16(-1) , toInt32(-1) = toUInt64(4294967296), toInt32(-1) != toUInt64(4294967296), toInt32(-1) < toUInt64(4294967296), toInt32(-1) <= toUInt64(4294967296), toInt32(-1) > toUInt64(4294967296), toInt32(-1) >= toUInt64(4294967296), toUInt64(4294967296) = toInt32(-1), toUInt64(4294967296) != toInt32(-1), toUInt64(4294967296) < toInt32(-1), toUInt64(4294967296) <= toInt32(-1), toUInt64(4294967296) > toInt32(-1), toUInt64(4294967296) >= toInt32(-1) , toInt32(-1) = toInt64(4294967296), toInt32(-1) != toInt64(4294967296), toInt32(-1) < toInt64(4294967296), toInt32(-1) <= toInt64(4294967296), toInt32(-1) > toInt64(4294967296), toInt32(-1) >= toInt64(4294967296), toInt64(4294967296) = toInt32(-1), toInt64(4294967296) != toInt32(-1), toInt64(4294967296) < toInt32(-1), toInt64(4294967296) <= toInt32(-1), toInt64(4294967296) > toInt32(-1), toInt64(4294967296) >= toInt32(-1) , toInt64(-1) = toUInt64(4294967296), toInt64(-1) != toUInt64(4294967296), toInt64(-1) < toUInt64(4294967296), toInt64(-1) <= toUInt64(4294967296), toInt64(-1) > toUInt64(4294967296), toInt64(-1) >= toUInt64(4294967296), toUInt64(4294967296) = toInt64(-1), toUInt64(4294967296) != toInt64(-1), toUInt64(4294967296) < toInt64(-1), toUInt64(4294967296) <= toInt64(-1), toUInt64(4294967296) > toInt64(-1), toUInt64(4294967296) >= toInt64(-1) , toInt64(-1) = toInt64(4294967296), toInt64(-1) != toInt64(4294967296), toInt64(-1) < toInt64(4294967296), toInt64(-1) <= toInt64(4294967296), toInt64(-1) > toInt64(4294967296), toInt64(-1) >= toInt64(4294967296), toInt64(4294967296) = toInt64(-1), toInt64(4294967296) != toInt64(-1), toInt64(4294967296) < toInt64(-1), toInt64(4294967296) <= toInt64(-1), toInt64(4294967296) > toInt64(-1), toInt64(4294967296) >= toInt64(-1) 
INSERT INTO test_01193_18429.table_1_706 VALUES 
INSERT INTO r9 SELECT 63 % 10 = 9 ? 63 - 1 : 63
CREATE TABLE test_586F3B2160687E286C516A6B55463E3B7A2F4E28435D486E3C5540393E5D7B5F555E4A6C502E5648(x UInt8) Engine=Memory;
CREATE TABLE mt_without_pk (`SomeField1` Int64, `SomeField2` Double) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 38398, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 12159, prefer_fetch_merged_part_size_threshold = 4902140750, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 4182642, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 67234, primary_key_compress_block_size = 41864
insert into test select uniqStateMapForEachResample(30, 75, 30)([map(1, number)], 30) from numbers(10);
CREATE TABLE test_01193_18429.table_9_118 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT '-- ubsan bugs';
SELECT * FROM system.one WHERE CAST(255 AS Nullable(UInt8))
drop table data_01756_str;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), toUInt64(1) < N as r FORMAT CSV;
INSERT INTO demo_loan_01568_dist VALUES 
CREATE TABLE test_01193_18429.table_3_181 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT arrayEnumerateUniqRanked(1, [1,2,1],1,['a','b','c'],1,[[1,2,3],[2,2,1],[3]],2);
INSERT INTO test_01193_18429.table_4_186 VALUES 
SELECT murmurHash2_32(1, 3, 2);
drop database rdb_test_uofsla12_3
CREATE DATABASE IF NOT EXISTS test_30hveoea 
WITH 'aes-256-gcm' AS mode, unhex('219E6478A1A3BB5B686DA4BAD70323F192EFEDCCBBD6F49E78A7E2F6') AS ciphertext, 'test_key________________________' AS key, 'test_iv_____' AS iv SELECT mode, decrypt(mode, '[HIDDEN]')
create row policy policy_02834 on t_multi_prewhere using a > 2000 as permissive to all;
INSERT INTO test_02908_r1_39 SELECT rand64() FROM numbers(5);
CREATE TABLE test_01193_18429.table_8_484 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 12257, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c3)) OR (c0 AND c2 AND c2 AND (NOT c6)) OR (c7 AND c4 AND (NOT c2) AND (NOT c1)) OR (c5 AND (NOT c0)) OR (c8 AND c3 AND (NOT c1) AND c1 AND (NOT c1)) OR (c1) OR (c4 AND (NOT c6)) SETTINGS convert_query_to_cnf = 1
SELECT 'n rj t', t1.x, t2.x FROM nt AS t1 RIGHT JOIN t AS t2 USING(x) ORDER BY t1.x;
CREATE TABLE test_01193_18429.table_4_642 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_7_762 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_7_228 VALUES 
INSERT INTO test_01193_18429.table_3_717 VALUES 
optimize table rmt3 final;
select toDateOrDefault('1xxx');
CREATE DATABASE IF NOT EXISTS test_ghnftc30 
CREATE TABLE test_6C3247572247283A6072396F7C7442597B607C205C3748495B3A512628536E6A51382C695A362F68(x UInt8) Engine=Memory;
SELECT CASE WHEN 1 THEN 'foo' WHEN (col1 % 3) = 0 THEN 'bar' ELSE toFixedString(col4, 16) END FROM multi_if_check;
CREATE TABLE test_01193_18429.table_8_262 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_4_621 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_7_156 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_8_180 VALUES 
INSERT INTO test_01193_18429.table_1_634 VALUES 
drop table if exists alias_key_condition;
DROP DATABASE IF EXISTS test_lduphxua 
select * from file(dump11.sql, MySQLDump) settings input_format_mysql_dump_table_name='test', max_threads=1
select 1 = position('abc', '');
SELECT 'n fj t', t1.x, t2.x FROM nt AS t1 FULL JOIN t AS t2 USING(x) ORDER BY t1.x;
select v, variantElement(v, 'Array(LowCardinality(Nullable(String)))') from format(CSV, 'v Variant(Array(LowCardinality(Nullable(String))), UInt64, String)', '\\N\n"[''string'', null]"\n"[''string'', nul]"\n42') format CSV;
CREATE INDEX idx_tab4_5 ON tab4 (col0 DESC,col1 DESC);
INSERT INTO r6 SELECT 10
INSERT INTO test_01193_18429.table_5_57 VALUES 
DROP TABLE IF EXISTS pk_in_tuple_perf;
SELECT 'Running test stateless/02126_dist_desc.gen.sql from pid=1720' 
SHOW CREATE TABLE codecs11;
INSERT INTO r10 SELECT 14
SELECT 'Running test stateless/00957_coalesce_const_nullable_crash.sql from pid=1720' 
SELECT 'CD' FROM sequence GROUP BY userID HAVING sequenceMatch('(?1)(?t>=10000000000000)(?2)')(EventTime, eventType = 'C', eventType = 'D');
SELECT * FROM (SELECT number + 2 AS key FROM numbers(4)) s FULL JOIN test t USING(key) ORDER BY s.key, t.key SETTINGS allow_experimental_analyzer=1;
SELECT '-- count() ------------------------------';
SELECT count() FROM t_cnf_fuzz WHERE (c1 AND c4 AND c0 AND c0) OR ((NOT c6) AND (NOT c6) AND (NOT c9)) OR (c8) OR (c8 AND c8 AND c0) OR ((NOT c9) AND c1 AND (NOT c5) AND (NOT c0) AND c5) SETTINGS convert_query_to_cnf = 1
CREATE TABLE test_01193_18429.table_6_250 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE null_before (`id` NOT NULL DEFAULT 1) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 43549, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 14220, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 9982832693, index_granularity_bytes = 6849316, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 76044, primary_key_compress_block_size = 40116
INSERT INTO test_01193_18429.table_5_872 VALUES 
CREATE TABLE test_76523C402F7146352C633E4F694B2E3271317355593532234F5448504E70652633222433506F6F26(x UInt8) Engine=Memory;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a ANTI LEFT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d USING (id) ;
SELECT min(is_done) FROM system.mutations WHERE database='test_ddhukjfn' AND table='rmt' AND mutation_id='0000000001'
SELECT 'Running test stateless/01773_min_max_time_system_parts_datetime64.sql from pid=1722' 
select count(1) from (SELECT 1 AS a, count(1) + 1 FROM numbers(5));
CREATE TABLE test_01193_18429.table_1_620 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_73702A7E5C7D5E2A42727477644636797B5741776C55307D612F2C203D275D486641314050267C4B(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_ztcdgiaw 
SELECT element_count FROM system.dictionaries WHERE database = currentDatabase() AND name = 'test_sparse_dictionary_load_factor';
SELECT * FROM cluster('test_cluster_two_shards', system, one);
select mapAdd((cast(['a', 'b'], 'Array(LowCardinality(String))'), [1, 1]), ([key], [1])) from values('key String', ('b'), ('c'), ('d'));
CREATE TABLE test_2932283B6A3D42315B236C2A454B60656828515F722846262731622D672B2A532D665049433F4E47(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00355_array_of_non_const_convertible_types.sql from pid=1718' 
SELECT multiIf((number % 2) = 0, [toInt64(1), toInt64(2)], (number % 3) = 0, [toUInt8(2), toUInt8(3)], [toUInt8(3), toUInt8(3)]) FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_tiyr1ich 
SELECT * FROM 02661_archive_table ORDER BY 1, 2
SELECT last_value('');
DROP DATABASE IF EXISTS test_rimzqyc0 
CREATE TABLE test_703E624A497A4B232267314C442B6A684B2439523B3866266E62532272696C73445A323F25706B76(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_10_224 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_1hvf39f1 
INSERT INTO r1 SELECT 67
SELECT 'Running test stateless/02404_lightweight_delete_vertical_merge.sql from pid=1726' 
SELECT multiIf(1, toFixedString(col2, 16), 1, toFixedString(col3, 16), 'baz') FROM multi_if_check;
SELECT table, partition, active FROM system.parts where table = 'empty' and active = 1 and database = currentDatabase();
SELECT JSON_QUERY('{"hello":1}', '$[hello]');
SET insert_deduplicate = 1;
select -41 as offset, 41 as length, 'Hello' as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
SHOW CREATE TABLE table_from_select;
CREATE TABLE t1 (x String) ENGINE = Memory AS SELECT 1;
CREATE TABLE test_01193_18429.table_8_733 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO table_for_rename1 SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1), toString(number + 2) from numbers(10, 10);
DROP TABLE IF EXISTS random_mt;
DROP TABLE IF EXISTS replicated_mt_without_pk SYNC;
CREATE TABLE test2 (`s` LowCardinality(String)) ENGINE = MergeTree ORDER BY s SETTINGS index_granularity = 1, min_bytes_for_wide_part = 7799003, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 45, merge_max_block_size = 20731, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 843717, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 3848301, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 86059, primary_key_compress_block_size = 85193
SET max_joined_block_size_rows = 9;
SELECT space(3::Int64), length(space(3::Int64));
CREATE TABLE test_235678787D7B5A222D723467455D255D76357033526862306B716B685A6660214F23584F7B513B31(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_1_299 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT quantileIfArrayArray(0.5)([[1, NULL]], [[1, 0]]) AS `x` FROM numbers(3)
select 0 = multiSearchFirstIndex(materialize('wmvuoeqphsycrvtxghrcozortmdnh'), ['hv', 'ugcmpebvlzgdtcmgkbgzyfel', 'qvmofayljsvybupvvnbhhibsz', 'zvlihxmyxlxwbffwjzjrfjgimmltftqqre', 'mwassqvxptav', 'jrumvqzkiaewngoufhrleakcfrsaxhpxyg', 'sxlxwhvkpavgfhxrxcbnqbstyrejtosxwe', 'psnlqakyfhcupryqatrmwqlswwjylpaiqammx', 'ivozojwldsgtnxpvsi', 'epyzjs', 'legi', 'sdqxxahfbddhacqrglgdcmlslraxfaahhfyodon']) from system.numbers limit 10;
select countSubstringsCaseInsensitiveUTF8('ÃÂ¤ÃÂÃÂ¤', 'ÃÂ');
CREATE DATABASE IF NOT EXISTS test_1we55cu4 
DROP DATABASE IF EXISTS test_9jhytbrn 
select round(1000 * ngramDistanceUTF8(materialize(''), materialize('ÃÂ°ÃÂ±ÃÂ²')))=round(1000 * ngramDistanceUTF8(materialize(''), 'ÃÂ°ÃÂ±ÃÂ²')) from system.numbers limit 5;
DROP TABLE t_materialize_column;
ALTER TABLE nullable_00571 ADD COLUMN n Nullable(UInt64) DEFAULT 0;
set aggregate_functions_null_for_empty=0;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt16(1), toUInt16(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toInt8(3), toInt8(3)] END FROM system.numbers LIMIT 10;
SELECT multiIf((number % 2) = 0, [toUInt8(1), toUInt8(2)], (number % 3) = 0, [toInt32(2), toInt32(3)], [toUInt32(3), toUInt32(3)]) FROM system.numbers LIMIT 10;
INSERT INTO r8 SELECT 53 % 10 = 8 ? 53 - 1 : 53
CREATE TABLE test_746C5A2D74394A4F514E20317B7668582E24315030353953766463796B3B26314642262B6D603937(x UInt8) Engine=Memory;
GRANT SELECT ON INFORMATION_SCHEMA.* TO session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_double_sha1_password_no_profiles_no_roles;
DROP TABLE broken;
detach table dist;
CREATE TABLE test_01193_18429.table_8_355 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_8_914 VALUES 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (99 < 63 AND 5 > 0 ? 99 : 0)), throwIf(last != (99 < 63 AND 5 > 0 ? least(63 - 1, 99 + 5 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(63) LIMIT 99, 5);
DROP TABLE j;
SELECT COUNT(*) FROM system.parts WHERE database = currentDatabase() AND table = 'block_dedup_token_replica' AND min_block_number == max_block_number;
select count(), sum(number) from file('02841.parquet') where indexHint(i8 between -3 and 2);
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), N > toUInt64(1) as r FORMAT CSV;
INSERT INTO test_01193_18429.table_9_982 VALUES 
INSERT INTO test_01193_18429.table_3_174 VALUES 
INSERT INTO 02015_db.test_table VALUES 
SELECT `key` FROM view(SELECT 'foo.com' AS `key` HAVING `key` = cutToFirstSignificantSubdomainCustom('foo.com', 'public_suffix_list')) WHERE `key` = cutToFirstSignificantSubdomainCustom('foo.com', 'public_suffix_list')
CREATE TABLE test_6B495B53232C5C7938562E552B48782B382E2B57536F3E40417366377E5F2C6E507D6B4C4436376F(x UInt8) Engine=Memory;
SELECT event FROM system.events WHERE length(description) < 10;
SET totals_auto_threshold = 0.5;
SELECT dictGetFloat64OrDefault(NULL, NULL, NULL);
insert into test_02127 settings format_custom_escaping_rule='CSV' format CustomSeparated
SELECT * FROM numbers(34593)
CREATE TABLE test_505E7D5C45244F6B3E742B2E4B486B39357E7D485A7C207E4378222524533733592C7238736D5F6F(x UInt8) Engine=Memory;
CREATE TABLE test_02908_r2_276 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_276', 'r2') ORDER BY tuple()
SELECT NULL AND 0;
INSERT INTO test_01193_18429.table_4_441 VALUES 
SELECT 14, 15, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (14 < 13 AND 15 > 0 ? 14 : 0)), throwIf(last != (14 < 13 AND 15 > 0 ? least(13 - 1, 14 + 15 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 14, 15);
INSERT INTO test_01193_18429.table_1_824 VALUES 
CREATE TABLE test_01193_18429.table_5_909 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Running test stateless/00042_set.sql from pid=1720' 
desc format(JSONEachRow, '{"x" : 1, "y" : "String", "z" : "0.0.0.0" }') settings schema_inference_hints='x UInt8, z IPv4';
CREATE TABLE test_5D454C4E367D4C3D5B24687E3A2E2F3E26565859445C7C5E6D2C6F4A365969793172393E30763E5D(x UInt8) Engine=Memory;
SELECT domain('http://www.example.com?q=4') AS Host;
INSERT INTO test_01193_18429.table_5_229 VALUES 
CREATE TABLE series__fuzz_35 (`i` UInt8, `x_value` Decimal(18, 14), `y_value` DateTime) ENGINE = Memory;
INSERT INTO test_01193_18429.table_8_754 VALUES 
SELECT dictGetOrDefault('01681_database_for_flat_dictionary.flat_dictionary_simple_key_complex_attributes', 'value_first', number, toString('default')) as value_first, dictGetOrDefault('01681_database_for_flat_dictionary.flat_dictionary_simple_key_complex_attributes', 'value_second', number, toString('default')) as value_second FROM system.numbers LIMIT 3;
SELECT materialize(toDateTime('2015-02-03 04:05:06')) > '2015-02-03 05:06:07';
SELECT subtractInterval(tuple(INTERVAL 1 SECOND), INTERVAL 1 SECOND);
SELECT 'Running test stateless/02416_rocksdb_delete_update.sql from pid=1718' 
select 4 as x format JSONEachRow 
SELECT cond_non_constant ? constant_null : else_non_constant_nullable AS res FROM nullable_00431;
INSERT INTO test_01193_18429.table_4_148 VALUES 
WITH [(1, 2)] AS arr1, [(3, 4)] AS arr2 SELECT arrayMap((x, y) -> (y.1, x.2), arr1, arr2);
SELECT 24;
SELECT 'Running test stateless/02096_date_time_1970_saturation2.sql from pid=1724' 
SELECT '--JSONHas--';
DROP DATABASE IF EXISTS test_yaxnguyc 
CREATE TABLE test_5533522F3377652F253D2755594B2A635139256372456B2E393855716D64573E48416D764B455267(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS semi_left_join;
CREATE TABLE test_7E36354727733371634B5F6C2F3B58455B7275612137742278447162295F563B3A704A2D4B732225(x UInt8) Engine=Memory;
CREATE TABLE tab1 (`a1` Int32, `b1` Int32) ENGINE = MergeTree ORDER BY a1 SETTINGS index_granularity = 37189, min_bytes_for_wide_part = 696558147, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 10310, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 849487, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 15711578, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 30514, primary_key_compress_block_size = 47603
DROP DATABASE IF EXISTS test_2zcw16h0 
SELECT `time` FROM `test_rcch1se7`.`tab` WHERE `date` = '2018-01-21' LIMIT 2
INSERT INTO test_01193_18429.table_8_68 VALUES 
CREATE TABLE test_765965543F55512674627E5B372D362D3458683D4E5A4A7B24266D37495A3440592652636E673B61(x UInt8) Engine=Memory;
select (toInt128(-1) / toUInt64(1)) x, (toInt256(-1) / toUInt64(1)) y, toTypeName(x), toTypeName(y);
TRUNCATE TABLE t_async_insert_02193_2
INSERT INTO dst_7 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 31
INSERT INTO test_01193_18429.table_2_105 VALUES 
CREATE TABLE test_02908_r1_201 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_201', 'r1') ORDER BY tuple()
SELECT s2GetNeighbors(NULL);
ALTER TABLE table_for_ttl MODIFY COLUMN value String TTL d + INTERVAL 1 DAY SETTINGS materialize_ttl_after_modify = 0;
drop table if exists data_01756_signed;
select v, variantElement(v, 'DateTime') from format(TSV, 'v Variant(String, DateTime, DateTime64)', '\\N\nstring\n2020-01-d1\n2020-01-01 00:00:00\n2020-01-01 00:00:00.999') format TSV;
SELECT 'Running test stateless/00800_versatile_storage_join.sql from pid=1722' 
SELECT multiIf((number % 2) = 0, [toInt64(1), toInt64(2)], (number % 3) = 0, [toUInt32(2), toUInt32(3)], [toInt64(3), toInt64(3)]) FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_9chg6jeq 
SELECT * FROM empty1 ORDER BY key;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (68 < 98 AND 76 > 0 ? 68 : 0)), throwIf(last != (68 < 98 AND 76 > 0 ? least(98 - 1, 68 + 76 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(98) LIMIT 68, 76);
SELECT 'Date LC';
DROP TABLE IF EXISTS table_with_single_pk;
SELECT cityHash64(map(1, 'Hello'), CAST(materialize('World') AS LowCardinality(String)));
select 1 = sequenceMatch('.')(time, data = 0, data = 1, data = 2, data = 3) from sequence_test;
SELECT 'any right (rev)';
SELECT arraySplit(x -> x % 2 = 1, [2]);
CREATE INDEX idx_tab3_5 ON tab3 (col4 DESC,col0 DESC,col1 DESC);
CREATE TABLE test_344B5F3F36795A2F473A7E7B2F7B59572E7B7B542B40412C64646E74256C77296368472628282431(x UInt8) Engine=Memory;
DROP TABLE vec2f;
with '2018-01-12 22:33:44' as s, toDateTime(s) as datetime, toDateTime64(s, 6) as datetime64, toDate(s) as date, toDate32(s) as date32 SELECT formatDateTimeInJodaSyntax(datetime, 'MM'), formatDateTimeInJodaSyntax(datetime64, 'MM'), formatDateTimeInJodaSyntax(date, 'MM'), formatDateTimeInJodaSyntax(date32, 'MM');
CREATE TABLE test_365B487C5C6A6D7354617B2C703237392252313E2A6B75606E4941657450312E787B4A3B636D6A4A(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_6_362 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt64(1), toUInt64(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toUInt16(3), toUInt16(3)] END FROM system.numbers LIMIT 10;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 15622, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT toTypeName(initializeAggregation('uniqExactState', 0));
INSERT INTO r8 SELECT 0
EXPLAIN description = 0 SELECT day, count() AS s FROM test_table GROUP BY day SETTINGS optimize_aggregation_in_order = 1;
alter table many_mutations delete where y = 265 * 2 settings mutations_sync = 0;
SELECT multiIf((col1 % 2) = 0, ['foo', col3], (col1 % 3) = 0, [col4, 'bar'], ['foo', col7]) FROM multi_if_check;
INSERT INTO test_01193_18429.table_5_686 VALUES 
SELECT * FROM source WHERE toYear(ts) = 2021 SETTINGS allow_experimental_analyzer=1;
DROP TABLE IF EXISTS insert_select_dst;
DROP DATABASE IF EXISTS test_v80w9u9h 
select makeDate32(1900, 0);
SELECT 'Alias conflict with identifier inside expression';
select concat('a', 'b', toFixedString('c', 1)) == 'abc';
CREATE TABLE defaults ( n Int8 )ENGINE = Memory();
desc urlCluster('test_cluster_one_shard_three_replicas_localhost', 'http://localhost:11111/test/{a,b}.tsv', 'auto');
CREATE TABLE test_01193_18429.table_5_744 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP TABLE IF EXISTS test5346;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (51 < 3 AND 83 > 0 ? 51 : 0)), throwIf(last != (51 < 3 AND 83 > 0 ? least(3 - 1, 51 + 83 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(3) LIMIT 51, 83);
SELECT s, replaceAll(s, '_', 'o') AS a, REGEXP_REPLACE(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['_._', '._']) AS s);
INSERT INTO test02910_second SELECT number, number, '2023-10-28 11:11:11.11111', ['c', 'd'] FROM numbers(10);
ALTER TABLE src_7 REPLACE PARTITION 5 FROM src_4
CREATE TABLE test_01193_18429.table_1_604 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_6_872 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_5_43 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT toFixedString('\0abc', 4) AS str, empty(str) AS is_empty;
CREATE ROLE r2_01293 SETTINGS NONE;
SELECT materialize(NULL) OR materialize(1);
CREATE TABLE test_01193_18429.table_9_36 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select concat(materialize('a'), materialize(toFixedString('b', 1)), toFixedString('c', 1)) == 'abc' from system.numbers limit 5;
SELECT 1 WINDOW dummy AS (PARTITION BY dummy);
CREATE TABLE test_61597358512A7B73696744357C6A683C732F2D736935373770272B694F4F3B25205951404F4A3642(x UInt8) Engine=Memory;
CREATE TABLE test_5B7C476B7171705122736E30223537782F297320276745674029395D376647646D644D6B296C572E(x UInt8) Engine=Memory;
create user u_test_piw8e8fv
SELECT s, replaceAll(s, '_', 'o') AS a, REGEXP_REPLACE(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['__.', '__.__']) AS s);
CREATE TABLE stack (`item_id` Int64, `brand_id` Int64, `rack_id` Int64, `dt` DateTime, `expiration_dt` DateTime, `quantity` UInt64) ENGINE = MergeTree PARTITION BY toYYYYMM(dt) ORDER BY (brand_id, toStartOfHour(dt)) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 39819859, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 10768, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 61510, primary_key_compress_block_size = 96156
CREATE DATABASE IF NOT EXISTS test_h6kz1k3o 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (57 < 86 AND 43 > 0 ? 57 : 0)), throwIf(last != (57 < 86 AND 43 > 0 ? least(86 - 1, 57 + 43 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(86) LIMIT 57, 43);
DROP FUNCTION IF EXISTS 02484_plustwo;
CREATE TABLE test_01193_18429.table_4_142 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE DATABASE IF NOT EXISTS test_6dnjrnqh 
SELECT groupArray(x) from (SELECT number as x FROM numbers(3) ORDER BY x, exp(x)) SETTINGS allow_experimental_analyzer=1;
SELECT concat('With ', materialize([(0,0),(10,0),(10,10),(0,10)] :: Ring));
INSERT INTO src VALUES /* (55, 1) */ 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (105 < 84 AND 64 > 0 ? 105 : 0)), throwIf(last != (105 < 84 AND 64 > 0 ? least(84 - 1, 105 + 64 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(84) LIMIT 105, 64);
SELECT multiIf((number % 2) = 0, toInt16(1), (number % 3) = 0, toUInt8(2), toFloat32(3)) FROM system.numbers LIMIT 10;
INSERT INTO table_for_rename1 SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number + 1), toString(number + 2) from numbers(9);
insert into data_02340 select number, number%4 from numbers(200)
INSERT INTO test_01193_18429.table_9_891 VALUES 
INSERT INTO test_01193_18429.table_4_699 VALUES 
CREATE TABLE test_54217C733C386F7B786124655831663B3722637C3B453437493373536C3248292971484F7C6E2868(x UInt8) Engine=Memory;
insert into summing_merge_tree_aggregate_function select today() as d, number + 5000 as k, uniqState(toUInt64(number % 500)) from numbers(5000) group by d, k;
SELECT count() == 3 FROM null_in WHERE s global not in ('1', '3');
OPTIMIZE TABLE collapsing PARTITION tuple() FINAL;
CREATE DATABASE IF NOT EXISTS test_lw3wtphl 
CREATE TABLE test_6D36472E242B7E72346865616B6139283D53667C7E6923772325253D4069305A7C312A526B28485F(x UInt8) Engine=Memory;
select `pow(four, 2)`, `pow(two, 2)` from (with (select pow(2,2)) as four select pow(four, 2), 2 as two, pow(two, 2));
CREATE TABLE test_343335495057776A755F24792029344B5C49293B732E4E39513B5B6D6640567A745D303B69626F2F(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS t_json_6;
SELECT 27 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'asn', tuple(IPv4StringToNum('255.255.255.224')))
DROP DATABASE IF EXISTS test_icdd499r 
SELECT toDate('2017-06-28') > toDate('2017-07-01');
ALTER TABLE table_for_alter MODIFY SETTING check_delay_period=10, check_delay_period=20, check_delay_period=30;
CREATE TABLE test_01193_18429.table_9_614 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT count() FROM t_cnf_fuzz WHERE (c6) OR ((NOT c9) AND c8 AND c5 AND c0) OR (c5 AND c7 AND (NOT c6)) OR ((NOT c4)) OR (c4 AND (NOT c1)) OR ((NOT c3) AND (NOT c1) AND c4 AND c0) OR ((NOT c6) AND (NOT c4) AND c9) OR (c0 AND (NOT c3)) OR ((NOT c7) AND c3 AND (NOT c1) AND (NOT c4) AND (NOT c9)) SETTINGS convert_query_to_cnf = 1
INSERT INTO test_00562 VALUES
CREATE TABLE test_01193_18429.table_2_153 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE USER u3_01292 HOST LOCAL;
SELECT * FROM file('/var/lib/clickhouse/user_files/02661_read_from_archive_test_y9jm4uu0_7z_archive{1,2}.7z :: 02661_read_from_archive_test_y9jm4uu0_7z_data{1,3}.csv') ORDER BY 1, 2
CREATE TABLE test_01193_18429.table_3_271 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_2_676 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_2_879 VALUES 
SELECT toUInt256(123) IN (NULL);
SELECT x FROM (SELECT number % 5 = 0 ? NULL : (number % 3 = 0 ? nan : toFloat64(number)) AS x FROM system.numbers LIMIT 10) ORDER BY x ASC NULLS LAST;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt16(1) WHEN (number % 3) = 0 THEN toFloat64(2) ELSE toInt32(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_42302F5F614E513D2023772A4C7654685E7438686A5120505A263E3D2C38645A7741734979504571(x UInt8) Engine=Memory;
SELECT wordShingleMinHashCaseInsensitive('what a cute cat.');
CREATE DATABASE IF NOT EXISTS test_07mbf36m 
CREATE TABLE test_57624350406B2F3C4A63753D495E7576347E3B4D2A4A7943685565622A415A205D3D4B216C4B2762(x UInt8) Engine=Memory;
CREATE TABLE nl (x Nullable(UInt32), lc Nullable(String)) ENGINE = Memory;
INSERT INTO test_01193_18429.table_6_684 VALUES 
CREATE TABLE test_33362C57377B2953536A4745663F3D405645434C5F3F735F3C5C7141243F2A78596F2969557B3C5B(x UInt8) Engine=Memory;
CREATE TABLE test_473954446276737934333361263D72615C2C63637A4F76743C6236752151592F2C3F375B313A355E(x UInt8) Engine=Memory;
OPTIMIZE TABLE default_codec_synthetic FINAL;
INSERT INTO r4 SELECT 91 % 10 = 4 ? 91 - 1 : 91
CREATE DATABASE IF NOT EXISTS test_25m105h2 
SELECT 'Running test stateless/01000_unneeded_substitutions_client.sh from pid=1715' 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (96 < 65 AND 23 > 0 ? 96 : 0)), throwIf(last != (96 < 65 AND 23 > 0 ? least(65 - 1, 96 + 23 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(65) LIMIT 96, 23);
create table distr as local engine = Distributed('test_cluster_two_shards', currentDatabase(), local);
INSERT INTO test_01193_18429.table_8_216 VALUES 
select hasSubsequenceCaseInsensitiveUTF8('ÃÂ´ÃÂ»ÃÂ ÃÂ¾ÃÂ½ÃÂ»ÃÂ°ÃÂ¹ÃÂ½ ÃÂ¾ÃÂ±ÃÂÃÂ°ÃÂ±ÃÂ¾ÃÂÃÂºÃÂ¸ ÃÂ°ÃÂ½ÃÂ°ÃÂ»ÃÂ¸ÃÂÃÂ¸ÃÂÃÂµÃÂÃÂºÃÂ¸ÃÂ ÃÂ·ÃÂ°ÃÂ¿ÃÂÃÂ¾ÃÂÃÂ¾ÃÂ² (OLAP)', materialize('ÃÂ·ÃÂ»ÃÂ¾()'));
SELECT b, c, e FROM t_fixed_prefix WHERE b = 1 ORDER BY b, c, e SETTINGS optimize_read_in_order = 1
SELECT a.* APPLY(toDate) APPLY(any) from columns_transformers a;
CREATE DATABASE IF NOT EXISTS test_cvzkestx 
INSERT INTO test_01193_18429.table_3_159 VALUES 
CREATE TABLE test_01193_18429.table_5_539 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_71786F6D5F496B784350217C52253F2E484F462278413D3F21515D39395D2D497A482F602D4F3279(x UInt8) Engine=Memory;
INSERT INTO anti_left_join (x, s) VALUES 
SELECT '61' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:fff8::')))
INSERT INTO test_01193_18429.table_8_827 VALUES 
CREATE TABLE json_square_brackets (field String) ENGINE = Memory;
select 0 = isValidUTF8(toFixedString('\xC2\x7F', 2)) from system.numbers limit 10;
CREATE TABLE test_01193_18429.table_8_846 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT * FROM t1 JOIN t2 ON t1.id = t2.id AND 1 == 2 SETTINGS allow_experimental_analyzer = 1;
DROP TABLE IF EXISTS 02843_join;
DROP DATABASE IF EXISTS test_iyqch83y 
INSERT INTO multi_if_check(col1, col2, col3, col4) VALUES
alter table many_mutations delete where y = 52 * 2 settings mutations_sync = 0;
SELECT 'Running test stateless/02560_regexp_denial_of_service.sql from pid=1713' 
INSERT INTO test_01193_18429.table_8_879 VALUES 
INSERT INTO test_01193_18429.table_5_621 VALUES 
SELECT count() FROM t_cnf_fuzz WHERE (c7 AND (NOT c7) AND c9) OR ((NOT c1) AND c8) OR ((NOT c5)) OR (c2 AND (NOT c6) AND (NOT c8) AND (NOT c9) AND c5) OR (c5) OR (c7 AND c2 AND (NOT c1) AND (NOT c4)) OR ((NOT c7) AND c6 AND (NOT c4) AND c5) OR ((NOT c1) AND c5 AND c3 AND (NOT c2) AND c6) OR ((NOT c0) AND (NOT c3)) SETTINGS convert_query_to_cnf = 0
DROP TABLE codecs1;
SELECT 'Running test stateless/01056_predicate_optimizer_bugs.sql from pid=1720' 
INSERT INTO test_01193_18429.table_1_474 VALUES 
DROP TABLE cnf_test;
INSERT INTO t_sparse_pk VALUES 
INSERT INTO pk_in_tuple_perf_non_const SELECT today() - number, number FROM numbers(100);
CREATE TABLE test_352F75242479566F37365D7A7C3D65233757566A3E766A656C7B513A456F47252D7048206A384C6E(x UInt8) Engine=Memory;
SELECT h3EdgeLengthKm(12);
EXPLAIN SYNTAX SELECT * FROM (SELECT number + 2 AS key FROM numbers(4)) s FULL JOIN test t USING(key) ORDER BY s.key, t.key;
CREATE TABLE test_254A447179665B7A502D41466C4A497879232D69263573385337354D7E46677459743B2E65417B3B(x UInt8) Engine=Memory;
CREATE TABLE test_614D7274486D5E6B3C3073253B6631444D674A777E38342B335B624D604F4B4B5221204051496137(x UInt8) Engine=Memory;
CREATE TABLE test_22525E4C495763684D77525F4F60587E4B256F7D396770643E7447392273712549293A7842315565(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_7_740 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP TABLE IF EXISTS echo_test_1
select count(), * from dist_01247 group by number offset 1 settings distributed_push_down_limit=1;
select 3 = multiSearchFirstIndex(materialize('xtjxvytsseiqrpkbspwipjns'), ['bwmoghrdbaeybrmsnucbd', 'zoslqabihtlcqatlczbf', 'sseiqrpkbspwipjn', 'mdnbzcvtayycqfbycwum', 'npueimpsprhfdfnbtyzcogqsb', 'ytsseiqrpkbspwipj', 'fzvhcobygkwqohwutfyauwocwid', 'naacyhhkirpqlywrrpforhkcjrjsnz', 'vezbzderculzpmsehxqrkoihfoziaxhghh', 'mvvdfqzskcyomjbaxjfrtmbduvm', 'pwipjns', 'tsseiqrpkbspwipjn', 'sseiqrpkbspwip', 'qgrtbcdqcbybzevizw', 'isjouwql', 'rlbeidykltcyopzsfstukduxabothywwbq']) from system.numbers limit 10;
OPTIMIZE TABLE src_3
INSERT INTO r6 SELECT 6 % 10 = 6 ? 6 - 1 : 6
SELECT any_respect_nulls('');
SELECT toDecimal32(NULL);
CREATE TABLE test_54755665744B646077314F7D503874533C734D5B66596A3A4D65723A393B4B257A5F685453775F2F(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_2_382 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP DATABASE IF EXISTS test_n7e38q2t 
DROP DATABASE test_00741;
DROP TABLE d_src;
CREATE DICTIONARY dict( id UInt64, s String ) PRIMARY KEY id SOURCE(CLICKHOUSE(TABLE 'src' DB currentDatabase())) LIFETIME (MIN 0 MAX 0) LAYOUT(HASHED());
CREATE TABLE test_02908_r1_275 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_275', 'r1') ORDER BY tuple()
SET validate_polygons = 0;
INSERT INTO database_for_dict.table_for_dict SELECT number, number % 17, toString(number * number), number / 2.0 from numbers(100, 100);
SELECT * FROM test_hjqqp1i2.t_00751 ORDER BY date ASC
SELECT has([(a, b), (c, d)], (b, c)) FROM (SELECT 1 AS a, 2 AS b, 2 AS c, 2 AS d);
CREATE TABLE test_01193_18429.table_5_163 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_6B3E5156705833585F5B7930293D312576396129614972647C77482A26432A56583A67347E633573(x UInt8) Engine=Memory;
DROP DICTIONARY IF EXISTS dict_01509;
select * from dist_01247 group by key, value;
CREATE TABLE test_3E7A492C6259623466355C33345F695D46325B5F225B316057327A29306566322B7E2E4E2A683A31(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_9_572 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
WITH materialize(map(1, 2, 3, NULL)) AS m SELECT m[toNullable(1)], m[toNullable(2)], m[toNullable(3)];
SELECT count(*) FROM tab_00612 PREWHERE id1 IN (1);
CREATE TEMPORARY TABLE a (a UInt64);
INSERT INTO test_01193_18429.table_5_92 VALUES 
CREATE TABLE test_01193_18429.table_8_908 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
insert into test_enum values 
alter table many_mutations delete where y = 721 * 2 settings mutations_sync = 0;
INSERT INTO orc_nullable_arrays VALUES 
insert into function file(02475_data.bsonEachRow, auto, 'nested Array(Tuple(Map(String, Array(UInt32)), Array(Map(String, Tuple(Array(UInt64), Array(UInt64))))))') select [(map('a', range(number), 'b', range(number + 1)), [map('c', (range(number), range(number + 1))), map('d', (range(number + 2), range(number + 3)))])] from numbers(5) settings engine_file_truncate_on_insert=1
DROP TABLE IF EXISTS input_function_table_5
CREATE QUOTA q16_01297 FOR INTERVAL 1 MINUTE MAX execution_time = 1.5;
SELECT t1.value AS t1_value, toTypeName(t1_value), t2.value AS t2_value, toTypeName(t2_value), t3.value AS t3_value, toTypeName(t3_value) FROM test_table_join_1 AS t1 RIGHT JOIN test_table_join_2 AS t2 USING (id) RIGHT JOIN test_table_join_3 AS t3 USING(id);
SELECT 'Running test stateless/02439_merge_selecting_partitions.sql from pid=1726' 
insert into t_avro_10 select number, 'str' from numbers(1000) settings engine_file_truncate_on_insert=1
CREATE TABLE test_6D36444F572854332550255E5A59252C7D424431395F612775326C277C7E6F74382B425C54355554(x UInt8) Engine=Memory;
CREATE TABLE array_element_test (arr Array(String), id Int32) ENGINE = Memory;
desc format(CSV, '"2020-01-01"');
SELECT length(geohashesInBox(-inf, -inf, inf, inf, 3));
CREATE TABLE test (`id` UInt64, `agg` AggregateFunction(groupArraySorted(2), UInt64)) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 54697, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 15005, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 96964, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 660585633, index_granularity_bytes = 7425561, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 42277, primary_key_compress_block_size = 52954
DROP TABLE parquet_load
CREATE TABLE test_644A4878302942586471496D7D5A653E4A2A53673F7D5F494C397A2C513E3E3F785037255871492D(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02021_create_database_with_comment.sh from pid=1726' 
CREATE TABLE test_02908_r3_195 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_195', 'r3') ORDER BY tuple()
SELECT key1, key2, key3, attr FROM t1 ALL INNER JOIN tj USING (key1, key2, key3) ORDER BY key1;
CREATE TABLE test_01193_18429.table_10_743 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 1 FROM system.one LIMIT 1 BY 1;
SELECT hasAny([], []);
select *, payload_length from defaulted order by payload;
INSERT INTO test_01193_18429.table_3_563 VALUES 
INSERT INTO r3 SELECT 17
SELECT '2015-02-03 06:07:08' >= materialize(toDateTime('2015-02-03 05:06:07'));
INSERT INTO test_lfm0vlkf.local_00952 (date, value) VALUES
SELECT sum(`__table1`.`x`) AS `sum(x)`, sum(`__table1`.`y`) AS `sum(y)`, sum(`__table1`.`r.y`) AS `sum(r.y)`, sum(`__table1`.`z`) AS `sum(z)`, sum(`__table6`.`z`) AS `sum(rr.z)`, sum(`__table6`.`a`) AS `sum(a)`, `__table1`.`x` % 2 AS `key` FROM (SELECT `__table2`.`x` AS `x`, `__table2`.`y` AS `y`, `__table4`.`y` AS `r.y`, `__table4`.`z` AS `z` FROM (SELECT `__table3`.`x` AS `x`, `__table3`.`y` AS `y` FROM `test_e3fwduud`.`tab1` AS `__table3` WHERE `__table3`.`x` != 2) AS `__table2` ANY LEFT JOIN (SELECT `__table5`.`y` AS `y`, `__table5`.`z` AS `z` FROM `test_e3fwduud`.`tab2` AS `__table5` WHERE `__table5`.`y` != 4) AS `__table4` ON `__table2`.`y` = `__table4`.`y`) AS `__table1` ANY LEFT JOIN (SELECT `__table7`.`z` AS `z`, `__table7`.`a` AS `a` FROM `test_e3fwduud`.`tab3` AS `__table7` WHERE `__table7`.`z` != 8) AS `__table6` ON `__table1`.`z` = `__table6`.`z` GROUP BY `__table1`.`x` % 2
CREATE TABLE country_polygons (`name` String, `p` Array(Array(Tuple(Float64, Float64)))) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 54994, min_bytes_for_wide_part = 968316018, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 3545, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 20437977, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 35348, primary_key_compress_block_size = 47341
CREATE TABLE test_01193_18429.table_10_34 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO t_tup VALUES 
system start ttl merges ttl;
SELECT '(0, A->B->C) id = 11', count() FROM (SELECT id, sequenceNextNode('forward', 'head')(dt, action, 1, action = 'A', action = 'B', action = 'C') AS next_node FROM test_sequenceNextNode_Nullable WHERE id = 11 GROUP BY id HAVING next_node = 'D');
alter table many_mutations delete where y = 332 * 2 settings mutations_sync = 0;
DROP DATABASE IF EXISTS test_2uiwg2r7 
select [3] = multiSearchAllPositions(materialize('abcdefgh'), ['c']) from system.numbers limit 10;
INSERT INTO test_01193_18429.table_9_829 VALUES 
drop table n;
SELECT 'Running test stateless/00737_decimal_group_by.sql from pid=1714' 
SELECT CASE WHEN (col1 % 2) = 0 THEN toFixedString(col2, 16) WHEN (col1 % 3) = 0 THEN 'bar' ELSE col4 END FROM multi_if_check;
CREATE TABLE test_5F2C6F2D392D5939353E2D23586B5768404D483E4E29495F594172483D5A36757D2E522C415B5637(x UInt8) Engine=Memory;
INSERT INTO mt VALUES /* (38, 2) */ 
DETACH DATABASE IF EXISTS test_01150
SELECT * FROM t_delay_mutations ORDER BY id;
SELECT sparkbar(9)(event_date,cnt) FROM spark_bar_test;
SELECT right('Hello', NULL);
DROP DATABASE IF EXISTS test_zr3rpyzj 
CREATE TABLE test_01193_18429.table_5_174 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'DateTime64';
SELECT 'Running test stateless/01033_storage_odbc_parsing_exception_check.sql from pid=1724' 
SELECT addHours(NULL);
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c9) AND c0) OR (c9 AND c4 AND (NOT c4) AND c3) OR (c4 AND (NOT c8)) OR (c9 AND (NOT c0) AND (NOT c7)) OR (c9 AND (NOT c4) AND (NOT c6)) OR (c5 AND (NOT c9) AND (NOT c3) AND c1) OR ((NOT c3)) OR ((NOT c3) AND (NOT c3) AND c6) OR (c7) SETTINGS convert_query_to_cnf = 1
SELECT * FROM mv1_00726 ORDER BY x;
INSERT INTO test_01193_18429.table_4_914 VALUES 
desc format(JSONEachRow, '{"x" : [null, 1]}, {"x" : ["abc", 1]}');
CREATE TABLE src (`p` UInt64, `k` String, `d` UInt64) ENGINE = MergeTree PARTITION BY p ORDER BY k SETTINGS index_granularity = 22310, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 4462, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 898628, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10417269093, index_granularity_bytes = 1206696, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 74347, primary_key_compress_block_size = 57445
INSERT INTO test_01193_18429.table_6_344 VALUES 
SELECT AccountID FROM ( SELECT AccountID, Currency FROM Accounts LIMIT 2 BY Currency );
CREATE TABLE test_01193_18429.table_5_437 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT replicate([], [], []);
CREATE TABLE test_60547A3C6D4C666C765525497B4E5D5653263772767546422D4238495E5D6A744838366420384B2B(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_6_633 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO src VALUES /* (55, 2) */ 
CREATE DATABASE dictdb_01041_01040
SELECT '--revoke 2';
INSERT INTO r9 SELECT 82 % 10 = 9 ? 82 - 1 : 82
CREATE TABLE test_01193_18429.table_8_645 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP TABLE IF EXISTS add_aggregate;
SET max_joined_block_size_rows = 65504;
 ATTACH TABLE test_lazy_01014_concurrent_test_bo56il5m.log; 
select format('{}{}{}', 'a', toFixedString('b', 1), 'c') == 'abc' from system.numbers limit 5;
SELECT * FROM numbers(34558)
select hasAll([1, Null], [Null]);
INSERT INTO r2 SELECT 74
DROP DATABASE IF EXISTS test_0g01ft60 
SELECT dictGetInt32('01280_db.ssd_dict', 'b', tuple('10', toInt32(-20)));
SELECT 0, 10, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (0 < 13 AND 10 > 0 ? 0 : 0)), throwIf(last != (0 < 13 AND 10 > 0 ? least(13 - 1, 0 + 10 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 0, 10);
CREATE TABLE test_01193_18429.table_9_608 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select [0] = multiSearchAllPositions(materialize('abc'), ['def']);
CREATE TABLE test_01193_18429.table_2_236 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT count() == 1 FROM decimal_in_float_test WHERE b IN (44.44);
SELECT [1, 255];
CREATE TABLE test(a Array(Int64), b Array(Float64), c Array(UInt64)) ENGINE=Memory;
SELECT number, tuple FROM (SELECT 3 AS number, (2, 3) AS tuple) WHERE (number, tuple) IN (3, (2, 3));
INSERT INTO str_persons_00825 SETTINGS format_schema='/usr/share/clickhouse-test/queries/0_stateless/format_schemas/00825_protobuf_format_persons:StrPerson' FORMAT Protobuf
SELECT argMin(number::String, 1) FROM (Select number as number from numbers(10, 10000)) settings max_threads=1, max_block_size=20000;
select sumMap(val, cnt) from ( SELECT [ CAST(1, 'DateTime(\'Asia/Istanbul\')') ] as val, [1] as cnt );
select 3 as x format CSV 
INSERT INTO r9 SELECT 29
SELECT 'Running test stateless/00077_set_keys_fit_128_bits_many_blocks.sql from pid=1718' 
SELECT countIf(explain like '%COMMA%' OR explain like '%CROSS%'), countIf(explain like '%INNER%') FROM ( EXPLAIN SYNTAX SELECT t1.a FROM t1, t2, t3, t4 WHERE t2.a = t1.a AND t2.a = t3.a AND t2.a = t4.a);
CREATE TABLE test_01193_18429.table_10_944 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
EXPLAIN SYNTAX SELECT min(abs(n) * 2), min(abs(n) * n), min(n / abs(n)), min(1 / abs(n)) FROM (SELECT number n FROM numbers(10));
CREATE TABLE data_01814 (`key` Int) ENGINE = MergeTree ORDER BY key SETTINGS index_granularity = 10, min_bytes_for_wide_part = 235570236, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 14268, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 10716173, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 19286, primary_key_compress_block_size = 31730 AS SELECT * FROM numbers(100)
SELECT pointInPolygon((3., 3.), [(6, 0), (8, 4), (5, 8), (0, 2), (6, 0)]);
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt16(1), toUInt16(2)] WHEN (number % 3) = 0 THEN [toInt64(2), toInt64(3)] ELSE [toInt64(3), toInt64(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_1_841 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select '- 2';
SELECT timeZone();
SELECT * FROM parquet_numbers ORDER BY number DESC LIMIT 10
SELECT byteSize(NULL);
SELECT count() == (SELECT count() FROM rdb_10 WHERE key < 13) FROM (SELECT number as k FROM numbers_mt(13)) as t1 INNER JOIN rdb_10 as rdb ON rdb.key == t1.k;
SELECT 11212 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'asn', tuple(toIPv6('::ffff:101.79.55.22')))
CREATE TABLE test_4421546D4C702645294F683F6844382D512A2235704D3B5721654334332E6E2C796C5171365D683F(x UInt8) Engine=Memory;
CREATE TABLE test_5D30406A783B3C286E5273667A674925395141365E2B555551696858765D6035784E5F75666A4438(x UInt8) Engine=Memory;
SELECT age('month', toDateTime64('2015-01-02 20:30:36.200', 3, 'UTC'), toDateTime64('2016-05-02 20:30:35.200', 3, 'UTC'));
CREATE TABLE test_01193_18429.table_4_985 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_2_10 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_4_918 VALUES 
CREATE TABLE s2 (`a` UInt32, `s` String) ENGINE = MergeTree PARTITION BY a % 3 ORDER BY a SETTINGS min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0, index_granularity = 41334, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 19216, prefer_fetch_merged_part_size_threshold = 6734654875, vertical_merge_algorithm_min_rows_to_activate = 65587, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 17344213, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 83667, primary_key_compress_block_size = 57735
SELECT uniq(NULL, NULL);
INSERT INTO test_01193_18429.table_8_949 VALUES 
INSERT INTO r8 SELECT 19
DESCRIBE (SELECT id, t1.id, t1.value, t2.id, t2.value FROM test_table_join_1 AS t1 INNER JOIN test_table_join_2 AS t2 USING (id));
CREATE TABLE d (a String, b Int) ENGINE = Distributed(test_shard_localhost, currentDatabase(), t);
CREATE TABLE test_64453227687B3025395134344C56512D4278784A3C3F3C432C2E5E30477533732E3C2D2C366A434B(x UInt8) Engine=Memory;
SELECT 'uniqCombined(20)';
SELECT * from l LEFT JOIN r USING a ORDER BY a;
CREATE TABLE test_empty_data (x Int8) ENGINE = Memory
INSERT INTO line_as_string4 FORMAT LineAsString
DROP TABLE product_uint8_fp64;
CREATE TABLE test_4070453F557D442D37526E73322C3947422C395E376F33287A6A352F283C772E6B734B3F744B525C(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02760_dictionaries_memory.gen.sql from pid=1722' 
CREATE TABLE test_01193_18429.table_4_891 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_5D604B76713D603729436864284130327E6723612359797B6A58284A4C6E5B265322753E614F2455(x UInt8) Engine=Memory;
SELECT * FROM url(02883_named_collections_override_test_5r4han3w_collection2, format='CSV');
DROP DATABASE IF EXISTS test_6ytv8n4w 
DROP TABLE IF EXISTS short;
SELECT parseTimeDelta('1yr-2mo-4w + 12 days, 3 hours : 1 minute ; 33 seconds');
SELECT toUInt128(toUUID('00000000-0000-0000-0000-000000000000'));
CREATE TABLE test_54747B6D5C5A5820595D58352621213D6F26533665495B5927295D4432742F404E5A50624C266424(x UInt8) Engine=Memory;
SELECT parseDateTimeOrZero(NULL, NULL, NULL);
select number, number + 1, concat('string: ', toString(number)) from numbers(200000) format JSONStringsEachRow
DROP DATABASE IF EXISTS test_j9kjfjl3 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), toUInt16(1) + N as r FORMAT CSV;
INSERT INTO date FORMAT JSONEachRow 
INSERT INTO test_01193_18429.table_6_462 VALUES 
DESCRIBE (SELECT value.* FROM test_table);
CREATE DATABASE IF NOT EXISTS test_v2xugh2t 
create view v_test1 as select id from test1_00634;
select toYYYYMM(x1) from t1;
create table t_00725_3(a Int64, b Int64) engine = TinyLog;
SELECT any(toTypeName(a)) == 'Int32' AND any(toTypeName(b)) == 'Nullable(Int64)' FROM t_ab1 RIGHT JOIN t_ab2 USING (a, b);
CREATE INDEX idx_tab4_4 ON tab4 (col0 DESC,col3);
CREATE TABLE stored_aggregates ( d Date, Uniq AggregateFunction(uniq, UInt64), UniqThetaSketch AggregateFunction(uniqTheta, UInt64) ) ENGINE = AggregatingMergeTree(d, d, 8192);
SELECT 'Running test stateless/00142_parse_timestamp_as_datetime.sql from pid=1714' 
SELECT * FROM test_view_00740;
SELECT DISTINCT ON (a, b) * FROM t1;
DETACH TABLE set;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt32(1), toUInt32(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toUInt8(3), toUInt8(3)] END FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/02889_system_drop_format_schema.sql from pid=1713' 
DROP TABLE IF EXISTS issue32107;
SELECT dictGetString('01053_db.ssd_dict', 'c', toUInt64(10));
SELECT CASE WHEN (number % 2) = 0 THEN [toInt32(1), toInt32(2)] WHEN (number % 3) = 0 THEN [toFloat64(2), toFloat64(3)] ELSE [toUInt16(3), toUInt16(3)] END FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/02815_no_throw_in_simple_queries.sh from pid=1724' 
CREATE TABLE test_7D78447A485A743861517B535F5E3C33786765326B226D386959224E5A486C406B4C7E5125667C5A(x UInt8) Engine=Memory;
SELECT `y`, count() FROM `test_i3wxf6oh`.`02918_parallel_replicas` WHERE cityHash64(`y`) >= 12297829382473034410 GROUP BY `y` ORDER BY `y` ASC
DROP DATABASE IF EXISTS 75AYPPifOtdtX
SELECT '-21474836.48', 10000000000., '', count(kbytes), '', 10.0001, toStartOfMinute(datetime) AS dt_m, 10, NULL FROM projection_test__fuzz_0 GROUP BY dt_m WITH ROLLUP WITH TOTALS ORDER BY count(retry_count / duration) ASC NULLS LAST, 100000000000000000000. ASC NULLS FIRST format Null;
CREATE DATABASE IF NOT EXISTS test_lxf4c24p 
CREATE TABLE test_643A41367C59486D456D7838587C6B6B5047205D467D6B52417B6A5A406F293E756C4E5F32746E5F(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_d9bd511h 
alter table many_mutations delete where y = 839 * 2 settings mutations_sync = 0;
CREATE TABLE test_01193_18429.table_6_826 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
alter table data_01900_1 update s = 'foo_29' where 1;
SELECT count() FROM t_cnf_fuzz WHERE (c8 AND (NOT c3) AND c1) OR ((NOT c4) AND c8) OR (c3 AND (NOT c9) AND c9 AND (NOT c2)) SETTINGS convert_query_to_cnf = 0
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d USING (id) ;
CREATE TABLE test_29625C4A336B5C707A6C427D784F263A713F5F475F203842332A253B4E5C342C494E23315D38785E(x UInt8) Engine=Memory;
show create table zeros format TSVRaw;
SELECT CASE WHEN (number % 2) = 0 THEN toInt64(1) WHEN (number % 3) = 0 THEN toInt32(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
SELECT formatQuery('SELECT first_value(number) IGNORE NULLS from numbers(1)');
SELECT * FROM tab PREWHERE (s[NULL]) = 'Click a03' SETTINGS allow_experimental_analyzer=1;
INSERT INTO t_async_insert FORMAT CSVWithNamesAndTypes 
DROP DATABASE IF EXISTS test_6wmm3r8e 
SELECT 1, 32769, 1 = 32769, 1 != 32769, 1 < 32769, 1 <= 32769, 1 > 32769, 1 >= 32769, 32769 = 1, 32769 != 1, 32769 < 1, 32769 <= 1, 32769 > 1, 32769 >= 1 , toUInt8(1) = toUInt16(32769), toUInt8(1) != toUInt16(32769), toUInt8(1) < toUInt16(32769), toUInt8(1) <= toUInt16(32769), toUInt8(1) > toUInt16(32769), toUInt8(1) >= toUInt16(32769), toUInt16(32769) = toUInt8(1), toUInt16(32769) != toUInt8(1), toUInt16(32769) < toUInt8(1), toUInt16(32769) <= toUInt8(1), toUInt16(32769) > toUInt8(1), toUInt16(32769) >= toUInt8(1) , toUInt8(1) = toUInt32(32769), toUInt8(1) != toUInt32(32769), toUInt8(1) < toUInt32(32769), toUInt8(1) <= toUInt32(32769), toUInt8(1) > toUInt32(32769), toUInt8(1) >= toUInt32(32769), toUInt32(32769) = toUInt8(1), toUInt32(32769) != toUInt8(1), toUInt32(32769) < toUInt8(1), toUInt32(32769) <= toUInt8(1), toUInt32(32769) > toUInt8(1), toUInt32(32769) >= toUInt8(1) , toUInt8(1) = toInt32(32769), toUInt8(1) != toInt32(32769), toUInt8(1) < toInt32(32769), toUInt8(1) <= toInt32(32769), toUInt8(1) > toInt32(32769), toUInt8(1) >= toInt32(32769), toInt32(32769) = toUInt8(1), toInt32(32769) != toUInt8(1), toInt32(32769) < toUInt8(1), toInt32(32769) <= toUInt8(1), toInt32(32769) > toUInt8(1), toInt32(32769) >= toUInt8(1) , toUInt8(1) = toUInt64(32769), toUInt8(1) != toUInt64(32769), toUInt8(1) < toUInt64(32769), toUInt8(1) <= toUInt64(32769), toUInt8(1) > toUInt64(32769), toUInt8(1) >= toUInt64(32769), toUInt64(32769) = toUInt8(1), toUInt64(32769) != toUInt8(1), toUInt64(32769) < toUInt8(1), toUInt64(32769) <= toUInt8(1), toUInt64(32769) > toUInt8(1), toUInt64(32769) >= toUInt8(1) , toUInt8(1) = toInt64(32769), toUInt8(1) != toInt64(32769), toUInt8(1) < toInt64(32769), toUInt8(1) <= toInt64(32769), toUInt8(1) > toInt64(32769), toUInt8(1) >= toInt64(32769), toInt64(32769) = toUInt8(1), toInt64(32769) != toUInt8(1), toInt64(32769) < toUInt8(1), toInt64(32769) <= toUInt8(1), toInt64(32769) > toUInt8(1), toInt64(32769) >= toUInt8(1) , toInt8(1) = toUInt16(32769), toInt8(1) != toUInt16(32769), toInt8(1) < toUInt16(32769), toInt8(1) <= toUInt16(32769), toInt8(1) > toUInt16(32769), toInt8(1) >= toUInt16(32769), toUInt16(32769) = toInt8(1), toUInt16(32769) != toInt8(1), toUInt16(32769) < toInt8(1), toUInt16(32769) <= toInt8(1), toUInt16(32769) > toInt8(1), toUInt16(32769) >= toInt8(1) , toInt8(1) = toUInt32(32769), toInt8(1) != toUInt32(32769), toInt8(1) < toUInt32(32769), toInt8(1) <= toUInt32(32769), toInt8(1) > toUInt32(32769), toInt8(1) >= toUInt32(32769), toUInt32(32769) = toInt8(1), toUInt32(32769) != toInt8(1), toUInt32(32769) < toInt8(1), toUInt32(32769) <= toInt8(1), toUInt32(32769) > toInt8(1), toUInt32(32769) >= toInt8(1) , toInt8(1) = toInt32(32769), toInt8(1) != toInt32(32769), toInt8(1) < toInt32(32769), toInt8(1) <= toInt32(32769), toInt8(1) > toInt32(32769), toInt8(1) >= toInt32(32769), toInt32(32769) = toInt8(1), toInt32(32769) != toInt8(1), toInt32(32769) < toInt8(1), toInt32(32769) <= toInt8(1), toInt32(32769) > toInt8(1), toInt32(32769) >= toInt8(1) , toInt8(1) = toUInt64(32769), toInt8(1) != toUInt64(32769), toInt8(1) < toUInt64(32769), toInt8(1) <= toUInt64(32769), toInt8(1) > toUInt64(32769), toInt8(1) >= toUInt64(32769), toUInt64(32769) = toInt8(1), toUInt64(32769) != toInt8(1), toUInt64(32769) < toInt8(1), toUInt64(32769) <= toInt8(1), toUInt64(32769) > toInt8(1), toUInt64(32769) >= toInt8(1) , toInt8(1) = toInt64(32769), toInt8(1) != toInt64(32769), toInt8(1) < toInt64(32769), toInt8(1) <= toInt64(32769), toInt8(1) > toInt64(32769), toInt8(1) >= toInt64(32769), toInt64(32769) = toInt8(1), toInt64(32769) != toInt8(1), toInt64(32769) < toInt8(1), toInt64(32769) <= toInt8(1), toInt64(32769) > toInt8(1), toInt64(32769) >= toInt8(1) , toUInt16(1) = toUInt16(32769), toUInt16(1) != toUInt16(32769), toUInt16(1) < toUInt16(32769), toUInt16(1) <= toUInt16(32769), toUInt16(1) > toUInt16(32769), toUInt16(1) >= toUInt16(32769), toUInt16(32769) = toUInt16(1), toUInt16(32769) != toUInt16(1), toUInt16(32769) < toUInt16(1), toUInt16(32769) <= toUInt16(1), toUInt16(32769) > toUInt16(1), toUInt16(32769) >= toUInt16(1) , toUInt16(1) = toUInt32(32769), toUInt16(1) != toUInt32(32769), toUInt16(1) < toUInt32(32769), toUInt16(1) <= toUInt32(32769), toUInt16(1) > toUInt32(32769), toUInt16(1) >= toUInt32(32769), toUInt32(32769) = toUInt16(1), toUInt32(32769) != toUInt16(1), toUInt32(32769) < toUInt16(1), toUInt32(32769) <= toUInt16(1), toUInt32(32769) > toUInt16(1), toUInt32(32769) >= toUInt16(1) , toUInt16(1) = toInt32(32769), toUInt16(1) != toInt32(32769), toUInt16(1) < toInt32(32769), toUInt16(1) <= toInt32(32769), toUInt16(1) > toInt32(32769), toUInt16(1) >= toInt32(32769), toInt32(32769) = toUInt16(1), toInt32(32769) != toUInt16(1), toInt32(32769) < toUInt16(1), toInt32(32769) <= toUInt16(1), toInt32(32769) > toUInt16(1), toInt32(32769) >= toUInt16(1) , toUInt16(1) = toUInt64(32769), toUInt16(1) != toUInt64(32769), toUInt16(1) < toUInt64(32769), toUInt16(1) <= toUInt64(32769), toUInt16(1) > toUInt64(32769), toUInt16(1) >= toUInt64(32769), toUInt64(32769) = toUInt16(1), toUInt64(32769) != toUInt16(1), toUInt64(32769) < toUInt16(1), toUInt64(32769) <= toUInt16(1), toUInt64(32769) > toUInt16(1), toUInt64(32769) >= toUInt16(1) , toUInt16(1) = toInt64(32769), toUInt16(1) != toInt64(32769), toUInt16(1) < toInt64(32769), toUInt16(1) <= toInt64(32769), toUInt16(1) > toInt64(32769), toUInt16(1) >= toInt64(32769), toInt64(32769) = toUInt16(1), toInt64(32769) != toUInt16(1), toInt64(32769) < toUInt16(1), toInt64(32769) <= toUInt16(1), toInt64(32769) > toUInt16(1), toInt64(32769) >= toUInt16(1) , toInt16(1) = toUInt16(32769), toInt16(1) != toUInt16(32769), toInt16(1) < toUInt16(32769), toInt16(1) <= toUInt16(32769), toInt16(1) > toUInt16(32769), toInt16(1) >= toUInt16(32769), toUInt16(32769) = toInt16(1), toUInt16(32769) != toInt16(1), toUInt16(32769) < toInt16(1), toUInt16(32769) <= toInt16(1), toUInt16(32769) > toInt16(1), toUInt16(32769) >= toInt16(1) , toInt16(1) = toUInt32(32769), toInt16(1) != toUInt32(32769), toInt16(1) < toUInt32(32769), toInt16(1) <= toUInt32(32769), toInt16(1) > toUInt32(32769), toInt16(1) >= toUInt32(32769), toUInt32(32769) = toInt16(1), toUInt32(32769) != toInt16(1), toUInt32(32769) < toInt16(1), toUInt32(32769) <= toInt16(1), toUInt32(32769) > toInt16(1), toUInt32(32769) >= toInt16(1) , toInt16(1) = toInt32(32769), toInt16(1) != toInt32(32769), toInt16(1) < toInt32(32769), toInt16(1) <= toInt32(32769), toInt16(1) > toInt32(32769), toInt16(1) >= toInt32(32769), toInt32(32769) = toInt16(1), toInt32(32769) != toInt16(1), toInt32(32769) < toInt16(1), toInt32(32769) <= toInt16(1), toInt32(32769) > toInt16(1), toInt32(32769) >= toInt16(1) , toInt16(1) = toUInt64(32769), toInt16(1) != toUInt64(32769), toInt16(1) < toUInt64(32769), toInt16(1) <= toUInt64(32769), toInt16(1) > toUInt64(32769), toInt16(1) >= toUInt64(32769), toUInt64(32769) = toInt16(1), toUInt64(32769) != toInt16(1), toUInt64(32769) < toInt16(1), toUInt64(32769) <= toInt16(1), toUInt64(32769) > toInt16(1), toUInt64(32769) >= toInt16(1) , toInt16(1) = toInt64(32769), toInt16(1) != toInt64(32769), toInt16(1) < toInt64(32769), toInt16(1) <= toInt64(32769), toInt16(1) > toInt64(32769), toInt16(1) >= toInt64(32769), toInt64(32769) = toInt16(1), toInt64(32769) != toInt16(1), toInt64(32769) < toInt16(1), toInt64(32769) <= toInt16(1), toInt64(32769) > toInt16(1), toInt64(32769) >= toInt16(1) , toUInt32(1) = toUInt16(32769), toUInt32(1) != toUInt16(32769), toUInt32(1) < toUInt16(32769), toUInt32(1) <= toUInt16(32769), toUInt32(1) > toUInt16(32769), toUInt32(1) >= toUInt16(32769), toUInt16(32769) = toUInt32(1), toUInt16(32769) != toUInt32(1), toUInt16(32769) < toUInt32(1), toUInt16(32769) <= toUInt32(1), toUInt16(32769) > toUInt32(1), toUInt16(32769) >= toUInt32(1) , toUInt32(1) = toUInt32(32769), toUInt32(1) != toUInt32(32769), toUInt32(1) < toUInt32(32769), toUInt32(1) <= toUInt32(32769), toUInt32(1) > toUInt32(32769), toUInt32(1) >= toUInt32(32769), toUInt32(32769) = toUInt32(1), toUInt32(32769) != toUInt32(1), toUInt32(32769) < toUInt32(1), toUInt32(32769) <= toUInt32(1), toUInt32(32769) > toUInt32(1), toUInt32(32769) >= toUInt32(1) , toUInt32(1) = toInt32(32769), toUInt32(1) != toInt32(32769), toUInt32(1) < toInt32(32769), toUInt32(1) <= toInt32(32769), toUInt32(1) > toInt32(32769), toUInt32(1) >= toInt32(32769), toInt32(32769) = toUInt32(1), toInt32(32769) != toUInt32(1), toInt32(32769) < toUInt32(1), toInt32(32769) <= toUInt32(1), toInt32(32769) > toUInt32(1), toInt32(32769) >= toUInt32(1) , toUInt32(1) = toUInt64(32769), toUInt32(1) != toUInt64(32769), toUInt32(1) < toUInt64(32769), toUInt32(1) <= toUInt64(32769), toUInt32(1) > toUInt64(32769), toUInt32(1) >= toUInt64(32769), toUInt64(32769) = toUInt32(1), toUInt64(32769) != toUInt32(1), toUInt64(32769) < toUInt32(1), toUInt64(32769) <= toUInt32(1), toUInt64(32769) > toUInt32(1), toUInt64(32769) >= toUInt32(1) , toUInt32(1) = toInt64(32769), toUInt32(1) != toInt64(32769), toUInt32(1) < toInt64(32769), toUInt32(1) <= toInt64(32769), toUInt32(1) > toInt64(32769), toUInt32(1) >= toInt64(32769), toInt64(32769) = toUInt32(1), toInt64(32769) != toUInt32(1), toInt64(32769) < toUInt32(1), toInt64(32769) <= toUInt32(1), toInt64(32769) > toUInt32(1), toInt64(32769) >= toUInt32(1) , toInt32(1) = toUInt16(32769), toInt32(1) != toUInt16(32769), toInt32(1) < toUInt16(32769), toInt32(1) <= toUInt16(32769), toInt32(1) > toUInt16(32769), toInt32(1) >= toUInt16(32769), toUInt16(32769) = toInt32(1), toUInt16(32769) != toInt32(1), toUInt16(32769) < toInt32(1), toUInt16(32769) <= toInt32(1), toUInt16(32769) > toInt32(1), toUInt16(32769) >= toInt32(1) , toInt32(1) = toUInt32(32769), toInt32(1) != toUInt32(32769), toInt32(1) < toUInt32(32769), toInt32(1) <= toUInt32(32769), toInt32(1) > toUInt32(32769), toInt32(1) >= toUInt32(32769), toUInt32(32769) = toInt32(1), toUInt32(32769) != toInt32(1), toUInt32(32769) < toInt32(1), toUInt32(32769) <= toInt32(1), toUInt32(32769) > toInt32(1), toUInt32(32769) >= toInt32(1) , toInt32(1) = toInt32(32769), toInt32(1) != toInt32(32769), toInt32(1) < toInt32(32769), toInt32(1) <= toInt32(32769), toInt32(1) > toInt32(32769), toInt32(1) >= toInt32(32769), toInt32(32769) = toInt32(1), toInt32(32769) != toInt32(1), toInt32(32769) < toInt32(1), toInt32(32769) <= toInt32(1), toInt32(32769) > toInt32(1), toInt32(32769) >= toInt32(1) , toInt32(1) = toUInt64(32769), toInt32(1) != toUInt64(32769), toInt32(1) < toUInt64(32769), toInt32(1) <= toUInt64(32769), toInt32(1) > toUInt64(32769), toInt32(1) >= toUInt64(32769), toUInt64(32769) = toInt32(1), toUInt64(32769) != toInt32(1), toUInt64(32769) < toInt32(1), toUInt64(32769) <= toInt32(1), toUInt64(32769) > toInt32(1), toUInt64(32769) >= toInt32(1) , toInt32(1) = toInt64(32769), toInt32(1) != toInt64(32769), toInt32(1) < toInt64(32769), toInt32(1) <= toInt64(32769), toInt32(1) > toInt64(32769), toInt32(1) >= toInt64(32769), toInt64(32769) = toInt32(1), toInt64(32769) != toInt32(1), toInt64(32769) < toInt32(1), toInt64(32769) <= toInt32(1), toInt64(32769) > toInt32(1), toInt64(32769) >= toInt32(1) , toUInt64(1) = toUInt16(32769), toUInt64(1) != toUInt16(32769), toUInt64(1) < toUInt16(32769), toUInt64(1) <= toUInt16(32769), toUInt64(1) > toUInt16(32769), toUInt64(1) >= toUInt16(32769), toUInt16(32769) = toUInt64(1), toUInt16(32769) != toUInt64(1), toUInt16(32769) < toUInt64(1), toUInt16(32769) <= toUInt64(1), toUInt16(32769) > toUInt64(1), toUInt16(32769) >= toUInt64(1) , toUInt64(1) = toUInt32(32769), toUInt64(1) != toUInt32(32769), toUInt64(1) < toUInt32(32769), toUInt64(1) <= toUInt32(32769), toUInt64(1) > toUInt32(32769), toUInt64(1) >= toUInt32(32769), toUInt32(32769) = toUInt64(1), toUInt32(32769) != toUInt64(1), toUInt32(32769) < toUInt64(1), toUInt32(32769) <= toUInt64(1), toUInt32(32769) > toUInt64(1), toUInt32(32769) >= toUInt64(1) , toUInt64(1) = toInt32(32769), toUInt64(1) != toInt32(32769), toUInt64(1) < toInt32(32769), toUInt64(1) <= toInt32(32769), toUInt64(1) > toInt32(32769), toUInt64(1) >= toInt32(32769), toInt32(32769) = toUInt64(1), toInt32(32769) != toUInt64(1), toInt32(32769) < toUInt64(1), toInt32(32769) <= toUInt64(1), toInt32(32769) > toUInt64(1), toInt32(32769) >= toUInt64(1) , toUInt64(1) = toUInt64(32769), toUInt64(1) != toUInt64(32769), toUInt64(1) < toUInt64(32769), toUInt64(1) <= toUInt64(32769), toUInt64(1) > toUInt64(32769), toUInt64(1) >= toUInt64(32769), toUInt64(32769) = toUInt64(1), toUInt64(32769) != toUInt64(1), toUInt64(32769) < toUInt64(1), toUInt64(32769) <= toUInt64(1), toUInt64(32769) > toUInt64(1), toUInt64(32769) >= toUInt64(1) , toUInt64(1) = toInt64(32769), toUInt64(1) != toInt64(32769), toUInt64(1) < toInt64(32769), toUInt64(1) <= toInt64(32769), toUInt64(1) > toInt64(32769), toUInt64(1) >= toInt64(32769), toInt64(32769) = toUInt64(1), toInt64(32769) != toUInt64(1), toInt64(32769) < toUInt64(1), toInt64(32769) <= toUInt64(1), toInt64(32769) > toUInt64(1), toInt64(32769) >= toUInt64(1) , toInt64(1) = toUInt16(32769), toInt64(1) != toUInt16(32769), toInt64(1) < toUInt16(32769), toInt64(1) <= toUInt16(32769), toInt64(1) > toUInt16(32769), toInt64(1) >= toUInt16(32769), toUInt16(32769) = toInt64(1), toUInt16(32769) != toInt64(1), toUInt16(32769) < toInt64(1), toUInt16(32769) <= toInt64(1), toUInt16(32769) > toInt64(1), toUInt16(32769) >= toInt64(1) , toInt64(1) = toUInt32(32769), toInt64(1) != toUInt32(32769), toInt64(1) < toUInt32(32769), toInt64(1) <= toUInt32(32769), toInt64(1) > toUInt32(32769), toInt64(1) >= toUInt32(32769), toUInt32(32769) = toInt64(1), toUInt32(32769) != toInt64(1), toUInt32(32769) < toInt64(1), toUInt32(32769) <= toInt64(1), toUInt32(32769) > toInt64(1), toUInt32(32769) >= toInt64(1) , toInt64(1) = toInt32(32769), toInt64(1) != toInt32(32769), toInt64(1) < toInt32(32769), toInt64(1) <= toInt32(32769), toInt64(1) > toInt32(32769), toInt64(1) >= toInt32(32769), toInt32(32769) = toInt64(1), toInt32(32769) != toInt64(1), toInt32(32769) < toInt64(1), toInt32(32769) <= toInt64(1), toInt32(32769) > toInt64(1), toInt32(32769) >= toInt64(1) , toInt64(1) = toUInt64(32769), toInt64(1) != toUInt64(32769), toInt64(1) < toUInt64(32769), toInt64(1) <= toUInt64(32769), toInt64(1) > toUInt64(32769), toInt64(1) >= toUInt64(32769), toUInt64(32769) = toInt64(1), toUInt64(32769) != toInt64(1), toUInt64(32769) < toInt64(1), toUInt64(32769) <= toInt64(1), toUInt64(32769) > toInt64(1), toUInt64(32769) >= toInt64(1) , toInt64(1) = toInt64(32769), toInt64(1) != toInt64(32769), toInt64(1) < toInt64(32769), toInt64(1) <= toInt64(32769), toInt64(1) > toInt64(32769), toInt64(1) >= toInt64(32769), toInt64(32769) = toInt64(1), toInt64(32769) != toInt64(1), toInt64(32769) < toInt64(1), toInt64(32769) <= toInt64(1), toInt64(32769) > toInt64(1), toInt64(32769) >= toInt64(1) 
CREATE TABLE test_7B514D3A2533792E365E57695B203B2D7D29475B3F3155256728732C7B2D31604246403F73314D3F(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_6_153 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT sumMerge(s) FROM (SELECT sumState(number) s FROM numbers(1));
DROP DATABASE IF EXISTS test_eu4oeuwq 
select * from file('test_02149_schema_inference_test_2lktp9cn.data', 'CSVWithNames')
SELECT 'Running test stateless/01942_untuple_transformers_msan.sql from pid=1714' 
DROP TABLE IF EXISTS 02919_test_multi_col;
SET param_x = 1;
select '<6: refreshed>', * from a;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 1772, 500 settings ignore_materialized_views_with_dropped_target_table=1
INSERT INTO dst_9 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 96
CREATE TABLE test_01193_18429.table_7_718 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT count() FROM t_cnf_fuzz WHERE (c8 AND (NOT c8) AND (NOT c0)) OR (c4 AND (NOT c6) AND (NOT c0) AND (NOT c6)) OR (c0 AND (NOT c5) AND (NOT c5)) OR ((NOT c6) AND c3 AND (NOT c4)) OR (c6 AND c5) OR ((NOT c7) AND c5 AND (NOT c2)) OR ((NOT c1) AND c5 AND c0) SETTINGS convert_query_to_cnf = 1
SELECT 11;
SELECT tupleHammingDistance((1, 2, 3), (1, 257, 65537));
SELECT intDivOrZero(toDecimal128(4.4, 2), toDecimal256(2.2, 2));
CREATE TABLE foo__fuzz_0 (`Id` Int64, `Val` Nullable(Int32)) ENGINE = MergeTree ORDER BY Id SETTINGS index_granularity = 48527, min_bytes_for_wide_part = 1068747302, ratio_of_defaults_for_sparse_serialization = 0.8797901272773743, replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 8343, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1480141443, index_granularity_bytes = 14135553, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 41201, primary_key_compress_block_size = 97048
INSERT INTO test_01193_18429.table_7_144 VALUES 
SELECT 'Running test stateless/02438_sync_replica_lightweight.sql from pid=1724' 
INSERT INTO test_01193_18429.table_5_11 VALUES 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), N != DT as r FORMAT CSV;
SELECT 'Running test stateless/01292_optimize_data_skip_idx_order_by_expr.sql from pid=1722' 
SELECT 'tn1 ANY RIGHT JOIN t2 | bs = 9';
select * from rmt;
DROP TABLE IF EXISTS range_dictionary_nullable_default_source_table;
DROP TABLE IF EXISTS bitmap_test;
CREATE VIEW numbers10m AS SELECT number FROM system.numbers LIMIT 10000000;
SHOW CREATE USER u4_01292;
DROP DATABASE IF EXISTS test_3tv1ng3k 
CREATE TABLE test_01193_18429.table_5_772 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select t1.a t1_a, t2.a from table1 as t1 join table2 as t2 on table1.a = table2.a and t1.a = t2.a and t1_a = t2.a;
INSERT INTO r8 SELECT 94
SELECT toYearWeek(NULL, NULL);
CREATE TABLE test_01193_18429.table_4_232 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_9_751 VALUES 
CREATE TABLE t2 (a UInt32, key UInt32) ENGINE = TinyLog;
CREATE TABLE test_533B5A21596F28615C2A63495B6328317354236360692B3174594E4F23342C3C41287C6E49214E5F(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00704_arrayCumSumLimited_arrayDifference.sql from pid=1713' 
SELECT 'Running test stateless/00950_dict_get.sql from pid=1705' 
SELECT distinct(marks) from system.parts WHERE table = 'zero_rows_per_granule' and database=currentDatabase() and active=1;
SELECT sum(if(number % 2 == 0 as cond_expr, 1 as one_expr, 0 as zero_expr) as if_expr), sum(cond_expr), sum(if_expr), one_expr, zero_expr FROM numbers(100);
DROP TABLE ttl_empty_parts;
INSERT INTO test_01193_18429.table_9_417 VALUES 
OPTIMIZE TABLE full_duplicates FINAL DEDUPLICATE BY pk,sk,val,mat,partition_key;
SELECT '333' = t1.key FROM t1 INNER ANY JOIN t2_nullable as t2 ON t1.id == t2.id AND t1.key2 like '33%';
DROP TABLE t_comp_subcolumns;
INSERT INTO test values 
select dictGetAll('regexp_dict3', ('tag', 'topological_index', 'captured', 'parent'), 'clickhouse.com', 2);
SELECT 'Simple';
SELECT COUNT() FROM bloom_filter_array_types_test WHERE has(i32, 1);
CREATE DATABASE IF NOT EXISTS test_a7t2jojl 
SELECT max(n * -2), max(-2 * n), max(n / -2), max(-1 / n) FROM (SELECT number n FROM numbers(10));
DESCRIBE (SELECT test_table.id FROM test_table);
CREATE TABLE test_02908_r1_40 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_40', 'r1') ORDER BY tuple()
INSERT INTO test_01193_18429.table_1_494 VALUES 
SELECT 'Running test stateless/00006_extremes_and_subquery_from.sql from pid=1724' 
CREATE TABLE u64 (x UInt64, y UInt64 DEFAULT x) ENGINE = Memory;
SELECT 51;
SELECT concat('With ', x) FROM concat_saf_test ORDER BY x DESC;
SELECT * FROM viewIfPermitted(SELECT message FROM system.warnings ELSE null('message String'))
DROP DATABASE IF EXISTS test_xywpf4j8 
select mapAdd((['a', 'b'], [1, 1]), ([key], [1])) from values('key String', ('b'), ('c'), ('d'));
SELECT timeDiff(NULL, NULL);
EXPLAIN SYNTAX SELECT a FROM t_logical_expressions_optimizer_low_cardinality WHERE a = 'x' OR 'y' = a;
CREATE TABLE test_01193_18429.table_5_48 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select * from (select toLowCardinality(toNullable(dummy)) as val from system.one) any left join (select dummy as rval from system.one) on val + 0 = rval * 1;
CREATE TABLE test_01193_18429.table_5_37 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE 02267_t (n1 UInt32, n2 UInt32) ENGINE = Memory;
insert into short select number % 11, toDateTime('2021-01-01 00:00:00') + number from numbers(1000);
SELECT CASE WHEN 1 THEN [col2, col3] WHEN (col1 % 3) = 0 THEN [col4, col5] ELSE [col6, col7] END FROM multi_if_check;
DROP DATABASE IF EXISTS test_b0n23f4v 
SELECT '111' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ffff:ffff:fffe:0')))
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (42 < 63 AND 109 > 0 ? 42 : 0)), throwIf(last != (42 < 63 AND 109 > 0 ? least(63 - 1, 42 + 109 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(63) LIMIT 42, 109);
SELECT extractTextFromHTML('Hello<style type="text/css">World <![CDATA[</style>]]> </stylea> goodbye');
SELECT hasToken('hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,Ã¦ÂÂÃ©ÂÂ', 'Ã¦ÂÂÃ©ÂÂ'), ' expecting ', 1;
CREATE TABLE test_7E39626E644D6429203E72492F36616653362C552C7C2355402941272F284277786C483735337D5F(x UInt8) Engine=Memory;
SELECT JSON_QUERY('{"123":{"abc":1}}', '$.123.abc');
SELECT arraySort(geohashesInBox(179.0, -1.0, 180.0, 0.0, 3));
SELECT 'Running test stateless/00125_array_element_of_array_of_tuple.sql from pid=1720' 
ALTER TABLE concurrent_alter_column ADD COLUMN c213 DOUBLE;
SELECT x FROM t1 ALL RIGHT JOIN tj ON t1.id1 == tj.key1 AND t1.id2 == tj.key2 ORDER BY key1 FORMAT TSVWithNames;
CREATE TABLE test_01193_18429.table_5_788 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_10_986 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
set allow_aggregate_partitions_independently=1, force_aggregate_partitions_independently=1;
SELECT 'Running test stateless/01891_not_like_partition_prune.sql from pid=1715' 
INSERT INTO src_8 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 56
CREATE TABLE one_00458 (x Int32) ENGINE = Memory;
INSERT INTO test_01193_18429.table_5_508 VALUES 
GRANT SELECT ON INFORMATION_SCHEMA.* TO 02833_HTTP_WITH_SESSION_ID_USER_25955
SELECT value FROM system.events WHERE event = 'DictCacheKeysRequestedMiss' SETTINGS system_events_show_zero_values=1 
CREATE TABLE test_763A2A3035252179602B7A6E4E5E225E29276D2A25636B5464797C664F543578264B493E76547C4A(x UInt8) Engine=Memory;
CREATE TABLE test_556B522F3B66727366644B54662C487C2F685C37607B47317D49696E454242637466796A6E6B6E42(x UInt8) Engine=Memory;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (24 < 4 AND 72 > 0 ? 24 : 0)), throwIf(last != (24 < 4 AND 72 > 0 ? least(4 - 1, 24 + 72 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(4) LIMIT 24, 72);
SELECT cond_non_constant_nullable ? then_non_constant_nullable : constant_null AS res FROM nullable_00431;
SELECT getSetting('alter_sync');
SELECT avgWeighted(x, w) FROM values('x UInt8, w Int8', (4, 1), (1, 0), (10, 2));
CREATE TABLE test_01193_18429.table_9_857 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_46396645763C3555526E614D5C384F6F2338206540313D78634C2B27532350355835743C69204E2E(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_2_927 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT s, replaceOne(s, '_', 'oo') AS a, replaceRegexpOne(s, '_', 'oo') AS b, a = b FROM (SELECT arrayJoin(['.', '.']) AS s);
CREATE TABLE test_62592A237236757B324F514D7C4C3C525B24443C5B5F5E6D3125422E5F382C352D41636651273D2D(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_7_506 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select sumMap(val, cnt) from ( SELECT [ CAST(1, 'Float64') ] as val, [1] as cnt );
CREATE WINDOW VIEW test_kna0pcoi.wv INNER ENGINE = AggregatingMergeTree ORDER BY wid ENGINE = Memory AS SELECT count(test_kna0pcoi.mt.a), count(test_kna0pcoi.mt_2.b), wid FROM test_kna0pcoi.mt INNER JOIN test_kna0pcoi.mt_2 ON test_kna0pcoi.mt.timestamp = test_kna0pcoi.mt_2.timestamp GROUP BY tumble(test_kna0pcoi.mt.timestamp, toIntervalSecond('1')) AS wid
SELECT arrayAll(x -> materialize(1), emptyArrayUInt8());
SELECT multiIf((number % 2) = 0, toInt64(1), (number % 3) = 0, toInt32(2), toUInt32(3)) FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/00232_format_readable_decimal_size.sql from pid=1726' 
CREATE TABLE default_join1(a Int64, b Int64) ENGINE=Memory;
DROP DATABASE IF EXISTS test_tuy0byfi 
CREATE DATABASE IF NOT EXISTS test_431xnzov 
DROP VIEW test_dictionary_view;
SELECT arrayEnumerateUniqRanked([[1], [], [1], [], [1], [], [1], [], [1], [], [1], [], [1], [], [1], [], [1]]);
select 4 as x format Native 
SELECT bitShiftLeft(toInt64(-2), 1);
SELECT least(toInt64(9223372036854775807), toInt128(0)) x, least(toInt64(9223372036854775807), toInt128('9223372036854775808')) x2, least(toInt64(-9223372036854775808), toInt128(0)) x3, least(toInt64(-9223372036854775808), toInt128('-9223372036854775809')) x4, greatest(toInt64(9223372036854775807), toInt128(0)) y, greatest(toInt64(9223372036854775807), toInt128('9223372036854775808')) y2, greatest(toInt64(-9223372036854775808), toInt128(0)) y3, greatest(toInt64(-9223372036854775808), toInt128('-9223372036854775809')) y4, toTypeName(x), toTypeName(y);
INSERT INTO test_01193_18429.table_3_780 VALUES 
SELECT ucase(NULL);
SELECT length(replaceAll(bin('clickhouse cloud'), '0', '')) = bitCount('clickhouse cloud');
DROP TABLE IF EXISTS empty_pk;
CREATE DATABASE IF NOT EXISTS test_v4m76pi7 
SET max_rows_to_read = 10;
SELECT 'Running test stateless/02095_function_get_os_kernel_version.sql from pid=1724' 
alter table many_mutations delete where y = 803 * 2 settings mutations_sync = 0;
DROP VIEW IF EXISTS test_02428_pv3
SELECT pointInPolygon((39.840202, 21.451471), [(39.82819, 21.42907),(39.82814, 21.4304),(39.82488, 21.43059),(39.82445, 21.43066),(39.82337, 21.43101),(39.82191, 21.43183),(39.82049, 21.43295),(39.81955, 21.43393),(39.81912, 21.43421),(39.81892, 21.4343),(39.81862, 21.43437),(39.81829, 21.4344),(39.81774, 21.43434),(39.81632, 21.43374),(39.81706, 21.43236),(39.81724, 21.4319),(39.81748, 21.43143),(39.81812, 21.43039),(39.81845, 21.42992),(39.81919, 21.42907),(39.81933, 21.42884),(39.81964, 21.4281),(39.82006, 21.42826),(39.82103, 21.4285),(39.82135, 21.42873),(39.82154, 21.42879),(39.82284, 21.42907),(39.82412, 21.42923),(39.8253, 21.42933),(39.82659, 21.42933),(39.8273, 21.42926),(39.82819, 21.42907)]);
SELECT count() = sum(v) FROM replacing_00155 where x % 3 == 0 and x < 8194
CREATE TABLE test_4C6D6A352F5439315D7B472824377E4C427871502F4B276568344A6B746B377E6852363F577D4F48(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00220_shard_with_totals_in_subquery_remote_and_limit.sql from pid=1726' 
SELECT rand([]);
INSERT INTO Beta VALUES 
CREATE DATABASE test_buffer;
CREATE TABLE test_01193_18429.table_5_586 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT addMonths(materialize(toDateTime('2017-11-05 08:07:47')), materialize(1));
INSERT INTO 02015_db.test_table_default(data_1) VALUES 
SELECT 'Running test stateless/02427_column_nullable_ubsan.sql from pid=1724' 
SELECT 'SELECT N + toInt32(-1)';
CREATE TABLE test_44405F3140624C52426E553C2954632A752D366D7C4B5C7A754428492F64287D545374792A723B45(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_4_672 VALUES 
SELECT 32,'Hello',bin(bitShiftLeft('Hello', 32));
SHOW CREATE TABLE compression_codec_multiple_log;
alter table merge1 add column dummy String after CounterID;
SELECT age('day', toDateTime64('1927-01-01 00:00:00', 3, 'UTC'), materialize(toDate32('1927-01-02', 'UTC')), 'UTC');
INSERT INTO TABLE src_b VALUES 
SELECT a, b, c, e FROM t_fixed_prefix ORDER BY a, b, c, e SETTINGS optimize_read_in_order = 0
DESCRIBE (SELECT * FROM test_table_join_1 AS t1 INNER JOIN test_table_join_2 AS t2 USING (id) INNER JOIN test_table_join_3 AS t3 USING (id));
CREATE TABLE test_01193_18429.table_5_287 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT concatWithSeparator('1', 'a', null) == null;
SELECT 'Policy not applicable';
CREATE TABLE log (s String) ENGINE = Log;
INSERT INTO r6 SELECT 4
alter table Test clear column impression_id in partition '202001';
CREATE TABLE test_4832414B4A7D656C57493D2B627849484F62554662454C247B222D3A766C6C765D63423F5242205A(x UInt8) Engine=Memory;
CREATE TABLE rmt1 (`d` DateTime, `n` int) ENGINE = ReplicatedMergeTree('/test/01165/{database}/rmt', '1') PARTITION BY toYYYYMMDD(d) ORDER BY n SETTINGS index_granularity = 53005, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 23386, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1640282071, index_granularity_bytes = 27159006, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 43090, primary_key_compress_block_size = 87523
CREATE DATABASE IF NOT EXISTS test_pwh7td0a 
CREATE TABLE test_277778774C4E4A702A31626D346D4A5226733E316A587440406C577B345E2F6E6756396640535C78(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02461_cancel_finish_race.sh from pid=1713' 
SELECT 'Running test stateless/02346_inverted_index_experimental_flag.sql from pid=1722' 
SELECT 'Running test stateless/00942_dataparts_500.sh from pid=1720' 
INSERT INTO r1 SELECT 53
SELECT count() FROM ( SELECT arrayJoin(cache_paths) AS cache_path, local_path, remote_path FROM system.remote_data_paths ) AS data_paths INNER JOIN system.filesystem_cache AS caches ON data_paths.cache_path = caches.cache_path
SELECT b FROM buffer_00126 ORDER BY a, b, c;
EXPLAIN AST ALTER TABLE t REMOVE SAMPLE BY;
SELECT isNotNull([NULL]);
CREATE TABLE test_4E7C4A48793F22507A4427463C3B4B712334442A7626484C632A736D69552A652A7822375D265661(x UInt8) Engine=Memory;
INSERT INTO four_rows_per_granule (p, k, v1, v2, Sign, Version) VALUES 
SELECT '--allow_simdjson=0--';
INSERT INTO mt VALUES /* (-40, 2) */ 
CREATE TABLE test_01193_18429.table_4_332 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
OPTIMIZE TABLE concurrent_optimize_table FINAL
DROP TABLE APPLICATION;
CREATE INDEX idx_tab4_3 ON tab4 (col4 DESC,col3);
DROP DATABASE IF EXISTS test_8qnqz2c8 
CREATE TABLE test_01193_18429.table_10_238 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 22296, 500 settings ignore_materialized_views_with_dropped_target_table=1
INSERT INTO test_01193_18429.table_5_820 VALUES 
CREATE TABLE test_253E6030592B6841482B7A5D577C4F366A58716255362360396F3B546B653B21614F363F7A4E7324(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_1a20pj1u 
SELECT sparkbar(11)(event_date,cnt) FROM spark_bar_test;
SELECT 'a}' AS x, x LIKE (concat('%', x, '%') AS pat), materialize(x) LIKE pat;
CREATE TABLE test_01193_18429.table_9_97 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT timestamp_diff(NULL, NULL);
DROP DATABASE IF EXISTS test_o6op1tlu 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (102 < 77 AND 62 > 0 ? 102 : 0)), throwIf(last != (102 < 77 AND 62 > 0 ? least(77 - 1, 102 + 62 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(77) LIMIT 102, 62);
SELECT toBool('n');
SELECT 'Running test stateless/01006_simpod_empty_part_single_column_write.sh from pid=1715' 
CREATE TABLE tab (`foo` Array(LowCardinality(String)), INDEX idx foo TYPE bloom_filter GRANULARITY 1) ENGINE = MergeTree PRIMARY KEY tuple() SETTINGS index_granularity = 14872, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.7356902956962585, replace_long_file_name_to_hash = true, max_file_name_length = 118, merge_max_block_size = 7840, prefer_fetch_merged_part_size_threshold = 7464550022, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 3476021785, index_granularity_bytes = 4748320, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75513, primary_key_compress_block_size = 30575
INSERT INTO test_01193_18429.table_9_435 VALUES 
select parseDateTimeOrNull('10:04:11 invalid 03-07-2019', '%s:%i:%H %d-%m-%Y', 'UTC') IS NULL;
DROP TABLE series;
CREATE TABLE test_312E736B53316C4264554D26396A2268657B71536C53575061713A4F4F7A2766625F5146466C4622(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_9_396 VALUES 
select * from system.one t1 join system.one t2 on t1.dummy = t2.dummy limit 0 FORMAT TabSeparated;
CREATE DATABASE IF NOT EXISTS test_to36i4e3 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c4)) OR ((NOT c6) AND c5) OR ((NOT c6) AND (NOT c7) AND c9) OR (c2 AND c1 AND c0) OR (c8 AND (NOT c5) AND c5 AND c4 AND c0) OR ((NOT c3) AND c0) SETTINGS convert_query_to_cnf = 1
DROP DATABASE IF EXISTS test_gizbjvqy 
DROP TABLE line_as_string4
SELECT position('123' arg_1, '1234' arg_2), arg_1, arg_2;
CREATE TABLE test_3F7E773551355378726076247A655A2B77405D60685C7E752B607A7B774B5541507C633150683940(x UInt8) Engine=Memory;
select 0 from test_rows_wide_part limit 1 FORMAT JSONCompact settings exact_rows_before_limit = 0,output_format_write_statistics = 0;
CREATE TABLE test_75734747523F455E6D47405B46737D637B6C62275A397D6A2F747E76376F50416B6D49776E7D6445(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02963_test_flexible_disk_configuration.sql from pid=1715' 
SELECT 14, 11, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (14 < 13 AND 11 > 0 ? 14 : 0)), throwIf(last != (14 < 13 AND 11 > 0 ? least(13 - 1, 14 + 11 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 14, 11);
CREATE TABLE test_01193_18429.table_5_778 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_bl7rgr6t 
CREATE TABLE test_476F45675E29506254294A6D4A2A2B66752855753E275366354545342F455C514C4536206D4E7C76(x UInt8) Engine=Memory;
SELECT count() FROM dict SETTINGS optimize_trivial_approximate_count_query = 1, max_rows_to_read = 1;
INSERT INTO test_01193_18429.table_1_221 VALUES 
DROP DATABASE IF EXISTS test_7behtfgc 
DROP TABLE size_hint;
select 13 = multiSearchFirstPositionUTF8(materialize('Hello World ÃÂ£'), materialize(['WORLD', 'ÃÂ£']));
CREATE TABLE test_6A284B603E735B51392B506768365D5133496530625E404B4E762455646B26202971692023636042(x UInt8) Engine=Memory;
SELECT -1, 9223372036854775808, -1 = 9223372036854775808, -1 != 9223372036854775808, -1 < 9223372036854775808, -1 <= 9223372036854775808, -1 > 9223372036854775808, -1 >= 9223372036854775808, 9223372036854775808 = -1, 9223372036854775808 != -1, 9223372036854775808 < -1, 9223372036854775808 <= -1, 9223372036854775808 > -1, 9223372036854775808 >= -1 , toInt8(-1) = toUInt64(9223372036854775808), toInt8(-1) != toUInt64(9223372036854775808), toInt8(-1) < toUInt64(9223372036854775808), toInt8(-1) <= toUInt64(9223372036854775808), toInt8(-1) > toUInt64(9223372036854775808), toInt8(-1) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toInt8(-1), toUInt64(9223372036854775808) != toInt8(-1), toUInt64(9223372036854775808) < toInt8(-1), toUInt64(9223372036854775808) <= toInt8(-1), toUInt64(9223372036854775808) > toInt8(-1), toUInt64(9223372036854775808) >= toInt8(-1) , toInt16(-1) = toUInt64(9223372036854775808), toInt16(-1) != toUInt64(9223372036854775808), toInt16(-1) < toUInt64(9223372036854775808), toInt16(-1) <= toUInt64(9223372036854775808), toInt16(-1) > toUInt64(9223372036854775808), toInt16(-1) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toInt16(-1), toUInt64(9223372036854775808) != toInt16(-1), toUInt64(9223372036854775808) < toInt16(-1), toUInt64(9223372036854775808) <= toInt16(-1), toUInt64(9223372036854775808) > toInt16(-1), toUInt64(9223372036854775808) >= toInt16(-1) , toInt32(-1) = toUInt64(9223372036854775808), toInt32(-1) != toUInt64(9223372036854775808), toInt32(-1) < toUInt64(9223372036854775808), toInt32(-1) <= toUInt64(9223372036854775808), toInt32(-1) > toUInt64(9223372036854775808), toInt32(-1) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toInt32(-1), toUInt64(9223372036854775808) != toInt32(-1), toUInt64(9223372036854775808) < toInt32(-1), toUInt64(9223372036854775808) <= toInt32(-1), toUInt64(9223372036854775808) > toInt32(-1), toUInt64(9223372036854775808) >= toInt32(-1) , toInt64(-1) = toUInt64(9223372036854775808), toInt64(-1) != toUInt64(9223372036854775808), toInt64(-1) < toUInt64(9223372036854775808), toInt64(-1) <= toUInt64(9223372036854775808), toInt64(-1) > toUInt64(9223372036854775808), toInt64(-1) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toInt64(-1), toUInt64(9223372036854775808) != toInt64(-1), toUInt64(9223372036854775808) < toInt64(-1), toUInt64(9223372036854775808) <= toInt64(-1), toUInt64(9223372036854775808) > toInt64(-1), toUInt64(9223372036854775808) >= toInt64(-1) 
SELECT uid, date, toDate(date) = toDate('2021-03-24') AS res FROM table WHERE res = 1 ORDER BY uid, date;
CREATE DATABASE IF NOT EXISTS test_arlxinl2 
INSERT INTO src VALUES /* (-76, 2) */ 
CREATE DICTIONARY hashed_array_dictionary_simple_key_hierarchy ( id UInt64, parent_id UInt64 HIERARCHICAL ) PRIMARY KEY id SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_hierarchy_table')) LAYOUT(HASHED_ARRAY(SHARDS 16)) LIFETIME(MIN 1 MAX 1000);
INSERT INTO capnp_nested_table SETTINGS format_schema='/usr/share/clickhouse-test/queries/0_stateless/format_schemas/02030_capnp_nested_table:Message' FORMAT CapnProto
SELECT multiIf((number % 2) = 0, toInt8(1), (number % 3) = 0, toUInt16(2), toFloat32(3)) FROM system.numbers LIMIT 10;
TRUNCATE TABLE t_json;
INSERT INTO test_01193_18429.table_5_160 VALUES 
INSERT INTO test_01193_18429.table_4_277 VALUES 
select sum(eventcnt) eventcnt, d1 from tp group by d1;
select format('{}{}', materialize(toFixedString('a', 1)), materialize(toFixedString('b', 1))) == 'ab';
SELECT 'Running test stateless/02941_variant_type_3.sh from pid=1726' 
CREATE TABLE test_7D257A34646A625F787253565C745B5E24603A2A263352504B5E6A447C2644552D635D6A3B2A3331(x UInt8) Engine=Memory;
SELECT * FROM table_gcd_codec_uint128;
desc format(CSV, '"{}"\n"{\'a\' : 1}"');
select * from numbers(1) t1 left semi join numbers(1) t2 using number;
SELECT 'Running test stateless/00953_moving_functions.sql from pid=1713' 
CREATE TABLE test_01193_18429.table_5_723 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT count(*) from elog
SELECT multiIf((number % 2) = 0, toInt32(1), (number % 3) = 0, toUInt8(2), toInt64(3)) FROM system.numbers LIMIT 10;
select argMin(x.1, x.2), argMax(x.1, x.2) from (select (toDate(number, 'UTC'), toDateTime(number, 'UTC') + 1) as x from numbers(10));
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 9865, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE TABLE test_01193_18429.table_1_739 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
create table t2_distr as t2_shard engine Distributed(test_cluster_two_shards_localhost, test_01103, t2_shard, id);
SELECT toLastDayOfWeek(toDateTime('2017-12-31 00:00:00', 'UTC'), 0, 'UTC');
INSERT INTO test_02908_r1_96 SELECT rand64() FROM numbers(5);
optimize table test_graphite final;
SELECT multiIf((number % 2) = 0, [toInt64(1), toInt64(2)], (number % 3) = 0, [toUInt16(2), toUInt16(3)], [toInt32(3), toInt32(3)]) FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_wef1s29k 
INSERT INTO test_01193_18429.table_4_35 VALUES 
INSERT INTO mt VALUES /* (30, 1) */ 
CREATE DATABASE IF NOT EXISTS test_xwsupy40 
CREATE TABLE with_deduplication (`x` UInt32) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00510/with_deduplication', 'r1') ORDER BY x SETTINGS index_granularity = 21782, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 84, merge_max_block_size = 10797, prefer_fetch_merged_part_size_threshold = 2889815521, vertical_merge_algorithm_min_rows_to_activate = 294603, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 7707334, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 25255, primary_key_compress_block_size = 64689
ALTER TABLE alter_table0 ATTACH PARTITION ID 'all'
SET output_format_pretty_color = 0;
ALTER TABLE concurrent_alter_column ADD COLUMN c302 DOUBLE;
CREATE TABLE test_7E20344E3D415F27493A21786B79444C696C5A25525C4D5E6B395D2B47744A51622D6C7D764A6B3C(x UInt8) Engine=Memory;
SELECT quantilesArray(0.5, 0.9)([CAST(NULL, 'Nullable(UInt64)'), NULL]) AS `x` FROM numbers(3)
SELECT varPop(a) AS va, varPop(b) AS vb, varPop(c) AS vc, toTypeName(va), toTypeName(vb), toTypeName(vc) FROM decimal;
CREATE TABLE test_3D567B735A4B3B6C447143706D347C445C6724212B4B6C3E4557205851596F564964344E7944487B(x UInt8) Engine=Memory;
CREATE TABLE test_5E73436C566B65313A4D6A682E6A5F2265476F4B2F3870325C59205A2566456A3D753E266F2C4425(x UInt8) Engine=Memory;
SELECT a, e FROM t_fixed_prefix WHERE bitNot(b) = 1 ORDER BY a, e SETTINGS optimize_read_in_order = 0
CREATE TABLE test_01193_18429.table_6_62 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_507870264C5351573D393947215C2C4D2C3C5A385F7449573F795D4F5C6D5921316D31632B315E30(x UInt8) Engine=Memory;
SELECT CAST('hello' AS FixedString(5)) LIKE '%l%o%';
CREATE TABLE test_4038653048607B7A7243383274582B79535971425C4671576B24666B4738745E54722B4E464E3432(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02541_lightweight_delete_on_cluster.sql from pid=1715' 
DROP ROW POLICY 02131_filter_2 ON 02131_rptable;
CREATE TABLE test_01193_18429.table_8_896 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), toInt8(-1) + N as r FORMAT CSV;
CREATE TABLE test_64772664407A6A213847274A2B435144662143425377775F7C3D672C5B2F3A4A74616349512D253F(x UInt8) Engine=Memory;
ALTER TABLE src_2 REPLACE PARTITION 4 FROM src_4
CREATE TABLE test_02908_r3_98 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_98', 'r3') ORDER BY tuple()
CREATE TABLE replicated_table_r2 (`id` Int32, `name` String) ENGINE = ReplicatedMergeTree('/test/02352/{database}/t_rep', '2') ORDER BY id SETTINGS index_granularity = 39430, min_bytes_for_wide_part = 8807157, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 16629, prefer_fetch_merged_part_size_threshold = 4825935485, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10542336739, index_granularity_bytes = 26634064, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 13983, primary_key_compress_block_size = 9234
CREATE TABLE test_583F29577B643A6C30285C2D772337464B34337D675956567B58263448432D77283724712C3D6A5E(x UInt8) Engine=Memory;
select 0 = isValidUTF8('123456789012345\xc2') from system.numbers limit 10;
SELECT quantileExactWeighted(0.0)(a, 1), quantileExactWeighted(0.0)(b, 2), quantileExactWeighted(0.0)(c, 3) FROM decimal WHERE a >= 0;
CREATE TABLE test_7C285B5B734F62794D622D766855582F3A727B37547D3D6D436A3452282C66627A3E213C285E5924(x UInt8) Engine=Memory;
SELECT '---StorageMerge---'
OPTIMIZE TABLE summing_table FINAL;
CREATE DATABASE IF NOT EXISTS test_6grjyi3o 
INSERT INTO readonly (ID) VALUES 
SELECT 'Running test stateless/00411_long_accurate_number_comparison_int1.sh from pid=1724' 
select [3] = multiSearchAllPositions(materialize('abcdefgh'), ['cd']) from system.numbers limit 10;
DROP DATABASE IF EXISTS test_99bc7okr 
CREATE TABLE test_01193_18429.table_9_247 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT t1.1 FROM t_tuple_element;
SELECT 'DEDUPLICATE BY * EXCEPT mat';
DROP DATABASE IF EXISTS test_x6crddkn 
CREATE DATABASE IF NOT EXISTS test_e8v6zbcw 
DROP TABLE IF EXISTS test_00615;
DROP TABLE 01778_db.hierarchy_source_table;
CREATE TABLE test_46477A313F584D765B382941663E606A5F21423D774E535928344A27446A2570712E5B5F775E4946(x UInt8) Engine=Memory;
SELECT query_count FROM system.dictionaries WHERE database = 'dict_db_02179' AND name = 'dict';
CREATE DATABASE IF NOT EXISTS test_rwq4eac1 
DROP TABLE summing_r1;
select sipHash128ReferenceKeyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17)) == sipHash128Reference(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17));
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toUInt8(1) + N as r FORMAT CSV;
SELECT * FROM (SELECT path, name, value FROM system.zookeeper ORDER BY path, name) WHERE path LIKE '/' || currentDatabase() || '/2-insert-test%';
INSERT INTO parquet_events FORMAT Parquet
INSERT INTO test_01193_18429.table_9_139 VALUES 
SELECT toUInt32(0) AS x, toFloat32(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
INSERT INTO test_02908_r1_34 SELECT rand64() FROM numbers(5);
DROP TABLE IF EXISTS data_distributed;
SELECT 'Running test stateless/02997_projections_formatting.sql from pid=1713' 
SELECT 'ALL LEFT | bs = 13';
SELECT t1.key, t2.key, isNull(t1.s), t2.s FROM t1 ANY RIGHT JOIN t2 ON t1.key == t2.key ORDER BY t1.key, t2.key, t2.s ;
desc format(TSV, '2020-01-01 00:00:00.00000');
INSERT INTO test_01193_18429.table_4_428 VALUES 
CREATE DATABASE IF NOT EXISTS test_r1sdajn9 
CREATE TABLE test_01193_18429.table_6_852 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE dictionary_array_source_table ( id UInt64, array_value Array(Int64) ) ENGINE=TinyLog;
CREATE TEMPORARY TABLE t5_02271 (x INT(11) SIGNED DEFAULT 1);
CREATE TABLE test_5C436C5A2A5F27516D38634D747A3F6F702174383B45474E2C2751356E4D2F4E4E5331257D504D67(x UInt8) Engine=Memory;
SELECT transform(toString(number), ['3', '5', '7'], [111, 222, 333], materialize(-1.1)) FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_sjz4s49g 
insert into "/t1" values 
SELECT gccMurmurHash(1, 3, 2);
desc format(CSV, '"{\'a\' : [123, 123]}"\n"{\'b\' : [321, 321]}"');
insert into table function null() select 1, 'str';
SELECT used_database_engines FROM system.query_log WHERE current_database = currentDatabase() AND type == 'QueryFinish' AND (query LIKE '%database test_query_log_factories_info%') ORDER BY query_start_time DESC LIMIT 1 FORMAT TabSeparatedWithNames;
SELECT isDecimalOverflow(materialize(toDecimal128('99999999999999999999999999999999999999', 0)), 37), isDecimalOverflow(materialize(toDecimal128('10', 0)), 1), isDecimalOverflow(materialize(toDecimal128('1', 0)), 0), isDecimalOverflow(materialize(toDecimal128('-99999999999999999999999999999999999999', 0)), 37), isDecimalOverflow(materialize(toDecimal128('-10', 0)), 1), isDecimalOverflow(materialize(toDecimal128('-1', 0)), 0);
SELECT stringJaccardIndexUTF8(NULL, NULL);
CREATE TABLE test_01193_18429.table_2_254 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT c, d, e FROM t_fixed_prefix WHERE a = 1 AND b = 1 ORDER BY c, d, e SETTINGS optimize_read_in_order = 0
desc file(dump13.sql, MySQLDump) settings input_format_mysql_dump_table_name='fruits'
CREATE TABLE test_4E284B68515D35612C2E6658276A5A32624B40242433786C792E4E4C4657344B26633165646E6B70(x UInt8) Engine=Memory;
SELECT Y.dummy+1 FROM system.one X RIGHT JOIN system.one Y ON X.dummy = Y.dummy SETTINGS join_use_nulls = 1;
DROP DATABASE IF EXISTS test_6terx1b2 
INSERT INTO test_01193_18429.table_1_126 VALUES 
CREATE TABLE test_01193_18429.table_9_869 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT _shard_num FROM clusterAllReplicas('test_cluster_one_shard_two_replicas', system.one) ORDER BY _shard_num;
ALTER TABLE concurrent_alter_column ADD COLUMN c484 DOUBLE;
select 1 = positionCaseInsensitive('abc', 'aBc');
SELECT COALESCE(), COALESCE(NULL), COALESCE(1, NULL);
SELECT countIf(ignore(*) == 0) FROM t1 JOIN t2 ON t1.s = t2.s;
SELECT toDaysSinceYearZero(NULL);
SELECT multiIf((number % 2) = 0, [toUInt32(1), toUInt32(2)], (number % 3) = 0, [toUInt64(2), toUInt64(3)], [toUInt32(3), toUInt32(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_1_380 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT a from optimize_sorting order by toFloat64(a);
DROP TABLE IF EXISTS nested_in_nested_protobuf_00825;
CREATE TABLE test_01193_18429.table_3_263 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT count() FROM datetime_date_table WHERE col_datetime > '2020-03-04 10:20:45';
INSERT INTO table_for_bad_alters VALUES
INSERT INTO r8 SELECT 25
SELECT k, s1, s2 FROM (SELECT intDiv(number, 3) AS k, sum(number) AS s1 FROM (SELECT * FROM system.numbers LIMIT 10) GROUP BY k) ANY LEFT JOIN (SELECT intDiv(number, 4) AS k, sum(number) AS s2 FROM (SELECT * FROM system.numbers LIMIT 10) GROUP BY k WITH TOTALS) USING k ORDER BY k;
DESCRIBE TABLE ignore_auto_increment;
SELECT 'Running test stateless/02047_client_exception.expect from pid=1726' 
SELECT CASE WHEN 1 THEN toFixedString('foo', 16) WHEN 1 THEN 'bar' ELSE toFixedString('baz', 16) END FROM multi_if_check;
CREATE TABLE test (`id` int, `value` int) ENGINE = MergeTree ORDER BY id SETTINGS old_parts_lifetime = 5, index_granularity = 28391, min_bytes_for_wide_part = 403430051, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 89, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 80, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 22192064, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 89844, primary_key_compress_block_size = 81483
DROP DATABASE IF EXISTS test_jerzh6po 
SELECT dictGetFloat64('db_01038.dict_with_zero_min_lifetime', 'value', toUInt64(2))
alter table src update A = 15 where 1 settings mutations_sync=2
INSERT INTO test_01193_18429.table_10_122 VALUES 
EXPLAIN SYNTAX SELECT ts AS `--a.ts`, id AS `--a.id`, id_b AS `--a.id_b`, b.ts AS `--b.ts`, b.id AS `--b.id`, id_c AS `--b.id_c` FROM (SELECT ts, id, id_b FROM A) AS a ALL LEFT JOIN B AS b ON `--b.id` = `--a.id_b` WHERE `--a.ts` <= toDateTime('1970-01-01 03:00:00');
INSERT INTO test_01193_18429.table_2_442 VALUES 
CREATE TABLE test_783B363678695B4769406C30533E3A5E554024657373206164792C2D207D422E782946475B517D7B(x UInt8) Engine=Memory;
RENAME TABLE table_for_renames24 TO table_for_renames25
SELECT toFloat64(9999999999999.99999) as x, toDecimal128(x, 5), toDecimal128(-x, 5);
CREATE DICTIONARY db_01018.dict4 (`key_column` UInt64 DEFAULT 0, `second_column` UInt8 DEFAULT 1, `third_column` String DEFAULT 'qqq') PRIMARY KEY key_column SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict' PASSWORD '[HIDDEN]' DB 'database_for_dict_01018')) LIFETIME(MIN 1 MAX 10) LAYOUT(FLAT())
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (77 < 69 AND 37 > 0 ? 77 : 0)), throwIf(last != (77 < 69 AND 37 > 0 ? least(69 - 1, 77 + 37 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(69) LIMIT 77, 37);
kill query where query_id = '02450_kill_distributed_query_deadlock_test_ft363ahb-27' sync
CREATE INDEX idx_tab3_2 ON tab3 (col3 DESC,col1 DESC);
SELECT 'Running test stateless/01277_unixTimestamp64_compatibility.sql from pid=1714' 
SELECT * FROM temp WHERE y IN (toDecimal128(128, 2));
SELECT name FROM system.parts WHERE active AND database='test_uepaqe2p' and table='dst_8' ORDER BY rand() LIMIT 1
CREATE TABLE test_6725273D4D59407D407D4D686A4A694C56516E456E313C4F4E7E5E6C204254304F632258375A3C70(x UInt8) Engine=Memory;
SYSTEM SYNC REPLICA concurrent_alter_add_drop_1 STRICT
SELECT countDigits(-123.45678::Decimal128(7));
SELECT mapUpdate(map(1, 3, 3, 2), map(1, 0, 2, 0));
SELECT base58Encode(val) FROM (select arrayJoin(['', 'f', 'fo', 'foo', 'foob', 'fooba', 'foobar']) val);
SELECT -128, 2147483648, -128 = 2147483648, -128 != 2147483648, -128 < 2147483648, -128 <= 2147483648, -128 > 2147483648, -128 >= 2147483648, 2147483648 = -128, 2147483648 != -128, 2147483648 < -128, 2147483648 <= -128, 2147483648 > -128, 2147483648 >= -128 , toInt8(-128) = toUInt32(2147483648), toInt8(-128) != toUInt32(2147483648), toInt8(-128) < toUInt32(2147483648), toInt8(-128) <= toUInt32(2147483648), toInt8(-128) > toUInt32(2147483648), toInt8(-128) >= toUInt32(2147483648), toUInt32(2147483648) = toInt8(-128), toUInt32(2147483648) != toInt8(-128), toUInt32(2147483648) < toInt8(-128), toUInt32(2147483648) <= toInt8(-128), toUInt32(2147483648) > toInt8(-128), toUInt32(2147483648) >= toInt8(-128) , toInt8(-128) = toUInt64(2147483648), toInt8(-128) != toUInt64(2147483648), toInt8(-128) < toUInt64(2147483648), toInt8(-128) <= toUInt64(2147483648), toInt8(-128) > toUInt64(2147483648), toInt8(-128) >= toUInt64(2147483648), toUInt64(2147483648) = toInt8(-128), toUInt64(2147483648) != toInt8(-128), toUInt64(2147483648) < toInt8(-128), toUInt64(2147483648) <= toInt8(-128), toUInt64(2147483648) > toInt8(-128), toUInt64(2147483648) >= toInt8(-128) , toInt8(-128) = toInt64(2147483648), toInt8(-128) != toInt64(2147483648), toInt8(-128) < toInt64(2147483648), toInt8(-128) <= toInt64(2147483648), toInt8(-128) > toInt64(2147483648), toInt8(-128) >= toInt64(2147483648), toInt64(2147483648) = toInt8(-128), toInt64(2147483648) != toInt8(-128), toInt64(2147483648) < toInt8(-128), toInt64(2147483648) <= toInt8(-128), toInt64(2147483648) > toInt8(-128), toInt64(2147483648) >= toInt8(-128) , toInt16(-128) = toUInt32(2147483648), toInt16(-128) != toUInt32(2147483648), toInt16(-128) < toUInt32(2147483648), toInt16(-128) <= toUInt32(2147483648), toInt16(-128) > toUInt32(2147483648), toInt16(-128) >= toUInt32(2147483648), toUInt32(2147483648) = toInt16(-128), toUInt32(2147483648) != toInt16(-128), toUInt32(2147483648) < toInt16(-128), toUInt32(2147483648) <= toInt16(-128), toUInt32(2147483648) > toInt16(-128), toUInt32(2147483648) >= toInt16(-128) , toInt16(-128) = toUInt64(2147483648), toInt16(-128) != toUInt64(2147483648), toInt16(-128) < toUInt64(2147483648), toInt16(-128) <= toUInt64(2147483648), toInt16(-128) > toUInt64(2147483648), toInt16(-128) >= toUInt64(2147483648), toUInt64(2147483648) = toInt16(-128), toUInt64(2147483648) != toInt16(-128), toUInt64(2147483648) < toInt16(-128), toUInt64(2147483648) <= toInt16(-128), toUInt64(2147483648) > toInt16(-128), toUInt64(2147483648) >= toInt16(-128) , toInt16(-128) = toInt64(2147483648), toInt16(-128) != toInt64(2147483648), toInt16(-128) < toInt64(2147483648), toInt16(-128) <= toInt64(2147483648), toInt16(-128) > toInt64(2147483648), toInt16(-128) >= toInt64(2147483648), toInt64(2147483648) = toInt16(-128), toInt64(2147483648) != toInt16(-128), toInt64(2147483648) < toInt16(-128), toInt64(2147483648) <= toInt16(-128), toInt64(2147483648) > toInt16(-128), toInt64(2147483648) >= toInt16(-128) , toInt32(-128) = toUInt32(2147483648), toInt32(-128) != toUInt32(2147483648), toInt32(-128) < toUInt32(2147483648), toInt32(-128) <= toUInt32(2147483648), toInt32(-128) > toUInt32(2147483648), toInt32(-128) >= toUInt32(2147483648), toUInt32(2147483648) = toInt32(-128), toUInt32(2147483648) != toInt32(-128), toUInt32(2147483648) < toInt32(-128), toUInt32(2147483648) <= toInt32(-128), toUInt32(2147483648) > toInt32(-128), toUInt32(2147483648) >= toInt32(-128) , toInt32(-128) = toUInt64(2147483648), toInt32(-128) != toUInt64(2147483648), toInt32(-128) < toUInt64(2147483648), toInt32(-128) <= toUInt64(2147483648), toInt32(-128) > toUInt64(2147483648), toInt32(-128) >= toUInt64(2147483648), toUInt64(2147483648) = toInt32(-128), toUInt64(2147483648) != toInt32(-128), toUInt64(2147483648) < toInt32(-128), toUInt64(2147483648) <= toInt32(-128), toUInt64(2147483648) > toInt32(-128), toUInt64(2147483648) >= toInt32(-128) , toInt32(-128) = toInt64(2147483648), toInt32(-128) != toInt64(2147483648), toInt32(-128) < toInt64(2147483648), toInt32(-128) <= toInt64(2147483648), toInt32(-128) > toInt64(2147483648), toInt32(-128) >= toInt64(2147483648), toInt64(2147483648) = toInt32(-128), toInt64(2147483648) != toInt32(-128), toInt64(2147483648) < toInt32(-128), toInt64(2147483648) <= toInt32(-128), toInt64(2147483648) > toInt32(-128), toInt64(2147483648) >= toInt32(-128) , toInt64(-128) = toUInt32(2147483648), toInt64(-128) != toUInt32(2147483648), toInt64(-128) < toUInt32(2147483648), toInt64(-128) <= toUInt32(2147483648), toInt64(-128) > toUInt32(2147483648), toInt64(-128) >= toUInt32(2147483648), toUInt32(2147483648) = toInt64(-128), toUInt32(2147483648) != toInt64(-128), toUInt32(2147483648) < toInt64(-128), toUInt32(2147483648) <= toInt64(-128), toUInt32(2147483648) > toInt64(-128), toUInt32(2147483648) >= toInt64(-128) , toInt64(-128) = toUInt64(2147483648), toInt64(-128) != toUInt64(2147483648), toInt64(-128) < toUInt64(2147483648), toInt64(-128) <= toUInt64(2147483648), toInt64(-128) > toUInt64(2147483648), toInt64(-128) >= toUInt64(2147483648), toUInt64(2147483648) = toInt64(-128), toUInt64(2147483648) != toInt64(-128), toUInt64(2147483648) < toInt64(-128), toUInt64(2147483648) <= toInt64(-128), toUInt64(2147483648) > toInt64(-128), toUInt64(2147483648) >= toInt64(-128) , toInt64(-128) = toInt64(2147483648), toInt64(-128) != toInt64(2147483648), toInt64(-128) < toInt64(2147483648), toInt64(-128) <= toInt64(2147483648), toInt64(-128) > toInt64(2147483648), toInt64(-128) >= toInt64(2147483648), toInt64(2147483648) = toInt64(-128), toInt64(2147483648) != toInt64(-128), toInt64(2147483648) < toInt64(-128), toInt64(2147483648) <= toInt64(-128), toInt64(2147483648) > toInt64(-128), toInt64(2147483648) >= toInt64(-128) 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (51 < 85 AND 70 > 0 ? 51 : 0)), throwIf(last != (51 < 85 AND 70 > 0 ? least(85 - 1, 51 + 70 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(85) LIMIT 51, 70);
INSERT INTO test_01193_18429.table_9_106 VALUES 
INSERT INTO test_01193_18429.table_5_67 VALUES 
CREATE TABLE test_70265A6F78764B3E242F567A222A352646763A2577482F28223660405D3C77612069707C5545377A(x UInt8) Engine=Memory;
SELECT sumForEachArray([[1],[2]]);
CREATE TABLE test_73604A785E256237415D713564673862343E672E273C5463795164626D3D34685D7C625F434C5D3B(x UInt8) Engine=Memory;
INSERT INTO prewhere_move SELECT number, number, number, number FROM numbers(1000);
SELECT toMinute(NULL);
select makeDate32(cast(1980.1 as Float32), 9, 19);
INSERT INTO test_01193_18429.table_2_963 VALUES 
CREATE TABLE `02947_table_1` (`id` Int32) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 6552, min_bytes_for_wide_part = 19138368, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 103, merge_max_block_size = 13489, prefer_fetch_merged_part_size_threshold = 8327505712, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 712897722, index_granularity_bytes = 26741083, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 11831, primary_key_compress_block_size = 78501
SELECT has([111, NULL, 222], 222);
SHOW CREATE TEMPORARY TABLE temp_tab;
select sumResample(0, 20, 1)(number, number % 20) from numbers(200);
SELECT t1.value AS t1_value, toTypeName(t1_value), t2.value AS t2_value, toTypeName(t2_value) FROM test_table_join_1 AS t1 LEFT JOIN test_table_join_2 AS t2 USING (id);
SELECT regionToCountry(NULL, NULL, NULL);
SELECT 'hello' UNION ALL SELECT toLowCardinality('hello');
select '-- distinct in order, sorting key tuple()';
CREATE TABLE test_01193_18429.table_6_386 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/01420_logical_functions_materialized_null.sql from pid=1722' 
SELECT s FROM test_02559 PREWHERE z ORDER BY s;
select multiFuzzyMatchAnyIndex(materialize('halo some wrld'), 2, materialize(['^hello.*world$', '^halo.*world$']));
SELECT toIntervalDay(-1);
CREATE TABLE video_views (`entityIri` String, `courseId` UInt64, `learnerId` UInt64, `actorId` UInt64, `duration` UInt16, `fullWatched` UInt8, `fullWatchedDate` DateTime, `fullWatchedDuration` UInt16, `fullWatchedTime` UInt16, `fullWatchedViews` UInt16, `views.viewId` Array(String), `views.startedAt` Array(DateTime), `views.endedAt` Array(DateTime), `views.viewDuration` Array(UInt16), `views.watchedPart` Array(Float32), `views.fullWatched` Array(UInt8), `views.progress` Array(Float32), `views.reject` Array(UInt8), `views.viewNumber` Array(UInt16), `views.repeatingView` Array(UInt8), `views.ranges` Array(String), `version` DateTime) ENGINE = ReplacingMergeTree(version) PARTITION BY entityIri ORDER BY (learnerId, entityIri) SETTINGS index_granularity = 8192, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 21688, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 543466, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 16110193, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 77692, primary_key_compress_block_size = 93886
SELECT 'Running test stateless/02460_prewhere_row_level_policy.sql from pid=1718' 
SELECT CAST(tuple(number, tuple(number + 1, tuple(number + 2))), 'Tuple(b UInt64, c Tuple(d UInt64, e Tuple(f UInt64)))') AS a FROM numbers(5) FORMAT CapnProto SETTINGS format_schema='/usr/share/clickhouse-test/queries/0_stateless/format_schemas/02030_capnp_nested_tuples:Message'
CREATE USER OR REPLACE 'test_01605';
SELECT 'Running test stateless/02165_h3_exact_edge_length_rads.sql from pid=1713' 
SELECT multiIf((number % 2) = 0, [toFloat32(1), toFloat32(2)], (number % 3) = 0, [toFloat32(2), toFloat32(3)], [toUInt32(3), toUInt32(3)]) FROM system.numbers LIMIT 10;
DROP TABLE IF EXISTS minmax_idx1;
DROP DATABASE IF EXISTS test_l2ycy0b6 
CREATE TABLE test_01193_18429.table_4_720 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_41405F67272D3C4E3D5C2F6A6F5A462C433B746F233F25662046794D403220607D3E2E4C48642C2C(x UInt8) Engine=Memory;
SELECT count(), min(`id`), max(`id`), avg(`id`) FROM `test_uud6prte`.`test`
select '-- SummingMergeTree with Nullable column with duplicates';
CREATE TABLE test_01193_18429.table_9_33 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_nhpsmx6k 
CREATE TABLE test_02908_r3_263 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_263', 'r3') ORDER BY tuple()
select hasAny([], [NULL]);
ALTER TABLE src_13 REPLACE PARTITION 2 FROM src_9
CREATE TABLE test_7153726E25205A662247493B32742D5C604A297D695326346F265469253B5D7A4C5354555775334F(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_10_229 VALUES 
select * from file(02475_data.bsonEachRow, auto, 'map Map(String, UInt64)')
SELECT greatest(1, inf, nan);
CREATE INDEX idx_tab4_0 ON tab4 (col0);
CREATE TABLE concurrent_kill_4 (key UInt64, value String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/01593_concurrent_alter_mutations_kill_many_replicas_long_test_bc61bq8k/{shard}', '{replica}4') ORDER BY key SETTINGS max_replicated_mutations_in_queue=1000, number_of_free_entries_in_pool_to_execute_mutation=0,max_replicated_merges_in_queue=1000
DROP TABLE IF EXISTS pk;
CREATE TABLE test_3D2B34795C473632632265566D43706A7735376F7C376925347C3D5D2C206C74347344455B2B2F43(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_10_899 VALUES 
truncate table arr_tests_visits;
INSERT INTO r6 SELECT 21 % 10 = 6 ? 21 - 1 : 21
SELECT hasTokenOrNull(NULL, NULL);
SELECT position('',CAST('\0' AS Nullable(String)));
CREATE TABLE t3 (a UInt32, b Nullable(Int32)) ENGINE = Memory;
select transform(2, [1,2], ['a','b'], materialize('c'));
CREATE INDEX idx_tab4_1 ON tab4 (col0);
CREATE TABLE test_513329765432464C73407949783E233D753C4D2565305E384D54247747553F375F535C5F3A492643(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_9_721 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DATABASE IF NOT EXISTS test_7v4hwln9 
SELECT arrayMap(x -> arrayMap(y -> round(y, 5), x), corrMatrix(a_value, b_value, c_value, d_value)) FROM fh;
KILL MUTATION WHERE mutation_id='0000000010' and table like 'concurrent_kill_%' and database='test_bc61bq8k'
undrop table 02681_undrop_distributed;
INSERT INTO distributed_00952 VALUES 
SELECT arrayFlatten([]);
DROP TABLE IF EXISTS test_02270
INSERT INTO t_sparse_sort_limit SELECT '2020-10-10', number % 10, number FROM numbers(100000);
SELECT hex(leftPadUTF8(toFixedString('Ã°ÂÂÂªÃ°ÂÂÂ¸' as s, 8), number, 'ÃÂ')) as result, hex(leftPadUTF8(s, number, 'ÃÂ')) = result FROM numbers(20);
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 27098, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE TABLE test_01193_18429.table_9_827 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO minmax_idx1 VALUES 
SELECT SVG([(0., 0.), (10, 0), (10, 10), (0, 10)], 'b');
INSERT INTO test_02908_r1_288 SELECT rand64() FROM numbers(5);
INSERT INTO test_01193_18429.table_8_892 VALUES 
ALTER TABLE ttl_table3 MODIFY SETTING max_replicated_merges_in_queue=0
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 28280, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE TABLE test_01193_18429.table_2_649 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Running test stateless/00620_optimize_on_nonleader_replica_zookeeper.sql from pid=1722' 
CREATE DATABASE IF NOT EXISTS test_g54zb45l 
alter table many_mutations delete where y = 336 * 2 settings mutations_sync = 0;
SELECT 'Running test stateless/01492_format_readable_quantity.sql from pid=1713' 
drop table if exists data_01072;
SELECT count() FROM enum_test_table WHERE toInt8(val) == 1;
SELECT toDecimal32(-12345.6789, 4) AS x, floor(x, -1), floor(x, -2), floor(x, -3), floor(x, -4), floor(x, -5);
CREATE DATABASE IF NOT EXISTS test_fk4mony9 
CREATE TABLE test_5F5D7E455D3921752C3D5E5E2E527A6A436C736E6A35456A6577793456227E5F577E2B77304D7723(x UInt8) Engine=Memory;
CREATE TABLE test_727A23385C644E562D2F3A736F3D7D33772E777942784A4F6F372446204E71245545632D4846462B(x UInt8) Engine=Memory;
CREATE TABLE test_02908_r2_270 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_270', 'r2') ORDER BY tuple()
SELECT toDecimal64(number, 8) as n1, toDecimal64(n1 / 9, 4) as n2, toDecimal64(n2, 2) FROM system.numbers LIMIT 10;
DROP TEMPORARY TABLE IF EXISTS tmp_table
CREATE TABLE alt_persons_00825 AS persons_00825
SELECT * FROM (SELECT 1 as A, 2 as B) X ALL LEFT JOIN (SELECT 3 as A, 2 as B) Y USING (B);
ALTER TABLE concurrent_alter_column ADD COLUMN c419 DOUBLE;
DROP TABLE dictionary_decimal_source_table;
SELECT length(stack_trace) FROM system.query_log WHERE current_database = currentDatabase() AND query LIKE '%SELECT \'World\', throwIf(1)%' AND query NOT LIKE '%system%' ORDER BY event_time_microseconds DESC LIMIT 1;
SELECT accurateCastOrNull('1xxx', 'Date');
CREATE TABLE test_01193_18429.table_4_574 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SET local_filesystem_read_prefetch=1;
select * from values((1, NULL, [1, 2, -1]), (NULL, 'def', [10, NULL, 10000]))
CREATE TABLE test_01193_18429.table_3_544 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select 4, * from test order by id
CREATE MATERIALIZED VIEW mv ENGINE = Null() AS SELECT * FROM null;
DROP TABLE test_02101
SELECT b FROM (SELECT sum(x) AS a, avg(x) AS b FROM (SELECT number AS x FROM numbers(10)));
CREATE TABLE test_782E7C7532495E3C3725625447725D473C2B504C2955497741475847363466686A6A5962785B395F(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_7_258 VALUES 
INSERT INTO src_11 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 48
SELECT arrayIntersect(NULL);
select v, variantElement(v, 'UInt8') from format(CSV, 'v Variant(String, UInt8, Int64)', '\\N\n"string"\n-1\n0\n10000000000\n42d42') format CSV;
CREATE DATABASE IF NOT EXISTS test_ny0ja0kb 
SELECT JSONExtract('{"a":-1234567890123456789}', 'a', 'Int128') as a, toTypeName(a);
CREATE TABLE nullable_prewhere (p Date, f Nullable(UInt64), d UInt64) ENGINE = MergeTree PARTITION BY p ORDER BY p SETTINGS index_granularity=8, index_granularity_bytes=0, min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1
SELECT subtractHours('2023-10-22', materialize(1)), subtractHours('2023-10-22 12:34:56.123', materialize(1));
SELECT randExponential(NULL, NULL, NULL);
CREATE TABLE test_01193_18429.table_5_627 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_02908_r1_110 SELECT rand64() FROM numbers(5);
SELECT timestamp('2013-12-31 12:00:00', '32768:01:02.111111');
CREATE TABLE test_2C7123422B464F5C212F4376447A6E246631452072456740594930523A597B55774E3D41574C6730(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_dfztqr5i 
set optimize_use_implicit_projections = 1;
DROP DATABASE IF EXISTS test_739rbj9i 
INSERT INTO dst_0 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 94
DROP TABLE IF EXISTS test_00690;
SELECT '--- grace_hash ---';
select toStartOfFiveMinutes(toDateTime(0, 'Asia/Istanbul'));
select * from urlCluster('test_cluster_one_shard_three_replicas_localhost', 'http://localhost:11111/test/{a,b}.tsv', 'TSV') order by c1, c2, c3;
SELECT count() FROM t_cnf_fuzz WHERE (c4 AND c2) SETTINGS convert_query_to_cnf = 0
SELECT 1 WINDOW x AS (PARTITION BY dummy);
set database_atomic_wait_for_drop_and_detach_synchronously=0;
DROP TABLE replacing_00155
DROP DATABASE IF EXISTS test_u6cw1rw4 
ALTER TABLE concurrent_alter_column ADD COLUMN c36 DOUBLE;
select '== arrayShiftLeft';
DROP DATABASE IF EXISTS test_b8yv8pjv 
SELECT multiIf((number % 2) = 0, [toUInt16(1), toUInt16(2)], (number % 3) = 0, [toInt64(2), toInt64(3)], [toUInt32(3), toUInt32(3)]) FROM system.numbers LIMIT 10;
INSERT INTO r4 SELECT 2 % 10 = 4 ? 2 - 1 : 2
CREATE TABLE test_01193_18429.table_10_711 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO src VALUES /* (53, 1) */ 
DROP TABLE test_00818;
select formatRow('TSV', number, good) from (select number, 'good' as good from numbers(3));
CREATE TABLE test_2032313E4378267B2129766F6D327C6731483440754B5A73712831266C53435C56753C776020734F(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_8au6os63 
CREATE TABLE test_01193_18429.table_2_835 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_1_668 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'Running test stateless/02734_sparse_columns_short_circuit.sql from pid=1713' 
backup table test_vyw32s72.test to Disk('backups', '02907_system_backups_profile_events_test_vyw32s72');
SELECT intDivOrZero(toDecimal128(4.4, 2), toDecimal128(2.2, 2));
DROP TABLE sample_prewhere;
SELECT quantilesInterpolatedWeighted(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)(c, 3) FROM decimal;
select round(1000 * ngramDistanceCaseInsensitive('abc', ''));
SELECT toDecimal128(-12345.6789, 4) AS x, trunc(x), trunc(x, 1), trunc(x, 2), trunc(x, 3), trunc(x, 4), trunc(x, 5);
CREATE TABLE test_5467406B72722074533C4760383F76453F6436423172545A32683B5021563B4A266A452E476A7964(x UInt8) Engine=Memory;
SELECT file_segment_range_begin, file_segment_range_end, size FROM system.filesystem_cache;
CREATE TABLE test_01193_18429.table_4_939 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_7_653 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT age('minute', toDate('2015-08-18', 'UTC'), toDate32('2015-08-19', 'UTC'), 'UTC');
CREATE TABLE test_75797532215B496863443C5469507D493E6475227A725E36517E242C22486F3D597161234075696B(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_7_73 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT * FROM t1 INNER JOIN t0 USING (x) ORDER BY x;
INSERT INTO test_01193_18429.table_8_830 VALUES 
TRUNCATE TABLE times;
INSERT INTO test_01193_18429.table_4_628 VALUES 
CREATE INDEX idx_tab2_4 ON tab2 (col4,col0 DESC);
CREATE DATABASE IF NOT EXISTS test_l7kbmmo8 
CREATE DATABASE IF NOT EXISTS test_qawjjydd 
CREATE TABLE test_724C20785F307B222D6E4E267D4B295C425266524C75766C3A353A2D507854413E7C4F2D3C7E5241(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_79t3a8mj 
SELECT multiIf((number % 2) = 0, [toInt8(1), toInt8(2)], (number % 3) = 0, [toInt16(2), toInt16(3)], [toInt64(3), toInt64(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_2_876 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT h3GetResolution(621807531097128959);
CREATE TABLE mt (`n` int, `s` String) ENGINE = MergeTree ORDER BY n SETTINGS index_granularity = 63551, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 12855, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 2322943, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 59718, primary_key_compress_block_size = 26540
select 1 where 'MUTATE_PART' not in (select type from system.replication_queue where database='test_34l6vt0l' and table='mut') 
CREATE TABLE test_6F7A273C5E61653D697A364C5C6645556131536F21756C4379595E4A704D4F6D69356C4B41232827(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_xvsp2usi 
DROP DATABASE IF EXISTS test_b7yb6wo4 
DROP DATABASE IF EXISTS test_idm4sw78 
DROP DATABASE IF EXISTS test_uimce1hk 
INSERT INTO test_01193_18429.table_4_700 VALUES 
INSERT INTO test_01193_18429.table_2_820 VALUES 
DROP TABLE IF EXISTS t_update_empty_nested;
CREATE TABLE test_01193_18429.table_8_560 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
ALTER QUOTA q2_01297 FOR INTERVAL 30 MINUTE TRACKING ONLY;
SELECT 'Running test stateless/01943_log_column_sizes.sql from pid=1714' 
SELECT t2.name FROM remote('127.0.0.2', currentDatabase(), 'local_table') AS t1 LEFT JOIN test_35gyem7l.other_table AS t2 ON t1.oth_id = t2.id ORDER BY t2.name ASC
CREATE TABLE sparse_tuple (`id` UInt64, `t` Tuple(a UInt64, b Tuple(u UInt32, s String))) ENGINE = MergeTree ORDER BY tuple() SETTINGS ratio_of_defaults_for_sparse_serialization = 0.5, index_granularity = 26394, min_bytes_for_wide_part = 0, replace_long_file_name_to_hash = true, max_file_name_length = 124, merge_max_block_size = 16660, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 142007098, index_granularity_bytes = 5473112, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 39549, primary_key_compress_block_size = 81591
insert into test_02381 select number, number * 10 from system.numbers limit 1000000;
SELECT * FROM bf_ngram_lowcard_test WHERE like(lc, '%CD4%') SETTINGS force_data_skipping_indices='lc_ngram';
INSERT INTO test_01193_18429.table_5_627 VALUES 
SELECT '-- system.settings_profile_elements';
DROP DATABASE IF EXISTS test_ts69vt9g 
SELECT * FROM t FORMAT RawBLOB
SYSTEM RELOAD DICTIONARY `foo 1234`.dict;
DROP TABLE capnproto_input
CREATE TABLE test_6E395A7A4225665952795373435E385C437C3A60382B65232F3434746A7C736A337E467568504830(x UInt8) Engine=Memory;
SELECT number, neighbor('ClickHouse', 5) FROM numbers(10);
DROP DATABASE IF EXISTS test_hzfx21ib 
CREATE TABLE concurrent_mutate_mt_2 (`key` UInt64, `value1` UInt64, `value2` String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/01076_parallel_alter_replicated_zookeeper_test_wv410ck4/concurrent_mutate_mt', '2') ORDER BY key SETTINGS max_replicated_mutations_in_queue = 1000, number_of_free_entries_in_pool_to_execute_mutation = 0, max_replicated_merges_in_queue = 1000, temporary_directories_lifetime = 10, cleanup_delay_period = 3, cleanup_delay_period_random_add = 0, cleanup_thread_preferred_points_per_iteration = 0, index_granularity = 36899, min_bytes_for_wide_part = 610320463, ratio_of_defaults_for_sparse_serialization = 0.18114601075649261, replace_long_file_name_to_hash = true, max_file_name_length = 20, merge_max_block_size = 52, prefer_fetch_merged_part_size_threshold = 2825925533, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 8898561432, index_granularity_bytes = 4539143, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 45816, primary_key_compress_block_size = 84236
SELECT '*** Check SHOW CREATE TABLE after offline ALTER ***';
select toYYYYMMDD(toDateTime(recordTimestamp, 'Europe/Amsterdam')), toDateTime(recordTimestamp, 'Europe/Amsterdam'), toFloat64(1665519765) as recordTimestamp, toTypeName(recordTimestamp);
CREATE TABLE test_2F764177752B6B6D3653532C7D205E5A765A384E5A4E4A513D3E37767D544050362B39664269304D(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_10_557 VALUES 
insert into tab1_copy values 
with groupBitAndSimpleState(number) as c select toTypeName(c), c from numbers(1);
CREATE TEMPORARY TABLE sessions (date DateTime, visitorId String, sessionId String);
SELECT 'ABCDDEF' ILIKE '%abc%def%';
DROP DATABASE IF EXISTS test_7jaf72dd 
select -number as offset, -16+number as length, 'Hello' as s, subString(bin(s), offset , length), bin(bitSlice(s, offset, length)) from numbers(16);
SELECT count() FROM t_cnf_fuzz WHERE (c4 AND (NOT c8) AND (NOT c5) AND c0) OR ((NOT c5)) OR ((NOT c6)) OR (c7 AND (NOT c2)) OR (c6 AND c2 AND (NOT c6)) OR ((NOT c6) AND c4 AND c1) OR ((NOT c5) AND (NOT c5) AND c5 AND c6 AND (NOT c8)) SETTINGS convert_query_to_cnf = 1
SELECT multiIf((number % 2) = 0, toInt8(1), (number % 3) = 0, toUInt32(2), toUInt32(3)) FROM system.numbers LIMIT 10;
SHOW CREATE DATABASE INFORMATION_SCHEMA;
INSERT INTO test_01193_18429.table_2_761 VALUES 
ALTER TABLE test DROP PARTITION tuple(toMonday(_CAST(19639, 'Date')))
SELECT arrayElement([1,NULL,2,3], 1);
INSERT INTO 01053_db.table_for_dict SELECT number, 0, -1, 'b' FROM system.numbers WHERE number NOT IN (1, 2, 5, 10) LIMIT 370, 370;
INSERT INTO test_01193_18429.table_2_692 VALUES 
CREATE DATABASE IF NOT EXISTS test_ropuqvar 
CREATE TABLE test_2F787737597730516B534C26694C672C50207C446C6A74324B535971497439743F41466826584B30(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS event;
SELECT d3, f1, d3 / f1 FROM t ORDER BY f1;
INSERT INTO test_01193_18429.table_2_626 VALUES 
SELECT toUInt128OrZero(NULL);
SELECT count() FROM regression_for_in_operator_view WHERE g IN ('5','6');
INSERT INTO r4 SELECT 56
CREATE DATABASE IF NOT EXISTS test_6cp16co7 
SELECT multiIf((number % 2) = 0, toInt32(1), (number % 3) = 0, toUInt16(2), toInt32(3)) FROM system.numbers LIMIT 10;
SELECT 14776434768051644139306697240981192872314776434768051644139306697240981192872::UInt256 AS x, 0::Int128 AS y, bitCount(bitXor(x, y)) AS a, bitHammingDistance(x, y) AS b;
CREATE TABLE test_01193_18429.table_5_356 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
show create c;
CREATE TABLE test_01193_18429.table_6_766 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT '-------ENABLE OPTIMIZE PREDICATE-------';
DROP TABLE IF EXISTS customer_demographics;
SELECT accurateCastOrDefault(nan, 'Int128'), accurateCastOrDefault(nan, 'Int128', toInt128(5));
SELECT count(), max(x), avg(length(s)) FROM file('/var/lib/clickhouse/user_files/test_ppeg0s5q/gz_9.gz', 'TabSeparated', 'x UInt32, s String')
INSERT INTO r5 SELECT 2 % 10 = 5 ? 2 - 1 : 2
CREATE TABLE test_01193_18429.table_1_789 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_5_73 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_7_330 VALUES 
DROP TABLE IF EXISTS t_02848_mt2;
CREATE TABLE test_01193_18429.table_4_703 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_243C56496B643827237E356E583F6036756D3925472C484977677D796F485F36223976265344785B(x UInt8) Engine=Memory;
CREATE TABLE Sub_distributed (Id UInt64, PropertyId UInt64)ENGINE = Distributed('test_shard_localhost', test_6vfjaev5, Sub, joinGet('test_6vfjaev5.Mapping','RegionId',PropertyId));
SELECT toFloat32(NULL, NULL, NULL);
CREATE TABLE test_01193_18429.table_6_995 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_3748425C66564E48212E253C4F284B23532F6135454769284B3820662576354B544B3A377D71425E(x UInt8) Engine=Memory;
SELECT coalesce(toNullable(1), toNullable(2)) as x, toTypeName(x);
CREATE TABLE test_02908_r2_53 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_53', 'r2') ORDER BY tuple()
insert into data (key) values 
select round(1000 * ngramDistanceCaseInsensitiveUTF8(materialize('ÃÂ°ÃÂÃÂÃÂÃÂ´ÃÂµÃÂÃÂÃÂ·'), 'ÃÂÃÂ±ÃÂ²ÃÂÃÂ´ÃÂµÃÂÃÂ¶')) from system.numbers limit 5;
SELECT multiIf((col1 % 2) = 0, toFixedString('foo', 16), (col1 % 3) = 0, toFixedString(col3, 16), toFixedString('baz', 16)) FROM multi_if_check;
SELECT CASE WHEN (col1 % 2) = 0 THEN ['foo', col3] WHEN 1 THEN [col4, 'bar'] ELSE [col6, col7] END FROM multi_if_check;
INSERT INTO ttl VALUES 
SELECT 'Running test stateless/01318_long_unsuccessful_mutation_zookeeper.sh from pid=1705' 
DROP TABLE IF EXISTS t_mutations_nondeterministic SYNC;
CREATE TABLE test_01193_18429.table_7_308 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_4_507 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE ay ENGINE = AggregatingMergeTree ORDER BY i SETTINGS index_granularity = 37045, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 2992, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 9026052964, index_granularity_bytes = 6174558, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 10290, primary_key_compress_block_size = 71140 AS SELECT 1 AS i, sumSimpleState(10) GROUP BY i
DROP DATABASE IF EXISTS test_ue4kfp0d 
SELECT * FROM cast;
CREATE TABLE t (n UInt64, f Float32, s String, fs FixedString(42), d Decimal(9, 6)) ENGINE = Memory;
INSERT INTO test_01193_18429.table_9_424 VALUES 
DROP TABLE session;
DROP TABLE IF EXISTS ipv4_test;
CREATE TABLE test_22274975362E2D574C3E68732541622B74576A6A74445769696038622F362467552E6A393237256D(x UInt8) Engine=Memory;
CREATE TABLE test_413E505D252C767D2A447D2A2777307A5F243C6D3A7B252755633D56585861366451583D64775B7C(x UInt8) Engine=Memory;
select -3 as offset, toFixedString('Hello', 6) as s, subString(bin(s), offset), bin(bitSlice(s, offset));
DROP DATABASE IF EXISTS test_9za7bnn2 
INSERT INTO summing_merge_tree_with_sampling VALUES 
SELECT shardNum() AS `_shard_num`, `id` FROM view(SELECT toInt16(`id`) AS `id` FROM `data` HAVING `id` IN tuple(0)) WHERE `id` IN tuple(0) ORDER BY `_shard_num` ASC, `id` ASC
INSERT INTO r10 SELECT 27 % 10 = 10 ? 27 - 1 : 27
select makeDateTime(1984, -1, 1, 0, 0, 0, 'UTC');
SELECT `table_1`.`x`, `table_1`.`y` FROM `test_8qnqz2c8`.`table_1` ORDER BY `x` ASC
select '-------toYear---------';
SELECT 'Running test stateless/02392_every_setting_must_have_documentation.sql from pid=1722' 
SELECT '-- multiple users in one command';
SELECT toUInt8(0) AS x, toInt64(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
CREATE TABLE test_01193_18429.table_4_296 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_8_903 VALUES 
DROP DICTIONARY 02162_test_dictionary;
SELECT * FROM r2;
INSERT INTO test_01193_18429.table_9_302 VALUES 
SELECT untuple(tuple(1)::Tuple(a Int)) x, untuple(tuple(1)::Tuple(a Int)) x FORMAT Vertical SETTINGS allow_experimental_analyzer = 1;
SELECT 'Running test stateless/02014_storage_merge_order_by.sql from pid=1722' 
SELECT 'Running test stateless/00980_full_join_crash_fancyqlx.sql from pid=1714' 
SELECT cutIPv6(toFixedString(unhex('00000000000000000000FFFFC1FC110A'), 16), 13, 0);
SELECT `data_01071`.`key` FROM `test_zrr71z40`.`data_01071`
CREATE DATABASE IF NOT EXISTS test_dj0jx87d 
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat64(1), toFloat64(2)] WHEN (number % 3) = 0 THEN [toUInt32(2), toUInt32(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_1_886 VALUES 
select toFixedString(x, 8) from values ('x Nullable(String)', '42', NULL, 'test');
CREATE DICTIONARY test_01037.dict_tuple (`key` Array(Array(Array(Tuple(Float64, Float64)))), `name` String DEFAULT 'qqq', `value` UInt64 DEFAULT 101) PRIMARY KEY key SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'polygons_tuple' PASSWORD '[HIDDEN]' DB 'test_01037')) LIFETIME(MIN 0 MAX 0) LAYOUT(POLYGON_SIMPLE())
select parseDateTimeInJodaSyntax('7 am', 'k a', 'UTC') = toDateTime('1970-01-01 07:00:00', 'UTC');
DROP TABLE constraint_on_low_cardinality_nullable_type;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), N != toInt8(-1) as r FORMAT CSV;
create table copy_02572 (key Int) engine=Memory();
select toDate('2020-01-01') in (toDate32('2020-01-01'));
create table tab_00386 (a Int8, b String, c Tuple(Int8), d Tuple(Tuple(Int8)), e Tuple(Int8, String), f Tuple(Tuple(Int8, String))) engine = MergeTree order by (a) partition by a
SELECT ignore(blockSerializedSize((1, 1)));
CREATE DATABASE IF NOT EXISTS test_990cm9di 
CREATE DICTIONARY simple_key_hashed_dictionary_01862 ( id UInt64, value String ) PRIMARY KEY id SOURCE(CLICKHOUSE(TABLE 'simple_key_source_table_01862')) LAYOUT(HASHED()) LIFETIME(MIN 0 MAX 1000);
select (b, d) in (select (b, d) from tab_00386) from tab_00386
SELECT domain('http://user:pass:example.com') AS Host;
SELECT hasTokenCaseInsensitive('hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,needle,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,', 'NEEDLE'), ' expecting ', 1;
CREATE TABLE test_636D4A54783D463C5C3D45722B503F5D2237664768217A3022387D636F5C4A4831752E3B685B7B50(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02793_implicit_pretty_format_settings.expect from pid=1715' 
SELECT 'Running test stateless/01655_sleep_infinite_float.sql from pid=1713' 
CREATE TABLE test_673B60572A597E424D63593B5A484265617E79235C652648546A737C242951664D5A76334A774A49(x UInt8) Engine=Memory;
SELECT 18 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'val', tuple(IPv6StringToNum('::ffff:7fff:800a')))
CREATE TABLE test_5F787D66517D3571773D5B394D3F717C54385629665F752D4971322D27616D7045214B752C7E3E5C(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_6_958 VALUES 
DROP TABLE `01945.db`.test_dictionary_values;
INSERT INTO test_01193_18429.table_8_474 VALUES 
DROP DATABASE IF EXISTS test_hfshtjps 
SELECT dictHas('01766_db.hashed_dictionary_complex_key_complex_attributes', (number, concat('id_key_', toString(number)))) FROM system.numbers LIMIT 4;
CREATE TABLE test_02908_r2_116 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_116', 'r2') ORDER BY tuple()
SELECT encodeURLComponent('hello world foo+bar#a=b');
CREATE DATABASE IF NOT EXISTS test_5c4k1gn9 
SELECT hex(leftPad(toFixedString('abc34324' as s, 8), number)) as result, hex(leftPad(s, number)) = result, hex(leftPadUTF8(toFixedString(s, 8), number)) = result, hex(leftPadUTF8(s, number)) = result FROM numbers(20);
DROP DATABASE IF EXISTS test_4qmzravh 
OPTIMIZE TABLE data_01285 FINAL;
SELECT toDateTime64('2011-11-11 11:11:11.11', 0);
CREATE TABLE test_29522C70502F5A5E434F5A6B6C5B5F5A33432749593843243B31244631573A374C51503B31702860(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_3_46 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT arrayDifference([toDecimal128(0.0,8), toDecimal128(1.0,8)]) x, toTypeName(x);
alter table many_mutations delete where y = 185 * 2 settings mutations_sync = 0;
DROP DATABASE IF EXISTS test_lbwqwrtb 
CREATE TABLE test_5A76462956276761502473662A62246249263A5B614A4A65457A72643C27287133324A663D43294A(x UInt8) Engine=Memory;
SELECT count(*) FROM system.parts WHERE database = currentDatabase() AND table='test_without_merge' AND active
CREATE TABLE test_02908_r2_189 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_189', 'r2') ORDER BY tuple()
INSERT INTO test_01193_18429.table_6_873 VALUES 
SELECT multiIf((number % 2) = 0, [toFloat32(1), toFloat32(2)], (number % 3) = 0, [toInt16(2), toInt16(3)], [toFloat32(3), toFloat32(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE local_00952 (date Date, value Date MATERIALIZED toDate('2017-08-01')) ENGINE = MergeTree(date, date, 8192);
SELECT count() FROM system.parts WHERE database = 'test_yyhntc4h' AND table = 't_json_async_insert'
DROP DATABASE IF EXISTS test_23gy52ag 
SELECT value == 'grace_hash,hash' FROM system.settings WHERE name = 'join_algorithm';
ALTER USER test_user_01075_x@localhost RENAME TO test_user_01075_x@'%';
CREATE TABLE bitmap_test(pickup_date Date, city_id UInt32, uid UInt64)ENGINE = Memory;
SELECT multiIf(1, toFixedString(col2, 16), (col1 % 3) = 0, toFixedString('bar', 16), toFixedString(col4, 16)) FROM multi_if_check;
drop table if exists data_02052_1_wide100000000;
SELECT '1', '9007199254740994.000000000', 1 = 9007199254740994.000000000, 1 != 9007199254740994.000000000, 1 < 9007199254740994.000000000, 1 <= 9007199254740994.000000000, 1 > 9007199254740994.000000000, 1 >= 9007199254740994.000000000, 9007199254740994.000000000 = 1, 9007199254740994.000000000 != 1, 9007199254740994.000000000 < 1, 9007199254740994.000000000 <= 1, 9007199254740994.000000000 > 1, 9007199254740994.000000000 >= 1 , toUInt8(1) = 9007199254740994.000000000, toUInt8(1) != 9007199254740994.000000000, toUInt8(1) < 9007199254740994.000000000, toUInt8(1) <= 9007199254740994.000000000, toUInt8(1) > 9007199254740994.000000000, toUInt8(1) >= 9007199254740994.000000000, 9007199254740994.000000000 = toUInt8(1), 9007199254740994.000000000 != toUInt8(1), 9007199254740994.000000000 < toUInt8(1), 9007199254740994.000000000 <= toUInt8(1), 9007199254740994.000000000 > toUInt8(1), 9007199254740994.000000000 >= toUInt8(1) , toInt8(1) = 9007199254740994.000000000, toInt8(1) != 9007199254740994.000000000, toInt8(1) < 9007199254740994.000000000, toInt8(1) <= 9007199254740994.000000000, toInt8(1) > 9007199254740994.000000000, toInt8(1) >= 9007199254740994.000000000, 9007199254740994.000000000 = toInt8(1), 9007199254740994.000000000 != toInt8(1), 9007199254740994.000000000 < toInt8(1), 9007199254740994.000000000 <= toInt8(1), 9007199254740994.000000000 > toInt8(1), 9007199254740994.000000000 >= toInt8(1) , toUInt16(1) = 9007199254740994.000000000, toUInt16(1) != 9007199254740994.000000000, toUInt16(1) < 9007199254740994.000000000, toUInt16(1) <= 9007199254740994.000000000, toUInt16(1) > 9007199254740994.000000000, toUInt16(1) >= 9007199254740994.000000000, 9007199254740994.000000000 = toUInt16(1), 9007199254740994.000000000 != toUInt16(1), 9007199254740994.000000000 < toUInt16(1), 9007199254740994.000000000 <= toUInt16(1), 9007199254740994.000000000 > toUInt16(1), 9007199254740994.000000000 >= toUInt16(1) , toInt16(1) = 9007199254740994.000000000, toInt16(1) != 9007199254740994.000000000, toInt16(1) < 9007199254740994.000000000, toInt16(1) <= 9007199254740994.000000000, toInt16(1) > 9007199254740994.000000000, toInt16(1) >= 9007199254740994.000000000, 9007199254740994.000000000 = toInt16(1), 9007199254740994.000000000 != toInt16(1), 9007199254740994.000000000 < toInt16(1), 9007199254740994.000000000 <= toInt16(1), 9007199254740994.000000000 > toInt16(1), 9007199254740994.000000000 >= toInt16(1) , toUInt32(1) = 9007199254740994.000000000, toUInt32(1) != 9007199254740994.000000000, toUInt32(1) < 9007199254740994.000000000, toUInt32(1) <= 9007199254740994.000000000, toUInt32(1) > 9007199254740994.000000000, toUInt32(1) >= 9007199254740994.000000000, 9007199254740994.000000000 = toUInt32(1), 9007199254740994.000000000 != toUInt32(1), 9007199254740994.000000000 < toUInt32(1), 9007199254740994.000000000 <= toUInt32(1), 9007199254740994.000000000 > toUInt32(1), 9007199254740994.000000000 >= toUInt32(1) , toInt32(1) = 9007199254740994.000000000, toInt32(1) != 9007199254740994.000000000, toInt32(1) < 9007199254740994.000000000, toInt32(1) <= 9007199254740994.000000000, toInt32(1) > 9007199254740994.000000000, toInt32(1) >= 9007199254740994.000000000, 9007199254740994.000000000 = toInt32(1), 9007199254740994.000000000 != toInt32(1), 9007199254740994.000000000 < toInt32(1), 9007199254740994.000000000 <= toInt32(1), 9007199254740994.000000000 > toInt32(1), 9007199254740994.000000000 >= toInt32(1) , toUInt64(1) = 9007199254740994.000000000, toUInt64(1) != 9007199254740994.000000000, toUInt64(1) < 9007199254740994.000000000, toUInt64(1) <= 9007199254740994.000000000, toUInt64(1) > 9007199254740994.000000000, toUInt64(1) >= 9007199254740994.000000000, 9007199254740994.000000000 = toUInt64(1), 9007199254740994.000000000 != toUInt64(1), 9007199254740994.000000000 < toUInt64(1), 9007199254740994.000000000 <= toUInt64(1), 9007199254740994.000000000 > toUInt64(1), 9007199254740994.000000000 >= toUInt64(1) , toInt64(1) = 9007199254740994.000000000, toInt64(1) != 9007199254740994.000000000, toInt64(1) < 9007199254740994.000000000, toInt64(1) <= 9007199254740994.000000000, toInt64(1) > 9007199254740994.000000000, toInt64(1) >= 9007199254740994.000000000, 9007199254740994.000000000 = toInt64(1), 9007199254740994.000000000 != toInt64(1), 9007199254740994.000000000 < toInt64(1), 9007199254740994.000000000 <= toInt64(1), 9007199254740994.000000000 > toInt64(1), 9007199254740994.000000000 >= toInt64(1) ;
SELECT 42,'Hello',bin(bitShiftLeft('Hello', 42));
INSERT INTO r6 SELECT 98
SELECT count() FROM t_cnf_fuzz WHERE (c5) OR (c8) OR (c5 AND (NOT c5) AND c4 AND (NOT c0) AND (NOT c1)) OR ((NOT c0)) OR ((NOT c0) AND c7) OR (c4 AND c0 AND c7 AND c6 AND c4) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_01193_18429.table_8_457 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/02372_analyzer_join.gen.sql from pid=1715' 
DROP DATABASE IF EXISTS test_ik8n9spt 
SELECT '1', '-9223372036854786048.000000000', 1 = -9223372036854786048.000000000, 1 != -9223372036854786048.000000000, 1 < -9223372036854786048.000000000, 1 <= -9223372036854786048.000000000, 1 > -9223372036854786048.000000000, 1 >= -9223372036854786048.000000000, -9223372036854786048.000000000 = 1, -9223372036854786048.000000000 != 1, -9223372036854786048.000000000 < 1, -9223372036854786048.000000000 <= 1, -9223372036854786048.000000000 > 1, -9223372036854786048.000000000 >= 1 , toUInt8(1) = -9223372036854786048.000000000, toUInt8(1) != -9223372036854786048.000000000, toUInt8(1) < -9223372036854786048.000000000, toUInt8(1) <= -9223372036854786048.000000000, toUInt8(1) > -9223372036854786048.000000000, toUInt8(1) >= -9223372036854786048.000000000, -9223372036854786048.000000000 = toUInt8(1), -9223372036854786048.000000000 != toUInt8(1), -9223372036854786048.000000000 < toUInt8(1), -9223372036854786048.000000000 <= toUInt8(1), -9223372036854786048.000000000 > toUInt8(1), -9223372036854786048.000000000 >= toUInt8(1) , toInt8(1) = -9223372036854786048.000000000, toInt8(1) != -9223372036854786048.000000000, toInt8(1) < -9223372036854786048.000000000, toInt8(1) <= -9223372036854786048.000000000, toInt8(1) > -9223372036854786048.000000000, toInt8(1) >= -9223372036854786048.000000000, -9223372036854786048.000000000 = toInt8(1), -9223372036854786048.000000000 != toInt8(1), -9223372036854786048.000000000 < toInt8(1), -9223372036854786048.000000000 <= toInt8(1), -9223372036854786048.000000000 > toInt8(1), -9223372036854786048.000000000 >= toInt8(1) , toUInt16(1) = -9223372036854786048.000000000, toUInt16(1) != -9223372036854786048.000000000, toUInt16(1) < -9223372036854786048.000000000, toUInt16(1) <= -9223372036854786048.000000000, toUInt16(1) > -9223372036854786048.000000000, toUInt16(1) >= -9223372036854786048.000000000, -9223372036854786048.000000000 = toUInt16(1), -9223372036854786048.000000000 != toUInt16(1), -9223372036854786048.000000000 < toUInt16(1), -9223372036854786048.000000000 <= toUInt16(1), -9223372036854786048.000000000 > toUInt16(1), -9223372036854786048.000000000 >= toUInt16(1) , toInt16(1) = -9223372036854786048.000000000, toInt16(1) != -9223372036854786048.000000000, toInt16(1) < -9223372036854786048.000000000, toInt16(1) <= -9223372036854786048.000000000, toInt16(1) > -9223372036854786048.000000000, toInt16(1) >= -9223372036854786048.000000000, -9223372036854786048.000000000 = toInt16(1), -9223372036854786048.000000000 != toInt16(1), -9223372036854786048.000000000 < toInt16(1), -9223372036854786048.000000000 <= toInt16(1), -9223372036854786048.000000000 > toInt16(1), -9223372036854786048.000000000 >= toInt16(1) , toUInt32(1) = -9223372036854786048.000000000, toUInt32(1) != -9223372036854786048.000000000, toUInt32(1) < -9223372036854786048.000000000, toUInt32(1) <= -9223372036854786048.000000000, toUInt32(1) > -9223372036854786048.000000000, toUInt32(1) >= -9223372036854786048.000000000, -9223372036854786048.000000000 = toUInt32(1), -9223372036854786048.000000000 != toUInt32(1), -9223372036854786048.000000000 < toUInt32(1), -9223372036854786048.000000000 <= toUInt32(1), -9223372036854786048.000000000 > toUInt32(1), -9223372036854786048.000000000 >= toUInt32(1) , toInt32(1) = -9223372036854786048.000000000, toInt32(1) != -9223372036854786048.000000000, toInt32(1) < -9223372036854786048.000000000, toInt32(1) <= -9223372036854786048.000000000, toInt32(1) > -9223372036854786048.000000000, toInt32(1) >= -9223372036854786048.000000000, -9223372036854786048.000000000 = toInt32(1), -9223372036854786048.000000000 != toInt32(1), -9223372036854786048.000000000 < toInt32(1), -9223372036854786048.000000000 <= toInt32(1), -9223372036854786048.000000000 > toInt32(1), -9223372036854786048.000000000 >= toInt32(1) , toUInt64(1) = -9223372036854786048.000000000, toUInt64(1) != -9223372036854786048.000000000, toUInt64(1) < -9223372036854786048.000000000, toUInt64(1) <= -9223372036854786048.000000000, toUInt64(1) > -9223372036854786048.000000000, toUInt64(1) >= -9223372036854786048.000000000, -9223372036854786048.000000000 = toUInt64(1), -9223372036854786048.000000000 != toUInt64(1), -9223372036854786048.000000000 < toUInt64(1), -9223372036854786048.000000000 <= toUInt64(1), -9223372036854786048.000000000 > toUInt64(1), -9223372036854786048.000000000 >= toUInt64(1) , toInt64(1) = -9223372036854786048.000000000, toInt64(1) != -9223372036854786048.000000000, toInt64(1) < -9223372036854786048.000000000, toInt64(1) <= -9223372036854786048.000000000, toInt64(1) > -9223372036854786048.000000000, toInt64(1) >= -9223372036854786048.000000000, -9223372036854786048.000000000 = toInt64(1), -9223372036854786048.000000000 != toInt64(1), -9223372036854786048.000000000 < toInt64(1), -9223372036854786048.000000000 <= toInt64(1), -9223372036854786048.000000000 > toInt64(1), -9223372036854786048.000000000 >= toInt64(1) ;
SELECT a, b FROM default_join1 JOIN (SELECT a, b FROM default_join2) js2 USING a ORDER BY b SETTINGS join_default_strictness='ANY';
drop table products;
INSERT INTO test_01193_18429.table_8_418 VALUES 
INSERT INTO test_01193_18429.table_1_835 VALUES 
CREATE TABLE t1 ( x Int ) Engine = Memory;
CREATE TABLE test_735E26737A3729423B64663C7533364126717D303C3C6020787C4770516A5C3260663A2D22353A2C(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02668_logical_optimizer_removing_redundant_checks.sql from pid=1713' 
INSERT INTO test_01193_18429.table_3_301 VALUES 
CREATE TABLE test_21405732775A34377662725F6D6924445724404956474B2E47522A314A4A5C52724C4930313C742E(x UInt8) Engine=Memory;
CREATE TABLE test_50612F2B634F2D4E486E452A6E685A463F20767844555F333D576B697E447A6230315C3456314C7E(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02935_format_with_arbitrary_types.sql from pid=1718' 
SELECT COUNT() FROM bloom_filter_null_types_test WHERE isNull(i16);
INSERT INTO test_01193_18429.table_2_628 VALUES 
SELECT 'Running test stateless/00064_negate_bug.sql from pid=1724' 
select count(), sum(number) from file('02841.parquet') where indexHint(f64 between -0.11 and 0.06);
DROP DATABASE IF EXISTS test_vaepqvz9 
SELECT parseDateTimeBestEffort('20220101T010203', 'UTC');
CREATE TABLE test_227B71235761684C36603B7E7C5B6B617D5C342036276D5E3355333C5837512026273F3677574C60(x UInt8) Engine=Memory;
CREATE TABLE codecs (id UInt32, val UInt32, s String) ENGINE = MergeTree ORDER BY id SETTINGS min_rows_for_wide_part = 10000, ratio_of_defaults_for_sparse_serialization = 1;
CREATE TABLE stripe6 ENGINE = StripeLog AS SELECT number AS x FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_br4y60zm 
select cutToFirstSignificantSubdomainCustomRFC('something.sheffield.sch.uk', 'public_suffix_list');
INSERT INTO test_01193_18429.table_8_607 VALUES 
CREATE TABLE t_nested_modify (`id` UInt64, `n.a` Array(UInt32), `n.b` Array(String)) ENGINE = MergeTree ORDER BY id SETTINGS min_bytes_for_wide_part = 0, index_granularity = 7771, ratio_of_defaults_for_sparse_serialization = 0.7094806432723999, replace_long_file_name_to_hash = false, max_file_name_length = 120, merge_max_block_size = 12759, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 56, min_merge_bytes_to_use_direct_io = 10011070600, index_granularity_bytes = 22868193, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 10222, primary_key_compress_block_size = 31502
ALTER TABLE concurrent_alter_add_drop_3 ADD COLUMN value4 UInt32 DEFAULT 42 SETTINGS replication_alter_partitions_sync=0
DROP TABLE IF EXISTS enums;
INSERT INTO ttl_group_by SELECT toDate('1970-10-10'), number, number FROM numbers(100);
select 1 = multiSearchAnyCaseInsensitiveUTF8(materialize('ÃÂ¤ÃÂ ÃÂ¥ÃÂ³ÃÂ°ÃÂ¡ÃÂ»ÃÂÃÂ§ÃÂÃÂÃÂºÃÂ¨ÃÂ³ÃÂ·ÃÂ¼ÃÂÃÂÃÂÃÂ¤ÃÂÃÂÃÂÃÂ²ÃÂ§'), ['ÃÂºÃÂ·ÃÂ¨ÃÂÃÂ¤ÃÂ±', 'ÃÂÃÂÃÂÃÂ»ÃÂ§ÃÂ§ÃÂÃÂÃÂºÃÂÃÂ³', 'ÃÂ¤ÃÂÃÂ±ÃÂ±ÃÂÃÂ§', 'ÃÂ¦ÃÂºÃÂ¨', '', 'ÃÂÃÂÃÂ»ÃÂÃÂ§ÃÂÃÂ¦ÃÂÃÂ¨ÃÂ³ÃÂ·ÃÂÃÂºÃÂÃÂ¨ÃÂÃÂÃÂ±ÃÂÃÂ²ÃÂ', 'ÃÂ ÃÂ¥ÃÂ³ÃÂ°ÃÂÃÂ»ÃÂ§ÃÂÃÂÃÂ¦ÃÂÃÂ¨ÃÂÃÂ·', 'ÃÂ ÃÂ ÃÂ³ÃÂ°ÃÂÃÂ»ÃÂÃÂ§ÃÂÃÂÃÂÃÂ¨ÃÂ³ÃÂ·ÃÂÃÂºÃÂ·ÃÂÃÂ¤ÃÂÃÂÃÂ±ÃÂ', 'ÃÂ¨ÃÂ³', 'ÃÂ¤', 'ÃÂ¥ÃÂÃÂÃÂÃÂ»ÃÂÃÂ§ÃÂ¾ÃÂÃÂÃÂ¨ÃÂÃÂ·ÃÂÃÂºÃÂ·ÃÂ', 'ÃÂ¨ÃÂ³ÃÂÃÂ¼ÃÂÃÂÃÂÃÂÃÂ¤ÃÂ±']) from system.numbers limit 10;
SELECT a FROM (SELECT sipHash64(a) AS a FROM optimize_sorting) WHERE a != 0 ORDER BY a;
SET local_filesystem_read_method='pread';
DROP TABLE IF EXISTS mysql_settings_override_test
CREATE DATABASE IF NOT EXISTS test_kq7x2hmd 
select count(), sum(number) from file('02841.parquet') where indexHint(dt64_us between toDateTime64(900000000, 2) and '2005-01-01');
select count(*) from t, numbers(2) r;
CREATE DATABASE IF NOT EXISTS test_84btwo5w 
INSERT INTO t0 VALUES 
INSERT INTO test_01193_18429.table_8_541 VALUES 
select d1, a1 from aliases_test array join d1, a1 as a2;
SELECT '--- incompatible ---';
INSERT INTO test_01193_18429.table_8_911 VALUES 
SELECT hasTokenCaseInsensitive('hay,hay,hay,hay,hay,hay,hay,hay,hay,needle,hay,hay,hay,hay,hay,hay,hay,hay,hay', 'needle'), ' expecting ', 1;
SELECT formatReadableTimeDelta(-(1 + 60 + 3600 + 86400 + 30.5 * 86400 + 365 * 86400), 'minutes');
alter table many_mutations delete where y = 362 * 2 settings mutations_sync = 0;
KILL MUTATION WHERE mutation_id='0000000058' and table='concurrent_mutate_kill' and database='test_ivy0esel'
CREATE TABLE test_01193_18429.table_6_445 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT teams.name AS name, sum(teams.won) AS wins FROM nbagames ARRAY JOIN data.teams AS teams GROUP BY name ORDER BY wins DESC LIMIT 5;
CREATE INDEX idx_tab2_0 ON tab2 (col3 DESC);
SELECT arrayReverseSplit((x, y) -> y, [1, 2, 3, 4, 5], [1, 0, 0, 1, 0]);
select arrayUniq(thread_ids) from system.query_log where current_database = currentDatabase() and type != 'QueryStart' and query like '%insert into testX %' and Settings['parallel_view_processing'] = '1' and Settings['optimize_trivial_insert_select'] = '0' and Settings['max_insert_threads'] = '0';
CREATE TABLE A (`k` UInt32, `t` Decimal128(5), `a` Float64) ENGINE = MergeTree ORDER BY (k, t) SETTINGS index_granularity = 57643, min_bytes_for_wide_part = 636221231, ratio_of_defaults_for_sparse_serialization = 0.34237709641456604, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 6784, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 2424484770, index_granularity_bytes = 8067457, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 32242, primary_key_compress_block_size = 12095
CREATE TABLE test_02908_r2_197 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_197', 'r2') ORDER BY tuple()
SELECT CASE WHEN (col1 % 2) = 0 THEN [col2, col3] WHEN 1 THEN [col4, col5] ELSE [col6, col7] END FROM multi_if_check;
SELECT dictGetString('01053_db.ssd_dict', 'c', toUInt64(3));
CREATE TABLE test_4655586E656E5E3A4647756E78605E7B482B5B7253606752356D615C61303268486567443029716E(x UInt8) Engine=Memory;
SELECT 16;
select hex(sipHash128ReferenceKeyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40)));
DROP DATABASE IF EXISTS test_xof3fn58 
CREATE TABLE test_2A2C6974347276244D7A314551292B43234B355C3167682240502F6C384023362A7A325441504647(x UInt8) Engine=Memory;
EXPLAIN PIPELINE SELECT c, d, e FROM t_fixed_prefix WHERE c = 1 ORDER BY c, d, e SETTINGS optimize_read_in_order = 1
CREATE DATABASE test_01086 ENGINE=Ordinary;
SELECT 'R3, R4, R5: (x == 3) AND (x <= 2) AND (y >= 20)';
create table dist_01270 as data_01270 Engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01270, key);
CREATE TABLE test_01193_18429.table_8_960 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP TABLE IF EXISTS ghdata_2
SELECT has([(1, 2), (3, 4)], (toUInt16(3), 4));
insert into function file('02366_data_4.jsonl') select range(number % 1000) from numbers(100000) settings output_format_parallel_formatting=0
CREATE DATABASE IF NOT EXISTS test_x25ggehc 
SELECT medianDeterministic(oid, oid) FROM d
drop table summing_merge_tree_aggregate_function;
CREATE TABLE test_6E632743473E6F4E5732432A725F3C756F6C24505F52353A563572547A595C38355454754B393E3F(x UInt8) Engine=Memory;
SELECT command FROM system.mutations WHERE database = currentDatabase() AND table = 't_mutations_nondeterministic' AND is_done ORDER BY command;
DROP DATABASE IF EXISTS test_rwq4eac1 
SELECT COUNT() FROM bloom_filter_array_lc_null_types_test WHERE has(date_time, toDateTime('1970-01-01 02:01:40', 'Asia/Istanbul'));
CREATE TABLE test_01193_18429.table_6_634 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT dictGetOrDefault('01766_db.hashed_dictionary_complex_key_complex_attributes', 'value_first', (number, concat('id_key_', toString(number))), toString('default')) as value_first, dictGetOrDefault('01766_db.hashed_dictionary_complex_key_complex_attributes', 'value_second', (number, concat('id_key_', toString(number))), toString('default')) as value_second FROM system.numbers LIMIT 3;
INSERT INTO test_01193_18429.table_6_567 VALUES 
INSERT INTO test_01193_18429.table_10_213 VALUES 
INSERT INTO test_01193_18429.table_7_433 VALUES 
CREATE TABLE test_datetime(timestamp DateTime('Asia/Istanbul')) ENGINE=Log;
INSERT INTO src_8 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 75
CREATE TABLE from_table (`x` UInt32) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 20604, min_bytes_for_wide_part = 1040483816, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 118, merge_max_block_size = 8304, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 30423524, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 34209, primary_key_compress_block_size = 10278
CREATE INDEX idx_tab3_0 ON tab3 (col0 DESC);
CREATE TABLE IF NOT EXISTS dist_01213 AS local_01213 ENGINE = Distributed(test_cluster_two_shards_localhost, currentDatabase(), local_01213, id);
SELECT materialize([['Hello'], ['world']])[2::Int8];
CREATE TABLE test_01193_18429.table_1_416 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
insert into test_bm VALUES 
select 1 = multiSearchAny(materialize('abcdefgh'), ['b']);
CREATE TABLE test_4E73737A496E5B2F2265304F252634284E54464E6072743D597C4F2D42273F4C4F706B2A235E7D68(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_3_443 VALUES 
CREATE USER IF NOT EXISTS u1_01292;
SELECT a, arrayEnumerateUniqRanked(a) FROM ( SELECT * FROM ( SELECT [[6], [1, 2, 3, 4]] AS a UNION ALL SELECT [[3, 4, 5]] AS a ) ORDER BY a ASC );
CREATE TABLE test_332D58465E29325560372C3E235C6D77676D2D4F56252A7A7145285E5C24552642235F4C662F5A2E(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_1_926 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_7441336C7E4D3A575D3E30547836664B5641583C3B2450284331535F6F73206247412F3632335332(x UInt8) Engine=Memory;
SELECT `x` FROM generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8)))))))))))))))))))))))))))))))))))))))))))))', 1, 1, 1) LIMIT 1
CREATE TABLE test_01193_18429.table_8_32 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_3_348 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_10_330 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE DATABASE IF NOT EXISTS test_s4c86e5h 
SELECT 1, -129, 1 = -129, 1 != -129, 1 < -129, 1 <= -129, 1 > -129, 1 >= -129, -129 = 1, -129 != 1, -129 < 1, -129 <= 1, -129 > 1, -129 >= 1 , toUInt8(1) = toInt16(-129), toUInt8(1) != toInt16(-129), toUInt8(1) < toInt16(-129), toUInt8(1) <= toInt16(-129), toUInt8(1) > toInt16(-129), toUInt8(1) >= toInt16(-129), toInt16(-129) = toUInt8(1), toInt16(-129) != toUInt8(1), toInt16(-129) < toUInt8(1), toInt16(-129) <= toUInt8(1), toInt16(-129) > toUInt8(1), toInt16(-129) >= toUInt8(1) , toUInt8(1) = toInt32(-129), toUInt8(1) != toInt32(-129), toUInt8(1) < toInt32(-129), toUInt8(1) <= toInt32(-129), toUInt8(1) > toInt32(-129), toUInt8(1) >= toInt32(-129), toInt32(-129) = toUInt8(1), toInt32(-129) != toUInt8(1), toInt32(-129) < toUInt8(1), toInt32(-129) <= toUInt8(1), toInt32(-129) > toUInt8(1), toInt32(-129) >= toUInt8(1) , toUInt8(1) = toInt64(-129), toUInt8(1) != toInt64(-129), toUInt8(1) < toInt64(-129), toUInt8(1) <= toInt64(-129), toUInt8(1) > toInt64(-129), toUInt8(1) >= toInt64(-129), toInt64(-129) = toUInt8(1), toInt64(-129) != toUInt8(1), toInt64(-129) < toUInt8(1), toInt64(-129) <= toUInt8(1), toInt64(-129) > toUInt8(1), toInt64(-129) >= toUInt8(1) , toInt8(1) = toInt16(-129), toInt8(1) != toInt16(-129), toInt8(1) < toInt16(-129), toInt8(1) <= toInt16(-129), toInt8(1) > toInt16(-129), toInt8(1) >= toInt16(-129), toInt16(-129) = toInt8(1), toInt16(-129) != toInt8(1), toInt16(-129) < toInt8(1), toInt16(-129) <= toInt8(1), toInt16(-129) > toInt8(1), toInt16(-129) >= toInt8(1) , toInt8(1) = toInt32(-129), toInt8(1) != toInt32(-129), toInt8(1) < toInt32(-129), toInt8(1) <= toInt32(-129), toInt8(1) > toInt32(-129), toInt8(1) >= toInt32(-129), toInt32(-129) = toInt8(1), toInt32(-129) != toInt8(1), toInt32(-129) < toInt8(1), toInt32(-129) <= toInt8(1), toInt32(-129) > toInt8(1), toInt32(-129) >= toInt8(1) , toInt8(1) = toInt64(-129), toInt8(1) != toInt64(-129), toInt8(1) < toInt64(-129), toInt8(1) <= toInt64(-129), toInt8(1) > toInt64(-129), toInt8(1) >= toInt64(-129), toInt64(-129) = toInt8(1), toInt64(-129) != toInt8(1), toInt64(-129) < toInt8(1), toInt64(-129) <= toInt8(1), toInt64(-129) > toInt8(1), toInt64(-129) >= toInt8(1) , toUInt16(1) = toInt16(-129), toUInt16(1) != toInt16(-129), toUInt16(1) < toInt16(-129), toUInt16(1) <= toInt16(-129), toUInt16(1) > toInt16(-129), toUInt16(1) >= toInt16(-129), toInt16(-129) = toUInt16(1), toInt16(-129) != toUInt16(1), toInt16(-129) < toUInt16(1), toInt16(-129) <= toUInt16(1), toInt16(-129) > toUInt16(1), toInt16(-129) >= toUInt16(1) , toUInt16(1) = toInt32(-129), toUInt16(1) != toInt32(-129), toUInt16(1) < toInt32(-129), toUInt16(1) <= toInt32(-129), toUInt16(1) > toInt32(-129), toUInt16(1) >= toInt32(-129), toInt32(-129) = toUInt16(1), toInt32(-129) != toUInt16(1), toInt32(-129) < toUInt16(1), toInt32(-129) <= toUInt16(1), toInt32(-129) > toUInt16(1), toInt32(-129) >= toUInt16(1) , toUInt16(1) = toInt64(-129), toUInt16(1) != toInt64(-129), toUInt16(1) < toInt64(-129), toUInt16(1) <= toInt64(-129), toUInt16(1) > toInt64(-129), toUInt16(1) >= toInt64(-129), toInt64(-129) = toUInt16(1), toInt64(-129) != toUInt16(1), toInt64(-129) < toUInt16(1), toInt64(-129) <= toUInt16(1), toInt64(-129) > toUInt16(1), toInt64(-129) >= toUInt16(1) , toInt16(1) = toInt16(-129), toInt16(1) != toInt16(-129), toInt16(1) < toInt16(-129), toInt16(1) <= toInt16(-129), toInt16(1) > toInt16(-129), toInt16(1) >= toInt16(-129), toInt16(-129) = toInt16(1), toInt16(-129) != toInt16(1), toInt16(-129) < toInt16(1), toInt16(-129) <= toInt16(1), toInt16(-129) > toInt16(1), toInt16(-129) >= toInt16(1) , toInt16(1) = toInt32(-129), toInt16(1) != toInt32(-129), toInt16(1) < toInt32(-129), toInt16(1) <= toInt32(-129), toInt16(1) > toInt32(-129), toInt16(1) >= toInt32(-129), toInt32(-129) = toInt16(1), toInt32(-129) != toInt16(1), toInt32(-129) < toInt16(1), toInt32(-129) <= toInt16(1), toInt32(-129) > toInt16(1), toInt32(-129) >= toInt16(1) , toInt16(1) = toInt64(-129), toInt16(1) != toInt64(-129), toInt16(1) < toInt64(-129), toInt16(1) <= toInt64(-129), toInt16(1) > toInt64(-129), toInt16(1) >= toInt64(-129), toInt64(-129) = toInt16(1), toInt64(-129) != toInt16(1), toInt64(-129) < toInt16(1), toInt64(-129) <= toInt16(1), toInt64(-129) > toInt16(1), toInt64(-129) >= toInt16(1) , toUInt32(1) = toInt16(-129), toUInt32(1) != toInt16(-129), toUInt32(1) < toInt16(-129), toUInt32(1) <= toInt16(-129), toUInt32(1) > toInt16(-129), toUInt32(1) >= toInt16(-129), toInt16(-129) = toUInt32(1), toInt16(-129) != toUInt32(1), toInt16(-129) < toUInt32(1), toInt16(-129) <= toUInt32(1), toInt16(-129) > toUInt32(1), toInt16(-129) >= toUInt32(1) , toUInt32(1) = toInt32(-129), toUInt32(1) != toInt32(-129), toUInt32(1) < toInt32(-129), toUInt32(1) <= toInt32(-129), toUInt32(1) > toInt32(-129), toUInt32(1) >= toInt32(-129), toInt32(-129) = toUInt32(1), toInt32(-129) != toUInt32(1), toInt32(-129) < toUInt32(1), toInt32(-129) <= toUInt32(1), toInt32(-129) > toUInt32(1), toInt32(-129) >= toUInt32(1) , toUInt32(1) = toInt64(-129), toUInt32(1) != toInt64(-129), toUInt32(1) < toInt64(-129), toUInt32(1) <= toInt64(-129), toUInt32(1) > toInt64(-129), toUInt32(1) >= toInt64(-129), toInt64(-129) = toUInt32(1), toInt64(-129) != toUInt32(1), toInt64(-129) < toUInt32(1), toInt64(-129) <= toUInt32(1), toInt64(-129) > toUInt32(1), toInt64(-129) >= toUInt32(1) , toInt32(1) = toInt16(-129), toInt32(1) != toInt16(-129), toInt32(1) < toInt16(-129), toInt32(1) <= toInt16(-129), toInt32(1) > toInt16(-129), toInt32(1) >= toInt16(-129), toInt16(-129) = toInt32(1), toInt16(-129) != toInt32(1), toInt16(-129) < toInt32(1), toInt16(-129) <= toInt32(1), toInt16(-129) > toInt32(1), toInt16(-129) >= toInt32(1) , toInt32(1) = toInt32(-129), toInt32(1) != toInt32(-129), toInt32(1) < toInt32(-129), toInt32(1) <= toInt32(-129), toInt32(1) > toInt32(-129), toInt32(1) >= toInt32(-129), toInt32(-129) = toInt32(1), toInt32(-129) != toInt32(1), toInt32(-129) < toInt32(1), toInt32(-129) <= toInt32(1), toInt32(-129) > toInt32(1), toInt32(-129) >= toInt32(1) , toInt32(1) = toInt64(-129), toInt32(1) != toInt64(-129), toInt32(1) < toInt64(-129), toInt32(1) <= toInt64(-129), toInt32(1) > toInt64(-129), toInt32(1) >= toInt64(-129), toInt64(-129) = toInt32(1), toInt64(-129) != toInt32(1), toInt64(-129) < toInt32(1), toInt64(-129) <= toInt32(1), toInt64(-129) > toInt32(1), toInt64(-129) >= toInt32(1) , toUInt64(1) = toInt16(-129), toUInt64(1) != toInt16(-129), toUInt64(1) < toInt16(-129), toUInt64(1) <= toInt16(-129), toUInt64(1) > toInt16(-129), toUInt64(1) >= toInt16(-129), toInt16(-129) = toUInt64(1), toInt16(-129) != toUInt64(1), toInt16(-129) < toUInt64(1), toInt16(-129) <= toUInt64(1), toInt16(-129) > toUInt64(1), toInt16(-129) >= toUInt64(1) , toUInt64(1) = toInt32(-129), toUInt64(1) != toInt32(-129), toUInt64(1) < toInt32(-129), toUInt64(1) <= toInt32(-129), toUInt64(1) > toInt32(-129), toUInt64(1) >= toInt32(-129), toInt32(-129) = toUInt64(1), toInt32(-129) != toUInt64(1), toInt32(-129) < toUInt64(1), toInt32(-129) <= toUInt64(1), toInt32(-129) > toUInt64(1), toInt32(-129) >= toUInt64(1) , toUInt64(1) = toInt64(-129), toUInt64(1) != toInt64(-129), toUInt64(1) < toInt64(-129), toUInt64(1) <= toInt64(-129), toUInt64(1) > toInt64(-129), toUInt64(1) >= toInt64(-129), toInt64(-129) = toUInt64(1), toInt64(-129) != toUInt64(1), toInt64(-129) < toUInt64(1), toInt64(-129) <= toUInt64(1), toInt64(-129) > toUInt64(1), toInt64(-129) >= toUInt64(1) , toInt64(1) = toInt16(-129), toInt64(1) != toInt16(-129), toInt64(1) < toInt16(-129), toInt64(1) <= toInt16(-129), toInt64(1) > toInt16(-129), toInt64(1) >= toInt16(-129), toInt16(-129) = toInt64(1), toInt16(-129) != toInt64(1), toInt16(-129) < toInt64(1), toInt16(-129) <= toInt64(1), toInt16(-129) > toInt64(1), toInt16(-129) >= toInt64(1) , toInt64(1) = toInt32(-129), toInt64(1) != toInt32(-129), toInt64(1) < toInt32(-129), toInt64(1) <= toInt32(-129), toInt64(1) > toInt32(-129), toInt64(1) >= toInt32(-129), toInt32(-129) = toInt64(1), toInt32(-129) != toInt64(1), toInt32(-129) < toInt64(1), toInt32(-129) <= toInt64(1), toInt32(-129) > toInt64(1), toInt32(-129) >= toInt64(1) , toInt64(1) = toInt64(-129), toInt64(1) != toInt64(-129), toInt64(1) < toInt64(-129), toInt64(1) <= toInt64(-129), toInt64(1) > toInt64(-129), toInt64(1) >= toInt64(-129), toInt64(-129) = toInt64(1), toInt64(-129) != toInt64(1), toInt64(-129) < toInt64(1), toInt64(-129) <= toInt64(1), toInt64(-129) > toInt64(1), toInt64(-129) >= toInt64(1) 
CREATE TABLE test_01193_18429.table_6_111 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 1 IN 1;
SYSTEM STOP REPLICATED SENDS r1;
SELECT 679, 3436958.52;
SELECT avgWeighted(x, w) FROM values('x UInt32, w UInt64', (0, 0), (1, 0));
SELECT CAST('true', 'Bool') format JSONEachRow;
select '-------addQuarters---------';
DROP TABLE IF EXISTS tracking_events_tmp;
set force_optimize_projection = 1, optimize_use_projections = 1;
SELECT materialize([2, 3, 5]) * 7;
SHOW CREATE TABLE codecs4;
SELECT 9223372036854775808, -9223372036854775808, 9223372036854775808 = -9223372036854775808, 9223372036854775808 != -9223372036854775808, 9223372036854775808 < -9223372036854775808, 9223372036854775808 <= -9223372036854775808, 9223372036854775808 > -9223372036854775808, 9223372036854775808 >= -9223372036854775808, -9223372036854775808 = 9223372036854775808, -9223372036854775808 != 9223372036854775808, -9223372036854775808 < 9223372036854775808, -9223372036854775808 <= 9223372036854775808, -9223372036854775808 > 9223372036854775808, -9223372036854775808 >= 9223372036854775808 , toUInt64(9223372036854775808) = toInt64(-9223372036854775808), toUInt64(9223372036854775808) != toInt64(-9223372036854775808), toUInt64(9223372036854775808) < toInt64(-9223372036854775808), toUInt64(9223372036854775808) <= toInt64(-9223372036854775808), toUInt64(9223372036854775808) > toInt64(-9223372036854775808), toUInt64(9223372036854775808) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toUInt64(9223372036854775808), toInt64(-9223372036854775808) != toUInt64(9223372036854775808), toInt64(-9223372036854775808) < toUInt64(9223372036854775808), toInt64(-9223372036854775808) <= toUInt64(9223372036854775808), toInt64(-9223372036854775808) > toUInt64(9223372036854775808), toInt64(-9223372036854775808) >= toUInt64(9223372036854775808) 
INSERT INTO defaulted SELECT toFixedString('::0', 16) FROM numbers(32768);
SELECT replica_path FROM system.replicas WHERE database = currentDatabase() and table = 'x';
DROP QUOTA IF EXISTS q6_01297;
desc file(02404_data.JSONCompactEachRow) settings schema_inference_hints='c1 UInt8';
insert into t0 values 
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 11398, 500 settings ignore_materialized_views_with_dropped_target_table=1
INSERT INTO polygon_dictionary_nullable_default_source_table VALUES 
DELETE FROM 02416_rocksdb WHERE value LIKE 'Some%string';
INSERT INTO test_replicated SELECT 1;
SELECT topKWeighted(NULL, NULL);
SELECT t1.value, t2.value, t3.value FROM test_table_join_1 AS t1 INNER JOIN test_table_join_2 AS t2 ON t1.id = t2.id OR t1.id = t2.id FULL JOIN test_table_join_3 AS t3 ON t2.id = t3.id OR t3.id = t2.id;
SELECT if(materialize(0), extract(materialize(CAST('aaaaaa', 'LowCardinality(String)')), '\\w'), extract(materialize(CAST('bbbbb', 'LowCardinality(String)')), '\\w*')) AS res FROM numbers(2);
select replaceRegexpOne(explain, '^[ ]*(.*)', '\\1') from ( explain actions=1 select a from t16 group by a ) where explain like '%Skip merging: %' settings force_aggregate_partitions_independently = 0, max_number_of_partitions_for_independent_aggregation = 4;
select [1, 1, 2, 3, 4, 5, 0, 0, 0, 0] = groupArray(position('aaaa', '', number)) from numbers(10);
SELECT 'hashed: semi left';
CREATE TABLE distributed_table1 AS source_table1 ENGINE = Distributed('test_shard_localhost', currentDatabase(), source_table1);
INSERT INTO test_hjqqp1i2.u_00751 FORMAT Values
CREATE TABLE test_01193_18429.table_7_339 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
drop table if exists data_02230_ttl;
INSERT INTO TABLE table FORMAT TabSeparated 
SELECT 'JOIN LEFT';
DROP TABLE t_async_insert_table_function;
DROP TABLE index_memory;
SYSTEM SYNC REPLICA r8;
CREATE TABLE test_01193_18429.table_8_238 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select (toInt128(-1) / toUInt32(1)) x, (toInt256(-1) / toUInt32(1)) y, toTypeName(x), toTypeName(y);
SELECT 1 as a, count() FROM numbers(10) WHERE 0 GROUP BY a;
alter table rmt update n = n + 1 where 1;
SELECT 'Running test stateless/02710_allow_suspicious_indices.sql from pid=1720' 
SELECT count(), min(x), max(x), sum(x), uniqExact(x) FROM ( SELECT x FROM sample_00276 SAMPLE 0.1 OFFSET 0.0 UNION ALL SELECT x FROM sample_00276 SAMPLE 0.1 OFFSET 0.1 UNION ALL SELECT x FROM sample_00276 SAMPLE 0.1 OFFSET 0.2 UNION ALL SELECT x FROM sample_00276 SAMPLE 0.1 OFFSET 0.3 UNION ALL SELECT x FROM sample_00276 SAMPLE 0.1 OFFSET 0.4 UNION ALL SELECT x FROM sample_00276 SAMPLE 0.1 OFFSET 0.5 UNION ALL SELECT x FROM sample_00276 SAMPLE 0.1 OFFSET 0.6 UNION ALL SELECT x FROM sample_00276 SAMPLE 0.1 OFFSET 0.7 UNION ALL SELECT x FROM sample_00276 SAMPLE 0.1 OFFSET 0.8 UNION ALL SELECT x FROM sample_00276 SAMPLE 0.1 OFFSET 0.9 );
SELECT count() FROM system.mutations WHERE table='mutation_table' and database='test_v0nq0hvy'
CREATE TABLE test_01193_18429.table_9_42 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT toUInt128(toUUID('f82aef31-279e-431f-8b00-2899ad387aea'));
select isNaN(materialize(0)) = 0;
SELECT COUNT() from bloom_filter_sizing_sec WHERE key1 = 1;
CREATE DATABASE IF NOT EXISTS test_vdahrdgt 
EXPLAIN QUERY TREE run_passes = 1 SELECT transform(number, [NULL], ['google', 'censor.net', 'yahoo'], 'other') FROM (SELECT NULL as number FROM system.numbers LIMIT 10);
SELECT avgWeighted(x, w) FROM values('x UInt8, w Int64', (4, 1), (1, 0), (10, 2));
DROP DATABASE IF EXISTS test_22orlvai 
select 1 = sequenceMatch('(?1)(?1)(?1)(?1)(?2)')(time, data = 0, data = 1, data = 2, data = 3) from sequence_test;
SELECT toDateTimeOrDefault(NULL);
select x'30';
create table dist_background_insert_sleep_time_ms as system.one engine=Distributed(default, system, one) settings background_insert_sleep_time_ms=1;
SELECT toTypeName(x) FROM (SELECT toDecimal32('12345.00', 4) AS x UNION ALL SELECT toInt64(0) AS x) WHERE x = 0;
SELECT multiIf((number % 2) = 0, toUInt32(1), (number % 3) = 0, toUInt16(2), toFloat32(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_7_724 VALUES 
CREATE TABLE test_02908_r3_274 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_274', 'r3') ORDER BY tuple()
INSERT INTO test_zm1mont4.data_02332 (key) VALUES
DROP DATABASE IF EXISTS test_j76cbgkb 
SELECT 'Running test stateless/00914_join_bgranvea.sql from pid=1715' 
INSERT INTO test_table FORMAT JSONCompactStringsEachRowWithNamesAndTypes 
SELECT cutToFirstSignificantSubdomainCustomWithWWWRFC(NULL, NULL);
SELECT hex(toFloat32(99.67));
CREATE TABLE test_3D72693A41213E6535707323227B5477635D7B2225702E7A5E442F374F25694B4534744F22426C32(x UInt8) Engine=Memory;
select toInt64(x) from values('x Nullable(String)', '42', NULL, '0', '', '256');
DROP DATABASE IF EXISTS test_z6hjjj8u 
INSERT INTO ttl_empty_parts SELECT 0, toDate('2005-01-01') + number from numbers(500);
DROP DATABASE IF EXISTS test_ilownhd8 
select 'dst_to_src', 6, 'dst', type, n, _part from dst order by type, n
SELECT tryBase64Decode('Zm9vYmF=Zm9v');
insert into data_proj_order_by_comp values 
SELECT sum(v) AS s FROM group_by_pk GROUP BY k ORDER BY s DESC LIMIT 5 SETTINGS optimize_aggregation_in_order = 0, max_block_size = 1;
INSERT INTO test_01193_18429.table_6_638 VALUES 
create table if not exists right_table engine=Distributed('test_shard_localhost', currentDatabase(), right_table_local) AS right_table_local;
SELECT * FROM orc FORMAT ORC SETTINGS output_format_orc_compression_method='none'
CREATE DATABASE IF NOT EXISTS test_888pdt9g 
CREATE DATABASE IF NOT EXISTS test_ozo1lgcz 
CREATE DATABASE IF NOT EXISTS test_sbzxfcr5 
CREATE TABLE test_3D343263734E28484D222056593B2F2F525E60404377226965694323615F2650234A504E357E6630(x UInt8) Engine=Memory;
EXPLAIN QUERY TREE SELECT cityHash64(a) + 10, b + 3 FROM column_swap_test_test WHERE b = 1 SETTINGS allow_experimental_analyzer = 1;
select 1 = multiSearchAny(materialize('abcdefgh'), ['ab']);
INSERT INTO summing_composite_key VALUES 
CREATE TABLE capnproto_input ( number UInt64, string String, nestedone_nestednumber UInt64, nestedone_nestednestedone_nestednestednumber UInt64, nestedone_nestednestedtwo_nestednestedtext String, nestedtwo_nestednestedtwo_nestednestedtext String, nestedtwo_nestednestedone_nestednestednumber UInt64, nestedtwo_nestedtext String ) ENGINE = Memory
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (110 < 63 AND 28 > 0 ? 110 : 0)), throwIf(last != (110 < 63 AND 28 > 0 ? least(63 - 1, 110 + 28 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(63) LIMIT 110, 28);
SELECT GREATEST(2,0);
CREATE TABLE test_01193_18429.table_4_952 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT bitShiftLeft(if(materialize(1), '123', '123'), 1) from numbers(1);
DROP TABLE IF EXISTS dictionary_source_ru;
select portRFC('[2001:db8::8a2e:370:7334]:80');
CREATE TABLE test_6A254B587728306F7D4670374F2825575D3E5B643B746D4A77212E6A3A2032293F59472E333C5E61(x UInt8) Engine=Memory;
select [1, 0, 0, 0, 0, 1, 2, 22, 8, 17, 1, 13, 0, 0, 0, 0, 0, 5] = multiSearchAllPositions(materialize('wphcobonpgaqwgfenotzadgqezx'), ['', 'qeuycfhkfjwokxgrkaodqioaotkepzlhnrv', 'taehtytq', 'gejlcipocalc', 'poyvvvntrvqazixkwigtairjvxkgouiuva', '', 'phc', 'dg', 'npgaqwg', 'notzadgqe', '', 'wgfe', 'smipuxgvntys', 'qhrfdytbfeujzievelffzrv', 'cfmzw', 'hcywnyguzjredwjbqtwyuhtewuhzkc', 'tssfeinoykdauderpjyxtmb', 'obonpgaqwgfen']) from system.numbers limit 10;
select makeDate(cast(1980.1 as Decimal(20,5)), 9, 17);
SELECT m1['aaa'::FixedString(3)], m2['aaa'::FixedString(3)] FROM t_map_02014;
select count(ignore(*)) from data_02051 settings min_bytes_to_use_direct_io=0, local_filesystem_read_method='pread_threadpool', local_filesystem_read_prefetch=1, read_priority=0, max_read_buffer_size=1048576 ;
alter table many_mutations delete where y = 981 * 2 settings mutations_sync = 0;
SELECT multiIf(1, ['foo', col3], (col1 % 3) = 0, ['foo', col5], [col6, col7]) FROM multi_if_check;
CREATE TABLE dst_0 (`p` UInt64, `k` UInt64, `v` UInt64) ENGINE = ReplicatedMergeTree('/test/01154_move_partition_long_test_uepaqe2p/dst', '0') PARTITION BY p % 10 ORDER BY k SETTINGS index_granularity = 13557, min_bytes_for_wide_part = 756562708, ratio_of_defaults_for_sparse_serialization = 0.35682085156440735, replace_long_file_name_to_hash = false, max_file_name_length = 50, merge_max_block_size = 13985, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 376025, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 6001059207, index_granularity_bytes = 10151118, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 83048, primary_key_compress_block_size = 78650
SELECT * FROM bf_ngram_array_test WHERE has(array, 'K2') SETTINGS force_data_skipping_indices='array_ngram';
CREATE TABLE test_01193_18429.table_5_955 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_8_182 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE DATABASE IF NOT EXISTS test_awms3i2e 
CREATE TABLE test_01193_18429.table_3_472 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
insert into t_tuple_sparse values 
SET max_bytes_before_external_sort = 20000000;
SELECT `number`, `number` % 2, sum(`number`) AS `val` FROM numbers(10) GROUP BY `number`, `number` % 2 WITH CUBE ORDER BY `number` ASC, `number` % 2 ASC, `val` ASC
SELECT 'Running test stateless/02908_Npy_files_caching.sh from pid=1726' 
INSERT INTO test_01193_18429.table_2_691 VALUES 
INSERT INTO test_01193_18429.table_4_733 VALUES 
CREATE DATABASE IF NOT EXISTS test_tnatskoz 
select arraySort(arrayIntersect(arr, [])) from array_intersect order by arr;
SELECT 'Running test stateless/02889_print_pretty_type_names.sql from pid=1726' 
CREATE TABLE tmp (str String) ENGINE = Log;
INSERT INTO r5 SELECT 37 % 10 = 5 ? 37 - 1 : 37
INSERT INTO r5 SELECT 54 % 10 = 5 ? 54 - 1 : 54
SELECT 1 FROM test_table_join_1 AS t1 FULL JOIN test_table_join_2 AS t2 USING (id) RIGHT JOIN test_table_join_3 AS t3 USING(id);
CREATE TABLE test_5024213C6E7D5C766E48483B5D6B3E7B385F27276F5F394B2E674A4A2A32453D2A3369373741793B(x UInt8) Engine=Memory;
SELECT toInt256(123) IN (NULL);
DROP DATABASE IF EXISTS test_7jz0f8m9 
select [0, 10, 1, 0, 0, 0, 0, 0, 10, 0, 15, 2] = multiSearchAllPositionsUTF8(materialize('ÃÂÃÂ³ÃÂ¿ÃÂÃÂ»ÃÂ·ÃÂÃÂ¶ÃÂÃÂ±ÃÂ·ÃÂ²ÃÂÃÂÃÂÃÂÃÂ°ÃÂÃÂ¿ÃÂÃÂÃÂ'), ['ÃÂÃÂ¾ÃÂÃÂ°ÃÂÃÂÃÂ¶ÃÂÃÂ·', 'ÃÂ±ÃÂ·', '', 'ÃÂ¿ÃÂÃÂÃÂÃÂ·ÃÂÃÂ', 'ÃÂ»ÃÂÃÂÃÂ¸ÃÂ¿ÃÂ¼ÃÂÃÂ´ÃÂ¼ÃÂ½ÃÂ ÃÂ½ÃÂ³ÃÂ¹ÃÂ½ÃÂÃÂº', 'ÃÂ°ÃÂ¹ÃÂ¶ÃÂÃÂ½ÃÂÃÂ¹ÃÂ±ÃÂ¹ÃÂÃÂ°ÃÂÃÂÃÂÃÂ´ÃÂ ÃÂ¹', 'ÃÂÃÂ´ÃÂÃÂÃÂ»ÃÂÃÂ¿ÃÂÃÂ¿ÃÂ»ÃÂÃÂ°ÃÂÃÂ²', 'ÃÂ³ÃÂÃÂ²', 'ÃÂ±ÃÂ·ÃÂ²ÃÂÃÂÃÂ', 'ÃÂ±ÃÂÃÂ¼ÃÂ¹ÃÂ¹ÃÂÃÂ´ÃÂÃÂÃÂ°ÃÂÃÂÃÂ³ÃÂ·ÃÂÃÂ²ÃÂÃÂ²ÃÂ·ÃÂ²ÃÂÃÂÃÂÃÂ²ÃÂ½ÃÂ¶ÃÂ', 'ÃÂÃÂÃÂ°ÃÂÃÂ¿ÃÂ', 'ÃÂ³ÃÂ¿ÃÂÃÂ»ÃÂ·ÃÂÃÂ¶ÃÂÃÂ±']) from system.numbers limit 10;
ATTACH TABLE set2;
SELECT 1 / CAST(1, 'Nullable(Decimal(7, 2))');
DROP DATABASE IF EXISTS test_29zlaqg5 
SELECT count() FROM test_01114_1.mt
SELECT number, leadInFrame(number) OVER w AS W FROM numbers(10) WINDOW w AS (ORDER BY number ASC Rows BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) LIMIT 3;
select 1 = multiSearchAny(materialize('abc'), ['b']);
DROP TABLE table_with_unsuccessful_commits
CREATE TABLE test_01193_18429.table_10_573 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_4_276 VALUES 
select round(1000 * ngramSearchCaseInsensitive(materialize('abc'), materialize('')))=round(1000 * ngramSearchCaseInsensitive(materialize('abc'), '')) from system.numbers limit 5;
INSERT INTO test_01193_18429.table_1_623 VALUES 
system sync replica tableOut;
alter table many_mutations delete where y = 584 * 2 settings mutations_sync = 0;
desc format(CSV, '"[NULL, 1]"');
ALTER TABLE concurrent_alter_column ADD COLUMN c103 DOUBLE;
SELECT 2, 6, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (2 < 13 AND 6 > 0 ? 2 : 0)), throwIf(last != (2 < 13 AND 6 > 0 ? least(13 - 1, 2 + 6 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 2, 6);
CREATE TABLE test_5D207A66584A58486B4132677646275F5625587327467B263E542F2F6542405B416872416E6F6939(x UInt8) Engine=Memory;
INSERT INTO tmp SELECT 3, nm FROM dst;
INSERT INTO test_01193_18429.table_9_850 VALUES 
CREATE TABLE rmt1 (`n` UInt8, `m` Int32, `d` Date, `t` DateTime) ENGINE = ReplicatedMergeTree('/test/01165/{database}/rmt', '1') PARTITION BY (n, m, d, t) ORDER BY n SETTINGS index_granularity = 53005, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 23386, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1640282071, index_granularity_bytes = 27159006, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 43090, primary_key_compress_block_size = 87523
SELECT multiIf((number % 2) = 0, toInt64(1), (number % 3) = 0, toUInt16(2), toUInt16(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_6_632 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_7_244 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT maxOrDefaultIf(x, x > 0) FROM (SELECT 1 AS x);
select 'drop_one_part_which_outdated_and_reverted'
SELECT lcm(-15, 10);
DROP TABLE IF EXISTS table_with_version_replicated_1;
select 0 = isValidUTF8(toFixedString('\xF2\x90\x91\x7F', 4)) from system.numbers limit 10;
SELECT t1.key1, t1.key2, t1.key3, t2.key1, t2.key2, t2.key3, t1.s, empty(t2.s) FROM t1 ALL LEFT JOIN t2 ON t1.key1 == t2.key1 AND t1.key2 == t2.key2 AND t1.key3 == t2.key3 AND t1.key1 == t2.key3 ORDER BY t1.key1, t1.key2, t1.key3, t2.key1, t2.key2, t2.key3, t1.s ;
system sync replica tp_2;
CREATE TABLE test_01193_18429.table_7_857 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select t2.*, t3.* from system.one t1 join system.one t2 on t1.dummy = t2.dummy join system.one t3 ON t1.dummy = t3.dummy;
CREATE TABLE test_01193_18429.table_4_819 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT `UserID` FROM `test_c5zukzwt`.`users` WHERE `UserID` IN ((SELECT arrayJoin([1468013291393583084, 1321770221388956068])) AS `_subquery3794`)
INSERT INTO test_01193_18429.table_5_798 VALUES 
INSERT INTO test_01193_18429.table_8_691 VALUES 
CREATE DATABASE IF NOT EXISTS test_lxx8xiyq 
CREATE DATABASE IF NOT EXISTS test_oo6mr7i2 
DROP DATABASE IF EXISTS test_2any45c2 
SELECT 1 IN [1, 2];
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), DT == N as r FORMAT CSV;
CREATE PROFILE s3_01294, s4_01294 TO ALL;
SELECT dateDiff('week', toDate('2017-12-31'), toDate('2017-01-01'));
CREATE TABLE test_7E28294F6B6E2B5731325F2426513A73317B456E495261244D4C31436D7D582A513F3F4331685965(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_m94oej1y 
CREATE INDEX idx_tab2_3 ON tab2 (col0 DESC,col3);
SELECT coalesce(NULL, toDecimal32(6, 0)), coalesce(NULL, toDecimal64(6, 0)), coalesce(NULL, toDecimal128(6, 0));
DROP TABLE alter_table0
CREATE TABLE test_01193_18429.table_7_229 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT ignore([NULL], [NULL], [NULL]);
ALTER TABLE concurrent_alter_column ADD COLUMN c251 DOUBLE;
select count() from test group by _file order by _file settings optimize_group_by_constant_keys=1, enable_software_prefetch_in_aggregation=1, compile_aggregate_expressions=1;
select makeDate32(year, month, day) from (select NULL as year, 2 as month, 3 as day union all select 1984 as year, 2 as month, 3 as day) order by year, month, day;
INSERT INTO test_01193_18429.table_8_57 VALUES 
INSERT INTO test_01193_18429.table_8_945 VALUES 
desc file(02404_data.CustomSeparated) settings input_format_try_infer_integers=0;
CREATE TABLE test_30607869426C745A594B526553324F5D563E4D645E3C677353407951537B613245786F3137583570(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01891_partition_hash_no_long_int.sql from pid=1715' 
DROP TABLE maps
select v, variantElement(v, 'FixedString(4)') from format(TSV, 'v Variant(String, FixedString(4))', '\\N\nstring\nabcd') format TSV;
SELECT t1_id, t1.value, t2_id, t2.value, t3_id, t3.value FROM test_table_join_1 AS t1 INNER JOIN test_table_join_2 AS t2 ON (t1.id AS t1_id) = (t2.id AS t2_id) FULL JOIN test_table_join_3 AS t3 ON t2_id = (t3.id AS t3_id);
CREATE DATABASE IF NOT EXISTS test_e5tcg669 
SELECT a.pk, b.pk, a.dt, b.dt, toTypeName(a.pk), toTypeName(b.pk), toTypeName(materialize(a.dt)), toTypeName(materialize(b.dt)) FROM (SELECT toUInt8(number) > 0 as pk, toNullable(toUInt8(number)) as dt FROM numbers(3)) a ASOF JOIN (SELECT 1 as pk, 2 as dt) b ON a.pk = b.pk AND a.dt >= b.dt ORDER BY a.dt;
CREATE TABLE test_01193_18429.table_1_790 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE DATABASE IF NOT EXISTS test_imek9mhy 
CREATE TABLE test_347A536B4163584C33783A7333567C30526E716428375E6E7D5127756D7E60217D66284A245A5442(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS ttl_table1
SELECT 'anti left';
INSERT INTO test_01193_18429.table_9_758 VALUES 
select 'LIMIT (extemes)';
kill query where query_id = '02450_kill_distributed_query_deadlock_test_ft363ahb-15' sync
SELECT 'Running test stateless/00386_enum_in_pk.sql from pid=1713' 
SELECT * FROM pk WHERE x = 3 AND y = 44 AND z = 4936;
SELECT concat('With ', materialize('2023-11-14 05:50:12.123' :: DateTime64(3, 'Europe/Amsterdam')));
INSERT INTO test_01193_18429.table_7_766 VALUES 
CREATE TABLE test3 (`a` UInt32, `b` Int64) ENGINE = MergeTree PARTITION BY a ORDER BY tuple() SETTINGS index_granularity = 36046, min_bytes_for_wide_part = 225511602, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 6, merge_max_block_size = 14961, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 11220378, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 88109, primary_key_compress_block_size = 48201
CREATE TABLE test_34425D5C39542857752727554F607A3B6325437854512F526532296A6C725D442B245D45373C6F70(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02160_h3_hex_area_Km2.sql from pid=1713' 
INSERT INTO test_01193_18429.table_4_202 VALUES 
create database new_77a9561f856f446baf437074aa228999_database
INSERT INTO t1 SELECT number, number FROM numbers(12, 2);
alter table many_mutations delete where y = 602 * 2 settings mutations_sync = 0;
SELECT INET_NTOA(toUInt32(1337));
SELECT COUNT(*) FROM four_rows_per_granule1;
SELECT '===============';
DROP DATABASE IF EXISTS test_um4hakgq 
alter table mt attach partition id 'all'
CREATE DATABASE IF NOT EXISTS test_royppgz7 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c3) AND c0 AND c6 AND (NOT c2) AND c6) OR (c8 AND c0 AND c6 AND (NOT c6)) OR ((NOT c1)) OR (c0 AND c8 AND (NOT c1) AND (NOT c3) AND c9) OR ((NOT c2) AND (NOT c9) AND (NOT c8)) OR (c9 AND c9 AND c3) OR ((NOT c9) AND c9 AND c7) OR ((NOT c5) AND c8 AND (NOT c8) AND c0 AND c1) SETTINGS convert_query_to_cnf = 1
SELECT multiIf((number % 2) = 0, toFloat64(1), (number % 3) = 0, toInt16(2), toInt8(3)) FROM system.numbers LIMIT 10;
select [1, 1, 2, 3, 4, 0, 0, 0, 0, 0] = groupArray(position('aaaa', 'a', number)) from numbers(10);
CREATE TABLE enum_alter_issue (`a` Enum16('one' = 1, 'two' = 2), `b` Int) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_02012/enum_alter_issue', 'r2') ORDER BY b SETTINGS index_granularity = 43705, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 5196, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 3420037354, index_granularity_bytes = 24376704, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 45803, primary_key_compress_block_size = 74554
SELECT 'Running test stateless/01572_kill_window_function.sh from pid=1714' 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (46 < 1 AND 38 > 0 ? 46 : 0)), throwIf(last != (46 < 1 AND 38 > 0 ? least(1 - 1, 46 + 38 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(1) LIMIT 46, 38);
INSERT INTO test_02908_r1_269 SELECT rand64() FROM numbers(5);
SELECT arrayMap(x -> x + arrayMap(x -> id, [1])[1], [1,2,3]) FROM test_table;
CREATE TABLE test_777A5E7B5B52255D48776B756E7D715F553B6752222F354B214043665E2D526B5029507C66595671(x UInt8) Engine=Memory;
SELECT firstSignificantSubdomain(arrayJoin(['http://usa.gov.com/cgi-bin/yabb.pl?password=qwerty', 'https://www2.pentagon.mil.net/index.phtml', 'ftp://stanford.edu.org/~ivanov/phd-thesis.SHTM']));
CREATE TABLE test_01193_18429.table_4_253 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
ATTACH TABLE codecs9;
CREATE TABLE test_28744A5D4E463C2E3F322C6340633427645C527A2D7279535D4E212762602A5251592E383E653621(x UInt8) Engine=Memory;
SELECT 3_4e+21;
SELECT extractAllGroupsVertical('@#$%^&*', '(\w*)');
CREATE TABLE test_01193_18429.table_10_173 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_oil4qura 
ALTER TABLE concurrent_alter_column ADD COLUMN c140 DOUBLE;
detach table rmt2 sync
SELECT 'non-const';
CREATE TABLE test_2E306E2C29372A332B653D31557258562A602C5A347970203A79252C484C2526355053754F725446(x UInt8) Engine=Memory;
CREATE TABLE xy (`x` int, `y` int) ENGINE = MergeTree PARTITION BY intHash64(x) % 2 ORDER BY y SETTINGS index_granularity = 1, min_bytes_for_wide_part = 132449870, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 9351, prefer_fetch_merged_part_size_threshold = 1465857744, vertical_merge_algorithm_min_rows_to_activate = 802374, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 21261840, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 21255, primary_key_compress_block_size = 35635
SELECT 'Running test stateless/02817_group_array_moving_zero_window_size.sql from pid=1720' 
CREATE TABLE test_01193_18429.table_1_611 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO alter_table0 SELECT 8872, 18
DROP DATABASE IF EXISTS test_jtrvjjol 
DROP TABLE IF EXISTS t_from;
CREATE TABLE test_473D5E733B6C3E7E78555A4266405D59683A37603B592C3334763E563F73222B3C40204B68355244(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS test_00210
CREATE DATABASE IF NOT EXISTS test_av15qdgn 
DROP DATABASE IF EXISTS test_2yd7was3 
DROP DATABASE IF EXISTS test_uazeh25s 
insert into arr_tests_visits (CounterID, StartDate, Sign, VisitID, UserID, VisitVersion, `Test.BannerID`, `Test.Load`, `Test.PuidKey`, `Test.PuidVal`) values 
CREATE TABLE test_587E2F315C3C275C3F327E3B757567512A34685D6256252A526B7E7B293A765F7228326D7B37417D(x UInt8) Engine=Memory;
SELECT * FROM r1;
select (a, c) in tuple(1, tuple(1)) from tab_00386
SELECT 'Running test stateless/02517_wrong_total_structure_crash.sql from pid=1718' 
SELECT splitByString('', 'a==b=c=d', 7) SETTINGS splitby_max_substrings_includes_remaining_string = 1;
SELECT * FROM insert_dedup_token2 ORDER BY id;
/*Check t-stat and p-value and compare it with scipy.stat implementation First: a=1, sigma (not sigma^2)=5, size=500 Second: a=1, sigma = 5, size = 500 */ CREATE TABLE student_ttest (left Float64, right Float64) ENGINE = Memory;
DROP DATABASE IF EXISTS test_rqdg7edg 
CREATE TABLE test_01193_18429.table_4_519 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO retention_test SELECT '2018-08-08', number FROM numbers(60);
DROP DATABASE IF EXISTS test_6lam8cxe 
CREATE INDEX idx_tab3_1 ON tab3 (col3,col4);
SELECT multiIf((number % 2) = 0, toUInt8(1), (number % 3) = 0, toUInt8(2), toFloat32(3)) FROM system.numbers LIMIT 10;
SELECT count() FROM t_in_tuple_index WHERE (PLATFORM, USER_ID) IN (('insta', '33'));
SELECT 'Running test stateless/01852_s2_get_neighbours.sql from pid=1713' 
SELECT na.t.t FROM na, nb;
INSERT INTO test (k) SELECT sleep(1)
SELECT [min(a), max(a)], [min(b), max(b)], [min(c), max(c)] FROM decimal;
SELECT * FROM numbers(34617)
CREATE TABLE test_02908_r2_47 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_47', 'r2') ORDER BY tuple()
SELECT groupUniqArray(*) FROM VALUES(toNullable(0));
ATTACH TABLE bloom_filter_idx_good(`u64` UInt64, `i32` Int32, `f64` Float64, `d` Decimal(10, 2), `s` String, `e` Enum8('a' = 1, 'b' = 2, 'c' = 3), `dt` Date, INDEX bloom_filter_a i32 TYPE bloom_filter(0., 1.) GRANULARITY 1) ENGINE = MergeTree() ORDER BY u64 SETTINGS index_granularity = 8192;
SELECT 'Running test stateless/02541_empty_function_support_ip.sql from pid=1715' 
CREATE DATABASE IF NOT EXISTS test_drjpgqha 
SELECT count() FROM bftest__fuzz_21 WHERE hasAll(x, [42, -42]) SETTINGS use_skip_indexes=1;
CREATE TABLE test_6A59262F3B43723178232F417D7E7D6A383831375173384A234D304A763D43204D7050647C22396F(x UInt8) Engine=Memory;
alter table many_mutations delete where y = 947 * 2 settings mutations_sync = 0;
SELECT 1 WHERE 0=(SELECT number FROM numbers(2) ORDER BY number LIMIT 1) AND 1=(SELECT number FROM numbers(2) ORDER BY number DESC LIMIT 1);
SELECT '*** Create and kill a single invalid mutation ***'
SELECT * FROM (SELECT number AS key FROM numbers(5)) s1 SEMI JOIN dict_hashed d USING(key) ORDER BY key;
SELECT toUInt64(round(exp10(number))) AS x, toString(x) AS s FROM system.numbers LIMIT 10 FORMAT PrettyCompact;
CREATE DATABASE IF NOT EXISTS test_pqc2uepf 
SELECT 'Hello' || ', ' || 'World';
select 'no cleanup 4', * from test order by uid;
SELECT '18446744073709551615', '9223372036854775808.000000000', 18446744073709551615 = 9223372036854775808.000000000, 18446744073709551615 != 9223372036854775808.000000000, 18446744073709551615 < 9223372036854775808.000000000, 18446744073709551615 <= 9223372036854775808.000000000, 18446744073709551615 > 9223372036854775808.000000000, 18446744073709551615 >= 9223372036854775808.000000000, 9223372036854775808.000000000 = 18446744073709551615, 9223372036854775808.000000000 != 18446744073709551615, 9223372036854775808.000000000 < 18446744073709551615, 9223372036854775808.000000000 <= 18446744073709551615, 9223372036854775808.000000000 > 18446744073709551615, 9223372036854775808.000000000 >= 18446744073709551615 , toUInt64(18446744073709551615) = 9223372036854775808.000000000, toUInt64(18446744073709551615) != 9223372036854775808.000000000, toUInt64(18446744073709551615) < 9223372036854775808.000000000, toUInt64(18446744073709551615) <= 9223372036854775808.000000000, toUInt64(18446744073709551615) > 9223372036854775808.000000000, toUInt64(18446744073709551615) >= 9223372036854775808.000000000, 9223372036854775808.000000000 = toUInt64(18446744073709551615), 9223372036854775808.000000000 != toUInt64(18446744073709551615), 9223372036854775808.000000000 < toUInt64(18446744073709551615), 9223372036854775808.000000000 <= toUInt64(18446744073709551615), 9223372036854775808.000000000 > toUInt64(18446744073709551615), 9223372036854775808.000000000 >= toUInt64(18446744073709551615) ;
CREATE DICTIONARY 01913_db.test_dictionary ( id UInt64, value String ) PRIMARY KEY id LAYOUT(DIRECT()) SOURCE(CLICKHOUSE(DB '01913_db' TABLE 'test_source_table_1'));
SELECT 5 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'val', tuple(IPv4StringToNum('255.128.0.0')))
DROP DATABASE IF EXISTS test_vwnqqdqd 
SELECT arraySum(x -> materialize(10), range(number)) FROM system.numbers LIMIT 10;
SELECT leftPad('abc', 0), leftPad('abc', 0::Int32);
WITH INTERVAL 1 SECOND + INTERVAL 1 HOUR + INTERVAL 1 SECOND as expr SELECT expr, toTypeName(expr);
CREATE TABLE test5346 (`Id` String, `Timestamp` DateTime, `updated` DateTime) ENGINE = ReplacingMergeTree(updated) PARTITION BY tuple() ORDER BY (Timestamp, Id) SETTINGS index_granularity = 59325, min_bytes_for_wide_part = 258737284, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 13072, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 3541286125, index_granularity_bytes = 26966030, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 76688, primary_key_compress_block_size = 82016
SELECT 'Running test stateless/02462_number_to_datetype.sql from pid=1713' 
SELECT groupArraySample(NULL);
SELECT globalNullInIgnoreSet([NULL],[NULL]);
CREATE TABLE test_01193_18429.table_9_233 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT accurateCastOrNull(-1, 'DateTime');
CREATE TABLE test_333E41364E557B2344755669765B5D7571656367473F4A5D74663B3B3C7062273C2D644325207441(x UInt8) Engine=Memory;
DROP TABLE DATABASE_IO;
SELECT toInt256(number * -1) * number y, toInt128(y), toInt256(y), toUInt256(y) FROM numbers_mt(10) ORDER BY number;
DROP DATABASE IF EXISTS database_02416;
DROP DATABASE IF EXISTS test_1x3vkf1g 
INSERT INTO r7 SELECT 87 % 10 = 7 ? 87 - 1 : 87
CREATE DICTIONARY hierachical_cache_dictionary ( id UInt64, parent_id Nullable(UInt64) HIERARCHICAL ) PRIMARY KEY id SOURCE(CLICKHOUSE(TABLE 'test_hierarhical_table')) LAYOUT(CACHE(SIZE_IN_CELLS 10)) LIFETIME(0);
SELECT read_rows==2 from system.query_log WHERE query_kind ='Select' AND current_database = currentDatabase() AND endsWith(trimRight(query), 'SELECT * FROM tab WHERE s == \'Alick a01\';') AND type='QueryFinish' AND result_rows==1 LIMIT 1;
DROP TABLE IF EXISTS 01760_db.polygons;
SELECT a, b, sum(s), count() from rollup GROUP BY ROLLUP(a, b) ORDER BY a, b;
 CREATE TABLE tab_02473 (a Int8, b Int32, c Int32, PRIMARY KEY (a)) ENGINE = MergeTree() ORDER BY (a, b) SETTINGS min_bytes_for_wide_part = 0, index_granularity = 9;
INSERT INTO test_01193_18429.table_4_111 VALUES 
SELECT reinterpretAsDateTime(-1);
EXPLAIN QUERY TREE SELECT * FROM 02668_logical_optimizer WHERE a = 1 OR 1 = a;
select * from set_index_not where NOT (NOT (status ='rip'));
SELECT sum(ALL number) FROM numbers(10);
INSERT INTO test_01193_18429.table_10_370 VALUES 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (107 < 60 AND 25 > 0 ? 107 : 0)), throwIf(last != (107 < 60 AND 25 > 0 ? least(60 - 1, 107 + 25 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(60) LIMIT 107, 25);
CREATE DATABASE IF NOT EXISTS test_e0mxmkj6 
SELECT * FROM orc FORMAT ORC
select toTypeName(res), map('a', 1, 'b', 'str_1') as res;
SELECT 'Running test stateless/02813_series_period_detect.sql from pid=1718' 
SELECT 1 
SELECT JSONExtract('{"a":"1234567890123456789999"}', 'a', 'UInt64') as a, toTypeName(a);
SELECT 'Running test stateless/01470_show_databases_like.sql from pid=1705' 
CREATE TABLE test_01193_18429.table_9_738 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT count(*) FROM system.session_log WHERE user = '02834_USER_25758' AND type = 'LoginSuccess' AND interface = 'TCP'
SELECT * FROM ngrambf_v1_hasany_test WHERE hasAny(array, ['this is a test']) SETTINGS force_data_skipping_indices='idx_array_ngrambf_v1';
CREATE TABLE test_01193_18429.table_9_849 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
alter table many_mutations delete where y = 817 * 2 settings mutations_sync = 0;
CREATE TABLE test_01193_18429.table_5_463 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select 0 = multiMatchAny(materialize('abc'), materialize(['de']));
alter user u_01939 default database `NONE`
INSERT INTO testAggregatingMT (*) VALUES 
select (1, 2) in tuple(1, 2);
DROP TABLE IF EXISTS test_race_condition_mv1_3
ALTER TABLE src_10 MOVE PARTITION 0 TO TABLE dst_4
CREATE TABLE test_6F584A2A5535212E63593A53222F3624743C58372E4D263A78562923262C2E287245796A21294170(x UInt8) Engine=Memory;
SELECT * FROM alter_00147 ORDER BY n.x;
SELECT count(), sum(ProfileEvents['AsyncInsertQuery']) FROM system.query_log WHERE event_date >= yesterday() AND type = 'QueryFinish' AND current_database = currentDatabase() AND query ILIKE 'INSERT INTO t_async_insert_02193_1%';
SELECT 'Running test stateless/00017_in_subquery_with_empty_result.sql from pid=1714' 
INSERT INTO test_01193_18429.table_7_121 VALUES 
SELECT avgWeighted(x, w) FROM values('x Int16, w UInt8', (4, 1), (1, 0), (10, 2));
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), N >= toInt8(-1) as r FORMAT CSV;
INSERT INTO r5 SELECT 50
INSERT INTO test_01193_18429.table_6_78 VALUES 
CREATE TABLE test_01193_18429.table_3_365 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE t (`c1` Int64, `c2` String, `c3` DateTime, `c4` Int8, `c5` String, `c6` String, `c7` String, `c8` String, `c9` String, `c10` String, `c11` String, `c12` String, `c13` Int8, `c14` Int64, `c15` String, `c16` String, `c17` String, `c18` Int64, `c19` Int64, `c20` Int64) ENGINE = MergeTree ORDER BY c18 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 107, merge_max_block_size = 2047, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 28061, primary_key_compress_block_size = 91460
select sipHash128Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)) == sipHash128(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30));
SELECT '8' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ff00::')))
CREATE DATABASE IF NOT EXISTS test_vxk05z0e 
select IPv6StringToNum(materialize('')) == toFixedString(materialize(''), 16);
DROP DATABASE IF EXISTS test_kq4lkdqj 
KILL MUTATION WHERE mutation_id='0000000024' and table='concurrent_mutate_kill' and database='test_ivy0esel'
select throwIf(A != 3) from src format Null
SELECT 'with explicit timezone';
INSERT INTO r7 SELECT 66
INSERT INTO tuples FORMAT ORC
CREATE INDEX idx_tab4_2 ON tab4 (col1 DESC,col4 DESC,col0 DESC);
SELECT 'Running test stateless/02960_partition_by_udf.sql from pid=1705' 
SELECT count() FROM 02707_keepermap_delete_update;
INSERT INTO test_01193_18429.table_5_781 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat64(1), toFloat64(2)] WHEN (number % 3) = 0 THEN [toFloat64(2), toFloat64(3)] ELSE [toFloat32(3), toFloat32(3)] END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_10_281 VALUES 
select a, b || b from (select [number] as a, toString(number) as b from system.numbers limit 2);
CREATE TABLE test_02908_r1_124 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_124', 'r1') ORDER BY tuple()
INSERT INTO test_01193_18429.table_4_600 VALUES 
SELECT 20;
SELECT format('The {0} to all questions is {1}', NULL, materialize(NULL :: Nullable(UInt64)));
EXPLAIN PIPELINE SELECT toStartOfMonth(date) as d, i FROM t_read_in_order ORDER BY d DESC, -i LIMIT 5;
DROP DATABASE IF EXISTS test_9uf5bagv 
SELECT 'SLEEP #4 CHECK', ProfileEvents['SleepFunctionCalls'] as calls, ProfileEvents['SleepFunctionMicroseconds'] as microseconds FROM system.query_log WHERE query like '%SELECT ''SLEEP #4 TEST''%' AND type > 1 AND current_database = currentDatabase() AND event_date >= yesterday() FORMAT JSONEachRow;
SELECT toLastDayOfWeek(NULL, NULL, NULL);
CREATE TABLE test_01193_18429.table_2_912 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE DATABASE IF NOT EXISTS test_on23rfl0 
SELECT arrayFirstIndex(x -> 1, emptyArrayString());
CREATE TABLE test_6479767242777A6F20675E255A4722777D6E7C3F212D257071496C2E275F355E6241257A5F4D4732(x UInt8) Engine=Memory;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 52599, 500 settings ignore_materialized_views_with_dropped_target_table=1
INSERT INTO test_01193_18429.table_4_488 VALUES 
INSERT INTO t_sparse_distinct SELECT number, number % 100 = 0 FROM numbers(100000);
CREATE TABLE test_02908_r1_283 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_283', 'r1') ORDER BY tuple()
INSERT INTO test_01193_18429.table_3_723 VALUES 
select 14 as x format TSKV 
select sipHash64Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16)) == sipHash64(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16));
SELECT sum(hasValidSizes17(obj.arr.k1.k2, obj.arr.k1.k4.k5)) == count() FROM t_json_17;
SELECT -34e21;
CREATE TABLE test_52423F21302D49607441476E69585F7B6728465F44623D2B6B597A405B5369337A2437692F512D7B(x UInt8) Engine=Memory;
CREATE TABLE test_7363543925634A374858403E4C475558313A283128426F2859664E42427E794B383D302555634D71(x UInt8) Engine=Memory;
SELECT query, used_row_policies FROM system.query_log WHERE current_database == currentDatabase() AND type == 'QueryStart' AND query_kind == 'Select' ORDER BY event_time_microseconds;
CREATE TABLE test ( c1 String, c2 String, c3 String ) ENGINE = ReplacingMergeTree ORDER BY (c1, c3);
select substringIndex(materialize('www.clickhouse.com'), '.', materialize(4));
select v, variantElement(v, 'Bool') from format(JSONEachRow, 'v Variant(String, Bool)', '{"v" : null}, {"v" : "string"}, {"v" : true}') format JSONEachRow;
CREATE TABLE test_01193_18429.table_10_203 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_10_412 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
set check_table_dependencies=0;
CREATE TABLE test_01193_18429.table_7_493 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
alter table many_mutations delete where y = 783 * 2 settings mutations_sync = 0;
SELECT 'Running test stateless/02950_obfuscator_keywords_more.sh from pid=1718' 
CREATE TABLE test_625C655B25345E2E685523502A2852543621425F74225964435C29614E38502264707A572E262773(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_7_844 VALUES 
CREATE DATABASE IF NOT EXISTS test_6m9z4j16 
SELECT t1.*, t2.* FROM t1 ANY INNER JOIN t2 USING(x) ORDER BY t1.x, t2.x;
ALTER PROFILE s1_01294 TO u1_01294;
detach table rmt sync;
DROP TABLE IF EXISTS a1;
insert into test_02481_mismatch_files values 
CREATE DATABASE IF NOT EXISTS test_3ex1dzey 
DROP TABLE roundtrip_no_length_delimiter_protobuf_00825;
desc file(02404_data.TSVWithNames) settings input_format_try_infer_integers=0;
CREATE TABLE test_01193_18429.table_1_429 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select sum(abs(cbrt(x * x * x) - x) < 1.0e-9) / count() from system.one array join range(1000000) as x;
CREATE TABLE IF NOT EXISTS testTable (`A` String, `B` Int64) ENGINE = MergeTree ORDER BY A SETTINGS index_granularity = 14244, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 4326, prefer_fetch_merged_part_size_threshold = 3357237818, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 7076703497, index_granularity_bytes = 2316962, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 89028, primary_key_compress_block_size = 80560
DROP TABLE lower_test;
INSERT INTO r3 SELECT 10 % 10 = 3 ? 10 - 1 : 10
CREATE DATABASE IF NOT EXISTS test_qfwud4mk 
INSERT INTO alter_table1 SELECT 2000, 25
CREATE TABLE test_306877797B765F697C5B793465776A4359736829214A7B35677C4E446C272A4949204D58793F3929(x UInt8) Engine=Memory;
SELECT 'text' AS x, toDate('2020-01-01') AS y, toUInt32(1) AS z FORMAT RowBinaryWithNamesAndTypes
CREATE TABLE test_20792D5C3B767E5F2443237A51382C454F4244696331476B5D484A2A3A21295E722E27374C574A71(x UInt8) Engine=Memory;
SELECT 'aes-256-ecb' AS mode, hex(encrypt(mode, '[HIDDEN]')) FROM encryption_test
CREATE TABLE test_3E244E51233A2D3A6E52737528695B35446370654D54454C704754594453413B5C417E72786E2C70(x UInt8) Engine=Memory;
drop table if exists local;
DROP TABLE IF EXISTS encryption_test;
ALTER TABLE table_with_single_pk DELETE WHERE key % 77 = 0 SETTINGS mutations_sync = 1;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (68 < 10 AND 66 > 0 ? 68 : 0)), throwIf(last != (68 < 10 AND 66 > 0 ? least(10 - 1, 68 + 66 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(10) LIMIT 68, 66);
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a ANTI RIGHT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d USING (id) ;
select if(number % 5 == 0, toDecimal256OrZero(toString(number), 5), toDecimal256OrZero(toString(number + 1), 5)) from numbers(20);
SELECT toDateTimeOrNull('');
INSERT INTO map_containsKeyLike_test VALUES 
SELECT count() FROM test5;
INSERT INTO test_01193_18429.table_8_412 VALUES 
SELECT 'select all values as input stream';
select CAST(number % 2 ? '0000:0000:0000:0000:0000:0000:0000:0000' : NULL, 'Nullable(IPv6)') from numbers(2);
EXPLAIN SYNTAX SELECT * from executable('', 'JSON', 'data String', SETTINGS max_command_execution_time=100);
CREATE TABLE test_01193_18429.table_3_984 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT t1_id, t1.value, t2_id, t2.value FROM test_table_join_1 AS t1 RIGHT JOIN test_table_join_2 AS t2 ON (t1.id AS t1_id) = (t2.id AS t2_id);
CREATE TABLE test_5B684B225D20443B686544595745703635313B5B2D2A75357C2E2679756F3C3C615D5D3B787D372E(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_3_721 VALUES 
CREATE TABLE test_3B3B352721752F584B664B3F693C3D2144406F4E7445326C60266F76342356597B662D2539274650(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_9_316 VALUES 
select 6, n, _part from rmt2 order by n;
SELECT arrayExists(`x` -> (`x` IN ((SELECT '2') AS `_subquery215`)), [2]) FROM `system`.`one` GROUP BY arrayExists(`x` -> (`x` IN ((SELECT '2') AS `_subquery216`)), [2])
DROP TABLE IF EXISTS src_1
SELECT 'Running test stateless/02505_forbid_paths_in_datetime_timezone.sql from pid=1722' 
CREATE TABLE test_01193_18429.table_1_774 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_5_3 VALUES 
DROP DATABASE IF EXISTS test_cvrx9cb9 
RENAME TABLE test_01155_atomic.dist TO test_01155_ordinary.dist;
CREATE TABLE test_2422584F6F3C6E2B23605B5D396E2F5A475D2D227D407077755D417E7C68496B286E31403868545F(x UInt8) Engine=Memory;
CREATE TABLE IF NOT EXISTS table_to_merge_b (`id` UInt64, `val` String) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 9961, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 31, merge_max_block_size = 19087, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 28226842, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 93570, primary_key_compress_block_size = 43248
SELECT multiIf((number % 2) = 0, [toInt64(1), toInt64(2)], (number % 3) = 0, [toUInt8(2), toUInt8(3)], [toInt32(3), toInt32(3)]) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_9_738 VALUES 
CREATE TABLE test_01193_18429.table_2_886 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT JSONKey('{"a": "hello", "b": [-100, 200.0, 300]}', -2);
SELECT 'Running test stateless/00120_join_and_group_by.sql from pid=1724' 
CREATE TABLE IF NOT EXISTS regular_mt_table (`x` String) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 9961, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 31, merge_max_block_size = 19087, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 28226842, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 93570, primary_key_compress_block_size = 43248
CREATE DICTIONARY 02015_db.test_dictionary ( key_column UInt64 DEFAULT 0, data_column_1 UInt64 DEFAULT 1, data_column_2 UInt8 DEFAULT 1 ) PRIMARY KEY key_column LAYOUT(DIRECT()) SOURCE(CLICKHOUSE(DB '02015_db' TABLE 'test_table'));
CREATE TABLE t_cache_sparse (`id` UInt64, `v` UInt64) ENGINE = MergeTree ORDER BY id SETTINGS ratio_of_defaults_for_sparse_serialization = 0.9, index_granularity = 19138, min_bytes_for_wide_part = 0, replace_long_file_name_to_hash = true, max_file_name_length = 43, merge_max_block_size = 9807, prefer_fetch_merged_part_size_threshold = 3587874212, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 28396074, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 41336, primary_key_compress_block_size = 18899
SELECT coalesce([NULL],[NULL]);
SELECT 6
DROP DATABASE IF EXISTS test_gidi8pc5 
insert into T values 
select accurateCastOrNull('2001:db8::1x', 'IPv6');
CREATE TABLE test_5A642264335E7B53282435237B346877273E354A70452626517C312548505E3239796221317B3757(x UInt8) Engine=Memory;
SELECT COUNT(*) FROM test1.`02722_database_filesystem_test_wkwv3862/tmp_numbers_*.csv`;
DROP DATABASE IF EXISTS test_fpi785mf 
DROP TABLE r_lc;
SELECT 232 FROM test54378 PREWHERE (part_date = (SELECT toDate('2018-04-19'))) IN (SELECT toDate('2018-04-19')) GROUP BY toDate(toDate(-2147483649, NULL), NULL), -inf;
CREATE TABLE product_fp32_fp64 (`x` Array(Float32), `y` Array(Float64)) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 5220, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 17358, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 310041, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 4597258760, index_granularity_bytes = 23737711, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 9499, primary_key_compress_block_size = 11717
SELECT written_rows FROM system.query_log WHERE current_database = currentDatabase() AND query LIKE 'INSERT INTO /* test 01413, query 1 */ rows_events_test%' AND type = 2 AND event_date >= yesterday() ORDER BY event_time DESC LIMIT 1;
DROP DATABASE IF EXISTS test_owwy7w2o 
INSERT INTO test_01193_18429.table_2_233 VALUES 
SYSTEM STOP MERGES test_table_join_1;
INSERT INTO src_4 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 96
CREATE TABLE test_3E7C53763F475934772136585A6B20257C7164343D6928305D2A327E4A59573574502538477D2271(x UInt8) Engine=Memory;
SELECT exp10(NULL);
CREATE TABLE test_01193_18429.table_6_647 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select 1 = isValidUTF8('\x7F') from system.numbers limit 10;
INSERT INTO test_01193_18429.table_2_567 VALUES 
SELECT map('key1', number, 'key2', number * 2) AS m, toJSONString(m) AS s, isValidJSON(s) FROM numbers(1, 1) SETTINGS output_format_json_quote_64bit_integers = 0;
SELECT 'Running test stateless/00206_empty_array_to_single.sql from pid=1720' 
DROP DATABASE IF EXISTS test_7ewi5ikr 
system sync database replica test_3eb2h3zx_repl_01111_11
explain pipeline select distinct b, 1 as x from distinct_in_order_explain order by x
SELECT 'Running test stateless/02704_max_backup_bandwidth.sh from pid=1720' 
DROP DATABASE IF EXISTS test_8petjvdx 
DROP TABLE local_table;
SELECT 'Running test stateless/02560_with_fill_int256_int.sql from pid=1715' 
INSERT INTO t_sparse SELECT number, number, toString(number) FROM numbers (1, 100000);
SELECT 'errors';
DROP DATABASE IF EXISTS test_cvo37nu8 
INSERT INTO check_table_test (value2) SELECT value FROM system.events WHERE event = 'Merge';
CREATE TABLE test_01193_18429.table_8_93 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
desc s3Cluster('test_cluster_two_shards_localhost', 'http://localhost:11111/test/{a,b,c}.tsv', 'TSV');
SELECT sum(cityHash64(*)) > 1 FROM sticking_mutations WHERE key > 10
CREATE TABLE test_02908_r1_295 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_295', 'r1') ORDER BY tuple()
CREATE USER u3_01292 DEFAULT ROLE ALL IDENTIFIED WITH no_password SETTINGS NONE HOST ANY;
SELECT 'Running test stateless/02346_into_outfile_and_stdout.sh from pid=1726' 
INSERT INTO test_02908_r1_118 SELECT rand64() FROM numbers(5);
WITH x -> toString(id) AS lambda SELECT arrayMap(x -> arrayMap(y -> concat(lambda(x), '_', lambda(y)), [1,2,3]), [1,2,3]) FROM test_table;
CREATE TABLE test_6932373B636C78353F6A7E7A384653405A5673684B64244857383037223A557838304C7731654B3B(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_1_417 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT intDivOrZero(4, toDecimal128(2.2, 3));
DROP DATABASE IF EXISTS test_2l8kb2zk 
CREATE TABLE test_01193_18429.table_2_849 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE B (`k` UInt32, `t` Decimal32(5), `b` Float64) ENGINE = MergeTree ORDER BY (k, t) SETTINGS index_granularity = 57643, min_bytes_for_wide_part = 636221231, ratio_of_defaults_for_sparse_serialization = 0.34237709641456604, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 6784, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 2424484770, index_granularity_bytes = 8067457, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 32242, primary_key_compress_block_size = 12095
SELECT x, -x, y FROM ( SELECT 5 AS x, 'Hello' AS y ) ORDER BY x ASC WITH FILL FROM 3 TO 7, y ASC, -x ASC WITH FILL FROM -10 TO -1;
CREATE TABLE test_01193_18429.table_6_203 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_2_372 VALUES 
select 11 as offset, toFixedString('Hello', 6) as s, subString(bin(s), offset), bin(bitSlice(s, offset));
EXPLAIN PLAN actions=1, header=1, sorting=1 SELECT a FROM optimize_sorting ORDER BY a
DROP DATABASE IF EXISTS test_whxk9c67 
CREATE TABLE test_01193_18429.table_7_743 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'Running test stateless/02990_format_select_from_explain.sh from pid=1715' 
SELECT medianBFloat16Weighted(NULL, NULL);
CREATE DATABASE IF NOT EXISTS test_nkaqyako 
CREATE TABLE test_01193_18429.table_4_692 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP DATABASE test_01054_overflow;
SELECT 1 FROM remote('127.0.0.2', system.one) WHERE (1, 1) GLOBAL IN (SELECT 1 AS a, a);
SELECT 'Running test stateless/01415_table_function_view.sql from pid=1713' 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c5) AND (NOT c8)) OR (c8 AND c2 AND c3 AND c3 AND c3) SETTINGS convert_query_to_cnf = 1
DROP DATABASE IF EXISTS test_fgfyp2an 
SELECT 'Running test stateless/02001_hostname_test.sql from pid=1726' 
SELECT multiSearchAnyCaseInsensitive(NULL, NULL);
DROP TABLE map_comb;
INSERT INTO test_01193_18429.table_5_757 VALUES 
alter table lc_null_int8_defnull add column val2 LowCardinality(Nullable(Int8)) DEFAULT NULL;
SELECT toDate('2017-01-01') - INTERVAL number - 15 YEAR AS x FROM system.numbers LIMIT 30;
CREATE TABLE test_01193_18429.table_5_953 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT '----Test lighweight delete is disabled if table has projections-----';
SELECT first_value_respect_nullsMerge(t) FROM (Select first_value_respect_nullsState(NULL::Nullable(UInt8)) as t FROM numbers(5));
SELECT toString(toTime(toDateTime(1420102800), 'Asia/Tokyo'), 'Asia/Tokyo'), toString(toTime(toDateTime(1428310800), 'Asia/Tokyo'), 'Asia/Tokyo');
INSERT INTO r5 SELECT 84 % 10 = 5 ? 84 - 1 : 84
CREATE TABLE test_2F4D7E4627455772553823494B5A377B253C7E23364440434C3132202158605252647D707C443520(x UInt8) Engine=Memory;
SELECT timestamp('2013-12-31 12:00:00', '12:01:02.111111');
INSERT INTO r4 SELECT 81 % 10 = 4 ? 81 - 1 : 81
INSERT INTO test_01193_18429.table_1_755 VALUES 
INSERT INTO test_01193_18429.table_9_859 VALUES 
SELECT 'TABLE', query_duration_ms >= 250 FROM system.query_log WHERE current_database = currentDatabase() AND event_date >= yesterday() AND query LIKE '-- INSERT USING VALUES%' AND type = 'QueryFinish' LIMIT 1;
CREATE TABLE test_2D593A2F2C2850454A58742E34505B592A285B2C347B3E58272E54754C6C49255B42522F58372A63(x UInt8) Engine=Memory;
SELECT format('The {0} to all questions is {1}.', 'answer', materialize(50 :: UInt32));
SELECT toDateTime('2017-06-28 12:01:01') > toDate('2017-07-01');
CREATE DATABASE IF NOT EXISTS test_oyylu76l 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c6)) OR ((NOT c1)) OR ((NOT c5) AND c8 AND (NOT c2)) OR ((NOT c8) AND (NOT c3) AND c9 AND c0) OR ((NOT c4) AND c3 AND (NOT c6)) OR (c8 AND (NOT c0)) SETTINGS convert_query_to_cnf = 0
SELECT 'Running test stateless/00975_move_partition_merge_tree.sql from pid=1713' 
EXPLAIN SYNTAX SELECT value1 FROM date_t WHERE 1993 > toYear(date1) AND id BETWEEN 1 AND 3;
SELECT 't1 ALL LEFT JOIN tn2 | bs = 9';
select toValidUTF8('\xED\x9F\x80') from system.numbers limit 10;
CREATE TABLE test_01193_18429.table_10_612 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_5_763 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_02908_r1_100 SELECT rand64() FROM numbers(5);
INSERT INTO test_01193_18429.table_4_11 VALUES 
CREATE WINDOW VIEW test_kna0pcoi.wv INNER ENGINE = AggregatingMergeTree ORDER BY tumble(timestamp, toIntervalSecond('1')) ENGINE = Memory AS SELECT count(a), tumbleEnd(wid) AS count FROM test_kna0pcoi.mt GROUP BY tumble(timestamp, toIntervalSecond('1')) AS wid
SELECT hasToken('hay!hay!hay!hay!hay!hay!hay!hay!hay!needle!hay!hay!hay!hay!hay!hay!hay!hay!hay', 'needle'), ' expecting ', 1;
EXPLAIN QUERY TREE (SELECT 2 * count(float64) + sum(float64) From test_table);
select formatDateTime(toDate('2022-12-08 18:11:29', 'UTC'), '%F %T.%f');
select bitmapToArray(subBitmap(bitmapBuild([1,5,7,9]), toUInt32(1), toUInt64(4)));
INSERT INTO test_01193_18429.table_1_331 VALUES 
SELECT (NOT 0) + (NOT 0);
EXPLAIN SYNTAX SELECT t1.value FROM (SELECT transform(number, [2, 4, 6], ['google', 'censor.net', 'yahoo'], 'other') as value FROM system.numbers LIMIT 10) as t1;
select concat(toFixedString('a', 1), materialize(toFixedString('b', 1)), materialize(toFixedString('c', 1))) == 'abc';
CREATE DATABASE IF NOT EXISTS test_5fbhzonv 
DROP DATABASE IF EXISTS test_htcarqgx 
SELECT CASE WHEN (number % 2) = 0 THEN toInt32(1) WHEN (number % 3) = 0 THEN toInt16(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
alter table data_01900_1 update s = 'foo_23' where 1;
SELECT count() FROM ( SELECT * FROM (SELECT * FROM ( SELECT cache_path, file_size, tupleElement(file_segment_range, 2) - tupleElement(file_segment_range, 1) + 1 as file_segment_size, formatReadableSize(file_size) as formatted_file_size, formatReadableSize(file_segment_size) as formatted_file_segment_size, tupleElement(file_segment_range, 2) as end_offset FROM ( SELECT arrayJoin(cache_paths) AS cache_path, local_path, remote_path, size as file_size FROM system.remote_data_paths WHERE endsWith(local_path, '.bin') ) AS data_paths INNER JOIN system.filesystem_cache_log AS cache_log ON data_paths.remote_path = cache_log.source_file_path WHERE query_id = '1374' )) AS cache_log INNER JOIN system.filesystem_cache AS cache ON cache_log.cache_path = cache.cache_path ) WHERE file_segment_size < file_size AND file_segment_range_end + 1 != file_size;
SELECT count() FROM `test_4zufzi3e`.`dist_layer_01223`
INSERT INTO test_7zv1ifdo.async_insert_mt_test SETTINGS async_insert = 1, wait_for_async_insert = 1, async_insert_busy_timeout_ms = 100, async_insert_busy_timeout_min_ms = 500 FORMAT Values
select * from file(dump14.sql, MySQLDump) settings input_format_mysql_dump_table_name='test', max_threads=1
SELECT * FROM remote('127.0.0.{2|3|4}', currentDatabase(), t);
INSERT INTO test_01193_18429.table_1_61 VALUES 
CREATE TABLE test_7B437D432C4B636B795D6E2F57524830703F36363D713F244B784F6B767825552B61505C6C78477E(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_8_171 VALUES 
CREATE TABLE test_4E33635D3E595A4E335F50272A6270456C29532260303D697B24613F663E5E582C4E672136512321(x UInt8) Engine=Memory;
SELECT arrayDistinct(groupArray(dictGet('db_01501.cache_dict', 'Decimal128_', toUInt64(number)))) from numbers(10);
CREATE DATABASE IF NOT EXISTS test_uhseye8v 
select number % 2 and toLowCardinality(number) from numbers(5);
create table src_02224 (key Int) engine=Memory();
SELECT materialize(toDateTime('2015-02-03 06:07:08')) >= '2015-02-03 05:06:07';
INSERT INTO test_01193_18429.table_10_244 VALUES 
EXPLAIN SYNTAX SELECT number, square_number FROM ( WITH number * 2 AS square_number SELECT number, square_number FROM numbers_indexed) AS squares WHERE number = 999;
INSERT INTO date VALUES 
CREATE TABLE test_01193_18429.table_3_780 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toRelativeSecondNum(N, 'Asia/Istanbul') as r FORMAT CSV;
SELECT * FROM orc_nullable_arrays
INSERT INTO test_table_8 VALUES 
SELECT count() FROM t_cnf_fuzz WHERE (c9 AND c6) OR (c3 AND c4 AND (NOT c1) AND c6 AND (NOT c1)) OR ((NOT c9) AND (NOT c8) AND c4) OR ((NOT c6) AND c6 AND c6 AND c3) OR (c5 AND (NOT c6) AND (NOT c8) AND c3) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_3D793C4B385448343D7B657A5A764C78686C5841526E4F7A6B707C3E7E4E313D223E71473C4B233C(x UInt8) Engine=Memory;
INSERT INTO src VALUES /* (-3, 1) */ 
CREATE TABLE test_01193_18429.table_8_963 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT toDecimal32(12345.6789, 4) AS x, trunc(x), trunc(x, 1), trunc(x, 2), trunc(x, 3), trunc(x, 4), trunc(x, 5);
CREATE TABLE test_6E21683C4D5235315D50214C413B54453B763C7963704F7B434B695A2E27346E62597945704B4D44(x UInt8) Engine=Memory;
SELECT nullIf(toDecimal32(1, 0), toNullable(toDecimal32(2, 0))), nullIf(toDecimal64(1, 0), toNullable(toDecimal64(2, 0)));
SELECT 75;
INSERT INTO test_01193_18429.table_9_650 VALUES 
CREATE DATABASE IF NOT EXISTS test_1b3fgcmg 
SELECT parseDateTime32BestEffortOrZero('Dec 15, 2021') AS a, toTypeName(a);
INSERT INTO r10 SELECT 19
SELECT CAST((1, 'Hello') AS Tuple(x UInt64, s String)) AS t, toTypeName(t), t.1, t.2, tupleElement(t, 'x'), tupleElement(t, 's');
select toTypeName(res), if(materialize(NULL::Nullable(UInt8)), materialize([1,2,3]), 'str_1') as res;
SELECT JSON_EXISTS('{"hello":["world"]}', '$.hello[1]');
SELECT uniqArray([0, 1, 1], [0, 1, 1], [0, 1, 0]);
SELECT `__table1`.`key` AS `key`, `__table1`.`value` AS `value`, `__table3`.`key` AS `r.key`, `__table3`.`value` AS `r.value` FROM (SELECT `__table2`.`key` AS `key`, `__table2`.`value` AS `value` FROM `test_49nwqtsw`.`num_1` AS `__table2`) AS `__table1` GLOBAL ALL INNER JOIN `_data_9614713356636935702_12346678718639465084` AS `__table3` ON `__table1`.`key` = `__table3`.`key` ORDER BY `__table1`.`key` ASC LIMIT _CAST(10000, 'UInt64'), _CAST(10, 'UInt64') SETTINGS allow_experimental_analyzer = 1, parallel_replicas_prefer_local_join = 0, send_logs_level = 'trace', allow_experimental_parallel_reading_from_replicas = 2, max_parallel_replicas = 2, parallel_replicas_for_non_replicated_merge_tree = 1, cluster_for_parallel_replicas = 'test_cluster_one_shard_three_replicas_localhost', join_algorithm = 'full_sorting_merge'
SELECT count() FROM test2;
CREATE OR REPLACE DICTIONARY test_01915_db.test_dictionary ( id UInt64, value_1 String ) PRIMARY KEY id LAYOUT(HASHED()) SOURCE(CLICKHOUSE(DB 'test_01915_db' TABLE 'test_source_table_2')) LIFETIME(0);
SELECT test_table_join_1.id, test_table_join_1.value, test_table_join_2.id, test_table_join_2.value, test_table_join_3.id, test_table_join_3.value FROM test_table_join_1 FULL JOIN test_table_join_2 ON test_table_join_1.id = test_table_join_2.id LEFT JOIN test_table_join_3 ON test_table_join_2.id = test_table_join_3.id;
INSERT INTO test_01193_18429.table_8_840 VALUES 
INSERT INTO test_01193_18429.table_6_199 VALUES 
alter table data_01900_2 update s = 'bar_67' where 1;
SELECT 'FixedString ConstConst';
select status from refreshes where view = 'b' -- 111
SELECT 2147483647, 18446744073709551615, 2147483647 = 18446744073709551615, 2147483647 != 18446744073709551615, 2147483647 < 18446744073709551615, 2147483647 <= 18446744073709551615, 2147483647 > 18446744073709551615, 2147483647 >= 18446744073709551615, 18446744073709551615 = 2147483647, 18446744073709551615 != 2147483647, 18446744073709551615 < 2147483647, 18446744073709551615 <= 2147483647, 18446744073709551615 > 2147483647, 18446744073709551615 >= 2147483647 , toUInt32(2147483647) = toUInt64(18446744073709551615), toUInt32(2147483647) != toUInt64(18446744073709551615), toUInt32(2147483647) < toUInt64(18446744073709551615), toUInt32(2147483647) <= toUInt64(18446744073709551615), toUInt32(2147483647) > toUInt64(18446744073709551615), toUInt32(2147483647) >= toUInt64(18446744073709551615), toUInt64(18446744073709551615) = toUInt32(2147483647), toUInt64(18446744073709551615) != toUInt32(2147483647), toUInt64(18446744073709551615) < toUInt32(2147483647), toUInt64(18446744073709551615) <= toUInt32(2147483647), toUInt64(18446744073709551615) > toUInt32(2147483647), toUInt64(18446744073709551615) >= toUInt32(2147483647) , toInt32(2147483647) = toUInt64(18446744073709551615), toInt32(2147483647) != toUInt64(18446744073709551615), toInt32(2147483647) < toUInt64(18446744073709551615), toInt32(2147483647) <= toUInt64(18446744073709551615), toInt32(2147483647) > toUInt64(18446744073709551615), toInt32(2147483647) >= toUInt64(18446744073709551615), toUInt64(18446744073709551615) = toInt32(2147483647), toUInt64(18446744073709551615) != toInt32(2147483647), toUInt64(18446744073709551615) < toInt32(2147483647), toUInt64(18446744073709551615) <= toInt32(2147483647), toUInt64(18446744073709551615) > toInt32(2147483647), toUInt64(18446744073709551615) >= toInt32(2147483647) , toUInt64(2147483647) = toUInt64(18446744073709551615), toUInt64(2147483647) != toUInt64(18446744073709551615), toUInt64(2147483647) < toUInt64(18446744073709551615), toUInt64(2147483647) <= toUInt64(18446744073709551615), toUInt64(2147483647) > toUInt64(18446744073709551615), toUInt64(2147483647) >= toUInt64(18446744073709551615), toUInt64(18446744073709551615) = toUInt64(2147483647), toUInt64(18446744073709551615) != toUInt64(2147483647), toUInt64(18446744073709551615) < toUInt64(2147483647), toUInt64(18446744073709551615) <= toUInt64(2147483647), toUInt64(18446744073709551615) > toUInt64(2147483647), toUInt64(18446744073709551615) >= toUInt64(2147483647) , toInt64(2147483647) = toUInt64(18446744073709551615), toInt64(2147483647) != toUInt64(18446744073709551615), toInt64(2147483647) < toUInt64(18446744073709551615), toInt64(2147483647) <= toUInt64(18446744073709551615), toInt64(2147483647) > toUInt64(18446744073709551615), toInt64(2147483647) >= toUInt64(18446744073709551615), toUInt64(18446744073709551615) = toInt64(2147483647), toUInt64(18446744073709551615) != toInt64(2147483647), toUInt64(18446744073709551615) < toInt64(2147483647), toUInt64(18446744073709551615) <= toInt64(2147483647), toUInt64(18446744073709551615) > toInt64(2147483647), toUInt64(18446744073709551615) >= toInt64(2147483647) 
CREATE TABLE test_765A27672C59783268364D6B5B342B6C662E5A3D637468663164775351432A4C734559636879324B(x UInt8) Engine=Memory;
select 1 = isValidUTF8(toFixedString('some text', 9)) from system.numbers limit 10;
SELECT 'Running test stateless/02976_system_zookeeper_filters.sql from pid=1705' 
SELECT dictHas('database_for_range_dict.range_dictionary', toUInt64(2), toDate('2019-05-31'));
CREATE DATABASE IF NOT EXISTS test_sn7x8qjd 
SELECT arrayFirst(x -> materialize(0), arrayMap(x -> toString(x), [1, 2, 3]));
ALTER TABLE concurrent_alter_column ADD COLUMN c254 DOUBLE;
SELECT 'Running test stateless/01127_month_partitioning_consistency_select.sql from pid=1705' 
SELECT studentTTest(NULL, NULL, NULL);
DROP DATABASE IF EXISTS test_4weatv38 
SELECT cutURLParameter(materialize('http://bigmir.net/?a=b&c=d'), 'a'), cutURLParameter(materialize('http://bigmir.net/?a=b&c=d'), 'c'), cutURLParameter(materialize('http://bigmir.net/?a=b&c=d#e=f'), 'e'), cutURLParameter(materialize('http://bigmir.net/?a&c=d#e=f'), 'a'), cutURLParameter(materialize('http://bigmir.net/?a&c=d#e=f'), 'c'), cutURLParameter(materialize('http://bigmir.net/?a&c=d#e=f'), 'e'), cutURLParameter(materialize('http://bigmir.net/?a=b&c=d#e=f&g=h'), 'g'), cutURLParameter(materialize('http://bigmir.net/?a=b&c=d#e'), 'a'), cutURLParameter(materialize('http://bigmir.net/?a=b&c=d#e'), 'c'), cutURLParameter(materialize('http://bigmir.net/?a=b&c=d#e'), 'e'), cutURLParameter(materialize('http://bigmir.net/?a=b&c=d#e&g=h'), 'c'), cutURLParameter(materialize('http://bigmir.net/?a=b&c=d#e&g=h'), 'e'), cutURLParameter(materialize('http://bigmir.net/?a=b&c=d#e&g=h'), 'g'), cutURLParameter(materialize('http://bigmir.net/?a=b&c=d#test?e=f&g=h'), 'test'), cutURLParameter(materialize('http://bigmir.net/?a=b&c=d#test?e=f&g=h'), 'e'), cutURLParameter(materialize('http://bigmir.net/?a=b&c=d#test?e=f&g=h'), 'g'), cutURLParameter(materialize('//bigmir.net/?a=b&c=d'), 'a'), cutURLParameter(materialize('//bigmir.net/?a=b&c=d'), 'c'), cutURLParameter(materialize('//bigmir.net/?a=b&c=d#e=f'), 'e'), cutURLParameter(materialize('//bigmir.net/?a&c=d#e=f'), 'a'), cutURLParameter(materialize('//bigmir.net/?a&c=d#e=f'), 'c'), cutURLParameter(materialize('//bigmir.net/?a&c=d#e=f'), 'e'), cutURLParameter(materialize('//bigmir.net/?a=b&c=d#e=f&g=h'), 'g'), cutURLParameter(materialize('//bigmir.net/?a=b&c=d#e'), 'a'), cutURLParameter(materialize('//bigmir.net/?a=b&c=d#e'), 'c'), cutURLParameter(materialize('//bigmir.net/?a=b&c=d#e'), 'e'), cutURLParameter(materialize('//bigmir.net/?a=b&c=d#e&g=h'), 'c'), cutURLParameter(materialize('//bigmir.net/?a=b&c=d#e&g=h'), 'e'), cutURLParameter(materialize('//bigmir.net/?a=b&c=d#e&g=h'), 'g'), cutURLParameter(materialize('//bigmir.net/?a=b&c=d#test?e=f&g=h'), 'test'), cutURLParameter(materialize('//bigmir.net/?a=b&c=d#test?e=f&g=h'), 'e'), cutURLParameter(materialize('//bigmir.net/?a=b&c=d#test?e=f&g=h'), 'g');
INSERT INTO test_vix8ahwv.t_async_insert_02193_1 FORMAT Values
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toUInt64(1) == N as r FORMAT CSV;
CREATE DATABASE IF NOT EXISTS test_ljx8uz9y 
DROP DATABASE IF EXISTS test_pcxh2818 
SELECT least(toInt8(127), toInt128(0)) x, least(toInt8(127), toInt128(128)) x2, least(toInt8(-128), toInt128(0)) x3, least(toInt8(-128), toInt128(-129)) x4, greatest(toInt8(127), toInt128(0)) y, greatest(toInt8(127), toInt128(128)) y2, greatest(toInt8(-128), toInt128(0)) y3, greatest(toInt8(-128), toInt128(-129)) y4, toTypeName(x), toTypeName(y);
select array, d1, a1, a2, a3, a4, a5, a6 from aliases_test array join a2 as a2;
SELECT bitmapHasAll(NULL, NULL);
DROP TABLE as_foo;
SELECT 'Running test stateless/02164_clickhouse_local_interactive_exception.expect from pid=1724' 
DROP DATABASE IF EXISTS test_ox9yf6g4 
CREATE DATABASE IF NOT EXISTS test_nrc0shdn 
SELECT 'TP3';
SELECT 'Running test stateless/00834_date_datetime_cmp.sql from pid=1718' 
SELECT a FROM (SELECT ignore((SELECT 1)) AS a, a AS b);
DROP DATABASE IF EXISTS test_nzifqzf7 
select arraySlice(materialize([1, 2, 3, 4, 5, 6, 7, 8]), materialize(-2), materialize(-2));
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), N >= N as r FORMAT CSV;
CREATE TABLE test_01193_18429.table_10_165 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
WITH test1 AS (SELECT n, null b FROM with_test where b is null and n = 42) SELECT max(n) FROM test1 where n=45;
CREATE TABLE table_for_rename_nested ( date Date, key UInt64, n Nested(x UInt32, y String), value1 Array(Array(LowCardinality(String))) -- column with several files ) ENGINE = MergeTree() PARTITION BY date ORDER BY key;
INSERT INTO test_01193_18429.table_2_336 VALUES 
DROP DATABASE IF EXISTS test_bmn0iwmh 
CREATE TABLE test_4B3835767064792B4A3D3B6E485C63666C2E253853556921295F5F66685E32405361607C38343F37(x UInt8) Engine=Memory;
explain pipeline select distinct 1, a from distinct_in_order_explain
SELECT arrayMap(x -> x + arrayMap(x -> 5, [1])[1], [1,2,3]) FROM test_table;
EXPLAIN SYNTAX SELECT * FROM prewhere_move_select_final WHERE x + y > 100;
CREATE TABLE test_3661742226726255516144727A31424E703A4754525C784C7C5D797A44664A2F2377733D69543575(x UInt8) Engine=Memory;
OPTIMIZE TABLE t_light_r1 FINAL SETTINGS mutations_sync = 2;
SELECT t as e, toTypeName(e) FROM nnna FULL JOIN nnnb USING (t.t.t.t.t);
EXPLAIN PLAN actions=1, header=1, sorting=1 SELECT a > 0 FROM optimize_sorting WHERE a > 0
CREATE TABLE test_3C6C2338434A5F6B483E687D443C4260497E387A785E6563342738352E7941525233246E5D2C7C39(x UInt8) Engine=Memory;
SELECT * from table
CREATE INDEX idx_tab2_2 ON tab2 (col1 DESC,col3);
alter table many_mutations delete where y = 776 * 2 settings mutations_sync = 0;
INSERT INTO test_01193_18429.table_6_782 VALUES 
INSERT INTO dst_15 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 26
CREATE TABLE test_01193_18429.table_6_614 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP TABLE visits;
SELECT 'Running test stateless/01294_lazy_database_concurrent_recreate_reattach_and_show_tables_long.sh from pid=1705' 
DROP DATABASE IF EXISTS test_h1fjg6qw 
CREATE TABLE test_01193_18429.table_1_974 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toFloat64(3) END FROM system.numbers LIMIT 10;
insert into lc_small_dict select toString(number % 1000) from system.numbers limit 1000000;
SELECT uniqUpTo(3)(x, toString(x)) FROM (SELECT arrayJoin([[], ['a'], ['a', 'b'], []]) AS x);
SELECT 'Running test stateless/02324_compatibility_setting.sh from pid=1720' 
SELECT regionHierarchy(NULL);
CREATE DATABASE IF NOT EXISTS test_ayv12phq 
INSERT INTO mt VALUES /* (-44, 2) */ 
DROP DATABASE IF EXISTS test_nh0w5uop 
CREATE TABLE test_02908_r3_168 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_168', 'r3') ORDER BY tuple()
INSERT INTO arrow_types3 FORMAT ArrowStream
drop table if exists data_02295;
select * from dist_02175 l global join local_02175 r using dummy;
CREATE TABLE test_293863307E3C31663D6F7476425863762B5E6B5A2C5A334A3C412B354F7B3B787846337847306A38(x UInt8) Engine=Memory;
select arr1, arrayPushFront(arr1, l) from array_functions;
DROP TABLE IF EXISTS table_for_synchronous_mutations_no_replication;
DESCRIBE (SELECT * FROM test_table_join_1, test_table_join_2, test_table_join_3);
SELECT 'Running test stateless/00556_array_intersect.sql from pid=1718' 
SELECT Sum(number / 2) FROM numbers(10);
SELECT greatest([]);
INSERT INTO test_01193_18429.table_5_163 VALUES 
DROP DATABASE IF EXISTS test_jfi7a4e2 
CREATE TABLE test_01193_18429.table_1_112 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_6A3033562B596F296A6E30415E424229287946702B524B5876784B497834717237736C3040374661(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_8popts1q 
select d0.id from t1_distr d0 where d0.id in ( select d1.id from t1_distr as d1 inner join t2_distr as d2 on d1.id = d2.id where d1.id > 0 order by d1.id );
CREATE TABLE test_49605B252A7C514924433A2F473E4663222D5B4965536A4A6B57746A27657423695E253A78767B3B(x UInt8) Engine=Memory;
SHOW CREATE USER 'u5_01292@65:ff0c::/96';
SELECT 'Running test stateless/02814_ReplacingMergeTree_fix_select_final_on_single_partition.sql from pid=1718' 
SELECT byteSwap(-4135::Int16);
SELECT 'Running test stateless/01448_json_compact_strings_each_row.sql from pid=1720' 
CREATE TABLE test_01193_18429.table_6_241 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_51365C6F6C31545A2C61366067323B525166494A56524A25786D5866614520295F3A2330654F205F(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_1_168 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
OPTIMIZE TABLE mt_without_pk FINAL;
INSERT INTO test_01193_18429.table_6_874 VALUES 
INSERT INTO test_01193_18429.table_6_373 VALUES 
CREATE TABLE table_for_rename ( date Date, key UInt64, value1 String, value2 String, value3 String MATERIALIZED concat(value1, ' + ', value2) ) ENGINE = MergeTree() PARTITION BY date ORDER BY key;
CREATE TABLE test_01193_18429.table_9_514 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
insert into num_10m select * from numbers(10000000);
DROP DATABASE IF EXISTS test_11dmr3kg 
CREATE TABLE test_565C26237E626823673659456420376E5C49547540565C38663255432431232F617C233B294B6A59(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_iomhz6ht 
CREATE TABLE test_5E5B3E664324466F31203D662140706D39644B4D3524617E2927313A493624682640397D6C415228(x UInt8) Engine=Memory;
SELECT 34e+2_1;
INSERT INTO test_01193_18429.table_3_631 VALUES 
select mortonEncode(65534, 65533);
SELECT 'Running test stateless/02177_issue_31009_pt2.gen.sql from pid=1715' 
select * from test_23634 where id !='' and s != '' and s1 != '';
SELECT extractTextFromHTML('Hello<style type="text/css">World <![endif]--> </style> goodbye');
SELECT count() FROM t_cnf_fuzz WHERE (c7) OR (c1) OR ((NOT c2) AND c7 AND c9 AND c5 AND c1) OR ((NOT c0) AND c9 AND (NOT c0)) OR ((NOT c1) AND (NOT c0)) SETTINGS convert_query_to_cnf = 1
CREATE TABLE test_01193_18429.table_3_462 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/01669_test_toYear_mysql_dialect.sql from pid=1714' 
INSERT INTO test_01193_18429.table_2_668 VALUES 
select max(id) from bloom_filter2 where hasTokenCaseInsensitive(s, 'abc');
SELECT * FROM 02763_a_merge ORDER BY x SETTINGS optimize_move_to_prewhere= 0;
alter table many_mutations delete where y = 23 * 2 settings mutations_sync = 0;
SELECT defaultValueOfArgumentType(-1);
INSERT INTO test_01193_18429.table_9_980 VALUES 
DROP DATABASE IF EXISTS test_23qtap0z 
select 'NOT ILIKE';
OPTIMIZE TABLE nnd;
SELECT age('second', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1927-01-01 01:00:00', 3, 'UTC'));
CREATE TABLE test_785D705A436C3A7221304479382C7E78632E5C3D2E432B7C4D4C75326423612C754A32376B645A2B(x UInt8) Engine=Memory;
SELECT multiIf((number % 2) = 0, [toUInt16(1), toUInt16(2)], (number % 3) = 0, [toFloat32(2), toFloat32(3)], [toUInt16(3), toUInt16(3)]) FROM system.numbers LIMIT 10;
INSERT INTO test_table_2 FORMAT JSONCompactEachRowWithNames 
CREATE TABLE test_52457E6D4A45352A5E6F68225C65365653404F6D313969246A207C514C376F744C34383C78656239(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_kyak1zb0 
SELECT number, number % 2, sum(number) AS val FROM remote('127.0.0.{2,3}', numbers(10)) GROUP BY CUBE(number, number % 2) ORDER BY (number, number % 2, val) SETTINGS group_by_use_nulls=1;
CREATE DATABASE IF NOT EXISTS test_hkq042sr 
SELECT visitParamExtractRaw('{"myparam": "{"}', 'myparam');
SELECT DAYOFYEAR(NULL);
DROP TABLE IF EXISTS welch_ttest__fuzz_7;
select 1 and greatest(number % 2, number % 3) from numbers(10);
insert into `my_table` (`col_date`, `col_date32`, `col_datetime`, `col_datetime32`, `col_datetime64`) values 
INSERT INTO test_01193_18429.table_8_723 VALUES 
SELECT 29,'Hello',bin(bitShiftLeft('Hello', 29));
DROP TABLE IF EXISTS bloom_filter_array_offsets_str;
INSERT INTO test_01193_18429.table_3_79 VALUES 
SELECT wordShingleSimHashCaseInsensitiveUTF8(s) FROM defaults;
INSERT into test_23634 values 
DROP DATABASE IF EXISTS test_iy5cklyv 
SELECT tokens(materialize('test'));
CREATE TABLE test_284F215C79552E502D78206D35507D3E44565B4B2031544B6A647E3D5B474436234A3767703F724D(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_2_783 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE MATERIALIZED VIEW parse_mv_eph TO parsed_eph AS SELECT name, toUInt32(num) as num_ephemeral FROM raw;
SELECT hasTokenCaseInsensitive('needlehayhayhayhayhayhayhayhayhayhayhayhayhayhayhayhayhayhay', 'needle'), ' expecting ', 0;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (43 < 68 AND 96 > 0 ? 43 : 0)), throwIf(last != (43 < 68 AND 96 > 0 ? least(68 - 1, 43 + 96 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(68) LIMIT 43, 96);
INSERT INTO test_01193_18429.table_5_600 VALUES 
INSERT INTO test_01193_18429.table_8_45 VALUES 
INSERT INTO r7 SELECT 48
CREATE INDEX idx_tab3_2 ON tab3 (col4 DESC,col3 DESC,col0 DESC);
SELECT * FROM merge_one_two WHERE x IN ('1');
DROP TABLE decimal_insert_cast_issue;
SELECT 'Running test stateless/01116_asof_join_dolbyzerr.sql from pid=1722' 
CREATE DATABASE IF NOT EXISTS test_guxq9hb0 
CREATE TABLE test_01193_18429.table_4_792 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
ATTACH TABLE index_memory;
INSERT INTO test_01193_18429.table_10_262 VALUES 
SELECT hex(toInt128(-100000000000)) AS res;
OPTIMIZE TABLE check_system_tables;
SELECT '\\xyz\\' LIKE '\\\\_%_\\\\';
select ' 4294967290:';
CREATE TABLE test_02908_r3_36 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_36', 'r3') ORDER BY tuple()
CREATE TABLE test_7876694A6A346E40647D6F312A545A5D523E3C59285F222B6472424259704F4E4D5531723C7A2C39(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS source_table1;
SHOW FUNCTIONS
alter table many_mutations delete where y = 377 * 2 settings mutations_sync = 0;
GRANT SELECT ON *.* TO test_user_01074;
CREATE TABLE test_475E5C377A555B452E2175506E48433A48675B5643327371237840396B455E6B2437575F2C6A3D79(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_jhod9xsc 
SELECT 'Running test stateless/00276_sample.sql from pid=1714' 
SELECT INET_NTOA(NULL);
INSERT INTO test_01193_18429.table_7_829 VALUES 
CREATE TABLE test_386A28296B5F3060237B50433625636A324234787D5F58212C6C253A77343054326B38586870464C(x UInt8) Engine=Memory;
select concat(materialize('a'), materialize(toFixedString('b', 1)), materialize(toFixedString('c', 1))) == 'abc';
CREATE TABLE report2(id UInt32, event_date Date, priority UInt32, description String) ENGINE = MergeTree(event_date, intHash32(id), (id, event_date, intHash32(id)), 8192);
INSERT INTO test_01193_18429.table_9_468 VALUES 
SELECT '\i' LIKE '%\i%';
CREATE TABLE test_01193_18429.table_9_261 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT bitmapMax(bitmapBuild(emptyArrayUInt16()));
create table test_02129 (x UInt64, y UInt64) engine=Memory()
SELECT generateULID(NULL, NULL);
CREATE DATABASE IF NOT EXISTS test_oqxgvt6y 
SELECT '8. test group by with select expression alias';
EXPLAIN SYNTAX SELECT avg(log(2) * number) AS k FROM numbers(10000000) GROUP BY number % 5, ((number % 5) * (number % 5)) HAVING ((number % 5) * (number % 5)) < 5 ORDER BY k;
select 26, * from test order by id
SELECT * FROM merge(currentDatabase(), 'test_distributed_1|test_distributed_2') WHERE _table in ('test_distributed_1', 'test_distributed_2') ORDER BY value;
SELECT [number][arrayJoin([-0x8000000000000000, -10000000000, 0, -1])] FROM numbers(2);
INSERT INTO series__fuzz_35(i, x_value, y_value) VALUES 
INSERT INTO test_01193_18429.table_7_976 VALUES 
CREATE TABLE test_5120432520303B40335F66635A7E67202467536F685774484859343D734757773F3F4A495336577C(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_1_351 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
alter table many_mutations delete where y = 280 * 2 settings mutations_sync = 0;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), toMonth(N, 'Asia/Istanbul') as r FORMAT CSV;
DROP DATABASE IF EXISTS test_pqac601g 
CREATE TABLE test_39513322516375634C726C5A2C7C665325506A60663A5957603042507978474E634A512A53454374(x UInt8) Engine=Memory;
select arrayShiftRight(a, 3, 7) from t02845;
CREATE TABLE test_01193_18429.table_8_336 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE t (`x` Int8) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 31743, min_bytes_for_wide_part = 94322169, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8405, prefer_fetch_merged_part_size_threshold = 4183531090, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 21940492, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 23048, primary_key_compress_block_size = 70446
EXPLAIN QUERY TREE dump_ast = 1 SELECT * FROM mysql('127.0.0.1:9004', currentDatabase(), foo, 'default', '[HIDDEN]', SETTINGS connection_wait_timeout = 123, connect_timeout = 40123002, read_write_timeout = 40123001, connection_pool_size = 3)
select toTypeName(res), if(1, materialize([1,2,3]), 'str_1'::Nullable(String)) as res;
DROP DATABASE IF EXISTS test_tk5d97tu 
SELECT value == 'direct,hash' FROM system.settings WHERE name = 'join_algorithm';
select 7 = position('abcdefgh', materialize('gh')) from system.numbers limit 129;
CREATE TABLE test_327C577E3E5D3C74386B6D7A6A3B2424363D486B68654D6D287B28685579322F4D355B435F3D6D7D(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_khsk3a1f 
DROP TABLE simple_agf_aggregating_mt;
SELECT normalizeQuery('SELECT 1 AS `xyz`');
SELECT sum(isIPAddressInRange('255.255.255.254', cidr)) == 32 FROM test_data;
ALTER TABLE concurrent_alter_column ADD COLUMN c210 DOUBLE;
SELECT toInt8OrNull('');
SELECT a, b FROM t_ab1 RIGHT JOIN t_ab2 USING (a, b) ORDER BY ifNull(t_ab1.id, t_ab2.id);
CREATE TABLE IF NOT EXISTS lhs (`x` String) ENGINE = ReplacingMergeTree ORDER BY x SETTINGS index_granularity = 9961, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 31, merge_max_block_size = 19087, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 28226842, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 93570, primary_key_compress_block_size = 43248
CREATE TABLE test_685E22274846753C717A78494C5A6D292D76204769735C5E276C315F32306B216B32676A5B4E2934(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_1_20 VALUES 
CREATE TABLE test_01193_18429.table_6_571 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_5_311 VALUES 
INSERT INTO test_lookup_table VALUES
SELECT 'test_01194',14752,2 
DROP DATABASE IF EXISTS test_zechlrkk 
alter table data_01900_1 update s = 'foo_61' where 1;
SELECT 'Running test stateless/02943_positional_arguments_bugs.sql from pid=1714' 
CREATE TABLE test_3D3C7B46287E4E3A714D21455358314765404D616A27253B603373203E3B2A77517D4C2B5E55626E(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_ow0ghtmv 
INSERT INTO skip_idx_comp_parts SELECT number, number FROM numbers(200);
SELECT 31
CREATE TABLE t1 (`a` Nullable(Int64), `b` Nullable(String)) engine = Memory;
select 'ORDER BY LIMIT BY';
SELECT * FROM 01523_test;
CREATE TABLE set_null ( a INT NULL, b INT NOT NULL, c Nullable(INT), d INT, f DEFAULT 1 ) engine=Memory();
CREATE DATABASE IF NOT EXISTS test_fmp2vqm6 
INSERT INTO test_01193_18429.table_6_52 VALUES 
SELECT * FROM 01686_test WHERE key IN (123, 456, -123) ORDER BY key;
SELECT 'ÃÂ ÃÂÃÂÃÂÃÂºÃÂ¸ÃÂ¹ (ru group by)';
CREATE TABLE test_5B3E5861577E212A4B3E50777740507B7D272D7D2A5B4C2A7358202847734123737A5132447C4C27(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_10_602 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
alter table defaulted drop column payload_length;
INSERT INTO test_01193_18429.table_6_348 VALUES 
set max_rows_to_read = 0;
drop table if exists test_two_args;
select * from file(data_02314.csv) order by c1 settings input_format_csv_skip_first_lines=5;
CREATE TABLE test_01193_18429.table_8_708 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
EXPLAIN QUERY TREE run_passes = 1 SELECT CONCAT(number > 5 ? 'censor.net' : 'google', '1') FROM system.numbers LIMIT 10;
CREATE TABLE test_33204E6C6D2D743E2164313A40252F6D67636E3D4075334D355670577655282A454F7E317B213066(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02807_lower_utf8_msan.sql from pid=1724' 
CREATE TABLE materialized_key (`key` UInt32 MATERIALIZED value + 1, `value` UInt32) ENGINE = MergeTree ORDER BY key SETTINGS index_granularity = 37604, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.19193553924560547, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 21891, prefer_fetch_merged_part_size_threshold = 7940617621, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 8629169739, index_granularity_bytes = 4068883, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 99694, primary_key_compress_block_size = 37235
create table test (i int) engine MergeTree order by tuple();
SELECT range(number)[number] FROM system.numbers LIMIT 10;
SELECT t FROM nnna, nnnb;
CREATE TABLE test_01193_18429.table_2_295 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE r1 (`x` UInt64) ENGINE = ReplicatedMergeTree('/test/01307_multiple_leaders_zookeeper_test_4aohm0hs/table', 'r1') ORDER BY x SETTINGS min_bytes_for_wide_part = '10M', index_granularity = 1543, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 10, merge_max_block_size = 6080, prefer_fetch_merged_part_size_threshold = 1261314518, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 91, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 26103133, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 16221, primary_key_compress_block_size = 92440
SELECT parseDateTimeBestEffort('20220101 010203', 'UTC');
ALTER TABLE alter_attach DETACH PARTITION ALL;
SELECT * FROM mv_00610 ORDER BY y;
insert into test select number + 9, ('lc_str_' || toString(number))::LowCardinality(String) from numbers(3);
ALTER TABLE concurrent_alter_column ADD COLUMN c476 DOUBLE;
SELECT 'Running test stateless/02842_vertical_merge_after_add_drop_column.sql from pid=1718' 
select * from format(JSONEachRow, 'payload Tuple(pull_request Tuple(merged_by Tuple(login String)))', '{"payload" : {}}') settings input_format_null_as_default=1;
SELECT uniqUpTo(3)((x, toString(x))) FROM (SELECT arrayJoin([[], ['a'], ['a', 'b'], []]) AS x);
INSERT INTO tt_01373 SELECT number%13, number%17, 1 from numbers(1000000);
SELECT arrayShuffle([tuple(1, -1), tuple(99999999, -99999999), tuple(3, -3)], 0xbad_cafe);
SELECT floor(NULL, NULL, NULL);
INSERT INTO r1 SELECT 76 % 10 = 1 ? 76 - 1 : 76
INSERT INTO test_01193_18429.table_9_744 VALUES 
INSERT INTO test_01193_18429.table_1_153 VALUES 
select arrayShiftLeft(['a', 'b', 'c', 'd', 'e'], 3, 'foo');
SELECT `y`, count() FROM `test_6sl9qpyr`.`02535_custom_key` WHERE cityHash64(`y`) >= 12297829382473034410 GROUP BY `y` ORDER BY `y` ASC
CREATE TABLE test_01193_18429.table_7_982 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT -nan = toInt32(0), -nan != toInt32(0), -nan < toInt32(0), -nan > toInt32(0), -nan <= toInt32(0), -nan >= toInt32(0);
CREATE TABLE test_3677676B4A4A22284C626A7141737E273C354A592E3C6142786D5A3B5B2B61525033582E2A294D60(x UInt8) Engine=Memory;
CREATE TABLE ddl_dictonary_test_source ( id UInt64, value UInt64 ) ENGINE = TinyLog;
CREATE TABLE test_01193_18429.table_10_79 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT count() FROM `system`.`one`
CREATE TABLE test_01193_18429.table_10_455 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select length(b) as l from tab_00717 group by l, l + 1, l + 2, l + 3;
CREATE TABLE replicated_report (`product` Enum8('IU' = 1, 'WS' = 2), `machine` String, `branch` String, `generated_time` DateTime) ENGINE = ReplicatedMergeTree('/clickhouse/{database}/01747_alter_partition_key/t', '1') PARTITION BY (product, toYYYYMM(generated_time)) ORDER BY (product, machine, branch, generated_time) SETTINGS index_granularity = 2849, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 78, merge_max_block_size = 1390, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1142214262, index_granularity_bytes = 23326005, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 61766, primary_key_compress_block_size = 91132
CREATE TABLE test_6F4A5740604331744C747945503832622732676E74763C2A584F2D744D402B5D27314427273A355F(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_j90nzfdw 
DROP DATABASE IF EXISTS test_1b9axwl7 
SELECT dictHas('02183_ip_trie_dictionary', tuple(IPv4StringToNum('127.0.0.0')));
CREATE TABLE test_683F353C4C6A4456606652355C3F226327444E4A343027273B765E4665653A443B786623295B773D(x UInt8) Engine=Memory;
CREATE TABLE r4 (`x` UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/tables/01509_check_many_parallel_quorum_inserts_long_test_uo81whjp/parallel_quorum_many', 'r4') ORDER BY x SETTINGS index_granularity = 36581, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 9217, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 677241, vertical_merge_algorithm_min_columns_to_activate = 82, min_merge_bytes_to_use_direct_io = 3488406650, index_granularity_bytes = 28476649, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 70272, primary_key_compress_block_size = 65361
SELECT toDecimal64('-0.6', 6) AS x, toUInt8(x);
DROP TABLE 01913_db.test_source_table_2;
CREATE TABLE test_6C2069414B3720334D5A354D2F51556F365431646736662937223570312B336F6F4C3A693C42307D(x UInt8) Engine=Memory;
SELECT count() FROM t_cnf_fuzz WHERE (c2 AND c8) OR (c3 AND (NOT c5) AND c4 AND (NOT c3) AND (NOT c9)) OR ((NOT c7) AND c2 AND c3 AND c5) OR (c3 AND (NOT c6)) OR (c8 AND (NOT c4)) SETTINGS convert_query_to_cnf = 1
select toUInt16OrDefault('1xx', cast(2 as UInt16));
ALTER TABLE src_7 MOVE PARTITION 8 TO TABLE dst_5
DROP DATABASE IF EXISTS test_i8bpsqth 
ALTER TABLE test_6d2x9kvl.optimize_me_finally MODIFY COLUMN da Array(String) DEFAULT ['zzz']
CREATE TABLE test_63756C6242377B7E2246306975612C6E5E28336F3424782A514D20594B337B2665514C267B4D256A(x UInt8) Engine=Memory;
DROP TABLE `01746_null`;
SELECT 'value: ', avg(number - 2) FROM numbers(10);
CREATE TABLE test_01193_18429.table_7_565 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT (1 IS NOT NULL) + (2 IS NOT NULL) FROM `system`.`one`
INSERT INTO test_01193_18429.table_1_136 VALUES 
alter table many_mutations delete where y = 29 * 2 settings mutations_sync = 0;
INSERT INTO table_skipped_column_in_nested_00825 VALUES 
INSERT INTO test_01193_18429.table_5_347 VALUES 
SELECT multiIf((number % 2) = 0, [toUInt32(1), toUInt32(2)], (number % 3) = 0, [toFloat64(2), toFloat64(3)], [toUInt8(3), toUInt8(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_1_44 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (67 < 19 AND 107 > 0 ? 67 : 0)), throwIf(last != (67 < 19 AND 107 > 0 ? least(19 - 1, 67 + 107 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(19) LIMIT 67, 107);
SELECT '6. test group by with subquery alias';
explain syntax select isNotNull(1)+isNotNull(2) from remote('127.2', system.one);
INSERT INTO test_01193_18429.table_8_712 VALUES 
DROP DATABASE IF EXISTS test_asgcoy86 
DROP DATABASE IF EXISTS test_lbn5ahoc 
INSERT INTO test_01193_18429.table_1_739 VALUES 
DROP DATABASE IF EXISTS test_pdchozpr 
SELECT substring(explain, 1, 17) FROM (EXPLAIN SYNTAX SELECT * FROM t_02809 WHERE b NOT IN t_02809_aux ) WHERE explain LIKE '%WHERE%';
CREATE TABLE test_01193_18429.table_6_974 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Lloyd-Atkinson' AS str, punycodeEncode(str) AS puny, punycodeDecode(puny) AS original, tryPunycodeDecode(puny) AS original_try;
CREATE TABLE bad_arrays (a Array(String), b Array(UInt8)) ENGINE = Memory;
SET engine_file_truncate_on_insert=1;
select 'create replica 1 and check deduplication';
SELECT multiIf(1, toFixedString(col2, 16), 1, toFixedString('bar', 16), toFixedString(col4, 16)) FROM multi_if_check;
DROP TABLE t1_00844;
INSERT INTO test_01193_18429.table_4_519 VALUES 
CREATE DATABASE IF NOT EXISTS test_ibg5ybzd 
CREATE TABLE test_01193_18429.table_4_840 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_457C2F79432148573A4522333435675E635778752F5F6340303C764C20323E4831205C787D286D66(x UInt8) Engine=Memory;
SELECT sum(x), count(x), avg(x) FROM (SELECT number :: Decimal32(0) AS x FROM numbers(0)) SETTINGS optimize_syntax_fuse_functions = 0;
SELECT '-- negative offset and size';
CREATE TABLE test_02908_r3_279 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_279', 'r3') ORDER BY tuple()
CREATE TABLE test_01193_18429.table_6_782 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE MATERIALIZED VIEW src2dst_false TO dst AS SELECT id, src.value - deltas_sum as delta FROM src LEFT JOIN ( SELECT id, sum(delta) as deltas_sum FROM dst WHERE id IN (SELECT id FROM src WHERE not sleepEachRow(0.001)) GROUP BY id ) _a USING (id);
SELECT * FROM replace_partition_source;
optimize table test_02381_compact final;
select match(materialize('a key="v" '), 'key="(.*?)"');
CREATE TABLE rmt (n UInt64, s String) ENGINE = ReplicatedMergeTree('/clickhouse/test_01148/{shard}/{database}/{table}', '{replica}') ORDER BY n;
SELECT 'Running test stateless/00965_send_logs_level_concurrent_queries.sh from pid=1724' 
CREATE DATABASE IF NOT EXISTS test_drfr4gwe 
select *, _part from mt order by _part;
DROP TABLE IF EXISTS binary_op_mono2;
SELECT sipHash64(map(1, 'a', 2, 'b'));
SELECT '*** Test fetches ***';
CREATE TABLE test_5745683373692E334C3C5A525921677D5D60633022534333742870294B745B5C692B476C5D7A2724(x UInt8) Engine=Memory;
INSERT INTO r8 SELECT 87
SELECT id, avgWeighted(value1, weight), avgWeighted(value2, weight), avgWeighted(value3, weight), avgWeighted(value1, weight_nullable), avgWeighted(value2, weight_nullable), avgWeighted(value3, weight_nullable) FROM test_table_null_specifics GROUP BY id ORDER BY id;
select concat(materialize('a'), toFixedString('b', 1)) == 'ab' from system.numbers limit 5;
CREATE TABLE test (`type` Enum('x'), `s` String) ENGINE = MergeTree PARTITION BY type ORDER BY s SETTINGS index_granularity = 37487, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 12, merge_max_block_size = 21863, prefer_fetch_merged_part_size_threshold = 321230737, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 13151722, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 36642, primary_key_compress_block_size = 41742
INSERT INTO r3 SELECT 95
select countSubstringsCaseInsensitiveUTF8('ÃÂ¿ÃÂ¾ÃÂ´ÃÂÃÂÃÂÃÂ¾ÃÂºÃÂ°.ÃÂÃÂ.ÃÂ¿ÃÂ¾ÃÂ´ÃÂÃÂÃÂÃÂ¾ÃÂºÃÂ°', 'ÃÂ ÃÂ¤');
SELECT * FROM ( SELECT 2 AS x ) AS t1 RIGHT JOIN ( SELECT count('x'), count('y'), 2 AS x ) AS t2 ON t1.x = t2.x;
CREATE TABLE test_01193_18429.table_7_836 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_3_538 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select * from 02681_undrop_uuid order by id;
SELECT hasTokenCaseInsensitive('hay hay hay hay hay hay hay hay hay n hay hay hay hay hay hay hay hay hay', 'n'), ' expecting ', 1;
SELECT child_key, parent_key, child_key FROM data_02233 GROUP BY parent_key, child_key, child_key WITH TOTALS ORDER BY child_key, parent_key ASC NULLS LAST SETTINGS max_threads = 1, optimize_aggregation_in_order = 1;
SELECT count(*) FROM table WHERE (arrayExists(x -> ((x.1) = toLowCardinality('pattern')), values) = 1);
CREATE DICTIONARY ip_trie_dictionary ( prefix String, decimal_value Decimal256(5) ) PRIMARY KEY prefix SOURCE(CLICKHOUSE(HOST 'localhost' port tcpPort() TABLE 'ip_trie_dictionary_decimal_source_table')) LIFETIME(MIN 10 MAX 1000) LAYOUT(IP_TRIE());
INSERT INTO test_01193_18429.table_7_541 VALUES 
CREATE TABLE test_01193_18429.table_8_147 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_5_387 VALUES 
CREATE DATABASE IF NOT EXISTS test_06eh6ksn 
SELECT 'Running test stateless/01107_atomic_db_detach_attach.sh from pid=1705' 
select hasAny([Null], [Null]);
CREATE TABLE test_37625C622B473F2C7C3B7B5B31515F582D3437735338293B455C447B6E7959535040402E793D346E(x UInt8) Engine=Memory;
SELECT Y, uniqCombined(17)(X) FROM (SELECT number AS X, round(toFloat32(1/(1 + (3*X*X - 7*X + 11) % 37)), 3) AS Y FROM system.numbers LIMIT 1000000) GROUP BY Y ORDER BY Y;
CREATE TABLE test_33465A2C224D59404F7A41674F6B367E2636355A504B625144622B5C7858242E6D534B3F2575484C(x UInt8) Engine=Memory;
CREATE INDEX idx_tab4_3 ON tab4 (col4,col1 DESC);
SELECT engine, splitByChar('/', data_path)[-2], uuid, splitByChar('/', metadata_path)[-2] FROM system.databases WHERE name='test_01192_renamed'
INSERT INTO r2 SELECT 30
SELECT cosineDistance(NULL, NULL);
DROP DATABASE IF EXISTS test_yeqhf50g 
create table test_in_tuple as test_in_tuple_1 engine = Merge(currentDatabase(), '^test_in_tuple_[0-9]+$');
SELECT 'Running test stateless/01296_create_row_policy_in_current_database.sql from pid=1705' 
INSERT INTO test_01193_18429.table_3_231 VALUES 
CREATE TABLE test_01193_18429.table_1_672 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
alter table many_mutations delete where y = 663 * 2 settings mutations_sync = 0;
SELECT round(quantileDD(0.01, 0.5)(number - 10), 2) FROM numbers(21);
SET allow_create_index_without_type=1;
CREATE TABLE test_705341315A68756D7A4B26574379453B272023753D7266564D255A5F202066774D3D32665652432D(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS auto_assign_enum1;
SELECT 19;
INSERT INTO test_01193_18429.table_8_485 VALUES 
INSERT INTO alter_table SELECT number, toString(number) FROM numbers(10000)
ALTER TABLE t_vertical_merges ADD COLUMN c String;
CREATE TABLE test_01193_18429.table_8_304 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE DATABASE IF NOT EXISTS test_2slkqzmn 
DROP DATABASE IF EXISTS test_2s8o6e2z 
SELECT arrayResize(NULL, NULL, NULL);
SELECT name, storage, auth_type, auth_params, host_ip, host_names, host_names_regexp, host_names_like, default_roles_all, default_roles_list, default_roles_except FROM system.users WHERE name LIKE 'u%\_01292' ORDER BY name;
select X.*, s.* from X left join (select * from X) as s on X.id = s.id order by X.id, X.x_a, X.x_b, s.id, s.x_a, s.x_b;
INSERT INTO r3 SELECT 0
INSERT INTO dst_4 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 48
SELECT arrayJoin(range(100)) AS x FROM remote('127.0.0.2', system.one) WHERE x GLOBAL IN (SELECT toUInt8(arrayJoin(range(100)) + 50)) GROUP BY x ORDER BY x LIMIT 10 FORMAT JSONCompact;
CREATE TABLE test_58772F70672423766E664F572F674178532175465E60644B68334B744D203334764E3E5228705061(x UInt8) Engine=Memory;
OPTIMIZE TABLE src_15
INSERT INTO test_01193_18429.table_8_343 VALUES 
SET input_format_values_interpret_expressions = 1;
DROP DICTIONARY IF EXISTS hierarchy_flat_dictionary;
CREATE TABLE test_01193_18429.table_8_724 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Running test stateless/01048_exists_query.sql from pid=1705' 
select arrayRotateLeft(['H', 'e', 'l', 'l', 'o'], 2);
INSERT INTO r1 SELECT 73 % 10 = 1 ? 73 - 1 : 73
INSERT INTO test_01193_18429.table_10_717 VALUES 
drop table if exists prewhere_alias;
CREATE DATABASE IF NOT EXISTS test_rr4cgros 
select * from urlCluster('test_cluster_one_shard_three_replicas_localhost', 'http://localhost:11111/test/{a,b}.tsv', 'auto') order by c1, c2, c3;
SELECT t1.*, t2.* FROM t1 FULL JOIN t2 ON t1.x = t2.x AND toUInt64(t1.x) = intDiv(t2.y,10) ORDER BY x, t2.y;
select count(), sum(ephemeralOwner) from system.zookeeper where path like '/clickhouse/zero_copy/zero_copy_s3/' || (select value from system.zookeeper where path='/test/02413/'||currentDatabase()||'/dst' and name='table_shared_id') || '/%';
INSERT INTO test_01193_18429.table_4_42 VALUES 
CREATE TABLE test_2A4048204C3438653B445037452928313625217D796A27566057346B3B29424E552C665F36457073(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_vtcm14tk 
SELECT `number` FROM numbers(1) WHERE `number` IN [0, 1, 2, 3]
drop dictionary if exists regexp_dict1;
SELECT least([], [NULL]);
SELECT * FROM tsv_custom_null FORMAT TSV
SELECT positive_modulo(-1000, 32);
SELECT YYYYMMDDToDate(toDecimal64(21490606.1, 5));
alter table many_mutations delete where y = 359 * 2 settings mutations_sync = 0;
DROP TABLE IF EXISTS truncate_test_stripe_log;
SELECT 'Running test stateless/01502_long_log_tinylog_deadlock_race.sh from pid=1718' 
SELECT 'Running test stateless/02155_parse_date_lowcard_default_throw.sql from pid=1714' 
SELECT 'Running test stateless/01474_bad_global_join.sql from pid=1720' 
SELECT COUNT() FROM bloom_filter_null_types_test WHERE isNull(f64);
CREATE TABLE test_01193_18429.table_3_41 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_02908_r3_79 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_79', 'r3') ORDER BY tuple()
alter table many_mutations delete where y = 892 * 2 settings mutations_sync = 0;
DESC TABLE test_gxhr9doy.tab
CREATE TABLE test_575B4C405B4F5E40517153565F7672695672356A5B456D462D55526757226E31527D41324C66747D(x UInt8) Engine=Memory;
SELECT hasSubsequenceCaseInsensitiveUTF8(NULL, NULL);
SELECT 'Running test stateless/01880_remote_ipv6.sql from pid=1714' 
CREATE DATABASE IF NOT EXISTS test_dem0lgth 
SELECT VAR_POP(NULL, NULL);
INSERT INTO test_01193_18429.table_8_730 VALUES 
SELECT value_element, value FROM test_table ARRAY JOIN [1048577] AS value_element, arrayMap(x -> value_element, ['']) AS value;
SELECT hierarchical_index_bytes_allocated > 0 FROM system.dictionaries WHERE name = 'hierarchy_hashed_dictionary_index' AND database = currentDatabase();
SELECT a, c, e FROM t_fixed_prefix WHERE b = 1 ORDER BY a, c, e SETTINGS optimize_read_in_order = 0
select 0 = multiSearchFirstIndexUTF8(materialize('ÃÂÃÂ´ÃÂÃÂ¸ÃÂÃÂÃÂÃÂ´ÃÂ²ÃÂ ÃÂ¼ÃÂÃÂ¹ÃÂÃÂ ÃÂÃÂ´ÃÂÃÂÃÂÃÂÃÂÃÂ¶ÃÂÃÂ¾ÃÂÃÂÃÂ¾'), ['ÃÂµÃÂ¹ÃÂÃÂÃÂ´ÃÂ½ÃÂ½ÃÂÃÂ¹ÃÂµÃÂÃÂ³ÃÂº', 'ÃÂÃÂÃÂ¹ÃÂÃÂ³ÃÂ±ÃÂ¹ÃÂÃÂ´ÃÂÃÂ¸ÃÂÃÂ·ÃÂ±', 'ÃÂµÃÂ ÃÂ¹ÃÂÃÂ¼ÃÂÃÂÃÂÃÂÃÂÃÂÃÂ½ÃÂº', 'ÃÂÃÂ²ÃÂÃÂÃÂ¼ÃÂ´ÃÂ¾ÃÂÃÂÃÂ¶ÃÂÃÂ³ÃÂÃÂ³ÃÂ·ÃÂÃÂÃÂ¿ÃÂÃÂ²ÃÂÃÂÃÂºÃÂ½ÃÂÃÂÃÂÃÂ¹ÃÂ±ÃÂÃÂÃÂ·ÃÂ¹', 'ÃÂ ÃÂÃÂÃÂ¿ÃÂ ÃÂ²ÃÂÃÂ°ÃÂÃÂ½ÃÂ±ÃÂ±ÃÂ¿ÃÂ·ÃÂÃÂÃÂÃÂÃÂÃÂÃÂ½ÃÂ¾ÃÂÃÂ¹ÃÂ³ÃÂÃÂ¿ÃÂÃÂ±ÃÂÃÂ ', 'ÃÂ¶ÃÂÃÂ´ÃÂÃÂÃÂ ÃÂÃÂ¼ÃÂ ÃÂÃÂ ÃÂ ÃÂºÃÂºÃÂ·ÃÂ¿ÃÂ¿ÃÂ·ÃÂ±ÃÂ½ÃÂÃÂ±ÃÂ±ÃÂ', 'ÃÂÃÂÃÂ¾ÃÂ ÃÂ½ÃÂ¼ÃÂ±ÃÂ°ÃÂ²ÃÂ°ÃÂ¾ÃÂÃÂµÃÂÃÂ½ÃÂµÃÂ¹ÃÂ¼ÃÂ³ÃÂ³ÃÂ¾ÃÂÃÂ»ÃÂÃÂ·ÃÂ²ÃÂÃÂ±ÃÂÃÂÃÂµÃÂ·ÃÂ´ÃÂ½ÃÂµÃÂ¸ÃÂ»', 'ÃÂÃÂÃÂÃÂÃÂÃÂºÃÂÃÂÃÂÃÂÃÂÃÂ¹ÃÂ±ÃÂ ÃÂ´ÃÂÃÂµÃÂÃÂ²ÃÂµÃÂµÃÂ¿ÃÂÃÂÃÂ·ÃÂ¼ÃÂµÃÂÃÂ±ÃÂ³ÃÂ', 'ÃÂ¶ÃÂ±ÃÂµÃÂ·ÃÂ¶ÃÂ¿ÃÂµÃÂ', 'ÃÂ²ÃÂ¹ÃÂÃÂÃÂÃÂ ÃÂ¿ÃÂÃÂ»ÃÂºÃÂÃÂ²ÃÂ°ÃÂ²ÃÂ´ÃÂ°ÃÂ°ÃÂºÃÂ³ÃÂ¾ÃÂ ÃÂ¶ÃÂÃÂ¾ÃÂ¾ÃÂÃÂ´', 'ÃÂ¸ÃÂÃÂºÃÂµÃÂÃÂ±ÃÂ¾ÃÂÃÂ²ÃÂÃÂ¼ÃÂ´ÃÂ ÃÂµ', 'ÃÂÃÂ¼ÃÂ»ÃÂ¾ÃÂÃÂ¿ÃÂ·ÃÂ±ÃÂÃÂ½ÃÂÃÂ½ÃÂ ÃÂ»ÃÂÃÂ´ÃÂ»ÃÂÃÂÃÂ±ÃÂµÃÂ¾ÃÂÃÂÃÂÃÂÃÂ ÃÂÃÂµÃÂ»ÃÂÃÂ¾ÃÂ¿', 'ÃÂµÃÂºÃÂÃÂ¸ÃÂ¹ÃÂÃÂÃÂ¹ÃÂÃÂºÃÂÃÂ½', 'ÃÂ´ÃÂ¾ÃÂÃÂ°ÃÂ ÃÂ³ÃÂ¶ÃÂ¾ÃÂÃÂ²ÃÂÃÂ¹ÃÂ¶ÃÂÃÂ¿ÃÂÃÂ·ÃÂ²ÃÂ¶ÃÂ¹ÃÂºÃÂ¸ÃÂ', 'ÃÂ»ÃÂÃÂµÃÂµÃÂ½ÃÂµÃÂÃÂ¿ÃÂÃÂ±ÃÂ¾ÃÂ»ÃÂ³ÃÂÃÂ¸ÃÂ¾ÃÂ¶ÃÂ¿ÃÂ¶ÃÂ¾ÃÂ±ÃÂºÃÂ°', 'ÃÂ±ÃÂÃÂºÃÂ·ÃÂ¿ÃÂ¿ÃÂÃÂÃÂÃÂ±ÃÂ¿ÃÂÃÂ²ÃÂ¿ÃÂ¾ÃÂ¿ÃÂ²ÃÂ¹ÃÂÃÂ°ÃÂ']) from system.numbers limit 10;
select makeDateTime64(1984, 0, 1, 0, 0, 0, 0, 9, 'UTC');
SELECT * FROM (SELECT * FROM remote('127.0.0.{2,3,4}', system.one) WHERE dummy GLOBAL IN (SELECT * FROM remote('127.0.0.{2,3}', system.one)));
SELECT '(backward, first_match, B->A)', id, sequenceNextNode('backward', 'first_match')(dt, action, 1, action = 'B', action = 'A') AS next_node FROM test_sequenceNextNode_Nullable GROUP BY id ORDER BY id;
CREATE DATABASE IF NOT EXISTS test_3aajb40z 
CREATE INDEX idx_tab4_3 ON tab4 (col0,col4 DESC);
 CREATE TABLE test_lazy_01014_concurrent_test_bo56il5m.tlog2 (a UInt64, b UInt64) ENGINE = TinyLog; 
select IPv6NumToString(toFixedString(materialize(''), 16)) == materialize('::');
SELECT 256, 2147483647, 256 = 2147483647, 256 != 2147483647, 256 < 2147483647, 256 <= 2147483647, 256 > 2147483647, 256 >= 2147483647, 2147483647 = 256, 2147483647 != 256, 2147483647 < 256, 2147483647 <= 256, 2147483647 > 256, 2147483647 >= 256 , toUInt16(256) = toUInt32(2147483647), toUInt16(256) != toUInt32(2147483647), toUInt16(256) < toUInt32(2147483647), toUInt16(256) <= toUInt32(2147483647), toUInt16(256) > toUInt32(2147483647), toUInt16(256) >= toUInt32(2147483647), toUInt32(2147483647) = toUInt16(256), toUInt32(2147483647) != toUInt16(256), toUInt32(2147483647) < toUInt16(256), toUInt32(2147483647) <= toUInt16(256), toUInt32(2147483647) > toUInt16(256), toUInt32(2147483647) >= toUInt16(256) , toUInt16(256) = toInt32(2147483647), toUInt16(256) != toInt32(2147483647), toUInt16(256) < toInt32(2147483647), toUInt16(256) <= toInt32(2147483647), toUInt16(256) > toInt32(2147483647), toUInt16(256) >= toInt32(2147483647), toInt32(2147483647) = toUInt16(256), toInt32(2147483647) != toUInt16(256), toInt32(2147483647) < toUInt16(256), toInt32(2147483647) <= toUInt16(256), toInt32(2147483647) > toUInt16(256), toInt32(2147483647) >= toUInt16(256) , toUInt16(256) = toUInt64(2147483647), toUInt16(256) != toUInt64(2147483647), toUInt16(256) < toUInt64(2147483647), toUInt16(256) <= toUInt64(2147483647), toUInt16(256) > toUInt64(2147483647), toUInt16(256) >= toUInt64(2147483647), toUInt64(2147483647) = toUInt16(256), toUInt64(2147483647) != toUInt16(256), toUInt64(2147483647) < toUInt16(256), toUInt64(2147483647) <= toUInt16(256), toUInt64(2147483647) > toUInt16(256), toUInt64(2147483647) >= toUInt16(256) , toUInt16(256) = toInt64(2147483647), toUInt16(256) != toInt64(2147483647), toUInt16(256) < toInt64(2147483647), toUInt16(256) <= toInt64(2147483647), toUInt16(256) > toInt64(2147483647), toUInt16(256) >= toInt64(2147483647), toInt64(2147483647) = toUInt16(256), toInt64(2147483647) != toUInt16(256), toInt64(2147483647) < toUInt16(256), toInt64(2147483647) <= toUInt16(256), toInt64(2147483647) > toUInt16(256), toInt64(2147483647) >= toUInt16(256) , toInt16(256) = toUInt32(2147483647), toInt16(256) != toUInt32(2147483647), toInt16(256) < toUInt32(2147483647), toInt16(256) <= toUInt32(2147483647), toInt16(256) > toUInt32(2147483647), toInt16(256) >= toUInt32(2147483647), toUInt32(2147483647) = toInt16(256), toUInt32(2147483647) != toInt16(256), toUInt32(2147483647) < toInt16(256), toUInt32(2147483647) <= toInt16(256), toUInt32(2147483647) > toInt16(256), toUInt32(2147483647) >= toInt16(256) , toInt16(256) = toInt32(2147483647), toInt16(256) != toInt32(2147483647), toInt16(256) < toInt32(2147483647), toInt16(256) <= toInt32(2147483647), toInt16(256) > toInt32(2147483647), toInt16(256) >= toInt32(2147483647), toInt32(2147483647) = toInt16(256), toInt32(2147483647) != toInt16(256), toInt32(2147483647) < toInt16(256), toInt32(2147483647) <= toInt16(256), toInt32(2147483647) > toInt16(256), toInt32(2147483647) >= toInt16(256) , toInt16(256) = toUInt64(2147483647), toInt16(256) != toUInt64(2147483647), toInt16(256) < toUInt64(2147483647), toInt16(256) <= toUInt64(2147483647), toInt16(256) > toUInt64(2147483647), toInt16(256) >= toUInt64(2147483647), toUInt64(2147483647) = toInt16(256), toUInt64(2147483647) != toInt16(256), toUInt64(2147483647) < toInt16(256), toUInt64(2147483647) <= toInt16(256), toUInt64(2147483647) > toInt16(256), toUInt64(2147483647) >= toInt16(256) , toInt16(256) = toInt64(2147483647), toInt16(256) != toInt64(2147483647), toInt16(256) < toInt64(2147483647), toInt16(256) <= toInt64(2147483647), toInt16(256) > toInt64(2147483647), toInt16(256) >= toInt64(2147483647), toInt64(2147483647) = toInt16(256), toInt64(2147483647) != toInt16(256), toInt64(2147483647) < toInt16(256), toInt64(2147483647) <= toInt16(256), toInt64(2147483647) > toInt16(256), toInt64(2147483647) >= toInt16(256) , toUInt32(256) = toUInt32(2147483647), toUInt32(256) != toUInt32(2147483647), toUInt32(256) < toUInt32(2147483647), toUInt32(256) <= toUInt32(2147483647), toUInt32(256) > toUInt32(2147483647), toUInt32(256) >= toUInt32(2147483647), toUInt32(2147483647) = toUInt32(256), toUInt32(2147483647) != toUInt32(256), toUInt32(2147483647) < toUInt32(256), toUInt32(2147483647) <= toUInt32(256), toUInt32(2147483647) > toUInt32(256), toUInt32(2147483647) >= toUInt32(256) , toUInt32(256) = toInt32(2147483647), toUInt32(256) != toInt32(2147483647), toUInt32(256) < toInt32(2147483647), toUInt32(256) <= toInt32(2147483647), toUInt32(256) > toInt32(2147483647), toUInt32(256) >= toInt32(2147483647), toInt32(2147483647) = toUInt32(256), toInt32(2147483647) != toUInt32(256), toInt32(2147483647) < toUInt32(256), toInt32(2147483647) <= toUInt32(256), toInt32(2147483647) > toUInt32(256), toInt32(2147483647) >= toUInt32(256) , toUInt32(256) = toUInt64(2147483647), toUInt32(256) != toUInt64(2147483647), toUInt32(256) < toUInt64(2147483647), toUInt32(256) <= toUInt64(2147483647), toUInt32(256) > toUInt64(2147483647), toUInt32(256) >= toUInt64(2147483647), toUInt64(2147483647) = toUInt32(256), toUInt64(2147483647) != toUInt32(256), toUInt64(2147483647) < toUInt32(256), toUInt64(2147483647) <= toUInt32(256), toUInt64(2147483647) > toUInt32(256), toUInt64(2147483647) >= toUInt32(256) , toUInt32(256) = toInt64(2147483647), toUInt32(256) != toInt64(2147483647), toUInt32(256) < toInt64(2147483647), toUInt32(256) <= toInt64(2147483647), toUInt32(256) > toInt64(2147483647), toUInt32(256) >= toInt64(2147483647), toInt64(2147483647) = toUInt32(256), toInt64(2147483647) != toUInt32(256), toInt64(2147483647) < toUInt32(256), toInt64(2147483647) <= toUInt32(256), toInt64(2147483647) > toUInt32(256), toInt64(2147483647) >= toUInt32(256) , toInt32(256) = toUInt32(2147483647), toInt32(256) != toUInt32(2147483647), toInt32(256) < toUInt32(2147483647), toInt32(256) <= toUInt32(2147483647), toInt32(256) > toUInt32(2147483647), toInt32(256) >= toUInt32(2147483647), toUInt32(2147483647) = toInt32(256), toUInt32(2147483647) != toInt32(256), toUInt32(2147483647) < toInt32(256), toUInt32(2147483647) <= toInt32(256), toUInt32(2147483647) > toInt32(256), toUInt32(2147483647) >= toInt32(256) , toInt32(256) = toInt32(2147483647), toInt32(256) != toInt32(2147483647), toInt32(256) < toInt32(2147483647), toInt32(256) <= toInt32(2147483647), toInt32(256) > toInt32(2147483647), toInt32(256) >= toInt32(2147483647), toInt32(2147483647) = toInt32(256), toInt32(2147483647) != toInt32(256), toInt32(2147483647) < toInt32(256), toInt32(2147483647) <= toInt32(256), toInt32(2147483647) > toInt32(256), toInt32(2147483647) >= toInt32(256) , toInt32(256) = toUInt64(2147483647), toInt32(256) != toUInt64(2147483647), toInt32(256) < toUInt64(2147483647), toInt32(256) <= toUInt64(2147483647), toInt32(256) > toUInt64(2147483647), toInt32(256) >= toUInt64(2147483647), toUInt64(2147483647) = toInt32(256), toUInt64(2147483647) != toInt32(256), toUInt64(2147483647) < toInt32(256), toUInt64(2147483647) <= toInt32(256), toUInt64(2147483647) > toInt32(256), toUInt64(2147483647) >= toInt32(256) , toInt32(256) = toInt64(2147483647), toInt32(256) != toInt64(2147483647), toInt32(256) < toInt64(2147483647), toInt32(256) <= toInt64(2147483647), toInt32(256) > toInt64(2147483647), toInt32(256) >= toInt64(2147483647), toInt64(2147483647) = toInt32(256), toInt64(2147483647) != toInt32(256), toInt64(2147483647) < toInt32(256), toInt64(2147483647) <= toInt32(256), toInt64(2147483647) > toInt32(256), toInt64(2147483647) >= toInt32(256) , toUInt64(256) = toUInt32(2147483647), toUInt64(256) != toUInt32(2147483647), toUInt64(256) < toUInt32(2147483647), toUInt64(256) <= toUInt32(2147483647), toUInt64(256) > toUInt32(2147483647), toUInt64(256) >= toUInt32(2147483647), toUInt32(2147483647) = toUInt64(256), toUInt32(2147483647) != toUInt64(256), toUInt32(2147483647) < toUInt64(256), toUInt32(2147483647) <= toUInt64(256), toUInt32(2147483647) > toUInt64(256), toUInt32(2147483647) >= toUInt64(256) , toUInt64(256) = toInt32(2147483647), toUInt64(256) != toInt32(2147483647), toUInt64(256) < toInt32(2147483647), toUInt64(256) <= toInt32(2147483647), toUInt64(256) > toInt32(2147483647), toUInt64(256) >= toInt32(2147483647), toInt32(2147483647) = toUInt64(256), toInt32(2147483647) != toUInt64(256), toInt32(2147483647) < toUInt64(256), toInt32(2147483647) <= toUInt64(256), toInt32(2147483647) > toUInt64(256), toInt32(2147483647) >= toUInt64(256) , toUInt64(256) = toUInt64(2147483647), toUInt64(256) != toUInt64(2147483647), toUInt64(256) < toUInt64(2147483647), toUInt64(256) <= toUInt64(2147483647), toUInt64(256) > toUInt64(2147483647), toUInt64(256) >= toUInt64(2147483647), toUInt64(2147483647) = toUInt64(256), toUInt64(2147483647) != toUInt64(256), toUInt64(2147483647) < toUInt64(256), toUInt64(2147483647) <= toUInt64(256), toUInt64(2147483647) > toUInt64(256), toUInt64(2147483647) >= toUInt64(256) , toUInt64(256) = toInt64(2147483647), toUInt64(256) != toInt64(2147483647), toUInt64(256) < toInt64(2147483647), toUInt64(256) <= toInt64(2147483647), toUInt64(256) > toInt64(2147483647), toUInt64(256) >= toInt64(2147483647), toInt64(2147483647) = toUInt64(256), toInt64(2147483647) != toUInt64(256), toInt64(2147483647) < toUInt64(256), toInt64(2147483647) <= toUInt64(256), toInt64(2147483647) > toUInt64(256), toInt64(2147483647) >= toUInt64(256) , toInt64(256) = toUInt32(2147483647), toInt64(256) != toUInt32(2147483647), toInt64(256) < toUInt32(2147483647), toInt64(256) <= toUInt32(2147483647), toInt64(256) > toUInt32(2147483647), toInt64(256) >= toUInt32(2147483647), toUInt32(2147483647) = toInt64(256), toUInt32(2147483647) != toInt64(256), toUInt32(2147483647) < toInt64(256), toUInt32(2147483647) <= toInt64(256), toUInt32(2147483647) > toInt64(256), toUInt32(2147483647) >= toInt64(256) , toInt64(256) = toInt32(2147483647), toInt64(256) != toInt32(2147483647), toInt64(256) < toInt32(2147483647), toInt64(256) <= toInt32(2147483647), toInt64(256) > toInt32(2147483647), toInt64(256) >= toInt32(2147483647), toInt32(2147483647) = toInt64(256), toInt32(2147483647) != toInt64(256), toInt32(2147483647) < toInt64(256), toInt32(2147483647) <= toInt64(256), toInt32(2147483647) > toInt64(256), toInt32(2147483647) >= toInt64(256) , toInt64(256) = toUInt64(2147483647), toInt64(256) != toUInt64(2147483647), toInt64(256) < toUInt64(2147483647), toInt64(256) <= toUInt64(2147483647), toInt64(256) > toUInt64(2147483647), toInt64(256) >= toUInt64(2147483647), toUInt64(2147483647) = toInt64(256), toUInt64(2147483647) != toInt64(256), toUInt64(2147483647) < toInt64(256), toUInt64(2147483647) <= toInt64(256), toUInt64(2147483647) > toInt64(256), toUInt64(2147483647) >= toInt64(256) , toInt64(256) = toInt64(2147483647), toInt64(256) != toInt64(2147483647), toInt64(256) < toInt64(2147483647), toInt64(256) <= toInt64(2147483647), toInt64(256) > toInt64(2147483647), toInt64(256) >= toInt64(2147483647), toInt64(2147483647) = toInt64(256), toInt64(2147483647) != toInt64(256), toInt64(2147483647) < toInt64(256), toInt64(2147483647) <= toInt64(256), toInt64(2147483647) > toInt64(256), toInt64(2147483647) >= toInt64(256) 
DROP DATABASE IF EXISTS test_r1bw5l2v 
CREATE TABLE t_merge AS t ENGINE = Merge('02111_modify_table_comment', 't') COMMENT 'this is a Merge table';
CREATE TABLE test_01193_18429.table_2_312 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE DATABASE IF NOT EXISTS test_dxodcfwb 
CREATE TABLE test_2E5C27695F29522A7742545C6944377B537B35365F635C6A754F4D453F5869224A786F7B2D352D69(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS 01914_db;
select 36 as offset, 8 as length, 'Hello' as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
INSERT INTO test_01193_18429.table_6_778 VALUES 
SELECT 'Running test stateless/00558_parse_floats.sql from pid=1724' 
DROP TABLE IF EXISTS join_string_key;
SELECT 'Running test stateless/00464_sort_all_constant_columns.sql from pid=1713' 
INSERT INTO test_01193_18429.table_8_193 VALUES 
CREATE TABLE test_01193_18429.table_10_623 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c9) AND c1 AND c2) OR (c0) OR ((NOT c6) AND c3) OR (c6 AND c2 AND (NOT c7) AND (NOT c4) AND c4) OR ((NOT c6)) OR (c3) OR (c5 AND c6 AND c6 AND c0) OR (c7 AND c1 AND (NOT c4) AND c4 AND c1) OR (c7 AND (NOT c6) AND (NOT c4)) OR ((NOT c6) AND (NOT c5) AND c4) SETTINGS convert_query_to_cnf = 1
SELECT accurateCastOrNull(10, 'Decimal32(9)');
optimize table tbl_8parts_8granules_rnd final;
CREATE TABLE test_2E23246C30336F7B4F67322B4C37225B36285A6D665F404B362847294E477D652523623A2B50536A(x UInt8) Engine=Memory;
CREATE TABLE test_70633B25676D323946326F2A5B766D72685B72455A7D592D5D513F754C6860352B5B59742479673A(x UInt8) Engine=Memory;
SELECT avgWeighted(x, w) FROM values('x Float64, w Float64', (4, 1), (1, 0), (10, 2));
CREATE INDEX idx_tab3_5 ON tab3 (col3 DESC,col1,col0);
DROP DATABASE IF EXISTS test_j2goc3qb 
SELECT sparkbar(10)(number, number - 7) FROM numbers(10);
INSERT INTO r9 SELECT 1 % 10 = 9 ? 1 - 1 : 1
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (57 < 53 AND 51 > 0 ? 57 : 0)), throwIf(last != (57 < 53 AND 51 > 0 ? least(53 - 1, 57 + 51 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(53) LIMIT 57, 51);
SELECT arrayMin(NULL, NULL, NULL);
SELECT 'func(aggregate function) GROUP BY';
CREATE TABLE table_for_rename_pk (`date` Date, `key1` UInt64, `key2` UInt64, `key3` UInt64, `value1` String, `value2` String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01213/table_for_rename_pk1', '1') PARTITION BY date ORDER BY (key1, pow(key2, 2), key3) SETTINGS index_granularity = 59627, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 3195, prefer_fetch_merged_part_size_threshold = 1895675918, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 8415980043, index_granularity_bytes = 9650329, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 93905, primary_key_compress_block_size = 79041
SELECT 'SELECT toStartOfMonth(N, \'Asia/Istanbul\')';
INSERT INTO test_01193_18429.table_9_274 VALUES 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (30 < 22 AND 0 > 0 ? 30 : 0)), throwIf(last != (30 < 22 AND 0 > 0 ? least(22 - 1, 30 + 0 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(22) LIMIT 30, 0);
SELECT format('The {0} to all questions is {1}.', 'answer', materialize(43.43 :: Float64));
CREATE TABLE test_02908_r1_25 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_25', 'r1') ORDER BY tuple()
INSERT INTO test_01193_18429.table_10_109 VALUES 
DROP TABLE cast2;
CREATE TABLE test_617A2839343E6832394A2F4B30765C606E6C6B4752756B5F7B4D3048322C742F7C21534F434A3D6C(x UInt8) Engine=Memory;
SELECT DISTINCT * FROM clear_column2 ORDER BY d, i, s;
INSERT INTO test_01193_18429.table_3_456 VALUES 
DROP DATABASE IF EXISTS test_pk5nhigz 
ALTER TABLE mutations_cleaner_r1 DELETE WHERE x = 4
EXPLAIN SYNTAX SELECT number > 5 ? 'censor.net' : 'google' FROM system.numbers LIMIT 10;
select 1 = multiMatchAny(materialize('abc'), materialize(['...'])) from system.numbers limit 10;
SELECT 'Running test stateless/00098_shard_i_union_all.sql from pid=1718' 
SELECT 1 + x FROM tab where plus(1::LowCardinality(Nullable(UInt8)), x) <= 2 order by x;
select 'dst_to_src', 5, 'src', type, n, _part from src order by type, n
insert into test settings input_format_null_as_default=1, input_format_defaults_for_omitted_fields=1 format Parquet
SELECT * FROM distributed SETTINGS prefer_localhost_replica = 0
INSERT INTO test_01193_18429.table_2_33 VALUES 
SELECT mapExists((k, v) -> k LIKE '%2' AND v < 1000, col) FROM table_map ORDER BY id;
SELECT * FROM file('/var/lib/clickhouse/user_files/02661_read_from_archive_test_fyi66vcq_targz_archive1.tar.gz :: 02661_read_from_archive_test_fyi66vcq_targz_data1.csv') ORDER BY 1, 2
SELECT CASE WHEN 1 THEN toFixedString('foo', 16) WHEN (col1 % 3) = 0 THEN 'bar' ELSE 'baz' END FROM multi_if_check;
INSERT INTO test_01193_18429.table_7_92 VALUES 
select * from system.stack_trace where thread_id != 0 format Null
DROP TABLE IF EXISTS t2_00203;
INSERT INTO arrow_dicts select toString(number) from numbers(120);
SELECT 'Running test stateless/02244_column_names_in_shcmea_inference.sql from pid=1705' 
CREATE TABLE test_545257334E556337575749477474516F4E772F517556487C4F416C63575D4F6F3269554D565A7C29(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_10_345 VALUES 
CREATE TABLE test_01193_18429.table_5_186 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT finalizeAggregation(materialize((SELECT sumState(number) FROM numbers(10)) * 10));
SELECT dictHas('01684_database_for_cache_dictionary.cache_dictionary_simple_key_simple_attributes', number) FROM system.numbers LIMIT 4;
INSERT INTO test_prewhere_default_column VALUES
CREATE TABLE test_02908_r2_77 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_77', 'r2') ORDER BY tuple()
SELECT * FROM (SELECT id FROM test_00808 GROUP BY id LIMIT 1 BY id) WHERE id = 1;
SELECT count() FROM datetime_date_table WHERE col_datetime > '2020-03-04 10:20:45'::DateTime;
SELECT t1.id, t1.value, t2.id, t2.value, t3.id, t3.value FROM test_table_join_1 AS t1 LEFT JOIN test_table_join_2 AS t2 ON t1.id = t2.id AND t1.value == 'Join_1_Value_0' INNER JOIN test_table_join_3 AS t3 ON t2.id = t3.id AND t2.value == 'Join_2_Value_0';
DROP TABLE IF EXISTS replacing_00155
CREATE VIEW test_02428_pv7 AS SELECT Price/{price:UInt64} FROM test_02428_Catalog ORDER BY Price
select if(1, [cast(materialize(2.0),'Decimal(18,0)')], [cast(materialize(1.0),'Decimal(18,10)')]);
DROP TABLE IF EXISTS null_as_default
SELECT 'Map';
SELECT 'Running test stateless/01238_http_memory_tracking.sh from pid=1705' 
CREATE TABLE test_01193_18429.table_4_787 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE geo (p Tuple(Float64, Float64), id Int) engine=Memory();
SELECT 'Running test stateless/01109_inflating_cross_join.sql from pid=1722' 
ALTER TABLE concurrent_alter_column ADD COLUMN c81 DOUBLE;
INSERT INTO test_01193_18429.table_7_695 VALUES 
SELECT multiIf((number % 2) = 0, toFloat64(1), (number % 3) = 0, toUInt16(2), toUInt32(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_2_674 VALUES 
CREATE TABLE test_01193_18429.table_8_143 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_3_89 VALUES 
CREATE TABLE test_01193_18429.table_6_179 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_567B5950592A315C354B713B6C702D464D7A705A7552213A745A493A3D473E3D702A63325F244D32(x UInt8) Engine=Memory;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c1) AND c3) OR ((NOT c2) AND c1 AND c5 AND c4 AND (NOT c1)) OR ((NOT c4) AND (NOT c5) AND c9) OR (c3 AND (NOT c5)) OR ((NOT c5) AND c5 AND c4) OR (c2 AND (NOT c4) AND (NOT c0) AND c5) SETTINGS convert_query_to_cnf = 0
SELECT 'Running test stateless/01280_ssd_complex_key_dictionary.sh from pid=1705' 
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 31911, 500 settings ignore_materialized_views_with_dropped_target_table=1
DROP TABLE IF EXISTS left_join;
SELECT number FROM numbers(10) WHERE number > 15 and test_function(number, number) == 4;
insert into buffer_01256 select * from system.numbers limit 5;
CREATE TABLE `02947_table_2` (`id` Int32) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 6552, min_bytes_for_wide_part = 19138368, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 103, merge_max_block_size = 13489, prefer_fetch_merged_part_size_threshold = 8327505712, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 712897722, index_granularity_bytes = 26741083, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 11831, primary_key_compress_block_size = 78501
SELECT variantType(v) as type FROM test;
CREATE DATABASE IF NOT EXISTS test_qzt0wgoy 
SELECT 128, -9223372036854775807, 128 = -9223372036854775807, 128 != -9223372036854775807, 128 < -9223372036854775807, 128 <= -9223372036854775807, 128 > -9223372036854775807, 128 >= -9223372036854775807, -9223372036854775807 = 128, -9223372036854775807 != 128, -9223372036854775807 < 128, -9223372036854775807 <= 128, -9223372036854775807 > 128, -9223372036854775807 >= 128 , toUInt8(128) = toInt64(-9223372036854775807), toUInt8(128) != toInt64(-9223372036854775807), toUInt8(128) < toInt64(-9223372036854775807), toUInt8(128) <= toInt64(-9223372036854775807), toUInt8(128) > toInt64(-9223372036854775807), toUInt8(128) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toUInt8(128), toInt64(-9223372036854775807) != toUInt8(128), toInt64(-9223372036854775807) < toUInt8(128), toInt64(-9223372036854775807) <= toUInt8(128), toInt64(-9223372036854775807) > toUInt8(128), toInt64(-9223372036854775807) >= toUInt8(128) , toUInt16(128) = toInt64(-9223372036854775807), toUInt16(128) != toInt64(-9223372036854775807), toUInt16(128) < toInt64(-9223372036854775807), toUInt16(128) <= toInt64(-9223372036854775807), toUInt16(128) > toInt64(-9223372036854775807), toUInt16(128) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toUInt16(128), toInt64(-9223372036854775807) != toUInt16(128), toInt64(-9223372036854775807) < toUInt16(128), toInt64(-9223372036854775807) <= toUInt16(128), toInt64(-9223372036854775807) > toUInt16(128), toInt64(-9223372036854775807) >= toUInt16(128) , toInt16(128) = toInt64(-9223372036854775807), toInt16(128) != toInt64(-9223372036854775807), toInt16(128) < toInt64(-9223372036854775807), toInt16(128) <= toInt64(-9223372036854775807), toInt16(128) > toInt64(-9223372036854775807), toInt16(128) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toInt16(128), toInt64(-9223372036854775807) != toInt16(128), toInt64(-9223372036854775807) < toInt16(128), toInt64(-9223372036854775807) <= toInt16(128), toInt64(-9223372036854775807) > toInt16(128), toInt64(-9223372036854775807) >= toInt16(128) , toUInt32(128) = toInt64(-9223372036854775807), toUInt32(128) != toInt64(-9223372036854775807), toUInt32(128) < toInt64(-9223372036854775807), toUInt32(128) <= toInt64(-9223372036854775807), toUInt32(128) > toInt64(-9223372036854775807), toUInt32(128) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toUInt32(128), toInt64(-9223372036854775807) != toUInt32(128), toInt64(-9223372036854775807) < toUInt32(128), toInt64(-9223372036854775807) <= toUInt32(128), toInt64(-9223372036854775807) > toUInt32(128), toInt64(-9223372036854775807) >= toUInt32(128) , toInt32(128) = toInt64(-9223372036854775807), toInt32(128) != toInt64(-9223372036854775807), toInt32(128) < toInt64(-9223372036854775807), toInt32(128) <= toInt64(-9223372036854775807), toInt32(128) > toInt64(-9223372036854775807), toInt32(128) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toInt32(128), toInt64(-9223372036854775807) != toInt32(128), toInt64(-9223372036854775807) < toInt32(128), toInt64(-9223372036854775807) <= toInt32(128), toInt64(-9223372036854775807) > toInt32(128), toInt64(-9223372036854775807) >= toInt32(128) , toUInt64(128) = toInt64(-9223372036854775807), toUInt64(128) != toInt64(-9223372036854775807), toUInt64(128) < toInt64(-9223372036854775807), toUInt64(128) <= toInt64(-9223372036854775807), toUInt64(128) > toInt64(-9223372036854775807), toUInt64(128) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toUInt64(128), toInt64(-9223372036854775807) != toUInt64(128), toInt64(-9223372036854775807) < toUInt64(128), toInt64(-9223372036854775807) <= toUInt64(128), toInt64(-9223372036854775807) > toUInt64(128), toInt64(-9223372036854775807) >= toUInt64(128) , toInt64(128) = toInt64(-9223372036854775807), toInt64(128) != toInt64(-9223372036854775807), toInt64(128) < toInt64(-9223372036854775807), toInt64(128) <= toInt64(-9223372036854775807), toInt64(128) > toInt64(-9223372036854775807), toInt64(128) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toInt64(128), toInt64(-9223372036854775807) != toInt64(128), toInt64(-9223372036854775807) < toInt64(128), toInt64(-9223372036854775807) <= toInt64(128), toInt64(-9223372036854775807) > toInt64(128), toInt64(-9223372036854775807) >= toInt64(128) 
select sum(zero), count() from zeros(10000000);
SELECT groupArray(number) FROM numbers(10) WHERE number = -1 WITH TOTALS FORMAT Vertical;
CREATE TABLE foo (key UInt32, a String, b Int64, c String) ENGINE = TinyLog;
SET allow_suspicious_low_cardinality_types=1
CREATE TABLE test_4F70215444706B426370406D7D73397847452F39434C3F4A39443F2943722B2826402D664571695A(x UInt8) Engine=Memory;
DROP TABLE set_index__fuzz_41;
INSERT INTO table_without_pk SELECT number % 32, number, toDateTime('2019-10-01 00:00:00'), toString(number % 10) FROM numbers(10000000);
SELECT cutIPv6(IPv6StringToNum('2001:0DB8:AC10:FE01:FEED:BABE:CAFE:F00D'), 0, 5);
select geoToH3(37.63098076, 55.77922738, 15);
alter table many_mutations delete where y = 738 * 2 settings mutations_sync = 0;
INSERT INTO test_01193_18429.table_7_432 VALUES 
INSERT INTO r10 SELECT 92 % 10 = 10 ? 92 - 1 : 92
DROP DATABASE IF EXISTS test_2n68n0em 
select hasAny(['a', 'b'], ['a', 'c']);
CREATE DATABASE IF NOT EXISTS test_lilu03vw 
SELECT 'Running test stateless/01933_client_replxx_convert_history.expect from pid=1718' 
SELECT * FROM t
INSERT INTO t_vertical_merges SELECT NULL, 1;
SELECT multiIf((number % 2) = 0, toUInt32(1), (number % 3) = 0, toInt8(2), toInt16(3)) FROM system.numbers LIMIT 10;
select d1, a1 from aliases_test array join d1, a1;
SELECT 'Running test stateless/01414_bloom_filter_index_with_const_column.sql from pid=1718' 
CREATE TABLE test_01193_18429.table_8_154 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_9_839 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
alter table many_mutations delete where y = 181 * 2 settings mutations_sync = 0;
SELECT multiIf((number % 2) = 0, [toInt8(1), toInt8(2)], (number % 3) = 0, [toFloat64(2), toFloat64(3)], [toUInt32(3), toUInt32(3)]) FROM system.numbers LIMIT 10;
SELECT multiIf((col1 % 2) = 0, toFixedString(col2, 16), 1, toFixedString(col3, 16), 'baz') FROM multi_if_check;
SELECT 'Running test stateless/01914_ubsan_quantile_timing.sql from pid=1713' 
CREATE TABLE test_6549224D4B2F63456B2662767E2E317C535F6B75694C5642486E656D6E523A6C57796C354265787C(x UInt8) Engine=Memory;
SELECT arraySort([NULL]);
CREATE INDEX idx_tab4_5 ON tab4 (col3 DESC,col1 DESC);
SELECT stem('fr', 'dÃÂ©passer');
SELECT 'Running test stateless/01355_if_fixed_string.sql from pid=1714' 
select * from ts order by sensor_id, timestamp with fill from 6 step 1 interpolate (value as 9999) settings use_with_fill_by_sorting_prefix=0;
SELECT (a, d, g) = (b, e, h), (a, d, g) != (b, e, h) FROM decimal ORDER BY a;
SELECT age('week', toDateTime('2015-08-18 00:00:00', 'UTC'), toDate32('2015-08-25', 'UTC'), 'UTC');
SELECT 'SELECT date_trunc(\'minute\', N, \'Asia/Istanbul\')';
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 34250, 500 settings ignore_materialized_views_with_dropped_target_table=1
INSERT INTO null_as_default FORMAT TSV
INSERT INTO test_01193_18429.table_3_600 VALUES 
INSERT INTO test_01193_18429.table_4_323 VALUES 
select dictGetAll('regexp_dict4', 'pattern', 'hello world');
CREATE TABLE test_743239707444442E29682F746572576163705E2B4E52525B743A6A4B5147463175762E322E6B5D2B(x UInt8) Engine=Memory;
CREATE TABLE test_4C2F5C214B6A63612151766F21642971662A5152664B784F4B424C41783F74592F34277A3C62302D(x UInt8) Engine=Memory;
SYSTEM STOP MERGES mt_compact
CREATE TABLE test_02908_r2_108 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_108', 'r2') ORDER BY tuple()
CREATE TABLE test_01193_18429.table_8_738 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'Running test stateless/02932_refreshable_materialized_views.sh from pid=1720' 
SELECT b, c FROM t_fixed_prefix ORDER BY b, c SETTINGS optimize_read_in_order = 0
select count(ignore(*)) from data_02051 settings min_bytes_to_use_direct_io=0, local_filesystem_read_method='pread_threadpool', local_filesystem_read_prefetch=1, read_priority=0, max_read_buffer_size=65505 ;
SELECT '2015-02-03' < toDate('2015-02-04');
alter table data_01900_2 update s = 'bar_27' where 1;
SELECT * FROM log ORDER BY x;
SELECT '13' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('fffe::')))
select transform(1, [1], [toDecimal32(42, 2)]), toDecimal32(42, 2);
SELECT -1 IN (-1), -1 IN (1, -1, 2), 1.0 IN (1), 1.1 IN (1, -1), 1.0 IN (3, 1., -1), 1 IN (3, 2, 1), toInt16(-1) IN (255), materialize(-1) IN (-1), materialize(-1) IN (1, -1, 2), materialize(1.0) IN (1), materialize(1.1) IN (1, -1), materialize(1.0) IN (3, 1., -1), materialize(1) IN (3, 2, 1), materialize(toInt16(-1)) IN (255);
SELECT multiIf((number % 2) = 0, [toUInt16(1), toUInt16(2)], (number % 3) = 0, [toInt64(2), toInt64(3)], [toInt32(3), toInt32(3)]) FROM system.numbers LIMIT 10;
SELECT id > 1, d.idd FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(0)) AS idd) AS d ON a.id = d.idd ;
SELECT reinterpret(a, 'String'), reinterpretAsString(a), reinterpretAsUInt8('1') as a;
CREATE TABLE test_01193_18429.table_2_537 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT dateDiff('year', toDate('2017-12-31'), toDate('2016-01-01'));
CREATE TABLE test_3E725D436F6350405A2B43532655444A7C6429205E515F254326564649757E3A595872203366787D(x UInt8) Engine=Memory;
desc file(02404_data.CSVWithNames) settings input_format_try_infer_dates=0;
SELECT tryBase58Decode('');
SELECT multiIf(1, 'foo', (col1 % 3) = 0, toFixedString('bar', 16), toFixedString('baz', 16)) FROM multi_if_check;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt8(1) WHEN (number % 3) = 0 THEN toUInt64(2) ELSE toUInt32(3) END FROM system.numbers LIMIT 10;
alter table many_mutations delete where y = 739 * 2 settings mutations_sync = 0;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toFloat64(2) ELSE toUInt16(3) END FROM system.numbers LIMIT 10;
SELECT * FROM numbers(10) FORMAT JSONLines;
CREATE TABLE test_5A5F4C286C6178274C3D705E544F61443D35376B595A63617A5A67432D216466543F64477B3D2D28(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS test_nested;
SELECT * FROM numbers(34547)
CREATE TABLE 01837_db.simple_key_dictionary_source ( id UInt64, value String ) ENGINE = TinyLog;
INSERT INTO src_4 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 24
ALTER TABLE concurrent_alter_column ADD COLUMN c120 DOUBLE;
select uniqExact(_part), count() from sDD where d >= 1598918400000 and toYYYYMM(toDateTime(intDiv(d,1000),'UTC')-1) < 202010;
CREATE TABLE test_default_using_alias ( what String, a String DEFAULT concat(c, ' is great'), b String DEFAULT concat(c, ' is fast'), c String ALIAS concat(what, 'House') ) ENGINE = TinyLog;
SELECT multiIf((number % 2) = 0, toFloat64(1), (number % 3) = 0, toFloat32(2), toInt16(3)) FROM system.numbers LIMIT 10;
DROP TABLE IF EXISTS insert_fewer_columns_2;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (0 < 6 AND 32 > 0 ? 0 : 0)), throwIf(last != (0 < 6 AND 32 > 0 ? least(6 - 1, 0 + 32 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(6) LIMIT 0, 32);
SELECT * FROM t1 FULL JOIN t2 ON t1.a <=> t2.a AND t1.b <=> t2.b ORDER BY t1.val NULLS FIRST, t2.val NULLS FIRST ;
CREATE TABLE test_49665C532738535E5528712E4E6924724646212169384F7A3B37446D214B2679333079297A772331(x UInt8) Engine=Memory;
INSERT INTO src_13 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 23
CREATE TABLE test_01193_18429.table_5_890 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
alter table many_mutations delete where y = 573 * 2 settings mutations_sync = 0;
select count() from replacing_m3;
DROP DATABASE IF EXISTS test_y0wj0pyr 
SELECT 'Running test stateless/02495_concat_with_separator.sql from pid=1722' 
DROP DATABASE IF EXISTS test_m2o5fx6a 
INSERT INTO table_with_enum_column_for_csv_insert FORMAT CSV 
SELECT 'Running test stateless/01416_join_totals_header_bug.sql from pid=1720' 
ALTER TABLE dst_7 DROP PARTITION 7
INSERT INTO aggregating_00682(k) VALUES 
SELECT substring('clickhouse', 2, -2);
DROP DATABASE IF EXISTS test_nuz4z4yx 
SELECT * FROM decimal ORDER BY b DESC FORMAT CSV;
ATTACH TABLE replicated_table_for_reset_setting2;
DROP DATABASE IF EXISTS test_z3m91cy3 
INSERT INTO test_01193_18429.table_1_640 VALUES 
INSERT INTO test_01193_18429.table_7_308 VALUES 
CREATE TABLE test_01193_18429.table_8_475 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_8_691 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_7_945 VALUES 
CREATE TABLE tt3 (a UInt32, b UInt32 ALIAS c, c UInt32) ENGINE = Memory;
CREATE TABLE test_6E3673543450247A65663C365B2A6630664177255230632E2523745C432430442F5A70484A247371(x UInt8) Engine=Memory;
CREATE TABLE test_4D515757787A316B3F497D393B424461745D2B327A376778447750415A4F53502534622027445950(x UInt8) Engine=Memory;
CREATE TABLE test_58615F74482F41554456673038772E2E79736E205A3C6C473E7754566F597B6230254A785D417D38(x UInt8) Engine=Memory;
SELECT toDateTimeOrDefault('');
CREATE TABLE replicated_optimize1 (d Date, k UInt64, i32 Int32) ENGINE=ReplicatedMergeTree('/clickhouse/tables/00925_zookeeper_empty_replicated_merge_tree_optimize_final_long_test_au1cp908/test_00925/optimize', 'r1', d, k, 8192);
SELECT 'Running test stateless/02676_optimize_old_parts_replicated.sh from pid=1718' 
select sipHash64Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) == sipHash64(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10));
CREATE TABLE test_24277652403D4D31772373392E217B6244667D53756B42304C445B2E5F36637656763872585E5B42(x UInt8) Engine=Memory;
alter table many_mutations delete where y = 593 * 2 settings mutations_sync = 0;
INSERT INTO test_01193_18429.table_6_32 VALUES 
select format('{}{}{}', 'a', materialize('b'), materialize('c')) == 'abc';
CREATE QUOTA q13_01297 FOR INTERVAL 1 MINUTE MAX execution_time = '12G';
SELECT 't22', * FROM t1 JOIN t22 ON t1.id == t22.idd and t1.id == t22.id OR t1.id == t22.idd and t22.key == t22.key2;
CREATE TABLE test_235D3F6376712062424B477B406D5E53543B6B704670524A603921643D764D2763574C5D646E5F57(x UInt8) Engine=Memory;
SHOW CREATE TABLE users_02534;
CREATE TABLE test_3A4C6A46437E5A6F356E667E50406E3C796D366B7C353D3D264B324853566637742E6C52706E5521(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_4_474 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE DATABASE IF NOT EXISTS test_4m3etrvs 
select if(1, materialize(map(3,4,5,6)), materialize(map(1,2,3,4))) from numbers(2);
CREATE TABLE test_01193_18429.table_2_136 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO t_json_14 VALUES 
CREATE TABLE test_5E4B20476E67623957747E3E2E4B376D7E6C7271673250403A2C307E2F5F455E59723F3134712C7E(x UInt8) Engine=Memory;
SELECT svg(NULL);
INSERT INTO test_01193_18429.table_8_635 VALUES 
DROP DATABASE IF EXISTS test_btp83e4a 
SELECT * APPLY lambda(tuple(x), x + 1) FROM numbers(5);
ALTER TABLE alter_attach ADD COLUMN s String;
INSERT INTO test_01193_18429.table_8_815 VALUES 
CREATE INDEX idx_tab3_5 ON tab3 (col4 DESC,col0 DESC);
SELECT defaultValueOfArgumentType([1])[1];
alter table many_mutations delete where y = 622 * 2 settings mutations_sync = 0;
INSERT INTO test_01193_18429.table_7_322 VALUES 
SELECT `null` FROM remote('127.0.0.2', view(SELECT 1 AS `null`));
CREATE TABLE test_204160685177385943584850422A6D5569395E74705E48654B4934792D607B41676928467C6A483E(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_2_483 VALUES 
SELECT arrayRandomSample([1,2,3], 5)
show create table test2
CREATE TABLE t_02156_dist (k UInt32, v String) ENGINE = Distributed(test_shard_localhost, currentDatabase(), t_02156_mt1);
SELECT throwIf((SELECT sum(nm) FROM mv) != 84) FORMAT Null;
CREATE TABLE null_in_1 (a Nullable(UInt32), b Nullable(UInt32)) ENGINE = Memory;
CREATE DATABASE IF NOT EXISTS test_yfszjrlv 
SELECT 'Running test stateless/02449_check_dependencies_and_table_shutdown.sql from pid=1718' 
SELECT 129, -128, 129 = -128, 129 != -128, 129 < -128, 129 <= -128, 129 > -128, 129 >= -128, -128 = 129, -128 != 129, -128 < 129, -128 <= 129, -128 > 129, -128 >= 129 , toUInt8(129) = toInt8(-128), toUInt8(129) != toInt8(-128), toUInt8(129) < toInt8(-128), toUInt8(129) <= toInt8(-128), toUInt8(129) > toInt8(-128), toUInt8(129) >= toInt8(-128), toInt8(-128) = toUInt8(129), toInt8(-128) != toUInt8(129), toInt8(-128) < toUInt8(129), toInt8(-128) <= toUInt8(129), toInt8(-128) > toUInt8(129), toInt8(-128) >= toUInt8(129) , toUInt8(129) = toInt16(-128), toUInt8(129) != toInt16(-128), toUInt8(129) < toInt16(-128), toUInt8(129) <= toInt16(-128), toUInt8(129) > toInt16(-128), toUInt8(129) >= toInt16(-128), toInt16(-128) = toUInt8(129), toInt16(-128) != toUInt8(129), toInt16(-128) < toUInt8(129), toInt16(-128) <= toUInt8(129), toInt16(-128) > toUInt8(129), toInt16(-128) >= toUInt8(129) , toUInt8(129) = toInt32(-128), toUInt8(129) != toInt32(-128), toUInt8(129) < toInt32(-128), toUInt8(129) <= toInt32(-128), toUInt8(129) > toInt32(-128), toUInt8(129) >= toInt32(-128), toInt32(-128) = toUInt8(129), toInt32(-128) != toUInt8(129), toInt32(-128) < toUInt8(129), toInt32(-128) <= toUInt8(129), toInt32(-128) > toUInt8(129), toInt32(-128) >= toUInt8(129) , toUInt8(129) = toInt64(-128), toUInt8(129) != toInt64(-128), toUInt8(129) < toInt64(-128), toUInt8(129) <= toInt64(-128), toUInt8(129) > toInt64(-128), toUInt8(129) >= toInt64(-128), toInt64(-128) = toUInt8(129), toInt64(-128) != toUInt8(129), toInt64(-128) < toUInt8(129), toInt64(-128) <= toUInt8(129), toInt64(-128) > toUInt8(129), toInt64(-128) >= toUInt8(129) , toUInt16(129) = toInt8(-128), toUInt16(129) != toInt8(-128), toUInt16(129) < toInt8(-128), toUInt16(129) <= toInt8(-128), toUInt16(129) > toInt8(-128), toUInt16(129) >= toInt8(-128), toInt8(-128) = toUInt16(129), toInt8(-128) != toUInt16(129), toInt8(-128) < toUInt16(129), toInt8(-128) <= toUInt16(129), toInt8(-128) > toUInt16(129), toInt8(-128) >= toUInt16(129) , toUInt16(129) = toInt16(-128), toUInt16(129) != toInt16(-128), toUInt16(129) < toInt16(-128), toUInt16(129) <= toInt16(-128), toUInt16(129) > toInt16(-128), toUInt16(129) >= toInt16(-128), toInt16(-128) = toUInt16(129), toInt16(-128) != toUInt16(129), toInt16(-128) < toUInt16(129), toInt16(-128) <= toUInt16(129), toInt16(-128) > toUInt16(129), toInt16(-128) >= toUInt16(129) , toUInt16(129) = toInt32(-128), toUInt16(129) != toInt32(-128), toUInt16(129) < toInt32(-128), toUInt16(129) <= toInt32(-128), toUInt16(129) > toInt32(-128), toUInt16(129) >= toInt32(-128), toInt32(-128) = toUInt16(129), toInt32(-128) != toUInt16(129), toInt32(-128) < toUInt16(129), toInt32(-128) <= toUInt16(129), toInt32(-128) > toUInt16(129), toInt32(-128) >= toUInt16(129) , toUInt16(129) = toInt64(-128), toUInt16(129) != toInt64(-128), toUInt16(129) < toInt64(-128), toUInt16(129) <= toInt64(-128), toUInt16(129) > toInt64(-128), toUInt16(129) >= toInt64(-128), toInt64(-128) = toUInt16(129), toInt64(-128) != toUInt16(129), toInt64(-128) < toUInt16(129), toInt64(-128) <= toUInt16(129), toInt64(-128) > toUInt16(129), toInt64(-128) >= toUInt16(129) , toInt16(129) = toInt8(-128), toInt16(129) != toInt8(-128), toInt16(129) < toInt8(-128), toInt16(129) <= toInt8(-128), toInt16(129) > toInt8(-128), toInt16(129) >= toInt8(-128), toInt8(-128) = toInt16(129), toInt8(-128) != toInt16(129), toInt8(-128) < toInt16(129), toInt8(-128) <= toInt16(129), toInt8(-128) > toInt16(129), toInt8(-128) >= toInt16(129) , toInt16(129) = toInt16(-128), toInt16(129) != toInt16(-128), toInt16(129) < toInt16(-128), toInt16(129) <= toInt16(-128), toInt16(129) > toInt16(-128), toInt16(129) >= toInt16(-128), toInt16(-128) = toInt16(129), toInt16(-128) != toInt16(129), toInt16(-128) < toInt16(129), toInt16(-128) <= toInt16(129), toInt16(-128) > toInt16(129), toInt16(-128) >= toInt16(129) , toInt16(129) = toInt32(-128), toInt16(129) != toInt32(-128), toInt16(129) < toInt32(-128), toInt16(129) <= toInt32(-128), toInt16(129) > toInt32(-128), toInt16(129) >= toInt32(-128), toInt32(-128) = toInt16(129), toInt32(-128) != toInt16(129), toInt32(-128) < toInt16(129), toInt32(-128) <= toInt16(129), toInt32(-128) > toInt16(129), toInt32(-128) >= toInt16(129) , toInt16(129) = toInt64(-128), toInt16(129) != toInt64(-128), toInt16(129) < toInt64(-128), toInt16(129) <= toInt64(-128), toInt16(129) > toInt64(-128), toInt16(129) >= toInt64(-128), toInt64(-128) = toInt16(129), toInt64(-128) != toInt16(129), toInt64(-128) < toInt16(129), toInt64(-128) <= toInt16(129), toInt64(-128) > toInt16(129), toInt64(-128) >= toInt16(129) , toUInt32(129) = toInt8(-128), toUInt32(129) != toInt8(-128), toUInt32(129) < toInt8(-128), toUInt32(129) <= toInt8(-128), toUInt32(129) > toInt8(-128), toUInt32(129) >= toInt8(-128), toInt8(-128) = toUInt32(129), toInt8(-128) != toUInt32(129), toInt8(-128) < toUInt32(129), toInt8(-128) <= toUInt32(129), toInt8(-128) > toUInt32(129), toInt8(-128) >= toUInt32(129) , toUInt32(129) = toInt16(-128), toUInt32(129) != toInt16(-128), toUInt32(129) < toInt16(-128), toUInt32(129) <= toInt16(-128), toUInt32(129) > toInt16(-128), toUInt32(129) >= toInt16(-128), toInt16(-128) = toUInt32(129), toInt16(-128) != toUInt32(129), toInt16(-128) < toUInt32(129), toInt16(-128) <= toUInt32(129), toInt16(-128) > toUInt32(129), toInt16(-128) >= toUInt32(129) , toUInt32(129) = toInt32(-128), toUInt32(129) != toInt32(-128), toUInt32(129) < toInt32(-128), toUInt32(129) <= toInt32(-128), toUInt32(129) > toInt32(-128), toUInt32(129) >= toInt32(-128), toInt32(-128) = toUInt32(129), toInt32(-128) != toUInt32(129), toInt32(-128) < toUInt32(129), toInt32(-128) <= toUInt32(129), toInt32(-128) > toUInt32(129), toInt32(-128) >= toUInt32(129) , toUInt32(129) = toInt64(-128), toUInt32(129) != toInt64(-128), toUInt32(129) < toInt64(-128), toUInt32(129) <= toInt64(-128), toUInt32(129) > toInt64(-128), toUInt32(129) >= toInt64(-128), toInt64(-128) = toUInt32(129), toInt64(-128) != toUInt32(129), toInt64(-128) < toUInt32(129), toInt64(-128) <= toUInt32(129), toInt64(-128) > toUInt32(129), toInt64(-128) >= toUInt32(129) , toInt32(129) = toInt8(-128), toInt32(129) != toInt8(-128), toInt32(129) < toInt8(-128), toInt32(129) <= toInt8(-128), toInt32(129) > toInt8(-128), toInt32(129) >= toInt8(-128), toInt8(-128) = toInt32(129), toInt8(-128) != toInt32(129), toInt8(-128) < toInt32(129), toInt8(-128) <= toInt32(129), toInt8(-128) > toInt32(129), toInt8(-128) >= toInt32(129) , toInt32(129) = toInt16(-128), toInt32(129) != toInt16(-128), toInt32(129) < toInt16(-128), toInt32(129) <= toInt16(-128), toInt32(129) > toInt16(-128), toInt32(129) >= toInt16(-128), toInt16(-128) = toInt32(129), toInt16(-128) != toInt32(129), toInt16(-128) < toInt32(129), toInt16(-128) <= toInt32(129), toInt16(-128) > toInt32(129), toInt16(-128) >= toInt32(129) , toInt32(129) = toInt32(-128), toInt32(129) != toInt32(-128), toInt32(129) < toInt32(-128), toInt32(129) <= toInt32(-128), toInt32(129) > toInt32(-128), toInt32(129) >= toInt32(-128), toInt32(-128) = toInt32(129), toInt32(-128) != toInt32(129), toInt32(-128) < toInt32(129), toInt32(-128) <= toInt32(129), toInt32(-128) > toInt32(129), toInt32(-128) >= toInt32(129) , toInt32(129) = toInt64(-128), toInt32(129) != toInt64(-128), toInt32(129) < toInt64(-128), toInt32(129) <= toInt64(-128), toInt32(129) > toInt64(-128), toInt32(129) >= toInt64(-128), toInt64(-128) = toInt32(129), toInt64(-128) != toInt32(129), toInt64(-128) < toInt32(129), toInt64(-128) <= toInt32(129), toInt64(-128) > toInt32(129), toInt64(-128) >= toInt32(129) , toUInt64(129) = toInt8(-128), toUInt64(129) != toInt8(-128), toUInt64(129) < toInt8(-128), toUInt64(129) <= toInt8(-128), toUInt64(129) > toInt8(-128), toUInt64(129) >= toInt8(-128), toInt8(-128) = toUInt64(129), toInt8(-128) != toUInt64(129), toInt8(-128) < toUInt64(129), toInt8(-128) <= toUInt64(129), toInt8(-128) > toUInt64(129), toInt8(-128) >= toUInt64(129) , toUInt64(129) = toInt16(-128), toUInt64(129) != toInt16(-128), toUInt64(129) < toInt16(-128), toUInt64(129) <= toInt16(-128), toUInt64(129) > toInt16(-128), toUInt64(129) >= toInt16(-128), toInt16(-128) = toUInt64(129), toInt16(-128) != toUInt64(129), toInt16(-128) < toUInt64(129), toInt16(-128) <= toUInt64(129), toInt16(-128) > toUInt64(129), toInt16(-128) >= toUInt64(129) , toUInt64(129) = toInt32(-128), toUInt64(129) != toInt32(-128), toUInt64(129) < toInt32(-128), toUInt64(129) <= toInt32(-128), toUInt64(129) > toInt32(-128), toUInt64(129) >= toInt32(-128), toInt32(-128) = toUInt64(129), toInt32(-128) != toUInt64(129), toInt32(-128) < toUInt64(129), toInt32(-128) <= toUInt64(129), toInt32(-128) > toUInt64(129), toInt32(-128) >= toUInt64(129) , toUInt64(129) = toInt64(-128), toUInt64(129) != toInt64(-128), toUInt64(129) < toInt64(-128), toUInt64(129) <= toInt64(-128), toUInt64(129) > toInt64(-128), toUInt64(129) >= toInt64(-128), toInt64(-128) = toUInt64(129), toInt64(-128) != toUInt64(129), toInt64(-128) < toUInt64(129), toInt64(-128) <= toUInt64(129), toInt64(-128) > toUInt64(129), toInt64(-128) >= toUInt64(129) , toInt64(129) = toInt8(-128), toInt64(129) != toInt8(-128), toInt64(129) < toInt8(-128), toInt64(129) <= toInt8(-128), toInt64(129) > toInt8(-128), toInt64(129) >= toInt8(-128), toInt8(-128) = toInt64(129), toInt8(-128) != toInt64(129), toInt8(-128) < toInt64(129), toInt8(-128) <= toInt64(129), toInt8(-128) > toInt64(129), toInt8(-128) >= toInt64(129) , toInt64(129) = toInt16(-128), toInt64(129) != toInt16(-128), toInt64(129) < toInt16(-128), toInt64(129) <= toInt16(-128), toInt64(129) > toInt16(-128), toInt64(129) >= toInt16(-128), toInt16(-128) = toInt64(129), toInt16(-128) != toInt64(129), toInt16(-128) < toInt64(129), toInt16(-128) <= toInt64(129), toInt16(-128) > toInt64(129), toInt16(-128) >= toInt64(129) , toInt64(129) = toInt32(-128), toInt64(129) != toInt32(-128), toInt64(129) < toInt32(-128), toInt64(129) <= toInt32(-128), toInt64(129) > toInt32(-128), toInt64(129) >= toInt32(-128), toInt32(-128) = toInt64(129), toInt32(-128) != toInt64(129), toInt32(-128) < toInt64(129), toInt32(-128) <= toInt64(129), toInt32(-128) > toInt64(129), toInt32(-128) >= toInt64(129) , toInt64(129) = toInt64(-128), toInt64(129) != toInt64(-128), toInt64(129) < toInt64(-128), toInt64(129) <= toInt64(-128), toInt64(129) > toInt64(-128), toInt64(129) >= toInt64(-128), toInt64(-128) = toInt64(129), toInt64(-128) != toInt64(129), toInt64(-128) < toInt64(129), toInt64(-128) <= toInt64(129), toInt64(-128) > toInt64(129), toInt64(-128) >= toInt64(129) 
SELECT count() from t_regex;
select sipHash128Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24)) == sipHash128(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24));
DROP FUNCTION 02484_plusone;
CREATE TABLE test_01193_18429.table_3_300 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE DATABASE IF NOT EXISTS test_htvfvgzx 
DROP TABLE src_00942;
ALTER TABLE test_table_2 MODIFY SETTING max_replicated_merges_in_queue=0
CREATE TABLE test_01193_18429.table_5_907 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select toTypeName(makeDate(1991, cast(8 as Nullable(UInt64)), cast(24 as Nullable(UInt64))));
DROP DATABASE IF EXISTS test_h8to03m3 
select 10 as offset, toFixedString('Hello', 6) as s, subString(bin(s), offset), bin(bitSlice(s, offset));
select CrC32('string'), crc32('test');
drop table if exists morton_numbers_mask_1_02457;
CREATE TABLE test_36685A23387C254B60734B335668635E323127772336475A444C3D743136665D796121362F6A4C63(x UInt8) Engine=Memory;
SELECT (SELECT toIntervalMonth(5)) AS interval, toDateTime('2017-01-01 00:00:00') + interval AS res;
SELECT anyIf (number, isNull(number)) RESPECT NULLS from (SELECT if(number > 8, NULL, number) as number FROM numbers(10));
SELECT 'Running test stateless/02789_object_type_invalid_num_of_rows.sql from pid=1720' 
select arrayMap(x -> (x <= key), [1]) from test;
select 1 = isValidUTF8(toValidUTF8('\xF0\x8F\x80\x80')) from system.numbers limit 10;
SELECT FORMAT_BYTES(-1);
CREATE TABLE test_01193_18429.table_6_201 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_9_905 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_527E315C5C614F6F2B7B53753A2A3C75666761396E643A5F5D52243F4269256928426A56602F234F(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_3_588 VALUES 
SELECT dictHas('db_01268.dict2', toUInt64(3));
SHOW TABLES like 'one'
SELECT * FROM s3Cluster('test_cluster_one_shard_three_replicas_localhost', 'http://localhost:11111/test/{a,b}.tsv', 'test', '[HIDDEN]', 'TSV', 'auto', 'auto') ORDER BY c1 ASC, c2 ASC, c3 ASC
CREATE TABLE test_5855766C2A3A59604D4034566533777C5F5E20457458436E655F41683F5E484E40202E313E544921(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01737_clickhouse_server_wait_server_pool_long.sh from pid=1705' 
SELECT arrayStringConcat(arr, '; ') FROM (SELECT materialize([toDate('2021-10-01'), Null, toDate('2021-10-02')]) AS arr);
insert into table function file('arrow.dict', 'Arrow', 'x LowCardinality(UInt64)') select number from numbers(10) settings output_format_arrow_low_cardinality_as_dictionary=1, engine_file_truncate_on_insert=1, allow_suspicious_low_cardinality_types=1
CREATE DATABASE IF NOT EXISTS test_ryzp7hfw 
CREATE DATABASE IF NOT EXISTS test_jvidmhxz 
INSERT INTO test_01193_18429.table_3_38 VALUES 
SELECT v1.id, v2.id, L1Distance(v1.v, v2.v), LinfDistance(v1.v, v2.v), LpDistance(v1.v, v2.v, 3), L2Distance(v1.v, v2.v), L2SquaredDistance(v1.v, v2.v), cosineDistance(v1.v, v2.v) FROM vec2d v1, vec2d v2 WHERE length(v1.v) == length(v2.v);
SELECT 'Running test stateless/01895_jit_aggregation_function_avg_long.sql from pid=1720' 
SELECT * FROM map_test_index_map_keys WHERE map['K3'] IN '';
CREATE TABLE test_3D722C4A4A6C656C742B52393C495B7D363D77296F6E553D337838292C515E297B64726D2E3D5963(x UInt8) Engine=Memory;
SELECT * FROM test_00687 ORDER BY val LIMIT 2 OFFSET 2;
DROP DATABASE IF EXISTS test_elb8p4om 
CREATE TABLE test_01193_18429.table_4_68 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT arrayFold((acc, x) -> (acc + (x * 2)), [1, 2, 3, 4], toInt64(3));
INSERT INTO test_01193_18429.table_4_82 VALUES 
select 'self left nullable';
INSERT INTO sample_00314_1 (x) SELECT number AS x FROM system.numbers LIMIT 1000000;
select 0 = position('abc', materialize('bcdefg')) from system.numbers limit 10;
CREATE DATABASE IF NOT EXISTS test_039capti 
CREATE TABLE dst_00753 (`x` UInt64, `y` UInt64) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 13674, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 100, merge_max_block_size = 9531, prefer_fetch_merged_part_size_threshold = 5673972789, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 2979229553, index_granularity_bytes = 23093682, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 60648, primary_key_compress_block_size = 61594
CREATE TABLE test_01193_18429.table_7_345 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select * from test_23634 where (id, s, s1) = (null::Nullable(String), null::Nullable(String), null::Nullable(String)) order by id, s1, s1;
CREATE TABLE test_01193_18429.table_6_936 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_4_791 VALUES 
SELECT sum(c1) AS v FROM ( SELECT 1 AS c1, ['v'] AS c2, ['d'] AS d ) WHERE arrayExists(i -> (d = ['d']), c2);
CREATE TABLE test_01193_18429.table_10_189 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO summing_00155 (x) SELECT number AS x FROM system.numbers LIMIT 8194
ALTER TABLE t_sparse_mutations_1 MODIFY COLUMN s Nullable(String);
SELECT 719528 AS u, toInt32(u) AS s, fromDaysSinceYearZero(u), fromDaysSinceYearZero(materialize(u)), fromDaysSinceYearZero(s), fromDaysSinceYearZero(materialize(s));
SELECT number % 2 ? materialize(['']) : ['', ''] FROM system.numbers LIMIT 10;
SELECT 'SELECT toQuarter(N, \'Asia/Istanbul\')';
INSERT INTO test_01193_18429.table_7_291 VALUES 
SELECT arr, has(`arr`, 'str1') FROM has_function;
create table 02845_parquet_odd_decimals (`col-1de12c05-5dd5-4fa7-9f93-33c43c9a4028` Decimal(20, 0), `col-5e1b97f1-dade-4c7d-b71b-e31d789e01a4` String) engine Memory
DROP TABLE IF EXISTS src_00726;
drop table if exists test_table;
CREATE TABLE test_01193_18429.table_2_476 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP DATABASE IF EXISTS test_icx6epic 
SELECT x, y FROM remote('127.0.0.2', currentDatabase(), t3) ORDER BY x;
CREATE TABLE test_01193_18429.table_6_706 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_4_306 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select mapPopulateSeries(map(toInt128(1), toInt128(1), 2, 1)) as res, toTypeName(res);
SELECT toIPv6OrNull(NULL);
CREATE TABLE execute_on_single_replica_r1 (`x` UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/tables/test_01532/execute_on_single_replica', 'r1') ORDER BY tuple() SETTINGS execute_merges_on_single_replica_time_threshold = 10, index_granularity = 35090, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.8159085512161255, replace_long_file_name_to_hash = false, max_file_name_length = 64, merge_max_block_size = 18503, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 456572, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 18486085, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 46644, primary_key_compress_block_size = 22689
SELECT quantileIf(number, number > 100) FROM numbers(90);
SELECT 'n a rj t', t1.x, t2.x FROM ntxy AS t1 ANY RIGHT JOIN t AS t2 ON t1.x = t2.x OR t1.y = t2.x ORDER BY t1.x;
CREATE TABLE test_73782B6A6C337B76236A4A446B2A772768374A43546228635C7D3F5E79257B504930433A38297A7A(x UInt8) Engine=Memory;
ALTER TABLE concurrent_alter_column ADD COLUMN c168 DOUBLE;
select x, y, y.UInt64, y.String, v, v.String, v.UInt64, v.Date from test order by x
CREATE TABLE test_01193_18429.table_1_705 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_02908_r2_102 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_102', 'r2') ORDER BY tuple()
SELECT rand32();
INSERT INTO r9 SELECT 57 % 10 = 9 ? 57 - 1 : 57
CREATE TABLE test_01193_18429.table_4_454 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT bitHammingDistance('hello', 'hellow');
select a3, b3 from tab2 all right join tab3 on a2 = a3 or b2 = b3 ORDER BY a3, b3;
CREATE DATABASE IF NOT EXISTS test_2hujg3yy 
SELECT bitmapTransform(NULL, NULL, NULL);
CREATE TABLE test_01193_18429.table_9_326 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_5_122 VALUES 
SELECT key, sum(agg) FROM tbl GROUP BY key WITH totals ORDER BY key SETTINGS use_query_cache = 1;
INSERT INTO test_01193_18429.table_3_637 VALUES 
select toTypeName(toDecimal32OrZero(toString(number), 5)) from numbers(5);
CREATE TABLE test_01193_18429.table_9_230 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP DATABASE IF EXISTS test_kqaxznzg 
alter table data_01900_2 update s = 'bar_31' where 1;
CREATE TABLE test_5F716F7B5F4F372F667B6924753639534E42214375283B6E3726627356326D665B42595F7A62472E(x UInt8) Engine=Memory;
SELECT contingency(NULL);
DROP DATABASE IF EXISTS test_hozypild 
CREATE TABLE test_01193_18429.table_2_207 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE DATABASE IF NOT EXISTS test_tyeg8ywk 
CREATE DATABASE IF NOT EXISTS test_umwr3mcg 
CREATE TABLE test_584A75606B47675C596D7E61775D49363F652466426E532E5D5E7B797C6D4354396F6E5138325125(x UInt8) Engine=Memory;
SELECT toFloat64(9.99999999999999999) as x, toDecimal128(x, 17), toDecimal128(-x, 17);
SELECT lifetime_bytes, lifetime_rows FROM system.tables WHERE name = 'check_system_tables' AND database = currentDatabase();
EXPLAIN AST ALTER TABLE t ADD INDEX i c TYPE minmax GRANULARITY 1;
CREATE TABLE replica1 (`v` UInt8) ENGINE = ReplicatedMergeTree(concat('/clickhouse/tables/{database}/', currentDatabase(), 'test/01451/attach'), 'r1') ORDER BY tuple() SETTINGS max_replicated_merges_in_queue = 0, index_granularity = 6173, min_bytes_for_wide_part = 959270541, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 9270, prefer_fetch_merged_part_size_threshold = 6848828059, vertical_merge_algorithm_min_rows_to_activate = 711116, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 22871962, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 69951, primary_key_compress_block_size = 75019
SELECT count(), min(x), max(x), sum(x) FROM r4;
select 3 = position('abcd', materialize('c')) from system.numbers limit 10;
SELECT * FROM numbers_mt(5000), numbers(5000) SETTINGS max_threads = 1, joined_subquery_requires_alias=0
SELECT addQuarters(materialize('2023-10-22'), 1), addQuarters(materialize('2023-10-22 12:34:56.123'), 1);
SET param_num=42;
SELECT 'Running test stateless/02047_log_family_complex_structs_data_file_dumps.sh from pid=1722' 
EXPLAIN SYNTAX (SELECT sum(float64) - 2 * count(float64) From test_table);
SELECT hex(BLAKE3('test_1'));
SELECT cast(nan, 'Float32') AS value, value != value, value != materialize(value), materialize(value) != value, materialize(value) != materialize(value);
create table left_table as dest_table;
SELECT parseDateTimeBestEffort('20200807', 'Asia/Istanbul');
desc file(dump7.sql, MySQLDump)
CREATE TABLE test_max_mt_projections_alter (`c1` UInt32, `c2` UInt32, `c3` UInt32) ENGINE = MergeTree ORDER BY c1 SETTINGS max_projections = 3, index_granularity = 29197, min_bytes_for_wide_part = 919758427, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 66, merge_max_block_size = 23619, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 3775577309, index_granularity_bytes = 19642996, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 72652, primary_key_compress_block_size = 17617
DROP ROW POLICY 02131_filter_1 ON 02131_rptable;
CREATE DATABASE IF NOT EXISTS test_6nqv9cnw 
SELECT groupBitmap(NULL, NULL);
CREATE TABLE test_257E3C614E3C75562B216E5950777973244960416278272929346767387E264E4B662D4220545024(x UInt8) Engine=Memory;
insert into t1(ID, name) values 
DROP DATABASE IF EXISTS test_1218xbnk 
CREATE INDEX idx_tab3_2 ON tab3 (col0,col3 DESC);
SELECT arrayCount(x -> 1, emptyArrayString());
select multiFuzzyMatchAnyIndex(materialize('string'), 1, materialize(['zorro$', '^tring', 'ip$', 'how.*', 'it{2}', 'works']));
select val < 2.4 and val > 2.3393 from (select entropy(vals) as val from defaults);
select wkt(polygonsSymDifferenceSpherical([[(29.453587685533865,59.779570356240356),(29.393139070478895,52.276266797422124),(40.636581470703206,59.38168915000267),(41.21084331372543,59.103467777099866),(29.786055068336193,52.146627480315004),(31.23682182965546,52.16517054781818),(41.69443223416517,58.85424941916091),(42.51048853740727,58.47703162291134),(32.59691566839227,52.22075341251539),(34.289476889931414,52.22075341251539),(43.02430176537451,58.07974369546071),(43.02430176537451,57.25537683364851),(35.468224883503325,52.2022335126388),(37.16078610504247,52.23926559241349),(43.02430176537451,56.26136189644947),(43.02430176537451,55.326904361850836),(38.33953409861437,52.16517054781818),(40.09254393520848,52.16517054781818),(44.4146199116388,55.3097062225408),(44.47506852669377,59.80998197603594),(39.72985224487867,59.931351417569715),(30.23941968124846,53.67744677450975),(30.20919537372098,54.63314259659509),(38.73245009647167,59.94649146557819),(37.2816833351524,59.97675082987618),(30.23941968124846,55.2752875586599),(30.33009260383092,56.19415599955667),(36.28428118674541,59.96162460231375),(34.863738732953635,59.97675082987618),(30.178971066193498,56.97640788219866),(30.178971066193498,57.91957806959033),(33.65476643185424,59.94649146557819),(32.32489690064491,59.94649146557819),(30.481214141468342,58.85424941916091),(30.571887064050795,59.99187015036608),(29.453587685533865,59.779570356240356)]], [[[(33.473420586689336,58.85424941916091),(32.23422397806246,58.492830557036),(32.173775363007486,58.03176922751564),(31.508840597402823,57.499784781503735),(31.750635057622702,56.86092686957355),(31.508840597402823,55.941082594334574),(32.20399967053497,55.515591939372456),(31.84130798020516,54.998862226280465),(31.418167674820367,54.422670886434275),(32.47601843828233,53.83826377018255),(32.08310244042503,53.408048308050866),(33.171177511414484,52.82758702113742),(34.77306581037117,52.91880107773494),(34.77306581037117,53.784726518357985),(34.108131044766516,54.17574726780569),(35.07530888564602,54.59813930694554),(34.25925258240394,54.96417435716029),(35.01486027059106,55.361278263643584),(33.50364489421682,55.37845402950552),(32.7480372060297,55.90721384574556),(35.67979503619571,55.68634475630185),(32.83871012861215,56.311688992608396),(34.591719965206266,56.29492065473883),(35.7100193437232,56.311688992608396),(33.83611227701915,56.695333481003644),(32.95960735872209,56.9434497616887),(36.072711034053015,57.091531913901434),(33.171177511414484,57.33702717078384),(36.193608264162954,57.499784781503735),(33.23162612646945,57.77481561306047),(36.43540272438284,58.04776787540811),(33.62454212432676,58.27099811968307),(36.344729801800376,58.54018474404165),(33.83611227701915,58.68186423448108),(34.74284150284369,59.565911441555244),(33.473420586689336,58.85424941916091)]], [[(34.65216858026123,58.91672306881671),(37.19101041256995,58.68186423448108),(36.01226241899805,58.28688958537609),(37.16078610504247,58.04776787540811),(35.74024365125068,57.79092907387934),(37.009664567405046,57.499784781503735),(35.77046795877817,57.25537683364851),(36.979440259877556,57.07510745541089),(34.22902827487645,56.794777197297435),(36.7074214921302,56.210968525786996),(34.712617195316206,56.10998276812964),(36.55629995449277,55.63519693782703),(35.13575750070099,55.53270067649592),(36.43540272438284,55.34409504165558),(34.83351442542614,55.01619492319591),(35.61934642114075,54.49294870011772),(34.89396304048112,54.12264226523038),(35.37755196092087,53.046178687628185),(37.43280487278982,52.95523300597458),(35.92158949641559,53.80257986695776),(36.91899164482259,53.856094327816805),(36.01226241899805,54.75541714463799),(37.765272255592166,55.189110239786885),(36.828318722240134,55.44708256557195),(38.03729102333953,55.652253637168315),(36.64697287707522,55.941082594334574),(38.21863686850443,56.05939028508024),(36.37495410932787,56.64551287174558),(38.30930979108689,56.992876013526654),(37.16078610504247,57.25537683364851),(38.127963945921984,57.516020773674256),(37.43280487278982,57.710289827306724),(38.33953409861437,57.935626886818994),(37.40258056526235,58.31865112960426),(38.58132855883426,58.744648733419496),(37.31190764267989,59.02578062465136),(34.65216858026123,58.91672306881671)]], [[(38.52087994377928,59.11898412389468),(39.54850639971376,58.713270635642914),(38.369758406141855,58.28688958537609),(38.85334732658162,58.06375936407028),(38.33953409861437,57.710289827306724),(38.73245009647167,57.48354156434209),(38.21863686850443,57.271721400459285),(38.97424455669155,56.87744603722649),(37.463029180317314,56.5623320541159),(38.94402024916407,56.05939028508024),(38.18841256097694,55.856355210835915),(38.490655636251795,55.53270067649592),(37.795496563119656,55.39562234093384),(38.30930979108689,55.154587013355666),(36.7074214921302,54.65063295250911),(37.31190764267989,53.92734063371401),(36.979440259877556,53.58783775557231),(37.855945178174615,52.91880107773497),(39.57873070724124,52.69956490610895),(38.33953409861437,53.281741738901104),(40.00187101262603,53.35396273604752),(39.54850639971376,53.58783775557231),(40.24366547284591,53.58783775557231),(39.97164670509855,53.98069568468355),(40.60635716317572,54.03398248547225),(40.39478701048334,54.44025165268903),(39.54850639971376,54.56310590284329),(39.54850639971376,54.87732350170489),(40.39478701048334,54.87732350170489),(40.39478701048334,55.24083903654295),(39.82052516746112,55.2752875586599),(39.760076552406154,55.75443792473942),(40.57613285564824,55.78844000174894),(40.425011318010824,56.19415599955667),(39.82052516746112,56.07626182891758),(39.79030085993364,56.41214455508424),(40.48545993306579,56.495655446714636),(40.33433839542836,56.95993246553937),(39.79030085993364,56.992876013526654),(39.72985224487867,57.46729112028032),(40.33433839542836,57.46729112028032),(40.24366547284591,58.04776787540811),(39.63917932229622,58.04776787540811),(39.63917932229622,58.382088724871295),(40.33433839542836,58.382088724871295),(40.45523562553831,58.9011152358548),(38.52087994377928,59.11898412389468)]]])) format Null;
SYSTEM SYNC REPLICA concurrent_alter_detach_2
SELECT toStartOfInterval(toDateTime(1549483055), INTERVAL 1 month, 'Asia/Istanbul');
INSERT INTO json_test VALUES 
INSERT INTO test_01193_18429.table_7_196 VALUES 
SELECT multiIf(1, ['foo', col3], 1, ['foo', col5], ['foo', 'bar']) FROM multi_if_check;
CREATE TABLE test_01193_18429.table_4_34 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP TABLE IF EXISTS table_from_numbers;
ALTER TABLE part_header_r1 MODIFY COLUMN y String;
INSERT INTO test_01193_18429.table_8_581 VALUES 
SELECT 'Running test stateless/02521_incorrect_dealy_for_insert_bug_44902.sh from pid=1722' 
INSERT INTO mt VALUES /* (-15, 1) */ 
SELECT 1, 9223372036854775809, 1 = 9223372036854775809, 1 != 9223372036854775809, 1 < 9223372036854775809, 1 <= 9223372036854775809, 1 > 9223372036854775809, 1 >= 9223372036854775809, 9223372036854775809 = 1, 9223372036854775809 != 1, 9223372036854775809 < 1, 9223372036854775809 <= 1, 9223372036854775809 > 1, 9223372036854775809 >= 1 , toUInt8(1) = toUInt64(9223372036854775809), toUInt8(1) != toUInt64(9223372036854775809), toUInt8(1) < toUInt64(9223372036854775809), toUInt8(1) <= toUInt64(9223372036854775809), toUInt8(1) > toUInt64(9223372036854775809), toUInt8(1) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toUInt8(1), toUInt64(9223372036854775809) != toUInt8(1), toUInt64(9223372036854775809) < toUInt8(1), toUInt64(9223372036854775809) <= toUInt8(1), toUInt64(9223372036854775809) > toUInt8(1), toUInt64(9223372036854775809) >= toUInt8(1) , toInt8(1) = toUInt64(9223372036854775809), toInt8(1) != toUInt64(9223372036854775809), toInt8(1) < toUInt64(9223372036854775809), toInt8(1) <= toUInt64(9223372036854775809), toInt8(1) > toUInt64(9223372036854775809), toInt8(1) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toInt8(1), toUInt64(9223372036854775809) != toInt8(1), toUInt64(9223372036854775809) < toInt8(1), toUInt64(9223372036854775809) <= toInt8(1), toUInt64(9223372036854775809) > toInt8(1), toUInt64(9223372036854775809) >= toInt8(1) , toUInt16(1) = toUInt64(9223372036854775809), toUInt16(1) != toUInt64(9223372036854775809), toUInt16(1) < toUInt64(9223372036854775809), toUInt16(1) <= toUInt64(9223372036854775809), toUInt16(1) > toUInt64(9223372036854775809), toUInt16(1) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toUInt16(1), toUInt64(9223372036854775809) != toUInt16(1), toUInt64(9223372036854775809) < toUInt16(1), toUInt64(9223372036854775809) <= toUInt16(1), toUInt64(9223372036854775809) > toUInt16(1), toUInt64(9223372036854775809) >= toUInt16(1) , toInt16(1) = toUInt64(9223372036854775809), toInt16(1) != toUInt64(9223372036854775809), toInt16(1) < toUInt64(9223372036854775809), toInt16(1) <= toUInt64(9223372036854775809), toInt16(1) > toUInt64(9223372036854775809), toInt16(1) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toInt16(1), toUInt64(9223372036854775809) != toInt16(1), toUInt64(9223372036854775809) < toInt16(1), toUInt64(9223372036854775809) <= toInt16(1), toUInt64(9223372036854775809) > toInt16(1), toUInt64(9223372036854775809) >= toInt16(1) , toUInt32(1) = toUInt64(9223372036854775809), toUInt32(1) != toUInt64(9223372036854775809), toUInt32(1) < toUInt64(9223372036854775809), toUInt32(1) <= toUInt64(9223372036854775809), toUInt32(1) > toUInt64(9223372036854775809), toUInt32(1) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toUInt32(1), toUInt64(9223372036854775809) != toUInt32(1), toUInt64(9223372036854775809) < toUInt32(1), toUInt64(9223372036854775809) <= toUInt32(1), toUInt64(9223372036854775809) > toUInt32(1), toUInt64(9223372036854775809) >= toUInt32(1) , toInt32(1) = toUInt64(9223372036854775809), toInt32(1) != toUInt64(9223372036854775809), toInt32(1) < toUInt64(9223372036854775809), toInt32(1) <= toUInt64(9223372036854775809), toInt32(1) > toUInt64(9223372036854775809), toInt32(1) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toInt32(1), toUInt64(9223372036854775809) != toInt32(1), toUInt64(9223372036854775809) < toInt32(1), toUInt64(9223372036854775809) <= toInt32(1), toUInt64(9223372036854775809) > toInt32(1), toUInt64(9223372036854775809) >= toInt32(1) , toUInt64(1) = toUInt64(9223372036854775809), toUInt64(1) != toUInt64(9223372036854775809), toUInt64(1) < toUInt64(9223372036854775809), toUInt64(1) <= toUInt64(9223372036854775809), toUInt64(1) > toUInt64(9223372036854775809), toUInt64(1) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toUInt64(1), toUInt64(9223372036854775809) != toUInt64(1), toUInt64(9223372036854775809) < toUInt64(1), toUInt64(9223372036854775809) <= toUInt64(1), toUInt64(9223372036854775809) > toUInt64(1), toUInt64(9223372036854775809) >= toUInt64(1) , toInt64(1) = toUInt64(9223372036854775809), toInt64(1) != toUInt64(9223372036854775809), toInt64(1) < toUInt64(9223372036854775809), toInt64(1) <= toUInt64(9223372036854775809), toInt64(1) > toUInt64(9223372036854775809), toInt64(1) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toInt64(1), toUInt64(9223372036854775809) != toInt64(1), toUInt64(9223372036854775809) < toInt64(1), toUInt64(9223372036854775809) <= toInt64(1), toUInt64(9223372036854775809) > toInt64(1), toUInt64(9223372036854775809) >= toInt64(1) 
CREATE TABLE test_01193_18429.table_6_785 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP TABLE secure2;
DROP TABLE polygons;
select number, number + 1, concat('string: ', toString(number)) from numbers(200000) format JSONCompactStringsEachRow
SELECT * FROM system.query_log WHERE event_date >= yesterday() AND current_database = currentDatabase() AND memory_usage > 100e6 FORMAT JSONEachRow;
select 0 = isValidUTF8('\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xF1\x80\x80') from system.numbers limit 10;
CREATE TABLE defaults_all_columns (n UInt8 DEFAULT 42, s String DEFAULT concat('test', CAST(n, 'String'))) ENGINE = Memory;
CREATE TABLE test_01193_18429.table_5_797 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 1 IN [1];
SELECT JSONExtract('[1]', toNullable(1), 'Nullable(Int)');
insert into test select number + 200000, number % 2 ? NULL : number from numbers(200000);
CREATE TABLE test_554D7C72375E457A225056436B31205C486850743F69416F5564562B2B785C31627A226F687C2A65(x UInt8) Engine=Memory;
SYSTEM STOP MERGES t_json_sparse;
CREATE MATERIALIZED VIEW src_to_dst1 TO dst1 AS SELECT x + 1 as x FROM src;
SELECT splitByWhitespace('Nein, nein, nein! Doch!', 1) SETTINGS splitby_max_substrings_includes_remaining_string = 1;
DROP TABLE test_view;
SELECT 'Running test stateless/01631_date_overflow_as_partition_key.sql from pid=1718' 
select splitByRegexp('', '');
DROP TABLE samples;
SELECT substring(materialize('abcdefgh'), materialize(-2), materialize(-1));
select concat(materialize(toFixedString('a', 1)), materialize('b'), toFixedString('c', 1)) == 'abc' from system.numbers limit 5;
SET optimize_monotonous_functions_in_order_by = 1;
SELECT makeDate32(NULL);
INSERT INTO r3 SELECT 99
select [2] = multiSearchAllPositions(materialize('abcdefgh'), ['bc']) from system.numbers limit 129;
CREATE DATABASE IF NOT EXISTS test_efdklnpt 
SELECT multiIf((number % 2) = 0, toUInt16(1), (number % 3) = 0, toInt32(2), toInt8(3)) FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_s48j30l8 
DROP TABLE defaults;
INSERT INTO t2 SELECT sipHash64(number, 't2') % 15 + 1 as key, sipHash64(number, 'a') % 2 + 1 as key1, sipHash64(number, 'b') % 2 + 1 as key2, if(number % 3 == 0, NULL, sipHash64(number, 'c') % 2 + 1) as key3, 'val' || toString(number) as s FROM numbers_mt(12);
DROP DATABASE IF EXISTS test_7ajad0d0 
SELECT * FROM json_noisy
select arrayPushFront(Null, 1);
SELECT '2015-02-03 06:07:08' <= toDateTime('2015-02-03 05:06:07');
CREATE TABLE test_3B6F2F77727C3F51766A305143207060632C7B7043503627586832213A4C486957553254397C6926(x UInt8) Engine=Memory;
ALTER TABLE modify_sample_replicated MODIFY SAMPLE BY x;
CREATE DATABASE IF NOT EXISTS test_ime2sles 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (30 < 80 AND 87 > 0 ? 30 : 0)), throwIf(last != (30 < 80 AND 87 > 0 ? least(80 - 1, 30 + 87 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(80) LIMIT 30, 87);
ALTER TABLE src_13 MOVE PARTITION 6 TO TABLE dst_2
drop dictionary if exists regexp_os;
CREATE TABLE test_3A6749403D697B676B232F3D687574242D4D3F3A2542503B236C73753E673175377350723A2B2576(x UInt8) Engine=Memory;
create table dist (key Int) engine=Distributed(default, currentDatabase(), data);
select * from file('test_02149_schema_inference_test_2lktp9cn.data', 'Values')
DROP DATABASE test_x53j0kld
SHOW CREATE TABLE bad_conversions_2;
CREATE INDEX idx_tab4_5 ON tab4 (col3 DESC,col1);
INSERT INTO test_01193_18429.table_10_21 VALUES 
SELECT count() FROM (SELECT number FROM numbers_mt(1,100000) UNION ALL SELECT number FROM numbers_mt(1, 1) UNION ALL SELECT number FROM numbers_mt(1, 1) UNION ALL SELECT number FROM numbers_mt(1, 1) UNION ALL SELECT number FROM numbers_mt(1, 1) UNION ALL SELECT number FROM numbers_mt(1, 1) UNION ALL SELECT number FROM numbers_mt(1, 1) UNION ALL SELECT number FROM numbers_mt(1, 4000000) ) SETTINGS max_threads = 4
CREATE TABLE test_7D5E724579615D31392D6A554F2D357057392E7727725D5148746D4849606A7B3D6F2B5528623245(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_9_611 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP DATABASE IF EXISTS test_6wna9c0e 
SELECT '-- UInt32 and Int32 arguments, both const and non-const';
EXPLAIN SYNTAX SELECT 1 IS NULL = 0;
select cityHash64(hex( sumMapState([ip], [1::Int64]) )) AS sumMapState, cityHash64(hex( minMapState([ip], [1::Int64]) )) AS minMapState, cityHash64(hex( maxMapState([ip], [1::Int64]) )) AS maxMapState from ( select number::UInt32::IPv4 ip from numbers(999999999,1) order by ip ) format Vertical;
select sipHash64Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5)) == sipHash64(char(0, 1, 2, 3, 4, 5));
CREATE PROFILE s6_01294 TO ALL EXCEPT u1_01294, r1_01294;
CREATE DATABASE IF NOT EXISTS test_wnxdqvgu 
ALTER TABLE minmax_idx_r DROP INDEX idx3;
DROP TABLE IF EXISTS numbers_10k_log;
CREATE TABLE test_01193_18429.table_1_627 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_315079714270355C52446F2A2E54673932424739246E294C792C4279713E727E6068344E6A44205E(x UInt8) Engine=Memory;
SELECT isNullable(-1);
DROP TABLE has_function;
select makeDate32(1984, 2, 30);
SELECT 'col1';
CREATE DATABASE IF NOT EXISTS test_yu9h31a8 
SELECT dateDiff('minute', materialize(toDate('2017-12-31')), materialize(toDate('2018-01-01')), 'UTC');
CREATE TABLE test_01193_18429.table_6_194 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_7_885 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select parseDateTimeInJodaSyntax('10', 'HHHHHHHH', 'UTC') = toDateTime('1970-01-01 10:00:00', 'UTC');
SELECT emptyArrayUInt32();
CREATE TABLE test_7076757D55453E6961276E482A7B2B2D704B4771506A534A4759467C616F71312D347C49612B272E(x UInt8) Engine=Memory;
SELECT '43' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffe0::')))
select count(ignore(*)) from data_02051 settings min_bytes_to_use_direct_io=0, local_filesystem_read_method='pread_threadpool', local_filesystem_read_prefetch=0, read_priority=0, max_read_buffer_size=65505 ;
SELECT 'Running test stateless/00371_union_all.sql from pid=1724' 
DROP TABLE IF EXISTS 02127_join_settings_with_persistency_1;
INSERT INTO test_01193_18429.table_10_891 VALUES 
CREATE DATABASE t_2710_db engine=Atomic;
CREATE TABLE test_373B26486B7B3C7154713E3C385F5466426943232233472A3C60552A68767454436A375561602A75(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_2_672 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
EXPLAIN AST optimize=1 SELECT countDistinct(number) FROM numbers(0);
ALTER TABLE test_constraints DROP CONSTRAINT b_constraint;
DROP TABLE IF EXISTS sparse_tuple;
select [0, 0, 0, 0, 0, 0, 8, 0, 0, 1, 1, 15, 0, 1, 7, 0] = multiSearchAllPositionsCaseInsensitive(materialize('nxwotjpplUAXvoQaHgQzr'), ['ABiEhaADbBLzPwhSfhu', 'TbIqtlkCnFdPgvXAYpUuLjqnnDjDD', 'oPszWpzxuhcyuWxiOyfMBi', 'fLkacEEeHXCYuGYQXbDHKTBntqCQOnD', 'GHGZkWVqyooxtKtFTh', 'CvHcLTbMOQBKNCizyEXIZSgFxJY', 'PlUAxVoQah', 'zrhYwNUzoYjUSswEFEQKvkI', 'c', 'NXWOt', '', 'qAhG', 'JNqCpsMJfOcDxWLVhSSqyNauaRxC', '', 'PpLuaxV', 'DLITYGE']) from system.numbers limit 10;
SELECT caseWithExpression(`x`, 1, 'hello', 2, 'world', 'unknow') FROM `test_75ty26h6`.`mergetree_00609`
CREATE TABLE test_204D7D6E237639464F27723968285D2C2F432720757E45242F4B5E50412A6C515A604B2056775340(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_8_380 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE IF NOT EXISTS test_01444.t15476 (`x` UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 49736, min_bytes_for_wide_part = 645103364, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 6, merge_max_block_size = 15200, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 21360504, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75390, primary_key_compress_block_size = 98921
SELECT min(n * 2), min(2 * n), min(n / 2), min(1 / n) FROM (SELECT number n FROM numbers(10));
SYSTEM STOP MERGES aggregating_00155
SELECT CAST('42.4200', 'Decimal(9,2)') AS a, CAST(a, 'Decimal(9,2)'), CAST(a, 'Decimal(18, 2)'), CAST(a, 'Decimal(38, 2)');
INSERT INTO test_s3_race VALUES 
CREATE TABLE test_46566D3268596A2E7149615C7D3547627871202E6A5E483A58337E59764D4F663578306029246830(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_8_251 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT * FROM (SELECT dummy AS val FROM system.one) s1 ANY LEFT JOIN (SELECT toLowCardinality(dummy) AS val FROM system.one) s2 USING val ORDER BY val;
CREATE TABLE test_01193_18429.table_8_459 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_aa9t825o 
OPTIMIZE TABLE issue32107 FINAL;
SELECT bin(toInt256(100000000000)) AS res;
SELECT 'Running test stateless/00541_kahan_sum.sql from pid=1718' 
ALTER TABLE alter_test ADD COLUMN Added3 UInt32 AFTER ToDrop;
select [1] = multiSearchAllPositions(materialize('abc'), ['']) from system.numbers limit 100;
INSERT INTO r6 SELECT 37 % 10 = 6 ? 37 - 1 : 37
CREATE TABLE t_delete_projection (`x` UInt32, `y` UInt64, PROJECTION p (SELECT sum(y))) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 19119, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10710434304, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 33244, primary_key_compress_block_size = 98058
CREATE DATABASE IF NOT EXISTS test_qd3s6y00 
DROP TABLE joinbug;
SELECT sum(s) FROM (SELECT sum(number) as s FROM remote('127.0.0.2', numbers(5)) with totals);
INSERT INTO badFixedStringSort values 
SELECT 'Running test stateless/02368_cancel_write_into_hdfs.sh from pid=1718' 
SELECT 'Wenn Sie ... vom Hauptbahnhof in MÃÂ¼nchen ... mit zehn Minuten, ohne, dass Sie am Flughafen noch einchecken mÃÂ¼ssen, dann starten Sie im Grunde genommen am Flughafen ... am ... am Hauptbahnhof in MÃÂ¼nchen starten Sie Ihren Flug. Zehn Minuten. Schauen Sie sich mal die groÃÂen FlughÃÂ¤fen an, wenn Sie in Heathrow in London oder sonst wo, meine se ... Charles de Gaulle ÃÂ¤h in Frankreich oder in ...ÃÂ¤h... in ... in...ÃÂ¤h...in Rom. Wenn Sie sich mal die Entfernungen ansehen, wenn Sie Frankfurt sich ansehen, dann werden Sie feststellen, dass zehn Minuten... Sie jederzeit locker in Frankfurt brauchen, um ihr Gate zu finden. Wenn Sie vom Flug ... vom ... vom Hauptbahnhof starten - Sie steigen in den Hauptbahnhof ein, Sie fahren mit dem Transrapid in zehn Minuten an den Flughafen in ... an den Flughafen Franz Josef StrauÃÂ. Dann starten Sie praktisch hier am Hauptbahnhof in MÃÂ¼nchen. Das bedeutet natÃÂ¼rlich, dass der Hauptbahnhof im Grunde genommen nÃÂ¤her an Bayern ... an die bayerischen StÃÂ¤dte heranwÃÂ¤chst, weil das ja klar ist, weil auf dem Hauptbahnhof viele Linien aus Bayern zusammenlaufen.' AS str, punycodeEncode(str) AS puny, punycodeDecode(puny) AS original, tryPunycodeDecode(puny) AS original_try FORMAT Vertical;
INSERT INTO test_01193_18429.table_1_401 VALUES 
SELECT YYYYMMDDToDate32(19000101.1);
CREATE TABLE test_7C537C475C594859465B375F524956484A7A785D64417D775871744440645C4E65323E6863306E30(x UInt8) Engine=Memory;
CREATE TABLE test_454F793C4C4D2D5A662421354A4F28787323733A3D413F364D3549597754752725292335716E3166(x UInt8) Engine=Memory;
INSERT INTO lc_table VALUES
EXPLAIN SYNTAX SELECT max(n * -2 * -1), max(-2 * n * -1), max(n / -2 / -1), max(-1 / n / -1) FROM (SELECT number n FROM numbers(10));
alter table many_mutations delete where y = 178 * 2 settings mutations_sync = 0;
CREATE TABLE tab_00612 (`key1` Int32, `id1` Int64, `c1` Int64) ENGINE = MergeTree PARTITION BY id1 ORDER BY key1 SETTINGS index_granularity = 6548, min_bytes_for_wide_part = 535488879, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 14195, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 629265, vertical_merge_algorithm_min_columns_to_activate = 11, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 2920373, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 16736, primary_key_compress_block_size = 60066
create table dist (key Int) engine=Distributed(default, currentDatabase(), data) settings flush_on_detach=0;
CREATE TABLE test_01193_18429.table_2_768 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP TABLE IF EXISTS compression_codec;
CREATE TABLE test_01193_18429.table_7_779 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_2_604 VALUES 
CREATE TABLE test_01193_18429.table_2_639 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT number FROM numbers(10) LIMIT 2 - 1;
CREATE TABLE test_compression_keyword (text String) Engine=Memory;
DROP ROLE IF EXISTS test_role_02243
SELECT windowID(NULL, NULL);
INSERT INTO sorted (x) SELECT (intHash64(number) % 1000 = 0 ? 999 : intDiv(number, 100000)) AS x FROM system.numbers LIMIT 1000000;
SELECT is_leader FROM system.replicas WHERE database=currentDatabase() AND table='replicated_optimize1'
SELECT `t_local`.`dummy` FROM `test_g9gzbewy`.`t_local` GLOBAL ALL INNER JOIN `_data_13517945422972273335_3926604238087607544` USING (`dummy`)
SELECT throwIf((SELECT sum(nm) FROM mv) != 76) FORMAT Null;
CREATE TABLE test_01193_18429.table_1_504 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT CASE WHEN 1 THEN ['foo', 'bar'] WHEN 1 THEN ['foo', 'bar'] ELSE [col6, 'bar'] END FROM multi_if_check;
INSERT INTO data_02771 VALUES 
INSERT INTO test_01193_18429.table_2_560 VALUES 
drop table if exists ttl_02262;
DROP TABLE commits;
CREATE TABLE test_01193_18429.table_5_751 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
ALTER TABLE t_ttl_modify_column modify column TTLDays Int16 DEFAULT CAST(365, 'Int16');
SELECT 'Running test stateless/02499_extract_key_value_pairs_multiple_input.sql from pid=1724' 
SELECT toUInt256(1), bitPositionsToArray(toUInt256(1));
CREATE TABLE test_01193_18429.table_3_828 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT right('Hello', 3);
CREATE TABLE alter_update_00806 (d Date, e Enum8('foo'=1, 'bar'=2)) Engine = MergeTree PARTITION BY d ORDER BY (d) SETTINGS index_granularity_bytes=10000, write_final_mark=1;
SELECT detectLanguageUnknown('Plain English');
CREATE TABLE country_polygons (`name` String, `p` Array(Array(Tuple(Float64, Float64)))) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 60992, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 19928, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 7060405755, index_granularity_bytes = 12988790, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 16448, primary_key_compress_block_size = 41278
SELECT 'Running test stateless/02933_group_by_memory_usage.sh from pid=1713' 
SELECT test_table_join_1.id, test_table_join_1.value, test_table_join_2.id, test_table_join_2.value, test_table_join_3.id, test_table_join_3.value FROM test_table_join_1 INNER JOIN test_table_join_2 ON test_table_join_1.id = test_table_join_2.id RIGHT JOIN test_table_join_3 ON test_table_join_2.id = test_table_join_3.id;
SELECT 'x-.xn--zca' AS idna, idnaEncode(idna) AS ascii, tryIdnaEncode(idna) AS ascii_try, idnaDecode(ascii) AS original, idnaDecode(ascii_try) AS original_try;
SELECT 'Running test stateless/02841_group_array_sorted.sql from pid=1718' 
SET async_insert_deduplicate = 1;
SELECT multiIf((number % 2) = 0, [toFloat64(1), toFloat64(2)], (number % 3) = 0, [toFloat32(2), toFloat32(3)], [toInt16(3), toInt16(3)]) FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_wokv72mx 
SELECT avgWeighted(x, w) FROM values('x Int8, w Float32', (0, 0), (1, 0));
SELECT ngramMinHashUTF8(s) FROM defaults;
DROP DATABASE IF EXISTS test_8s0f6myl 
CREATE DATABASE IF NOT EXISTS test_fzu8ahuz 
INSERT INTO test_01193_18429.table_8_674 VALUES 
SELECT 'Running test stateless/02583_map_literal_cast.sql from pid=1713' 
INSERT INTO test_01193_18429.table_4_908 VALUES 
SELECT YYYYMMDDhhmmssToDateTime(20200229111111);
DROP TABLE rmt;
EXPLAIN QUERY TREE (SELECT sum(float64 - 2) + sum(float64 - 3) From test_table);
SELECT count() FROM t_cnf_fuzz WHERE (c0 AND c2) OR ((NOT c4)) OR (c5 AND (NOT c2) AND (NOT c4) AND (NOT c6) AND c9) OR ((NOT c8) AND (NOT c7)) OR (c9 AND (NOT c1)) OR ((NOT c3) AND c7) OR ((NOT c3) AND c2 AND c6 AND (NOT c7)) OR (c0 AND c6 AND c0) OR (c8 AND c1 AND c0 AND (NOT c1)) SETTINGS convert_query_to_cnf = 0
alter table t materialize projection p_norm settings mutations_sync = 1;
SELECT xxHash64([]);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (0 < 99 AND 86 > 0 ? 0 : 0)), throwIf(last != (0 < 99 AND 86 > 0 ? least(99 - 1, 0 + 86 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(99) LIMIT 0, 86);
ALTER TABLE index_test ADD INDEX i_x mortonDecode(2, z).1 TYPE minmax GRANULARITY 1, ADD INDEX i_y mortonDecode(2, z).2 TYPE minmax GRANULARITY 1, MATERIALIZE INDEX i_x, MATERIALIZE INDEX i_y;
CREATE TABLE test_01193_18429.table_9_922 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
alter table many_mutations delete where y = 600 * 2 settings mutations_sync = 0;
drop table trepl;
CREATE TABLE table_1 (`x` UInt32, `y` String, INDEX a length(y) TYPE minmax GRANULARITY 1) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 2, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 17734, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 8110375743, index_granularity_bytes = 4741485, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 39230, primary_key_compress_block_size = 68212
SELECT ProfileEvents['FileOpen'] FROM system.query_log WHERE (type = 'QueryFinish') AND (lower(query) LIKE lower('SELECT t._ FROM %t_tup%')) AND current_database = currentDatabase();
SELECT 'Running test stateless/02015_executable_user_defined_functions.sql from pid=1726' 
select '-- unmerged state';
CREATE TABLE test_7A264E2C4E283040412831422D2B336E32446C6D382C3B2B335B46407D256F7831296E3C4D232A25(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_7_524 VALUES 
CREATE TABLE test_01193_18429.table_10_996 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_1_47 VALUES 
SELECT * FROM map_test_index_map_values WHERE map['K0'] IN 'V0' SETTINGS force_data_skipping_indices='map_bloom_filter_values';
SELECT count() FROM ( SELECT count() FROM numbers(65411) GROUP BY if(number < 1, NULL, number) );
CREATE DATABASE IF NOT EXISTS test_4ltkv93q 
CREATE TABLE test_01193_18429.table_9_993 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select 2 = positionCaseInsensitive(materialize('abc'), 'Bc');
select lcm(2147483647, 2147483646);
CREATE DATABASE IF NOT EXISTS test_uhe8d4zp 
insert into t21 select number, number from numbers_mt(1e6);
select [1] = multiSearchAllPositions(materialize('abcdefgh'), ['abcdef']) from system.numbers limit 129;
CREATE TABLE test_r2 (`x` UInt64, `\\` String DEFAULT concat('\r\n\t\\', '\n')) ENGINE = ReplicatedMergeTree('/clickhouse/{database}/test_01669', 'r2') ORDER BY `\\` SETTINGS index_granularity = 65101, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 11, merge_max_block_size = 3781, prefer_fetch_merged_part_size_threshold = 4101248024, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 23185366, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 16807, primary_key_compress_block_size = 84570
INSERT INTO test_01193_18429.table_6_897 VALUES 
SELECT 'Running test stateless/01710_query_log_with_projection_info.sql from pid=1714' 
INSERT INTO test_01193_18429.table_7_558 VALUES 
INSERT INTO test_01193_18429.table_3_143 VALUES 
DROP DATABASE IF EXISTS test_niwv0tmr 
SELECT * FROM 02183_range_dictionary;
SELECT 11, 1, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (11 < 13 AND 1 > 0 ? 11 : 0)), throwIf(last != (11 < 13 AND 1 > 0 ? least(13 - 1, 11 + 1 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 11, 1);
INSERT INTO decimal (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) VALUES 
CREATE TABLE t (`account_id` UInt64, `_is_deleted` UInt8, `_version` UInt64) ENGINE = ReplacingMergeTree(_version, _is_deleted) ORDER BY account_id SETTINGS index_granularity = 10997, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 48, merge_max_block_size = 14254, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 1055682, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 16017, primary_key_compress_block_size = 75170
CREATE DATABASE IF NOT EXISTS test_pr2u2aox 
SELECT least('hello', 'world', '');
DROP TABLE IF EXISTS unsorted_replacing;
select min(j), max(j) from has_final_mark;
SELECT number AS id, toString(number) AS s, range(number) AS arr FROM numbers(10) FORMAT JSONEachRow
SELECT isIPAddressInRange('::1', '127.0.0.0/8');
set allow_suspicious_low_cardinality_types=0;
SELECT multiIf((col1 % 2) = 0, col2, (col1 % 3) = 0, toFixedString('bar', 16), toFixedString(col4, 16)) FROM multi_if_check;
INSERT INTO database_for_range_dict.date_table VALUES
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat64(1), toFloat64(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toInt16(3), toInt16(3)] END FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_bm2mk2v5 
CREATE DATABASE IF NOT EXISTS test_7fa81sg4 
select parseDateTime('07 AM', '%H %p', 'UTC') = toDateTime('1970-01-01 07:00:00', 'UTC');
SELECT 'Running test stateless/02683_native_too_large_size.sql from pid=1718' 
SELECT JSONExtract('{"a":-1234567890123456789}', 'a', 'Int64') as a, toTypeName(a);
DROP TABLE IF EXISTS t_json_sparse;
INSERT INTO src_12 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 15
DROP TABLE test_ao23yen4.join_all_inner
INSERT INTO 01681_database_for_cache_dictionary.simple_key_complex_attributes_source_table VALUES
CREATE TABLE test_01193_18429.table_4_597 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_1_55 VALUES 
CREATE TABLE test_01193_18429.table_1_625 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
EXPLAIN QUERY TREE SELECT substring(reverse(b), 1, 1) AS t1, a AS t2 FROM column_swap_test_test WHERE substring(reverse(b), 1, 1) = 'c' SETTINGS allow_experimental_analyzer = 1;
drop table test_bm;
SELECT 'Running test stateless/00723_remerge_sort.sql from pid=1718' 
INSERT INTO test_01193_18429.table_9_244 VALUES 
SELECT throwIf((SELECT sum(nm) FROM mv) != 15) FORMAT Null;
DROP DATABASE IF EXISTS test_fw0qekah 
SELECT * FROM system.backup_log LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
CREATE TABLE 02155_test_dictionary_view ( id UInt64, value String ) ENGINE=Dictionary(concat(currentDatabase(), '.02155_test_dictionary'));
SELECT * FROM information_schema.KEY_COLUMN_USAGE LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
CREATE TABLE test_01193_18429.table_2_182 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), toInt32(-1) != N as r FORMAT CSV;
ALTER TABLE concurrent_alter_column ADD COLUMN c173 DOUBLE;
EXPLAIN SYNTAX SELECT * FROM t_02147_dist ORDER BY toStartOfHour(date), v;
SELECT * FROM information_schema.referential_constraints LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
DROP TABLE IF EXISTS test_02187;
CREATE TABLE test_7C634C5164465A5F684D4946407040307A567C2225255C7A66362B6D785A2E3442415A4768673774(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_9_167 VALUES 
SELECT 'Running test stateless/01771_bloom_filter_not_has.sql from pid=1705' 
DROP TABLE test_02117
CREATE TABLE test_6549752D3258642C755F386D433D747D345978314953456057242F687437576F232E3434662C6D6B(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01192_rename_database_zookeeper.sh from pid=1705' 
SELECT if(number % 2, materialize(9223372036854775806), materialize(-9223372036854775808)) AS res FROM numbers(2);
SELECT 10, 7, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (10 < 13 AND 7 > 0 ? 10 : 0)), throwIf(last != (10 < 13 AND 7 > 0 ? least(13 - 1, 10 + 7 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 10, 7);
SELECT CAST('hello' AS FixedString(5)) LIKE '%w__ld%';
select count(), any(number) from dist_01247 group by number%2;
DROP TABLE IF EXISTS other_table;
SELECT dictGetOrDefault('polygon_dictionary', 'array_value', tuple(1.5, 1.5), [2, 3, 4]);
select hex(sipHash128ReferenceKeyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)));
set database_atomic_wait_for_drop_and_detach_synchronously=1;
INSERT INTO wide_to_comp SELECT number, number, number FROM numbers(100000);
SELECT 'Running test stateless/02032_short_circuit_least_greatest_bug.sql from pid=1726' 
SELECT count() FROM t_02848_mt2 WHERE a = 3 AND b == '3' AND c < 20 AND d like '%es%';
INSERT INTO r7 SELECT 83
INSERT INTO dictionary_source_table VALUES 
INSERT INTO test_01193_18429.table_10_545 VALUES 
CREATE TABLE test_6560266954274925772C3827716A463E775F63396C3E48433129532F2B7D56286C6656775B413054(x UInt8) Engine=Memory;
CREATE INDEX idx_tab4_3 ON tab4 (col0);
CREATE TABLE test_low_cardinality_uuid (`data` String) ENGINE = MergeTree ORDER BY data SETTINGS index_granularity = 15279, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 8246, prefer_fetch_merged_part_size_threshold = 8405301609, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 2242860209, index_granularity_bytes = 1269985, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 25256, primary_key_compress_block_size = 44891
SELECT 'Running test stateless/01073_grant_and_revoke.sql from pid=1713' 
undrop table 02681_undrop_log;
DROP DATABASE IF EXISTS test_uojz20ci 
CREATE TABLE test_444944752C6D46282E572926346256606C645F63593E7C4D3B2C6D742C4420206C2333723A574274(x UInt8) Engine=Memory;
SHOW CREATE TABLE table_with_string_key;
SELECT 'Running test stateless/01780_range_msan.sql from pid=1726' 
alter table rdb_test_uofsla12.rmt attach partition id 'all' from rdb_test_uofsla12.mt
SELECT count() FROM system.query_log WHERE (event_date >= yesterday()) AND (initial_query_id = 'test_cci06whi_101300')
CREATE DATABASE IF NOT EXISTS test_nbypxd5i 
SELECT count() FROM t_cnf_fuzz WHERE (c6 AND (NOT c9) AND (NOT c1)) OR (c9) OR ((NOT c6)) OR (c9 AND (NOT c8) AND (NOT c5) AND c9 AND (NOT c5)) OR ((NOT c3)) OR (c5 AND c7) OR (c6 AND c1 AND (NOT c9)) OR (c8) OR ((NOT c0) AND (NOT c8) AND c3) OR ((NOT c6) AND (NOT c8) AND (NOT c7)) SETTINGS convert_query_to_cnf = 1
SELECT CAST(x, 'Int8') FROM t_enum8;
SELECT multiIf(1, ['foo', 'bar'], 1, [col4, 'bar'], ['foo', 'bar']) FROM multi_if_check;
SELECT 'Running test stateless/00553_buff_exists_materlized_column.sql from pid=1714' 
INSERT INTO group_bitmap_data_test SELECT '2019-01-02', 1, number FROM numbers(11, 60);
DROP DATABASE IF EXISTS test_aisg26id 
DROP DATABASE IF EXISTS test_gtlkg4tm 
SET mutations_sync = 0;
DELETE FROM t_lwd_mutations WHERE id % 10 = 0;
CREATE TABLE test_3B6E7D612444374F2E2935225F6872273D4F4369225A306A3E622778355E2F4773647E7051616B51(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_5_565 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'world' ilike 'Wo%Ld';
CREATE TABLE cdp_customers (`mid` String, `mid_seq` UInt32) ENGINE = ReplacingMergeTree ORDER BY mid_seq SETTINGS index_granularity = 45092, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 4031, prefer_fetch_merged_part_size_threshold = 8885778214, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 8607866859, index_granularity_bytes = 23579978, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 78270, primary_key_compress_block_size = 81936
CREATE TABLE test_01193_18429.table_10_312 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP SETTINGS PROFILE IF EXISTS s1_01418, s2_01418;
SELECT * FROM dictionary('table_function_dictionary_test_dictionary');
select v, variantElement(v, 'Decimal128(6)') from format(Values, 'v Variant(String, Decimal128(6))', '(NULL), (''string''), (42.42)') format Values;
SELECT 'Ok.';
INSERT INTO test_01193_18429.table_5_843 VALUES 
CREATE TABLE test_702F7E597B536738453F6E7E462A484F66454E304966223E2B65507259444C635F774A5F676D4222(x UInt8) Engine=Memory;
select format('{}{}{}', materialize('a'), 'b', materialize(toFixedString('c', 1))) == 'abc';
 explain actions = 1 select s, y from ( select sum(x) as s, y from (select number as x, number + 1 as y from numbers(10)) group by y ) where y != 0 and s - 8 and s - 4 settings enable_optimize_predicate_expression=0
CREATE TABLE test_01193_18429.table_5_230 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
insert into t3 values
select countSubstrings('foobar.com', '.');
SELECT (c1, c2) as t FROM values((nan, 0.), (0., 0.), (5., 5.)) ORDER BY t ASC LIMIT 1;
EXPLAIN PIPELINE SELECT a, b, c, d FROM t_fixed_prefix ORDER BY a, b, c, d SETTINGS optimize_read_in_order = 1
DROP DATABASE IF EXISTS test_yc9mywy2 
CREATE TABLE test_4A517A2D27725A246E4A212370723F2C6862403D52255F3C79446E3D764D2569637B74586D3F513E(x UInt8) Engine=Memory;
INSERT INTO test_02908_r1_195 SELECT rand64() FROM numbers(5);
SELECT y FROM t ALL RIGHT JOIN tj ON t.key1 == tj.key1 AND t.key2 == tj.key2 ORDER BY t.key1 FORMAT TSVWithNames;
CREATE TABLE test_01193_18429.table_9_499 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_8_645 VALUES 
DROP DICTIONARY IF EXISTS db_01268.dict1;
SELECT 'Running test stateless/02933_paste_join.sql from pid=1726' 
SELECT a, b, and(a, b), or(a, b), xor(a, b) FROM test_table;
DROP TABLE test1;
INSERT INTO fixed_string_test_table VALUES 
SELECT tj.y FROM t ALL RIGHT JOIN tj USING (key1, key2) ORDER BY key1 FORMAT TSVWithNames;
SELECT * FROM test LIMIT 4 OFFSET 192;
SELECT intDiv(CAST( 0 AS Nullable(Int8)),CAST(1 AS Int8));
SELECT * FROM remote('127.0.0.{1,2}', generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))', 1, 1, 1)) LIMIT 1 FORMAT Null
CREATE TABLE test_39742C4763765021467D6744782A33262C5E3137643F5C2967284C325A237E65677B4F6A7C307B2E(x UInt8) Engine=Memory;
DROP TABLE test_wide_nested;
DROP DATABASE IF EXISTS test_ea7gsds7 
SELECT multiIf((number % 2) = 0, toUInt32(1), (number % 3) = 0, toFloat32(2), toFloat64(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_tab VALUES 
CREATE TABLE test_30776B762B77487325556E6C28667164435C735F6D6873553F202C6267756E20214F20332A677D73(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_6_964 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_u9jbr517 
SELECT throwIf((SELECT sum(nm) FROM mv) != 66) FORMAT Null;
SELECT name FROM system.parts WHERE table='parallel_q2' and database='test_63cb2vfg' and active=1 ORDER BY name
INSERT INTO test_01193_18429.table_6_226 VALUES 
CREATE TABLE morton_numbers_3_02457 (`n1` UInt64, `n2` UInt64) ENGINE = MergeTree ORDER BY n1 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 24044022, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 1762, prefer_fetch_merged_part_size_threshold = 7331804285, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 47, min_merge_bytes_to_use_direct_io = 10737418240, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 78426, primary_key_compress_block_size = 76680
SELECT 'Running test stateless/01881_union_header_mismatch_bug.sql from pid=1713' 
CREATE SETTINGS PROFILE 02832_alter_max_sessions_profile_26536
select sum(abs(sinh(x) - 0.5 * (exp(x) - exp(-x))) < 1e-6) / count() from system.one array join range(10) as x;
SELECT 1 SETTINGS use_query_cache = true, query_cache_min_query_runs = 1;
CREATE TABLE test_01193_18429.table_5_615 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP DATABASE IF EXISTS test_03thgh6f 
CREATE DATABASE IF NOT EXISTS test_1l064d2k 
CREATE TABLE test_3772694B696D2A437546316D2C58393266736F37522C2971232E39204D4C6D24294653213F693A60(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_o5adfa8z 
INSERT INTO r9 SELECT 46 % 10 = 9 ? 46 - 1 : 46
SELECT 127, -2147483648, 127 = -2147483648, 127 != -2147483648, 127 < -2147483648, 127 <= -2147483648, 127 > -2147483648, 127 >= -2147483648, -2147483648 = 127, -2147483648 != 127, -2147483648 < 127, -2147483648 <= 127, -2147483648 > 127, -2147483648 >= 127 , toUInt8(127) = toInt32(-2147483648), toUInt8(127) != toInt32(-2147483648), toUInt8(127) < toInt32(-2147483648), toUInt8(127) <= toInt32(-2147483648), toUInt8(127) > toInt32(-2147483648), toUInt8(127) >= toInt32(-2147483648), toInt32(-2147483648) = toUInt8(127), toInt32(-2147483648) != toUInt8(127), toInt32(-2147483648) < toUInt8(127), toInt32(-2147483648) <= toUInt8(127), toInt32(-2147483648) > toUInt8(127), toInt32(-2147483648) >= toUInt8(127) , toUInt8(127) = toInt64(-2147483648), toUInt8(127) != toInt64(-2147483648), toUInt8(127) < toInt64(-2147483648), toUInt8(127) <= toInt64(-2147483648), toUInt8(127) > toInt64(-2147483648), toUInt8(127) >= toInt64(-2147483648), toInt64(-2147483648) = toUInt8(127), toInt64(-2147483648) != toUInt8(127), toInt64(-2147483648) < toUInt8(127), toInt64(-2147483648) <= toUInt8(127), toInt64(-2147483648) > toUInt8(127), toInt64(-2147483648) >= toUInt8(127) , toInt8(127) = toInt32(-2147483648), toInt8(127) != toInt32(-2147483648), toInt8(127) < toInt32(-2147483648), toInt8(127) <= toInt32(-2147483648), toInt8(127) > toInt32(-2147483648), toInt8(127) >= toInt32(-2147483648), toInt32(-2147483648) = toInt8(127), toInt32(-2147483648) != toInt8(127), toInt32(-2147483648) < toInt8(127), toInt32(-2147483648) <= toInt8(127), toInt32(-2147483648) > toInt8(127), toInt32(-2147483648) >= toInt8(127) , toInt8(127) = toInt64(-2147483648), toInt8(127) != toInt64(-2147483648), toInt8(127) < toInt64(-2147483648), toInt8(127) <= toInt64(-2147483648), toInt8(127) > toInt64(-2147483648), toInt8(127) >= toInt64(-2147483648), toInt64(-2147483648) = toInt8(127), toInt64(-2147483648) != toInt8(127), toInt64(-2147483648) < toInt8(127), toInt64(-2147483648) <= toInt8(127), toInt64(-2147483648) > toInt8(127), toInt64(-2147483648) >= toInt8(127) , toUInt16(127) = toInt32(-2147483648), toUInt16(127) != toInt32(-2147483648), toUInt16(127) < toInt32(-2147483648), toUInt16(127) <= toInt32(-2147483648), toUInt16(127) > toInt32(-2147483648), toUInt16(127) >= toInt32(-2147483648), toInt32(-2147483648) = toUInt16(127), toInt32(-2147483648) != toUInt16(127), toInt32(-2147483648) < toUInt16(127), toInt32(-2147483648) <= toUInt16(127), toInt32(-2147483648) > toUInt16(127), toInt32(-2147483648) >= toUInt16(127) , toUInt16(127) = toInt64(-2147483648), toUInt16(127) != toInt64(-2147483648), toUInt16(127) < toInt64(-2147483648), toUInt16(127) <= toInt64(-2147483648), toUInt16(127) > toInt64(-2147483648), toUInt16(127) >= toInt64(-2147483648), toInt64(-2147483648) = toUInt16(127), toInt64(-2147483648) != toUInt16(127), toInt64(-2147483648) < toUInt16(127), toInt64(-2147483648) <= toUInt16(127), toInt64(-2147483648) > toUInt16(127), toInt64(-2147483648) >= toUInt16(127) , toInt16(127) = toInt32(-2147483648), toInt16(127) != toInt32(-2147483648), toInt16(127) < toInt32(-2147483648), toInt16(127) <= toInt32(-2147483648), toInt16(127) > toInt32(-2147483648), toInt16(127) >= toInt32(-2147483648), toInt32(-2147483648) = toInt16(127), toInt32(-2147483648) != toInt16(127), toInt32(-2147483648) < toInt16(127), toInt32(-2147483648) <= toInt16(127), toInt32(-2147483648) > toInt16(127), toInt32(-2147483648) >= toInt16(127) , toInt16(127) = toInt64(-2147483648), toInt16(127) != toInt64(-2147483648), toInt16(127) < toInt64(-2147483648), toInt16(127) <= toInt64(-2147483648), toInt16(127) > toInt64(-2147483648), toInt16(127) >= toInt64(-2147483648), toInt64(-2147483648) = toInt16(127), toInt64(-2147483648) != toInt16(127), toInt64(-2147483648) < toInt16(127), toInt64(-2147483648) <= toInt16(127), toInt64(-2147483648) > toInt16(127), toInt64(-2147483648) >= toInt16(127) , toUInt32(127) = toInt32(-2147483648), toUInt32(127) != toInt32(-2147483648), toUInt32(127) < toInt32(-2147483648), toUInt32(127) <= toInt32(-2147483648), toUInt32(127) > toInt32(-2147483648), toUInt32(127) >= toInt32(-2147483648), toInt32(-2147483648) = toUInt32(127), toInt32(-2147483648) != toUInt32(127), toInt32(-2147483648) < toUInt32(127), toInt32(-2147483648) <= toUInt32(127), toInt32(-2147483648) > toUInt32(127), toInt32(-2147483648) >= toUInt32(127) , toUInt32(127) = toInt64(-2147483648), toUInt32(127) != toInt64(-2147483648), toUInt32(127) < toInt64(-2147483648), toUInt32(127) <= toInt64(-2147483648), toUInt32(127) > toInt64(-2147483648), toUInt32(127) >= toInt64(-2147483648), toInt64(-2147483648) = toUInt32(127), toInt64(-2147483648) != toUInt32(127), toInt64(-2147483648) < toUInt32(127), toInt64(-2147483648) <= toUInt32(127), toInt64(-2147483648) > toUInt32(127), toInt64(-2147483648) >= toUInt32(127) , toInt32(127) = toInt32(-2147483648), toInt32(127) != toInt32(-2147483648), toInt32(127) < toInt32(-2147483648), toInt32(127) <= toInt32(-2147483648), toInt32(127) > toInt32(-2147483648), toInt32(127) >= toInt32(-2147483648), toInt32(-2147483648) = toInt32(127), toInt32(-2147483648) != toInt32(127), toInt32(-2147483648) < toInt32(127), toInt32(-2147483648) <= toInt32(127), toInt32(-2147483648) > toInt32(127), toInt32(-2147483648) >= toInt32(127) , toInt32(127) = toInt64(-2147483648), toInt32(127) != toInt64(-2147483648), toInt32(127) < toInt64(-2147483648), toInt32(127) <= toInt64(-2147483648), toInt32(127) > toInt64(-2147483648), toInt32(127) >= toInt64(-2147483648), toInt64(-2147483648) = toInt32(127), toInt64(-2147483648) != toInt32(127), toInt64(-2147483648) < toInt32(127), toInt64(-2147483648) <= toInt32(127), toInt64(-2147483648) > toInt32(127), toInt64(-2147483648) >= toInt32(127) , toUInt64(127) = toInt32(-2147483648), toUInt64(127) != toInt32(-2147483648), toUInt64(127) < toInt32(-2147483648), toUInt64(127) <= toInt32(-2147483648), toUInt64(127) > toInt32(-2147483648), toUInt64(127) >= toInt32(-2147483648), toInt32(-2147483648) = toUInt64(127), toInt32(-2147483648) != toUInt64(127), toInt32(-2147483648) < toUInt64(127), toInt32(-2147483648) <= toUInt64(127), toInt32(-2147483648) > toUInt64(127), toInt32(-2147483648) >= toUInt64(127) , toUInt64(127) = toInt64(-2147483648), toUInt64(127) != toInt64(-2147483648), toUInt64(127) < toInt64(-2147483648), toUInt64(127) <= toInt64(-2147483648), toUInt64(127) > toInt64(-2147483648), toUInt64(127) >= toInt64(-2147483648), toInt64(-2147483648) = toUInt64(127), toInt64(-2147483648) != toUInt64(127), toInt64(-2147483648) < toUInt64(127), toInt64(-2147483648) <= toUInt64(127), toInt64(-2147483648) > toUInt64(127), toInt64(-2147483648) >= toUInt64(127) , toInt64(127) = toInt32(-2147483648), toInt64(127) != toInt32(-2147483648), toInt64(127) < toInt32(-2147483648), toInt64(127) <= toInt32(-2147483648), toInt64(127) > toInt32(-2147483648), toInt64(127) >= toInt32(-2147483648), toInt32(-2147483648) = toInt64(127), toInt32(-2147483648) != toInt64(127), toInt32(-2147483648) < toInt64(127), toInt32(-2147483648) <= toInt64(127), toInt32(-2147483648) > toInt64(127), toInt32(-2147483648) >= toInt64(127) , toInt64(127) = toInt64(-2147483648), toInt64(127) != toInt64(-2147483648), toInt64(127) < toInt64(-2147483648), toInt64(127) <= toInt64(-2147483648), toInt64(127) > toInt64(-2147483648), toInt64(127) >= toInt64(-2147483648), toInt64(-2147483648) = toInt64(127), toInt64(-2147483648) != toInt64(127), toInt64(-2147483648) < toInt64(127), toInt64(-2147483648) <= toInt64(127), toInt64(-2147483648) > toInt64(127), toInt64(-2147483648) >= toInt64(127) 
CREATE TABLE test_7E2B257D2C4C586D6E4C282F4647797B494A6C39234C2A22466C5D272C582042347D575E70645357(x UInt8) Engine=Memory;
CREATE TABLE test_5B4C41452E766D40724C48376A4A3553576D4A5E3A4E485C437366654A5A6C657D5C4D45632D5C64(x UInt8) Engine=Memory;
INSERT INTO line_as_string2(c) FORMAT LineAsString
CREATE TABLE t_tuple_numeric (t JSON) ENGINE = Memory;
INSERT INTO test_01193_18429.table_10_693 VALUES 
SELECT count(), min(x), max(x), sum(x), uniqExact(x) FROM sample_00276 SAMPLE 1/2 OFFSET 1/2 SETTINGS parallel_replicas_count = 3, parallel_replica_offset = 0;
DROP TABLE IF EXISTS interval;
SELECT greatest('world');
SELECT avgWeighted(1., 0.) FROM `test_2dc1tn7z`.`dummy`
SELECT multiIf((number % 2) = 0, [toUInt16(1), toUInt16(2)], (number % 3) = 0, [toUInt32(2), toUInt32(3)], [toInt32(3), toInt32(3)]) FROM system.numbers LIMIT 10;
SELECT count(), sum(toUInt64(ns[1])), max(toUInt64(ns[1])), sum(toUInt64(ns[2]))/10 FROM (SELECT intDiv(number, 100) AS k, groupArray([toString(number), toString(number*10)]) AS ns FROM numbers_mt GROUP BY k) ARRAY JOIN ns;
INSERT INTO test_01193_18429.table_5_638 VALUES 
CREATE TABLE test_01193_18429.table_8_743 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP TABLE check;
SELECT 1 FROM test_table_join_1 AS t1 LEFT JOIN test_table_join_2 AS t2 USING (id) LEFT JOIN test_table_join_3 AS t3 USING(id);
SELECT lc, toTypeName(lc) FROM l_lc AS l FULL JOIN r_lc AS r USING (lc) ORDER BY x, lc;
drop row policy filter on tbl;
select b1, a2 from tab1 any left join tab2 on toInt32(a1 + 1) = a2;
SELECT d2 > f2 FROM t ORDER BY f2;
CREATE TABLE test_7D43455F5A362275785251714328694F444370633726742423605F67735A61346E6B716739496F36(x UInt8) Engine=Memory;
CREATE TABLE test_move_partition_throttling (key UInt64 CODEC(NONE)) ENGINE = MergeTree ORDER BY tuple() SETTINGS storage_policy='local_remote';
INSERT INTO test_01193_18429.table_9_39 VALUES 
select URLHash(url, 4 as level) = URLHash(URLHierarchy(url)[level + 1]) from system.one array join ['', 'http://ya.ru', 'http://ya.ru/', 'http://ya.ru/a', 'http://ya.ru/a/', 'http://ya.ru/a/b', 'http://ya.ru/a/b?'] as url;
DROP TABLE 02428_otel_traces
CREATE TABLE storage(UserID UInt64) ENGINE=Memory;
DROP DATABASE IF EXISTS test_pqc2uepf 
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 9026, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT '*** Should show 6: ***';
EXPLAIN QUERY TREE (SELECT (sum(decimal32) + 2 * count(decimal32)) - (sum(decimal32) + 3 * count(decimal32)) From test_table);
CREATE DATABASE IF NOT EXISTS test_4dk9rw9v 
CREATE DATABASE IF NOT EXISTS test_ock80pe5 
SELECT ignore(addDays(toDate(0), -1));
DROP DATABASE IF EXISTS test_7m5hvjum 
CREATE DATABASE IF NOT EXISTS test_fgtvwvjz 
CREATE TABLE IF NOT EXISTS ht (`haystack` String, `needle` String, `match` UInt8, `func` String) ENGINE = MergeTree ORDER BY haystack SETTINGS index_granularity = 35803, min_bytes_for_wide_part = 44623338, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 2496, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 24340508, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 79455, primary_key_compress_block_size = 20219
SELECT * FROM 02952_disjunction_optimization WHERE a <> 1 AND a <> 2 AND a <> 4 AND true;
CREATE TABLE r_prop_table2 ( column_default UInt64 DEFAULT 42, column_codec String CODEC(ZSTD(10)), column_comment Date COMMENT 'Some comment', column_ttl UInt64 TTL column_comment + INTERVAL 1 MONTH ) ENGINE ReplicatedMergeTree('/clickhouse/{database}/test_01493/r_prop_table', '2') ORDER BY tuple() TTL column_comment + INTERVAL 2 MONTH;
CREATE TABLE test_6F62523679713B4E5175337D2F4369573A6A7356264D765524786E5375356B5826593F2E6A2C616B(x UInt8) Engine=Memory;
drop table s_00818;
CREATE TABLE test_314A4954506E243939792B454F5F3977466F672F6C272F3A743458475D345038556042702A692074(x UInt8) Engine=Memory;
INSERT INTO t2 SELECT number, number FROM numbers(5, 5);
CREATE TABLE test_755E5E57586D723057425D2C4664265A3A26386D59624A60377A5838344A6D50765972364E7C5A7E(x UInt8) Engine=Memory;
CREATE TABLE test_765342515D465A79292A453275523832727B3E6F48613E41544835633D41202F30343E79432E427D(x UInt8) Engine=Memory;
alter table many_mutations delete where y = 343 * 2 settings mutations_sync = 0;
CREATE TABLE test_01193_18429.table_9_765 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP DATABASE IF EXISTS test_htdg41rw 
SET allow_experimental_map_type = 1;
CREATE TABLE test_02908_r2_175 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_175', 'r2') ORDER BY tuple()
SELECT '*** Test part removal ***';
CREATE TABLE test_28224D7B4A2337347826354A3B4D297E54237462705A5A403C2D68236E6C6B632A2C545842205562(x UInt8) Engine=Memory;
SELECT '66' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:c000::')))
select * from dt_test
use 02911_support_alias_column_in_indices
INSERT INTO test_01193_18429.table_7_352 VALUES 
SELECT @@max_allowed_packet, number FROM system.numbers LIMIT 3 FORMAT CSVWithNames;
SELECT sum(m['1']), sum(m['7']), sum(m['100']) FROM table_map;
SELECT 'Running test stateless/02128_cast_nullable.sql from pid=1720' 
SELECT normalizedQueryHash('[1, 2, 3, x]') != normalizedQueryHash('[1, x]');
SELECT groupArraySorted(30)(str) FROM (SELECT toString(number) as str FROM numbers(30));
EXPLAIN SYNTAX SELECT number FROM numbers(3) ORDER BY -number;
select count() from system.query_log where current_database = currentDatabase() and query like 'select \'01231_log_queries_min_type/QUERY_START%' and event_date >= yesterday();
CREATE DATABASE IF NOT EXISTS test_9etqk8zm 
select * from (select toLowCardinality(dummy) as val from system.one) any left join (select dummy as rval from system.one) on val + 0 = rval * 1;
EXPLAIN QUERY TREE run_passes=1 SELECT avg(log(2) * number) AS k FROM numbers(10000000) GROUP BY GROUPING SETS (((number % 2) * (number % 3), number % 3), (number % 2)) HAVING avg(log(2) * number) > 3465735.3 ORDER BY k;
INSERT INTO test_xp4qylap.t_async_insert_table_function (id, s) VALUES
CREATE TABLE 01504_test (key Tuple(String, UInt32), value UInt64) Engine=EmbeddedRocksDB PRIMARY KEY(key);
SELECT arrayCompact(x -> x.2, groupArray((number, intDiv(number, 3) % 3))) FROM numbers(10);
CREATE INDEX idx_tab2_0 ON tab2 (col3 DESC,col4);
CREATE TABLE test_752A472A4F6735236C64226E3D2C665F52484839465E333A363E76266D5D6642204E2B202230646D(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02949_parallel_replicas_scalar_subquery_big_integer.sql from pid=1720' 
CREATE TABLE test_4B415155533A3E344E2F736B45484D4C3472753E2F6D59787C234827433F5C3E5D5F29683A725D57(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_8_251 VALUES 
SHOW GRANTS FORMAT Null;
CREATE TABLE test_01193_18429.table_7_47 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT x, y FROM test
SELECT DISTINCT toString(number) = toStringCutToZero(toString(number)) FROM (SELECT * FROM system.numbers LIMIT 1000);
SELECT t1.key1, t1.key2, t1.key3, t2.key1, t2.key2, t2.key3, empty(t1.s), t2.s FROM t1 ANY RIGHT JOIN t2 ON t1.key1 == t2.key1 AND t1.key2 == t2.key2 AND t1.key3 == t2.key3 AND t1.key1 == t2.key3 ORDER BY t1.key1, t1.key2, t1.key3, t2.key1, t2.key2, t2.key3, t2.s ;
INSERT INTO test_01193_18429.table_1_956 VALUES 
SELECT toDate(1412106600, 'Europe/London');
select countSubstrings('010000', toString(number)) from numbers(1);
USE test_8yvdjyfm
CREATE TABLE test_4B3C7D5B732C7B6B214671585B28205D392843572F3861624E464A60794D7C726D43734864346422(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02421_explain_subquery.sql from pid=1718' 
CREATE TABLE tab (`idna` String) ENGINE = MergeTree ORDER BY idna SETTINGS index_granularity = 38394, min_bytes_for_wide_part = 1073377467, ratio_of_defaults_for_sparse_serialization = 0.06564373522996902, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 13284, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 94, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 17768331, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 94828, primary_key_compress_block_size = 79911
select 1 = multiSearchAny(materialize('abcdefgh'), ['efgh']);
SELECT t1.key, t2.key, length(t1.s), length(t2.s) FROM tn1 AS t1 ALL INNER JOIN tn2 AS t2 ON t1.key == t2.key ORDER BY t1.key, t2.key;
SELECT stddevSamp(NULL, NULL);
SELECT substring('1234' lhs FROM 2), lhs;
SELECT groupArray([NULL]);
CREATE TABLE test_01193_18429.table_3_750 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
explain pipeline SELECT k1, k3, sum(value) v FROM remote('127.0.0.{1,2}', currentDatabase(), proj_agg_02343) GROUP BY k1, k3 SETTINGS distributed_aggregation_memory_efficient = 1;
SELECT arrayMap(x -> range(x), range(number))[2 - number] FROM system.numbers LIMIT 10;
EXPLAIN QUERY TREE SELECT uniq(a) FROM (SELECT DISTINCT a FROM test_rewrite_uniq_to_count) settings allow_experimental_analyzer=1;
SELECT '====SCHEMA====';
INSERT INTO test_01193_18429.table_2_85 VALUES 
select '-------toStartOfMinute---------';
SELECT toValidUTF8('');
show create table numbers format TSVRaw;
INSERT INTO test_01193_18429.table_7_878 VALUES 
desc format(JSONEachRow, '{"x" : "20000101"}');
SELECT s, replaceAll(s, '_', 'oo') AS a, REGEXP_REPLACE(s, '_', 'oo') AS b, a = b FROM (SELECT arrayJoin(['_._', '_.']) AS s);
CREATE DATABASE IF NOT EXISTS test_oka4pp4u 
SELECT multiIf((number % 2) = 0, toFloat32(1), (number % 3) = 0, toUInt16(2), toInt16(3)) FROM system.numbers LIMIT 10;
SELECT materialize(toDecimal32(1, 2)) / CAST(1, 'Nullable(UInt32)');
SELECT * FROM remote('127.0.0.{1,2}', generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8))))))))))))))))))))))))))', 1, 1, 1)) LIMIT 1 FORMAT Null
select * from (explain plan actions = 1 select * from tab2 order by toStartOfDay(x), intDiv(intDiv(y, -2), -3)) where explain like '%sort description%';
SELECT 'Running test stateless/02025_storage_filelog_virtual_col.sh from pid=1715' 
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 10933, 500 settings ignore_materialized_views_with_dropped_target_table=1
CHECK TABLE mt_table SETTINGS max_threads = 1;
SELECT partitionId(-1);
SELECT 'SELECT D - N';
WITH arrayJoin([1, 2, 3, nan, 4, 5]) AS data, arrayJoin([nan, 1, 2, 3, 4]) AS data2, arrayJoin([1, 2, 3, 4, nan]) AS data3, arrayJoin([nan, nan, nan]) AS data4, arrayJoin([nan, 1, 2, 3, nan]) AS data5 SELECT max(data), max(data2), max(data3), max(data4), max(data5);
CREATE DATABASE IF NOT EXISTS test_mu0b2p3e 
INSERT INTO test_01193_18429.table_4_854 VALUES 
CREATE TABLE test_6F6C376732474F215E42515D54282F376E3F514B2E3F33662828667B4B476C506F49767C322F7747(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_5_12 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'r2', id, val, count(), uniqExact(unique_value) FROM replicated_deduplicate_by_columns_r2 GROUP BY id, val ORDER BY id, val;
SELECT CASE WHEN (col1 % 2) = 0 THEN [col2, 'bar'] WHEN (col1 % 3) = 0 THEN [col4, col5] ELSE [col6, 'bar'] END FROM multi_if_check;
INSERT INTO test_01193_18429.table_1_577 VALUES 
SELECT l.a, r.c FROM (SELECT 1 AS a, 2 AS b) AS l join (SELECT 2 AS b, 3 AS c) AS r USING b;
SELECT farmFingerprint64('');
INSERT INTO test_01193_18429.table_8_48 VALUES 
INSERT INTO test_01193_18429.table_1_271 VALUES 
select toTypeName(materialize(js1.k)), toTypeName(materialize(js2.k)), toTypeName(materialize(js1.s)), toTypeName(materialize(js2.s)) from (select number k, toLowCardinality(toString(number)) s from numbers(2)) as js1 full join (select toLowCardinality(number+1) k, toString(number+1) s from numbers(2)) as js2 using k order by js1.k, js2.k;
SELECT * FROM "http://localhost:11111/test/a.tsv" 
SELECT b, c, d, e FROM t_fixed_prefix WHERE bitNot(a) = 1 AND bitNot(c) = 1 ORDER BY b, c, d, e SETTINGS optimize_read_in_order = 0
DROP DATABASE IF EXISTS test_a0ybeglr 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c2) AND c8) OR ((NOT c2) AND c9 AND (NOT c5)) OR (c3) OR (c4 AND c6 AND (NOT c5)) OR ((NOT c1) AND c5) OR ((NOT c1) AND (NOT c2) AND c7 AND (NOT c1) AND (NOT c4)) OR (c3) OR ((NOT c4) AND (NOT c6)) SETTINGS convert_query_to_cnf = 0
SELECT dictHas('range_dictionary', (toUInt64(2), '2'), toDate('2019-05-31'));
CREATE TABLE mergetree_00609 (`x` UInt64, `s` String) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 43154, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 30, merge_max_block_size = 15189, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 7868909096, index_granularity_bytes = 847732, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 29215, primary_key_compress_block_size = 17624
CREATE TABLE test_5823416A5A2B2058285A4068307E21745461786122264B37764C743B445C33735A426B544E337740(x UInt8) Engine=Memory;
select toStartOfTenMinutes(toDateTime(0, 'America/Los_Angeles'));
CREATE TABLE test_01193_18429.table_8_679 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_8_537 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_2_62 VALUES 
DROP DATABASE IF EXISTS test_gof4lpu8 
CREATE TABLE test_2E7E40374E785D3E7C2C2F794245782D2C625A7E46736D2C7E594C283E3D5A43365658287C6C5F58(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01942_create_table_with_sample.sql from pid=1720' 
SELECT * FROM bloom_filter_idx2 WHERE lower(s) = 'aÃÂ±ÃÂ²ÃÂ³ÃÂ´ÃÂµÃÂÃÂ¶' OR s = 'aÃÂ±ÃÂ²ÃÂ³ÃÂ´ÃÂµÃÂÃÂ¶' ORDER BY k
SELECT * FROM create_as_select_01021;
CREATE DATABASE IF NOT EXISTS test_mna9occd 
ALTER TABLE src_5 MODIFY SETTING max_replicated_merges_in_queue=0
EXPLAIN SYNTAX SELECT * FROM (SELECT 1 AS id, (SELECT 1) as subquery) WHERE subquery = 1;
SELECT empty(toIPv4('0.0.0.0'));
DROP TABLE IF EXISTS prewhere_int256;
SELECT 'Running test stateless/00678_murmurhash.sql from pid=1720' 
select 7, name, removal_tid, removal_csn from system.parts where database=currentDatabase() and table='txn_counters' and active order by system.parts.name;
SELECT toFloat32OrDefault(NULL);
CREATE TABLE test_01193_18429.table_9_215 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN toInt64(1) WHEN (number % 3) = 0 THEN toInt8(2) ELSE toInt32(3) END FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_oxe7cedv 
EXPLAIN AST ALTER TABLE t UNFREEZE PARTITION 'p' WITH NAME 'n';
SELECT c, d FROM t_fixed_prefix WHERE c = 1 ORDER BY c, d SETTINGS optimize_read_in_order = 1
DROP DICTIONARY dict_db_01224.dict;
CREATE DATABASE IF NOT EXISTS test_mcom722g 
select n, maxMerge(s) as x, length(x) from aggr group by n order by n;
INSERT INTO 01766_db.complex_key_complex_attributes_source_table VALUES
SELECT boundingRatio(number, number * 1.5) FROM numbers(10);
SELECT 'Running test stateless/02813_array_concat_agg.sql from pid=1718' 
INSERT INTO t1 (id, value1) VALUES 
ALTER TABLE test_table_8 MODIFY SETTING max_replicated_merges_in_queue=0
SELECT val FROM t ALL RIGHT JOIN tj ON t.key1 == tj.key1 AND t.key2 == tj.key2 ORDER BY t.key1 FORMAT TSVWithNames;
SELECT (2 * count(float64) - sum(float64)) + (3 * count(float64) - sum(float64)) From test_table;
INSERT INTO test_01193_18429.table_7_253 VALUES 
INSERT INTO test_01193_18429.table_5_411 VALUES 
SELECT count() FROM (SELECT 2000 AS d_year UNION DISTINCT SELECT 2000 AS d_year) WHERE d_year = 2002 
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 42430, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE TABLE test_39612F6F6644304D6336742467343C6D4B47712D334024505E4C682F50443B46537E2A3E6A564B77(x UInt8) Engine=Memory;
SELECT dictGetStringOrDefault('db_01268.dict2', 'region_name', toUInt64(10), 'NONE');
select * from dist_01528 where dummy = 2 settings allow_nondeterministic_optimize_skip_unused_shards=1;
SELECT '3. test distinct with compound column name';
CREATE TABLE test_5B242E256E43512834655F6B4C28645127492A3E263A4E692B61546E48767D29596A773B384E6734(x UInt8) Engine=Memory;
CREATE INDEX idx_tab3_3 ON tab3 (col1,col0);
CREATE TABLE r2 (`x` UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/tables/01509_check_many_parallel_quorum_inserts_long_test_uo81whjp/parallel_quorum_many', 'r2') ORDER BY x SETTINGS index_granularity = 36581, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 9217, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 677241, vertical_merge_algorithm_min_columns_to_activate = 82, min_merge_bytes_to_use_direct_io = 3488406650, index_granularity_bytes = 28476649, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 70272, primary_key_compress_block_size = 65361
SELECT count(), sum(marks) FROM system.parts WHERE table = 'mt_compact' AND database = 'test_98iwbixg' AND active
SELECT * FROM map_protobuf_00825 FORMAT Protobuf SETTINGS format_schema = '/usr/share/clickhouse-test/queries/0_stateless/format_schemas/00825_protobuf_format_map:Message'
INSERT INTO test_01193_18429.table_6_336 VALUES 
kill query where query_id = '02450_kill_distributed_query_deadlock_test_ft363ahb-2' sync
SELECT 'Running test stateless/02286_convert_decimal_type.sql from pid=1713' 
DROP TABLE table1 
DROP DATABASE IF EXISTS test_c0lgqht4 
CREATE INDEX idx_tab2_4 ON tab2 (col0 DESC);
DROP DATABASE IF EXISTS test_h91wbx94 
SELECT '-- splitByAlpha';
CREATE DATABASE IF NOT EXISTS test_hlcqcj43 
SELECT 'freeze one';
CREATE DATABASE IF NOT EXISTS test_lalfkhnk 
CREATE TABLE test_37574A61465520722023305A3824564C786537336B233756732E4E55517E2326467957265A61366F(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_2_229 VALUES 
CREATE TABLE test_786C6C6B607C5B47735B40764733604633785E645E44412B6C637E374A4741503D3F6E2A46206D71(x UInt8) Engine=Memory;
CREATE TABLE test_4D48332A7C694D3945537B547375473B38545A363C704921606E40707E6E4072427E777E2566617A(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_3_420 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
ALTER TABLE dst ATTACH PARTITION 1 FROM src;
select a, count() from pr_t group by a order by a limit 5 offset 500;
select * from (select 0 as k, toDecimal64(1, 0) as v) t1 asof join (select 0 as k, toDecimal64(0, 0) as v) t2 using(k, v);
CREATE MATERIALIZED VIEW landing_to_target TO target AS SELECT n + throwIf(n == 3333) FROM landing;
CREATE TABLE test_556B7E4529546C50612D6D602A3C365B413141413B7668344467413B765077246F2A667575383252(x UInt8) Engine=Memory;
SELECT BIT_OR(NULL);
select parseDateTimeInJodaSyntax('70', 'YY', 'UTC') = toDateTime('1970-01-01', 'UTC');
SELECT 'Running test stateless/00084_summing_merge_tree.sql from pid=1718' 
SELECT count() FROM t_s3_compressed_blocks WHERE NOT ignore(s);
drop table view_00840 
ALTER TABLE concurrent_alter_column ADD COLUMN c232 DOUBLE;
select substringIndexUTF8('Ã¥Â¯ÂÃ¥Â¼ÂºÃ¯Â¼ÂÃ¦Â°ÂÃ¤Â¸Â»Ã¯Â¼ÂÃ¦ÂÂÃ¦ÂÂ', 'Ã¯Â¼Â', materialize(-3));
select file('c.txt'), * from data
CREATE DATABASE IF NOT EXISTS test_yaxnguyc 
select tadig, ts, dow, sumMerge(traffic_bytes), maxMerge(last_stop), minMerge(min_radacctid), maxMerge(max_radacctid) from mv_traffic_by_tadig15min group by tadig, ts, dow;
SELECT fromUnixTimestampInJodaSyntax(1669804872, 'd', 'UTC');
CREATE TABLE test_02908_r1_169 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_169', 'r1') ORDER BY tuple()
select [20, 0, 9, 0, 0, 14, 0, 5, 8, 3, 0, 0, 0, 4] = multiSearchAllPositions(materialize('zczprzdcvcqzqdnhubyoblg'), ['obl', 'lzrjyezgqqoiydn', 'vc', 'nbvwfpmqlziedob', 'pnezljnnujjbyviqsdpaqkkrlogeht', 'dn', 'irvgeaq', 'rzdcvcqzqdnh', 'cvcqzqdnh', 'zprzdcv', 'wvvgoexuevmqjeqavsianoviubfixdpe', 'aeavhqipsvfkcynyrtlxwpegwqmnd', 'blckyiacwgfaoarfkptwcei', 'prz']) from system.numbers limit 10;
INSERT INTO test_01193_18429.table_1_844 VALUES 
INSERT INTO test_01193_18429.table_8_663 VALUES 
INSERT INTO test_01193_18429.table_3_500 VALUES 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c8) AND c2 AND c7 AND (NOT c4)) OR ((NOT c9)) OR ((NOT c1) AND (NOT c3)) OR (c4) OR ((NOT c2) AND c5 AND (NOT c2) AND c4) OR (c0 AND c1 AND c2 AND c1 AND c5) SETTINGS convert_query_to_cnf = 0
SELECT CASE WHEN 1 THEN [col2, col3] WHEN (col1 % 3) = 0 THEN [col4, 'bar'] ELSE [col6, col7] END FROM multi_if_check;
CREATE TABLE test_3F5F4A7344412F6F35473372382D2F387249256579615A3A2E322950702F39492965263B463B7629(x UInt8) Engine=Memory;
SELECT count() FROM constraint_test_assumption WHERE domainWithoutWWW(URL) = 'bigmir.net';
INSERT INTO src_10 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 99
SELECT * FROM t1_00826 cross join t2_00826 where t1_00826.a = t2_00826.a and t1_00826.b = t2_00826.b and (t1_00826.a >= 1 OR t2_00826.b = 1);
select parseDateTimeInJodaSyntax('1999 60', 'yyyy D', 'UTC') = toDateTime('1999-03-01', 'UTC');
set optimize_group_by_function_keys=0;
drop table dist_01756_str;
SELECT count(*) FROM source WHERE toYear(dt) <> 2023 SETTINGS allow_experimental_analyzer=1;
SELECT 'Running test stateless/01142_with_ties_and_aliases.sql from pid=1722' 
CREATE TABLE test (`key` UInt64, `val` UInt64) ENGINE = MergeTree PARTITION BY key >= 128 ORDER BY key SETTINGS index_granularity = 19780, min_bytes_for_wide_part = 547990890, ratio_of_defaults_for_sparse_serialization = 0.7400310635566711, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 12131, prefer_fetch_merged_part_size_threshold = 9932394327, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 30795669, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 19522, primary_key_compress_block_size = 82907
drop table dist_background_insert_split_batch_on_failure;
INSERT INTO test_01193_18429.table_3_49 VALUES 
SELECT 'Running test stateless/00982_array_enumerate_uniq_ranked.sql from pid=1715' 
CREATE TABLE test_462B426A67577A427E282333444E542F624B6C77667E592559235F22602E7A6A585D282745377D3A(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_3_687 VALUES 
alter table many_mutations delete where y = 311 * 2 settings mutations_sync = 0;
set optimize_rewrite_aggregate_function_with_if = false;
DROP DATABASE IF EXISTS test_s5jx9jbb 
DROP DATABASE IF EXISTS test_oqg0gw1x 
SELECT toIntervalSecond(NULL), '', 35.760;
SELECT t FROM ttta, tttb;
SELECT cutIPv6(toFixedString(unhex('00000000000000000000FFFFC1FC110A'), 16), 16, 0);
INSERT INTO test_01193_18429.table_4_390 VALUES 
DROP DATABASE IF EXISTS test_x6sz7nk9 
DROP DATABASE IF EXISTS test_mliry1ra 
EXPLAIN SELECT DISTINCT a FROM ( SELECT a, sum(b) AS c FROM ( SELECT x.number AS a, y.number AS b FROM numbers(3) AS x, numbers(3, 3) AS y ) GROUP BY a ORDER BY a )
SELECT arrayJoin(CAST(['hello', 'world'] AS Array(FixedString(5)))) LIKE '%hell%';
SELECT 'Running test stateless/02564_analyzer_cross_to_inner.sql from pid=1720' 
CREATE DATABASE IF NOT EXISTS test_3brvlaxf 
set optimize_use_projections = 0;
CREATE TABLE test_01193_18429.table_7_727 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_10_617 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT count() FROM unsigned_integer_test_table WHERE toUInt32(val) == 0;
INSERT INTO test_01193_18429.table_2_570 VALUES 
INSERT INTO test_01193_18429.table_10_299 VALUES 
CREATE TABLE test_01193_18429.table_1_845 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
show create table metrics format TSVRaw;
SELECT * FROM pk WHERE x = 1;
SELECT count() FROM null_in_1 WHERE (a, b) IN (NULL, 42);
desc file('02305_schema_inference_with_globs_test_ljcc6vwv_data*.jsonl') settings input_format_max_rows_to_read_for_schema_inference=100, input_format_json_infer_incomplete_types_as_strings=0
CREATE TABLE test_397D23582965457228285820656F534C39286B695F697672463177596B7C6D436261507670692650(x UInt8) Engine=Memory;
drop table if exists enums_copy;
SELECT sleep(28728 / 32000) format Null;
SELECT * FROM parquet_types3 ORDER BY int8 FORMAT Parquet
insert into tvm select number + 0, number + 1, number + 2, number + 3, number + 4, number + 5, number + 6, number + 7, number + 8, number + 9, number + 10, number + 11, number + 12, number + 13, number + 14, number + 15, number + 16, number + 17, number + 18, number + 19, number + 20, number + 21, number + 22, number + 23, number + 24, number + 25, number + 26, number + 27, number + 28, number + 29, number + 30, number + 31, number + 32, number + 33, number + 34, number + 35, number + 36, number + 37, number + 38, number + 39, number + 40, number + 41, number + 42, number + 43, number + 44, number + 45, number + 46, number + 47, number + 48, number + 49, number + 50, number + 51, number + 52, number + 53, number + 54, number + 55, number + 56, number + 57, number + 58, number + 59, number + 60, number + 61, number + 62, number + 63, number + 64, number + 65, number + 66, number + 67, number + 68, number + 69, number + 70, number + 71, number + 72, number + 73, number + 74, number + 75, number + 76, number + 77, number + 78, number + 79, number + 80, number + 81, number + 82, number + 83, number + 84, number + 85, number + 86, number + 87, number + 88, number + 89, number + 90, number + 91, number + 92, number + 93, number + 94, number + 95, number + 96, number + 97, number + 98, number + 99, number + 100, number + 101, number + 102, number + 103, number + 104, number + 105, number + 106, number + 107, number + 108, number + 109, number + 110, number + 111, number + 112, number + 113, number + 114, number + 115, number + 116, number + 117, number + 118, number + 119, number + 120, number + 121, number + 122, number + 123, number + 124, number + 125, number + 126, number + 127, number + 128, number + 129, number + 130, number + 131, number + 132, number + 133, number + 134, number + 135, number + 136, number + 137, number + 138, number + 139, number + 140, number + 141, number + 142, number + 143, number + 144, number + 145, number + 146, number + 147, number + 148, number + 149, number + 150, number + 151, number + 152, number + 153, number + 154, number + 155, number + 156, number + 157, number + 158, number + 159, number + 160, number + 161, number + 162, number + 163, number + 164, number + 165, number + 166, number + 167, number + 168, number + 169, number + 170, number + 171, number + 172, number + 173, number + 174, number + 175, number + 176, number + 177, number + 178, number + 179, number + 180, number + 181, number + 182, number + 183, number + 184, number + 185, number + 186, number + 187, number + 188, number + 189, number + 190, number + 191, number + 192, number + 193, number + 194, number + 195, number + 196, number + 197, number + 198, number + 199, number + 200, number + 201, number + 202, number + 203, number + 204, number + 205, number + 206, number + 207, number + 208, number + 209, number + 210, number + 211, number + 212, number + 213, number + 214, number + 215, number + 216, number + 217, number + 218, number + 219, number + 220, number + 221, number + 222, number + 223, number + 224, number + 225, number + 226, number + 227, number + 228, number + 229, number + 230, number + 231, number + 232, number + 233, number + 234, number + 235, number + 236, number + 237, number + 238, number + 239, number + 240, number + 241, number + 242, number + 243, number + 244, number + 245, number + 246, number + 247, number + 248, number + 249, number + 250, number + 251, number + 252, number + 253, number + 254, number + 255, number + 256, number + 257, number + 258, number + 259, number + 260, number + 261, number + 262, number + 263, number + 264, number + 265, number + 266, number + 267, number + 268, number + 269, number + 270, number + 271, number + 272, number + 273, number + 274, number + 275, number + 276, number + 277, number + 278, number + 279, number + 280, number + 281, number + 282, number + 283, number + 284, number + 285, number + 286, number + 287, number + 288, number + 289, number + 290, number + 291, number + 292, number + 293, number + 294, number + 295, number + 296, number + 297, number + 298, number + 299 from numbers(20);
SELECT `CounterID` FROM `test_hzdyahun`.`globalin` WHERE `CounterID` GLOBAL IN (`_subquery3158`) GROUP BY `CounterID`
DROP TABLE IF EXISTS t_00575;
SELECT CASE WHEN (col1 % 2) = 0 THEN [col2, col3] WHEN (col1 % 3) = 0 THEN ['foo', col5] ELSE [col6, 'bar'] END FROM multi_if_check;
insert into test settings input_format_null_as_default=1, input_format_defaults_for_omitted_fields=1 format ORC
CREATE TABLE test_3979502A76287E52343D4D784D41587376304352283167205E524D5B30472E6F22534C7367625E22(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_cp20o0t1 
INSERT INTO t_compact_vertical_merge SELECT number, toString(number), range(number % 10) FROM numbers(40);
drop table if exists test_merge
SET max_execution_speed = 1, max_execution_time = 3;
SELECT 'SELECT toRelativeWeekNum(N, \'Asia/Istanbul\')';
INSERT INTO default_join1 VALUES
CREATE TABLE remote_test(a1 UInt8) ENGINE=Memory;
 SELECT intDiv(number, 5) AS k, max(toString(number)) FROM remote('127.0.0.{2,3}', test_q7uhzfh8.numbers_100k) GROUP BY k ORDER BY k LIMIT 1; 
INSERT INTO test_01193_18429.table_3_21 VALUES 
CREATE TABLE tmp ENGINE = TinyLog AS SELECT queryID();
CREATE TABLE r1 (`n` int) ENGINE = ReplicatedMergeTree('/test/02922/{database}/table', '1') ORDER BY tuple() SETTINGS storage_policy = 's3_cache', allow_remote_fs_zero_copy_replication = 1, index_granularity = 62409, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 117, merge_max_block_size = 18655, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 8005102, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 10332, primary_key_compress_block_size = 46128
SELECT toFloat64(number - 10) AS x, round(x, -2), roundBankers(x, -2), floor(x, -2), ceil(x, -2), trunc(x, -2) FROM system.numbers LIMIT 20;
INSERT INTO test_01193_18429.table_6_135 VALUES 
CREATE DATABASE IF NOT EXISTS test_ayvgnfcc 
SELECT x FROM nullable_alter ORDER BY x NULLS FIRST;
SELECT visitParamExtractFloat(CAST('\0' AS Nullable(String)),'');
SELECT * FROM mergetree_00698;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toInt64(2) ELSE toInt32(3) END FROM system.numbers LIMIT 10;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt64(1), toInt64(2)] WHEN (number % 3) = 0 THEN [toUInt8(2), toUInt8(3)] ELSE [toInt8(3), toInt8(3)] END FROM system.numbers LIMIT 10;
SELECT multiIf((number % 2) = 0, toUInt8(1), (number % 3) = 0, toFloat64(2), toUInt16(3)) FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_9pacj0mi 
CREATE TABLE test_7C66524237262B7D3C6920296C2F64746F32552B21644B555A3A217D2B435E2A744A4A506D762D47(x UInt8) Engine=Memory;
CREATE TABLE test_5A694E495C5240727E793E65385F3F54702C5F46542B5E2545317C77416D6B4F3D2B3225342B7527(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_7_297 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_1_18 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select 7 = multiSearchFirstPositionCaseInsensitiveUTF8(materialize('Hello World ÃÂ£'), materialize(['WORLD']));
DROP DATABASE IF EXISTS test_6dnjrnqh 
SELECT DISTINCT * FROM clear_column1 WHERE d != toDate('2000-03-01') ORDER BY d, i, s
CREATE TABLE test_01193_18429.table_2_367 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE DATABASE IF NOT EXISTS test_043p1gf8 
CREATE TABLE test_4F6F74582E3A335E3959625F2A61472B3C6868495A7B71753D3D4C3162215A694F6C485350483356(x UInt8) Engine=Memory;
INSERT INTO small_table (n) SELECT * from system.numbers limit 100000;
CREATE TABLE test_5C61693678607847257C3164633436214E563870347D6845783F7C4F27592B29596147417D772A2B(x UInt8) Engine=Memory;
SELECT hasSubsequenceUTF8(NULL, NULL);
CREATE TABLE test_01193_18429.table_1_406 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SET local_filesystem_read_method = 'pread';
set bool_false_representation='No';
SELECT s, replaceAll(s, '_', 'o') AS a, replaceRegexpAll(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['.__', '.__']) AS s);
SELECT tj.b FROM t ALL RIGHT JOIN tj USING (key1, key2) ORDER BY key1 FORMAT TSVWithNames;
SET max_block_size = 70000;
DROP TABLE IF EXISTS r1
INSERT INTO r8 SELECT 40 % 10 = 8 ? 40 - 1 : 40
SELECT 'Running test stateless/00725_join_on_bug_4.sql from pid=1722' 
SELECT 'Running test stateless/02347_rank_corr_nan.sql from pid=1726' 
SELECT sum(decimal32 - 2) - sum(decimal32 - 3) From test_table;
CREATE TABLE test_01193_18429.table_8_722 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_1_864 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Running test stateless/02184_ipv6_select_parsing.sql from pid=1724' 
SELECT ULIDStringToDateTime(NULL, NULL);
ALTER TABLE concurrent_alter_column ADD COLUMN c197 DOUBLE;
CREATE TABLE numbers_memory AS system.numbers ENGINE = Memory;
SELECT 'SELECT N <= toUInt32(1)';
DROP DATABASE IF EXISTS test_pfjrftmb 
INSERT INTO test_01193_18429.table_9_152 VALUES 
CREATE TABLE partial_duplicates (`pk` Int32, `sk` Int32, `val` UInt32, `partition_key` UInt32 DEFAULT 1, `mat` UInt32 MATERIALIZED rand(), `alias` UInt32 ALIAS 2) ENGINE = MergeTree PRIMARY KEY pk ORDER BY (pk, sk) SETTINGS index_granularity = 32319, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.46798551082611084, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 15063, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 3316468915, index_granularity_bytes = 10234141, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 76089, primary_key_compress_block_size = 72959
SELECT avgWeighted(if(number < 10000, NULL, number), if(number < 50, NULL, number)) t, toTypeName(t) FROM numbers(100);
CREATE TABLE test_01193_18429.table_9_582 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_485F5E3A476B74635D764E2E76523B5665267A5942356977364D2E243032242F464747757C212621(x UInt8) Engine=Memory;
select toDateOrDefault(cast(19 as Int256));
CREATE TABLE test_02908_r2_201 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_201', 'r2') ORDER BY tuple()
RENAME TABLE table_for_renames41 TO table_for_renames42
SELECT intDiv(toDecimal256(4.4, 2), toDecimal64(2.2, 2));
INSERT INTO 02691_drop_column_replicated VALUES 
INSERT INTO test_01193_18429.table_8_878 VALUES 
CREATE TABLE IF NOT EXISTS right_table (`id` UInt64, `val_right` String) ENGINE = ReplacingMergeTree ORDER BY id SETTINGS index_granularity = 9961, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 31, merge_max_block_size = 19087, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 28226842, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 93570, primary_key_compress_block_size = 43248
SELECT '49' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ffff:f000::')))
INSERT INTO src VALUES /* (24, 2) */ 
select distinct * from dist_01223 where key global in (select toInt32(1));
SELECT sin(-1);
CREATE DATABASE IF NOT EXISTS test_o897zu10 
select * from m_table order by x settings additional_table_filters={'table_2' : 'x != 4'};
INSERT INTO test_01193_18429.table_4_229 VALUES 
CREATE TABLE test_7E594E536C34555D6A695263502D576A2B4A3E4536402C3A554B2D793B3578426F4B7C67745E6B67(x UInt8) Engine=Memory;
CREATE TABLE test_4179283E592221407A5F6D4C6F733D7E715A614C43556356747D2F3C407138722F25416370773749(x UInt8) Engine=Memory;
show create h;
INSERT INTO r2 SELECT 74 % 10 = 2 ? 74 - 1 : 74
CREATE TABLE test_02908_r2_120 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_120', 'r2') ORDER BY tuple()
SELECT count() FROM numbers(1);
SELECT count() FROM map_subcolumns PREWHERE has(m.keys, 'b');
SELECT id, data.k1, data.k2.k3, data.k2.k4, data.k5 FROM t_json ORDER BY id;
WITH 'CREATE TABLE test_01193_18429.table_2_' AS create1, ' (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=' AS create2, ['Memory', 'File(CSV)', 'Log', 'StripeLog', 'MergeTree ORDER BY i'] AS engines, 'INSERT INTO test_01193_18429.table_2_' AS insert1, ' VALUES (0, ''2020-06-25'', ''hello'', [1, 2], [3, 4]), (1, ''2020-06-26'', ''word'', [10, 20], [30, 40])' AS insert2 SELECT arrayStringConcat( groupArray( create1 || toString(number) || create2 || engines[1 + number % length(engines)] || ';\n' || insert1 || toString(number) || insert2 ), ';\n') FROM numbers(1000) SETTINGS max_bytes_before_external_group_by = 0 FORMAT TSVRaw;
SELECT 56
select arrayPushBack(emptyArrayUInt8(), 1);
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), DT >= N as r FORMAT CSV;
CREATE DATABASE IF NOT EXISTS test_s99052vn 
DROP ROLE IF EXISTS 02832_alter_max_sessions_role_26536
CREATE TABLE test_01193_18429.table_6_495 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_8_775 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP DATABASE IF EXISTS test_9tmd6g7i 
DROP DATABASE IF EXISTS test_zsnrpgxu 
CREATE TABLE test_01193_18429.table_8_88 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT dictGet('01765_db.hashed_dictionary_simple_key_simple_attributes', 'value_first', number) as value_first, dictGet('01765_db.hashed_dictionary_simple_key_simple_attributes', 'value_second', number) as value_second FROM system.numbers LIMIT 4;
DROP DATABASE IF EXISTS test_l5pcr2k7 
INSERT INTO r4 SELECT 26
SELECT arraySort(arrayIntersect([1.1::Decimal128(1)], [1.12::Decimal128(2)]));
CREATE TABLE test_01193_18429.table_10_3 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT dateDiff('minute', toDate('2017-12-31'), toDate('2017-01-01'), 'UTC');
WITH - INTERVAL 1 SECOND - INTERVAL 1 SECOND - INTERVAL 1 HOUR as expr SELECT expr, toTypeName(expr);
select 1 = isValidUTF8(toValidUTF8('\x00')) from system.numbers limit 10;
CREATE TABLE test_3625334D5450775A23413B2D296D6F6978762A2A4D644B316875466F525926536F26693755476956(x UInt8) Engine=Memory;
DROP TABLE view1
DROP TABLE IF EXISTS mutations
RENAME TABLE test_01114_3.mt TO test_01114_1.mt;
CREATE TABLE test_6C655D685045763D705E506C6041277C4D79453B506C3A257E584F56465B3C636A6F76725C4A5F78(x UInt8) Engine=Memory;
CREATE TABLE merge_tree_deduplication (`key` UInt64, `value` String, `part` UInt8 DEFAULT 77) ENGINE = MergeTree PARTITION BY part ORDER BY key SETTINGS non_replicated_deduplication_window = 3, index_granularity = 4624, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 18317, prefer_fetch_merged_part_size_threshold = 1533749928, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 6860749198, index_granularity_bytes = 6023385, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 94897, primary_key_compress_block_size = 20863
select count(), sum(number) from file('02841.parquet') where indexHint(never_null_lc > 850);
ALTER TABLE non_metadata_alters MODIFY COLUMN value3 Date;
INSERT INTO test_01193_18429.table_7_692 VALUES 
DROP TABLE date_table;
CREATE TABLE test_42384E3B213E513D3272575C496775254665737637207C784F6A3F45755F6267437153204E55253D(x UInt8) Engine=Memory;
DROP TABLE testv;
OPTIMIZE TABLE sticking_mutations FINAL
SELECT 'Running test stateless/01702_system_query_log.sql from pid=1705' 
CREATE DATABASE IF NOT EXISTS test_ipmxrq0b 
select port('http://foobar.com:80/');
DROP TABLE Test;
CREATE TABLE t1 (key Int) Engine=Memory;
CREATE TABLE test_59266E38293C426E6F7E31322C2566367134502A507E684D7A444F464271365271686E3F4A436E69(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_4_951 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/00041_aggregation_remap.sql from pid=1724' 
DROP DATABASE IF EXISTS test_us6qzm3y 
SELECT 'Running test stateless/00226_zookeeper_deduplication_and_unexpected_parts_long.sql from pid=1726' 
CREATE TABLE test_01193_18429.table_8_353 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
ALTER TABLE dst_8 DROP PARTITION 1
DROP DATABASE IF EXISTS test_getoms2f 
SELECT * FROM table_gcd_codec_int128;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (108 < 12 AND 7 > 0 ? 108 : 0)), throwIf(last != (108 < 12 AND 7 > 0 ? least(12 - 1, 108 + 7 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(12) LIMIT 108, 7);
INSERT INTO test_01193_18429.table_5_49 VALUES 
SELECT 'Running test stateless/01072_nullable_jit.sql from pid=1713' 
CREATE TABLE test_02908_r1_189 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_189', 'r1') ORDER BY tuple()
SELECT * FROM database_dictionary_test_key_expression.test_query_log_dictionary_complex ORDER BY value_id;
select firstSignificantSubdomainCustomRFC('xx.blogspot.co.at', 'public_suffix_list');
ATTACH DATABASE test_01193_18429
DROP TABLE test_00616;
INSERT INTO test_01193_18429.table_2_556 VALUES 
CREATE MATERIALIZED VIEW test_view ORDER BY Rows AS SELECT count() AS Rows, max(UTCEventTime) AS MaxHitTime FROM test_table;
SELECT arrayMap(x -> materialize(123), arrayMap(x -> toString(x), [1, 2, 3]));
select * from bx, ax where ax.A = bx.A and ax.B in (1,2);
SELECT JSONExtract('{"a":3333.6333333333333333333333, "b":"test"}', 'Tuple(a Decimal(20,10), b LowCardinality(String))');
INSERT INTO test_01193_18429.table_1_104 VALUES 
CREATE TABLE lwd_test (`id` UInt64, `value` String) ENGINE = MergeTree ORDER BY id SETTINGS vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_rows_for_wide_part = 1, min_bytes_for_wide_part = 1, index_granularity = 21190, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 60, merge_max_block_size = 1419, prefer_fetch_merged_part_size_threshold = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 558878, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 59244, primary_key_compress_block_size = 30223
alter table many_mutations delete where y = 236 * 2 settings mutations_sync = 0;
SELECT # hello 1;
CREATE DATABASE IF NOT EXISTS test_2zfsyel3 
SELECT arrayMap(x -> materialize(123), arrayMap(x -> toString(x), range(number))) FROM system.numbers LIMIT 10;
SELECT * FROM (SELECT [0] AS id) AS subquery_1 ARRAY JOIN id INNER JOIN (SELECT 0 AS id) AS subquery_2 USING (id);
CREATE DATABASE IF NOT EXISTS test_onwamavv 
CREATE TABLE test_5A542A6E226B3A5751262F70267D372A33513E4D307A76266A795D2B486F352B2E7B56723635654B(x UInt8) Engine=Memory;
SELECT countArrayIf([NULL], 1) AS x FROM remote('127.0.0.{1,2}', numbers(3));
select 'UUID';
SELECT 'Running test stateless/02015_async_inserts_5.sh from pid=1713' 
drop table if exists morton_numbers_1_02457;
CREATE TABLE imdb_01148.movie_directors (`director_id` UInt64, `movie_id` UInt64) ENGINE = ReplicatedMergeTree ORDER BY (director_id, movie_id) SETTINGS index_granularity = 8192;
select k, avgMerge(x) from summing_merge_tree_aggregate_function group by k;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt16(1) WHEN (number % 3) = 0 THEN toInt32(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
SHOW CREATE ROLE r5_01293;
SELECT rightUTF8('ÃÂÃÂÃÂ¸ÃÂ²ÃÂµÃÂ', -12);
CREATE DATABASE IF NOT EXISTS test_jbl6w4rx 
insert into t14 select number, number from numbers_mt(100);
DROP TABLE IF EXISTS log
DROP DATABASE IF EXISTS test_bngzbx8h 
INSERT INTO test_01193_18429.table_1_252 VALUES 
CREATE TABLE test_54486C6360455D3378524D2340632C6C2367262F68456B6931574332617B232D6D705B48284D366A(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_9ilt0i1u 
INSERT INTO src VALUES /* (14, 3) */ 
SELECT 'Running test stateless/01892_setting_limit_offset_distributed.sql from pid=1714' 
INSERT INTO test_01193_18429.table_4_325 VALUES 
drop table test_table;
DROP DATABASE IF EXISTS test_8dbv2l7t 
SELECT (number AS n, n + 1, toString(n + 2), n + 3, n - 1) IN (1, 2, '3', 4, 0) FROM system.numbers LIMIT 3;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (43 < 22 AND 13 > 0 ? 43 : 0)), throwIf(last != (43 < 22 AND 13 > 0 ? least(22 - 1, 43 + 13 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(22) LIMIT 43, 13);
CREATE TABLE test_464B6C763F647E3E3271286C585D68533147673C76564D7E516B5256465E7D7B443F534B4F283F49(x UInt8) Engine=Memory;
SELECT toDate('2015-02-03') > '2015-02-04';
EXISTS VIEW db_01048.v_not_exist;
SELECT multiIf((number % 2) = 0, [toInt8(1), toInt8(2)], (number % 3) = 0, [toInt16(2), toInt16(3)], [toFloat32(3), toFloat32(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_9_554 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT * FROM numbers(34625)
SELECT toString(toDateTime('1970-01-01 14:25:36')) 
ALTER TABLE concurrent_alter_column ADD COLUMN c194 DOUBLE;
select * from dst_02225;
SYSTEM STOP MERGES lazy_mark_test
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c8) AND c1 AND (NOT c2)) OR (c5) OR ((NOT c7) AND (NOT c1) AND (NOT c0) AND (NOT c9)) SETTINGS convert_query_to_cnf = 1
SELECT age('minute', toDate('2017-12-31'), materialize(toDate('2017-01-01')), 'UTC');
INSERT INTO test_01193_18429.table_5_799 VALUES 
select a1, b1, a2, b2 from tab1 any left join (select *, a2 + 1 as z from tab2) on b1 + 2 = z + 1 format TSV;
DROP DATABASE IF EXISTS test_xf4r5oix 
DROP DATABASE IF EXISTS test_8248papl 
drop table if exists bad_date_time;
SELECT 'Running test stateless/02247_fix_extract_parser.sql from pid=1715' 
CREATE TABLE test_274953335E375923683778725A3828222738755E6536756F5067283945584B234E535D554D705F3C(x UInt8) Engine=Memory;
set remote_filesystem_read_method = 'read';
INSERT INTO test_02908_r1_247 SELECT rand64() FROM numbers(5);
INSERT INTO ip_trie_dictionary_source_table VALUES 
desc file('/var/lib/clickhouse/user_files/test-02383-9890-28377/dictionary3.arrow')
SELECT materialize(NULL) AND materialize(1);
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c4) AND c3 AND (NOT c5) AND c3 AND c6) OR (c0 AND c0 AND c1 AND (NOT c2) AND c8) OR ((NOT c6) AND c7) OR (c6 AND c8 AND (NOT c1)) SETTINGS convert_query_to_cnf = 1
CREATE TABLE test_01193_18429.table_1_537 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO src_2 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 25
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), date_trunc('year', N, 'Asia/Istanbul') as r FORMAT CSV;
CREATE TABLE test_01193_18429.table_9_281 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DESCRIBE (SELECT t1.id, t1.value, t1.value_join_1, t2.id, t2.value, t2.value_join_2 FROM test_table_join_1 AS t1 INNER JOIN test_table_join_2 AS t2 ON t1.id = t2.id);
SELECT avgWeightedIf(if(number < 50, NULL, number), if(number < 10000, NULL, number), if(number < 10000, NULL, number % 10)) t, toTypeName(t) FROM numbers(100);
RENAME TABLE test_01155_ordinary.dict1 TO test_01155_ordinary.dict;
SET allow_prefetched_read_pool_for_remote_filesystem=1;
CREATE TABLE test_01193_18429.table_10_983 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE mt (`a` Int32, `timestamp` DateTime) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 28263, min_bytes_for_wide_part = 499473929, ratio_of_defaults_for_sparse_serialization = 0.7936447262763977, replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 5156, prefer_fetch_merged_part_size_threshold = 815968237, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 8099731934, index_granularity_bytes = 18251103, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 82741, primary_key_compress_block_size = 89099
CREATE TABLE test_2327745142792B6C646D275B2B2528587C5325493E6D4D2764576E49683924674B296C29465F5A6A(x UInt8) Engine=Memory;
SELECT count(), min(x), max(x), sum(x), uniqExact(x) FROM sample_00276 SAMPLE 1/2 OFFSET 1/2 SETTINGS parallel_replicas_count = 3;
SELECT 'Running test stateless/01585_use_index_for_global_in_with_null.sql from pid=1722' 
SELECT nothing(NULL) as n, toTypeName(n);
CREATE TABLE data_01227 (`key` Int) ENGINE = MergeTree ORDER BY key SETTINGS index_granularity = 33800, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 69, merge_max_block_size = 11549, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 3656536780, index_granularity_bytes = 6763283, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 74825, primary_key_compress_block_size = 64070
CREATE TABLE test_01193_18429.table_8_140 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_4960782D39515F6077645E2B523B4C577B415D5C4C5A5924777D7C5D493D4256314D515E5D3E5C79(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_i3v65jlz 
INSERT INTO arrow_types2 FORMAT ArrowStream
SELECT A.a, A.t, B.b, B.t FROM A ASOF LEFT JOIN B ON A.a == B.b AND A.t >= B.t ORDER BY (A.a, A.t);
SELECT 'Running test stateless/02915_analyzer_fuzz_2.sql from pid=1718' 
DROP DATABASE IF EXISTS test_l93qv4xs 
SELECT * FROM bloom_filter_idx WHERE s LIKE '%database%' AND lower(s) LIKE '%clickhouse%' ORDER BY k FORMAT JSON
CREATE TABLE test_01193_18429.table_2_172 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
desc format(JSONEachRow, '{"x" : [[], [null], [1, 2, 3]]}');
CREATE TABLE test_01193_18429.table_10_591 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (55 < 1 AND 12 > 0 ? 55 : 0)), throwIf(last != (55 < 1 AND 12 > 0 ? least(1 - 1, 55 + 12 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(1) LIMIT 55, 12);
CREATE TABLE memory (x UInt64) ENGINE = Memory;
SELECT * FROM numbers(34611)
CREATE TABLE test_01193_18429.table_10_615 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test (`key` Int) ENGINE = MergeTree ORDER BY tuple() SETTINGS ratio_of_defaults_for_sparse_serialization = 0.1, index_granularity = 44508, min_bytes_for_wide_part = 0, replace_long_file_name_to_hash = true, max_file_name_length = 10, merge_max_block_size = 13141, prefer_fetch_merged_part_size_threshold = 1434437642, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 2819380986, index_granularity_bytes = 17850469, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 15436, primary_key_compress_block_size = 96731
SELECT sum(c0 = 0), min(c0 + 1), sum(c0 + 2) FROM t_having GROUP BY c0 HAVING c0 = 0 SETTINGS enable_optimize_predicate_expression=0;
select [6, 0, 2, 5, 2, 9, 10, 0, 0, 4, 0, 6, 3, 2] = multiSearchAllPositionsUTF8(materialize('ÃÂ¸ÃÂÃÂ¾ÃÂ³ÃÂ¿ÃÂÃÂ¸ÃÂÃÂ¶ÃÂ°ÃÂÃÂÃÂÃÂ»ÃÂ¹ÃÂ¸ÃÂÃÂ»ÃÂ±ÃÂ°'), ['ÃÂÃÂ¸ÃÂÃÂ¶ÃÂ°ÃÂÃÂÃÂÃÂ»ÃÂ¹', 'ÃÂ¿ÃÂ´ÃÂ½ÃÂµÃÂÃÂ±ÃÂ³ÃÂ·ÃÂ¿ÃÂ¼ÃÂÃÂµÃÂ¿ÃÂºÃÂÃÂ¾ÃÂÃÂ¾ÃÂ²ÃÂ±ÃÂµÃÂ³ÃÂµ', 'ÃÂÃÂ¾ÃÂ³ÃÂ¿', 'ÃÂ¿ÃÂ', 'ÃÂÃÂ¾ÃÂ³ÃÂ¿ÃÂÃÂ¸', 'ÃÂ¶ÃÂ°ÃÂ', 'ÃÂ°ÃÂ', 'ÃÂ´ÃÂµÃÂ¸ÃÂÃÂ¼ÃÂ¶ÃÂ°ÃÂÃÂÃÂºÃÂ»ÃÂ´ÃÂÃÂÃÂ»ÃÂÃÂÃÂÃÂ±ÃÂÃÂ', 'ÃÂ³ÃÂÃÂ¼ÃÂºÃÂ²ÃÂºÃÂÃÂ·ÃÂÃÂ', 'ÃÂ³ÃÂ¿ÃÂÃÂ¸ÃÂ', 'ÃÂºÃÂ¹ÃÂ¿ÃÂºÃÂ±ÃÂÃÂ¼ÃÂ¸ÃÂÃÂÃÂ ÃÂ´ÃÂ¼ÃÂÃÂ±ÃÂ', 'ÃÂÃÂ¸ÃÂÃÂ¶ÃÂ°ÃÂÃÂ', 'ÃÂ¾', 'ÃÂÃÂ¾']) from system.numbers limit 10;
EXPLAIN SYNTAX SELECT * FROM t_02147 ORDER BY toStartOfHour(date), v;
SELECT h3EdgeLengthKm(9);
DROP TABLE IF EXISTS src_00942;
SELECT quantileTiming(0.5)(number / 2) FROM numbers(10);
SELECT 'Running test stateless/01201_read_single_thread_in_order.sql from pid=1724' 
SELECT Y, uniqTheta(X) FROM (SELECT number AS X, round(1/(1 + (3*X*X - 7*X + 11) % 37), 3) AS Y FROM system.numbers LIMIT 15) GROUP BY Y ORDER BY Y;
SELECT floor(NULL, NULL);
INSERT INTO test_01193_18429.table_6_132 VALUES 
CREATE TABLE test_4576714D35255E3D557B28553B603F54436F39393A444E6F763F3C3935576F277174386D35645F4C(x UInt8) Engine=Memory;
SELECT transform(toString(number), ['3', '5', '7'], [111, 222.2, 333], 1) FROM system.numbers LIMIT 10;
select 1 = multiMatchAny(materialize('khljxzxlpcrxpkrfybbfk'), ['', 'lpc', 'rxpkrfybb', 'crxp', '', 'pkr', 'jxzxlpcrxpkrf', '', 'xzxlpcr', 'xpk', 'fyb', 'xzxlpcrxpkrfybbfk', 'k', 'lpcrxp', 'ljxzxlpcr', 'r', 'pkr', 'fk']) from system.numbers limit 10;
SELECT substring(materialize(cast('abcdefgh' AS FixedString(8))), materialize(-2), materialize(-1));
SELECT 'x01234567890123456789012345678901234567890123456789012345678901x' AS idna, idnaEncode(idna) AS ascii, tryIdnaEncode(idna) AS ascii_try, idnaDecode(ascii) AS original, idnaDecode(ascii_try) AS original_try;
CREATE TABLE test_01193_18429.table_8_977 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT quantilesArrayIf(0.5, 0.9)([NULL :: Nullable(UInt64)], 0) AS x FROM remote('127.0.0.{1,2}', numbers(3));
EXPLAIN QUERY TREE (SELECT sum(uint64 + 1) AS j from test_table having j > 0);
INSERT INTO test_01193_18429.table_3_357 VALUES 
/* ddl_entry=query-0000000010 */ DELETE FROM rdb_test_uofsla12.mt WHERE n = 2
SELECT 'SELECT toInt32(-1) < N';
DROP USER IF EXISTS 'session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_plaintext_password_no_profiles_no_roles';
INSERT INTO test_01193_18429.table_5_909 VALUES 
CREATE TABLE test_01193_18429.table_5_184 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
desc format(JSONEachRow, '{"x" : {"a" : [123, 123]}}\n{"x" : {"b" : [321.321, 123]}}');
 select * from (select key, value from num_1) l inner join (select key, value from num_2) r on l.key = r.key order by l.key limit 10 offset 700000 SETTINGS allow_experimental_analyzer=1, join_algorithm='full_sorting_merge', allow_experimental_parallel_reading_from_replicas = 2, max_parallel_replicas = 2, parallel_replicas_for_non_replicated_merge_tree = 1, cluster_for_parallel_replicas = 'test_cluster_one_shard_three_replicas_localhost', parallel_replicas_prefer_local_join=1
DROP USER IF EXISTS sqllt_user;
SELECT count() FROM ghdata WHERE NOT ignore(*)
CREATE DATABASE IF NOT EXISTS test_m42y43bs 
insert into test2 select *, today() from numbers(100);
INSERT INTO function remote('127.0.0.1', currentDatabase(), t_async_insert_table_function) values 
 select x, y from ( select distinct x, y from (select number % 2 as x, number % 3 as y from numbers(10)) ) where y != 2 order by x, y settings enable_optimize_predicate_expression=0
EXPLAIN SELECT DISTINCT * FROM ( SELECT DISTINCT number AS n FROM numbers(2) ) as x, ( SELECT DISTINCT number AS n FROM numbers(2) ) as y ORDER BY x.n, y.n
INSERT INTO test_01193_18429.table_1_774 VALUES 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), N - toInt32(-1) as r FORMAT CSV;
CREATE TABLE test_313F2745347D51455E4452596B354979362B46792E7637392F64657233685A6552486A6139377649(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_mac912iy 
SELECT count() FROM system.one WHERE 0;
CREATE TABLE id1(`id1` UInt32, `val1` UInt8) ENGINE = Join(ANY, LEFT, id1);
RENAME TABLE rmt TO rmt1;
select abs(log(e()) - 1) < 1e-8;
select * from file(data.bsonEachRow, auto, 'number UInt64, int Int128, arr Array(UInt64)') settings input_format_allow_errors_num=2
DROP TABLE IF EXISTS range_key_dictionary_source_table;
drop table ttt sync;
CREATE TABLE IF NOT EXISTS test_01444.t11041 (`x` UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 49736, min_bytes_for_wide_part = 645103364, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 6, merge_max_block_size = 15200, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 21360504, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75390, primary_key_compress_block_size = 98921
ALTER TABLE table_for_concurrent_alter MODIFY SETTING parts_to_throw_insert = 104, parts_to_delay_insert = 104, min_merge_bytes_to_use_direct_io = 104
select count(), sum(number) from file('02841.parquet') where indexHint(u16 between 4000 and 61000 or u16 == 42);
drop table if exists distr1;
INSERT INTO test_01193_18429.table_1_99 VALUES 
INSERT INTO r2 SELECT 92
select arraySlice(s, -2, r) from t;
CREATE TABLE test_01193_18429.table_7_484 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_6_800 VALUES 
SELECT * FROM nested_alter;
DROP TABLE IF EXISTS mv
ALTER TABLE test_max_mt_projections_alter ADD PROJECTION p1 (SELECT c2 ORDER BY c2);
CREATE TABLE test_01193_18429.table_2_502 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT * FROM system.replicated_merge_tree_settings LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
SELECT CASE WHEN (number % 2) = 0 THEN toUInt8(1) WHEN (number % 3) = 0 THEN toInt8(2) ELSE toFloat32(3) END FROM system.numbers LIMIT 10;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), formatDateTime(N, '%C %d %D %e %F %H %I %j %m %i %p %R %S %T %u %V %w %y %Y %%', 'Asia/Istanbul') as r FORMAT CSV;
CREATE TABLE test_01193_18429.table_1_330 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_9_749 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_5B4F2B4F5959686B44223720237A3071363A415942652C21496F47663424623F785C5028452A3D7B(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_1_844 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_9_863 VALUES 
with '2018-01-12 22:33:44' as s, toDateTime(s) as datetime, toDateTime64(s, 6) as datetime64, toDate(s) as date, toDate32(s) as date32 SELECT formatDateTimeInJodaSyntax(datetime, 'm'), formatDateTimeInJodaSyntax(datetime64, 'm'), formatDateTimeInJodaSyntax(date, 'm'), formatDateTimeInJodaSyntax(date32, 'm');
SELECT 'Running test stateless/02403_enable_extended_results_for_datetime_functions.gen.sql from pid=1718' 
CREATE TABLE test_01193_18429.table_9_733 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT '||---JOIN---';
SELECT toDecimal64('-0.8', 4) AS x, toUInt32(x);
CREATE DATABASE IF NOT EXISTS test_gu0rf1ye 
CREATE TABLE test_01193_18429.table_7_646 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select sum(hits), count() from wikistat2 GROUP BY project, subproject, path settings optimize_use_projections = 1, force_optimize_projection = 1;
select toStartOfMinute(toDateTime(0, 'America/Los_Angeles'));
CREATE TABLE test_01193_18429.table_9_527 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT identity(NULL);
SELECT dictGet('hashed_array_dictionary_simple_key_complex_attributes', 'value_first', number) as value_first, dictGet('hashed_array_dictionary_simple_key_complex_attributes', 'value_second', number) as value_second FROM system.numbers LIMIT 3;
CREATE TABLE test_707D3C7C2632265F6E7D692530753B5F3D50264A6D45505B3A4A6D6142422C564C657531707B2E3D(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS arrow_types5
DROP DATABASE IF EXISTS test_ynvjymzj 
SELECT value FROM system.events WHERE event = 'Query'
SELECT 'Running test stateless/01338_uuid_without_separator.sql from pid=1714' 
CREATE TABLE test_36376F562927304639232D5533662978574848653E4D44305A21287348717D6C6778233356587B22(x UInt8) Engine=Memory;
DROP TABLE t3_00848;
INSERT INTO r5 SELECT 8
INSERT INTO test_01193_18429.table_10_747 VALUES 
CREATE TABLE test_02908_r1_182 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_182', 'r1') ORDER BY tuple()
CREATE DATABASE IF NOT EXISTS test_8hlju4zc 
SELECT * FROM test2 RIGHT JOIN test1 ON test2.col1 = test1.col1 WHERE test2.col1 IS NOT NULL ORDER BY test2.col1 ;
SELECT 'Running test stateless/01240_join_get_or_null.sql from pid=1724' 
DROP TABLE part_log_profile_events_r1 SYNC;
INSERT INTO test_01193_18429.table_5_616 VALUES 
INSERT INTO test_01193_18429.table_5_170 VALUES 
DROP DATABASE IF EXISTS test_y1f10wem 
CREATE INDEX idx_tab2_1 ON tab2 (col1,col4,col3);
drop table if exists without_nullable;
SELECT toMonday(toDateTime(1419800400), 'Europe/London');
INSERT INTO test_01193_18429.table_2_438 VALUES 
CREATE DATABASE IF NOT EXISTS test_eui8idva 
WITH (SELECT '111111111111111111111111111111111111111'::UInt128) AS v SELECT sum(x), max(v) FROM test;
select '-------subtractQuarters---------';
SELECT sparkbar(9,toDate('2020-01-01'),toDate('2020-01-10'))(event_date,cnt) FROM spark_bar_test;
DROP POLICY p3_01295 ON db.table, db2.table2;
SET log_comment = 'async_insert_skip_settings_2';
DROP DATABASE IF EXISTS test_s9pzv9pg 
SELECT col, mapFilter((k, v) -> ((v % 10) > 1), col) FROM table_map ORDER BY id ASC;
SELECT nothingNull(1) as n, toTypeName(n);
SELECT 'Bloom filter on sort key';
CREATE TABLE test_4079383D6D794F2C226454495866305A75345237397757713B68404B6136305B3E232C4772312277(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01940_pad_string.sql from pid=1714' 
INSERT INTO test_01193_18429.table_10_176 VALUES 
create table dst_02224 (key Int) engine=Memory();
CREATE TABLE test_716A48764F28607250666C42396E614F2727313B412E4A647A61543A4E64737E4D60544847575051(x UInt8) Engine=Memory;
select a, count() from dist_t_different_dbs group by a order by a limit 5 offset 500;
INSERT INTO test_01193_18429.table_5_434 VALUES 
CREATE DATABASE IF NOT EXISTS test_svvfld4q 
INSERT INTO test_01193_18429.table_1_26 VALUES 
SELECT INTERVAL number * 4 - 20 MONTH + toDate32('2217-01-01') AS x FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_5_258 VALUES 
SELECT multiIf((number % 2) = 0, toUInt8(1), (number % 3) = 0, toUInt32(2), toUInt16(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_1_137 VALUES 
CREATE INDEX idx_tab4_5 ON tab4 (col1 DESC,col4 DESC);
SELECT arraySort(geohashesInBox(20.0, 20.0, 20.00001, 20.00001, 10));
CREATE TABLE test_6263772032493B6550604C5C6C6247513C724E2B547C2B60662B7B69304B6630747239602D7B4926(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_6_779 VALUES 
SELECT 'Running test stateless/01666_merge_tree_max_query_limit.sh from pid=1714' 
select 7 as x format JSONEachRow 
set max_bytes_before_external_group_by = 16;
CREATE TABLE test_01193_18429.table_10_521 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT number % 2 ? [1, 2] : emptyArrayInt64() AS res FROM system.numbers LIMIT 10 FORMAT TabSeparatedWithNamesAndTypes;
SELECT 28 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'asn', tuple(IPv4StringToNum('255.255.255.240')))
SELECT toDecimal64(-12345.6789, 4) AS x, trunc(x, -1), trunc(x, -2), trunc(x, -3), trunc(x, -4), trunc(x, -5);
CREATE DATABASE IF NOT EXISTS test_veswm1hl 
DROP TABLE IF EXISTS alter_table0;
SELECT multiIf((col1 % 2) = 0, toFixedString(col2, 16), 1, toFixedString(col3, 16), toFixedString(col4, 16)) FROM multi_if_check;
CREATE TABLE test_792D7769463C4F613857522A6049504E2F7B34356B35772D72384875503F73595E72362D283F4570(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_3_969 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_j6mgs94i 
INSERT INTO t_sparse_full SELECT number, number, toString(number) FROM numbers(500);
SELECT 'toStartOfWeek;toDate32;true', toStartOfWeek(toDate32('1920-02-02')) SETTINGS enable_extended_results_for_datetime_functions = true;
CREATE TABLE test_6E2E20312545732D3B3B607D625D2E643448674C2C2F345D2E4E25336F59506C5154307223515D31(x UInt8) Engine=Memory;
DROP TABLE constraint_test_strong_connectivity;
INSERT INTO test_01193_18429.table_1_705 VALUES 
SELECT 'Test ALTER';
insert into test_00609 values 
INSERT INTO test_01193_18429.table_4_819 VALUES 
INSERT INTO test_01193_18429.table_1_819 VALUES 
SELECT blockSerializedSize([NULL],[NULL]);
SELECT 'Running test stateless/01518_nullable_aggregate_states1.sql from pid=1714' 
CREATE TABLE test_01193_18429.table_3_81 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select geoToH3(lon, lat, resolution) AS k, count(*) from table1 group by k order by k;
INSERT INTO r5 SELECT 5 % 10 = 5 ? 5 - 1 : 5
CREATE TABLE test_01193_18429.table_2_666 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO mt VALUES /* (2, 1) */ 
SELECT * FROM tab PREWHERE indexHint() FORMAT Null;
SELECT '61f0c404-5cb3-11e7-907b-a6006ad3dba0' >= toUUID('61f0c404-5cb3-11e7-907b-a6006ad3dba1');
select makeDate32(0x7fffffffffffffff+2010,1,3);
INSERT INTO test_01193_18429.table_2_282 VALUES 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), N > N as r FORMAT CSV;
SYSTEM START FETCHES r2;
DROP DATABASE IF EXISTS test_jooli4wj 
CREATE TABLE github_events (`file_time` DateTime, `event_type` Enum8('CommitCommentEvent' = 1, 'CreateEvent' = 2, 'DeleteEvent' = 3, 'ForkEvent' = 4, 'GollumEvent' = 5, 'IssueCommentEvent' = 6, 'IssuesEvent' = 7, 'MemberEvent' = 8, 'PublicEvent' = 9, 'PullRequestEvent' = 10, 'PullRequestReviewCommentEvent' = 11, 'PushEvent' = 12, 'ReleaseEvent' = 13, 'SponsorshipEvent' = 14, 'WatchEvent' = 15, 'GistEvent' = 16, 'FollowEvent' = 17, 'DownloadEvent' = 18, 'PullRequestReviewEvent' = 19, 'ForkApplyEvent' = 20, 'Event' = 21, 'TeamAddEvent' = 22), `actor_login` LowCardinality(String), `repo_name` LowCardinality(String), `created_at` DateTime, `updated_at` DateTime, `action` Enum8('none' = 0, 'created' = 1, 'added' = 2, 'edited' = 3, 'deleted' = 4, 'opened' = 5, 'closed' = 6, 'reopened' = 7, 'assigned' = 8, 'unassigned' = 9, 'labeled' = 10, 'unlabeled' = 11, 'review_requested' = 12, 'review_request_removed' = 13, 'synchronize' = 14, 'started' = 15, 'published' = 16, 'update' = 17, 'create' = 18, 'fork' = 19, 'merged' = 20), `comment_id` UInt64, `body` String, `path` String, `position` Int32, `line` Int32, `ref` LowCardinality(String), `ref_type` Enum8('none' = 0, 'branch' = 1, 'tag' = 2, 'repository' = 3, 'unknown' = 4), `creator_user_login` LowCardinality(String), `number` UInt32, `title` String, `labels` Array(LowCardinality(String)), `state` Enum8('none' = 0, 'open' = 1, 'closed' = 2), `locked` UInt8, `assignee` LowCardinality(String), `assignees` Array(LowCardinality(String)), `comments` UInt32, `author_association` Enum8('NONE' = 0, 'CONTRIBUTOR' = 1, 'OWNER' = 2, 'COLLABORATOR' = 3, 'MEMBER' = 4, 'MANNEQUIN' = 5), `closed_at` DateTime, `merged_at` DateTime, `merge_commit_sha` String, `requested_reviewers` Array(LowCardinality(String)), `requested_teams` Array(LowCardinality(String)), `head_ref` LowCardinality(String), `head_sha` String, `base_ref` LowCardinality(String), `base_sha` String, `merged` UInt8, `mergeable` UInt8, `rebaseable` UInt8, `mergeable_state` Enum8('unknown' = 0, 'dirty' = 1, 'clean' = 2, 'unstable' = 3, 'draft' = 4), `merged_by` LowCardinality(String), `review_comments` UInt32, `maintainer_can_modify` UInt8, `commits` UInt32, `additions` UInt32, `deletions` UInt32, `changed_files` UInt32, `diff_hunk` String, `original_position` UInt32, `commit_id` String, `original_commit_id` String, `push_size` UInt32, `push_distinct_size` UInt32, `member_login` LowCardinality(String), `release_tag_name` String, `release_name` String, `review_state` Enum8('none' = 0, 'approved' = 1, 'changes_requested' = 2, 'commented' = 3, 'dismissed' = 4, 'pending' = 5)) ENGINE = MergeTree ORDER BY (event_type, repo_name, created_at) SETTINGS index_granularity = 12382, min_bytes_for_wide_part = 475789404, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 97, merge_max_block_size = 5752, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 10418900, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 61517, primary_key_compress_block_size = 55305
select (toInt128(-1) + toInt8(1)) x, (toInt256(-1) + toInt8(1)) y, toTypeName(x), toTypeName(y);
INSERT INTO test_02908_r1_106 SELECT rand64() FROM numbers(5);
create table test_buffer engine=Buffer(currentDatabase(), 'test_02149', 16, 10, 100, 10000, 1000000, 10000000, 100000000)
SELECT 'Running test stateless/00981_in_subquery_with_tuple.sh from pid=1720' 
SELECT has(c, toDecimal128(0.7, 4)) FROM decimal;
SELECT 'Running test stateless/02124_insert_deduplication_token.sql from pid=1726' 
CREATE DATABASE IF NOT EXISTS test_xpy9t8j3 
CREATE TABLE test_337E727E5C60433272286929525E712C4273747D5F3B303854255D506C6A2F3F6A313B3A776A2870(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_6_760 VALUES 
CREATE DATABASE IF NOT EXISTS test_61i4blpz 
CREATE TABLE test_02908_r3_20 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_20', 'r3') ORDER BY tuple()
SELECT accurateCastOrNull(if(number % 2, 'truex', NULL), 'Bool') FROM numbers(4);
INSERT INTO r6 SELECT 2
SELECT * FROM (SELECT 1 AS id, 2 AS value) AS subquery_1, (SELECT 3 AS id, 4 AS value) AS subquery_2;
CREATE DATABASE IF NOT EXISTS test_mxo5lwwl 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c6) AND c8 AND c9 AND c3) OR (c9 AND (NOT c8) AND (NOT c5)) OR (c8) OR (c4) OR ((NOT c9)) OR ((NOT c0) AND (NOT c9) AND c6 AND c8) OR ((NOT c9)) SETTINGS convert_query_to_cnf = 1
select 'create table failed, column +type +AUTO_INCREMENT, compatibility disabled';
CREATE TABLE numbers1 ENGINE = Memory AS SELECT number FROM numbers(1000);
CREATE DATABASE IF NOT EXISTS test_doizqump 
SELECT d3, f2, d3 / f2 FROM t ORDER BY f2;
CREATE TABLE test_67573A2724204C31794F49314E456738412624583D76385073383E7A5640516A21435D7B76616925(x UInt8) Engine=Memory;
CREATE TABLE merge_view_00270 (number UInt64) ENGINE = Merge(currentDatabase(), '^view');
SELECT stddevSampStable(NULL);
select 4 as offset, -4 as length, toFixedString('Hello', 6) as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
DROP DATABASE IF EXISTS test_r0y0xc1i 
SELECT bin(toInt8(-100)) AS res;
SELECT normalizeQuery('SELECT 1 xyz11');
INSERT INTO written_bytes_02247 VALUES 
CREATE USER AWD_user IDENTIFIED WITH plaintext_password DEFAULT ROLE AWD
CREATE TABLE test_5B2151722677625C62792925713C4E6079227E4476675A387E5F4D79464A4E624240723F557C697B(x UInt8) Engine=Memory;
ALTER TABLE concurrent_alter_mt_2 MODIFY COLUMN value1 Float64 SETTINGS replication_alter_partitions_sync=0
CREATE DATABASE IF NOT EXISTS test_xe6y0lwu 
INSERT INTO src VALUES /* (-40, 1) */ 
CREATE TABLE test_01193_18429.table_4_374 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE DATABASE IF NOT EXISTS test_tqcsokfy 
INSERT INTO test_01193_18429.table_2_716 VALUES 
SELECT has([111, 222], 111);
SELECT 'SELECT x, lc, cnst';
DROP DATABASE IF EXISTS test_ratan4py 
SELECT toUInt64(-1);
SELECT * FROM hashed_array_dictionary_simple_key_complex_attributes ORDER BY id;
CREATE TABLE tab (`item_id` UInt64, `price_sold` Nullable(Float32), `date` Date) ENGINE = MergeTree ORDER BY item_id SETTINGS index_granularity = 18077, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 14071, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 26642795, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 84354, primary_key_compress_block_size = 9479
SELECT multiIf((number % 2) = 0, [toInt8(1), toInt8(2)], (number % 3) = 0, [toFloat32(2), toFloat32(3)], [toInt32(3), toInt32(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_6D27302B5C256C724C23263C5A5E662C3F63217732586B662850792E215862427B38673170385A7B(x UInt8) Engine=Memory;
SELECT parseDateTimeBestEffortOrNull('2020-05-14 03:37:03', 3, 'UTC') AS a, toTypeName(a);
SELECT lcm(-9223372036854775806, -9223372036854775806);
CREATE TABLE test_01193_18429.table_9_892 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT age('second', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), toDateTime64('1927-01-01 01:00:00', 0, 'UTC'));
CREATE TABLE test_5741647D4774652B7C5F5952454B7E7C497B562D733C7A52426D702B4D6E3D3257257B5A5E49442F(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_hhism4bx 
SELECT 'Running test stateless/02515_tuple_lambda_parsing.sql from pid=1724' 
SELECT arrayZip([1, number, number * number], [[], [], []]) FROM numbers(10);
DROP TABLE IF EXISTS table_exception_a;
select 'compact fsync_after_insert,fsync_part_directory';
select t2.name from other_table as t2 global right join remote('127.0.0.2', currentDatabase(), 'local_table') as t1 on t1.oth_id = t2.id order by t2.name;
CREATE DATABASE IF NOT EXISTS test_rfzqajzq 
select 'sep6';
CREATE TABLE test_5D71713D5C363C595B38273D403262542E6D535528477D5C3F62417E5F523E3B2271666676353C6C(x UInt8) Engine=Memory;
SELECT count() * 1, i, d, s, n.i, n.f FROM test_01193_18429.table_merge GROUP BY i, d, s, n.i, n.f ORDER BY i
SELECT round(quantileDistinctMerge(0.10)((*,).1)) FROM t1;
SELECT formatQuery('SELECT 1;');
INSERT INTO test_01193_18429.table_1_828 VALUES 
SELECT materialize(toDecimal64(4,4)) - toDecimal32(2,2);
SELECT murmurHash3_32('foo');
INSERT INTO test_01193_18429.table_7_246 VALUES 
INSERT INTO r9 SELECT 21 % 10 = 9 ? 21 - 1 : 21
SYSTEM STOP TTL MERGES test_lazy_01294_concurrent_test_qna5lrny.slog
SELECT 'Running test stateless/02913_sum_map_state.sql from pid=1724' 
CREATE TABLE test_20603F2E2A2B455D67305C407C4D5B7D6365703E396C3E3D4E5E285B3C532A6C4A584F4A53617B39(x UInt8) Engine=Memory;
SELECT arrayEnumerateUniqRanked(2, [[1,2,3],[2,2,1],[3]], 2, [[[1,2,3],[1,2,3],[1,2,3]],[[1,2,3],[1,2,3],[1,2,3]],[[1,2]]], 2);
SELECT * FROM (SELECT number AS key FROM numbers(5)) s1 ANTI JOIN dict_hashed d USING(key) ORDER BY key;
SELECT -32768, -2147483648, -32768 = -2147483648, -32768 != -2147483648, -32768 < -2147483648, -32768 <= -2147483648, -32768 > -2147483648, -32768 >= -2147483648, -2147483648 = -32768, -2147483648 != -32768, -2147483648 < -32768, -2147483648 <= -32768, -2147483648 > -32768, -2147483648 >= -32768 , toInt16(-32768) = toInt32(-2147483648), toInt16(-32768) != toInt32(-2147483648), toInt16(-32768) < toInt32(-2147483648), toInt16(-32768) <= toInt32(-2147483648), toInt16(-32768) > toInt32(-2147483648), toInt16(-32768) >= toInt32(-2147483648), toInt32(-2147483648) = toInt16(-32768), toInt32(-2147483648) != toInt16(-32768), toInt32(-2147483648) < toInt16(-32768), toInt32(-2147483648) <= toInt16(-32768), toInt32(-2147483648) > toInt16(-32768), toInt32(-2147483648) >= toInt16(-32768) , toInt16(-32768) = toInt64(-2147483648), toInt16(-32768) != toInt64(-2147483648), toInt16(-32768) < toInt64(-2147483648), toInt16(-32768) <= toInt64(-2147483648), toInt16(-32768) > toInt64(-2147483648), toInt16(-32768) >= toInt64(-2147483648), toInt64(-2147483648) = toInt16(-32768), toInt64(-2147483648) != toInt16(-32768), toInt64(-2147483648) < toInt16(-32768), toInt64(-2147483648) <= toInt16(-32768), toInt64(-2147483648) > toInt16(-32768), toInt64(-2147483648) >= toInt16(-32768) , toInt32(-32768) = toInt32(-2147483648), toInt32(-32768) != toInt32(-2147483648), toInt32(-32768) < toInt32(-2147483648), toInt32(-32768) <= toInt32(-2147483648), toInt32(-32768) > toInt32(-2147483648), toInt32(-32768) >= toInt32(-2147483648), toInt32(-2147483648) = toInt32(-32768), toInt32(-2147483648) != toInt32(-32768), toInt32(-2147483648) < toInt32(-32768), toInt32(-2147483648) <= toInt32(-32768), toInt32(-2147483648) > toInt32(-32768), toInt32(-2147483648) >= toInt32(-32768) , toInt32(-32768) = toInt64(-2147483648), toInt32(-32768) != toInt64(-2147483648), toInt32(-32768) < toInt64(-2147483648), toInt32(-32768) <= toInt64(-2147483648), toInt32(-32768) > toInt64(-2147483648), toInt32(-32768) >= toInt64(-2147483648), toInt64(-2147483648) = toInt32(-32768), toInt64(-2147483648) != toInt32(-32768), toInt64(-2147483648) < toInt32(-32768), toInt64(-2147483648) <= toInt32(-32768), toInt64(-2147483648) > toInt32(-32768), toInt64(-2147483648) >= toInt32(-32768) , toInt64(-32768) = toInt32(-2147483648), toInt64(-32768) != toInt32(-2147483648), toInt64(-32768) < toInt32(-2147483648), toInt64(-32768) <= toInt32(-2147483648), toInt64(-32768) > toInt32(-2147483648), toInt64(-32768) >= toInt32(-2147483648), toInt32(-2147483648) = toInt64(-32768), toInt32(-2147483648) != toInt64(-32768), toInt32(-2147483648) < toInt64(-32768), toInt32(-2147483648) <= toInt64(-32768), toInt32(-2147483648) > toInt64(-32768), toInt32(-2147483648) >= toInt64(-32768) , toInt64(-32768) = toInt64(-2147483648), toInt64(-32768) != toInt64(-2147483648), toInt64(-32768) < toInt64(-2147483648), toInt64(-32768) <= toInt64(-2147483648), toInt64(-32768) > toInt64(-2147483648), toInt64(-32768) >= toInt64(-2147483648), toInt64(-2147483648) = toInt64(-32768), toInt64(-2147483648) != toInt64(-32768), toInt64(-2147483648) < toInt64(-32768), toInt64(-2147483648) <= toInt64(-32768), toInt64(-2147483648) > toInt64(-32768), toInt64(-2147483648) >= toInt64(-32768) 
CREATE TABLE test_5C775D265F7D235E21406355523D725E772279613F2149437A2755232E4E21736C467E354D312C5B(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS parallel_q2 SYNC
CREATE TABLE 02176_test_simple_key_table ( id UInt64, value String ) ENGINE=TinyLog;
SELECT * FROM numbers(34545)
INSERT INTO test_01193_18429.table_5_592 VALUES 
CREATE TABLE test_01193_18429.table_6_284 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select arrayConcat([1, 2], [3, 4]);
EXPLAIN QUERY TREE (SELECT sum(1 - uint64) AS j from test_table having j < 0);
SELECT toDate('2015-06-12') IN toDate('2015-06-12');
CREATE TABLE test_01193_18429.table_3_950 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_4524715858332F392635303641292E38392A5C5F437366647C6664714825332B6D54393A6C4C2777(x UInt8) Engine=Memory;
select 0 = position('abcd', materialize('cdef'));
SELECT multiIf((number % 2) = 0, toInt8(1), (number % 3) = 0, toUInt8(2), toFloat32(3)) FROM system.numbers LIMIT 10;
SELECT multiIf((number % 2) = 0, toUInt8(1), (number % 3) = 0, toInt8(2), toFloat64(3)) FROM system.numbers LIMIT 10;
CREATE TABLE mytable (`operand` Float64, `low` Float64, `high` Float64, `count` UInt64) ENGINE = MergeTree PRIMARY KEY (operand, low, high, count) SETTINGS index_granularity = 52558, min_bytes_for_wide_part = 999299339, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 83, merge_max_block_size = 6494, prefer_fetch_merged_part_size_threshold = 9129486495, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 21537912, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 86457, primary_key_compress_block_size = 36863
explain syntax select left_table.id,val_left, val_middle, val_right from left_table inner join middle_table on left_table.id = middle_table.id inner join right_table on middle_table.id = right_table.id ORDER BY left_table.id, val_left, val_middle, val_right;
CREATE TABLE XXXX (`p` Nullable(Int64), `k` Decimal(76, 39)) ENGINE = MergeTree PARTITION BY toDate(p) ORDER BY k SETTINGS index_granularity = 1, allow_nullable_key = 1, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 19579, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 442629290, index_granularity_bytes = 18349425, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 67848, primary_key_compress_block_size = 58757
SELECT 'Running test stateless/01083_cross_to_inner_with_in_bug.sql from pid=1714' 
CREATE TABLE table_with_unsuccessful_commits (`key` UInt64, `value` String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/02899_restore_parts_replicated_merge_tree_test_os00m63k/unsuccessful', '1') ORDER BY tuple() SETTINGS cleanup_delay_period = 1000, max_cleanup_delay_period = 1000, old_parts_lifetime = 1949748529, remove_rolled_back_parts_immediately = 0, replicated_max_ratio_of_wrong_parts = 1, max_suspicious_broken_parts = 1000000, max_suspicious_broken_parts_bytes = 10000000000, index_granularity = 63191, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 8361, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 6075867071, index_granularity_bytes = 23186855, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 42932, primary_key_compress_block_size = 53031
DROP DATABASE IF EXISTS test_ncs1i3j7 
SELECT count() == 3 FROM null_in WHERE i in test_set2;
SELECT CASE WHEN (number % 2) = 0 THEN toInt32(1) WHEN (number % 3) = 0 THEN toFloat64(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_5E7120335C376C6529747A58507936293D273836725C777D264B29643B36267329412A413C262F53(x UInt8) Engine=Memory;
select arr1, arrayPushFront(arr1, 1) from array_functions;
SELECT COUNT() FROM bloom_filter_array_lc_null_types_test WHERE has(i16, 100);
SELECT 'Running test stateless/01041_create_dictionary_if_not_exists.sql from pid=1724' 
SELECT 'Running test stateless/00626_replace_partition_from_table_zookeeper.sh from pid=1715' 
CREATE DATABASE IF NOT EXISTS test_x992tem9 
CREATE TABLE decimal ( a Decimal32(4), b Decimal64(8), c Decimal128(8) ) ENGINE = Memory;
CREATE DATABASE IF NOT EXISTS test_ofemuff6 
SELECT quantileArrayIf(0.5)([NULL], 0) AS `x` FROM numbers(3)
CREATE TABLE unicode(c1 String, c2 String) ENGINE = Memory;
CREATE DATABASE IF NOT EXISTS test_tja17eff 
DROP DATABASE IF EXISTS test_vlhv1aax 
SELECT * FROM 01053_db.ssd_dict ORDER BY id;
CREATE TABLE test_01193_18429.table_5_866 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/02427_mutate_and_zero_copy_replication_zookeeper.sql from pid=1724' 
SELECT arrayJoin(['hello', 'world']) LIKE '%xyz%';
DROP DATABASE exBKdJ2bwPas4
INSERT INTO regexp_dictionary_source_table VALUES 
ALTER TABLE video_log MATERIALIZE PROJECTION p_norm SETTINGS mutations_sync = 1;
CREATE TABLE test_01193_18429.table_8_844 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE DATABASE IF NOT EXISTS test_rqnw5zrr 
INSERT INTO t2 SELECT if (number % 14 = 0, toString(number), '') FROM numbers(2000);
SELECT 'Running test stateless/02180_group_by_lowcardinality.sql from pid=1715' 
INSERT INTO test_01193_18429.table_1_72 VALUES 
SELECT COUNT() FROM bloom_filter_array_lc_null_types_test WHERE has(i32, 10);
DROP TABLE IF EXISTS video_log_result;
INSERT INTO test_01193_18429.table_5_606 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN toFloat64(1) WHEN (number % 3) = 0 THEN toUInt8(2) ELSE toInt16(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_7_522 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_1_997 VALUES 
DROP DATABASE IF EXISTS test_ya5mz96b 
select 'LEFT JOIN';
SELECT toInt128OrDefault(NULL);
alter table many_mutations delete where y = 549 * 2 settings mutations_sync = 0;
select arraySlice([1, 2, 3, 4, 5, 6], 10, 1);
CREATE DATABASE IF NOT EXISTS test_80snigf2 
OPTIMIZE TABLE default_codec_float FINAL;
INSERT INTO test_01193_18429.table_10_555 VALUES 
(((((((SELECT 1) UNION ALL SELECT 1) UNION ALL SELECT 1) UNION ALL SELECT 1) UNION ALL SELECT 1) UNION ALL SELECT 1) UNION ALL SELECT 1) UNION ALL SELECT 1;
INSERT INTO user_data (ID, userID) VALUES 
INSERT INTO t_object_convert2 SELECT 1, CAST(CAST('{"x" : 1}', 'Object(\'json\')'), 'Object(Nullable(\'json\'))');
CREATE TABLE test_406D6A722A4B20606E7375695327245D214275647B3F6554615F7530687E277A6F733F25696B2577(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_5fjazs9x 
CREATE TABLE tt2 (a UInt32, b UInt32 ALIAS a * 2) ENGINE = Memory;
INSERT INTO test_01193_18429.table_9_350 VALUES 
INSERT INTO test_01193_18429.table_1_217 VALUES 
SELECT * FROM t_large WHERE a in (1,1000,1005,50000) order by a;
CREATE DATABASE IF NOT EXISTS test_v8xjwshg 
set replication_alter_partitions_sync=1;
CREATE TABLE nullable_00457 (s String, ns Nullable(String), narr Array(Nullable(UInt64))) ENGINE = StripeLog;
INSERT INTO test_01193_18429.table_5_450 VALUES 
CREATE DATABASE IF NOT EXISTS test_cq2ntjva 
CREATE TABLE test_01193_18429.table_5_145 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE DATABASE IF NOT EXISTS test_3qff01y8 
select 1 = positionCaseInsensitive('abc', '');
SELECT 'Shanghai DST Years:';
SELECT 'Running test stateless/00943_mv_rename_without_inner_table.sql from pid=1720' 
CREATE TABLE test_45475F356C3256265E2675207D314B657C2D585A6A5F2922566832327B745E4543566F5E3C637823(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS mutations_and_quorum1 SYNC;
CREATE TABLE test_01193_18429.table_5_504 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select arrayWithConstant(2, 'qwerty'), arrayWithConstant(0, -1), arrayWithConstant(1, 1) 
SELECT 'Running test stateless/01635_nullable_fuzz.sql from pid=1713' 
SELECT 'Running test stateless/00900_orc_load.sh from pid=1720' 
SELECT CASE WHEN (number % 2) = 0 THEN toFloat64(1) WHEN (number % 3) = 0 THEN toInt32(2) ELSE toUInt8(3) END FROM system.numbers LIMIT 10;
SELECT concatWithSeparator('|', 'a', materialize('fae310ca-d52a-4923-9e9b-02bf67f4b009' :: UUID)) == 'a|fae310ca-d52a-4923-9e9b-02bf67f4b009';
INSERT INTO test_01193_18429.table_6_75 VALUES 
select t1_00816.a, t2_00816.a from t1_00816 all inner join t2_00816 on t1_00816.a=t2_00816.a;
SELECT 'Running test stateless/02841_remote_parameter_parsing_error.sql from pid=1718' 
INSERT INTO test_01193_18429.table_1_675 VALUES 
DROP DATABASE IF EXISTS test_toixtcwt 
SELECT CASE WHEN (number % 2) = 0 THEN [toInt64(1), toInt64(2)] WHEN (number % 3) = 0 THEN [toUInt8(2), toUInt8(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
SELECT toIPv4OrZero('');
CREATE TABLE test_01193_18429.table_3_479 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE concurrent_mutate_mt_1 (`key` UInt64, `value1` UInt64, `value2` String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/01076_parallel_alter_replicated_zookeeper_test_wv410ck4/concurrent_mutate_mt', '1') ORDER BY key SETTINGS max_replicated_mutations_in_queue = 1000, number_of_free_entries_in_pool_to_execute_mutation = 0, max_replicated_merges_in_queue = 1000, temporary_directories_lifetime = 10, cleanup_delay_period = 3, cleanup_delay_period_random_add = 0, cleanup_thread_preferred_points_per_iteration = 0, index_granularity = 36899, min_bytes_for_wide_part = 610320463, ratio_of_defaults_for_sparse_serialization = 0.18114601075649261, replace_long_file_name_to_hash = true, max_file_name_length = 20, merge_max_block_size = 52, prefer_fetch_merged_part_size_threshold = 2825925533, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 8898561432, index_granularity_bytes = 4539143, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 45816, primary_key_compress_block_size = 84236
CREATE DATABASE IF NOT EXISTS test_ijsxg0kn 
select parseDateTimeInJodaSyntax('10 +10', 'MM yy', 'UTC') = toDateTime('2010-10-01', 'UTC');
select 'Bool';
INSERT INTO test_01193_18429.table_7_252 VALUES 
SELECT sparkbar(NULL, NULL);
INSERT INTO test_01193_18429.table_1_978 VALUES 
DROP TABLE IF EXISTS table_one;
INSERT INTO test_01193_18429.table_1_405 VALUES 
SELECT '= right on =';
INSERT INTO mt VALUES /* (47, 1) */ 
SELECT 'Running test stateless/01274_generate_random_nested.sh from pid=1724' 
SELECT 32768, 4294967295, 32768 = 4294967295, 32768 != 4294967295, 32768 < 4294967295, 32768 <= 4294967295, 32768 > 4294967295, 32768 >= 4294967295, 4294967295 = 32768, 4294967295 != 32768, 4294967295 < 32768, 4294967295 <= 32768, 4294967295 > 32768, 4294967295 >= 32768 , toUInt16(32768) = toUInt32(4294967295), toUInt16(32768) != toUInt32(4294967295), toUInt16(32768) < toUInt32(4294967295), toUInt16(32768) <= toUInt32(4294967295), toUInt16(32768) > toUInt32(4294967295), toUInt16(32768) >= toUInt32(4294967295), toUInt32(4294967295) = toUInt16(32768), toUInt32(4294967295) != toUInt16(32768), toUInt32(4294967295) < toUInt16(32768), toUInt32(4294967295) <= toUInt16(32768), toUInt32(4294967295) > toUInt16(32768), toUInt32(4294967295) >= toUInt16(32768) , toUInt16(32768) = toUInt64(4294967295), toUInt16(32768) != toUInt64(4294967295), toUInt16(32768) < toUInt64(4294967295), toUInt16(32768) <= toUInt64(4294967295), toUInt16(32768) > toUInt64(4294967295), toUInt16(32768) >= toUInt64(4294967295), toUInt64(4294967295) = toUInt16(32768), toUInt64(4294967295) != toUInt16(32768), toUInt64(4294967295) < toUInt16(32768), toUInt64(4294967295) <= toUInt16(32768), toUInt64(4294967295) > toUInt16(32768), toUInt64(4294967295) >= toUInt16(32768) , toUInt16(32768) = toInt64(4294967295), toUInt16(32768) != toInt64(4294967295), toUInt16(32768) < toInt64(4294967295), toUInt16(32768) <= toInt64(4294967295), toUInt16(32768) > toInt64(4294967295), toUInt16(32768) >= toInt64(4294967295), toInt64(4294967295) = toUInt16(32768), toInt64(4294967295) != toUInt16(32768), toInt64(4294967295) < toUInt16(32768), toInt64(4294967295) <= toUInt16(32768), toInt64(4294967295) > toUInt16(32768), toInt64(4294967295) >= toUInt16(32768) , toUInt32(32768) = toUInt32(4294967295), toUInt32(32768) != toUInt32(4294967295), toUInt32(32768) < toUInt32(4294967295), toUInt32(32768) <= toUInt32(4294967295), toUInt32(32768) > toUInt32(4294967295), toUInt32(32768) >= toUInt32(4294967295), toUInt32(4294967295) = toUInt32(32768), toUInt32(4294967295) != toUInt32(32768), toUInt32(4294967295) < toUInt32(32768), toUInt32(4294967295) <= toUInt32(32768), toUInt32(4294967295) > toUInt32(32768), toUInt32(4294967295) >= toUInt32(32768) , toUInt32(32768) = toUInt64(4294967295), toUInt32(32768) != toUInt64(4294967295), toUInt32(32768) < toUInt64(4294967295), toUInt32(32768) <= toUInt64(4294967295), toUInt32(32768) > toUInt64(4294967295), toUInt32(32768) >= toUInt64(4294967295), toUInt64(4294967295) = toUInt32(32768), toUInt64(4294967295) != toUInt32(32768), toUInt64(4294967295) < toUInt32(32768), toUInt64(4294967295) <= toUInt32(32768), toUInt64(4294967295) > toUInt32(32768), toUInt64(4294967295) >= toUInt32(32768) , toUInt32(32768) = toInt64(4294967295), toUInt32(32768) != toInt64(4294967295), toUInt32(32768) < toInt64(4294967295), toUInt32(32768) <= toInt64(4294967295), toUInt32(32768) > toInt64(4294967295), toUInt32(32768) >= toInt64(4294967295), toInt64(4294967295) = toUInt32(32768), toInt64(4294967295) != toUInt32(32768), toInt64(4294967295) < toUInt32(32768), toInt64(4294967295) <= toUInt32(32768), toInt64(4294967295) > toUInt32(32768), toInt64(4294967295) >= toUInt32(32768) , toInt32(32768) = toUInt32(4294967295), toInt32(32768) != toUInt32(4294967295), toInt32(32768) < toUInt32(4294967295), toInt32(32768) <= toUInt32(4294967295), toInt32(32768) > toUInt32(4294967295), toInt32(32768) >= toUInt32(4294967295), toUInt32(4294967295) = toInt32(32768), toUInt32(4294967295) != toInt32(32768), toUInt32(4294967295) < toInt32(32768), toUInt32(4294967295) <= toInt32(32768), toUInt32(4294967295) > toInt32(32768), toUInt32(4294967295) >= toInt32(32768) , toInt32(32768) = toUInt64(4294967295), toInt32(32768) != toUInt64(4294967295), toInt32(32768) < toUInt64(4294967295), toInt32(32768) <= toUInt64(4294967295), toInt32(32768) > toUInt64(4294967295), toInt32(32768) >= toUInt64(4294967295), toUInt64(4294967295) = toInt32(32768), toUInt64(4294967295) != toInt32(32768), toUInt64(4294967295) < toInt32(32768), toUInt64(4294967295) <= toInt32(32768), toUInt64(4294967295) > toInt32(32768), toUInt64(4294967295) >= toInt32(32768) , toInt32(32768) = toInt64(4294967295), toInt32(32768) != toInt64(4294967295), toInt32(32768) < toInt64(4294967295), toInt32(32768) <= toInt64(4294967295), toInt32(32768) > toInt64(4294967295), toInt32(32768) >= toInt64(4294967295), toInt64(4294967295) = toInt32(32768), toInt64(4294967295) != toInt32(32768), toInt64(4294967295) < toInt32(32768), toInt64(4294967295) <= toInt32(32768), toInt64(4294967295) > toInt32(32768), toInt64(4294967295) >= toInt32(32768) , toUInt64(32768) = toUInt32(4294967295), toUInt64(32768) != toUInt32(4294967295), toUInt64(32768) < toUInt32(4294967295), toUInt64(32768) <= toUInt32(4294967295), toUInt64(32768) > toUInt32(4294967295), toUInt64(32768) >= toUInt32(4294967295), toUInt32(4294967295) = toUInt64(32768), toUInt32(4294967295) != toUInt64(32768), toUInt32(4294967295) < toUInt64(32768), toUInt32(4294967295) <= toUInt64(32768), toUInt32(4294967295) > toUInt64(32768), toUInt32(4294967295) >= toUInt64(32768) , toUInt64(32768) = toUInt64(4294967295), toUInt64(32768) != toUInt64(4294967295), toUInt64(32768) < toUInt64(4294967295), toUInt64(32768) <= toUInt64(4294967295), toUInt64(32768) > toUInt64(4294967295), toUInt64(32768) >= toUInt64(4294967295), toUInt64(4294967295) = toUInt64(32768), toUInt64(4294967295) != toUInt64(32768), toUInt64(4294967295) < toUInt64(32768), toUInt64(4294967295) <= toUInt64(32768), toUInt64(4294967295) > toUInt64(32768), toUInt64(4294967295) >= toUInt64(32768) , toUInt64(32768) = toInt64(4294967295), toUInt64(32768) != toInt64(4294967295), toUInt64(32768) < toInt64(4294967295), toUInt64(32768) <= toInt64(4294967295), toUInt64(32768) > toInt64(4294967295), toUInt64(32768) >= toInt64(4294967295), toInt64(4294967295) = toUInt64(32768), toInt64(4294967295) != toUInt64(32768), toInt64(4294967295) < toUInt64(32768), toInt64(4294967295) <= toUInt64(32768), toInt64(4294967295) > toUInt64(32768), toInt64(4294967295) >= toUInt64(32768) , toInt64(32768) = toUInt32(4294967295), toInt64(32768) != toUInt32(4294967295), toInt64(32768) < toUInt32(4294967295), toInt64(32768) <= toUInt32(4294967295), toInt64(32768) > toUInt32(4294967295), toInt64(32768) >= toUInt32(4294967295), toUInt32(4294967295) = toInt64(32768), toUInt32(4294967295) != toInt64(32768), toUInt32(4294967295) < toInt64(32768), toUInt32(4294967295) <= toInt64(32768), toUInt32(4294967295) > toInt64(32768), toUInt32(4294967295) >= toInt64(32768) , toInt64(32768) = toUInt64(4294967295), toInt64(32768) != toUInt64(4294967295), toInt64(32768) < toUInt64(4294967295), toInt64(32768) <= toUInt64(4294967295), toInt64(32768) > toUInt64(4294967295), toInt64(32768) >= toUInt64(4294967295), toUInt64(4294967295) = toInt64(32768), toUInt64(4294967295) != toInt64(32768), toUInt64(4294967295) < toInt64(32768), toUInt64(4294967295) <= toInt64(32768), toUInt64(4294967295) > toInt64(32768), toUInt64(4294967295) >= toInt64(32768) , toInt64(32768) = toInt64(4294967295), toInt64(32768) != toInt64(4294967295), toInt64(32768) < toInt64(4294967295), toInt64(32768) <= toInt64(4294967295), toInt64(32768) > toInt64(4294967295), toInt64(32768) >= toInt64(4294967295), toInt64(4294967295) = toInt64(32768), toInt64(4294967295) != toInt64(32768), toInt64(4294967295) < toInt64(32768), toInt64(4294967295) <= toInt64(32768), toInt64(4294967295) > toInt64(32768), toInt64(4294967295) >= toInt64(32768) 
SELECT 'SELECT toInt32(-1) == N';
select format('{}{}{}', materialize(toFixedString('a', 1)), materialize('b'), materialize(toFixedString('c', 1))) == 'abc';
INSERT INTO bloom_filter_nullable_index VALUES 
SELECT 'SELECT x, lc';
CREATE TABLE test_654D26392836464C59575B4F2C6A65434E507E342E573640216E4B28293677233D593E4A6E5B376E(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_9_938 VALUES 
SELECT CAST(toNullable(toInt32(0)) AS Int32) as x, toTypeName(x);
alter table many_mutations delete where y = 95 * 2 settings mutations_sync = 0;
SELECT 2.11 * count(uint64) - sum(uint64) From test_table;
CREATE TABLE t (`A` Int64) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 44995, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 12010, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 5392698454, index_granularity_bytes = 601256, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 77969, primary_key_compress_block_size = 33722
CREATE TABLE test_01193_18429.table_2_468 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_9_521 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
drop database NONE
DROP DATABASE IF EXISTS test_ios2d6h4 
CREATE TABLE test_table_float_values ( id UInt64, value1 Float32, value2 Float64 ) ENGINE=TinyLog;
CREATE TABLE test_01193_18429.table_1_119 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT CASE WHEN (number % 2) = 0 THEN [toInt8(1), toInt8(2)] WHEN (number % 3) = 0 THEN [toFloat32(2), toFloat32(3)] ELSE [toUInt8(3), toUInt8(3)] END FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_a3tum6br 
INSERT INTO test_01193_18429.table_1_265 VALUES 
CREATE TABLE xp (`A` Date, `B` Int64, `S` String) ENGINE = MergeTree PARTITION BY toYYYYMM(A) ORDER BY B SETTINGS index_granularity = 47873, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 106, merge_max_block_size = 9493, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 827089, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 8195407694, index_granularity_bytes = 23167630, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 37164, primary_key_compress_block_size = 97840
SELECT *, _table FROM merge(currentDatabase(), 'test_local_1|test_distributed_2') ORDER BY _table;
SELECT INTERVAL 2 week;
select -_1 FROM (SELECT -1 AS _1) FORMAT Null;
CREATE TABLE test_663E5A73314A6E42404263726F472A2569486F21413246583F7D513D4A4B395C5736437C4E362156(x UInt8) Engine=Memory;
INSERT INTO t_async_inserts_logs VALUES 
SELECT round(avg(log(2) * number), 6) AS k FROM numbers(10000000) GROUP BY number % 5, ((number % 5) * (number % 5)) ORDER BY k;
INSERT INTO test_00209 SELECT 1 AS x SETTINGS extremes = 1;
SHOW TABLES FROM INFORMATION_SCHEMA;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt16(1), toInt16(2)] WHEN (number % 3) = 0 THEN [toFloat32(2), toFloat32(3)] ELSE [toInt16(3), toInt16(3)] END FROM system.numbers LIMIT 10;
SELECT * FROM 01766_db.hashed_dictionary_complex_key_complex_attributes ORDER BY (id, id_key);
select 'TSVWithNames';
CREATE TABLE test_7B2A57777B5A2D7D5A2730213E224C6C49404E6C74306F7B36633E47534C377D6435416A3F3E5C37(x UInt8) Engine=Memory;
SELECT * FROM test_02428_pv6(price=10)
CREATE TABLE test_4C5C652536792C52482B7351242244313463457E26435468642037206447565558565C4961493B46(x UInt8) Engine=Memory;
CREATE TABLE test (`id` UInt32, `code` LowCardinality(FixedString(2)) DEFAULT '--') ENGINE = MergeTree PARTITION BY id ORDER BY id SETTINGS index_granularity = 9968, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.3145105242729187, replace_long_file_name_to_hash = true, max_file_name_length = 23, merge_max_block_size = 4912, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 83, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 30993186, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 42848, primary_key_compress_block_size = 77133
CREATE INDEX idx_tab2_0 ON tab2 (col1 DESC,col3);
SELECT dateDiff('hour', toDate('2017-12-31'), toDate('2016-01-01'), 'UTC');
INSERT INTO src VALUES /* (-56, 1) */ 
CREATE TABLE test_324E254C5C55377B2627755971432922314A48544336202F704C6B4D767C4D66692064715630577B(x UInt8) Engine=Memory;
insert into test select number + 800000, tuple(number, number + 1)::Tuple(a UInt32, b UInt32) from numbers(200000);
SELECT toDecimalString(32.345::Decimal32(3), 77);
CREATE TABLE test_6B23606839393B4F3E6F5F4836305F64374F2D4C4B683A523C4A6B4641525251397261653947332E(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_li2jh7s3 
SELECT * FROM dst2 ORDER BY x;
CREATE TABLE test_6F293D56557D373D26637245346C54526073502153437D304C445B334F6C6E432B713876452F6035(x UInt8) Engine=Memory;
CREATE TABLE test_3E382E635D4120755E7D53655549286F4D652E5C3C2B414B672D5A283959522C565849743D263153(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_6_61 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DATABASE IF NOT EXISTS test_ljcc6vwv 
SELECT id, yago, recent FROM ( SELECT item_id AS id, SUM(price_sold) AS recent FROM t WHERE (date BETWEEN '2019-12-16' AND '2020-03-08') GROUP BY id WITH TOTALS ORDER BY id ) ll FULL JOIN ( SELECT item_id AS id, SUM(price_sold) AS yago FROM t WHERE (date BETWEEN '2018-12-17' AND '2019-03-10') GROUP BY id WITH TOTALS ORDER BY id ) rr USING (id);
CREATE DATABASE IF NOT EXISTS test_ynokrz9z 
CREATE TABLE test_01193_18429.table_1_827 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
create database if not exists shard_0;
SELECT multiIf((number % 2) = 0, [toUInt32(1), toUInt32(2)], (number % 3) = 0, [toFloat64(2), toFloat64(3)], [toFloat32(3), toFloat32(3)]) FROM system.numbers LIMIT 10;
select hasSubsequenceCaseInsensitive('garbage', 'ARG');
CREATE TABLE test_01193_18429.table_7_45 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT intDivOrZero(4, toDecimal256(2.2, 4));
SELECT arrayLastOrNull(NULL);
CREATE TABLE test_02908_r2_254 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_254', 'r2') ORDER BY tuple()
SELECT 'Running test stateless/01293_optimize_final_force.sh from pid=1720' 
SELECT equals([NULL],[NULL]);
CREATE TABLE test_20667C282A5A65636534742C753B75764C352E5A696F75396A7627277B2B7E584C5B7A617D4D3825(x UInt8) Engine=Memory;
SELECT count() FROM system.parts WHERE database='test_bvbtk2qs' AND table='test' AND active AND rows=0
INSERT INTO dst_3 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 60
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 19996, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT 'Running test stateless/02813_system_licenses_base.sql from pid=1718' 
WITH substring('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 1, number) AS prefix, prefix || 'x' || prefix AS a, prefix || 'y' AS b SELECT a = b, a < b, a > b, a <= b, a >= b FROM numbers(40);
SELECT JSONHas(NULL, NULL, NULL);
SELECT 0, 3, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (0 < 13 AND 3 > 0 ? 0 : 0)), throwIf(last != (0 < 13 AND 3 > 0 ? least(13 - 1, 0 + 3 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 0, 3);
CREATE TABLE mt (`a` Int32) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 64389, min_bytes_for_wide_part = 91146556, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 9908, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 2046217879, index_granularity_bytes = 16353702, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 15339, primary_key_compress_block_size = 81137
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), N == toUInt16(1) as r FORMAT CSV;
DROP TABLE IF EXISTS t_missed_subcolumns;
CREATE TABLE test_02908_r1_195 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_195', 'r1') ORDER BY tuple()
SELECT distinct(marks) from system.parts WHERE table = 'four_rows_per_granule1' and database=currentDatabase() and active=1;
SELECT throwIf((SELECT sum(nm) FROM mv) != 49) FORMAT Null;
select 1 = multiMatchAny(materialize('abcd'), ['cd']) from system.numbers limit 10;
CREATE TABLE stored_aggregates ( d Date, Uniq AggregateFunction(uniq, UInt64) ) ENGINE = AggregatingMergeTree(d, d, 8192);
DROP DATABASE IF EXISTS test_abosu74n 
CREATE TABLE test_01193_18429.table_10_368 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT disk_name, partition, rows FROM system.parts WHERE database = currentDatabase() AND table = 'test_move_partition_throttling' and active;
SELECT * FROM t1_00850 GLOBAL INNER JOIN ( SELECT * FROM ( SELECT * FROM t2_00850 ) INNER JOIN ( SELECT * FROM t1_00850 ) USING dummy ) USING dummy;
CREATE TABLE test_01193_18429.table_5_214 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT multiIf((number % 2) = 0, toUInt8(1), (number % 3) = 0, toInt8(2), toInt64(3)) FROM system.numbers LIMIT 10;
SELECT * FROM (SELECT 1 AS id) AS t1 INNER JOIN (SELECT 1 AS id) AS t2 ON t1.id = t2.id AND 1;
CREATE TABLE test_01193_18429.table_6_427 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
desc file(02417_data.jsonObjectEachRow);
CREATE DATABASE IF NOT EXISTS test_85nqgr3e 
SELECT renamed_value1 FROM table_with_compact_parts WHERE key = 1;
DROP DATABASE IF EXISTS test_vcfahanh 
CREATE TABLE test_02908_r1_44 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_44', 'r1') ORDER BY tuple()
INSERT INTO test_01193_18429.table_4_570 VALUES 
INSERT INTO xMM SELECT toDateTime('2020-10-01 00:00:00', 'Asia/Istanbul') + number*60, 1, number FROM numbers(5000);
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toFloat64(3), toFloat64(3)] END FROM system.numbers LIMIT 10;
DROP TABLE 02476_query_parameters_insert;
WITH toDate('2021-07-14') AS date_value, toDateTime('2021-07-14 11:22:33') AS date_time_value, toDateTime64('2021-07-14 11:22:33', 3) AS date_time_64_value SELECT monthName(date_value), monthName(date_time_value), monthName(date_time_64_value);
SELECT rIgHt('ÃÂÃÂÃÂ¸ÃÂ²ÃÂµÃÂ', 0);
CREATE DATABASE IF NOT EXISTS test_wg9rjy52 
CREATE TABLE test_01193_18429.table_5_501 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO r5 SELECT 15
select [2, 1, 1, 9, 10, 5, 0, 0, 0, 2, 9, 7, 9, 0, 1, 9, 7, 0] = multiSearchAllPositions(materialize('mvovpvuhjwdzjwojcxxrbxy'), ['vo', '', '', 'jwdz', 'wdzj', 'pvu', 'ocxprubxhjnji', 'phzfbtacrg', 'jguuqhhxbrwbo', 'vovpvuhjwd', 'jw', 'u', 'jwdzjwojcx', 'nlwfvolaklizslylbvcgicbjw', '', 'jwd', 'uhjwdz', 'bbcsuvtru']) from system.numbers limit 10;
CREATE TABLE file (x UInt64) ENGINE = File(Values, 'test_ztjtures/data.Values.lz4')
DROP DATABASE IF EXISTS test_pvw0pxn6 
INSERT INTO test_7zv1ifdo.async_insert_mt_test SETTINGS async_insert = 1, wait_for_async_insert = 1, async_insert_busy_timeout_ms = 500, async_insert_busy_timeout_min_ms = 500 FORMAT Values
DROP USER IF EXISTS dns_fail_1, dns_fail_2
drop table t8;
DROP DATABASE IF EXISTS test_kjezfd6z 
CREATE DATABASE IF NOT EXISTS test_ww0mw54w 
SELECT 'dt64 >= const dt' FROM dt64test WHERE dt64_column >= toDateTime('2020-01-13 13:37:00');
INSERT INTO r6 SELECT 25 % 10 = 6 ? 25 - 1 : 25
CREATE TABLE test_2F5768642B5E75544D57602C4254647950724C3D6038553D2F54587C733F27623161246D52452A6B(x UInt8) Engine=Memory;
SELECT '--- arithmetic expr ---';
SELECT toTypeName(_CAST(42, 'Int64')), toTypeName(_CAST([1, 2, 3], 'Array(UInt8)')), toTypeName(_CAST([('abc', 22), ('def', 33)], 'Map(String, UInt8)')), toTypeName(_CAST([[4, 5, 6], [7], [8, 9]], 'Array(Array(UInt8))')), toTypeName(_CAST([(10, [11, 12]), (13, [14, 15])], 'Map(UInt8, Array(UInt8))')), toTypeName(_CAST([('ghj', [('klm', [16, 17])]), ('nop', [('rst', [18])])], 'Map(String, Map(String, Array(UInt8)))'))
SELECT * FROM arrow_types3 ORDER BY int8 FORMAT Arrow
SELECT regionToArea(NULL);
ALTER TABLE concurrent_alter_column ADD COLUMN c77 DOUBLE;
CREATE TABLE test_02908_r3_255 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_255', 'r3') ORDER BY tuple()
SELECT '[[1,2,3],[4,5,6],[1]] =';
SELECT multiIf((number % 2) = 0, [toUInt16(1), toUInt16(2)], (number % 3) = 0, [toInt8(2), toInt8(3)], [toInt64(3), toInt64(3)]) FROM system.numbers LIMIT 10;
DROP TABLE IF EXISTS test_00616;
CREATE TABLE l (`luid` Nullable(Int16), `name` String) ENGINE = MergeTree ORDER BY luid SETTINGS allow_nullable_key = 1, index_granularity = 13841, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 10537, prefer_fetch_merged_part_size_threshold = 3447900109, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 13282085, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 20638, primary_key_compress_block_size = 31324 AS SELECT * FROM VALUES((1231, 'John'), (6666, 'Ksenia'), (NULL, '---'))
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 35131, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT * FROM numbers(34616)
CREATE TABLE test_01193_18429.table_5_865 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SYSTEM SYNC REPLICA r7;
CREATE TABLE test_01193_18429.table_8_130 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT YYYYMMDDhhmmssToDateTime(19691231595959.1);
SELECT -12.3_4;
CREATE TABLE test_37295C727A316B4D46672C336F617965476E3D504B763E3E457E544D606A266A63324B4B567C4564(x UInt8) Engine=Memory;
alter table many_mutations delete where y = 789 * 2 settings mutations_sync = 0;
select makeDateTime64(1991, 8, 65537, 21, 4, 0);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (102 < 87 AND 107 > 0 ? 102 : 0)), throwIf(last != (102 < 87 AND 107 > 0 ? least(87 - 1, 102 + 107 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(87) LIMIT 102, 107);
CREATE TABLE test_6C45743D7E7D223B4024457B34273C4E47793224366B2E5F6049404D4C715077487B592A45775967(x UInt8) Engine=Memory;
SELECT INTERVAL 2 day;
CREATE TABLE s2_indexes (s2_index UInt64, longitude Float64, latitude Float64) ENGINE = Memory;
select bitmapHasAny(bitmapBuild([100,200,500]),bitmapBuild([ 99, 101, 600, 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33]));
DROP DATABASE IF EXISTS test_jyc2gm6n 
SELECT a, arrayEnumerateUniqRanked(a) FROM ( SELECT * FROM ( SELECT [[], [1, 2, 3, 4]] AS a UNION ALL SELECT [[], [3, 4, 5]] AS a ) ORDER BY a ASC );
CREATE DATABASE IF NOT EXISTS test_evk4tqw8 
select toUnixTimestamp(makeDate32(2023, 5, 10));
CREATE TABLE test_01193_18429.table_2_35 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
ALTER TABLE concurrent_alter_column ADD COLUMN c299 DOUBLE;
CREATE TABLE test_01193_18429.table_5_480 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP DATABASE IF EXISTS test_exra0ddy 
INSERT INTO TABLE product_fp32_fp64 (x, y) values 
SELECT metroHash64([], [], []);
CREATE TABLE t_enum16( x Enum('hello' = 1, 'world' = 128) ) ENGINE = TinyLog;
DROP TABLE IF EXISTS buffer_00763_1
INSERT INTO test_01193_18429.table_6_966 VALUES 
SELECT 'Running test stateless/01621_decode_XML.sql from pid=1713' 
SELECT 'SYSTEM RELOAD DICTIONARIES ON CLUSTER test_shard_localhost';
CREATE TABLE test_01193_18429.table_3_931 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE join_any_inner (s String, x Array(UInt8), k UInt64) ENGINE = Join(ANY, INNER, k);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (10 < 98 AND 65 > 0 ? 10 : 0)), throwIf(last != (10 < 98 AND 65 > 0 ? least(98 - 1, 10 + 65 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(98) LIMIT 10, 65);
CREATE INDEX idx_tab2_5 ON tab2 (col1 DESC,col3);
CREATE TABLE test_02908_r2_31 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_31', 'r2') ORDER BY tuple()
ALTER TABLE 02500_nested ADD COLUMN z Int32;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (105 < 57 AND 37 > 0 ? 105 : 0)), throwIf(last != (105 < 57 AND 37 > 0 ? least(57 - 1, 105 + 37 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(57) LIMIT 105, 37);
select 1 = multiMatchAny(materialize('abc'), materialize([''])) from system.numbers limit 10;
DROP DATABASE IF EXISTS test_2oodowf2 
INSERT INTO test_01193_18429.table_4_440 VALUES 
CREATE TABLE test_01193_18429.table_4_316 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/00912_string_comparison.sql from pid=1713' 
SELECT CASE WHEN (number % 2) = 0 THEN toInt8(1) WHEN (number % 3) = 0 THEN toInt8(2) ELSE toFloat32(3) END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_2_885 VALUES 
DROP DATABASE IF EXISTS test_358itdje 
CREATE TABLE test_572C497C584B7C7165264748507E5F287920492E657977373423565C78246D5B566F7B2129383623(x UInt8) Engine=Memory;
CREATE role test_role_01999_1;
select '----- finalizeAggregation / State / ip4 -----';
SELECT 'Running test stateless/00625_summing_merge_tree_merge.sql from pid=1722' 
CREATE TABLE test_47447D4041767867725E24266D6D4E292B2421362537432D5F792B5F236A6A7631755E6A6C4A233D(x UInt8) Engine=Memory;
CREATE TABLE test_2C7B364D325E2A294C277D6E656B2735276A4F6E3C475A5352245F267D672759214C206067406F57(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_8_288 VALUES 
CREATE TABLE test_55523D6A655E453A27796F4F7B7B746B4C2B3A324E76295B49307E6A715B2F39723F752670416379(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02681_final_excessive_reading_bug.sh from pid=1726' 
DROP DATABASE IF EXISTS test_15hay45l 
SELECT value FROM system.settings WHERE name = 'max_memory_usage';
select toString('aaaa', NULL);
select 'constants:', toLowCardinality('abced'),toTypeName(toLowCardinality('abced')), byteSize(toLowCardinality('abced'));
SHOW GRANTS FOR test_user_01999;
CREATE TABLE test_51224C482D7379537954415E564B7279673A5C3C63784C33693E7B75683732425F73305D24615475(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_5_106 VALUES 
SELECT 'Running test stateless/01552_dict_fixedstring.sql from pid=1715' 
INSERT INTO test_01193_18429.table_6_165 VALUES 
SELECT entropy([NULL]);
DROP TABLE vec2;
DROP TABLE IF EXISTS `$4@^7`;
CREATE TABLE test_494B37483E78306B623A3E44546643596957627E3C2B2D5B7645602A6B694A6F62365F7379263E30(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_r7box4yw 
INSERT INTO test_01193_18429.table_10_594 VALUES 
SELECT dictGetOrDefault('range_dictionary_nullable', 'Tax', (toUInt64(2), '2'), toDate('2019-05-31'), 0.4);
CREATE TABLE test_226C6E647D374D3523444233712B4636773B615A472951415C334548395C2A58287B6D585635645A(x UInt8) Engine=Memory;
OPTIMIZE TABLE replacing_00155 FINAL
SELECT CASE WHEN (col1 % 2) = 0 THEN [col2, 'bar'] WHEN 1 THEN [col4, col5] ELSE [col6, col7] END FROM multi_if_check;
SELECT id, data.a, data.s, data.b FROM t_json_field ORDER BY id;
ALTER TABLE partslost_0 MATERIALIZE INDEX idx;
CREATE MATERIALIZED VIEW test_02428_mv1 ENGINE = ReplicatedMergeTree('/clickhouse/tables/02428_parameterized_view_test_0zmj5798/materialized_view', 'r1') ORDER BY Name SETTINGS index_granularity = 24917, min_bytes_for_wide_part = 878734611, ratio_of_defaults_for_sparse_serialization = 0.256317675113678, replace_long_file_name_to_hash = true, max_file_name_length = 66, merge_max_block_size = 3156, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 5811495, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 82888, primary_key_compress_block_size = 88003 AS SELECT * FROM test_02428_Catalog
SELECT t.t.t.t.t as e, toTypeName(e) FROM nnna FULL JOIN nnnb USING (t.t.t.t.t);
select 1 = isValidUTF8(toValidUTF8('\x66')) from system.numbers limit 10;
SELECT 9223372036854775807, 9223372036854775809, 9223372036854775807 = 9223372036854775809, 9223372036854775807 != 9223372036854775809, 9223372036854775807 < 9223372036854775809, 9223372036854775807 <= 9223372036854775809, 9223372036854775807 > 9223372036854775809, 9223372036854775807 >= 9223372036854775809, 9223372036854775809 = 9223372036854775807, 9223372036854775809 != 9223372036854775807, 9223372036854775809 < 9223372036854775807, 9223372036854775809 <= 9223372036854775807, 9223372036854775809 > 9223372036854775807, 9223372036854775809 >= 9223372036854775807 , toUInt64(9223372036854775807) = toUInt64(9223372036854775809), toUInt64(9223372036854775807) != toUInt64(9223372036854775809), toUInt64(9223372036854775807) < toUInt64(9223372036854775809), toUInt64(9223372036854775807) <= toUInt64(9223372036854775809), toUInt64(9223372036854775807) > toUInt64(9223372036854775809), toUInt64(9223372036854775807) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toUInt64(9223372036854775807), toUInt64(9223372036854775809) != toUInt64(9223372036854775807), toUInt64(9223372036854775809) < toUInt64(9223372036854775807), toUInt64(9223372036854775809) <= toUInt64(9223372036854775807), toUInt64(9223372036854775809) > toUInt64(9223372036854775807), toUInt64(9223372036854775809) >= toUInt64(9223372036854775807) , toInt64(9223372036854775807) = toUInt64(9223372036854775809), toInt64(9223372036854775807) != toUInt64(9223372036854775809), toInt64(9223372036854775807) < toUInt64(9223372036854775809), toInt64(9223372036854775807) <= toUInt64(9223372036854775809), toInt64(9223372036854775807) > toUInt64(9223372036854775809), toInt64(9223372036854775807) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toInt64(9223372036854775807), toUInt64(9223372036854775809) != toInt64(9223372036854775807), toUInt64(9223372036854775809) < toInt64(9223372036854775807), toUInt64(9223372036854775809) <= toInt64(9223372036854775807), toUInt64(9223372036854775809) > toInt64(9223372036854775807), toUInt64(9223372036854775809) >= toInt64(9223372036854775807) 
SELECT `UserID` FROM `test_c5zukzwt`.`users` WHERE `UserID` IN ((SELECT arrayJoin([1468013291393583084, 1321770221388956068])) AS `_subquery3804`)
DROP DATABASE IF EXISTS test_ob9v3k1x 
select [1, 0, 1, 2, 15, 0, 0, 0, 1, 0] = multiSearchAllPositionsCaseInsensitive(materialize('zFWmqRMtsDjSeWBSFoqvWsrV'), ['', 'GItrPyYRBwNUqwSaUBpbHJ', '', 'f', 'BsfOQvWsR', 'JgvsMUZzWaddD', 'wxRECkgoCBPjSMRorZpBwuOQL', 'xHKLLxUoWexAM', '', 'YlckoSedfStmFOumjm']) from system.numbers limit 10;
select arrayCompact([1,2,2,3,3,3,4,4,4,4,5,5,5,5,5]);
DROP DATABASE IF EXISTS test_wg3p5i9p 
SELECT '-- formatQuerySingleLine';
INSERT INTO test_01193_18429.table_4_753 VALUES 
SELECT DAYOFWEEK(toDateTime('2016-06-15 23:00:00'));
SELECT uniqExact(u) FROM t_sparse_full WHERE s != '';
alter table many_mutations delete where y = 791 * 2 settings mutations_sync = 0;
SYSTEM FLUSH DISTRIBUTED demo_loan_01568_dist;
SELECT t1.id, t1.value, t2.id, t2.value FROM test_table_join_1 AS t1 RIGHT JOIN test_table_join_2 AS t2 ON toString(t1.id) = toString(t2.id) AND t1.value = 'Join_1_Value_0' AND t2.value = 'Join_2_Value_0';
CREATE DATABASE IF NOT EXISTS test_o97tzd6f 
INSERT INTO test_01193_18429.table_4_437 VALUES 
SELECT number FROM (SELECT number, 1 AS k FROM numbers(100000) ORDER BY k ASC, number DESC LIMIT 1025, 1023) LIMIT 5;
CREATE TABLE test_225533643C5D2C54316561607C29664E5E693F3245656F4D537B32494A653C216D61206B3B257340(x UInt8) Engine=Memory;
SELECT RIGHT(materialize('ÃÂÃÂÃÂ¸ÃÂ²ÃÂµÃÂ'), 4);
INSERT INTO null_00117 (a) VALUES 
SELECT count() FROM t_cnf_fuzz WHERE (c2 AND c0) OR (c3 AND c6 AND (NOT c7)) OR ((NOT c9) AND (NOT c1) AND (NOT c3) AND (NOT c0)) OR ((NOT c5) AND (NOT c4) AND c9 AND c2 AND (NOT c7)) OR ((NOT c3) AND (NOT c4) AND c1) OR ((NOT c4) AND (NOT c3) AND c2) SETTINGS convert_query_to_cnf = 0
SYSTEM SYNC REPLICA concurrent_alter_add_drop_3
CREATE TABLE test_5D74666F504F4D3C495F467A61504725365D362E5F48736D433D767C6F3C635E72645E264676476C(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_4_538 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE INDEX idx_tab3_3 ON tab3 (col3,col0,col4 DESC);
CREATE VIEW v1 AS SELECT * FROM 02987_logical_optimizer_table;
DROP TABLE t_json_partitions;
SELECT count(*) FROM tt_01373 FINAL;
INSERT INTO t_async_insert FORMAT Avro 
INSERT INTO test_02908_r1_59 SELECT rand64() FROM numbers(5);
INSERT INTO test_01193_18429.table_10_20 VALUES 
SELECT 'Running test stateless/02496_format_datetime_in_joda_syntax.sql from pid=1724' 
CREATE TABLE test_01193_18429.table_6_836 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SET max_threads = 1;
SELECT number, 'Hello, world!' FROM numbers(6000) INTO OUTFILE '/var/lib/clickhouse/user_files/test_ppeg0s5q/gz_9.gz' COMPRESSION 'gz' LEVEL 9
SELECT t1.id AS t1_id, t1.value, t2.id AS t2_id, t2.value, t3.id AS t3_id, t3.value FROM test_table_join_1 AS t1 LEFT JOIN test_table_join_2 AS t2 ON t1_id = t2_id LEFT JOIN test_table_join_3 AS t3 ON t2_id = t3_id;
drop table data_01643;
SELECT 'Running test stateless/01066_bit_count.sql from pid=1722' 
SELECT `UserID` FROM `test_c5zukzwt`.`users` WHERE `UserID` IN ((SELECT arrayJoin([1468013291393583084, 1321770221388956068])) AS `_subquery3734`)
SELECT * FROM test WHERE '2020-10-15' == timestamp ORDER BY timestamp;
SELECT count() FROM system.opentelemetry_span_log WHERE finish_date >= yesterday() AND lower(hex(trace_id)) = 'd42fce74b024468c81a24bc8619e39fb' AND operation_name like '%DDLWorker::processTask%' ;
SELECT b, c, e FROM t_fixed_prefix WHERE a = 1 ORDER BY b, c, e SETTINGS optimize_read_in_order = 0
INSERT INTO test_01193_18429.table_3_661 VALUES 
DROP TABLE e;
SELECT * FROM (SELECT toLowCardinality(number) AS l FROM system.numbers LIMIT 3) s1 ANY LEFT JOIN (SELECT number AS r FROM system.numbers LIMIT 3) s2 ON l + 1 = r * 1 ORDER BY l;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (35 < 45 AND 36 > 0 ? 35 : 0)), throwIf(last != (35 < 45 AND 36 > 0 ? least(45 - 1, 35 + 36 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(45) LIMIT 35, 36);
CREATE TABLE test_696E5874462E3E5127722D203C784F664825774230624A536C5348546C352A2F4777423F2B73582A(x UInt8) Engine=Memory;
SELECT multiIf(1, 'foo', 1, toFixedString(col3, 16), toFixedString('baz', 16)) FROM multi_if_check;
select 7, * from test order by id
SELECT count() FROM test WHERE x > '100000';
select 'Markdown';
SELECT '73' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ff80::')))
INSERT INTO t values 
SELECT toRelativeMonthNum(toDateTime(1412106600), 'Pacific/Pitcairn') - toRelativeMonthNum(toDateTime(0), 'Pacific/Pitcairn');
select v, variantElement(v, 'Enum(''a'' = 1)') from format(Values, 'v Variant(String, UInt32, Enum(''a'' = 1))', '(NULL), (''string''), (''a''), (1), (2), (''aa'')') format Values;
select '- 4';
DROP TABLE IF EXISTS echo_test_4;
DROP DATABASE IF EXISTS test_q2xslihk 
SELECT number AS id, toString(number) AS s, range(number) AS arr FROM numbers(10) FORMAT NDJSON
SELECT has(materialize([111, 222]), materialize(222));
drop table if exists part_01278_9;
CREATE TABLE test_01193_18429.table_8_547 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO r4 SELECT 92
SELECT CAST(1 AS Nullable(UInt8)) AS id WHERE id = 1;
drop table if exists table_decimal_dict;
SELECT toDecimal64OrNull(NULL, NULL);
SELECT CAST('Yes', 'Bool');
CREATE TABLE test_01193_18429.table_8_311 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DICTIONARY 02183_cache_dictionary ( id UInt64, value_date Date, value_date_32 Date32, value_date_time DateTime, value_date_time_64 DateTime64 ) PRIMARY KEY id SOURCE(CLICKHOUSE(TABLE '02183_dictionary_source_table')) LIFETIME(0) LAYOUT(CACHE(SIZE_IN_CELLS 10));
SELECT 'Running test stateless/02513_prewhere_combine_step_filters.sql from pid=1726' 
CREATE INDEX idx_tab2_3 ON tab2 (col4 DESC,col1 DESC);
CREATE DATABASE IF NOT EXISTS test_mvyzkn4n 
SELECT `t1`.`a` FROM `test_02115`.`t1_local` AS `t1` ALL INNER JOIN `test_02115`.`t2_local` AS `t2` ON `t1`.`a` = `t2`.`a` ORDER BY `t1`.`a` ASC
INSERT INTO r8 SELECT 58 % 10 = 8 ? 58 - 1 : 58
INSERT INTO test_01193_18429.table_7_813 VALUES 
SELECT transactionLatestSnapshot(), transactionOldestSnapshot() FORMAT Null
CREATE TABLE IF NOT EXISTS decimal (`d1` DECIMAL(9, 8), `d2` DECIMAL(18), `d3` DECIMAL) ENGINE = MergeTree PARTITION BY toInt32(d1) ORDER BY (d2, d3) SETTINGS index_granularity = 23025, min_bytes_for_wide_part = 711264847, ratio_of_defaults_for_sparse_serialization = 0.46398693323135376, replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 17213, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 8902344051, index_granularity_bytes = 17901494, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 76650, primary_key_compress_block_size = 58960
CREATE TABLE test_3C3E663456294A5E5F3B5B525A4233662344407C6B5738623F79215B2C7E6C352C385E636B4E5E4A(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02122_parallel_formatting_JSONCompact.sh from pid=1715' 
SELECT age('month', toDate('2017-12-31'), toDate('2018-01-01'));
SET log_comment = 'log_comment test', log_queries = 1;
INSERT INTO test_01193_18429.table_3_112 VALUES 
SELECT multiIf((number % 2) = 0, [toInt16(1), toInt16(2)], (number % 3) = 0, [toInt16(2), toInt16(3)], [toUInt32(3), toUInt32(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_266A7B3D646A4C3D3E2E792B2639447321614B2E742C354D5A6633744D66682E2C267C6D624B3A6F(x UInt8) Engine=Memory;
SELECT OperatingSystem FROM test_prewhere_default_column PREWHERE SessionType = 42;
CREATE TABLE test_02908_r3_82 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_82', 'r3') ORDER BY tuple()
INSERT INTO test_01193_18429.table_7_614 VALUES 
OPTIMIZE TABLE src_9
CREATE TABLE test_01193_18429.table_2_737 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
optimize table tbl_8parts_2granules_rnd final;
CREATE DATABASE IF NOT EXISTS test_uv6vfi1e 
SELECT k, sumForEach(arr) FROM (SELECT intDiv(number, 3) AS k, range(number) AS arr FROM system.numbers LIMIT 10) GROUP BY k ORDER BY k;
SELECT dictGet('db_01721.decimal_dict', 'Decimal32_', toUInt64(4999)), dictGet('db_01721.decimal_dict', 'Decimal64_', toUInt64(4999)), dictGet('db_01721.decimal_dict', 'Decimal128_', toUInt64(4999)) --,dictGet('db_01721.decimal_dict', 'Decimal256_', toUInt64(4999)) ;
select count(d/3) from test settings force_optimize_projection = 1;
desc format(JSONEachRow, '{"x" : 1, "y" : "String"}\n{"z" : "0.0.0.0", "y" : "String2"}\n{"x" : 2}') settings schema_inference_hints='x UInt8, z IPv4';
CREATE TABLE foo (`ts` DateTime, `x` UInt64) ENGINE = MergeTree PARTITION BY toYYYYMMDD(ts) ORDER BY ts SETTINGS index_granularity = 20074, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 8718, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 34, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 10770959, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 58214, primary_key_compress_block_size = 99458
SELECT netloc(NULL);
DROP DATABASE IF EXISTS test_tkx5yoqz 
DROP TABLE IF EXISTS echo_test_3
CREATE TABLE t (`number` UInt64) ENGINE = MergeTree ORDER BY number SETTINGS index_granularity = 128, ratio_of_defaults_for_sparse_serialization = 1., index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 1073741824, replace_long_file_name_to_hash = true, max_file_name_length = 71, merge_max_block_size = 4503, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 202231, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 2136053800, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 34922, primary_key_compress_block_size = 58672
select [0, 0, 0, 3, 0, 15, 0, 0, 12, 7, 0, 0, 0, 0, 5, 0] = multiSearchAllPositions(materialize('jnckhtjqwycyihuejibqmddrdxe'), ['tajzx', 'vuddoylclxatcjvinusdwt', 'spxkhxvzsljkmnzpeubszjnhqczavgtqopxn', 'ckhtjqwycyi', 'xlbfzdxspldoes', 'u', 'czosfebeznt', 'gzhabdsuyreisxvyfrfrkq', 'yihuejibqmd', 'jqwycyihuejibqm', 'cfbvprgzx', 'hxu', 'vxbhrfpzacgd', 'afoaij', 'htjqwycyihu', 'httzbskqd']) from system.numbers limit 10;
CREATE DATABASE IF NOT EXISTS test_rd61qbpb 
select x as c from (select 1 AS k, max(0) as a, max(-0) as x from t7 GROUP BY k) where NOT ignore(c);
CREATE TABLE test_01193_18429.table_8_976 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 2147483649, 9223372036854775808, 2147483649 = 9223372036854775808, 2147483649 != 9223372036854775808, 2147483649 < 9223372036854775808, 2147483649 <= 9223372036854775808, 2147483649 > 9223372036854775808, 2147483649 >= 9223372036854775808, 9223372036854775808 = 2147483649, 9223372036854775808 != 2147483649, 9223372036854775808 < 2147483649, 9223372036854775808 <= 2147483649, 9223372036854775808 > 2147483649, 9223372036854775808 >= 2147483649 , toUInt32(2147483649) = toUInt64(9223372036854775808), toUInt32(2147483649) != toUInt64(9223372036854775808), toUInt32(2147483649) < toUInt64(9223372036854775808), toUInt32(2147483649) <= toUInt64(9223372036854775808), toUInt32(2147483649) > toUInt64(9223372036854775808), toUInt32(2147483649) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toUInt32(2147483649), toUInt64(9223372036854775808) != toUInt32(2147483649), toUInt64(9223372036854775808) < toUInt32(2147483649), toUInt64(9223372036854775808) <= toUInt32(2147483649), toUInt64(9223372036854775808) > toUInt32(2147483649), toUInt64(9223372036854775808) >= toUInt32(2147483649) , toUInt64(2147483649) = toUInt64(9223372036854775808), toUInt64(2147483649) != toUInt64(9223372036854775808), toUInt64(2147483649) < toUInt64(9223372036854775808), toUInt64(2147483649) <= toUInt64(9223372036854775808), toUInt64(2147483649) > toUInt64(9223372036854775808), toUInt64(2147483649) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toUInt64(2147483649), toUInt64(9223372036854775808) != toUInt64(2147483649), toUInt64(9223372036854775808) < toUInt64(2147483649), toUInt64(9223372036854775808) <= toUInt64(2147483649), toUInt64(9223372036854775808) > toUInt64(2147483649), toUInt64(9223372036854775808) >= toUInt64(2147483649) , toInt64(2147483649) = toUInt64(9223372036854775808), toInt64(2147483649) != toUInt64(9223372036854775808), toInt64(2147483649) < toUInt64(9223372036854775808), toInt64(2147483649) <= toUInt64(9223372036854775808), toInt64(2147483649) > toUInt64(9223372036854775808), toInt64(2147483649) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toInt64(2147483649), toUInt64(9223372036854775808) != toInt64(2147483649), toUInt64(9223372036854775808) < toInt64(2147483649), toUInt64(9223372036854775808) <= toInt64(2147483649), toUInt64(9223372036854775808) > toInt64(2147483649), toUInt64(9223372036854775808) >= toInt64(2147483649) 
DROP DATABASE IF EXISTS test_4s5possd 
CREATE WINDOW VIEW wv ENGINE Memory AS SELECT count(a), tumbleStart(wid) AS w_start, tumbleEnd(tumble(now(), INTERVAL '3' SECOND)) AS w_end FROM mt GROUP BY tumble(now(), INTERVAL '3' SECOND) AS wid;
SELECT map();
CREATE TABLE tt (`n` int) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 54638, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 35, merge_max_block_size = 875, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 943129, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 8863553603, index_granularity_bytes = 14963521, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 96962, primary_key_compress_block_size = 17894
INSERT INTO t_async_insert FORMAT CSV 
SYSTEM STOP MERGES t_sparse_02235;
DROP TABLE test_table_data;
CREATE TABLE test_01193_18429.table_3_195 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP TABLE IF EXISTS mean_ztest;
DROP TABLE IF EXISTS log_02184;
SHOW CREATE TABLE system.backup_log
SELECT arrayCompact([toDecimal128(1.0,8), toDecimal128(1.0,8)]) x, toTypeName(x);
INSERT INTO table_with_multi_pk SELECT number % 32, number, toDateTime('2019-10-01 00:00:00'), toString(number % 10) FROM numbers(10000000);
CREATE TABLE test_2063626F4571386B59456E59643A44477969605E584B237E7C7626345E4423462056346879553860(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS store_of_hash_00804;
alter table many_mutations delete where y = 903 * 2 settings mutations_sync = 0;
CREATE TABLE test_65616D4B7A5B53764D482F6F5E3B204C713326797E3A57587C6C455C2E60744B513F35596825353F(x UInt8) Engine=Memory;
CREATE TABLE test_575F7D542F2A2036235B225B5D3C5179403B5928202E7B6444776E45504B5D29352D3B67616C737E(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_7_173 VALUES 
desc s3Cluster('test_cluster_one_shard_three_replicas_localhost', 'http://localhost:11111/test/{a,b}.tsv', 'TSV', 'auto', 'auto');
RENAME TABLE table_for_renames3 TO table_for_renames4
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt32(1), toUInt32(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toInt8(3), toInt8(3)] END FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/01563_distributed_query_finish.sh from pid=1705' 
SELECT count() FROM system.processes WHERE query_id LIKE '01167_isolation_hermitage_test_bvbtk2qs_tx6%'
INSERT INTO r8 SELECT 24
insert into test settings input_format_allow_errors_num=1 format TSV
SELECT round(sum(d * 1.1), 6) FROM test01603;
SELECT formatReadableTimeDelta(-(1 + 60 + 86400 + 30.5 * 86400 + 365 * 86400));
DROP DATABASE IF EXISTS test_0p2pxqsz 
INSERT INTO test_02100 FORMAT JSONCompactEachRow
CREATE TABLE test_01193_18429.table_8_62 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/01661_referer.sh from pid=1713' 
SELECT 'Running test stateless/02243_ipv6_long_parsing.sql from pid=1718' 
EXPLAIN QUERY TREE run_passes=1 SELECT avg(log(2) * number) AS k FROM numbers(10000000) GROUP BY (number % 2) * (number % 3), number % 3, number % 2 HAVING avg(log(2) * number) > 3465735.3 ORDER BY k;
INSERT INTO r8 SELECT 10
DROP DATABASE IF EXISTS test_l1bkymw4 
SELECT 'errors:';
CREATE TABLE test_01193_18429.table_8_348 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_3_35 VALUES 
CREATE TABLE test_516D4159562F247B70746C2A45525A435D317E5A7C6B57433B4E692F617D7C33293F5F3476455378(x UInt8) Engine=Memory;
SELECT LinfNormalize((5, -5, 5.0));
INSERT INTO mutation_table SELECT toDate('2019-10-01'), number, '42' FROM numbers(100);
drop table if exists shard_0.num_01232;
SELECT arrayAll(x -> 0, range(number)) FROM system.numbers LIMIT 10;
SELECT 10, 6, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (10 < 13 AND 6 > 0 ? 10 : 0)), throwIf(last != (10 < 13 AND 6 > 0 ? least(13 - 1, 10 + 6 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 10, 6);
INSERT INTO test_01193_18429.table_4_494 VALUES 
SELECT '---';
CREATE DATABASE IF NOT EXISTS test_o88pe7gt 
SELECT toTypeName(today() - 1) = 'Date';
INSERT INTO test_01193_18429.table_6_614 VALUES 
SELECT blockSize();
DROP TABLE IF EXISTS sample_00314_2;
INSERT INTO test_01193_18429.table_4_58 VALUES 
INSERT INTO r9 SELECT 45 % 10 = 9 ? 45 - 1 : 45
insert into t select * from numbers_mt(1e6);
SELECT Y, uniqTheta(X) FROM (SELECT number AS X, (3*X*X - 7*X + 11) % 37 AS Y FROM system.numbers LIMIT 1000000) GROUP BY Y ORDER BY Y;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (103 < 56 AND 35 > 0 ? 103 : 0)), throwIf(last != (103 < 56 AND 35 > 0 ? least(56 - 1, 103 + 35 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(56) LIMIT 103, 35);
CREATE INDEX idx_tab3_4 ON tab3 (col1 DESC,col3 DESC);
INSERT INTO r5 SELECT 62
CREATE TABLE test_01193_18429.table_3_243 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_3_455 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT toUInt64OrZero(NULL, NULL, NULL);
DROP DATABASE IF EXISTS test_zr4z1kip 
CREATE TABLE test_01193_18429.table_9_564 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
insert into summing_merge_tree_aggregate_function select 1, quantileState(0.1)(0.6);
DROP DATABASE IF EXISTS test_vubqzsno 
DROP DATABASE IF EXISTS test_zmd1qu5x 
CREATE TABLE startsWith_test(S1 String, S2 String, S3 FixedString(2)) ENGINE=Memory;
SELECT arrayMap(x -> materialize(123), range(number)) FROM system.numbers LIMIT 10;
drop table if exists mv_02231;
SELECT COUNT(DISTINCT data) FROM compression_codec_multiple_with_key_replicated WHERE id < 222;
CREATE TABLE test (`x` UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 47213, min_bytes_for_wide_part = 384269150, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 105, merge_max_block_size = 8831, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 8249691747, index_granularity_bytes = 17691126, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 8292, primary_key_compress_block_size = 91988
CREATE TABLE test_206546593473396A73666E4E63604B503F6D4D552074645F4648542172575C5A5036543E60452E4C(x UInt8) Engine=Memory;
select a1, a2, b2 from tab1 any left join tab2 on b1 = a2;
SELECT groupUniqArrayForEachMerge(x) from (select groupUniqArrayForEachStateArray([[1],[1],[1]]) as x);
CREATE DATABASE IF NOT EXISTS test_w06dnvmz 
SELECT groupArrayMovingAvg(NULL);
INSERT INTO join_table_mutation VALUES 
SELECT arrayReduce('avgState', [0]) IN (arrayReduce('avgState', [0, 1]), arrayReduce('avgState', [0]));
SELECT multiIf(1, ['foo', 'bar'], (col1 % 3) = 0, [col4, 'bar'], [col6, col7]) FROM multi_if_check;
show create user u_01939
SELECT right('Hello', -6);
SELECT * FROM dictionary(dict_02916_dictionary_access_test_29xg5dlt);
INSERT INTO test_table_ipv6 VALUES 
SELECT count() FROM t_cnf_fuzz WHERE (c6 AND (NOT c5) AND c7 AND (NOT c9) AND (NOT c1)) OR ((NOT c3) AND (NOT c4) AND c3) OR (c5 AND c7 AND c8 AND (NOT c9)) OR ((NOT c5)) SETTINGS convert_query_to_cnf = 1
ALTER TABLE ttl_table3 MODIFY SETTING max_replicated_merges_with_ttl_in_queue=0
DROP TABLE IF EXISTS master;
SELECT '- non-const needle, non-const replacement';
CREATE TEMPORARY TABLE t (x Float64);
CREATE TABLE test_01193_18429.table_5_199 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Aliases to constants';
CREATE TABLE test_02908_r3_248 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_248', 'r3') ORDER BY tuple()
CREATE TABLE test_49553E5C264059536D726E5C3A3066477D66723F77432D39443F4C3D6A3A6E38546B425446457079(x UInt8) Engine=Memory;
INSERT INTO src_9 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 57
select 1 and least(number % 2, number % 3) from numbers(10);
CREATE TABLE test_6A7761475933667D43333C3B4A48565A7C6D426E555A29494D69463F475C3A244B474A737D666F4D(x UInt8) Engine=Memory;
SELECT untuple(JSONExtract('{"key": "value"}', 'Tuple(key String)')) x FORMAT Vertical SETTINGS allow_experimental_analyzer = 1;
CREATE OR REPLACE TABLE dict_src (`n` int, `m` int, `s` String) ENGINE = MergeTree ORDER BY (n, m) SETTINGS index_granularity = 48156, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.3903268277645111, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 1794, prefer_fetch_merged_part_size_threshold = 4566724619, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 3915780837, index_granularity_bytes = 3791544, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 89831, primary_key_compress_block_size = 16654
DROP DATABASE IF EXISTS test_h23865q1 
SELECT 0 IN (0) AS x, count() GROUP BY x;
CREATE TABLE t (`val` UInt32) ENGINE = MergeTree ORDER BY val SETTINGS index_granularity = 44681, min_bytes_for_wide_part = 210163998, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 19033, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 9, min_merge_bytes_to_use_direct_io = 1757685344, index_granularity_bytes = 1578436, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 32739, primary_key_compress_block_size = 92867
DROP TABLE IF EXISTS mv_good;
SELECT multiIf((number % 2) = 0, [toUInt16(1), toUInt16(2)], (number % 3) = 0, [toFloat32(2), toFloat32(3)], [toUInt32(3), toUInt32(3)]) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_9_864 VALUES 
INSERT INTO test_01193_18429.table_1_913 VALUES 
SELECT 'Running test stateless/02201_use_skip_indexes_if_final.sql from pid=1720' 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (90 < 79 AND 85 > 0 ? 90 : 0)), throwIf(last != (90 < 79 AND 85 > 0 ? least(79 - 1, 90 + 85 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(79) LIMIT 90, 85);
DROP DATABASE IF EXISTS test_kr9a34gh 
DROP TABLE IF EXISTS test.infile_progress
SELECT toUInt16OrDefault(-1);
DROP TABLE IF EXISTS dest;
CREATE DICTIONARY test_dict (y String, value UInt64 DEFAULT 0) PRIMARY KEY y SOURCE(CLICKHOUSE(TABLE 'test_table')) LAYOUT(DIRECT());
CREATE TABLE test_01193_18429.table_7_492 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT CASE WHEN 1 THEN col2 WHEN 1 THEN col3 ELSE 'baz' END FROM multi_if_check;
SELECT '0', '0.500000000', 0 = 0.500000000, 0 != 0.500000000, 0 < 0.500000000, 0 <= 0.500000000, 0 > 0.500000000, 0 >= 0.500000000, 0.500000000 = 0, 0.500000000 != 0, 0.500000000 < 0, 0.500000000 <= 0, 0.500000000 > 0, 0.500000000 >= 0 , toUInt8(0) = 0.500000000, toUInt8(0) != 0.500000000, toUInt8(0) < 0.500000000, toUInt8(0) <= 0.500000000, toUInt8(0) > 0.500000000, toUInt8(0) >= 0.500000000, 0.500000000 = toUInt8(0), 0.500000000 != toUInt8(0), 0.500000000 < toUInt8(0), 0.500000000 <= toUInt8(0), 0.500000000 > toUInt8(0), 0.500000000 >= toUInt8(0) , toInt8(0) = 0.500000000, toInt8(0) != 0.500000000, toInt8(0) < 0.500000000, toInt8(0) <= 0.500000000, toInt8(0) > 0.500000000, toInt8(0) >= 0.500000000, 0.500000000 = toInt8(0), 0.500000000 != toInt8(0), 0.500000000 < toInt8(0), 0.500000000 <= toInt8(0), 0.500000000 > toInt8(0), 0.500000000 >= toInt8(0) , toUInt16(0) = 0.500000000, toUInt16(0) != 0.500000000, toUInt16(0) < 0.500000000, toUInt16(0) <= 0.500000000, toUInt16(0) > 0.500000000, toUInt16(0) >= 0.500000000, 0.500000000 = toUInt16(0), 0.500000000 != toUInt16(0), 0.500000000 < toUInt16(0), 0.500000000 <= toUInt16(0), 0.500000000 > toUInt16(0), 0.500000000 >= toUInt16(0) , toInt16(0) = 0.500000000, toInt16(0) != 0.500000000, toInt16(0) < 0.500000000, toInt16(0) <= 0.500000000, toInt16(0) > 0.500000000, toInt16(0) >= 0.500000000, 0.500000000 = toInt16(0), 0.500000000 != toInt16(0), 0.500000000 < toInt16(0), 0.500000000 <= toInt16(0), 0.500000000 > toInt16(0), 0.500000000 >= toInt16(0) , toUInt32(0) = 0.500000000, toUInt32(0) != 0.500000000, toUInt32(0) < 0.500000000, toUInt32(0) <= 0.500000000, toUInt32(0) > 0.500000000, toUInt32(0) >= 0.500000000, 0.500000000 = toUInt32(0), 0.500000000 != toUInt32(0), 0.500000000 < toUInt32(0), 0.500000000 <= toUInt32(0), 0.500000000 > toUInt32(0), 0.500000000 >= toUInt32(0) , toInt32(0) = 0.500000000, toInt32(0) != 0.500000000, toInt32(0) < 0.500000000, toInt32(0) <= 0.500000000, toInt32(0) > 0.500000000, toInt32(0) >= 0.500000000, 0.500000000 = toInt32(0), 0.500000000 != toInt32(0), 0.500000000 < toInt32(0), 0.500000000 <= toInt32(0), 0.500000000 > toInt32(0), 0.500000000 >= toInt32(0) , toUInt64(0) = 0.500000000, toUInt64(0) != 0.500000000, toUInt64(0) < 0.500000000, toUInt64(0) <= 0.500000000, toUInt64(0) > 0.500000000, toUInt64(0) >= 0.500000000, 0.500000000 = toUInt64(0), 0.500000000 != toUInt64(0), 0.500000000 < toUInt64(0), 0.500000000 <= toUInt64(0), 0.500000000 > toUInt64(0), 0.500000000 >= toUInt64(0) , toInt64(0) = 0.500000000, toInt64(0) != 0.500000000, toInt64(0) < 0.500000000, toInt64(0) <= 0.500000000, toInt64(0) > 0.500000000, toInt64(0) >= 0.500000000, 0.500000000 = toInt64(0), 0.500000000 != toInt64(0), 0.500000000 < toInt64(0), 0.500000000 <= toInt64(0), 0.500000000 > toInt64(0), 0.500000000 >= toInt64(0) ;
CREATE TABLE mt (`p` int, `n` int) ENGINE = MergeTree PARTITION BY p ORDER BY tuple() SETTINGS index_granularity = 61365, min_bytes_for_wide_part = 18364044, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 9319, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 11600042, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 46079, primary_key_compress_block_size = 60988
INSERT INTO r4 SELECT 69
INSERT INTO test_01193_18429.table_5_806 VALUES 
SELECT id FROM test_bf_indexOf WHERE indexOf(ary, 'value1') not in (2) ORDER BY id FORMAT TSV;
SELECT subtractHours('2023-10-22', 1), subtractHours('2023-10-22 12:34:56.123', 1);
SELECT multiIf((number % 2) = 0, [toUInt32(1), toUInt32(2)], (number % 3) = 0, [toUInt64(2), toUInt64(3)], [toUInt64(3), toUInt64(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_02908_r2_180 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_180', 'r2') ORDER BY tuple()
INSERT INTO test_01193_18429.table_2_3 VALUES 
CREATE TABLE test_01193_18429.table_3_856 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_543B46345A5F2B3E317B7D30487A7A70604635477B3F2E65416C4D3852476E6F6D606A2875634D7D(x UInt8) Engine=Memory;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 51595, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT * FROM t_async_insert_native_1 ORDER BY id;
SELECT count() == 1 FROM null_in WHERE i global not in range(4);
SELECT multiIf((col1 % 2) = 0, ['foo', 'bar'], 1, ['foo', 'bar'], [col6, 'bar']) FROM multi_if_check;
INSERT INTO test_02908_r1_33 SELECT rand64() FROM numbers(5);
CREATE INDEX idx_tab2_0 ON tab2 (col4 DESC,col1 DESC,col0 DESC);
SELECT arrayWithConstant(3, number) FROM numbers(10);
SELECT * FROM bloom_filter_idx WHERE (s, lower(s)) IN (('aÃÂ±ÃÂ²ÃÂ³ÃÂ´ÃÂµÃÂÃÂ¶', 'aÃÂ±ÃÂ²ÃÂ³ÃÂ´ÃÂµÃÂÃÂ¶'), ('abc', 'cba')) ORDER BY k
CREATE TABLE src_0 (`p` UInt64, `k` UInt64, `v` UInt64) ENGINE = MergeTree PARTITION BY p % 10 ORDER BY k SETTINGS index_granularity = 13557, min_bytes_for_wide_part = 756562708, ratio_of_defaults_for_sparse_serialization = 0.35682085156440735, replace_long_file_name_to_hash = false, max_file_name_length = 50, merge_max_block_size = 13985, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 376025, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 6001059207, index_granularity_bytes = 10151118, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 83048, primary_key_compress_block_size = 78650
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toInt8(2) ELSE toUInt8(3) END FROM system.numbers LIMIT 10;
SELECT toDecimal128('12345678901234567890123456789.123456789', 9) AS x, -x AS y, ceil(x), ceil(y), ceil(x, -3), ceil(y, -3);
drop table if exists b;
/* ddl_entry=query-0000000153 */ CREATE TABLE test_1a4hjxwc.mt UUID '444e8c30-25e2-4901-9ba7-4aa11dfc82d0' (`a` Int32, `timestamp` DateTime) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 44927, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = 1, max_file_name_length = 96, merge_max_block_size = 8811, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 522773, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 17999236, allow_vertical_merges_from_compact_to_wide_parts = 1, marks_compress_block_size = 48146, primary_key_compress_block_size = 71967
CREATE TABLE test_34567B4C3A793F4769592072427769693079527E676C6663424933683538586A7C2841495B242D63(x UInt8) Engine=Memory;
DROP TABLE 02183_dictionary_source_table;
CREATE TABLE test_527162412937737E335A752947505D345B2D4A274156416578307A7B657B4F4F76265E4E777B6D6E(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_431xnzov 
CREATE TABLE test_2F5C61782E692550382C527A522D33566D5078262547442E746B5B5D2E2B58434659336558325574(x UInt8) Engine=Memory;
 explain actions = 1 select x, y from ( select range(number) as x, number + 1 as y from numbers(3) ) array join x where y != 2 and x != 0
SELECT cityHash64(groupArray(x)) FROM enum_pk WHERE (x = toString(0)) > 0;
SELECT sum(size) FROM system.filesystem_cache WHERE state = 'DOWNLOADED'
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c8)) OR ((NOT c3) AND c0 AND c6 AND c2 AND c2) SETTINGS convert_query_to_cnf = 1
SELECT 'Running test stateless/02122_parallel_formatting_JSONCompactStringsEachRowWithNamesAndTypes.sh from pid=1722' 
CREATE TABLE test_23496E516E235C6D4874426027382A396C20465F3A36682B6F7E7648396A5E5A4F2979392F63696E(x UInt8) Engine=Memory;
select hasAny([[1, 2], [3, 4]], [[1, 3], [4, 2]]);
SELECT * FROM (SELECT dummy AS val FROM system.one) s1 ANY LEFT JOIN (SELECT toLowCardinality(toNullable(dummy)) AS val FROM system.one) s2 USING val ORDER BY val;
CREATE TABLE test_7E723B423F5563655C2F2878667E455F66244825665154735245265239435055616F7D5B726D475B(x UInt8) Engine=Memory;
SELECT * FROM csv ORDER BY d, s
CREATE TABLE target_2 (`v` Float64) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 53402, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 45, merge_max_block_size = 12793, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 383801211, index_granularity_bytes = 8149076, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 60764, primary_key_compress_block_size = 82696
DROP QUOTA q02247
create materialized view tt_mv to tt as select p, minState(now() - interval 30 minute) as tmin from tt_null group by p;
SELECT 10 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'asn', tuple(IPv4StringToNum('255.192.0.0')))
select xxHash64(toUInt32(0)) = xxHash64('\0\0\0\0');
SELECT rand64();
CHECK TABLE check_table_with_indices SETTINGS max_threads = 1;
SELECT cityHash64();
SELECT '1', '-9007199254740992.000000000', 1 = -9007199254740992.000000000, 1 != -9007199254740992.000000000, 1 < -9007199254740992.000000000, 1 <= -9007199254740992.000000000, 1 > -9007199254740992.000000000, 1 >= -9007199254740992.000000000, -9007199254740992.000000000 = 1, -9007199254740992.000000000 != 1, -9007199254740992.000000000 < 1, -9007199254740992.000000000 <= 1, -9007199254740992.000000000 > 1, -9007199254740992.000000000 >= 1 , toUInt8(1) = -9007199254740992.000000000, toUInt8(1) != -9007199254740992.000000000, toUInt8(1) < -9007199254740992.000000000, toUInt8(1) <= -9007199254740992.000000000, toUInt8(1) > -9007199254740992.000000000, toUInt8(1) >= -9007199254740992.000000000, -9007199254740992.000000000 = toUInt8(1), -9007199254740992.000000000 != toUInt8(1), -9007199254740992.000000000 < toUInt8(1), -9007199254740992.000000000 <= toUInt8(1), -9007199254740992.000000000 > toUInt8(1), -9007199254740992.000000000 >= toUInt8(1) , toInt8(1) = -9007199254740992.000000000, toInt8(1) != -9007199254740992.000000000, toInt8(1) < -9007199254740992.000000000, toInt8(1) <= -9007199254740992.000000000, toInt8(1) > -9007199254740992.000000000, toInt8(1) >= -9007199254740992.000000000, -9007199254740992.000000000 = toInt8(1), -9007199254740992.000000000 != toInt8(1), -9007199254740992.000000000 < toInt8(1), -9007199254740992.000000000 <= toInt8(1), -9007199254740992.000000000 > toInt8(1), -9007199254740992.000000000 >= toInt8(1) , toUInt16(1) = -9007199254740992.000000000, toUInt16(1) != -9007199254740992.000000000, toUInt16(1) < -9007199254740992.000000000, toUInt16(1) <= -9007199254740992.000000000, toUInt16(1) > -9007199254740992.000000000, toUInt16(1) >= -9007199254740992.000000000, -9007199254740992.000000000 = toUInt16(1), -9007199254740992.000000000 != toUInt16(1), -9007199254740992.000000000 < toUInt16(1), -9007199254740992.000000000 <= toUInt16(1), -9007199254740992.000000000 > toUInt16(1), -9007199254740992.000000000 >= toUInt16(1) , toInt16(1) = -9007199254740992.000000000, toInt16(1) != -9007199254740992.000000000, toInt16(1) < -9007199254740992.000000000, toInt16(1) <= -9007199254740992.000000000, toInt16(1) > -9007199254740992.000000000, toInt16(1) >= -9007199254740992.000000000, -9007199254740992.000000000 = toInt16(1), -9007199254740992.000000000 != toInt16(1), -9007199254740992.000000000 < toInt16(1), -9007199254740992.000000000 <= toInt16(1), -9007199254740992.000000000 > toInt16(1), -9007199254740992.000000000 >= toInt16(1) , toUInt32(1) = -9007199254740992.000000000, toUInt32(1) != -9007199254740992.000000000, toUInt32(1) < -9007199254740992.000000000, toUInt32(1) <= -9007199254740992.000000000, toUInt32(1) > -9007199254740992.000000000, toUInt32(1) >= -9007199254740992.000000000, -9007199254740992.000000000 = toUInt32(1), -9007199254740992.000000000 != toUInt32(1), -9007199254740992.000000000 < toUInt32(1), -9007199254740992.000000000 <= toUInt32(1), -9007199254740992.000000000 > toUInt32(1), -9007199254740992.000000000 >= toUInt32(1) , toInt32(1) = -9007199254740992.000000000, toInt32(1) != -9007199254740992.000000000, toInt32(1) < -9007199254740992.000000000, toInt32(1) <= -9007199254740992.000000000, toInt32(1) > -9007199254740992.000000000, toInt32(1) >= -9007199254740992.000000000, -9007199254740992.000000000 = toInt32(1), -9007199254740992.000000000 != toInt32(1), -9007199254740992.000000000 < toInt32(1), -9007199254740992.000000000 <= toInt32(1), -9007199254740992.000000000 > toInt32(1), -9007199254740992.000000000 >= toInt32(1) , toUInt64(1) = -9007199254740992.000000000, toUInt64(1) != -9007199254740992.000000000, toUInt64(1) < -9007199254740992.000000000, toUInt64(1) <= -9007199254740992.000000000, toUInt64(1) > -9007199254740992.000000000, toUInt64(1) >= -9007199254740992.000000000, -9007199254740992.000000000 = toUInt64(1), -9007199254740992.000000000 != toUInt64(1), -9007199254740992.000000000 < toUInt64(1), -9007199254740992.000000000 <= toUInt64(1), -9007199254740992.000000000 > toUInt64(1), -9007199254740992.000000000 >= toUInt64(1) , toInt64(1) = -9007199254740992.000000000, toInt64(1) != -9007199254740992.000000000, toInt64(1) < -9007199254740992.000000000, toInt64(1) <= -9007199254740992.000000000, toInt64(1) > -9007199254740992.000000000, toInt64(1) >= -9007199254740992.000000000, -9007199254740992.000000000 = toInt64(1), -9007199254740992.000000000 != toInt64(1), -9007199254740992.000000000 < toInt64(1), -9007199254740992.000000000 <= toInt64(1), -9007199254740992.000000000 > toInt64(1), -9007199254740992.000000000 >= toInt64(1) ;
SELECT tryIdnaEncode(NULL);
DROP DICTIONARY complex_key_cache_dictionary_01862;
CREATE TABLE test_706050622F39453857622540624E52505E5D6B7547246D762A62776B3D38774E705D585F605F6944(x UInt8) Engine=Memory;
SELECT 02337_db.test_table.id, 02337_db.test_table.value FROM 02337_db.test_table;
INSERT INTO test_01193_18429.table_1_289 VALUES 
select 22, * from test where id = 1
CREATE TABLE test_38422D6D623440684F7C69516C5F362053404440793943456F477A7A2A3E504974565069772A7166(x UInt8) Engine=Memory;
CREATE TABLE test_46746E78644E452057675F5C6D49553D356161566A4D71317A392937435C205A6E4D284F602F633F(x UInt8) Engine=Memory;
WITH toDate('2021-02-14') AS date_value, toDateTime('2021-02-14 11:22:33') AS date_time_value, toDateTime64('2021-02-14 11:22:33', 3) AS date_time_64_value SELECT monthName(date_value), monthName(date_time_value), monthName(date_time_64_value);
SELECT medianInterpolatedWeighted(NULL, NULL);
SELECT count() FROM decimal WHERE d1 >= toDecimal32('4.2', 8);
drop table ax;
SELECT 1 AS x FROM remote('127.0.0.2', currentDatabase(), nested) ARRAY JOIN n.x;
CREATE DATABASE IF NOT EXISTS test_u8aqtn86 
SELECT repeat('a', DISTINCT) FROM (SELECT number AS DISTINCT FROM numbers(10));
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), toISOYear(N, 'Asia/Istanbul') as r FORMAT CSV;
SELECT 'Check multiple keys as tuple from a table';
INSERT INTO src_7 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 93
DROP DATABASE IF EXISTS test_gdr3z5hd 
CREATE DATABASE IF NOT EXISTS test_ncporfep 
create table test_02312 (x Tuple(a UInt32, b UInt32)) engine=File(Parquet);
SELECT s, replaceAll(s, '_', 'oo') AS a, REGEXP_REPLACE(s, '_', 'oo') AS b, a = b FROM (SELECT arrayJoin(['._', '._']) AS s);
CREATE TABLE test_02908_r1_133 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_133', 'r1') ORDER BY tuple()
CREATE TABLE test_762A3B5C216F384B444C3A414D205433763D6B29295442444D70603D3D3534505F5B5E2F3C4C2A5D(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_0x2fzpcz 
CREATE USER user9_02713 IDENTIFIED WITH ldap SERVER 'qwerty9'
INSERT INTO dummy VALUES 
select 'constants:', [toUUID('61f0c404-5cb3-11e7-907b-a6006ad3dba0'),toUUID('61f0c404-5cb3-11e7-907b-a6006ad3dba0')], byteSize([toUUID('61f0c404-5cb3-11e7-907b-a6006ad3dba0'),toUUID('61f0c404-5cb3-11e7-907b-a6006ad3dba0')]);
select CAST(x, 'Int8') from auto_assign_enum2;
INSERT INTO src_0 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 65
SELECT countMatchesCaseInsensitive(NULL, NULL);
select '-------toRelativeWeekNum---------';
SELECT nothingNull([], [], []);
CREATE DATABASE IF NOT EXISTS test_0trcomee 
SELECT JSON_QUERY('{"hello":{"world":"!"}}', '$.hello');
SELECT '\\''\'', 1 FORMAT Vertical;
INSERT INTO test_01193_18429.table_8_224 VALUES 
INSERT INTO test_01193_18429.table_9_785 VALUES 
INSERT INTO test_01193_18429.table_6_680 VALUES 
CREATE DICTIONARY 01778_db.hierarchy_flat_dictionary ( id UInt64, parent_id UInt64 HIERARCHICAL ) PRIMARY KEY id SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'hierarchy_source_table' DB '01778_db')) LAYOUT(FLAT()) LIFETIME(MIN 1 MAX 1000);
SELECT 'Running test stateless/02147_arrow_duplicate_columns.sh from pid=1713' 
DROP DATABASE IF EXISTS test_ebnyxyvu 
CREATE DATABASE IF NOT EXISTS test_qj58ahxc 
INSERT INTO test_01193_18429.table_8_138 VALUES 
SELECT multiIf((number % 2) = 0, toInt16(1), (number % 3) = 0, toUInt32(2), toInt64(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_10_780 VALUES 
SELECT id AS id2, name AS value FROM merge_tree_in_subqueries WHERE num IN (SELECT number FROM system.numbers LIMIT 10) ORDER BY id;
INSERT INTO test_01193_18429.table_1_632 VALUES 
DROP TABLE IF EXISTS input_function_table_3
INSERT INTO columns_with_multiple_streams VALUES
INSERT INTO test_01193_18429.table_3_444 VALUES 
INSERT INTO r5 SELECT 43
SELECT b, c FROM t_fixed_prefix WHERE bitNot(c) = 1 ORDER BY b, c SETTINGS optimize_read_in_order = 0
SELECT id, name FROM f LEFT ARRAY JOIN d_ids as id LEFT JOIN d ON d.id = id ORDER BY id;
CREATE DATABASE IF NOT EXISTS test_mosncn5w 
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 28399, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT nothingUInt64Array([NULL, NULL]) AS `x` FROM numbers(3)
SYSTEM SYNC REPLICA fetches_r2
CREATE DATABASE IF NOT EXISTS test_8vkjg790 
SELECT JSONExtract('{"a": "hello", "b": [-100, 200.0, 300]}', 'a', 'LowCardinality(String)');
CREATE TABLE test_01193_18429.table_3_786 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT * FROM s3Cluster('test_cluster_one_shard_three_replicas_localhost', 'http://localhost:11111/test/{a,b}.tsv', headers(MyCustomHeader = '[HIDDEN]')) ORDER BY c1 ASC, c2 ASC, c3 ASC
SELECT toUnixTimestamp(x) as tt, (toDateTime('1981-04-01 00:00:00', 'Europe/Moscow') + INTERVAL number * 600 SECOND) AS x, timezoneOffset(x) as res,(toDateTime(toString(x), 'UTC') - x ) AS calc FROM numbers(576) where res != calc;
alter table alter_ttl modify column s String ttl toDate('2020-01-01');
DROP TABLE IF EXISTS tab
CREATE TABLE test_2422452D5B4A7A4B3E4D3D315B6E78597E3173595C286E76295F5E5E407663667A242C785B372F2C(x UInt8) Engine=Memory;
INSERT INTO r5 SELECT 98
CREATE TABLE test_01193_18429.table_10_305 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_4_992 VALUES 
SELECT multiIf((number % 2) = 0, [toFloat64(1), toFloat64(2)], (number % 3) = 0, [toUInt8(2), toUInt8(3)], [toFloat64(3), toFloat64(3)]) FROM system.numbers LIMIT 10;
DROP TABLE IF EXISTS t_enum;
SELECT concat(NULL);
SELECT value FROM system.events WHERE event = 'DictCacheKeysRequestedMiss' SETTINGS system_events_show_zero_values=1
SELECT CASE WHEN (number % 2) = 0 THEN toInt64(1) WHEN (number % 3) = 0 THEN toUInt16(2) ELSE toInt16(3) END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_5_855 VALUES 
CREATE DATABASE IF NOT EXISTS test_k5gotavr 
INSERT INTO src VALUES /* (8, 3) */ 
SELECT number FROM numbers(3) ORDER BY toFloat32(toFloat64(number)) DESC;
DROP TABLE t_dst;
SELECT multiIf((number % 2) = 0, toInt64(1), (number % 3) = 0, toInt8(2), toInt16(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 42259, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT * FROM pk WHERE x = 3 AND y > 44;
CREATE DATABASE IF NOT EXISTS test_ox2gxdjq 
set max_columns_to_read=1;
INSERT INTO table_for_rename_with_primary_key SELECT toDate('2019-10-01') + number % 3, number, number, number, toString(number), toString(number) from numbers(9);
INSERT INTO test_01193_18429.table_10_356 VALUES 
CREATE TABLE test_01193_18429.table_3_201 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_9_810 VALUES 
CREATE TABLE test_01193_18429.table_6_712 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT ProfileEvents['DelayedInsertsMilliseconds'] AS delay FROM system.query_log WHERE (event_date >= yesterday()) AND (current_database = 'test_6a26v5p2') AND (query_id = 'test_6a26v5p2_02521_1_2189420957') ORDER BY delay DESC LIMIT 1
SELECT h3NumHexagons(15);
SELECT s, replaceAll(s, '_', 'o') AS a, replaceRegexpAll(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['.', '__.__']) AS s);
DROP DATABASE IF EXISTS test_lzgw8huc 
SELECT * FROM columns_with_multiple_streams_bad_case ORDER BY field0;
CREATE DATABASE IF NOT EXISTS test_6hgqxgg5 
desc format(JSONEachRow, '{"x" : null}, {"x" : 42}') settings schema_inference_make_columns_nullable=1;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toInt16(-1) < N as r FORMAT CSV;
CREATE TABLE lol (n int) ENGINE=MergeTree ORDER BY n SETTINGS min_bytes_for_wide_part=123 SETTINGS log_queries=1;
DROP DATABASE IF EXISTS test_v516dijb 
CREATE DATABASE IF NOT EXISTS test_d5fcigyx 
INSERT INTO test_01193_18429.table_4_515 VALUES 
INSERT INTO test_01193_18429.table_3_362 VALUES 
CREATE SETTINGS PROFILE s1_01294;
select 1 = multiSearchAny(materialize('abcdefgh'), ['abcdef']) from system.numbers limit 10;
SELECT CAST('a', 'Nullable(FixedString(1))') as s, toTypeName(s), toString(s);
CREATE TABLE testlazy.slog (a UInt64, b UInt64) ENGINE = StripeLog;
CREATE TABLE test_5E6E5D2720394879416D786F347351645376365867796B544D4B2860502D5F26704F5D477A64403D(x UInt8) Engine=Memory;
DROP FUNCTION IF EXISTS hasValidSizes17;
CREATE TABLE test_yk9180p3_02911_keeper_map.02911_backup_restore_keeper_map3 (key UInt64, value String) Engine=KeeperMap('/' || currentDatabase() || '/test02911_different') PRIMARY KEY key;
SELECT 'Running test stateless/01710_normal_projection_join_plan_fix.sql from pid=1713' 
CREATE DATABASE IF NOT EXISTS test_sgkl3oov 
SELECT dictGetString(concat('test_6ztqwvhd', '.dictionary_with_hierarchy'), 'RegionName', toUInt64(2))
SELECT pathFull('');
select hasAll([1, 2, 3, 4], [1, 3, 5]);
SELECT * FROM partition_and_primary_keys_using_same_expression ORDER BY dt;
select 2 = positionUTF8('ÃÂ°ÃÂ±ÃÂ²ÃÂ°ÃÂ±ÃÂ²', materialize('ÃÂ±ÃÂ²ÃÂ°'), 0) from system.numbers limit 10;
CREATE TABLE test_01193_18429.table_9_39 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT toIPv6(NULL, NULL);
select [0, 0, 6, 20, 0, 10, 0, 0, 0, 9, 10, 3, 23, 1, 0, 0, 2, 0] = multiSearchAllPositionsCaseInsensitiveUTF8(materialize('ÃÂ»ÃÂÃÂ°ÃÂ¿ÃÂ¨ÃÂ¸ÃÂ¥ÃÂÃÂÃÂÃÂÃÂ´ÃÂºÃÂÃÂ¡ÃÂÃÂÃÂ±ÃÂÃÂ³ÃÂ¸ÃÂºÃÂ·ÃÂÃÂÃÂ°ÃÂ½ÃÂ¼ÃÂ¸'), ['ÃÂ¥ÃÂÃÂÃÂ°ÃÂÃÂ¢ÃÂ´ÃÂÃÂ±ÃÂ¾ÃÂ´ÃÂÃÂÃÂ§ÃÂ³ÃÂÃÂ§ÃÂ½ÃÂºÃÂ»ÃÂ¨ÃÂÃÂÃÂÃÂÃÂÃÂºÃÂ¦ÃÂÃÂ°ÃÂÃÂ³', 'ÃÂÃÂ¦ÃÂ§ÃÂÃÂ¿ÃÂÃÂ ÃÂÃÂÃÂ°ÃÂ¤ÃÂ ÃÂÃÂ¥ÃÂ´ÃÂ ÃÂ£ÃÂÃÂÃÂ¶ÃÂ£ÃÂÃÂÃÂ»ÃÂ¶ÃÂ°ÃÂ ÃÂ', 'ÃÂ¸ÃÂ¥ÃÂ§ÃÂ»ÃÂ´ÃÂÃÂ´ÃÂºÃÂ¡ÃÂÃÂÃÂÃÂ±ÃÂ¨ÃÂÃÂ¸ÃÂºÃÂ·ÃÂ§ÃÂ', 'ÃÂ³ÃÂ¸ÃÂºÃÂÃÂÃÂ¹ÃÂ', 'ÃÂÃÂÃÂ¢ÃÂ·ÃÂÃÂÃÂÃÂÃÂÃÂÃÂ»ÃÂµÃÂºÃÂ©ÃÂÃÂÃÂÃÂ²ÃÂ¼ÃÂ', 'ÃÂ', 'ÃÂ¦ÃÂ¥ÃÂÃÂ¢ÃÂÃÂ¾ÃÂÃÂÃÂÃÂ£ÃÂ¨ÃÂÃÂ½ÃÂÃÂ¶ÃÂ·ÃÂ¶ÃÂµÃÂÃÂÃÂÃÂ¥ÃÂÃÂÃÂ©ÃÂÃÂ±ÃÂÃÂ£ÃÂ¾ÃÂÃÂ¨ÃÂ¨ÃÂ¸ÃÂÃÂ¹ÃÂ¶', 'ÃÂ¹ÃÂÃÂÃÂ´ÃÂÃÂ·ÃÂ¾ÃÂ³ÃÂ³ÃÂÃÂÃÂÃÂÃÂ±', 'ÃÂÃÂÃÂÃÂÃÂ¹ÃÂ¥ÃÂÃÂ±ÃÂ¶ÃÂ¾ÃÂ°ÃÂºÃÂÃÂÃÂÃÂÃÂ°ÃÂÃÂÃÂ°ÃÂÃÂ¤ÃÂ¡ÃÂ½ÃÂÃÂÃÂÃÂ¢ÃÂÃÂ±ÃÂ¼ÃÂÃÂÃÂ¢ÃÂÃÂÃÂÃÂÃÂ', 'ÃÂÃÂÃÂ¨ÃÂ´ÃÂÃÂ¡ÃÂ¡ÃÂÃÂÃÂÃÂÃÂÃÂ¸ÃÂºÃÂ·ÃÂ', 'ÃÂÃÂ¨ÃÂ´ÃÂÃÂ¡ÃÂ¡ÃÂ½ÃÂ¸ÃÂ', 'ÃÂ°ÃÂÃÂ¨ÃÂÃÂ¥ÃÂÃÂÃÂÃÂ¨ÃÂÃÂÃÂÃÂ', 'ÃÂ·', '', 'ÃÂ¤ÃÂ¾ÃÂ¾ÃÂ ÃÂÃÂ©ÃÂÃÂÃÂÃÂ¾ÃÂ£ÃÂ¨ÃÂ»ÃÂÃÂÃÂ·ÃÂÃÂÃÂ¾ÃÂÃÂ¿', 'ÃÂ ÃÂÃÂÃÂ¥ÃÂ©ÃÂ ÃÂ»ÃÂ²ÃÂ£ÃÂÃÂÃÂÃÂÃÂÃÂ±ÃÂ ÃÂ¨ÃÂ£ÃÂ´ÃÂ¤ÃÂ', 'ÃÂ¦ÃÂ', 'ÃÂ³ÃÂ²ÃÂ¿ÃÂÃÂ£ÃÂ¤ÃÂ»ÃÂÃÂ£ÃÂÃÂ ÃÂ ÃÂ¿ÃÂÃÂ¼ÃÂÃÂÃÂÃÂÃÂÃÂµÃÂ©ÃÂÃÂÃÂ']) from system.numbers limit 10;
desc format(Values, '([123, 123])\n([321.321, 312])');
DROP DATABASE IF EXISTS test_8wxxg11u 
SELECT '24' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffe0::')))
SELECT 25
SELECT 'b', -x FROM primary_key WHERE -x < -2;
SELECT toFloat64(99.9999999) as x, toDecimal32(x, 7), toDecimal32(-x, 7), toDecimal64(x, 7), toDecimal64(-x, 7);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (28 < 79 AND 52 > 0 ? 28 : 0)), throwIf(last != (28 < 79 AND 52 > 0 ? least(79 - 1, 28 + 52 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(79) LIMIT 28, 52);
 SELECT table, format, bytes, rows, empty(exception), status, status = 'ParsingError' ? flush_time_microseconds = 0 : flush_time_microseconds > event_time_microseconds AS time_ok FROM system.asynchronous_insert_log WHERE ( database = 'test_7ewi5ikr' AND table = 't_async_inserts_logs' OR query ILIKE 'INSERT INTO FUNCTION%test_7ewi5ikr%t_async_inserts_logs%' ) AND data_kind = 'Parsed' ORDER BY table, status, format
alter table trunc attach partition id '3';
CREATE TABLE test_475D3924632A422E27586E79523531466135427D7A4629716470334C4F213E7A2620206B232E4C76(x UInt8) Engine=Memory;
CREATE TABLE test_3F7657663B5E6D436A27395A26323C5351582C5C4B36715C362B5E397E3F5656395F235A4C3B7225(x UInt8) Engine=Memory;
SELECT obj FROM t_json_15 ORDER BY obj.id FORMAT JSONEachRow
DROP DATABASE IF EXISTS test_uwoobcz9 
CREATE TABLE test_6859535A7E584E62372B207265405A297A71344E316D497B2335563E232453755F7D6A2E65297740(x UInt8) Engine=Memory;
SELECT CASE WHEN (col1 % 2) = 0 THEN toFixedString('foo', 16) WHEN 1 THEN toFixedString(col3, 16) ELSE toFixedString(col4, 16) END FROM multi_if_check;
INSERT INTO tmp SELECT 2, nm FROM mv;
SELECT number FROM (SELECT number FROM system.numbers LIMIT 999990) ORDER BY number ASC LIMIT 100, 65535 SETTINGS max_bytes_before_external_sort = 1000000 format Null 
ALTER TABLE uuid MODIFY COLUMN id1 UUID;
SELECT arrayLastOrNull(x -> 0, [1, 2, 3]);
SELECT * FROM test_table_2 LIMIT 100;
DROP TABLE index_append_test_test;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (85 < 11 AND 41 > 0 ? 85 : 0)), throwIf(last != (85 < 11 AND 41 > 0 ? least(11 - 1, 85 + 41 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(11) LIMIT 85, 41);
drop table aliases_lazyness
CREATE TABLE test_01193_18429.table_4_940 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE DATABASE IF NOT EXISTS test_12q9e4eq 
SELECT dictGet('01681_database_for_flat_dictionary.flat_dictionary_simple_key_simple_attributes', 'value_first', number) as value_first, dictGet('01681_database_for_flat_dictionary.flat_dictionary_simple_key_simple_attributes', 'value_second', number) as value_second FROM system.numbers LIMIT 4;
SELECT count(), sum(n), sum(m=1), sum(m=2), sum(m=3) FROM src;
INSERT INTO test_01193_18429.table_3_232 VALUES 
DROP TABLE 01753_dictionary_db.simple_key_complex_attributes_source_table;
SELECT * FROM test_02101 ORDER BY x
CREATE DATABASE IF NOT EXISTS test_nv69n6sb 
SELECT 'SELECT N == toInt16(-1)';
INSERT INTO test_01193_18429.table_4_702 VALUES 
CREATE TABLE test_01193_18429.table_4_760 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
ALTER TABLE concurrent_alter_mt_1 MODIFY COLUMN value1 Float64 SETTINGS replication_alter_partitions_sync=0
DROP DATABASE IF EXISTS test_kgmjnaj9 
CREATE TABLE test_01193_18429.table_5_271 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/02576_predicate_push_down_sorting_fix.sql from pid=1722' 
EXPLAIN QUERY TREE (Select sum(1 - number) from numbers(10));
CREATE TABLE test_01193_18429.table_3_255 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE DATABASE IF NOT EXISTS test_n57cmys7 
SELECT 'Running test stateless/02155_nested_lc_defalut_bug.sql from pid=1715' 
CREATE TABLE test_2F6D7B5343694B5F537E736E7665296933262F377C6D313C6424532349422A542224374447705B64(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toUInt8(2), toUInt8(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
DROP TABLE ddl_dictonary_test_source;
CREATE DATABASE IF NOT EXISTS test_4cqdqpqg 
SELECT -128, -32768, -128 = -32768, -128 != -32768, -128 < -32768, -128 <= -32768, -128 > -32768, -128 >= -32768, -32768 = -128, -32768 != -128, -32768 < -128, -32768 <= -128, -32768 > -128, -32768 >= -128 , toInt8(-128) = toInt16(-32768), toInt8(-128) != toInt16(-32768), toInt8(-128) < toInt16(-32768), toInt8(-128) <= toInt16(-32768), toInt8(-128) > toInt16(-32768), toInt8(-128) >= toInt16(-32768), toInt16(-32768) = toInt8(-128), toInt16(-32768) != toInt8(-128), toInt16(-32768) < toInt8(-128), toInt16(-32768) <= toInt8(-128), toInt16(-32768) > toInt8(-128), toInt16(-32768) >= toInt8(-128) , toInt8(-128) = toInt32(-32768), toInt8(-128) != toInt32(-32768), toInt8(-128) < toInt32(-32768), toInt8(-128) <= toInt32(-32768), toInt8(-128) > toInt32(-32768), toInt8(-128) >= toInt32(-32768), toInt32(-32768) = toInt8(-128), toInt32(-32768) != toInt8(-128), toInt32(-32768) < toInt8(-128), toInt32(-32768) <= toInt8(-128), toInt32(-32768) > toInt8(-128), toInt32(-32768) >= toInt8(-128) , toInt8(-128) = toInt64(-32768), toInt8(-128) != toInt64(-32768), toInt8(-128) < toInt64(-32768), toInt8(-128) <= toInt64(-32768), toInt8(-128) > toInt64(-32768), toInt8(-128) >= toInt64(-32768), toInt64(-32768) = toInt8(-128), toInt64(-32768) != toInt8(-128), toInt64(-32768) < toInt8(-128), toInt64(-32768) <= toInt8(-128), toInt64(-32768) > toInt8(-128), toInt64(-32768) >= toInt8(-128) , toInt16(-128) = toInt16(-32768), toInt16(-128) != toInt16(-32768), toInt16(-128) < toInt16(-32768), toInt16(-128) <= toInt16(-32768), toInt16(-128) > toInt16(-32768), toInt16(-128) >= toInt16(-32768), toInt16(-32768) = toInt16(-128), toInt16(-32768) != toInt16(-128), toInt16(-32768) < toInt16(-128), toInt16(-32768) <= toInt16(-128), toInt16(-32768) > toInt16(-128), toInt16(-32768) >= toInt16(-128) , toInt16(-128) = toInt32(-32768), toInt16(-128) != toInt32(-32768), toInt16(-128) < toInt32(-32768), toInt16(-128) <= toInt32(-32768), toInt16(-128) > toInt32(-32768), toInt16(-128) >= toInt32(-32768), toInt32(-32768) = toInt16(-128), toInt32(-32768) != toInt16(-128), toInt32(-32768) < toInt16(-128), toInt32(-32768) <= toInt16(-128), toInt32(-32768) > toInt16(-128), toInt32(-32768) >= toInt16(-128) , toInt16(-128) = toInt64(-32768), toInt16(-128) != toInt64(-32768), toInt16(-128) < toInt64(-32768), toInt16(-128) <= toInt64(-32768), toInt16(-128) > toInt64(-32768), toInt16(-128) >= toInt64(-32768), toInt64(-32768) = toInt16(-128), toInt64(-32768) != toInt16(-128), toInt64(-32768) < toInt16(-128), toInt64(-32768) <= toInt16(-128), toInt64(-32768) > toInt16(-128), toInt64(-32768) >= toInt16(-128) , toInt32(-128) = toInt16(-32768), toInt32(-128) != toInt16(-32768), toInt32(-128) < toInt16(-32768), toInt32(-128) <= toInt16(-32768), toInt32(-128) > toInt16(-32768), toInt32(-128) >= toInt16(-32768), toInt16(-32768) = toInt32(-128), toInt16(-32768) != toInt32(-128), toInt16(-32768) < toInt32(-128), toInt16(-32768) <= toInt32(-128), toInt16(-32768) > toInt32(-128), toInt16(-32768) >= toInt32(-128) , toInt32(-128) = toInt32(-32768), toInt32(-128) != toInt32(-32768), toInt32(-128) < toInt32(-32768), toInt32(-128) <= toInt32(-32768), toInt32(-128) > toInt32(-32768), toInt32(-128) >= toInt32(-32768), toInt32(-32768) = toInt32(-128), toInt32(-32768) != toInt32(-128), toInt32(-32768) < toInt32(-128), toInt32(-32768) <= toInt32(-128), toInt32(-32768) > toInt32(-128), toInt32(-32768) >= toInt32(-128) , toInt32(-128) = toInt64(-32768), toInt32(-128) != toInt64(-32768), toInt32(-128) < toInt64(-32768), toInt32(-128) <= toInt64(-32768), toInt32(-128) > toInt64(-32768), toInt32(-128) >= toInt64(-32768), toInt64(-32768) = toInt32(-128), toInt64(-32768) != toInt32(-128), toInt64(-32768) < toInt32(-128), toInt64(-32768) <= toInt32(-128), toInt64(-32768) > toInt32(-128), toInt64(-32768) >= toInt32(-128) , toInt64(-128) = toInt16(-32768), toInt64(-128) != toInt16(-32768), toInt64(-128) < toInt16(-32768), toInt64(-128) <= toInt16(-32768), toInt64(-128) > toInt16(-32768), toInt64(-128) >= toInt16(-32768), toInt16(-32768) = toInt64(-128), toInt16(-32768) != toInt64(-128), toInt16(-32768) < toInt64(-128), toInt16(-32768) <= toInt64(-128), toInt16(-32768) > toInt64(-128), toInt16(-32768) >= toInt64(-128) , toInt64(-128) = toInt32(-32768), toInt64(-128) != toInt32(-32768), toInt64(-128) < toInt32(-32768), toInt64(-128) <= toInt32(-32768), toInt64(-128) > toInt32(-32768), toInt64(-128) >= toInt32(-32768), toInt32(-32768) = toInt64(-128), toInt32(-32768) != toInt64(-128), toInt32(-32768) < toInt64(-128), toInt32(-32768) <= toInt64(-128), toInt32(-32768) > toInt64(-128), toInt32(-32768) >= toInt64(-128) , toInt64(-128) = toInt64(-32768), toInt64(-128) != toInt64(-32768), toInt64(-128) < toInt64(-32768), toInt64(-128) <= toInt64(-32768), toInt64(-128) > toInt64(-32768), toInt64(-128) >= toInt64(-32768), toInt64(-32768) = toInt64(-128), toInt64(-32768) != toInt64(-128), toInt64(-32768) < toInt64(-128), toInt64(-32768) <= toInt64(-128), toInt64(-32768) > toInt64(-128), toInt64(-32768) >= toInt64(-128) 
SELECT number, number % 2, sum(number) AS val FROM numbers(10) GROUP BY ROLLUP(number, number % 2) ORDER BY (number, number % 2, val) SETTINGS group_by_use_nulls=1;
INSERT INTO test_01193_18429.table_4_573 VALUES 
/* toStartOfFiveMinutes */ SELECT 'toStartOfFiveMinutes';
SELECT 'Running test stateless/00422_hash_function_constexpr.sql from pid=1713' 
CREATE TABLE test_01193_18429.table_10_155 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_9_687 VALUES 
CREATE TABLE test_01193_18429.table_6_308 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select a.1-1 FROM (SELECT (1, 2) AS a);
select -2 as offset, 'Hello' as s, subString(bin(s), offset), bin(bitSlice(s, offset));
SELECT count() FROM test WHERE x != '100000';
CREATE TABLE test_01193_18429.table_9_983 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_02908_r1_250 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_250', 'r1') ORDER BY tuple()
SELECT 'Running test stateless/02952_clickhouse_local_query_parameters_cli.sh from pid=1714' 
DROP DATABASE IF EXISTS test_33bn8z0i 
CREATE TABLE test_01193_18429.table_4_82 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE DATABASE IF NOT EXISTS test_l2yqkpn5 
SELECT multiIf((number % 2) = 0, [toFloat32(1), toFloat32(2)], (number % 3) = 0, [toInt8(2), toInt8(3)], [toInt32(3), toInt32(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE file (x UInt64) ENGINE = File(Native, 'test_xkfi2hhi/br.data.br')
SELECT 'Running test stateless/01499_json_named_tuples.sql from pid=1715' 
CREATE TABLE test_2D35645C4039222168392D2577785F217E27226247793B302158404F474E3C3D47463F5A252B577C(x UInt8) Engine=Memory;
SHOW TABLES ILIKE 'tES%';
SELECT multiIf((number % 2) = 0, [toUInt8(1), toUInt8(2)], (number % 3) = 0, [toFloat32(2), toFloat32(3)], [toInt32(3), toInt32(3)]) FROM system.numbers LIMIT 10;
create table dist_layer_01223 as data_01223 Engine=Distributed(test_shard_localhost, currentDatabase(), data_01223);
SELECT `val_right`, `right_table_local`.`id` AS `_--right_table.id` FROM `test_gvfp2afk`.`right_table_local`
CREATE TABLE test_7A4270527C2E5963314770375D505060595C33263A7E4371554E69506C536A783B6C4B60215A384E(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_4_388 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select null, isConstant(null), * from (select 2 x, null) a right join (select 3 y) b on y = x;
ATTACH TABLE buffer;
alter table many_mutations delete where y = 465 * 2 settings mutations_sync = 0;
SELECT hex(sipHash128());
CREATE DATABASE IF NOT EXISTS test_hzdyahun 
SELECT 128, 65536, 128 = 65536, 128 != 65536, 128 < 65536, 128 <= 65536, 128 > 65536, 128 >= 65536, 65536 = 128, 65536 != 128, 65536 < 128, 65536 <= 128, 65536 > 128, 65536 >= 128 , toUInt8(128) = toUInt32(65536), toUInt8(128) != toUInt32(65536), toUInt8(128) < toUInt32(65536), toUInt8(128) <= toUInt32(65536), toUInt8(128) > toUInt32(65536), toUInt8(128) >= toUInt32(65536), toUInt32(65536) = toUInt8(128), toUInt32(65536) != toUInt8(128), toUInt32(65536) < toUInt8(128), toUInt32(65536) <= toUInt8(128), toUInt32(65536) > toUInt8(128), toUInt32(65536) >= toUInt8(128) , toUInt8(128) = toInt32(65536), toUInt8(128) != toInt32(65536), toUInt8(128) < toInt32(65536), toUInt8(128) <= toInt32(65536), toUInt8(128) > toInt32(65536), toUInt8(128) >= toInt32(65536), toInt32(65536) = toUInt8(128), toInt32(65536) != toUInt8(128), toInt32(65536) < toUInt8(128), toInt32(65536) <= toUInt8(128), toInt32(65536) > toUInt8(128), toInt32(65536) >= toUInt8(128) , toUInt8(128) = toUInt64(65536), toUInt8(128) != toUInt64(65536), toUInt8(128) < toUInt64(65536), toUInt8(128) <= toUInt64(65536), toUInt8(128) > toUInt64(65536), toUInt8(128) >= toUInt64(65536), toUInt64(65536) = toUInt8(128), toUInt64(65536) != toUInt8(128), toUInt64(65536) < toUInt8(128), toUInt64(65536) <= toUInt8(128), toUInt64(65536) > toUInt8(128), toUInt64(65536) >= toUInt8(128) , toUInt8(128) = toInt64(65536), toUInt8(128) != toInt64(65536), toUInt8(128) < toInt64(65536), toUInt8(128) <= toInt64(65536), toUInt8(128) > toInt64(65536), toUInt8(128) >= toInt64(65536), toInt64(65536) = toUInt8(128), toInt64(65536) != toUInt8(128), toInt64(65536) < toUInt8(128), toInt64(65536) <= toUInt8(128), toInt64(65536) > toUInt8(128), toInt64(65536) >= toUInt8(128) , toUInt16(128) = toUInt32(65536), toUInt16(128) != toUInt32(65536), toUInt16(128) < toUInt32(65536), toUInt16(128) <= toUInt32(65536), toUInt16(128) > toUInt32(65536), toUInt16(128) >= toUInt32(65536), toUInt32(65536) = toUInt16(128), toUInt32(65536) != toUInt16(128), toUInt32(65536) < toUInt16(128), toUInt32(65536) <= toUInt16(128), toUInt32(65536) > toUInt16(128), toUInt32(65536) >= toUInt16(128) , toUInt16(128) = toInt32(65536), toUInt16(128) != toInt32(65536), toUInt16(128) < toInt32(65536), toUInt16(128) <= toInt32(65536), toUInt16(128) > toInt32(65536), toUInt16(128) >= toInt32(65536), toInt32(65536) = toUInt16(128), toInt32(65536) != toUInt16(128), toInt32(65536) < toUInt16(128), toInt32(65536) <= toUInt16(128), toInt32(65536) > toUInt16(128), toInt32(65536) >= toUInt16(128) , toUInt16(128) = toUInt64(65536), toUInt16(128) != toUInt64(65536), toUInt16(128) < toUInt64(65536), toUInt16(128) <= toUInt64(65536), toUInt16(128) > toUInt64(65536), toUInt16(128) >= toUInt64(65536), toUInt64(65536) = toUInt16(128), toUInt64(65536) != toUInt16(128), toUInt64(65536) < toUInt16(128), toUInt64(65536) <= toUInt16(128), toUInt64(65536) > toUInt16(128), toUInt64(65536) >= toUInt16(128) , toUInt16(128) = toInt64(65536), toUInt16(128) != toInt64(65536), toUInt16(128) < toInt64(65536), toUInt16(128) <= toInt64(65536), toUInt16(128) > toInt64(65536), toUInt16(128) >= toInt64(65536), toInt64(65536) = toUInt16(128), toInt64(65536) != toUInt16(128), toInt64(65536) < toUInt16(128), toInt64(65536) <= toUInt16(128), toInt64(65536) > toUInt16(128), toInt64(65536) >= toUInt16(128) , toInt16(128) = toUInt32(65536), toInt16(128) != toUInt32(65536), toInt16(128) < toUInt32(65536), toInt16(128) <= toUInt32(65536), toInt16(128) > toUInt32(65536), toInt16(128) >= toUInt32(65536), toUInt32(65536) = toInt16(128), toUInt32(65536) != toInt16(128), toUInt32(65536) < toInt16(128), toUInt32(65536) <= toInt16(128), toUInt32(65536) > toInt16(128), toUInt32(65536) >= toInt16(128) , toInt16(128) = toInt32(65536), toInt16(128) != toInt32(65536), toInt16(128) < toInt32(65536), toInt16(128) <= toInt32(65536), toInt16(128) > toInt32(65536), toInt16(128) >= toInt32(65536), toInt32(65536) = toInt16(128), toInt32(65536) != toInt16(128), toInt32(65536) < toInt16(128), toInt32(65536) <= toInt16(128), toInt32(65536) > toInt16(128), toInt32(65536) >= toInt16(128) , toInt16(128) = toUInt64(65536), toInt16(128) != toUInt64(65536), toInt16(128) < toUInt64(65536), toInt16(128) <= toUInt64(65536), toInt16(128) > toUInt64(65536), toInt16(128) >= toUInt64(65536), toUInt64(65536) = toInt16(128), toUInt64(65536) != toInt16(128), toUInt64(65536) < toInt16(128), toUInt64(65536) <= toInt16(128), toUInt64(65536) > toInt16(128), toUInt64(65536) >= toInt16(128) , toInt16(128) = toInt64(65536), toInt16(128) != toInt64(65536), toInt16(128) < toInt64(65536), toInt16(128) <= toInt64(65536), toInt16(128) > toInt64(65536), toInt16(128) >= toInt64(65536), toInt64(65536) = toInt16(128), toInt64(65536) != toInt16(128), toInt64(65536) < toInt16(128), toInt64(65536) <= toInt16(128), toInt64(65536) > toInt16(128), toInt64(65536) >= toInt16(128) , toUInt32(128) = toUInt32(65536), toUInt32(128) != toUInt32(65536), toUInt32(128) < toUInt32(65536), toUInt32(128) <= toUInt32(65536), toUInt32(128) > toUInt32(65536), toUInt32(128) >= toUInt32(65536), toUInt32(65536) = toUInt32(128), toUInt32(65536) != toUInt32(128), toUInt32(65536) < toUInt32(128), toUInt32(65536) <= toUInt32(128), toUInt32(65536) > toUInt32(128), toUInt32(65536) >= toUInt32(128) , toUInt32(128) = toInt32(65536), toUInt32(128) != toInt32(65536), toUInt32(128) < toInt32(65536), toUInt32(128) <= toInt32(65536), toUInt32(128) > toInt32(65536), toUInt32(128) >= toInt32(65536), toInt32(65536) = toUInt32(128), toInt32(65536) != toUInt32(128), toInt32(65536) < toUInt32(128), toInt32(65536) <= toUInt32(128), toInt32(65536) > toUInt32(128), toInt32(65536) >= toUInt32(128) , toUInt32(128) = toUInt64(65536), toUInt32(128) != toUInt64(65536), toUInt32(128) < toUInt64(65536), toUInt32(128) <= toUInt64(65536), toUInt32(128) > toUInt64(65536), toUInt32(128) >= toUInt64(65536), toUInt64(65536) = toUInt32(128), toUInt64(65536) != toUInt32(128), toUInt64(65536) < toUInt32(128), toUInt64(65536) <= toUInt32(128), toUInt64(65536) > toUInt32(128), toUInt64(65536) >= toUInt32(128) , toUInt32(128) = toInt64(65536), toUInt32(128) != toInt64(65536), toUInt32(128) < toInt64(65536), toUInt32(128) <= toInt64(65536), toUInt32(128) > toInt64(65536), toUInt32(128) >= toInt64(65536), toInt64(65536) = toUInt32(128), toInt64(65536) != toUInt32(128), toInt64(65536) < toUInt32(128), toInt64(65536) <= toUInt32(128), toInt64(65536) > toUInt32(128), toInt64(65536) >= toUInt32(128) , toInt32(128) = toUInt32(65536), toInt32(128) != toUInt32(65536), toInt32(128) < toUInt32(65536), toInt32(128) <= toUInt32(65536), toInt32(128) > toUInt32(65536), toInt32(128) >= toUInt32(65536), toUInt32(65536) = toInt32(128), toUInt32(65536) != toInt32(128), toUInt32(65536) < toInt32(128), toUInt32(65536) <= toInt32(128), toUInt32(65536) > toInt32(128), toUInt32(65536) >= toInt32(128) , toInt32(128) = toInt32(65536), toInt32(128) != toInt32(65536), toInt32(128) < toInt32(65536), toInt32(128) <= toInt32(65536), toInt32(128) > toInt32(65536), toInt32(128) >= toInt32(65536), toInt32(65536) = toInt32(128), toInt32(65536) != toInt32(128), toInt32(65536) < toInt32(128), toInt32(65536) <= toInt32(128), toInt32(65536) > toInt32(128), toInt32(65536) >= toInt32(128) , toInt32(128) = toUInt64(65536), toInt32(128) != toUInt64(65536), toInt32(128) < toUInt64(65536), toInt32(128) <= toUInt64(65536), toInt32(128) > toUInt64(65536), toInt32(128) >= toUInt64(65536), toUInt64(65536) = toInt32(128), toUInt64(65536) != toInt32(128), toUInt64(65536) < toInt32(128), toUInt64(65536) <= toInt32(128), toUInt64(65536) > toInt32(128), toUInt64(65536) >= toInt32(128) , toInt32(128) = toInt64(65536), toInt32(128) != toInt64(65536), toInt32(128) < toInt64(65536), toInt32(128) <= toInt64(65536), toInt32(128) > toInt64(65536), toInt32(128) >= toInt64(65536), toInt64(65536) = toInt32(128), toInt64(65536) != toInt32(128), toInt64(65536) < toInt32(128), toInt64(65536) <= toInt32(128), toInt64(65536) > toInt32(128), toInt64(65536) >= toInt32(128) , toUInt64(128) = toUInt32(65536), toUInt64(128) != toUInt32(65536), toUInt64(128) < toUInt32(65536), toUInt64(128) <= toUInt32(65536), toUInt64(128) > toUInt32(65536), toUInt64(128) >= toUInt32(65536), toUInt32(65536) = toUInt64(128), toUInt32(65536) != toUInt64(128), toUInt32(65536) < toUInt64(128), toUInt32(65536) <= toUInt64(128), toUInt32(65536) > toUInt64(128), toUInt32(65536) >= toUInt64(128) , toUInt64(128) = toInt32(65536), toUInt64(128) != toInt32(65536), toUInt64(128) < toInt32(65536), toUInt64(128) <= toInt32(65536), toUInt64(128) > toInt32(65536), toUInt64(128) >= toInt32(65536), toInt32(65536) = toUInt64(128), toInt32(65536) != toUInt64(128), toInt32(65536) < toUInt64(128), toInt32(65536) <= toUInt64(128), toInt32(65536) > toUInt64(128), toInt32(65536) >= toUInt64(128) , toUInt64(128) = toUInt64(65536), toUInt64(128) != toUInt64(65536), toUInt64(128) < toUInt64(65536), toUInt64(128) <= toUInt64(65536), toUInt64(128) > toUInt64(65536), toUInt64(128) >= toUInt64(65536), toUInt64(65536) = toUInt64(128), toUInt64(65536) != toUInt64(128), toUInt64(65536) < toUInt64(128), toUInt64(65536) <= toUInt64(128), toUInt64(65536) > toUInt64(128), toUInt64(65536) >= toUInt64(128) , toUInt64(128) = toInt64(65536), toUInt64(128) != toInt64(65536), toUInt64(128) < toInt64(65536), toUInt64(128) <= toInt64(65536), toUInt64(128) > toInt64(65536), toUInt64(128) >= toInt64(65536), toInt64(65536) = toUInt64(128), toInt64(65536) != toUInt64(128), toInt64(65536) < toUInt64(128), toInt64(65536) <= toUInt64(128), toInt64(65536) > toUInt64(128), toInt64(65536) >= toUInt64(128) , toInt64(128) = toUInt32(65536), toInt64(128) != toUInt32(65536), toInt64(128) < toUInt32(65536), toInt64(128) <= toUInt32(65536), toInt64(128) > toUInt32(65536), toInt64(128) >= toUInt32(65536), toUInt32(65536) = toInt64(128), toUInt32(65536) != toInt64(128), toUInt32(65536) < toInt64(128), toUInt32(65536) <= toInt64(128), toUInt32(65536) > toInt64(128), toUInt32(65536) >= toInt64(128) , toInt64(128) = toInt32(65536), toInt64(128) != toInt32(65536), toInt64(128) < toInt32(65536), toInt64(128) <= toInt32(65536), toInt64(128) > toInt32(65536), toInt64(128) >= toInt32(65536), toInt32(65536) = toInt64(128), toInt32(65536) != toInt64(128), toInt32(65536) < toInt64(128), toInt32(65536) <= toInt64(128), toInt32(65536) > toInt64(128), toInt32(65536) >= toInt64(128) , toInt64(128) = toUInt64(65536), toInt64(128) != toUInt64(65536), toInt64(128) < toUInt64(65536), toInt64(128) <= toUInt64(65536), toInt64(128) > toUInt64(65536), toInt64(128) >= toUInt64(65536), toUInt64(65536) = toInt64(128), toUInt64(65536) != toInt64(128), toUInt64(65536) < toInt64(128), toUInt64(65536) <= toInt64(128), toUInt64(65536) > toInt64(128), toUInt64(65536) >= toInt64(128) , toInt64(128) = toInt64(65536), toInt64(128) != toInt64(65536), toInt64(128) < toInt64(65536), toInt64(128) <= toInt64(65536), toInt64(128) > toInt64(65536), toInt64(128) >= toInt64(65536), toInt64(65536) = toInt64(128), toInt64(65536) != toInt64(128), toInt64(65536) < toInt64(128), toInt64(65536) <= toInt64(128), toInt64(65536) > toInt64(128), toInt64(65536) >= toInt64(128) 
SELECT throwIf((SELECT sum(nm) FROM mv) != 154) FORMAT Null;
INSERT INTO test_tuple VALUES 
select t1.id, t2.id FROM test_table_1 AS t1 RIGHT JOIN test_table_2 AS t2 ON (t1.id = t2.id) WHERE (acos(t2.id) <> atan(t1.id)) and (not (acos(t2.id) <> atan(t1.id)));
CREATE ROW POLICY 02559_filter_2 ON test_02559 USING id2<=2 AS restrictive TO ALL;
select * from data_01292 where key > 0;
CREATE TABLE test_6C73356D69607B4E71575C31617C683B324C356D375A334530713C3B74686E26453E737B482D7378(x UInt8) Engine=Memory;
SELECT x, lc, toTypeName(lc), r.lc, toTypeName(r.lc) FROM t AS l RIGHT JOIN nr AS r USING (lc) ORDER BY x SETTINGS allow_experimental_analyzer = 1;
DROP TABLE IF EXISTS mt3;
CREATE TABLE test_01193_18429.table_9_601 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select 'Values';
EXPLAIN SYNTAX (SELECT sum(2 + float64) From test_table);
optimize table nested_map_multiple_values;
SELECT count() > 0 FROM system.text_log WHERE yesterday() <= event_date AND query_id in (select query_id from system.query_log where current_database=currentDatabase() AND log_comment='0_f621c4f2-4da7-4a7c-bb6d-052c442d0f7f') AND level = 'Information' AND message ILIKE '%Disabling ''use_hedged_requests'' in favor of ''allow_experimental_parallel_reading_from_replicas''%' SETTINGS allow_experimental_parallel_reading_from_replicas=0;
INSERT INTO r3 SELECT 2 % 10 = 3 ? 2 - 1 : 2
SELECT arrayIntersect([], []);
SYSTEM STOP MERGES
drop table data_02228;
INSERT INTO test_02908_r1_260 SELECT rand64() FROM numbers(5);
SELECT dictGetStringOrDefault('db_01268.dict2', 'region_name', toUInt64(3), 'NONE');
CREATE TABLE test_01193_18429.table_6_701 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
ALTER TABLE dst_13 DROP PARTITION 2
SELECT 'Running test stateless/01134_max_rows_to_group_by.sql from pid=1722' 
SELECT t1.key, t2.key, length(t1.s), length(t2.s) FROM t1 AS t1 ALL INNER JOIN tn2 AS t2 ON t1.key == t2.key ORDER BY t1.key, t2.key;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), DT > N as r FORMAT CSV;
CREATE DATABASE IF NOT EXISTS test_lhapbk9a 
SELECT min(x), max(x) FROM (SELECT arrayJoin([toFloat32(0.0), nan, toFloat32(1.0), toFloat32(-1.0)]) AS x);
SELECT 'Inserted';
DROP TABLE parquet_types6
CREATE TABLE u64 (x UInt64) ENGINE = Memory;
CREATE TABLE test_01193_18429.table_9_710 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT count() > 0 FROM (SELECT * FROM system.columns LIMIT 10);
select * from numbers(1) t1 all right join numbers(1) t2 using number;
insert into summing_merge_tree_aggregate_function select 1, quantileState(0.1)(0.1);
select * from file(02475_data.bsonEachRow, auto, 'nested Array(Tuple(Map(String, Array(UInt32)), Array(Map(String, Tuple(Array(UInt64), Array(UInt64))))))')
CREATE DATABASE IF NOT EXISTS test_ys4n7oec 
select x3, x2 from test group by x3, x2 order by x3;
ATTACH TABLE t_source_part_is_intact;
INSERT INTO hypothesis_test_test2 VALUES 
CREATE TABLE t_dst (`id` UInt32, `v` UInt32) ENGINE = MergeTree PARTITION BY id ORDER BY id SETTINGS index_granularity = 5492, min_bytes_for_wide_part = 208180410, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 19594, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 4034710663, index_granularity_bytes = 15219164, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 15003, primary_key_compress_block_size = 61474
CREATE TABLE test_01193_18429.table_10_215 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO tMM SELECT toDateTime('2020-09-01 00:00:00', 'Asia/Istanbul') + number*60, number FROM numbers(5000);
INSERT INTO buffer_00753 VALUES 
SELECT materialize(toInt8(0)) AS x, toFloat32(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
DROP DATABASE IF EXISTS test_ft363ahb 
select v, variantElement(v, 'UInt8') from format(Values, 'v Variant(String, UInt8, Int64)', '(NULL), (''string''), (-1), (0), (10000000000)') format Values;
DROP DATABASE IF EXISTS test_ka6z1ciu 
select (1 ? (toUInt64(0) as i) : toUInt16(1)) = i;
insert into alias_2__fuzz_25 (dt, col, col2, col3) values 
drop table if exists test_02302;
CREATE DATABASE IF NOT EXISTS test_j3ibxf56 
select hex(sipHash128ReferenceKeyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3)));
CREATE INDEX idx_tab2_4 ON tab2 (col3 DESC,col4);
INSERT INTO test_01193_18429.table_4_784 VALUES 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), toUInt16(1) <= N as r FORMAT CSV;
CREATE TABLE test_table (`i` Int64) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 59309, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 20300, prefer_fetch_merged_part_size_threshold = 4769847376, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 5197733267, index_granularity_bytes = 3703391, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 13923, primary_key_compress_block_size = 22846
CREATE TABLE test_32537B7A58697A3E40564E52315051575E532557283837785560597C5B345B42492B652D59495E79(x UInt8) Engine=Memory;
SELECT s, replaceAll(s, '_', 'o') AS a, REGEXP_REPLACE(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['.', '_.']) AS s);
CREATE TABLE sDD(d UInt64,a Int) ENGINE = MergeTree PARTITION BY toYYYYMM(toDate(intDiv(d,1000), 'Asia/Istanbul')) ORDER BY tuple() SETTINGS index_granularity = 8192;
alter table many_mutations delete where y = 905 * 2 settings mutations_sync = 0;
CREATE TABLE test_667A2E34662C6E20357A3A2A6A3E6A3A4D29456E544571585E6B403D3E2E6071304558666C654865(x UInt8) Engine=Memory;
SELECT LinfDistance([5, 4, 3], v) FROM vec1;
SELECT [-1, 1 + 1];
CREATE TABLE test_776C37263F226A5B473745612A2C4B22793F733D776B206329373220544F704A4D533D4654557A70(x UInt8) Engine=Memory;
select toDateTime64(toDateTime(1, 'Asia/Istanbul'), 2);
SELECT 'Running test stateless/02232_partition_pruner_single_point.sql from pid=1714' 
INSERT INTO test_01193_18429.table_2_462 VALUES 
SELECT COUNT() FROM bloom_filter_types_test WHERE u64 = 1 SETTINGS max_rows_to_read = 6;
select hasSubstr([], [NULL]);
select concat('name_', toString(number)) as name, number from numbers(3) format JSONObjectEachRow;
INSERT INTO data SELECT 1;
select length(topK(20)(number)) from remote('127.{1,1}', currentDatabase(), data_01409);
select 1 = multiSearchAny(materialize('abcdefgh'), ['fg']);
CREATE TABLE t (`x` UInt8, `s` String) ENGINE = MergeTree ORDER BY x SETTINGS number_of_free_entries_in_pool_to_execute_mutation = 15, index_granularity = 14966, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 2517, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 51, min_merge_bytes_to_use_direct_io = 2784666332, index_granularity_bytes = 28847937, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 83733, primary_key_compress_block_size = 41154
CREATE INDEX idx_tab4_0 ON tab4 (col1 DESC,col3,col4 DESC);
SELECT 'Running test stateless/01600_remerge_sort_lowered_memory_bytes_ratio.sql from pid=1722' 
SELECT '9223372036854775808', '18446744073709551616.000000000', 9223372036854775808 = 18446744073709551616.000000000, 9223372036854775808 != 18446744073709551616.000000000, 9223372036854775808 < 18446744073709551616.000000000, 9223372036854775808 <= 18446744073709551616.000000000, 9223372036854775808 > 18446744073709551616.000000000, 9223372036854775808 >= 18446744073709551616.000000000, 18446744073709551616.000000000 = 9223372036854775808, 18446744073709551616.000000000 != 9223372036854775808, 18446744073709551616.000000000 < 9223372036854775808, 18446744073709551616.000000000 <= 9223372036854775808, 18446744073709551616.000000000 > 9223372036854775808, 18446744073709551616.000000000 >= 9223372036854775808 , toUInt64(9223372036854775808) = 18446744073709551616.000000000, toUInt64(9223372036854775808) != 18446744073709551616.000000000, toUInt64(9223372036854775808) < 18446744073709551616.000000000, toUInt64(9223372036854775808) <= 18446744073709551616.000000000, toUInt64(9223372036854775808) > 18446744073709551616.000000000, toUInt64(9223372036854775808) >= 18446744073709551616.000000000, 18446744073709551616.000000000 = toUInt64(9223372036854775808), 18446744073709551616.000000000 != toUInt64(9223372036854775808), 18446744073709551616.000000000 < toUInt64(9223372036854775808), 18446744073709551616.000000000 <= toUInt64(9223372036854775808), 18446744073709551616.000000000 > toUInt64(9223372036854775808), 18446744073709551616.000000000 >= toUInt64(9223372036854775808) ;
SELECT 'Non-const point; No holes';
SELECT nb.t.t FROM na FULL JOIN nb USING (t.t);
desc file('test_02149_schema_inference_test_2lktp9cn.data', 'Regexp') settings format_regexp='^Line: value_1=(.+?), value_2=(.+?), value_3=(.+?)', format_regexp_escaping_rule='JSON'
CREATE TABLE test_01193_18429.table_6_346 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT * FROM tuples
drop table if exists dist_background_insert_sleep_time_ms;
CREATE TABLE test_01193_18429.table_5_916 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_403D29404E2454275558232078406F483C6D7246482558472227613F57633E252944603977463639(x UInt8) Engine=Memory;
CREATE TABLE test_226E4B6D713349682A2361624A7A3658723470362E3D2460565B5B407A36282B39552C4D2C7E7279(x UInt8) Engine=Memory;
ALTER TABLE alter_00121 DROP COLUMN x;
SELECT countIf(explain like '%Algorithm: GraceHashJoin%'), countIf(explain like '%Algorithm: HashJoin%') FROM ( EXPLAIN PLAN actions = 1 SELECT * FROM ( SELECT number AS key, number * 10 AS key2 FROM numbers_mt(10) ) AS t1 JOIN ( SELECT k AS key, k + 100 AS key2 FROM t2 ) AS t2 ON t1.key = t2.key OR t1.key2 = t2.key2 );
SELECT CASE WHEN 1 THEN toFixedString(col2, 16) WHEN 1 THEN toFixedString('bar', 16) ELSE col4 END FROM multi_if_check;
SELECT round(quantileDD(0.01, 0.99)(-number), 2) FROM numbers(1, 500);
INSERT INTO test_01193_18429.table_4_102 VALUES 
CREATE TABLE test_69214A62374F2563712D58405B655A59216E5D6C2B5B7E58785C4C537E43357B7065224F4E6F215E(x UInt8) Engine=Memory;
SELECT toDateTime(10000, 'Asia/Calcutta');
SELECT toFloat64(NULL, NULL, NULL);
select positionUTF8('' as h, lowerUTF8('ÃÂ°ÃÂÃÂ²' as n)) = positionCaseInsensitiveUTF8(h, n);
SELECT quantileExactHigh(-1);
alter table many_mutations delete where y = 568 * 2 settings mutations_sync = 0;
DROP TABLE IF EXISTS compression_codec_tiny_log;
SELECT COUNT() FROM system.mutations WHERE table='concurrent_mutate_mt_1' and is_done=0
drop table if exists t_different_dbs;
SELECT subtractDays(NULL, NULL);
CREATE TABLE test_01193_18429.table_6_124 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Running test stateless/00960_eval_ml_method_const.sql from pid=1724' 
SELECT toIPv4OrZero(NULL, NULL);
SELECT 'Running test stateless/02421_truncate_isolation_no_merges.sh from pid=1713' 
ALTER TABLE tab MATERIALIZE COLUMN dflt;
SELECT 'Running test stateless/02013_zlib_read_after_eof.sh from pid=1713' 
drop table if exists map_test;
select 0 = multiSearchAny(materialize('abc'), ['bcde']);
CREATE DATABASE IF NOT EXISTS test_cucqvwhf 
SELECT -1, 127, -1 = 127, -1 != 127, -1 < 127, -1 <= 127, -1 > 127, -1 >= 127, 127 = -1, 127 != -1, 127 < -1, 127 <= -1, 127 > -1, 127 >= -1 , toInt8(-1) = toUInt8(127), toInt8(-1) != toUInt8(127), toInt8(-1) < toUInt8(127), toInt8(-1) <= toUInt8(127), toInt8(-1) > toUInt8(127), toInt8(-1) >= toUInt8(127), toUInt8(127) = toInt8(-1), toUInt8(127) != toInt8(-1), toUInt8(127) < toInt8(-1), toUInt8(127) <= toInt8(-1), toUInt8(127) > toInt8(-1), toUInt8(127) >= toInt8(-1) , toInt8(-1) = toInt8(127), toInt8(-1) != toInt8(127), toInt8(-1) < toInt8(127), toInt8(-1) <= toInt8(127), toInt8(-1) > toInt8(127), toInt8(-1) >= toInt8(127), toInt8(127) = toInt8(-1), toInt8(127) != toInt8(-1), toInt8(127) < toInt8(-1), toInt8(127) <= toInt8(-1), toInt8(127) > toInt8(-1), toInt8(127) >= toInt8(-1) , toInt8(-1) = toUInt16(127), toInt8(-1) != toUInt16(127), toInt8(-1) < toUInt16(127), toInt8(-1) <= toUInt16(127), toInt8(-1) > toUInt16(127), toInt8(-1) >= toUInt16(127), toUInt16(127) = toInt8(-1), toUInt16(127) != toInt8(-1), toUInt16(127) < toInt8(-1), toUInt16(127) <= toInt8(-1), toUInt16(127) > toInt8(-1), toUInt16(127) >= toInt8(-1) , toInt8(-1) = toInt16(127), toInt8(-1) != toInt16(127), toInt8(-1) < toInt16(127), toInt8(-1) <= toInt16(127), toInt8(-1) > toInt16(127), toInt8(-1) >= toInt16(127), toInt16(127) = toInt8(-1), toInt16(127) != toInt8(-1), toInt16(127) < toInt8(-1), toInt16(127) <= toInt8(-1), toInt16(127) > toInt8(-1), toInt16(127) >= toInt8(-1) , toInt8(-1) = toUInt32(127), toInt8(-1) != toUInt32(127), toInt8(-1) < toUInt32(127), toInt8(-1) <= toUInt32(127), toInt8(-1) > toUInt32(127), toInt8(-1) >= toUInt32(127), toUInt32(127) = toInt8(-1), toUInt32(127) != toInt8(-1), toUInt32(127) < toInt8(-1), toUInt32(127) <= toInt8(-1), toUInt32(127) > toInt8(-1), toUInt32(127) >= toInt8(-1) , toInt8(-1) = toInt32(127), toInt8(-1) != toInt32(127), toInt8(-1) < toInt32(127), toInt8(-1) <= toInt32(127), toInt8(-1) > toInt32(127), toInt8(-1) >= toInt32(127), toInt32(127) = toInt8(-1), toInt32(127) != toInt8(-1), toInt32(127) < toInt8(-1), toInt32(127) <= toInt8(-1), toInt32(127) > toInt8(-1), toInt32(127) >= toInt8(-1) , toInt8(-1) = toUInt64(127), toInt8(-1) != toUInt64(127), toInt8(-1) < toUInt64(127), toInt8(-1) <= toUInt64(127), toInt8(-1) > toUInt64(127), toInt8(-1) >= toUInt64(127), toUInt64(127) = toInt8(-1), toUInt64(127) != toInt8(-1), toUInt64(127) < toInt8(-1), toUInt64(127) <= toInt8(-1), toUInt64(127) > toInt8(-1), toUInt64(127) >= toInt8(-1) , toInt8(-1) = toInt64(127), toInt8(-1) != toInt64(127), toInt8(-1) < toInt64(127), toInt8(-1) <= toInt64(127), toInt8(-1) > toInt64(127), toInt8(-1) >= toInt64(127), toInt64(127) = toInt8(-1), toInt64(127) != toInt8(-1), toInt64(127) < toInt8(-1), toInt64(127) <= toInt8(-1), toInt64(127) > toInt8(-1), toInt64(127) >= toInt8(-1) , toInt16(-1) = toUInt8(127), toInt16(-1) != toUInt8(127), toInt16(-1) < toUInt8(127), toInt16(-1) <= toUInt8(127), toInt16(-1) > toUInt8(127), toInt16(-1) >= toUInt8(127), toUInt8(127) = toInt16(-1), toUInt8(127) != toInt16(-1), toUInt8(127) < toInt16(-1), toUInt8(127) <= toInt16(-1), toUInt8(127) > toInt16(-1), toUInt8(127) >= toInt16(-1) , toInt16(-1) = toInt8(127), toInt16(-1) != toInt8(127), toInt16(-1) < toInt8(127), toInt16(-1) <= toInt8(127), toInt16(-1) > toInt8(127), toInt16(-1) >= toInt8(127), toInt8(127) = toInt16(-1), toInt8(127) != toInt16(-1), toInt8(127) < toInt16(-1), toInt8(127) <= toInt16(-1), toInt8(127) > toInt16(-1), toInt8(127) >= toInt16(-1) , toInt16(-1) = toUInt16(127), toInt16(-1) != toUInt16(127), toInt16(-1) < toUInt16(127), toInt16(-1) <= toUInt16(127), toInt16(-1) > toUInt16(127), toInt16(-1) >= toUInt16(127), toUInt16(127) = toInt16(-1), toUInt16(127) != toInt16(-1), toUInt16(127) < toInt16(-1), toUInt16(127) <= toInt16(-1), toUInt16(127) > toInt16(-1), toUInt16(127) >= toInt16(-1) , toInt16(-1) = toInt16(127), toInt16(-1) != toInt16(127), toInt16(-1) < toInt16(127), toInt16(-1) <= toInt16(127), toInt16(-1) > toInt16(127), toInt16(-1) >= toInt16(127), toInt16(127) = toInt16(-1), toInt16(127) != toInt16(-1), toInt16(127) < toInt16(-1), toInt16(127) <= toInt16(-1), toInt16(127) > toInt16(-1), toInt16(127) >= toInt16(-1) , toInt16(-1) = toUInt32(127), toInt16(-1) != toUInt32(127), toInt16(-1) < toUInt32(127), toInt16(-1) <= toUInt32(127), toInt16(-1) > toUInt32(127), toInt16(-1) >= toUInt32(127), toUInt32(127) = toInt16(-1), toUInt32(127) != toInt16(-1), toUInt32(127) < toInt16(-1), toUInt32(127) <= toInt16(-1), toUInt32(127) > toInt16(-1), toUInt32(127) >= toInt16(-1) , toInt16(-1) = toInt32(127), toInt16(-1) != toInt32(127), toInt16(-1) < toInt32(127), toInt16(-1) <= toInt32(127), toInt16(-1) > toInt32(127), toInt16(-1) >= toInt32(127), toInt32(127) = toInt16(-1), toInt32(127) != toInt16(-1), toInt32(127) < toInt16(-1), toInt32(127) <= toInt16(-1), toInt32(127) > toInt16(-1), toInt32(127) >= toInt16(-1) , toInt16(-1) = toUInt64(127), toInt16(-1) != toUInt64(127), toInt16(-1) < toUInt64(127), toInt16(-1) <= toUInt64(127), toInt16(-1) > toUInt64(127), toInt16(-1) >= toUInt64(127), toUInt64(127) = toInt16(-1), toUInt64(127) != toInt16(-1), toUInt64(127) < toInt16(-1), toUInt64(127) <= toInt16(-1), toUInt64(127) > toInt16(-1), toUInt64(127) >= toInt16(-1) , toInt16(-1) = toInt64(127), toInt16(-1) != toInt64(127), toInt16(-1) < toInt64(127), toInt16(-1) <= toInt64(127), toInt16(-1) > toInt64(127), toInt16(-1) >= toInt64(127), toInt64(127) = toInt16(-1), toInt64(127) != toInt16(-1), toInt64(127) < toInt16(-1), toInt64(127) <= toInt16(-1), toInt64(127) > toInt16(-1), toInt64(127) >= toInt16(-1) , toInt32(-1) = toUInt8(127), toInt32(-1) != toUInt8(127), toInt32(-1) < toUInt8(127), toInt32(-1) <= toUInt8(127), toInt32(-1) > toUInt8(127), toInt32(-1) >= toUInt8(127), toUInt8(127) = toInt32(-1), toUInt8(127) != toInt32(-1), toUInt8(127) < toInt32(-1), toUInt8(127) <= toInt32(-1), toUInt8(127) > toInt32(-1), toUInt8(127) >= toInt32(-1) , toInt32(-1) = toInt8(127), toInt32(-1) != toInt8(127), toInt32(-1) < toInt8(127), toInt32(-1) <= toInt8(127), toInt32(-1) > toInt8(127), toInt32(-1) >= toInt8(127), toInt8(127) = toInt32(-1), toInt8(127) != toInt32(-1), toInt8(127) < toInt32(-1), toInt8(127) <= toInt32(-1), toInt8(127) > toInt32(-1), toInt8(127) >= toInt32(-1) , toInt32(-1) = toUInt16(127), toInt32(-1) != toUInt16(127), toInt32(-1) < toUInt16(127), toInt32(-1) <= toUInt16(127), toInt32(-1) > toUInt16(127), toInt32(-1) >= toUInt16(127), toUInt16(127) = toInt32(-1), toUInt16(127) != toInt32(-1), toUInt16(127) < toInt32(-1), toUInt16(127) <= toInt32(-1), toUInt16(127) > toInt32(-1), toUInt16(127) >= toInt32(-1) , toInt32(-1) = toInt16(127), toInt32(-1) != toInt16(127), toInt32(-1) < toInt16(127), toInt32(-1) <= toInt16(127), toInt32(-1) > toInt16(127), toInt32(-1) >= toInt16(127), toInt16(127) = toInt32(-1), toInt16(127) != toInt32(-1), toInt16(127) < toInt32(-1), toInt16(127) <= toInt32(-1), toInt16(127) > toInt32(-1), toInt16(127) >= toInt32(-1) , toInt32(-1) = toUInt32(127), toInt32(-1) != toUInt32(127), toInt32(-1) < toUInt32(127), toInt32(-1) <= toUInt32(127), toInt32(-1) > toUInt32(127), toInt32(-1) >= toUInt32(127), toUInt32(127) = toInt32(-1), toUInt32(127) != toInt32(-1), toUInt32(127) < toInt32(-1), toUInt32(127) <= toInt32(-1), toUInt32(127) > toInt32(-1), toUInt32(127) >= toInt32(-1) , toInt32(-1) = toInt32(127), toInt32(-1) != toInt32(127), toInt32(-1) < toInt32(127), toInt32(-1) <= toInt32(127), toInt32(-1) > toInt32(127), toInt32(-1) >= toInt32(127), toInt32(127) = toInt32(-1), toInt32(127) != toInt32(-1), toInt32(127) < toInt32(-1), toInt32(127) <= toInt32(-1), toInt32(127) > toInt32(-1), toInt32(127) >= toInt32(-1) , toInt32(-1) = toUInt64(127), toInt32(-1) != toUInt64(127), toInt32(-1) < toUInt64(127), toInt32(-1) <= toUInt64(127), toInt32(-1) > toUInt64(127), toInt32(-1) >= toUInt64(127), toUInt64(127) = toInt32(-1), toUInt64(127) != toInt32(-1), toUInt64(127) < toInt32(-1), toUInt64(127) <= toInt32(-1), toUInt64(127) > toInt32(-1), toUInt64(127) >= toInt32(-1) , toInt32(-1) = toInt64(127), toInt32(-1) != toInt64(127), toInt32(-1) < toInt64(127), toInt32(-1) <= toInt64(127), toInt32(-1) > toInt64(127), toInt32(-1) >= toInt64(127), toInt64(127) = toInt32(-1), toInt64(127) != toInt32(-1), toInt64(127) < toInt32(-1), toInt64(127) <= toInt32(-1), toInt64(127) > toInt32(-1), toInt64(127) >= toInt32(-1) , toInt64(-1) = toUInt8(127), toInt64(-1) != toUInt8(127), toInt64(-1) < toUInt8(127), toInt64(-1) <= toUInt8(127), toInt64(-1) > toUInt8(127), toInt64(-1) >= toUInt8(127), toUInt8(127) = toInt64(-1), toUInt8(127) != toInt64(-1), toUInt8(127) < toInt64(-1), toUInt8(127) <= toInt64(-1), toUInt8(127) > toInt64(-1), toUInt8(127) >= toInt64(-1) , toInt64(-1) = toInt8(127), toInt64(-1) != toInt8(127), toInt64(-1) < toInt8(127), toInt64(-1) <= toInt8(127), toInt64(-1) > toInt8(127), toInt64(-1) >= toInt8(127), toInt8(127) = toInt64(-1), toInt8(127) != toInt64(-1), toInt8(127) < toInt64(-1), toInt8(127) <= toInt64(-1), toInt8(127) > toInt64(-1), toInt8(127) >= toInt64(-1) , toInt64(-1) = toUInt16(127), toInt64(-1) != toUInt16(127), toInt64(-1) < toUInt16(127), toInt64(-1) <= toUInt16(127), toInt64(-1) > toUInt16(127), toInt64(-1) >= toUInt16(127), toUInt16(127) = toInt64(-1), toUInt16(127) != toInt64(-1), toUInt16(127) < toInt64(-1), toUInt16(127) <= toInt64(-1), toUInt16(127) > toInt64(-1), toUInt16(127) >= toInt64(-1) , toInt64(-1) = toInt16(127), toInt64(-1) != toInt16(127), toInt64(-1) < toInt16(127), toInt64(-1) <= toInt16(127), toInt64(-1) > toInt16(127), toInt64(-1) >= toInt16(127), toInt16(127) = toInt64(-1), toInt16(127) != toInt64(-1), toInt16(127) < toInt64(-1), toInt16(127) <= toInt64(-1), toInt16(127) > toInt64(-1), toInt16(127) >= toInt64(-1) , toInt64(-1) = toUInt32(127), toInt64(-1) != toUInt32(127), toInt64(-1) < toUInt32(127), toInt64(-1) <= toUInt32(127), toInt64(-1) > toUInt32(127), toInt64(-1) >= toUInt32(127), toUInt32(127) = toInt64(-1), toUInt32(127) != toInt64(-1), toUInt32(127) < toInt64(-1), toUInt32(127) <= toInt64(-1), toUInt32(127) > toInt64(-1), toUInt32(127) >= toInt64(-1) , toInt64(-1) = toInt32(127), toInt64(-1) != toInt32(127), toInt64(-1) < toInt32(127), toInt64(-1) <= toInt32(127), toInt64(-1) > toInt32(127), toInt64(-1) >= toInt32(127), toInt32(127) = toInt64(-1), toInt32(127) != toInt64(-1), toInt32(127) < toInt64(-1), toInt32(127) <= toInt64(-1), toInt32(127) > toInt64(-1), toInt32(127) >= toInt64(-1) , toInt64(-1) = toUInt64(127), toInt64(-1) != toUInt64(127), toInt64(-1) < toUInt64(127), toInt64(-1) <= toUInt64(127), toInt64(-1) > toUInt64(127), toInt64(-1) >= toUInt64(127), toUInt64(127) = toInt64(-1), toUInt64(127) != toInt64(-1), toUInt64(127) < toInt64(-1), toUInt64(127) <= toInt64(-1), toUInt64(127) > toInt64(-1), toUInt64(127) >= toInt64(-1) , toInt64(-1) = toInt64(127), toInt64(-1) != toInt64(127), toInt64(-1) < toInt64(127), toInt64(-1) <= toInt64(127), toInt64(-1) > toInt64(127), toInt64(-1) >= toInt64(127), toInt64(127) = toInt64(-1), toInt64(127) != toInt64(-1), toInt64(127) < toInt64(-1), toInt64(127) <= toInt64(-1), toInt64(127) > toInt64(-1), toInt64(127) >= toInt64(-1) 
DROP DATABASE IF EXISTS test_mw3y0mzy 
select 6 = multiSearchFirstIndexCaseInsensitive(materialize('ryHzepjmzFdLkCcYqoFCgnJh'), ['cLwBRJmuspkoOgKwtLXLbKFsj', 'YSgEdzTdYTZAEtaoJpjyfwymbERCVvveR', 'RzdDRzKjPXQzberVJRry', 'HUitVdjGjxYwIaLozmnKcCpFOjotfpAy', 'LWqtEkIiSvufymDiYjwt', 'FDlKCCYqoFCGNj', 'jmZfdlKCcyQOFcGnJ', 'OZCPsxgxYHdhqlnPnfRVGOJRL', 'JfhoyhbUhmDrKtYjZDCDFDcdNs', 'KCCYqo', 'EPJMzFDLKcCYQ', 'zLQb', 'qsqFDGqVnDX', 'MzfdLkCCyQOFc']) from system.numbers limit 10;
INSERT INTO null_in_1 VALUES 
SELECT * FROM decimal_insert_cast_issue;
INSERT INTO test_01193_18429.table_10_519 VALUES 
DROP DATABASE IF EXISTS test_e9n0gz1r 
alter table data_01900_1 update s = 'foo_94' where 1;
SELECT JSON_EXISTS(NULL, NULL);
system refresh view c;
create table t2_local as t1_local;
SELECT farmHash64(NULL, NULL);
CREATE TABLE test_774147732A207C756C71605B365068557E26442C787C34485B3935374341352F793D795154242F4C(x UInt8) Engine=Memory;
CREATE TABLE concurrent_mutate_mt_4 (`key` UInt64, `value1` UInt64, `value2` String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/01076_parallel_alter_replicated_zookeeper_test_wv410ck4/concurrent_mutate_mt', '4') ORDER BY key SETTINGS max_replicated_mutations_in_queue = 1000, number_of_free_entries_in_pool_to_execute_mutation = 0, max_replicated_merges_in_queue = 1000, temporary_directories_lifetime = 10, cleanup_delay_period = 3, cleanup_delay_period_random_add = 0, cleanup_thread_preferred_points_per_iteration = 0, index_granularity = 36899, min_bytes_for_wide_part = 610320463, ratio_of_defaults_for_sparse_serialization = 0.18114601075649261, replace_long_file_name_to_hash = true, max_file_name_length = 20, merge_max_block_size = 52, prefer_fetch_merged_part_size_threshold = 2825925533, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 8898561432, index_granularity_bytes = 4539143, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 45816, primary_key_compress_block_size = 84236
alter table data_compact add column value Int default 0;
CREATE TABLE test_01193_18429.table_8_714 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_7_350 VALUES 
ALTER TABLE ttl_table2 MODIFY SETTING max_replicated_merges_with_ttl_in_queue=0
CREATE TABLE tab (`row_id` UInt32, `str` String, INDEX idx str TYPE tokenbf_v1(256, 2, 0) GRANULARITY 1) ENGINE = MergeTree ORDER BY row_id SETTINGS index_granularity = 23006, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 9536, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 4235069342, index_granularity_bytes = 14923243, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 9671, primary_key_compress_block_size = 46133
SELECT tupleIntDivOrZeroByNumber(NULL, NULL);
INSERT INTO test_01193_18429.table_4_458 VALUES 
SELECT x, t, round(sum, 12), round(max, 12), round(count, 12), round(avg, 12) FROM ( SELECT d[1] AS x, d[2] AS t, exponentialTimeDecayedSum(100)(x, t) OVER w AS sum, exponentialTimeDecayedMax(100)(x, t) OVER w AS max, exponentialTimeDecayedCount(100)(t) OVER w AS count, exponentialTimeDecayedAvg(100)(x, t) OVER w AS avg FROM ( SELECT [[2, 1], [1, 2], [0, 3], [4, 4], [5, 5], [1, 6], [0, 7], [10, 8]] AS d ) ARRAY JOIN d WINDOW w AS (ORDER BY 1 ASC Rows BETWEEN 2 PRECEDING AND 2 FOLLOWING) );
CREATE TABLE IF NOT EXISTS test_01516_test_u75vly87.data1 ENGINE = MergeTree ORDER BY number SETTINGS index_granularity = 12256, min_bytes_for_wide_part = 747639576, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 4406, prefer_fetch_merged_part_size_threshold = 8623381541, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 5307695899, index_granularity_bytes = 17481569, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 38170, primary_key_compress_block_size = 92760 AS SELECT * FROM numbers(1)
CREATE TABLE test_3A7743234D6B3B2B3522766B4C484B405F7671374C40763859223341235361447C4F692C5E444C3D(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_10_531 VALUES 
CREATE DATABASE IF NOT EXISTS test_ts00kxfb 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (46 < 18 AND 79 > 0 ? 46 : 0)), throwIf(last != (46 < 18 AND 79 > 0 ? least(18 - 1, 46 + 79 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(18) LIMIT 46, 79);
SELECT (sum(uint64) + 2 * count(uint64)) - (sum(uint64) + 3 * count(uint64)) From test_table;
explain syntax select 1 except select 1;
insert into table_to_merge_b values 
SELECT dictHas('01684_database_for_cache_dictionary.cache_dictionary_simple_key_complex_attributes', number) FROM system.numbers LIMIT 4;
select * from t_306;
CREATE DATABASE IF NOT EXISTS test_7nax3y1f 
SELECT number AS id, toString(number) AS s, range(number) AS arr FROM numbers(10) FORMAT RowBinaryWithNamesAndTypes
select count(ignore(*)) from data_02051 settings min_bytes_to_use_direct_io=1, local_filesystem_read_method='pread_threadpool', local_filesystem_read_prefetch=0, read_priority=1, max_read_buffer_size=1048576 ;
select 'two inserts with the same dedup token, one inserted, one deduplicated by the token';
CREATE TABLE type_names (n UInt8, s1 String, s2 String, s3 String) ENGINE=Memory;
CREATE TABLE nested_01800_stripe_log (`column` Nested(name String, names Array(String), types Array(Enum8('PU' = 1, 'US' = 2, 'OTHER' = 3)))) ENGINE = StripeLog;
alter table many_mutations delete where y = 267 * 2 settings mutations_sync = 0;
SELECT 'Get all descendants';
CREATE TABLE test_01193_18429.table_2_904 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT `k` FROM view(SELECT materialize('foo') AS `k`, -1 AS `v`) ORDER BY abs(`v`) AS `_v` ASC LIMIT 1 BY `k`
INSERT INTO test_01193_18429.table_7_646 VALUES 
DROP DATABASE IF EXISTS test_zlud2lo6 
drop dictionary regexp_dict2;
INSERT INTO src_9 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 5
CREATE TABLE formats_test (x UInt64, s String) ENGINE = Memory
CREATE VIEW v (n Nullable(Int32), f Float64) AS SELECT n, f FROM t;
SELECT 'Running test stateless/00113_shard_group_array.sql from pid=1718' 
EXPLAIN SYNTAX SELECT substring(reverse(b), 1, 1), a FROM column_swap_test_test WHERE a = 'c';
INSERT INTO test_01193_18429.table_4_631 VALUES 
SELECT emptyArrayFloat32();
CREATE TABLE test_02908_r2_257 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_257', 'r2') ORDER BY tuple()
SELECT '(forward, head, 1, A)', id, sequenceNextNode('forward', 'head')(dt, action, referrer = '1', action = 'A') AS next_node FROM test_base_condition GROUP BY id ORDER BY id;
SELECT CAST('yes', 'Bool');
CREATE DATABASE IF NOT EXISTS test_fdtzr3oo 
CREATE TABLE test_01193_18429.table_4_71 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select javaHash(toInt32(123));
SELECT varPopStable(x_value) FROM (SELECT x_value FROM series LIMIT 1);
CREATE TABLE test_01193_18429.table_2_981 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_40504D7B3A635B6B2666325352707E5C3A504C67465F2028205A7C5F7B5C734F21473E4746763D3C(x UInt8) Engine=Memory;
SELECT a, b FROM pk_order ORDER BY a DESC, b;
drop table if exists country_polygons;
SELECT reverse([NULL, 123, NULL]);
INSERT INTO test_01193_18429.table_10_734 VALUES 
SELECT toTypeName(dt64), toTypeName(dts64), toTypeName(dtms64) FROM generateRandom('dt64 DateTime64(3, \'UTC\'), dts64 DateTime64(6, \'UTC\'), dtms64 DateTime64(6 ,\'UTC\')') LIMIT 1;
insert into t_02377_extend_protocol_with_query_parameters_926927577 values
CREATE TABLE test_01193_18429.table_4_706 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT multiIf((number % 2) = 0, toFloat64(1), (number % 3) = 0, toUInt16(2), toFloat64(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_5_382 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
alter table many_mutations delete where y = 300 * 2 settings mutations_sync = 0;
CREATE TABLE test_75752340445E6B287265365D2A294658646664436F30633B50757077552B5D4F202C6D2D284E6257(x UInt8) Engine=Memory;
SELECT dictGetOrDefault('cache_dictionary', 'value', toUInt64(2), NULL);
desc format(TSV, '2020-01-01 00:00:00\n2020-01-01');
INSERT INTO r3 SELECT 90 % 10 = 3 ? 90 - 1 : 90
SELECT * FROM dest_view_stripe_log ORDER BY x LIMIT 1;
DROP DATABASE IF EXISTS test_jnh9s57y 
CREATE DATABASE IF NOT EXISTS test_gycgecpc 
select 1 = sequenceMatch('(?1)(?1)(?1)(?1)')(time, data = 0, data = 1, data = 2, data = 3) from sequence_test;
SELECT YYYYMMDDhhmmssToDateTime64(15001113111111);
SELECT [-1000000, 1 + 1];
select countSubstringsCaseInsensitiveUTF8('ÃÂ¿ÃÂ¾ÃÂ´ÃÂÃÂÃÂÃÂ¾ÃÂºÃÂ°.ÃÂÃÂ', 'ÃÂ ÃÂ¤');
DROP DATABASE IF EXISTS test_a14l5cce 
SELECT ngramMinHashArgCaseInsensitive(NULL);
INSERT INTO test_01193_18429.table_7_970 VALUES 
CREATE TABLE test_5461272F5769317569722F4444202E275975636A5A6F62217228383578367E2A48257C7E6A5C4660(x UInt8) Engine=Memory;
SELECT [-1, 1000];
SELECT a, b, c, d, e FROM t_fixed_prefix WHERE bitNot(a) = 1 AND bitNot(b) = 1 ORDER BY a, b, c, d, e SETTINGS optimize_read_in_order = 1
SELECT h3EdgeLengthKm(15);
CREATE TABLE test_406E726C386F323C4A2F4A333E7572742E38777246556D4034236D706D61794D6C422424202B4748(x UInt8) Engine=Memory;
SYSTEM FLUSH ASYNC INSERT QUEUE;
select 0 = multiSearchAny('Hello World', CAST([], 'Array(String)'));
SELECT arrayUniq([]);
INSERT INTO test_01193_18429.table_8_461 VALUES 
SYSTEM STOP MERGES session_events;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (92 < 63 AND 4 > 0 ? 92 : 0)), throwIf(last != (92 < 63 AND 4 > 0 ? least(63 - 1, 92 + 4 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(63) LIMIT 92, 4);
CREATE TABLE test_01193_18429.table_8_779 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_6A352E3B235A346A4E26416943782870635F5A24652D5A3040586B7050392D59344F7D2530447A5D(x UInt8) Engine=Memory;
INSERT INTO prewhere_int256 VALUES 
SHOW CREATE t_merge;
SELECT 'Running test stateless/02712_bool_better_exception_message.sh from pid=1724' 
CREATE TABLE test_2628667B2C57632A7A7A6F2C66617545287E5E50743563702D5F7869413352633A5A6D41586B5273(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_edql3egi 
INSERT INTO test_01193_18429.table_6_141 VALUES 
SELECT toRelativeSecondNum(NULL);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (71 < 33 AND 103 > 0 ? 71 : 0)), throwIf(last != (71 < 33 AND 103 > 0 ? least(33 - 1, 71 + 103 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(33) LIMIT 71, 103);
INSERT INTO test_01193_18429.table_3_727 VALUES 
INSERT INTO test_01193_18429.table_3_809 VALUES 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (73 < 91 AND 109 > 0 ? 73 : 0)), throwIf(last != (73 < 91 AND 109 > 0 ? least(91 - 1, 73 + 109 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(91) LIMIT 73, 109);
CREATE DATABASE IF NOT EXISTS test_37x9pjju 
CREATE DATABASE IF NOT EXISTS test_kec29j9a 
SELECT materialize([13, 14])[-1];
SELECT '--JSONExtractRaw--';
select count(ignore(*)) from data_02051 settings min_bytes_to_use_direct_io=0, local_filesystem_read_method='io_uring', local_filesystem_read_prefetch=1, read_priority=0, max_read_buffer_size=1048576 ;
CREATE TABLE test_01193_18429.table_8_869 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT toInt64(0) AS x, toDecimal32(1, 0) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
DROP TABLE IF EXISTS t1_00826;
SELECT parseDateTime32BestEffort('2020-05-14T03:37:03', 'UTC') AS a, toTypeName(a);
SELECT hex(sipHash128('foo'));
CREATE TABLE moving_sum_dec ENGINE = Memory AS SELECT k, dt, toDecimal64(v, 2) as v FROM moving_sum_num;
INSERT INTO test_01193_18429.table_1_461 VALUES 
SELECT wordShingleSimHashUTF8(NULL);
SELECT * FROM t_limit_mutations ORDER BY id;
CREATE MATERIALIZED VIEW mv TO dst (nm Int16) AS SELECT n*m AS nm FROM src
CREATE TABLE test_01193_18429.table_2_227 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT decodeHTMLComponent('&#12345678;&apos;123');
SELECT avgWeighted(x, w) FROM values('x UInt32, w UInt32', (4, 1), (1, 0), (10, 2));
drop table if exists fooR;
CREATE TABLE test_01193_18429.table_6_891 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO dst_3 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 67
SELECT nullIn(NULL, NULL);
INSERT INTO test_01193_18429.table_4_833 VALUES 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c2) AND c0 AND (NOT c7) AND c2 AND (NOT c6)) OR (c7 AND c3 AND c7) OR (c9 AND c0 AND c7 AND (NOT c6) AND c1) OR (c0) OR ((NOT c7) AND c8 AND c7 AND (NOT c7) AND c8) OR ((NOT c9)) OR ((NOT c9) AND c3 AND c0 AND (NOT c6) AND (NOT c8)) SETTINGS convert_query_to_cnf = 0
DROP DICTIONARY 02155_test_dictionary;
DROP DATABASE IF EXISTS test_qgb3jqah 
SELECT any((0, 1)) AS `k` FROM numbers(10)
SELECT dateDiff('second', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), toDateTime64('1927-01-01 00:10:00', 0, 'UTC'));
SELECT length(groupUniqArray(v)) FROM group_uniq_arr_str GROUP BY id ORDER BY id;
DROP TABLE IF EXISTS test2_00843;
SELECT 9, 2, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (9 < 13 AND 2 > 0 ? 9 : 0)), throwIf(last != (9 < 13 AND 2 > 0 ? least(13 - 1, 9 + 2 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 9, 2);
CREATE TABLE test_01193_18429.table_9_779 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_416E6D67674E3A27595932786C24633B2C51547065577356415B343F454D57404E3E7E34794B6B60(x UInt8) Engine=Memory;
INSERT INTO test_y9d6pdpj.t_async_insert FORMAT Arrow
CREATE TABLE test_2C6F2B25232F333C5D577033355C407427226F4C6E276F7D38635C67527C266D604A2C7E577D264F(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_t3i6w320 
SELECT toDecimal128OrZero('', 0) AS x, toDecimal128OrZero('0.42', 2) AS y;
CREATE TABLE mergetree_00673 (`x` UInt64) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 19791, min_bytes_for_wide_part = 949190198, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 103, merge_max_block_size = 1090, prefer_fetch_merged_part_size_threshold = 1939259868, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 27456466, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 50912, primary_key_compress_block_size = 32288
DROP TABLE IF EXISTS test_pb0rlrl8.opentelemetry_test;
CREATE TABLE test_01193_18429.table_6_577 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/00700_decimal_null.sql from pid=1722' 
CREATE DICTIONARY dict1 (`n` int DEFAULT 0, `m` int DEFAULT 1, `s` String DEFAULT 'qqq') PRIMARY KEY n SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'dict_src' PASSWORD '[HIDDEN]' DB 'test_2j4sloxh')) LIFETIME(MIN 1 MAX 10) LAYOUT(FLAT())
CREATE TABLE test_287C292B2D2C46224C40372170503E56406829263175243833745E7E76233A425F6D727027267C6A(x UInt8) Engine=Memory;
select [0, 8, 17, 0, 1, 0, 0, 0, 0, 0, 5, 0] = multiSearchAllPositionsCaseInsensitive(materialize('PzIxktujxHZsaDlwSGQPgvA'), ['zrYlZdnUxlPrVJJeZEASwdCHlNEm', 'jxhZS', 'sGQPgV', 'MZMChmRBgsxhdgspUhALoxmrkZVp', 'pzIxktuJxHzsADlw', 'xavwOAibQuoKg', 'vuuETOrWLBNLhrMeWLgGQpeFPdcWmWu', 'TZrAgmdorqZIdudhyCMypHYKFO', 'ztcCyGxRKrcUTv', 'OUvwdMZrcZuwGtjuEBeGU', 'k', 'rFTpnfGIOCfwktWnyOMeXQZelkYwqZ']) from system.numbers limit 10;
CREATE TABLE test_4521532668506E212E75345E5F4C773C452A7229475334517B236D6F6A205252246E49277749443A(x UInt8) Engine=Memory;
SELECT x, txt FROM 02540_date WHERE txt == '0';
SELECT `number` IN ((SELECT toUInt64(arrayJoin([1, 8]))) AS `_subquery3045`) FROM numbers(10)
EXPLAIN SELECT a FROM ( SELECT any(number) AS a FROM ( SELECT * FROM ( SELECT * FROM numbers(3) ORDER BY number DESC ) ORDER BY number ASC ) GROUP BY number ) WHERE a > 0 ORDER BY a
INSERT INTO src VALUES /* (76, 2) */ 
CREATE TABLE test_01193_18429.table_5_639 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE quorum3 (`x` UInt32, `y` Date) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_02377/quorum1', '3') PARTITION BY y ORDER BY x SETTINGS index_granularity = 31863, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 744, prefer_fetch_merged_part_size_threshold = 7913545010, vertical_merge_algorithm_min_rows_to_activate = 984678, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10479636447, index_granularity_bytes = 16789443, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 30712, primary_key_compress_block_size = 96400
SELECT `x` FROM generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8))))))))))))))))))))))))))))))))))))', 1, 1, 1) LIMIT 1
SELECT dictGetOrDefault('01766_db.hashed_dictionary_complex_key_simple_attributes', 'value_first', (number, concat('id_key_', toString(number))), toString('default')) as value_first, dictGetOrDefault('01766_db.hashed_dictionary_complex_key_simple_attributes', 'value_second', (number, concat('id_key_', toString(number))), toString('default')) as value_second FROM system.numbers LIMIT 4;
SELECT x FROM insert ORDER BY x
CREATE TABLE test_514251215E2651212E6F356029254A3F585852256D615F2B483179782F316F6375627D316638502D(x UInt8) Engine=Memory;
ALTER TABLE 02483_substitute_udf MODIFY COLUMN number UInt32 DEFAULT 02483_plustwo(id);
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toStartOfMinute(N, 'Asia/Istanbul') as r FORMAT CSV;
SELECT 'Running test stateless/01893_jit_aggregation_function_min_long.sql from pid=1720' 
select 1 = position('abc', materialize('abc')) from system.numbers limit 10;
INSERT INTO test_01193_18429.table_10_269 VALUES 
CREATE TABLE test_01193_18429.table_6_231 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT count() FROM t_cnf_fuzz WHERE (c4 AND c3 AND (NOT c3) AND (NOT c7) AND c2) OR (c6 AND (NOT c0) AND c0) OR (c9 AND c0 AND c7) OR (c8 AND c8 AND (NOT c1) AND (NOT c9) AND c0) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_02908_r2_25 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_25', 'r2') ORDER BY tuple()
CREATE TABLE test_01193_18429.table_1_402 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE DATABASE IF NOT EXISTS test_6atq7y5f 
SELECT 'Running test stateless/02421_decimal_in_precision_issue_41125.sql from pid=1715' 
CREATE DATABASE IF NOT EXISTS test_heqjhj34 
SELECT CASE WHEN (number % 2) = 0 THEN toFloat64(1) WHEN (number % 3) = 0 THEN toInt16(2) ELSE toFloat64(3) END FROM system.numbers LIMIT 10;
DROP TABLE logs;
select formatDateTime(toDateTime64('2022-12-08 18:11:29.1234', 9, 'UTC'), '%F %T.%f');
CREATE TABLE test_2B353654276E204850342F6E7E47752B305674322B69624F743F79545675724C635E246C44596C6F(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_4_137 VALUES 
select formatDateTime(toDateTime('2022-01-08 02:11:29', 'UTC'), '%h') settings formatdatetime_format_without_leading_zeros = 1;
CREATE INDEX idx_tab2_5 ON tab2 (col4 DESC);
CREATE TABLE test_01193_18429.table_4_275 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO src VALUES /* (-65, 2) */ 
DROP TABLE IF EXISTS default_join1;
SELECT 'Delete 100K more rows using lightweight DELETE';
SELECT inIgnoreSet([], []);
CREATE TABLE test_6D244C684B3E5A7E31262D763F52782A4D245B4647506F773C313E3B3627393C733F52204C616F25(x UInt8) Engine=Memory;
SELECT arrayReduce('stddevSampOrDefault', [1]);
CREATE TABLE test_2F6F733E756346424620242025653D6430783A755565285E723B7C5B707357234D532C3C7A4E2861(x UInt8) Engine=Memory;
SELECT normalizeQuery('f(-2, 3)');
INSERT INTO test_01193_18429.table_10_440 VALUES 
INSERT INTO test_01193_18429.table_5_29 VALUES 
SELECT 'Running test stateless/02047_alias_for_table_and_database_name.sql from pid=1722' 
DROP DATABASE IF EXISTS test_xw7pt05u 
CREATE TABLE test_01193_18429.table_8_101 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_9_329 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT dictGetHierarchy('hashed_array_dictionary_simple_key_hierarchy', toUInt64(1));
drop table country_polygons
SELECT NULL AND 1;
CREATE WINDOW VIEW wv TO dst WATERMARK=ASCENDING AS SELECT count(a) AS count, tumbleEnd(wid) AS w_end FROM mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND, 'US/Samoa') AS wid;
DROP DATABASE IF EXISTS test_8hpot287 
CREATE TABLE test_01193_18429.table_4_953 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_645A312435257E28334D286F565156272E415C7E57694B5A712063655B5055382D724A443B633675(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_4o8nnnrh 
select round(1000 * ngramSearchCaseInsensitiveUTF8(materialize('ÃÂ°ÃÂ±ÃÂ²ÃÂ³ÃÂ´ÃÂµÃÂÃÂ¶ÃÂ·'), materialize('ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ'))) = round(1000 * ngramSearchCaseInsensitiveUTF8(materialize('ÃÂ°ÃÂ±ÃÂ²ÃÂ³ÃÂ´ÃÂµÃÂÃÂ¶ÃÂ·'), 'ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ')) from system.numbers limit 5;
SELECT d1, f1, greatest(d1, f1) FROM t ORDER BY f1;
INSERT INTO 2025_test_db.test_table VALUES 
CREATE DATABASE IF NOT EXISTS test_39beyd9s 
DROP DATABASE IF EXISTS test_xlvd81bv 
DROP TABLE IF EXISTS large_alter_table_00926;
SELECT trimLeft(NULL);
select format('{}{}{}', 'a', 'b', materialize('c')) == 'abc' from system.numbers limit 5;
SELECT 'Running test stateless/01921_with_fill_with_totals.sql from pid=1722' 
select u, windowFunnel(86400, 'strict_order')(dt, a is null, COALESCE(b, '') = 'b3') as s from funnel_test_non_null group by u order by u format JSONCompactEachRow;
CREATE TABLE test_684E607C6120637A25703D5C615863492163586060302B25507E3E684E6054263379277A77273925(x UInt8) Engine=Memory;
SET max_memory_usage=0;
SELECT 'Get is in hierarchy';
INSERT INTO test_01193_18429.table_8_69 VALUES 
WITH (x -> x + 1) AS lambda SELECT lambda(1);
DROP TABLE t1__fuzz_4;
create table test_02127 (x Float32, y Float64) engine=Memory()
DROP DATABASE test_01114_1
DROP TABLE 01523_test;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt32(1), toInt32(2)] WHEN (number % 3) = 0 THEN [toFloat64(2), toFloat64(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
INSERT INTO test_02099 SELECT number, toString(number), toDate(number) FROM numbers(3)
SET group_by_overflow_mode = 'throw';
INSERT INTO test_01193_18429.table_4_433 VALUES 
CREATE TABLE test_01193_18429.table_6_106 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE MATERIALIZED VIEW dest_table_mv TO dest_table as select * FROM (SELECT * FROM left_table) AS t1 INNER JOIN (WITH (SELECT DISTINCT Date FROM left_table LIMIT 1) AS dt SELECT * FROM right_table WHERE Date = dt) AS t2 USING (Date, Id);
CREATE DICTIONARY test_dictionary(key String, value String) PRIMARY KEY key LAYOUT(COMPLEX_KEY_HASHED()) SOURCE(CLICKHOUSE(TABLE 'test_dictionary_source')) LIFETIME(0);
CREATE TABLE `02703_db_asterisk`.other (`x` UInt8, `y` UInt8) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 42575, min_bytes_for_wide_part = 989097021, ratio_of_defaults_for_sparse_serialization = 0.9193428754806519, replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 8014, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 4567733, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 9119, primary_key_compress_block_size = 92141 AS SELECT 100, 20
INSERT INTO test_nested VALUES
SELECT arrayAUC([1, 1], [0, 1]);
SELECT caseWithExpr(NULL, NULL, NULL);
CREATE TABLE test_673D60206D5C5378292C2B2B543F6425503B7A383E334C755658303D6B2A47227D674B4F77377B3C(x UInt8) Engine=Memory;
CREATE TABLE test_304A636A2C6C3E2E282D71283C5F652D71685A42565A75214D55352564282D352852486C3C4D5658(x UInt8) Engine=Memory;
SELECT * FROM file('/var/lib/clickhouse/user_files/02661_read_from_archive_test_vdj32cgq_tar_archive*.tar :: 02661_read_from_archive_test_vdj32cgq_tar_data{2..3}.csv') ORDER BY 1, 2
CREATE TABLE test(start Integer, end Integer) engine = Memory;
SELECT count() == 1 FROM (EXPLAIN SYNTAX SELECT number FROM system.numbers ORDER BY number DESC) WHERE explain ILIKE 'SELECT%';
CREATE TABLE test_01193_18429.table_7_7 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/01061_alter_codec_with_type.sql from pid=1714' 
INSERT INTO test_01193_18429.table_7_815 VALUES 
DROP TABLE insert_number_query
CREATE TABLE test_01193_18429.table_7_171 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT date_trunc('quarter', toDateTime('2020-01-01 12:11:22', 'Europe/London'), 'Europe/London');
INSERT INTO src_12 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 2
SELECT 'Running test stateless/01497_alias_on_default_array.sql from pid=1722' 
SELECT arrayMap(x -> dictGet('one_cell_cache_ints_overflow', 'i8', toUInt64(x)), array) FROM ( SELECT [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20] AS array );
INSERT INTO src VALUES /* (-11, 1) */ 
ALTER TABLE in_order_agg_partial_01710 ADD PROJECTION aaaa ( SELECT k1, k2, k3, sum(value) GROUP BY k1, k2, k3 );
ALTER TABLE concurrent_alter_mt_4 MODIFY COLUMN value1 Float64 SETTINGS replication_alter_partitions_sync=0
select 0 = multiSearchFirstPosition(materialize('abcdefgh'), ['z', 'pq']) from system.numbers limit 10;
CREATE TABLE test_01193_18429.table_10_377 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE DATABASE IF NOT EXISTS test_f4evytqh 
desc file('test_02149.data', 'TSV') settings input_format_tsv_use_best_effort_in_schema_inference=false
SELECT 'Running test stateless/01718_subtract_seconds_date.sql from pid=1713' 
select sqrt(1) = 1;
INSERT INTO test_01193_18429.table_5_83 VALUES 
SELECT value AS alias_value, alias_value.* APPLY toString FROM test_table;
CREATE TABLE test_01193_18429.table_9_1 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
set max_parallel_replicas = 3;
CREATE TABLE test_4E36455A394D717840687175732A56453B24707A4423763A60585D224929525D5F3A383B2A654E6E(x UInt8) Engine=Memory;
SELECT extractTextFromHTML('Hello<world');
SELECT 'Running test stateless/02504_regexp_dictionary_table_source.sql from pid=1714' 
INSERT INTO r9 SELECT 56 % 10 = 9 ? 56 - 1 : 56
SELECT CASE WHEN (col1 % 2) = 0 THEN [col2, col3] WHEN (col1 % 3) = 0 THEN ['foo', col5] ELSE ['foo', col7] END FROM multi_if_check;
INSERT INTO test SELECT (number, number) FROM numbers(1000000);
CREATE TABLE test_01193_18429.table_3_683 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT toIPv6OrZero(NULL, NULL);
SELECT 'Running test stateless/02457_csv_parse_date_out_of_range.sh from pid=1724' 
DROP TABLE IF EXISTS `01746_buffer`;
CREATE DATABASE IF NOT EXISTS test_btp83e4a 
CREATE TABLE test_27562F2351395E4526397A3D447A703D3D732A4643636E41203A5E763D507D2F6F7E424B25224F29(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_pe9hxe4t 
CREATE TABLE test_75276B22687D237B29783862364153396E3C6D3F4F2B39716F7C5C595B3336562A635B2B39567032(x UInt8) Engine=Memory;
CREATE TABLE mutations_cleaner_r2 (`x` UInt32) ENGINE = ReplicatedMergeTree('/clickhouse/tables/00652_replicated_mutations_zookeeper_test_g2ggxcxn/mutations_cleaner', 'r2') ORDER BY x SETTINGS finished_mutations_to_keep = 2, cleanup_delay_period = 1, cleanup_delay_period_random_add = 0, cleanup_thread_preferred_points_per_iteration = 0, index_granularity = 45248, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2856976091861725, replace_long_file_name_to_hash = false, max_file_name_length = 7, merge_max_block_size = 21538, prefer_fetch_merged_part_size_threshold = 1494486744, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 95, min_merge_bytes_to_use_direct_io = 5940319001, index_granularity_bytes = 28599322, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 71103, primary_key_compress_block_size = 54580
SELECT avg(b), sum(b) FROM (SELECT b FROM fuse_tbl);
CREATE TABLE test_437C432555657A5244263A59734271575C6A2B7A7B52244268546038772E2B385426314D57247D4D(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_j3ibxf56 
SELECT toDate(1412106600, 'Asia/Tokyo');
SELECT multiIf((number % 2) = 0, toInt64(1), (number % 3) = 0, toInt32(2), toInt64(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_1_986 VALUES 
CREATE DATABASE IF NOT EXISTS test_dsi60ckf 
CREATE TABLE test_6326705A29246F3078756041342C7E6B726333563D4A3F4E443F3E3756277840507C25615C672C5D(x UInt8) Engine=Memory;
SYSTEM SYNC REPLICA dst_8 STRICT
INSERT INTO check_query_tiny_log VALUES 
SELECT multiIf((number % 2) = 0, toFloat32(1), (number % 3) = 0, toInt16(2), toUInt32(3)) FROM system.numbers LIMIT 10;
SELECT 'SELECT DT == N';
CREATE TABLE test_01193_18429.table_9_461 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT dictGet('hashed_array_dictionary_simple_key_hierarchy', 'parent_id', number) FROM system.numbers LIMIT 5;
INSERT INTO r4 SELECT 88 % 10 = 4 ? 88 - 1 : 88
CREATE TABLE test_516D2C4D41325338575D757A54415B574733656F274A6E49486F736952737C6F462E5B2F64684143(x UInt8) Engine=Memory;
SELECT age('day', toDate('2017-12-31'), toDate('2017-01-01'));
SELECT arrayJoin(CAST(['hello', 'world'] AS Array(FixedString(5)))) LIKE '%orld';
DROP TABLE IF EXISTS json_each_row_nested
SELECT count() FROM datetime_date_table WHERE col_date > '2020-03-04';
INSERT INTO six_rows_per_granule (p, k, v1, v2, Sign, Version) VALUES 
CREATE TABLE test_7E2D246542295B513C2920522D2F5E6C4F757C77626442264979425F5D676B42686A7447287B4A6C(x UInt8) Engine=Memory;
CREATE TABLE test_2938455479502D4170554166474B6B26503862695E6D4530395B6831787E60743840324F397B6964(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_khbdmxjf 
SET insert_quorum_timeout = 600000;
select * from dist_01756 where dummy in tuple(2);
SELECT count(DISTINCT _path) FROM test1.`02722_database_filesystem_test_wkwv3862/*.csv` WHERE startsWith(_path, '/var/lib/clickhouse/user_files/02722_database_filesystem_test_wkwv3862')
 SELECT sipHash64(9, groupArray((name, type))) FROM (SELECT name, type FROM system.columns WHERE database = 'system' AND table = 'backup_log' ORDER BY position) 
CREATE TABLE test_01193_18429.table_5_506 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_2_536 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_1_581 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT arrayExists(NULL);
select * from tst final order by timestamp;
SELECT 'Running test stateless/02567_and_consistency.sql from pid=1714' 
SELECT * FROM set_idx WHERE i32 = 5 AND i32 + f64 < 12 AND 3 < d AND d < 7 AND (s = 'bac' OR s = 'cba') ORDER BY dt
SYSTEM START REPLICATED SENDS r5
CREATE WINDOW VIEW test_01048.wv ENGINE Memory AS SELECT count(a) AS count, b as id FROM test_01048.mt GROUP BY id, hop(timestamp, INTERVAL '1' SECOND, INTERVAL '3' SECOND);
SET move_all_conditions_to_prewhere = 1;
DROP DATABASE IF EXISTS test1601_detach_permanently_ordinary;
SELECT pmod(NULL, NULL);
CREATE TABLE test_01193_18429.table_4_675 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP DATABASE IF EXISTS test_s5gehxdq 
SELECT * FROM test WHERE '2020-10-15' < timestamp ORDER BY timestamp;
CREATE TABLE test_01193_18429.table_7_711 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT format('The {0} to all questions is {1}', 42, materialize(NULL :: Nullable(UInt64)), materialize(NULL :: Nullable(UInt64)));
SELECT id FROM (SELECT id, value FROM test_table UNION ALL SELECT id, value FROM test_table);
select t1_00844.f1,t2_00844.f3 from t1_00844 all inner join t2_00844 on t1_00844.f2 = t2_00844.f1 where t2_00844.f1 = '1';
DROP DATABASE IF EXISTS test_orv8zxcx 
SELECT 'Running test stateless/01318_decrypt.sql from pid=1722' 
SELECT 65536, 18446744073709551615, 65536 = 18446744073709551615, 65536 != 18446744073709551615, 65536 < 18446744073709551615, 65536 <= 18446744073709551615, 65536 > 18446744073709551615, 65536 >= 18446744073709551615, 18446744073709551615 = 65536, 18446744073709551615 != 65536, 18446744073709551615 < 65536, 18446744073709551615 <= 65536, 18446744073709551615 > 65536, 18446744073709551615 >= 65536 , toUInt32(65536) = toUInt64(18446744073709551615), toUInt32(65536) != toUInt64(18446744073709551615), toUInt32(65536) < toUInt64(18446744073709551615), toUInt32(65536) <= toUInt64(18446744073709551615), toUInt32(65536) > toUInt64(18446744073709551615), toUInt32(65536) >= toUInt64(18446744073709551615), toUInt64(18446744073709551615) = toUInt32(65536), toUInt64(18446744073709551615) != toUInt32(65536), toUInt64(18446744073709551615) < toUInt32(65536), toUInt64(18446744073709551615) <= toUInt32(65536), toUInt64(18446744073709551615) > toUInt32(65536), toUInt64(18446744073709551615) >= toUInt32(65536) , toInt32(65536) = toUInt64(18446744073709551615), toInt32(65536) != toUInt64(18446744073709551615), toInt32(65536) < toUInt64(18446744073709551615), toInt32(65536) <= toUInt64(18446744073709551615), toInt32(65536) > toUInt64(18446744073709551615), toInt32(65536) >= toUInt64(18446744073709551615), toUInt64(18446744073709551615) = toInt32(65536), toUInt64(18446744073709551615) != toInt32(65536), toUInt64(18446744073709551615) < toInt32(65536), toUInt64(18446744073709551615) <= toInt32(65536), toUInt64(18446744073709551615) > toInt32(65536), toUInt64(18446744073709551615) >= toInt32(65536) , toUInt64(65536) = toUInt64(18446744073709551615), toUInt64(65536) != toUInt64(18446744073709551615), toUInt64(65536) < toUInt64(18446744073709551615), toUInt64(65536) <= toUInt64(18446744073709551615), toUInt64(65536) > toUInt64(18446744073709551615), toUInt64(65536) >= toUInt64(18446744073709551615), toUInt64(18446744073709551615) = toUInt64(65536), toUInt64(18446744073709551615) != toUInt64(65536), toUInt64(18446744073709551615) < toUInt64(65536), toUInt64(18446744073709551615) <= toUInt64(65536), toUInt64(18446744073709551615) > toUInt64(65536), toUInt64(18446744073709551615) >= toUInt64(65536) , toInt64(65536) = toUInt64(18446744073709551615), toInt64(65536) != toUInt64(18446744073709551615), toInt64(65536) < toUInt64(18446744073709551615), toInt64(65536) <= toUInt64(18446744073709551615), toInt64(65536) > toUInt64(18446744073709551615), toInt64(65536) >= toUInt64(18446744073709551615), toUInt64(18446744073709551615) = toInt64(65536), toUInt64(18446744073709551615) != toInt64(65536), toUInt64(18446744073709551615) < toInt64(65536), toUInt64(18446744073709551615) <= toInt64(65536), toUInt64(18446744073709551615) > toInt64(65536), toUInt64(18446744073709551615) >= toInt64(65536) 
SELECT arrayFold((acc, x) -> (acc + (x * 2)), [1, 2, 3, 4], materialize(toInt64(toNullable(3))));
SELECT 'Running test stateless/02339_analyzer_matcher_basic.sql from pid=1705' 
SELECT 6, 11, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (6 < 13 AND 11 > 0 ? 6 : 0)), throwIf(last != (6 < 13 AND 11 > 0 ? least(13 - 1, 6 + 11 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 6, 11);
INSERT INTO test_01193_18429.table_5_467 VALUES 
SELECT x, y FROM test ORDER BY x, y;
INSERT INTO mt VALUES /* (-17, 2) */ 
SELECT dictGetOrDefault('01766_db.hashed_dictionary_complex_key_complex_attributes', 'value_first', (number, concat('id_key_', toString(number))), toString('default')) as value_first, dictGetOrDefault('01766_db.hashed_dictionary_complex_key_complex_attributes', 'value_second', (number, concat('id_key_', toString(number))), toString('default')) as value_second FROM system.numbers LIMIT 4;
insert into NmSubj values 
select round(1000 * ngramSearchCaseInsensitive('ABCdefgHaAaaaAaaaAA', 'aaaaaaaa'));
CREATE TABLE TestTbl (`id` UInt16, `dt` Date, `val` String) ENGINE = MergeTree PARTITION BY dt ORDER BY id SETTINGS index_granularity = 13233, min_bytes_for_wide_part = 943173890, ratio_of_defaults_for_sparse_serialization = 0.7895514369010925, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 18205, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 5532354463, index_granularity_bytes = 20253379, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 73196, primary_key_compress_block_size = 32666
select toDateOrDefault(cast(19 as Int8));
CREATE DATABASE IF NOT EXISTS test_695y98ip 
CREATE TABLE test_01193_18429.table_3_225 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE DATABASE IF NOT EXISTS test_m2afrdmk 
create database rdb_test_5mr53c62_3 engine=Replicated('/test/test_5mr53c62/rdb', 's2', 'r1')
CREATE TABLE test_01193_18429.table_5_52 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT mannWhitneyUTest(NULL, NULL, NULL);
SELECT CASE WHEN (number % 2) = 0 THEN toInt32(1) WHEN (number % 3) = 0 THEN toFloat64(2) ELSE toFloat64(3) END FROM system.numbers LIMIT 10;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 39699, 500 settings ignore_materialized_views_with_dropped_target_table=1
select * from (SELECT number as a FROM numbers(10)) t1 PASTE JOIN (select number as a from numbers(10) order by a desc) t2;
SELECT avgWeighted(x, w) FROM values('x Float32, w UInt32', (4, 1), (1, 0), (10, 2));
INSERT INTO mt_with_small_granularity (d, x, y, z, `n.Age`, `n.Name`) VALUES 
CREATE DATABASE IF NOT EXISTS test_2uiwg2r7 
DROP DATABASE IF EXISTS test_0dkuwgi7 
SELECT cond_non_constant_nullable ? then_non_constant_nullable : else_non_constant_nullable AS res FROM nullable_00431;
CREATE TABLE test_4E7B663D71485A2521634E38273B2D50434C2F6855626B286579354770434B2E465A337E2D2D6427(x UInt8) Engine=Memory;
CREATE TABLE test_02908_r2_193 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_193', 'r2') ORDER BY tuple()
SELECT cast(1 AS Enum8('hello' = 1, 'world' = 2));
alter table many_mutations delete where y = 837 * 2 settings mutations_sync = 0;
OPTIMIZE TABLE dst_r1 PARTITION 1;
INSERT INTO test_01193_18429.table_7_242 VALUES 
SELECT 5, toFixedString('Hello', 10), bin(bitShiftLeft(toFixedString('Hello', 10), 5));
select toInt128OrDefault('-1xx', cast(-2 as Int128));
CREATE DATABASE IF NOT EXISTS test_ngr0ugwi 
SELECT avgWeighted(x, weight) FROM (SELECT t.1 AS x, t.2 AS weight FROM (SELECT arrayJoin([(1, 5), (2, 4), (3, 3), (4, 2), (5, 1)]) AS t));
CREATE TABLE t (`tid` UInt64, `processed_at` DateTime, `created_at` DateTime, `amount` Int64) ENGINE = ReplacingMergeTree PARTITION BY toStartOfQuarter(created_at) PRIMARY KEY (toStartOfDay(created_at), toStartOfDay(processed_at)) ORDER BY (toStartOfDay(created_at), toStartOfDay(processed_at), tid) SETTINGS index_granularity = 1, min_bytes_for_wide_part = 554332313, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 53, merge_max_block_size = 16648, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 767246, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 4563149561, index_granularity_bytes = 12338177, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 78807, primary_key_compress_block_size = 74498
CREATE TABLE test_01193_18429.table_9_575 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_10_942 VALUES 
DROP TABLE defaults
SELECT arrayCumSumNonNegative([toUInt128(1), 2]), toTypeName(arrayCumSumNonNegative([toUInt128(1), 2]));
SELECT SUM(number) as sum_value, count() AS count_value from numbers_mt(1000000) GROUP BY GROUPING SETS ((number % 10), (number % 100)) ORDER BY sum_value, count_value SETTINGS max_threads=3;
SELECT 'Running test stateless/02223_h3_test_const_columns.sql from pid=1724' 
DROP TABLE foo_distributed;
CREATE TABLE test_3D67286B346F6863484E3A334D715C3156577A79746A5E425740566134727878545624255C364269(x UInt8) Engine=Memory;
SELECT arrayEnumerateUniqRanked(1, [[1,2,3],[2,2,1],[3]], 2);
INSERT INTO test_01193_18429.table_10_245 VALUES 
DROP DATABASE IF EXISTS test_hu1op1z6 
CREATE TABLE test_01193_18429.table_8_488 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_5_147 VALUES 
SELECT Title, round(1000 * distance) FROM test_distance ORDER BY ngramDistanceCaseInsensitive(Title, 'metrika') as distance, Title;
INSERT INTO test_01193_18429.table_1_594 VALUES 
INSERT INTO test_01193_18429.table_7_827 VALUES 
DESC file('/var/lib/clickhouse/user_files/02661_read_from_archive_test_vdj32cgq_tar_archive*.tar :: 02661_read_from_archive_test_vdj32cgq_tar_data{2..3}.csv')
INSERT INTO test_01193_18429.table_2_715 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt16(1), toUInt16(2)] WHEN (number % 3) = 0 THEN [toUInt64(2), toUInt64(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
SET group_by_two_level_threshold_bytes = 1;
SELECT INTERVAL '2 hour';
SELECT sipHash64(materialize([(1, 'a'), (2, 'b')]));
SELECT sum(number) FROM numbers3;
INSERT INTO r2 SELECT 17
CREATE TABLE test_696D204925416541295E2D784F25563C4C3D282E26666F7E482E467C49293877516F393029776C4B(x UInt8) Engine=Memory;
SET network_zstd_compression_level = 7;
select toTypeName(*), * from format(TSV, '0123');
select (1 ? (toInt64(0) as i) : toUInt16(1)) = i;
SELECT count() = 16387, sum(s) = 16387 FROM summing_00155
SELECT p, p.values.a FROM t2 ARRAY JOIN pe AS p;
DROP TABLE IF EXISTS mv1;
SELECT age('week', toDate32('1927-01-01', 'UTC'), toDate32('1927-01-08', 'UTC'), 'UTC');
CREATE TABLE test_213F3F35683734206F454E5A5B77426C406948262069382261377830536C77533E582442545F6274(x UInt8) Engine=Memory;
select 1 = multiMatchAny(materialize('pjjyzupzwllshlnatiujmwvaofr'), materialize(['lnatiujmwvao', '', 'zupzwllsh', 'nati', 'wllshl', 'hlnatiujmwv', 'mwvao', 'shlnat', 'ati', 'wllshlnatiujmwvao', 'wllshlnatiujmwvaofr', 'nat'])) from system.numbers limit 10;
SELECT _shard_num FROM cluster('test_cluster_two_shards') ORDER BY _shard_num;
SELECT 'upper range bound';
SHOW CREATE TABLE bad_conversions;
SELECT uniq(x), uniq((x)), uniq(x, y), uniq((x, y)), uniq(x, y, z), uniq((x, y, z)), uniqCombined(x), uniqCombined((x)), uniqCombined(x, y), uniqCombined((x, y)), uniqCombined(x, y, z), uniqCombined((x, y, z)), uniqCombined(17)(x), uniqCombined(17)((x)), uniqCombined(17)(x, y), uniqCombined(17)((x, y)), uniqCombined(17)(x, y, z), uniqCombined(17)((x, y, z)), uniqHLL12(x), uniqHLL12((x)), uniqHLL12(x, y), uniqHLL12((x, y)), uniqHLL12(x, y, z), uniqHLL12((x, y, z)), uniqExact(x), uniqExact((x)), uniqExact(x, y), uniqExact((x, y)), uniqExact(x, y, z), uniqExact((x, y, z)), uniqUpTo(5)(x), uniqUpTo(5)((x)), uniqUpTo(5)(x, y), uniqUpTo(5)((x, y)), uniqUpTo(5)(x, y, z), uniqUpTo(5)((x, y, z)) FROM ( SELECT number % 10 AS x, intDiv(number, 10) % 10 AS y, toString(intDiv(number, 100) % 10) AS z FROM system.numbers LIMIT 1000 );
INSERT INTO test_01193_18429.table_8_415 VALUES 
CREATE INDEX idx_tab2_4 ON tab2 (col3 DESC,col4 DESC);
DROP DATABASE IF EXISTS test_3rzwzyaj 
alter table data_01900_2 update s = 'bar_86' where 1;
CREATE TABLE test_01193_18429.table_1_179 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE DATABASE IF NOT EXISTS test_q4ju3htv 
CREATE TABLE 01681_database_for_flat_dictionary.simple_key_simple_attributes_source_table ( id UInt64, value_first String, value_second String ) ENGINE = TinyLog;
CREATE TABLE test_505E282B61472B5C5C4053645B5D5A323E4A53204348656963614B68526A477322367D545361774F(x UInt8) Engine=Memory;
CREATE TABLE arrow_decimal (d1 Decimal32(4), d2 Decimal64(8), d3 Decimal128(16), d4 Decimal256(32)) ENGINE = Memory
CREATE DATABASE IF NOT EXISTS test_gdr3z5hd 
SELECT 'Running test stateless/01848_partition_value_column.sql from pid=1720' 
EXPLAIN SYNTAX SELECT * FROM test_view WHERE id = 2;
SELECT avgWeighted(x, w) FROM values('x UInt64, w UInt16', (4, 1), (1, 0), (10, 2));
CREATE TABLE column_swap_test_test (i Int64, a String, b UInt64, CONSTRAINT c1 ASSUME b = cityHash64(a)) ENGINE = MergeTree() ORDER BY i;
CREATE TABLE test_02908_r2_292 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_292', 'r2') ORDER BY tuple()
INSERT INTO src_4 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 91
SELECT count() FROM (SELECT * FROM remote('127.0.0.2', system.numbers) LIMIT 100) SETTINGS max_rows_to_read_leaf=100;
SELECT toInt64(0) AS x, toInt8(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
SELECT number AS id, toString(number) AS s, range(number) AS arr FROM numbers(10) FORMAT JSONCompactEachRow
select * from url('http://guest:guest@[2001:db8:1::242:ac11:2]:55969/', 'RawBLOB', 'a String')
SELECT count() from tab_02473 PREWHERE b > 0 AND b <= 70 AND c > 0 AND c <= 51 AND d > 5 AND d <= 57 WHERE a == 0;
INSERT INTO test_01193_18429.table_6_327 VALUES 
CREATE TABLE test_3C2B4764735146562F4F356645597960435B5C27434224552062406540266D405E6E6569733E7376(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00083_create_merge_tree_zookeeper_long.sql from pid=1718' 
SELECT a, b FROM (SELECT 1 AS a) ANY LEFT JOIN (SELECT 1 AS a, 1 AS b) USING (a) WHERE b = 0;
SELECT 'col2';
drop table if exists test_02245_2;
INSERT INTO test_01193_18429.table_9_842 VALUES 
SELECT 'aes-128-cbc' AS mode, decrypt(mode, '[HIDDEN]') = input FROM encryption_test
INSERT INTO r2 SELECT 70
SELECT toBool(-1);
select makeDate32(2150,1,1);
DETACH DATABASE db_test_16wuveew;
SELECT 'Running test stateless/02243_in_ip_address.sql from pid=1726' 
CREATE TABLE test_01193_18429.table_1_943 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_z1gqaxpz 
select format('{}{}{}', materialize('a'), materialize('b'), toFixedString('c', 1)) == 'abc' from system.numbers limit 5;
SELECT hasTokenCaseInsensitive('hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,needle', 'NEEDLE'), ' expecting ', 1;
CREATE TABLE dst (`count` UInt64) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 64389, min_bytes_for_wide_part = 91146556, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 9908, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 2046217879, index_granularity_bytes = 16353702, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 15339, primary_key_compress_block_size = 81137
SELECT * FROM temp WHERE y IN (toDecimal128(128, 3));
DROP DATABASE IF EXISTS test_y1rzv3bj 
CREATE TABLE test_table_join ( id UInt64, value String ) ENGINE=Join(Any, Left, id);
CREATE TABLE test_576E5E2336622644352036467835372F27272A4E6C5F68624738665B745A5939767C2B6237473935(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_10_239 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT '*** optimize_aggregation_in_order = 1, max_bytes_before_external_group_by = 1, group_by_two_level_threshold = 1 ***';
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c8) AND c6 AND (NOT c3)) SETTINGS convert_query_to_cnf = 1
select throwIf(A != 12) from src format Null
select arr1, arrayPushBack(arr1, val) from array_functions;
SELECT toTypeName(initializeAggregation('uniqExactState', toNullable('foo')));
SELECT endUserIDs._experience.aaid.namespace FROM t_nested_tuple FORMAT JSONEachRow;
DROP TABLE IF EXISTS partitioned_by_string;
INSERT INTO lc_nullable SELECT groupArray(number) AS order_key, groupArray(toInt8(number)) AS i8, groupArray(toInt16(number)) AS i16, groupArray(toInt32(number)) AS i32, groupArray(toInt64(number)) AS i64, groupArray(toUInt8(number)) AS u8, groupArray(toUInt16(number)) AS u16, groupArray(toUInt32(number)) AS u32, groupArray(toUInt64(number)) AS u64, groupArray(toFloat32(number)) AS f32, groupArray(toFloat64(number)) AS f64, groupArray(toDate(number, 'Asia/Istanbul')) AS date, groupArray(toDateTime(number, 'Asia/Istanbul')) AS date_time, groupArray(toString(number)) AS str, groupArray(toFixedString(toString(number), 5)) AS fixed_string FROM (SELECT number FROM system.numbers WHERE number >= 10 LIMIT 15);
INSERT INTO test_01193_18429.table_5_272 VALUES 
SELECT INTERVAL '2' month;
CREATE DATABASE IF NOT EXISTS test_i7093ojw 
SELECT 'Running test stateless/00953_zookeeper_suetin_deduplication_bug.sh from pid=1718' 
SELECT transform(toString(number), ['3', '5', '7'], [111, 222, null], -1) FROM system.numbers LIMIT 10;
alter table many_mutations delete where y = 608 * 2 settings mutations_sync = 0;
CREATE TABLE test_01193_18429.table_3_459 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select count() from partslost_2;
CREATE TABLE test_01193_18429.table_5_892 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_4_443 VALUES 
SELECT 'status:';
INSERT INTO 01504_test_memory SELECT number % 77 AS k, SUM(number) AS value, (1, 1.2), bitmapBuild(groupArray(number)) FROM numbers(10000000) group by k;
CREATE TABLE test_01193_18429.table_5_923 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT arraySort(geohashesInBox(-1.0, -1.0, 1.0, 1.0, 3));
CREATE TABLE test_01193_18429.table_7_176 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE mem2 (key Int) Engine=Memory();
select * from format(JSONEachRow, '{"obj" : {"a" : [{}, {"b" : null}, {"c" : {"d" : 10}}]}}, {"obj" : {"a" : [{"e" : "Hello", "b" : [1,2,3]}]}}');
DROP DATABASE IF EXISTS test_dimga3iu 
select 1 == any (select number from numbers(2, 10));
SELECT empty([]);
SELECT count() as d, a, b, c FROM test02313 GROUP BY CUBE(a, b, c) ORDER BY d, a, b, c;
ALTER TABLE minmax_idx DROP INDEX idx3;
SELECT range(0)[1];
CREATE TABLE test_7B3F773F7823723641273C3524656A57486134483123312246376623396D5F3B25772B756F4E3530(x UInt8) Engine=Memory;
select toYYYYMM(date) as date_, n from (select [toDate('20230815'), toDate('20230816')] as date, [1, 2] as n ) as data array join date, n where date_ >= 202303;
SELECT dictGetHierarchy('hierarchy_flat_dictionary', 4);
SELECT bitCount(CAST(0xFFFFFFFFFFFFFFFF AS Int256));
SELECT toUInt16(NULL, NULL);
SELECT * from ( EXPLAIN indexes = 1 SELECT * FROM data_02771 WHERE x = 1 AND y = 2 SETTINGS ignore_data_skipping_indices='xy_idx' ) WHERE explain NOT LIKE '%Expression%' AND explain NOT LIKE '%Filter%';
SELECT * FROM test WHERE timestamp >= '2020-10-15' ORDER by timestamp;
CREATE WINDOW VIEW test_kna0pcoi.wv INNER ENGINE = AggregatingMergeTree ORDER BY wid ENGINE = Memory AS SELECT count(a) AS count, hop(timestamp, toIntervalSecond('1'), toIntervalSecond('3')) AS wid FROM test_kna0pcoi.mt GROUP BY wid
SELECT (c1, c2) as t FROM values((-5, 0), (nan, 0.), (0., 0.), (5., 5.)) ORDER BY t DESC LIMIT 1;
INSERT INTO test_01193_18429.table_1_13 VALUES 
SELECT * FROM file('/var/lib/clickhouse/user_files/02661_read_from_archive_test_fv9w6ph7_zip_archive3.zip :: 02661_read_from_archive_test_fv9w6ph7_zip_data*.csv') ORDER BY 1, 2
DROP DATABASE IF EXISTS test_jv1uzqz1 
SELECT toTypeName(nest.a), toTypeName(nest.b), toTypeName(nest.c) FROM decimal;
OPTIMIZE TABLE adaptive_granularity_alter1 FINAL;
SELECT COUNT(*) FROM six_rows_per_granule;
CREATE TABLE test_01193_18429.table_5_716 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_9_144 VALUES 
CREATE TABLE test_01193_18429.table_8_562 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO src_0 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 31
select accurateCastOrNull('1', 'Bool');
CREATE TABLE test_table_1 (`id` UInt32) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 34011, min_bytes_for_wide_part = 35238940, ratio_of_defaults_for_sparse_serialization = 0.44592469930648804, replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 22074, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1077896332, index_granularity_bytes = 5865864, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 14945, primary_key_compress_block_size = 58045
select parseDateTime('Aug 13, 2022, 07:58:32 PM', '%b %e, %G, %l:%i:%s %p', 'UTC');
SELECT CASE WHEN 1 THEN toFixedString('foo', 16) WHEN (col1 % 3) = 0 THEN col3 ELSE col4 END FROM multi_if_check;
SELECT toBool('f');
SELECT toFloat32(1.23) AS k, count() GROUP BY k WITH TOTALS SETTINGS allow_experimental_analyzer = 1 FORMAT JSONCompact
CREATE TABLE test_rows_compact_part__fuzz_11 (`x` UInt32) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 50062, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 19273, prefer_fetch_merged_part_size_threshold = 6122850289, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 56, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 30075717, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 36244, primary_key_compress_block_size = 71489
CREATE TABLE test_644C3620582A26693969454169687679585C523E434E7C3D386C66365C6077465A44344366377965(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_1_560 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_6_728 VALUES 
SELECT arrayMap(x -> id + arrayMap(x -> id + (SELECT id FROM test_table UNION DISTINCT SELECT id FROM test_table), [1])[1], [1,2,3]) FROM test_table;
SELECT ngramMinHashArgUTF8(NULL);
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c6) AND c0 AND (NOT c6) AND c2) OR ((NOT c2) AND c9) SETTINGS convert_query_to_cnf = 0
DETACH TABLE t_remove_sample_by;
CREATE TABLE test_01193_18429.table_9_106 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SET max_block_size = 65000, min_insert_block_size_rows = 65000, min_insert_block_size_bytes = '1M';
CREATE DATABASE IF NOT EXISTS test_s2c0m1l9 
INSERT INTO r6 SELECT 80 % 10 = 6 ? 80 - 1 : 80
SELECT if(toUInt8(1), NULL, toNullable(toUInt8(0))) AS x, if(x = 0, 'fail', 'ok');
CREATE TABLE test_3B2B57517A3C3374435E517A465970407C5F227D6E472455477567732D713F2F2D7E5258437C4C5D(x UInt8) Engine=Memory;
INSERT INTO test SELECT number AS key, sipHash64(number) AS val FROM numbers(512);
SELECT dictGet('02185_range_dictionary', 'value', 0, 0);
SELECT '2015-02-05' < toDate('2015-02-04');
DROP DATABASE IF EXISTS test_0qzuguj6 
SELECT CAST('1.1.1.1' as IPv6) as v, toTypeName(v);
INSERT INTO test_01193_18429.table_6_170 VALUES 
SELECT 'Running test stateless/00350_count_distinct.sql from pid=1713' 
SELECT 'Running test stateless/02122_parallel_formatting_Template.sh from pid=1724' 
INSERT INTO r6 SELECT 97 % 10 = 6 ? 97 - 1 : 97
select arrayMap(t->tuple(t.1, t.2*2), [(materialize('1'),2)]);
SELECT `data2_01071`.`key`, `data2_01071`.`sub_key` FROM `test_zrr71z40`.`data2_01071` WHERE `key` = 1
INSERT INTO test_01193_18429.table_6_261 VALUES 
SELECT 'Running test stateless/00575_illegal_column_exception_when_drop_depen_column.sh from pid=1713' 
DROP TABLE IF EXISTS comment_test_table;
SELECT arrayShuffle([1,2,3,4,5,6,7,8,9,9223372036854775808], 0xbad_cafe);
SELECT sum(number < 1000 ? NULL : number) FROM numbers(10);
SELECT multiIf((col1 % 2) = 0, col2, (col1 % 3) = 0, toFixedString(col3, 16), 'baz') FROM multi_if_check;
CREATE TABLE test_01193_18429.table_9_481 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT simpleJSONExtractFloat('{"myparam":null}', 'myparam');
SELECT 'Running test stateless/02916_csv_infer_numbers_from_strings.sql from pid=1722' 
SHOW CREATE TABLE test_01114_1.mt
SELECT t1.value, t2.value, t3.value FROM test_table_join_1 AS t1 INNER JOIN test_table_join_2 AS t2 ON t1.id = t2.id OR t1.id = t2.id INNER JOIN test_table_join_3 AS t3 ON t2.id = t3.id OR t3.id = t2.id;
DROP DICTIONARY 01684_database_for_cache_dictionary.cache_dictionary_simple_key_complex_attributes;
SELECT countIf(explain like '%COMMA%' OR explain like '%CROSS%'), countIf(explain like '%INNER%') FROM ( EXPLAIN QUERY TREE SELECT t1.a FROM t1 JOIN t2 USING a CROSS JOIN t3 SETTINGS allow_experimental_analyzer = 1);
INSERT INTO test_01193_18429.table_3_594 VALUES 
CREATE DATABASE IF NOT EXISTS test_8op4dgj1 
CREATE DATABASE IF NOT EXISTS test_zg6fd2ms 
SELECT count() > 0 FROM system.tables WHERE database IN ('system', 'test_11dmr3kg') SETTINGS legacy_column_name_of_tuple_literal = 1
INSERT INTO test_01193_18429.table_1_513 VALUES 
SELECT accurateCast(1e19, 'UInt256');
CREATE TABLE test_57457044797D3C3A295D772471352A33743E61652B3665732F755F2B3B6F5A343A247B7658292822(x UInt8) Engine=Memory;
optimize table tt final
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 3192, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT leftUTF8('ÃÂÃÂÃÂ¸ÃÂ²ÃÂµÃÂ', 4);
DROP DATABASE IF EXISTS test_91q24q6z 
SET distributed_ddl_output_mode='throw';
SELECT trunc(-1);
select 0 = isValidUTF8(toFixedString('\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xF1\x80\x80', 33)) from system.numbers limit 10;
CREATE TABLE test_01193_18429.table_2_195 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT multiIf((col1 % 2) = 0, ['foo', 'bar'], (col1 % 3) = 0, [col4, 'bar'], [col6, col7]) FROM multi_if_check;
select length(map());
SELECT 'Running test stateless/02735_array_map_array_of_tuples.sql from pid=1714' 
select toValidUTF8('\xF2\x81\xBE\x99') from system.numbers limit 10;
CREATE TABLE test_01193_18429.table_9_278 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_5_12 VALUES 
 SELECT sipHash64(9, groupArray((name, type))) FROM (SELECT name, type FROM system.columns WHERE database = 'system' AND table = 'asynchronous_metric_log' ORDER BY position) 
CREATE DATABASE IF NOT EXISTS test_swv8yoz8 
CREATE TABLE test_553176764E6520382B35446A6271466B796A2A6937326E65704D284B5F306A34464B6D793B744858(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS test_00961;
OPTIMIZE TABLE bug FINAL;
SELECT 1270 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'asn', tuple(IPv4StringToNum('127.0.0.0')))
alter table data_01900_2 update s = 'bar_4' where 1;
CREATE TABLE test_3D792F5345786330264E603E5A59326C324B5F5927452F733634296E54362A4244692C33313C6A58(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_9_350 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_2_846 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/02973_dictionary_table_exception_fix.sql from pid=1718' 
DROP DICTIONARY IF EXISTS dictdb_01376.dict_exists;
select 'max(key) from tab_00612 where (key, left array join n.x) in ((1, 1), (2, 2))';
DROP DATABASE IF EXISTS test_kupl6fm4 
INSERT INTO table_gcd_codec_one_hundred_zeros SELECT 0 FROM numbers(100);
CREATE TABLE test_01193_18429.table_6_277 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT count(DISTINCT number >= 5 ? number : NULL) FROM numbers(10);
CREATE DATABASE IF NOT EXISTS test_s5947h0w 
INSERT INTO test_01193_18429.table_3_913 VALUES 
SELECT * FROM numbers(34585)
SELECT multiIf((col1 % 2) = 0, 'foo', (col1 % 3) = 0, col3, 'baz') FROM multi_if_check;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c3)) OR (c6) OR ((NOT c9) AND c1 AND (NOT c0)) OR (c4 AND c9 AND c4 AND c1 AND c9) OR (c1 AND c0) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_empty_order_by(a UInt8, b String) ENGINE = MergeTree() PRIMARY KEY (a) SETTINGS index_granularity = 8192;
CREATE TABLE test_3E6C5E78366A3C6F515E78396D6A41332D5A7563455436293E7723225D3970385151666C76562947(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_3_785 VALUES 
CREATE TABLE test_01193_18429.table_3_496 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP TABLE IF EXISTS pipe;
drop table t14;
EXPLAIN AST ALTER TABLE t FREEZE;
SELECT 'Running test stateless/00310_tskv.sh from pid=1720' 
CREATE INDEX idx_tab4_0 ON tab4 (col1,col3 DESC,col0);
INSERT INTO r3 SELECT 76
set mutations_sync=1;
SELECT s, y FROM test_02559 PREWHERE x AND NOT y ORDER BY s;
SELECT multiIf((col1 % 2) = 0, [col2, 'bar'], (col1 % 3) = 0, [col4, col5], [col6, 'bar']) FROM multi_if_check;
SELECT multiIf((number % 2) = 0, toInt16(1), (number % 3) = 0, toInt16(2), toUInt8(3)) FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_rsn1deef 
SELECT CASE WHEN (number % 2) = 0 THEN toFloat64(1) WHEN (number % 3) = 0 THEN toInt32(2) ELSE toUInt32(3) END FROM system.numbers LIMIT 10;
CREATE TABLE item (`i_item_sk` Int64, `i_item_id` String, `i_rec_start_date` Nullable(Date), `i_rec_end_date` Nullable(Date), `i_item_desc` Nullable(String), `i_current_price` Nullable(Float32), `i_wholesale_cost` Nullable(Float32), `i_brand_id` Nullable(Int64), `i_brand` Nullable(String), `i_class_id` Nullable(Int64), `i_class` Nullable(String), `i_category_id` Nullable(Int64), `i_category` Nullable(String), `i_manufact_id` Nullable(Int64), `i_manufact` Nullable(String), `i_size` Nullable(String), `i_formulation` Nullable(String), `i_color` Nullable(String), `i_units` Nullable(String), `i_container` Nullable(String), `i_manager_id` Nullable(Int64), `i_product_name` Nullable(String)) ENGINE = MergeTree ORDER BY i_item_sk SETTINGS index_granularity = 54709, min_bytes_for_wide_part = 729090018, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 22777, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 256871, vertical_merge_algorithm_min_columns_to_activate = 36, min_merge_bytes_to_use_direct_io = 7728769504, index_granularity_bytes = 9282957, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 19664, primary_key_compress_block_size = 11428
select status from refreshes -- 210
CREATE TABLE test_01193_18429.table_9_426 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO src VALUES /* (48, 1) */ 
detach table data_read;
SELECT throwIf((SELECT sum(nm) FROM mv) != 71) FORMAT Null;
CREATE TABLE test_01193_18429.table_9_548 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT avgWeighted(x, w) FROM values('x Float64, w UInt16', (4, 1), (1, 0), (10, 2));
SELECT CASE x WHEN 1 THEN 'hello' WHEN 2 THEN 'world' ELSE 'unknow' END FROM mergetree_00609;
CREATE TABLE test_01193_18429.table_4_866 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE rep_fsync_r2 (`key` Int) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/rep_fsync', 'r2') ORDER BY key SETTINGS min_bytes_for_wide_part = 0, fsync_after_insert = 1, index_granularity = 25801, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 79, merge_max_block_size = 9385, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 853151, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 5985280, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 59185, primary_key_compress_block_size = 77080
INSERT INTO test_01193_18429.table_5_465 VALUES 
Select sum(1 + number) from numbers(10);
SELECT YYYYMMDDToDate32(NULL, NULL, NULL);
SELECT '*** Partitioned by a (Date, UInt8) tuple ***';
SELECT multiIf((col1 % 2) = 0, col2, (col1 % 3) = 0, 'bar', toFixedString('baz', 16)) FROM multi_if_check;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toInt8(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
DROP TABLE IF EXISTS template2
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c9)) OR ((NOT c3) AND c7 AND c1) OR (c8 AND (NOT c7) AND (NOT c8) AND c9 AND (NOT c7)) OR (c1 AND (NOT c5) AND (NOT c3) AND (NOT c1)) OR (c1 AND (NOT c3) AND (NOT c5) AND c7 AND (NOT c5)) OR (c9 AND c4 AND c0 AND c2 AND c8) OR (c5 AND (NOT c8) AND c8 AND (NOT c5) AND (NOT c3)) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_01193_18429.table_10_407 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 0, 1, 0 = 1, 0 != 1, 0 < 1, 0 <= 1, 0 > 1, 0 >= 1, 1 = 0, 1 != 0, 1 < 0, 1 <= 0, 1 > 0, 1 >= 0 , toUInt8(0) = toUInt8(1), toUInt8(0) != toUInt8(1), toUInt8(0) < toUInt8(1), toUInt8(0) <= toUInt8(1), toUInt8(0) > toUInt8(1), toUInt8(0) >= toUInt8(1), toUInt8(1) = toUInt8(0), toUInt8(1) != toUInt8(0), toUInt8(1) < toUInt8(0), toUInt8(1) <= toUInt8(0), toUInt8(1) > toUInt8(0), toUInt8(1) >= toUInt8(0) , toUInt8(0) = toInt8(1), toUInt8(0) != toInt8(1), toUInt8(0) < toInt8(1), toUInt8(0) <= toInt8(1), toUInt8(0) > toInt8(1), toUInt8(0) >= toInt8(1), toInt8(1) = toUInt8(0), toInt8(1) != toUInt8(0), toInt8(1) < toUInt8(0), toInt8(1) <= toUInt8(0), toInt8(1) > toUInt8(0), toInt8(1) >= toUInt8(0) , toUInt8(0) = toUInt16(1), toUInt8(0) != toUInt16(1), toUInt8(0) < toUInt16(1), toUInt8(0) <= toUInt16(1), toUInt8(0) > toUInt16(1), toUInt8(0) >= toUInt16(1), toUInt16(1) = toUInt8(0), toUInt16(1) != toUInt8(0), toUInt16(1) < toUInt8(0), toUInt16(1) <= toUInt8(0), toUInt16(1) > toUInt8(0), toUInt16(1) >= toUInt8(0) , toUInt8(0) = toInt16(1), toUInt8(0) != toInt16(1), toUInt8(0) < toInt16(1), toUInt8(0) <= toInt16(1), toUInt8(0) > toInt16(1), toUInt8(0) >= toInt16(1), toInt16(1) = toUInt8(0), toInt16(1) != toUInt8(0), toInt16(1) < toUInt8(0), toInt16(1) <= toUInt8(0), toInt16(1) > toUInt8(0), toInt16(1) >= toUInt8(0) , toUInt8(0) = toUInt32(1), toUInt8(0) != toUInt32(1), toUInt8(0) < toUInt32(1), toUInt8(0) <= toUInt32(1), toUInt8(0) > toUInt32(1), toUInt8(0) >= toUInt32(1), toUInt32(1) = toUInt8(0), toUInt32(1) != toUInt8(0), toUInt32(1) < toUInt8(0), toUInt32(1) <= toUInt8(0), toUInt32(1) > toUInt8(0), toUInt32(1) >= toUInt8(0) , toUInt8(0) = toInt32(1), toUInt8(0) != toInt32(1), toUInt8(0) < toInt32(1), toUInt8(0) <= toInt32(1), toUInt8(0) > toInt32(1), toUInt8(0) >= toInt32(1), toInt32(1) = toUInt8(0), toInt32(1) != toUInt8(0), toInt32(1) < toUInt8(0), toInt32(1) <= toUInt8(0), toInt32(1) > toUInt8(0), toInt32(1) >= toUInt8(0) , toUInt8(0) = toUInt64(1), toUInt8(0) != toUInt64(1), toUInt8(0) < toUInt64(1), toUInt8(0) <= toUInt64(1), toUInt8(0) > toUInt64(1), toUInt8(0) >= toUInt64(1), toUInt64(1) = toUInt8(0), toUInt64(1) != toUInt8(0), toUInt64(1) < toUInt8(0), toUInt64(1) <= toUInt8(0), toUInt64(1) > toUInt8(0), toUInt64(1) >= toUInt8(0) , toUInt8(0) = toInt64(1), toUInt8(0) != toInt64(1), toUInt8(0) < toInt64(1), toUInt8(0) <= toInt64(1), toUInt8(0) > toInt64(1), toUInt8(0) >= toInt64(1), toInt64(1) = toUInt8(0), toInt64(1) != toUInt8(0), toInt64(1) < toUInt8(0), toInt64(1) <= toUInt8(0), toInt64(1) > toUInt8(0), toInt64(1) >= toUInt8(0) , toInt8(0) = toUInt8(1), toInt8(0) != toUInt8(1), toInt8(0) < toUInt8(1), toInt8(0) <= toUInt8(1), toInt8(0) > toUInt8(1), toInt8(0) >= toUInt8(1), toUInt8(1) = toInt8(0), toUInt8(1) != toInt8(0), toUInt8(1) < toInt8(0), toUInt8(1) <= toInt8(0), toUInt8(1) > toInt8(0), toUInt8(1) >= toInt8(0) , toInt8(0) = toInt8(1), toInt8(0) != toInt8(1), toInt8(0) < toInt8(1), toInt8(0) <= toInt8(1), toInt8(0) > toInt8(1), toInt8(0) >= toInt8(1), toInt8(1) = toInt8(0), toInt8(1) != toInt8(0), toInt8(1) < toInt8(0), toInt8(1) <= toInt8(0), toInt8(1) > toInt8(0), toInt8(1) >= toInt8(0) , toInt8(0) = toUInt16(1), toInt8(0) != toUInt16(1), toInt8(0) < toUInt16(1), toInt8(0) <= toUInt16(1), toInt8(0) > toUInt16(1), toInt8(0) >= toUInt16(1), toUInt16(1) = toInt8(0), toUInt16(1) != toInt8(0), toUInt16(1) < toInt8(0), toUInt16(1) <= toInt8(0), toUInt16(1) > toInt8(0), toUInt16(1) >= toInt8(0) , toInt8(0) = toInt16(1), toInt8(0) != toInt16(1), toInt8(0) < toInt16(1), toInt8(0) <= toInt16(1), toInt8(0) > toInt16(1), toInt8(0) >= toInt16(1), toInt16(1) = toInt8(0), toInt16(1) != toInt8(0), toInt16(1) < toInt8(0), toInt16(1) <= toInt8(0), toInt16(1) > toInt8(0), toInt16(1) >= toInt8(0) , toInt8(0) = toUInt32(1), toInt8(0) != toUInt32(1), toInt8(0) < toUInt32(1), toInt8(0) <= toUInt32(1), toInt8(0) > toUInt32(1), toInt8(0) >= toUInt32(1), toUInt32(1) = toInt8(0), toUInt32(1) != toInt8(0), toUInt32(1) < toInt8(0), toUInt32(1) <= toInt8(0), toUInt32(1) > toInt8(0), toUInt32(1) >= toInt8(0) , toInt8(0) = toInt32(1), toInt8(0) != toInt32(1), toInt8(0) < toInt32(1), toInt8(0) <= toInt32(1), toInt8(0) > toInt32(1), toInt8(0) >= toInt32(1), toInt32(1) = toInt8(0), toInt32(1) != toInt8(0), toInt32(1) < toInt8(0), toInt32(1) <= toInt8(0), toInt32(1) > toInt8(0), toInt32(1) >= toInt8(0) , toInt8(0) = toUInt64(1), toInt8(0) != toUInt64(1), toInt8(0) < toUInt64(1), toInt8(0) <= toUInt64(1), toInt8(0) > toUInt64(1), toInt8(0) >= toUInt64(1), toUInt64(1) = toInt8(0), toUInt64(1) != toInt8(0), toUInt64(1) < toInt8(0), toUInt64(1) <= toInt8(0), toUInt64(1) > toInt8(0), toUInt64(1) >= toInt8(0) , toInt8(0) = toInt64(1), toInt8(0) != toInt64(1), toInt8(0) < toInt64(1), toInt8(0) <= toInt64(1), toInt8(0) > toInt64(1), toInt8(0) >= toInt64(1), toInt64(1) = toInt8(0), toInt64(1) != toInt8(0), toInt64(1) < toInt8(0), toInt64(1) <= toInt8(0), toInt64(1) > toInt8(0), toInt64(1) >= toInt8(0) , toUInt16(0) = toUInt8(1), toUInt16(0) != toUInt8(1), toUInt16(0) < toUInt8(1), toUInt16(0) <= toUInt8(1), toUInt16(0) > toUInt8(1), toUInt16(0) >= toUInt8(1), toUInt8(1) = toUInt16(0), toUInt8(1) != toUInt16(0), toUInt8(1) < toUInt16(0), toUInt8(1) <= toUInt16(0), toUInt8(1) > toUInt16(0), toUInt8(1) >= toUInt16(0) , toUInt16(0) = toInt8(1), toUInt16(0) != toInt8(1), toUInt16(0) < toInt8(1), toUInt16(0) <= toInt8(1), toUInt16(0) > toInt8(1), toUInt16(0) >= toInt8(1), toInt8(1) = toUInt16(0), toInt8(1) != toUInt16(0), toInt8(1) < toUInt16(0), toInt8(1) <= toUInt16(0), toInt8(1) > toUInt16(0), toInt8(1) >= toUInt16(0) , toUInt16(0) = toUInt16(1), toUInt16(0) != toUInt16(1), toUInt16(0) < toUInt16(1), toUInt16(0) <= toUInt16(1), toUInt16(0) > toUInt16(1), toUInt16(0) >= toUInt16(1), toUInt16(1) = toUInt16(0), toUInt16(1) != toUInt16(0), toUInt16(1) < toUInt16(0), toUInt16(1) <= toUInt16(0), toUInt16(1) > toUInt16(0), toUInt16(1) >= toUInt16(0) , toUInt16(0) = toInt16(1), toUInt16(0) != toInt16(1), toUInt16(0) < toInt16(1), toUInt16(0) <= toInt16(1), toUInt16(0) > toInt16(1), toUInt16(0) >= toInt16(1), toInt16(1) = toUInt16(0), toInt16(1) != toUInt16(0), toInt16(1) < toUInt16(0), toInt16(1) <= toUInt16(0), toInt16(1) > toUInt16(0), toInt16(1) >= toUInt16(0) , toUInt16(0) = toUInt32(1), toUInt16(0) != toUInt32(1), toUInt16(0) < toUInt32(1), toUInt16(0) <= toUInt32(1), toUInt16(0) > toUInt32(1), toUInt16(0) >= toUInt32(1), toUInt32(1) = toUInt16(0), toUInt32(1) != toUInt16(0), toUInt32(1) < toUInt16(0), toUInt32(1) <= toUInt16(0), toUInt32(1) > toUInt16(0), toUInt32(1) >= toUInt16(0) , toUInt16(0) = toInt32(1), toUInt16(0) != toInt32(1), toUInt16(0) < toInt32(1), toUInt16(0) <= toInt32(1), toUInt16(0) > toInt32(1), toUInt16(0) >= toInt32(1), toInt32(1) = toUInt16(0), toInt32(1) != toUInt16(0), toInt32(1) < toUInt16(0), toInt32(1) <= toUInt16(0), toInt32(1) > toUInt16(0), toInt32(1) >= toUInt16(0) , toUInt16(0) = toUInt64(1), toUInt16(0) != toUInt64(1), toUInt16(0) < toUInt64(1), toUInt16(0) <= toUInt64(1), toUInt16(0) > toUInt64(1), toUInt16(0) >= toUInt64(1), toUInt64(1) = toUInt16(0), toUInt64(1) != toUInt16(0), toUInt64(1) < toUInt16(0), toUInt64(1) <= toUInt16(0), toUInt64(1) > toUInt16(0), toUInt64(1) >= toUInt16(0) , toUInt16(0) = toInt64(1), toUInt16(0) != toInt64(1), toUInt16(0) < toInt64(1), toUInt16(0) <= toInt64(1), toUInt16(0) > toInt64(1), toUInt16(0) >= toInt64(1), toInt64(1) = toUInt16(0), toInt64(1) != toUInt16(0), toInt64(1) < toUInt16(0), toInt64(1) <= toUInt16(0), toInt64(1) > toUInt16(0), toInt64(1) >= toUInt16(0) , toInt16(0) = toUInt8(1), toInt16(0) != toUInt8(1), toInt16(0) < toUInt8(1), toInt16(0) <= toUInt8(1), toInt16(0) > toUInt8(1), toInt16(0) >= toUInt8(1), toUInt8(1) = toInt16(0), toUInt8(1) != toInt16(0), toUInt8(1) < toInt16(0), toUInt8(1) <= toInt16(0), toUInt8(1) > toInt16(0), toUInt8(1) >= toInt16(0) , toInt16(0) = toInt8(1), toInt16(0) != toInt8(1), toInt16(0) < toInt8(1), toInt16(0) <= toInt8(1), toInt16(0) > toInt8(1), toInt16(0) >= toInt8(1), toInt8(1) = toInt16(0), toInt8(1) != toInt16(0), toInt8(1) < toInt16(0), toInt8(1) <= toInt16(0), toInt8(1) > toInt16(0), toInt8(1) >= toInt16(0) , toInt16(0) = toUInt16(1), toInt16(0) != toUInt16(1), toInt16(0) < toUInt16(1), toInt16(0) <= toUInt16(1), toInt16(0) > toUInt16(1), toInt16(0) >= toUInt16(1), toUInt16(1) = toInt16(0), toUInt16(1) != toInt16(0), toUInt16(1) < toInt16(0), toUInt16(1) <= toInt16(0), toUInt16(1) > toInt16(0), toUInt16(1) >= toInt16(0) , toInt16(0) = toInt16(1), toInt16(0) != toInt16(1), toInt16(0) < toInt16(1), toInt16(0) <= toInt16(1), toInt16(0) > toInt16(1), toInt16(0) >= toInt16(1), toInt16(1) = toInt16(0), toInt16(1) != toInt16(0), toInt16(1) < toInt16(0), toInt16(1) <= toInt16(0), toInt16(1) > toInt16(0), toInt16(1) >= toInt16(0) , toInt16(0) = toUInt32(1), toInt16(0) != toUInt32(1), toInt16(0) < toUInt32(1), toInt16(0) <= toUInt32(1), toInt16(0) > toUInt32(1), toInt16(0) >= toUInt32(1), toUInt32(1) = toInt16(0), toUInt32(1) != toInt16(0), toUInt32(1) < toInt16(0), toUInt32(1) <= toInt16(0), toUInt32(1) > toInt16(0), toUInt32(1) >= toInt16(0) , toInt16(0) = toInt32(1), toInt16(0) != toInt32(1), toInt16(0) < toInt32(1), toInt16(0) <= toInt32(1), toInt16(0) > toInt32(1), toInt16(0) >= toInt32(1), toInt32(1) = toInt16(0), toInt32(1) != toInt16(0), toInt32(1) < toInt16(0), toInt32(1) <= toInt16(0), toInt32(1) > toInt16(0), toInt32(1) >= toInt16(0) , toInt16(0) = toUInt64(1), toInt16(0) != toUInt64(1), toInt16(0) < toUInt64(1), toInt16(0) <= toUInt64(1), toInt16(0) > toUInt64(1), toInt16(0) >= toUInt64(1), toUInt64(1) = toInt16(0), toUInt64(1) != toInt16(0), toUInt64(1) < toInt16(0), toUInt64(1) <= toInt16(0), toUInt64(1) > toInt16(0), toUInt64(1) >= toInt16(0) , toInt16(0) = toInt64(1), toInt16(0) != toInt64(1), toInt16(0) < toInt64(1), toInt16(0) <= toInt64(1), toInt16(0) > toInt64(1), toInt16(0) >= toInt64(1), toInt64(1) = toInt16(0), toInt64(1) != toInt16(0), toInt64(1) < toInt16(0), toInt64(1) <= toInt16(0), toInt64(1) > toInt16(0), toInt64(1) >= toInt16(0) , toUInt32(0) = toUInt8(1), toUInt32(0) != toUInt8(1), toUInt32(0) < toUInt8(1), toUInt32(0) <= toUInt8(1), toUInt32(0) > toUInt8(1), toUInt32(0) >= toUInt8(1), toUInt8(1) = toUInt32(0), toUInt8(1) != toUInt32(0), toUInt8(1) < toUInt32(0), toUInt8(1) <= toUInt32(0), toUInt8(1) > toUInt32(0), toUInt8(1) >= toUInt32(0) , toUInt32(0) = toInt8(1), toUInt32(0) != toInt8(1), toUInt32(0) < toInt8(1), toUInt32(0) <= toInt8(1), toUInt32(0) > toInt8(1), toUInt32(0) >= toInt8(1), toInt8(1) = toUInt32(0), toInt8(1) != toUInt32(0), toInt8(1) < toUInt32(0), toInt8(1) <= toUInt32(0), toInt8(1) > toUInt32(0), toInt8(1) >= toUInt32(0) , toUInt32(0) = toUInt16(1), toUInt32(0) != toUInt16(1), toUInt32(0) < toUInt16(1), toUInt32(0) <= toUInt16(1), toUInt32(0) > toUInt16(1), toUInt32(0) >= toUInt16(1), toUInt16(1) = toUInt32(0), toUInt16(1) != toUInt32(0), toUInt16(1) < toUInt32(0), toUInt16(1) <= toUInt32(0), toUInt16(1) > toUInt32(0), toUInt16(1) >= toUInt32(0) , toUInt32(0) = toInt16(1), toUInt32(0) != toInt16(1), toUInt32(0) < toInt16(1), toUInt32(0) <= toInt16(1), toUInt32(0) > toInt16(1), toUInt32(0) >= toInt16(1), toInt16(1) = toUInt32(0), toInt16(1) != toUInt32(0), toInt16(1) < toUInt32(0), toInt16(1) <= toUInt32(0), toInt16(1) > toUInt32(0), toInt16(1) >= toUInt32(0) , toUInt32(0) = toUInt32(1), toUInt32(0) != toUInt32(1), toUInt32(0) < toUInt32(1), toUInt32(0) <= toUInt32(1), toUInt32(0) > toUInt32(1), toUInt32(0) >= toUInt32(1), toUInt32(1) = toUInt32(0), toUInt32(1) != toUInt32(0), toUInt32(1) < toUInt32(0), toUInt32(1) <= toUInt32(0), toUInt32(1) > toUInt32(0), toUInt32(1) >= toUInt32(0) , toUInt32(0) = toInt32(1), toUInt32(0) != toInt32(1), toUInt32(0) < toInt32(1), toUInt32(0) <= toInt32(1), toUInt32(0) > toInt32(1), toUInt32(0) >= toInt32(1), toInt32(1) = toUInt32(0), toInt32(1) != toUInt32(0), toInt32(1) < toUInt32(0), toInt32(1) <= toUInt32(0), toInt32(1) > toUInt32(0), toInt32(1) >= toUInt32(0) , toUInt32(0) = toUInt64(1), toUInt32(0) != toUInt64(1), toUInt32(0) < toUInt64(1), toUInt32(0) <= toUInt64(1), toUInt32(0) > toUInt64(1), toUInt32(0) >= toUInt64(1), toUInt64(1) = toUInt32(0), toUInt64(1) != toUInt32(0), toUInt64(1) < toUInt32(0), toUInt64(1) <= toUInt32(0), toUInt64(1) > toUInt32(0), toUInt64(1) >= toUInt32(0) , toUInt32(0) = toInt64(1), toUInt32(0) != toInt64(1), toUInt32(0) < toInt64(1), toUInt32(0) <= toInt64(1), toUInt32(0) > toInt64(1), toUInt32(0) >= toInt64(1), toInt64(1) = toUInt32(0), toInt64(1) != toUInt32(0), toInt64(1) < toUInt32(0), toInt64(1) <= toUInt32(0), toInt64(1) > toUInt32(0), toInt64(1) >= toUInt32(0) , toInt32(0) = toUInt8(1), toInt32(0) != toUInt8(1), toInt32(0) < toUInt8(1), toInt32(0) <= toUInt8(1), toInt32(0) > toUInt8(1), toInt32(0) >= toUInt8(1), toUInt8(1) = toInt32(0), toUInt8(1) != toInt32(0), toUInt8(1) < toInt32(0), toUInt8(1) <= toInt32(0), toUInt8(1) > toInt32(0), toUInt8(1) >= toInt32(0) , toInt32(0) = toInt8(1), toInt32(0) != toInt8(1), toInt32(0) < toInt8(1), toInt32(0) <= toInt8(1), toInt32(0) > toInt8(1), toInt32(0) >= toInt8(1), toInt8(1) = toInt32(0), toInt8(1) != toInt32(0), toInt8(1) < toInt32(0), toInt8(1) <= toInt32(0), toInt8(1) > toInt32(0), toInt8(1) >= toInt32(0) , toInt32(0) = toUInt16(1), toInt32(0) != toUInt16(1), toInt32(0) < toUInt16(1), toInt32(0) <= toUInt16(1), toInt32(0) > toUInt16(1), toInt32(0) >= toUInt16(1), toUInt16(1) = toInt32(0), toUInt16(1) != toInt32(0), toUInt16(1) < toInt32(0), toUInt16(1) <= toInt32(0), toUInt16(1) > toInt32(0), toUInt16(1) >= toInt32(0) , toInt32(0) = toInt16(1), toInt32(0) != toInt16(1), toInt32(0) < toInt16(1), toInt32(0) <= toInt16(1), toInt32(0) > toInt16(1), toInt32(0) >= toInt16(1), toInt16(1) = toInt32(0), toInt16(1) != toInt32(0), toInt16(1) < toInt32(0), toInt16(1) <= toInt32(0), toInt16(1) > toInt32(0), toInt16(1) >= toInt32(0) , toInt32(0) = toUInt32(1), toInt32(0) != toUInt32(1), toInt32(0) < toUInt32(1), toInt32(0) <= toUInt32(1), toInt32(0) > toUInt32(1), toInt32(0) >= toUInt32(1), toUInt32(1) = toInt32(0), toUInt32(1) != toInt32(0), toUInt32(1) < toInt32(0), toUInt32(1) <= toInt32(0), toUInt32(1) > toInt32(0), toUInt32(1) >= toInt32(0) , toInt32(0) = toInt32(1), toInt32(0) != toInt32(1), toInt32(0) < toInt32(1), toInt32(0) <= toInt32(1), toInt32(0) > toInt32(1), toInt32(0) >= toInt32(1), toInt32(1) = toInt32(0), toInt32(1) != toInt32(0), toInt32(1) < toInt32(0), toInt32(1) <= toInt32(0), toInt32(1) > toInt32(0), toInt32(1) >= toInt32(0) , toInt32(0) = toUInt64(1), toInt32(0) != toUInt64(1), toInt32(0) < toUInt64(1), toInt32(0) <= toUInt64(1), toInt32(0) > toUInt64(1), toInt32(0) >= toUInt64(1), toUInt64(1) = toInt32(0), toUInt64(1) != toInt32(0), toUInt64(1) < toInt32(0), toUInt64(1) <= toInt32(0), toUInt64(1) > toInt32(0), toUInt64(1) >= toInt32(0) , toInt32(0) = toInt64(1), toInt32(0) != toInt64(1), toInt32(0) < toInt64(1), toInt32(0) <= toInt64(1), toInt32(0) > toInt64(1), toInt32(0) >= toInt64(1), toInt64(1) = toInt32(0), toInt64(1) != toInt32(0), toInt64(1) < toInt32(0), toInt64(1) <= toInt32(0), toInt64(1) > toInt32(0), toInt64(1) >= toInt32(0) , toUInt64(0) = toUInt8(1), toUInt64(0) != toUInt8(1), toUInt64(0) < toUInt8(1), toUInt64(0) <= toUInt8(1), toUInt64(0) > toUInt8(1), toUInt64(0) >= toUInt8(1), toUInt8(1) = toUInt64(0), toUInt8(1) != toUInt64(0), toUInt8(1) < toUInt64(0), toUInt8(1) <= toUInt64(0), toUInt8(1) > toUInt64(0), toUInt8(1) >= toUInt64(0) , toUInt64(0) = toInt8(1), toUInt64(0) != toInt8(1), toUInt64(0) < toInt8(1), toUInt64(0) <= toInt8(1), toUInt64(0) > toInt8(1), toUInt64(0) >= toInt8(1), toInt8(1) = toUInt64(0), toInt8(1) != toUInt64(0), toInt8(1) < toUInt64(0), toInt8(1) <= toUInt64(0), toInt8(1) > toUInt64(0), toInt8(1) >= toUInt64(0) , toUInt64(0) = toUInt16(1), toUInt64(0) != toUInt16(1), toUInt64(0) < toUInt16(1), toUInt64(0) <= toUInt16(1), toUInt64(0) > toUInt16(1), toUInt64(0) >= toUInt16(1), toUInt16(1) = toUInt64(0), toUInt16(1) != toUInt64(0), toUInt16(1) < toUInt64(0), toUInt16(1) <= toUInt64(0), toUInt16(1) > toUInt64(0), toUInt16(1) >= toUInt64(0) , toUInt64(0) = toInt16(1), toUInt64(0) != toInt16(1), toUInt64(0) < toInt16(1), toUInt64(0) <= toInt16(1), toUInt64(0) > toInt16(1), toUInt64(0) >= toInt16(1), toInt16(1) = toUInt64(0), toInt16(1) != toUInt64(0), toInt16(1) < toUInt64(0), toInt16(1) <= toUInt64(0), toInt16(1) > toUInt64(0), toInt16(1) >= toUInt64(0) , toUInt64(0) = toUInt32(1), toUInt64(0) != toUInt32(1), toUInt64(0) < toUInt32(1), toUInt64(0) <= toUInt32(1), toUInt64(0) > toUInt32(1), toUInt64(0) >= toUInt32(1), toUInt32(1) = toUInt64(0), toUInt32(1) != toUInt64(0), toUInt32(1) < toUInt64(0), toUInt32(1) <= toUInt64(0), toUInt32(1) > toUInt64(0), toUInt32(1) >= toUInt64(0) , toUInt64(0) = toInt32(1), toUInt64(0) != toInt32(1), toUInt64(0) < toInt32(1), toUInt64(0) <= toInt32(1), toUInt64(0) > toInt32(1), toUInt64(0) >= toInt32(1), toInt32(1) = toUInt64(0), toInt32(1) != toUInt64(0), toInt32(1) < toUInt64(0), toInt32(1) <= toUInt64(0), toInt32(1) > toUInt64(0), toInt32(1) >= toUInt64(0) , toUInt64(0) = toUInt64(1), toUInt64(0) != toUInt64(1), toUInt64(0) < toUInt64(1), toUInt64(0) <= toUInt64(1), toUInt64(0) > toUInt64(1), toUInt64(0) >= toUInt64(1), toUInt64(1) = toUInt64(0), toUInt64(1) != toUInt64(0), toUInt64(1) < toUInt64(0), toUInt64(1) <= toUInt64(0), toUInt64(1) > toUInt64(0), toUInt64(1) >= toUInt64(0) , toUInt64(0) = toInt64(1), toUInt64(0) != toInt64(1), toUInt64(0) < toInt64(1), toUInt64(0) <= toInt64(1), toUInt64(0) > toInt64(1), toUInt64(0) >= toInt64(1), toInt64(1) = toUInt64(0), toInt64(1) != toUInt64(0), toInt64(1) < toUInt64(0), toInt64(1) <= toUInt64(0), toInt64(1) > toUInt64(0), toInt64(1) >= toUInt64(0) , toInt64(0) = toUInt8(1), toInt64(0) != toUInt8(1), toInt64(0) < toUInt8(1), toInt64(0) <= toUInt8(1), toInt64(0) > toUInt8(1), toInt64(0) >= toUInt8(1), toUInt8(1) = toInt64(0), toUInt8(1) != toInt64(0), toUInt8(1) < toInt64(0), toUInt8(1) <= toInt64(0), toUInt8(1) > toInt64(0), toUInt8(1) >= toInt64(0) , toInt64(0) = toInt8(1), toInt64(0) != toInt8(1), toInt64(0) < toInt8(1), toInt64(0) <= toInt8(1), toInt64(0) > toInt8(1), toInt64(0) >= toInt8(1), toInt8(1) = toInt64(0), toInt8(1) != toInt64(0), toInt8(1) < toInt64(0), toInt8(1) <= toInt64(0), toInt8(1) > toInt64(0), toInt8(1) >= toInt64(0) , toInt64(0) = toUInt16(1), toInt64(0) != toUInt16(1), toInt64(0) < toUInt16(1), toInt64(0) <= toUInt16(1), toInt64(0) > toUInt16(1), toInt64(0) >= toUInt16(1), toUInt16(1) = toInt64(0), toUInt16(1) != toInt64(0), toUInt16(1) < toInt64(0), toUInt16(1) <= toInt64(0), toUInt16(1) > toInt64(0), toUInt16(1) >= toInt64(0) , toInt64(0) = toInt16(1), toInt64(0) != toInt16(1), toInt64(0) < toInt16(1), toInt64(0) <= toInt16(1), toInt64(0) > toInt16(1), toInt64(0) >= toInt16(1), toInt16(1) = toInt64(0), toInt16(1) != toInt64(0), toInt16(1) < toInt64(0), toInt16(1) <= toInt64(0), toInt16(1) > toInt64(0), toInt16(1) >= toInt64(0) , toInt64(0) = toUInt32(1), toInt64(0) != toUInt32(1), toInt64(0) < toUInt32(1), toInt64(0) <= toUInt32(1), toInt64(0) > toUInt32(1), toInt64(0) >= toUInt32(1), toUInt32(1) = toInt64(0), toUInt32(1) != toInt64(0), toUInt32(1) < toInt64(0), toUInt32(1) <= toInt64(0), toUInt32(1) > toInt64(0), toUInt32(1) >= toInt64(0) , toInt64(0) = toInt32(1), toInt64(0) != toInt32(1), toInt64(0) < toInt32(1), toInt64(0) <= toInt32(1), toInt64(0) > toInt32(1), toInt64(0) >= toInt32(1), toInt32(1) = toInt64(0), toInt32(1) != toInt64(0), toInt32(1) < toInt64(0), toInt32(1) <= toInt64(0), toInt32(1) > toInt64(0), toInt32(1) >= toInt64(0) , toInt64(0) = toUInt64(1), toInt64(0) != toUInt64(1), toInt64(0) < toUInt64(1), toInt64(0) <= toUInt64(1), toInt64(0) > toUInt64(1), toInt64(0) >= toUInt64(1), toUInt64(1) = toInt64(0), toUInt64(1) != toInt64(0), toUInt64(1) < toInt64(0), toUInt64(1) <= toInt64(0), toUInt64(1) > toInt64(0), toUInt64(1) >= toInt64(0) , toInt64(0) = toInt64(1), toInt64(0) != toInt64(1), toInt64(0) < toInt64(1), toInt64(0) <= toInt64(1), toInt64(0) > toInt64(1), toInt64(0) >= toInt64(1), toInt64(1) = toInt64(0), toInt64(1) != toInt64(0), toInt64(1) < toInt64(0), toInt64(1) <= toInt64(0), toInt64(1) > toInt64(0), toInt64(1) >= toInt64(0) 
CREATE TABLE test_01193_18429.table_6_509 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_2C2E305442455C707B784D407C347250217167692B332243694B2F5D4F6B21427778796B2F636A57(x UInt8) Engine=Memory;
select 1 = multiSearchAny(materialize('pjjyzupzwllshlnatiujmwvaofr'), ['lnatiujmwvao', '', 'zupzwllsh', 'nati', 'wllshl', 'hlnatiujmwv', 'mwvao', 'shlnat', 'ati', 'wllshlnatiujmwvao', 'wllshlnatiujmwvaofr', 'nat']) from system.numbers limit 10;
CREATE TABLE test_01193_18429.table_9_342 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT multiIf((col1 % 2) = 0, ['foo', col3], 1, ['foo', 'bar'], ['foo', col7]) FROM multi_if_check;
CREATE TABLE map_formats (m Map(String, UInt32), m1 Map(String, Date), m2 Map(String, Array(UInt32))) ENGINE = Log;
CREATE DATABASE IF NOT EXISTS test_1nu9gux5 
SHOW CREATE TABLE alter_column;
DROP TABLE IF EXISTS agg;
CREATE INDEX idx_tab3_3 ON tab3 (col0);
SELECT 'Running test stateless/02577_keepermap_delete_update.sql from pid=1714' 
DESC file('/var/lib/clickhouse/user_files/02661_read_from_archive_test_y9jm4uu0_7z_archive*.7z :: *.csv')
INSERT INTO test_01193_18429.table_6_660 VALUES 
WITH toDateTime(1509138000) + number * 300 AS t SELECT toHour(t, 'Asia/Kolkata') AS h, toString(toStartOfHour(t, 'Asia/Kolkata'), 'Asia/Kolkata') AS h_start FROM system.numbers LIMIT 12;
SELECT multiIf((number % 2) = 0, [toInt16(1), toInt16(2)], (number % 3) = 0, [toInt8(2), toInt8(3)], [toFloat32(3), toFloat32(3)]) FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_69jkn3yf 
INSERT INTO t_materialize_delete SELECT number, number FROM numbers(100);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (95 < 23 AND 93 > 0 ? 95 : 0)), throwIf(last != (95 < 23 AND 93 > 0 ? least(23 - 1, 95 + 93 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(23) LIMIT 95, 93);
DROP DATABASE IF EXISTS test_jw8n9sfu 
CREATE TABLE test_4A704C4940516C243631643C5F206F4D47547A392D7B764E735D50693B4D3B364E4C3F593F233F28(x UInt8) Engine=Memory;
SELECT sleep(NULL);
SELECT has([1, -1], materialize(1));
select t1.*, t2.*, t3.* from table1 as t1 join table2 as t2 on table1.a = table2.a join table3 as t3 on table2.b = table3.b ORDER BY t1.a FORMAT PrettyCompactNoEscapes;
select 1 = multiSearchAny(materialize('abcdefgh'), ['bc']);
CREATE TABLE test_413A345964564A4640474C4773477B306128267579262D545B7C7D552C5B483824353168244B5229(x UInt8) Engine=Memory;
ALTER TABLE test MODIFY COLUMN `abc` String AFTER `id`;
INSERT INTO r4 SELECT rand()
CREATE DATABASE IF NOT EXISTS test_r297twqd 
SELECT multiIf((number % 2) = 0, toInt64(1), (number % 3) = 0, toInt16(2), toInt8(3)) FROM system.numbers LIMIT 10;
/* No CASE expression. String array clauses. */ CREATE TABLE multi_if_check(col1 UInt64, col2 String, col3 String, col4 String, col5 String, col6 String, col7 String) ENGINE=TinyLog;
CREATE TABLE test_4B565D6C5721232C7A68605E3E5830655E6A68515D407365387E784E2A66317A75205E723D3C335A(x UInt8) Engine=Memory;
SELECT '15' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('fffe::')))
set engine_file_allow_create_multiple_files = 1;
SELECT test2.col1, test1.* FROM test2 RIGHT JOIN test1 ON test2.col1 = test1.col1 WHERE test2.col1 IS NOT NULL ORDER BY test2.col1 ;
CREATE TABLE test_5A71297C5A64534B246A786868396D67695D385A56644E38667162584C2646487C51684D472B5C49(x UInt8) Engine=Memory;
CREATE TABLE test_7A5637614242532B4C577A645845286431654F587536353A4F70777C404A4C475336287427754342(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_2_531 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT decodeHTMLComponent('Hello, &&amp; world');
CREATE TABLE index_compact (`a` UInt32, `b` UInt32, INDEX i1 b TYPE minmax GRANULARITY 1) ENGINE = MergeTree ORDER BY a SETTINGS min_rows_for_wide_part = 1000, index_granularity = 128, merge_max_block_size = 100, min_bytes_for_wide_part = 832986648, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 90, prefer_fetch_merged_part_size_threshold = 8673803888, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 6091600932, index_granularity_bytes = 18828761, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 76735, primary_key_compress_block_size = 67985
select dictGet('regexp_dict3', 'tag', 'clickhouse.com');
select round(1000 * ngramSearchCaseInsensitive(materialize('abCdefgH'), 'Abcdefgh')) from system.numbers limit 5;
CREATE DATABASE IF NOT EXISTS test_x5xtjuic 
CREATE TABLE test_68386F4555396275484020673D2F5E4E57414F5C286E2D49452948573E2D58424961606540507A75(x UInt8) Engine=Memory;
CREATE TABLE test_4A38562979253E314255717665456754782E54706244455B20614A2D3F4639762E5B7C5E66656A29(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02474_timeDiff_UTCTimestamp.sql from pid=1722' 
DROP DATABASE IF EXISTS test_3aajb40z 
SELECT toDateTime(toDate('2149-06-06'));
select toInt8(number * 2) as x from numbers(42) order by x desc;
ALTER TABLE default_table MODIFY COLUMN enum_column Enum8('undefined' = 0, 'fox' = 1, 'index' = 2) DEFAULT 'fox';
DROP DATABASE IF EXISTS test_inarzx3u 
select DISTINCT _partition_id from weird_partitions_02245 where d >= '2021-12-31 00:00:00' and d < '2022-01-01 00:00:00' ORDER BY _partition_id;
select os_name, count() from (SELECT CAST('iphone' AS Enum8('iphone' = 1, 'android' = 2)) AS os_name) group by os_name WITH TOTALS;
INSERT INTO test_01193_18429.table_5_349 VALUES 
SELECT sum(2 - decimal32) From test_table;
CREATE TABLE test_01193_18429.table_2_794 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_9_913 VALUES 
SELECT lagInFrame(1, 0) OVER ();
DROP VIEW IF EXISTS test_02428_pv9
INSERT INTO array(arr) values 
select format('{}{}{}', materialize('a'), toFixedString('b', 1), toFixedString('c', 1)) == 'abc' from system.numbers limit 5;
CREATE TABLE test_2132304B324B2E3264234F747B56673C7A61787B4826632B4C21653955566F3C692E2D3D36322944(x UInt8) Engine=Memory;
CREATE TABLE test_02908_r3_133 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_133', 'r3') ORDER BY tuple()
DROP DATABASE IF EXISTS test_spqe9e5u 
SELECT toDateTime64('2011-11-11 11:11:11.11111', 0);
CREATE TABLE test_01193_18429.table_5_250 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT * FROM cluster(test_cluster_one_shard_three_replicas_localhost, currentDatabase(), 02535_custom_key) SETTINGS max_parallel_replicas=1 , parallel_replicas_custom_key='sipHash64(x)' , parallel_replicas_custom_key_filter_type='default' , prefer_localhost_replica=0
CREATE TABLE test_02908_r3_164 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_164', 'r3') ORDER BY tuple()
CREATE TABLE `02500_nested` (`nes` Nested(a Int32, b Int32), `z` Int32) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 4784, min_bytes_for_wide_part = 389180713, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 16010, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 640419, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 5786951018, index_granularity_bytes = 28004538, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 94629, primary_key_compress_block_size = 59827
alter table data_01900_2 update s = 'bar_48' where 1;
SELECT * FROM 02706_keeper_map_insert_strict WHERE key = 1;
SELECT fuzzBits(toFixedString('', 200), 0.99) from numbers(60000) FORMAT Null;
SELECT dt, user_id FROM decrypt_null WHERE (user_id > 0) AND (tryDecrypt('aes-256-gcm', '[HIDDEN]') = 'value2')
SHOW CREATE TABLE columns_with_multiple_streams_compact;
CREATE DATABASE IF NOT EXISTS test_vc74jzax 
CREATE TABLE test_4E6A6926782F3E7D6C6058577942693D432A4342533B6E5E3232556A5A5C505E38716A572B38756A(x UInt8) Engine=Memory;
CREATE TABLE test (`x` UInt32, `y` Nullable(UInt32)) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 34101, min_bytes_for_wide_part = 623453842, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 83, merge_max_block_size = 19919, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 61372792, index_granularity_bytes = 28966363, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 18680, primary_key_compress_block_size = 89495
CREATE TABLE test_7267482E2D3A6A3B612226782C706C3A377D45736040205A5D50283135436F4B27704D6D3B5F2270(x UInt8) Engine=Memory;
CREATE TABLE test_2A5029244228592D57495F4B6271583A7068426744594F22267328206A4B6033767A5E3B376C2637(x UInt8) Engine=Memory;
select other_table.name from remote('127.0.0.2', currentDatabase(), 'local_table') as t1 global left join other_table as t2 on t1.oth_id = other_table.id order by other_table.name;
INSERT INTO test_01193_18429.table_1_839 VALUES 
SELECT toDaysSinceYearZero(toDateTime64('1900-01-01 00:00:00.000', 3));
SELECT toUUIDOrNull(NULL, NULL, NULL);
CREATE TABLE test_01193_18429.table_5_566 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_4_708 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select toValidUTF8('123456789012345\xed') from system.numbers limit 10;
select 20 = multiSearchFirstIndexCaseInsensitiveUTF8(materialize('ÃÂ°ÃÂ½ÃÂºÃÂÃÂ³ÃÂ¦ÃÂÃÂÃÂºÃÂ§ÃÂ²ÃÂÃÂ¸ÃÂÃÂ¿ÃÂÃÂ¢ÃÂ¹ÃÂ»ÃÂ'), ['ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ¡ÃÂ§ÃÂ¿ÃÂºÃÂ¸ÃÂ´ÃÂ°ÃÂ¥ÃÂ¶ÃÂ°ÃÂÃÂÃÂ°ÃÂÃÂÃÂ¦ÃÂÃÂÃÂ', 'ÃÂ¥ÃÂ½ÃÂÃÂÃÂ¨ÃÂÃÂÃÂ¥ÃÂÃÂ°ÃÂ ÃÂ ÃÂ½ÃÂ§ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ¢ÃÂ¿ÃÂÃÂÃÂÃÂ³ÃÂÃÂ©ÃÂ¤', 'ÃÂ¤ÃÂÃÂÃÂÃÂÃÂÃÂÃÂ¿ÃÂ¼ÃÂ´ÃÂÃÂÃÂ¼ÃÂÃÂ¹ÃÂ·ÃÂ£ÃÂÃÂÃÂÃÂÃÂ·ÃÂÃÂ·ÃÂ¨ÃÂ¶ÃÂ³ÃÂ', 'ÃÂÃÂÃÂÃÂ§ÃÂµÃÂÃÂÃÂ¥ÃÂµÃÂ¸ÃÂ¿ÃÂ´ÃÂÃÂ¦ÃÂ¦ÃÂ¼ÃÂ°ÃÂ¨ÃÂÃÂ°ÃÂ ÃÂÃÂ£ÃÂ¢', 'ÃÂÃÂÃÂÃÂÃÂ¶ÃÂ', 'ÃÂ¢ÃÂÃÂÃÂ£ÃÂÃÂ½ÃÂÃÂÃÂ£ÃÂÃÂ¦ÃÂºÃÂÃÂÃÂ', 'ÃÂÃÂ¹ÃÂ¦ÃÂÃÂÃÂÃÂÃÂ¦ÃÂ¹ÃÂÃÂ©ÃÂ¸ÃÂÃÂÃÂÃÂ¢ÃÂ¦ÃÂºÃÂÃÂºÃÂÃÂÃÂ²ÃÂÃÂ½ÃÂÃÂ¸', 'ÃÂÃÂÃÂ½ÃÂ', 'ÃÂÃÂÃÂ¥ÃÂÃÂ¨ÃÂ¡ÃÂ£ÃÂÃÂ¦ÃÂÃÂ¹ÃÂ ÃÂ¡ÃÂÃÂÃÂÃÂÃÂÃÂ²ÃÂ¹ÃÂÃÂÃÂ¦ÃÂ¹', 'ÃÂÃÂÃÂ¡ÃÂÃÂ½ÃÂ·ÃÂÃÂ°ÃÂÃÂ£ÃÂÃÂÃÂµÃÂ³ÃÂ°ÃÂ²ÃÂ¹ÃÂÃÂ³ÃÂÃÂ¶ÃÂ¨ÃÂÃÂÃÂÃÂÃÂ¶ÃÂÃÂÃÂº', 'ÃÂ¦ÃÂÃÂ¥ÃÂÃÂÃÂ¸ÃÂÃÂÃÂÃÂÃÂ¡ÃÂÃÂ¥ÃÂ·ÃÂ ÃÂÃÂÃÂÃÂ', 'ÃÂºÃÂÃÂ´ÃÂÃÂÃÂÃÂ½ÃÂÃÂ²ÃÂ£ÃÂ¤ÃÂºÃÂÃÂÃÂÃÂÃÂ', 'ÃÂ¡ÃÂºÃÂ¸ÃÂ¡ÃÂ¦ÃÂÃÂ¦ÃÂ ÃÂ¼ÃÂ³ÃÂ¦ÃÂÃÂ¿ÃÂÃÂ ÃÂÃÂ¥ÃÂÃÂÃÂÃÂÃÂ·ÃÂ¥', 'ÃÂ¹ÃÂ£ÃÂµÃÂ¿ÃÂÃÂÃÂÃÂÃÂÃÂ±ÃÂÃÂ©ÃÂÃÂÃÂ¶ÃÂ²ÃÂ§ÃÂ¿ÃÂ ÃÂ', 'ÃÂÃÂ¿ÃÂ§ÃÂÃÂ¿ÃÂÃÂ¾ÃÂÃÂ£ÃÂ²ÃÂ¸ÃÂ±ÃÂÃÂµÃÂÃÂ¹ÃÂ ÃÂ¹ÃÂÃÂÃÂÃÂÃÂ¡ÃÂÃÂ½ÃÂ§ÃÂÃÂÃÂÃÂ©', 'ÃÂÃÂ¤ÃÂ³ÃÂÃÂÃÂÃÂ²ÃÂ ÃÂ°ÃÂ²ÃÂ±ÃÂÃÂÃÂÃÂÃÂ¾ÃÂÃÂÃÂÃÂ±ÃÂ§', 'ÃÂÃÂÃÂ¸ÃÂÃÂÃÂ½ÃÂÃÂ¥ÃÂÃÂÃÂ¹ÃÂÃÂÃÂÃÂ´ÃÂ', 'ÃÂÃÂ¿', 'ÃÂ§ÃÂÃÂ ÃÂÃÂÃÂ³ÃÂ', 'ÃÂ²ÃÂÃÂ¸ÃÂ±ÃÂÃÂ¤ÃÂ¢ÃÂÃÂ']) from system.numbers limit 10;
select toStartOfQuarter(toDate(0));
SELECT count(1), uniqExact(1) FROM ( SELECT k FROM (SELECT 1 as k FROM numbers(1)) nums JOIN (SELECT materialize(toNullable(1)) AS k, number n FROM numbers(100000)) j USING k);
SELECT 5 FROM system.one WHERE (1, 1) IN (SELECT 1 AS x, x) OR (1, 0) IN (SELECT 1 AS x, toUInt8(x - 1));
SELECT count() = 16384, sumMerge(s) = 16384 FROM aggregating_00155
ALTER TABLE concurrent_alter_detach_1 MODIFY COLUMN value1 UInt8 SETTINGS replication_alter_partitions_sync=0
CREATE TABLE test_784B642F6D3537533B633C5F4E2920683E7231587328245D704D2B7E5C3A5365255E405D305F2878(x UInt8) Engine=Memory;
SELECT arrayPopBack(NULL);
select dummy from remote('127.{1,1}', system.one) where dummy + dummy >= 0 limit 1 by dummy + dummy + 0 as l settings prefer_localhost_replica=0,distributed_group_by_no_merge=1,distributed_push_down_limit=1;
ALTER TABLE concurrent_alter_mt_1 MODIFY COLUMN value1 UInt32 SETTINGS replication_alter_partitions_sync=0
CREATE TABLE test_01193_18429.table_1_278 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT sum(number) FROM numbers2;
INSERT INTO test_01193_18429.table_8_927 VALUES 
SELECT dictGet('range_hashed_dictionary', 'value', 0, toUInt64(4));
INSERT INTO test_01193_18429.table_4_574 VALUES 
DROP DATABASE IF EXISTS test_36fdzvvr 
CREATE TABLE test_3B40654749794C4B35484B537C5224603B5B67716B335E2C6C7C414C567272634B543E5E59394353(x UInt8) Engine=Memory;
SELECT * FROM numbers(34563)
INSERT INTO t64 SELECT (10 - toInt64(intExp2(40)) + number) AS x, x, x, x, x, x, x, x FROM numbers(10);
CREATE TABLE test_01193_18429.table_3_934 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_z6p4gnjj 
CREATE TABLE test_01193_18429.table_2_926 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_9_663 VALUES 
SELECT multiIf((number % 2) = 0, toFloat64(1), (number % 3) = 0, toInt16(2), toUInt32(3)) FROM system.numbers LIMIT 10;
SELECT decodeURLFormComponent(encodeURLFormComponent('http://paul@127.0.0.1/?query=hello world foo+bar'));
CREATE TABLE test_01193_18429.table_3_735 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select unbin(bin('')) == '';
SELECT 9, 0, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (9 < 13 AND 0 > 0 ? 9 : 0)), throwIf(last != (9 < 13 AND 0 > 0 ? least(13 - 1, 9 + 0 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 9, 0);
SELECT CASE WHEN 1 THEN col2 WHEN 1 THEN toFixedString('bar', 16) ELSE 'baz' END FROM multi_if_check;
SELECT 'Hello, "World"' AS x, 123 AS y, [1, 2, 3] AS z, (456, ['abc', 'def']) AS a, 'Newline\nhere' AS b FORMAT CSVWithNamesAndTypes;
SELECT multiIf((number % 2) = 0, toUInt32(1), (number % 3) = 0, toInt16(2), toInt32(3)) FROM system.numbers LIMIT 10;
select 'pop front';
CREATE TABLE test_4E235E2D5F3A6660774C577E425D23693D434C56442670657573216F754039786C3B686A20242B6D(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02124_insert_deduplication_token_multiple_blocks_replica.sh from pid=1722' 
CREATE DATABASE IF NOT EXISTS test_p02p011n 
DROP TABLE IF EXISTS mv_extra_columns_dst;
CREATE TABLE test_01193_18429.table_5_580 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_305C736D5E45615C2327616D444B662D61575B67587D622D67472A63445E7D7B77516E554E48254C(x UInt8) Engine=Memory;
select 2 = multiMatchAnyIndex(materialize('gogleuedeuniangoogle'), ['google1', 'unian']) from system.numbers limit 10;
INSERT INTO complex_key_complex_attributes_source_table VALUES
SELECT 'Running test stateless/02156_async_insert_query_log.sh from pid=1726' 
select 1 = positionCaseInsensitive('', '');
CREATE DICTIONARY 01684_database_for_cache_dictionary.cache_dictionary_simple_key_hierarchy ( id UInt64, parent_id UInt64 HIERARCHICAL ) PRIMARY KEY id SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_hierarchy_table')) LIFETIME(MIN 1 MAX 1000) LAYOUT(SSD_CACHE(BLOCK_SIZE 4096 FILE_SIZE 8192 PATH '/var/lib/clickhouse/user_files/2d'));
CREATE TABLE test_01193_18429.table_10_493 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT toDateTime64('2205-12-12 12:12:12', 0, 'Asia/Istanbul');
INSERT INTO r6 SELECT 36 % 10 = 6 ? 36 - 1 : 36
INSERT INTO test_01193_18429.table_5_844 VALUES 
CREATE TABLE parquet_load (`value` Nullable(Decimal(4, 2))) ENGINE = Memory;
CREATE TABLE test_2D444F2623714E7A4E43284F6A5C55757C56435F794B5E3A627E57454D244F485532422C6F27544C(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00207_left_array_join.sql from pid=1722' 
DROP TABLE 01070_window_view_watch_events.mt;
SELECT decodeXMLComponent('&amp;clickhouse');
CREATE DATABASE IF NOT EXISTS test_jzpbzk0g 
SELECT 'ANY RIGHT | bs = 13';
SELECT timeSlots(NULL, NULL);
CREATE TABLE test_01193_18429.table_1_413 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT greatest(NULL, NULL);
CREATE TABLE test_6C212B2C7341704E3679775C5A2C6E3E7E72677C577C2241547A6D7D5C605B53524B606B7C367223(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_1_654 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select * from (select * from bug where k=1 or k=2 or k=3) where (s=21 or s=22 or s=23) SETTINGS allow_experimental_analyzer = 1;
SELECT '(0, C) id = 11', count() FROM (SELECT id, sequenceNextNode('forward', 'head')(dt, action, 1, action = 'C') AS next_node FROM test_sequenceNextNode WHERE id = 11 GROUP BY id HAVING next_node = 'D');
SELECT JSON_QUERY('{"hello":"world"}', '$.hello');
SELECT accurateCastOrNull('1xxx', 'DateTime');
DROP TABLE IF EXISTS mv_checkouts2target;
SELECT arrayAUC([0, 1, 1], [0, 0, 1]);
SELECT -1234;
SELECT uniqExact((x, toString(x))) FROM (SELECT arrayJoin([[], ['a'], ['a', 'b'], []]) AS x);
SELECT age('quarter', toDate32('1927-01-01', 'UTC'), toDateTime64('1927-04-01 00:00:00', 3, 'UTC'), 'UTC');
SELECT parseDateTime64BestEffort(NULL);
SELECT CASE WHEN (number % 2) = 0 THEN [toInt8(1), toInt8(2)] WHEN (number % 3) = 0 THEN [toInt8(2), toInt8(3)] ELSE [toInt16(3), toInt16(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_4532725F65397048354A4C462E254F7E415A6D34392D7834563024546C232E2552686D30346C4578(x UInt8) Engine=Memory;
CREATE TABLE test_2D594F68507237622E62303C253A27765D6A325077267344734D702053533F5857287C66686F2A72(x UInt8) Engine=Memory;
SELECT id AS using_id, toTypeName(using_id), t1.id AS t1_id, toTypeName(t1_id), t1.value AS t1_value, toTypeName(t1_value), t2.id AS t2_id, toTypeName(t2_id), t2.value AS t2_value, toTypeName(t2_value) FROM test_table_join_1 AS t1 INNER JOIN test_table_join_2 AS t2 USING (id);
SELECT 23;
SELECT 'Running test stateless/01922_array_join_with_index.sql from pid=1724' 
INSERT INTO test_01193_18429.table_10_581 VALUES 
SELECT count(), sum(number) FROM table3;
SELECT 30,toFixedString('Hello', 10), bin(bitShiftRight(toFixedString('Hello', 10), 30));
select makeDateTime64(1984, 1, 0, 0, 0, 0, 0, 9, 'UTC');
SELECT CASE WHEN (number % 2) = 0 THEN toInt32(1) WHEN (number % 3) = 0 THEN toInt16(2) ELSE toUInt16(3) END FROM system.numbers LIMIT 10;
select 1, *, _part from projection_broken_parts_2 order by b;
create table ma_dist (x UInt64) ENGINE = Distributed(test_cluster_two_shards_different_databases, '', 'shard_01231_distributed_aggregation_memory_efficient');
EXPLAIN QUERY TREE run_passes=1 SELECT value1 FROM date_t WHERE toYYYYMM(date1) = 199300 AND id BETWEEN 1 AND 3 SETTINGS allow_experimental_analyzer=1;
CREATE TABLE test_6F257954475473795A3C422D44546A5D25765636424A3C4031236264744B3B4E67355B2E71255977(x UInt8) Engine=Memory;
select distinct numuint from url('http://[2001:db8:1::242:ac11:2]:54261/', 'CSV', 'str String,numuint UInt32,numint Int32,double Float64') order by numuint
INSERT INTO test_01193_18429.table_7_340 VALUES 
SELECT count() FROM t_cnf_fuzz WHERE (c0) OR (c4 AND c9) OR ((NOT c8)) OR ((NOT c4)) OR (c3 AND (NOT c7)) OR (c8) OR (c3 AND c5 AND c1 AND (NOT c3) AND (NOT c8)) SETTINGS convert_query_to_cnf = 0
SELECT sum(e) from tab_02473 PREWHERE b > 10 AND b <= 70 AND c > 0 AND c <= 30 AND d > 5 AND d <= 35 WHERE a == 0;
INSERT INTO test_01193_18429.table_10_832 VALUES 
ALTER TABLE concurrent_alter_add_drop_3 ADD COLUMN value2 UInt32 DEFAULT 42 SETTINGS replication_alter_partitions_sync=0
SET log_comment='session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_plaintext_password_no_profiles_no_roles plaintext_password - No profiles no roles';
SELECT 'Running test stateless/02126_lc_window_functions.sql from pid=1715' 
alter table many_mutations delete where y = 253 * 2 settings mutations_sync = 0;
DROP TABLE IF EXISTS not_partitioned_replica2_00502 SYNC;
INSERT INTO test_01193_18429.table_9_427 VALUES 
CREATE TABLE data_01655 (`key` Int) ENGINE = MergeTree ORDER BY key SETTINGS index_granularity = 6192, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 7514, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 8146021251, index_granularity_bytes = 6092162, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 83471, primary_key_compress_block_size = 84874
CREATE DATABASE 01681_database_for_cache_dictionary;
CREATE TABLE test_3A2F742E247B494861286E506C4F5641633A66223759255E6B44532F447E543A7B78326D716B562D(x UInt8) Engine=Memory;
SELECT extractTextFromHTML('Hello<![CDATA[Hello\tworld]]>world!');
CREATE DATABASE IF NOT EXISTS test_wcfev2d2 
drop table if exists data_01278;
SELECT toTypeName(map(materialize(toLowCardinality('1')), toLowCardinality('2')));
DROP TABLE db_01048.t_01048_2;
DROP TABLE joinbug_join;
CREATE INDEX idx_tab2_2 ON tab2 (col3,col0 DESC);
SELECT any([0]) AS `k` FROM numbers(10)
SELECT count() FROM lc_nullable WHERE has(i32, 5);
CREATE TABLE test_6C36794D656F7A6522394F346B333B347C7E7825414C4A3D3C695E2E71792D2D2F54612A4173673B(x UInt8) Engine=Memory;
CREATE TABLE test_nested (`id` String, `with_dot.str` String, `with_dot.array` Array(Int32)) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 56714, min_bytes_for_wide_part = 664501774, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 84, merge_max_block_size = 10709, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 6080484, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 71006, primary_key_compress_block_size = 91397
INSERT INTO test_01193_18429.table_3_339 VALUES 
CREATE TABLE test_3B5C5A404F434A492F556566657D68505C3C2E3157256E30792F6353577C35764A446F57614B525A(x UInt8) Engine=Memory;
SELECT multiIf((number % 2) = 0, [toUInt32(1), toUInt32(2)], (number % 3) = 0, [toInt64(2), toInt64(3)], [toUInt16(3), toUInt16(3)]) FROM system.numbers LIMIT 10;
SELECT constant_false ? then_non_constant_nullable : else_non_constant_nullable AS res FROM nullable_00431;
INSERT INTO test_01193_18429.table_6_805 VALUES 
CREATE TABLE src_a (v UInt64) ENGINE = Null;
CREATE TABLE `02428_otel_traces_trace_id_ts` (`TraceId` String, `Start` Timestamp) ENGINE = ReplicatedMergeTree('/clickhouse/tables/02428_parameterized_view_test_0zmj5798/otel_traces_trace_id_ts', 'r1') ORDER BY TraceId SETTINGS index_granularity = 24917, min_bytes_for_wide_part = 878734611, ratio_of_defaults_for_sparse_serialization = 0.256317675113678, replace_long_file_name_to_hash = true, max_file_name_length = 66, merge_max_block_size = 3156, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 5811495, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 82888, primary_key_compress_block_size = 88003
DROP TABLE IF EXISTS truncate_test_tiny_log;
CREATE TABLE test_6C6B4C7B445D68382B2826302F29323B746A64374F675D556D666C44433456342A263E7B64746B6D(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_58zaac0x 
SELECT ngramMinHashCaseInsensitive(s) FROM defaults;
SELECT * FROM fuzzJSON(02918_json_fuzzer, json_str='{"schedule":[{"breakfast":"7am"}, {"lunch":"12pm"}]}', random_seed=123456, reuse_output=true) LIMIT 20;
CREATE TABLE test_662E504E49782C492E7E435A4B4360654A3E41496F3E5729243B7E7E3E6E4F5B3539395563414135(x UInt8) Engine=Memory;
CREATE TABLE test_2D66467C5E5A6658756357352F2B4136773B784A424C5B77773778506645455E283F266D7231276C(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_p6zkuyt0 
SELECT dictGet('test_dictionary_non_nullable', 'value', arrayJoin([toUInt64(0), NULL, 1]));
CREATE TABLE test_4E39537C51376B7960463A5877363C433D4439556355703C6D4A2554785E456F252D323666264365(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00752_low_cardinality_lambda_argument.sql from pid=1718' 
CREATE TABLE test_207357337C5D7A6121753F6635606C733E404F2943633A622126474F40204F3443566A51263E3A55(x UInt8) Engine=Memory;
SELECT -32769, 9223372036854775808, -32769 = 9223372036854775808, -32769 != 9223372036854775808, -32769 < 9223372036854775808, -32769 <= 9223372036854775808, -32769 > 9223372036854775808, -32769 >= 9223372036854775808, 9223372036854775808 = -32769, 9223372036854775808 != -32769, 9223372036854775808 < -32769, 9223372036854775808 <= -32769, 9223372036854775808 > -32769, 9223372036854775808 >= -32769 , toInt32(-32769) = toUInt64(9223372036854775808), toInt32(-32769) != toUInt64(9223372036854775808), toInt32(-32769) < toUInt64(9223372036854775808), toInt32(-32769) <= toUInt64(9223372036854775808), toInt32(-32769) > toUInt64(9223372036854775808), toInt32(-32769) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toInt32(-32769), toUInt64(9223372036854775808) != toInt32(-32769), toUInt64(9223372036854775808) < toInt32(-32769), toUInt64(9223372036854775808) <= toInt32(-32769), toUInt64(9223372036854775808) > toInt32(-32769), toUInt64(9223372036854775808) >= toInt32(-32769) , toInt64(-32769) = toUInt64(9223372036854775808), toInt64(-32769) != toUInt64(9223372036854775808), toInt64(-32769) < toUInt64(9223372036854775808), toInt64(-32769) <= toUInt64(9223372036854775808), toInt64(-32769) > toUInt64(9223372036854775808), toInt64(-32769) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toInt64(-32769), toUInt64(9223372036854775808) != toInt64(-32769), toUInt64(9223372036854775808) < toInt64(-32769), toUInt64(9223372036854775808) <= toInt64(-32769), toUInt64(9223372036854775808) > toInt64(-32769), toUInt64(9223372036854775808) >= toInt64(-32769) 
CREATE DATABASE IF NOT EXISTS test_2u7w1szf 
SELECT YYYYMMDDToDate(20230911);
CREATE TABLE test_7C6A602C4A337D784C3C6D6F673B242D2264347960556B794E782863254B267778392B5B422A2C58(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_9rf4el3i 
DROP DATABASE IF EXISTS test_mb8cqzk1 
INSERT INTO alter_table1 SELECT 19709, 7
SELECT 'Pacific/Apia', toDateTime('2020-01-02 03:04:05', 'Pacific/Apia') AS x, toStartOfDay(x), toHour(x);
CREATE TABLE test_722B585E6B6268437E2C6C404F4658572E355059696A384C2866403F5F257B37245F40303325555F(x UInt8) Engine=Memory;
SELECT * FROM markdown FORMAT Markdown;
select deltaSumTimestamp(value, timestamp) from (select toDateTime(number) as timestamp, [0, 4.5, 8, 3][number] as value from numbers(1, 4));
CREATE DATABASE IF NOT EXISTS test_g86azmo6 
select 0 = positionCaseInsensitiveUTF8(materialize(''), 'ÃÂ°ÃÂÃÂ²') from system.numbers limit 10;
DROP TABLE IF EXISTS mem1;
GRANT SELECT(col1, col2) ON db4.table TO test_user_01073;
CREATE DATABASE IF NOT EXISTS test_u78gnf4x 
DROP DATABASE IF EXISTS test_pkahfxuc 
ALTER TABLE rename_table_multiple_compact RENAME COLUMN value1 TO value1_string;
CREATE DATABASE IF NOT EXISTS test_8su3eau4 
CREATE TABLE test_01193_18429.table_1_681 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
alter table many_mutations delete where y = 619 * 2 settings mutations_sync = 0;
CREATE TABLE test_01193_18429.table_10_653 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
drop table tbl_8parts_8granules_rnd;
SELECT dumpColumnStructure(-1);
SELECT * FROM table_with_enum_column_for_json_insert;
OPTIMIZE TABLE table_with_column_ttl FINAL;
restore table test_h75tm4x2.test2 on cluster test_shard_localhost from Disk('backups', '02907_backup_restore_flatten_nested_test_h75tm4x22');
SELECT quantileDeterministic(`number`, sipHash64(`number`)) FROM numbers(8193)
DROP DATABASE IF EXISTS test_2b5q1qar 
EXPLAIN QUERY TREE SELECT * FROM 02702_logical_optimizer WHERE a = 1 OR 3 = a OR NULL = a;
alter table many_mutations delete where y = 330 * 2 settings mutations_sync = 0;
insert into data select file('a.txt'), file('b.txt');
DROP DATABASE IF EXISTS test_uz4iee0r 
INSERT INTO lc_00931 SELECT number, if (number < 10000 OR number > 100000, [toString(number)], emptyArrayString()) FROM system.numbers LIMIT 200000;
KILL MUTATION WHERE database=currentDatabase() AND table like 'test_table_%'
SELECT 'Running test stateless/02542_transform_new.sql from pid=1715' 
INSERT INTO mt_00763_1 VALUES 
select toDateTimeOrDefault(cast(19 as UInt128), 'UTC');
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (108 < 74 AND 47 > 0 ? 108 : 0)), throwIf(last != (108 < 74 AND 47 > 0 ? least(74 - 1, 108 + 47 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(74) LIMIT 108, 47);
CREATE TABLE db_01526.table_for_dict1 (`key_column` UInt64, `second_column` UInt64, `third_column` String) ENGINE = MergeTree ORDER BY (key_column, second_column) SETTINGS index_granularity = 43487, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 21317, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 49, min_merge_bytes_to_use_direct_io = 10060702171, index_granularity_bytes = 10263952, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 69999, primary_key_compress_block_size = 95895
drop table if exists mv_table;
SELECT multiIf((number % 2) = 0, [toFloat32(1), toFloat32(2)], (number % 3) = 0, [toInt32(2), toInt32(3)], [toUInt16(3), toUInt16(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_764539597270705A6874424D304C7770395C60602E4E3B54517047447B5C3221604C2B6B605E6162(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_qmrqjpuz 
CREATE TABLE test_01193_18429.table_4_251 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT nothingUInt64([], [], []);
insert into wt select 0, number from numbers(5);
DROP TABLE IF EXISTS tmp
INSERT INTO test_01193_18429.table_6_624 VALUES 
DROP TABLE IF EXISTS table_with_version;
SELECT cityHash64(groupArray(d)) FROM enum_pk WHERE ((d != toString(1)) > 0) > 0;
SELECT CAST('hello' AS FixedString(5)) LIKE '%world';
SELECT toBool(sin(SUM(number))) AS x FROM ( SELECT 1 AS number ) GROUP BY number HAVING 1 AND sin(sum(number)) ORDER BY * SETTINGS enable_optimize_predicate_expression = 1;
SELECT '-2.610898982580138', '0.00916587538237954';
INSERT INTO test_01193_18429.table_9_140 VALUES 
DROP TABLE IF EXISTS v_test22;
CREATE TABLE test_5924667539532D494C5D7C6530506F5821443C6F524963583739787751353F5B5A423C7324632E5B(x UInt8) Engine=Memory;
INSERT INTO cast (x) VALUES 
CREATE TABLE test_2554_tinylog (n UInt32) ENGINE = Log SETTINGS storage_policy = 'default';
SELECT positive_modulo(-1000, -32);
drop table if exists dist_01223;
desc file('test_02247.data', 'JSONCompactEachRow')
alter table many_mutations delete where y = 694 * 2 settings mutations_sync = 0;
INSERT INTO cool_table SELECT number, range(number), arrayMap(x -> range(x % 4), range(number)) FROM numbers(10);
CREATE TABLE largestTriangleThreeBucketsTestDateTime64Float64 (`x` DateTime64(3), `y` Float64) ENGINE = MergeTree ORDER BY (y, x) SETTINGS index_granularity = 58515, min_bytes_for_wide_part = 79143863, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 67, merge_max_block_size = 18031, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 20159, vertical_merge_algorithm_min_columns_to_activate = 30, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 20652493, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 42712, primary_key_compress_block_size = 21746
SELECT 1 IN (1, -1, 2.0, 2.5), 1.0 IN (1, -1, 2.0, 2.5), 1 IN (1.0, -1, 2.0, 2.5), 1.0 IN (1.0, -1, 2.0, 2.5), 1 IN (1.1, -1, 2.0, 2.5), -1 IN (1, -1, 2.0, 2.5);
DROP TABLE test_insert_t2;
SELECT arrayShuffle(NULL);
CREATE TABLE test_01193_18429.table_5_576 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_2_575 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_2_584 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
ALTER TABLE concurrent_alter_column ADD COLUMN c400 DOUBLE;
CREATE TABLE empty1 (`key` UInt32, `val` UInt32, `date` Datetime) ENGINE = ReplicatedSummingMergeTree('/clickhouse/tables/{database}/test_01560_optimize_on_insert', '1', val) PARTITION BY date ORDER BY key SETTINGS index_granularity = 29996, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 33, merge_max_block_size = 2414, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 992896, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 5342618538, index_granularity_bytes = 4322539, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 80705, primary_key_compress_block_size = 69559
CREATE TABLE test_533166204E7A4A4F2A7151614535583F6A7245646B683D3D21604E25795C3C2A5D254F3B3B7B282E(x UInt8) Engine=Memory;
SELECT `a` FROM `test_60hj7eta`.`source_table1`
SELECT X FROM (SELECT 1 AS X, 2 AS Y UNION ALL SELECT * FROM (SELECT 3, 4)) ORDER BY X ASC;
INSERT INTO test_table_signed_values SELECT number % 3, number, number, number, number, number % 3 FROM system.numbers LIMIT 120;
SELECT 'Running test stateless/02181_format_from_file_extension_local.sh from pid=1705' 
KILL MUTATION WHERE database=currentDatabase() AND table like 'alter_table_%'
SELECT arrayElement(['a',NULL,'c','d'], 3);
select * from file(02293_data.arrow) settings max_threads=1;
ALTER TABLE concurrent_alter_column ADD COLUMN c489 DOUBLE;
SELECT multiIf((col1 % 2) = 0, [col2, col3], 1, ['foo', 'bar'], [col6, 'bar']) FROM multi_if_check;
SELECT nb.t.t FROM na FULL JOIN nb USING (x);
SELECT '2015-02-03 06:07:08' >= toDateTime('2015-02-03 05:06:07');
SELECT sum(a-1), sum(b-1), sum(c-1), sumWithOverflow(a-1), sumWithOverflow(b-1), sumWithOverflow(c-1) FROM decimal;
CREATE TABLE test_6E3E512844467C383B45266B634E734F347261452638406A26414D377D32592A5E5C7C41666D434C(x UInt8) Engine=Memory;
INSERT INTO test_02908_r1_158 SELECT rand64() FROM numbers(5);
EXPLAIN PIPELINE SELECT b, c, d, e FROM t_fixed_prefix WHERE bitNot(a) = 1 AND bitNot(c) = 1 ORDER BY b, c, d, e SETTINGS optimize_read_in_order = 1
INSERT INTO test SELECT number, randomString(1000) FROM numbers(0, 10000);
DROP DATABASE IF EXISTS test_1czng6wr 
CREATE TABLE test_01193_18429.table_9_708 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO 01720_dictionary_db.dictionary_source_table VALUES 
SELECT 'Running test stateless/00749_inner_join_of_unnamed_subqueries.sql from pid=1722' 
CREATE TABLE test_max_parallel_replicas_lr (`timestamp` UInt64) ENGINE = MergeTree ORDER BY intHash32(timestamp) SAMPLE BY intHash32(timestamp) SETTINGS index_granularity = 6514, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 40, merge_max_block_size = 604, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 20999071, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 53157, primary_key_compress_block_size = 82658
CREATE TABLE test_01193_18429.table_8_767 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_10_909 VALUES 
SELECT 'Tuple nested in Array';
INSERT INTO test_01193_18429.table_2_469 VALUES 
SELECT 'Running test stateless/02539_generate_random_low_cardinality.sql from pid=1724' 
CREATE DATABASE IF NOT EXISTS test_uimce1hk 
SELECT number % 2 ? toDecimal32('32.1', 5) : toDecimal32('32.2', 5) FROM system.numbers LIMIT 2;
SELECT 'Running test stateless/01656_ipv4_bad_formatting.sql from pid=1714' 
INSERT INTO r2 SELECT 83
SELECT a, b, sum(s), count() from rollup GROUP BY ROLLUP(a, b) WITH TOTALS ORDER BY a, b;
INSERT INTO test_01193_18429.table_9_455 VALUES 
CREATE TABLE test_3B74623C3B344573432769557B4B3C7024404A587A792C3E2A492E597E52515C512F664730232F43(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_7_987 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE data_01515 (`key` Int, `d1` Int, `d1_null` Nullable(Int), INDEX d1_idx d1 TYPE minmax GRANULARITY 1, INDEX d1_null_idx assumeNotNull(d1_null) TYPE minmax GRANULARITY 1) ENGINE = MergeTree ORDER BY key SETTINGS index_granularity = 21232, min_bytes_for_wide_part = 439935873, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 10974, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 9656224054, index_granularity_bytes = 25642741, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 14716, primary_key_compress_block_size = 19908
DROP DATABASE 01837_db;
SELECT 'wordShingleMinHashCaseInsensitive';
SELECT length(groupUniqArray(2)(d)), length(groupUniqArray(2)(dt)), length(groupUniqArray(d)), length(groupUniqArray(dt)) FROM grop_uniq_array_date GROUP BY id ORDER BY id;
INSERT INTO r2 SELECT 33 % 10 = 2 ? 33 - 1 : 33
SELECT count(*) FROM system.session_log WHERE user IN ('02833_TCP_USER_25955_1','02833_TCP_USER_25955_2') AND interface = 'TCP'
DROP FUNCTION 02484_plustwo;
CREATE TABLE test_663D354544785F434B4B6357364460786729655F77574D3D3C3175292A792221413E756A7A296464(x UInt8) Engine=Memory;
SELECT date_trunc('second', toDateTime64('2020-01-01 12:11:22.123', 3, 'Europe/London'), 'Europe/London');
SELECT sum(n) FROM defaults;
alter table many_mutations delete where y = 162 * 2 settings mutations_sync = 0;
CREATE DATABASE IF NOT EXISTS test_oyij8vcg 
INSERT INTO test_02908_r1_207 SELECT rand64() FROM numbers(5);
SELECT `x` FROM generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8))))))))))))))))))))))))))))))))))))))))))))))))))))))))', 1, 1, 1) LIMIT 1
CREATE DATABASE IF NOT EXISTS test_m9xt8gle 
select t.a, t.a as t_a, s.a, s.a as s_a, y.a, y.a as y_a from t left join s on t.a = s.a left join y on y.b = s.b order by t.a, s.a, y.a;
ALTER TABLE t_mutations_subcolumns DELETE WHERE obj.k2 = 1;
INSERT INTO test_01193_18429.table_10_231 VALUES 
select value, changed from system.settings where name = 'compatibility' 
select 1 = position('abcdefgh', materialize('a')) from system.numbers limit 129;
select mapAdd(([toInt32(1), 2], [toInt32(1), 1]), ([toInt32(1), 2], [toInt32(1), 1])) as res, toTypeName(res);
SELECT hasAll([NULL],[NULL]);
SELECT 'Running test stateless/00753_alter_destination_for_storage_buffer.sql from pid=1718' 
SELECT minIf(str, notEmpty(str)) FROM min_if;
SELECT count() FROM mv;
alter table many_mutations delete where y = 223 * 2 settings mutations_sync = 0;
CREATE TABLE test_01193_18429.table_5_222 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 28372, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE TABLE test_01193_18429.table_2_782 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT a, b, c FROM decimal WHERE a = toInt16(42) AND b = toInt16(42) AND c = toInt16(42);
CREATE TABLE test_2E6D6D50367B2B3F3A24392D4673336E537E43322F536F6D606B7C5E523D527829355130583F647A(x UInt8) Engine=Memory;
ALTER TABLE mt_with_pk UPDATE w = 0 WHERE 1 SETTINGS mutations_sync = 2;
CREATE TABLE quorum3 (`x` UInt32, `y` Date) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01513/sequence_consistency', '3') PARTITION BY y ORDER BY x SETTINGS index_granularity = 11031, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 15103, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 9724747606, index_granularity_bytes = 17753139, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 17242, primary_key_compress_block_size = 86724
INSERT INTO test_01193_18429.table_3_472 VALUES 
INSERT INTO test_01193_18429.table_8_859 VALUES 
CREATE TABLE ANIMAL ( ANIMAL Nullable(String) ) engine = TinyLog;
DROP DATABASE IF EXISTS test_ty1ouvub 
CREATE WINDOW VIEW test_01048.wv ENGINE Memory AS SELECT count(a) AS count FROM test_01048.mt GROUP BY hop(timestamp, INTERVAL '1' SECOND, INTERVAL '3' SECOND) AS wid, plus(a, b);
SELECT tupleHammingDistance((1, 2), (3, 4));
CREATE TABLE test_01193_18429.table_7_80 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
EXPLAIN SYNTAX SELECT * FROM t1 WHERE (a, b) = (1, 2) AND (c, d, a) = (3, 4, 5) OR (a, b, 1000) = (c, 10, d) OR ((a, b), 1000) = ((c, 10), d);
CREATE TABLE 01902_db3.t3 (n Int8) ENGINE=MergeTree ORDER BY n;
SHOW CREATE TABLE 02539_settings_alias_view;
SELECT count() FROM hypothesis_test_test3 WHERE a != b FORMAT JSON
SELECT mapApply((x, y) -> (x, x + 1), map(1, 0, 2, 0));
alter table data_01900_1 update s = 'foo_79' where 1;
SELECT max(x) FROM file
SELECT count() FROM t_cnf_fuzz WHERE (c7 AND c3 AND c5 AND c5 AND c2) OR (c2 AND (NOT c1) AND c5) OR (c1 AND (NOT c3) AND c7) OR ((NOT c8) AND (NOT c7)) OR (c3 AND c7 AND c7) OR ((NOT c2)) OR ((NOT c1) AND c4 AND c3 AND c0) SETTINGS convert_query_to_cnf = 1
CREATE TABLE test_01193_18429.table_2_834 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
set optimize_injective_functions_inside_uniq = 0;
explain description=0 with sub1 as (select x, y from tab1 where x != 2), sub2 as (select y, z from tab2 where y != 4), sub3 as (select l.x, l.y, r.y, r.z as z from sub1 l any left join sub2 r on l.y = r.y), sub4 as (select z, a from tab3 where z != 8), sub5 as (select sum(x), sum(y), sum(r.y), sum(z), sum(rr.z), sum(a), key from sub3 ll any left join sub4 rr on ll.z = rr.z group by x % 2 as key) select * from sub5 order by key SETTINGS allow_experimental_parallel_reading_from_replicas = 2, max_parallel_replicas = 2, parallel_replicas_for_non_replicated_merge_tree = 1, prefer_localhost_replica = 1, cluster_for_parallel_replicas = 'test_cluster_one_shard_three_replicas_localhost', allow_experimental_analyzer=1;
INSERT INTO src_8 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 8
SELECT '103' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ffff:ffff:fe00:0')))
select 4 = position('abcdefgh', materialize('def')) from system.numbers limit 129;
SELECT 'Running test stateless/02833_local_udf_options.sh from pid=1724' 
SELECT 'Running test stateless/02480_max_map_null_totals.sql from pid=1722' 
INSERT INTO array_3dim_protobuf_00825 VALUES 
SELECT a, b, sum(s), count() from rollup GROUP BY a, b WITH ROLLUP ORDER BY a, b;
SELECT dateDiff('week', toDate('2017-12-31'), toDate('2018-01-01'));
SELECT isNull(e), isNotNull(e) FROM decimal WHERE a = toDecimal32(5.5, 1);
SELECT 'Running test stateless/00259_hashing_tuples.sql from pid=1713' 
SELECT lcm(15, 10);
SELECT 'Running test stateless/02162_array_first_last_index.sql from pid=1713' 
with pow(2,2) as four select pow(four, 2), 2 as two, pow(two, 2);
alter table many_mutations delete where y = 202 * 2 settings mutations_sync = 0;
SELECT s, replaceOne(s, '_', 'oo') AS a, replaceRegexpOne(s, '_', 'oo') AS b, a = b FROM (SELECT arrayJoin(['_.', '_.']) AS s);
INSERT INTO test_01193_18429.table_2_246 VALUES 
drop table if exists test54378;
DESCRIBE (SELECT p.`Ã¤ÂºÂ§Ã¥ÂÂ`, p.`Ã©ÂÂÃ©ÂÂ` FROM test ARRAY JOIN products AS p);
SELECT abs(NULL);
INSERT INTO test_01193_18429.table_10_571 VALUES 
SELECT multiIf(1, col2, 1, 'bar', col4) FROM multi_if_check;
SELECT 'Running test stateless/02843_context_has_expired.sql from pid=1718' 
INSERT INTO test_01193_18429.table_2_275 VALUES 
CREATE TABLE test_633960374930343E70495E366C2D71492F484423687C663A503C78745063537E55653E7432465852(x UInt8) Engine=Memory;
SELECT materialize(toInt32(0)) AS x, toDecimal32(1, 0) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
SELECT intDiv(10., 4.);
ALTER USER test_user_01075 HOST ANY;
SELECT 'Running test stateless/00700_decimal_in_keys.sql from pid=1714' 
drop view if exists revenue0;
DROP DATABASE IF EXISTS test_edmpi366 
SELECT * FROM bf_ngrambf_map_keys_test WHERE map['K2'] != 'V2' SETTINGS force_data_skipping_indices='map_keys_ngrambf';
SELECT * FROM enum ORDER BY x, y FORMAT PrettyCompact;
DROP USER IF EXISTS 'session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_double_sha1_password_two_profiles_two_roles';
DROP TABLE values_template;
INSERT INTO test_01193_18429.table_4_815 VALUES 
SELECT 'Running test stateless/01671_merge_join_and_constants.sql from pid=1714' 
INSERT INTO order_with_aggr SELECT * FROM numbers(100);
SYSTEM START MERGES replacing_00155
select 1 = multiMatchAny(materialize('iketunkleyaqaxdlocci'), materialize(['nkleyaqaxd', 'etunkleyaq', 'yaqaxdlocci', 'tunkleyaq', 'eyaqaxdlocc', 'leyaq', 'nkleyaqaxdl', 'tunkleya', 'kleyaqa', 'etunkleya', 'leyaqa', 'dlo', 'yaqa', 'leyaqaxd', 'etunkleyaq', ''])) from system.numbers limit 10;
CREATE TABLE replica2 (`v` UInt8) ENGINE = ReplicatedMergeTree(concat('/clickhouse/tables/{database}/', currentDatabase(), 'test/01451/attach'), 'r2') ORDER BY tuple() SETTINGS max_replicated_merges_in_queue = 0, index_granularity = 6173, min_bytes_for_wide_part = 959270541, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 9270, prefer_fetch_merged_part_size_threshold = 6848828059, vertical_merge_algorithm_min_rows_to_activate = 711116, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 22871962, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 69951, primary_key_compress_block_size = 75019
INSERT INTO ips_v6 SELECT ('::ffff:127.0.0.1');
SELECT emptyArrayInt16();
INSERT INTO test_01193_18429.table_5_723 VALUES 
INSERT INTO group_uniq_str SELECT 2 as id, toString(number % 100) as v FROM system.numbers LIMIT 1000000;
CREATE TABLE database_for_dict_01018.table_for_dict ( key_column UInt64, second_column UInt8, third_column String ) ENGINE = MergeTree() ORDER BY key_column;
CREATE DATABASE IF NOT EXISTS test_d9whajo9 
SELECT multiIf((number % 2) = 0, [toInt64(1), toInt64(2)], (number % 3) = 0, [toUInt32(2), toUInt32(3)], [toInt32(3), toInt32(3)]) FROM system.numbers LIMIT 10;
SELECT 32767, -9223372036854775808, 32767 = -9223372036854775808, 32767 != -9223372036854775808, 32767 < -9223372036854775808, 32767 <= -9223372036854775808, 32767 > -9223372036854775808, 32767 >= -9223372036854775808, -9223372036854775808 = 32767, -9223372036854775808 != 32767, -9223372036854775808 < 32767, -9223372036854775808 <= 32767, -9223372036854775808 > 32767, -9223372036854775808 >= 32767 , toUInt16(32767) = toInt64(-9223372036854775808), toUInt16(32767) != toInt64(-9223372036854775808), toUInt16(32767) < toInt64(-9223372036854775808), toUInt16(32767) <= toInt64(-9223372036854775808), toUInt16(32767) > toInt64(-9223372036854775808), toUInt16(32767) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toUInt16(32767), toInt64(-9223372036854775808) != toUInt16(32767), toInt64(-9223372036854775808) < toUInt16(32767), toInt64(-9223372036854775808) <= toUInt16(32767), toInt64(-9223372036854775808) > toUInt16(32767), toInt64(-9223372036854775808) >= toUInt16(32767) , toInt16(32767) = toInt64(-9223372036854775808), toInt16(32767) != toInt64(-9223372036854775808), toInt16(32767) < toInt64(-9223372036854775808), toInt16(32767) <= toInt64(-9223372036854775808), toInt16(32767) > toInt64(-9223372036854775808), toInt16(32767) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toInt16(32767), toInt64(-9223372036854775808) != toInt16(32767), toInt64(-9223372036854775808) < toInt16(32767), toInt64(-9223372036854775808) <= toInt16(32767), toInt64(-9223372036854775808) > toInt16(32767), toInt64(-9223372036854775808) >= toInt16(32767) , toUInt32(32767) = toInt64(-9223372036854775808), toUInt32(32767) != toInt64(-9223372036854775808), toUInt32(32767) < toInt64(-9223372036854775808), toUInt32(32767) <= toInt64(-9223372036854775808), toUInt32(32767) > toInt64(-9223372036854775808), toUInt32(32767) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toUInt32(32767), toInt64(-9223372036854775808) != toUInt32(32767), toInt64(-9223372036854775808) < toUInt32(32767), toInt64(-9223372036854775808) <= toUInt32(32767), toInt64(-9223372036854775808) > toUInt32(32767), toInt64(-9223372036854775808) >= toUInt32(32767) , toInt32(32767) = toInt64(-9223372036854775808), toInt32(32767) != toInt64(-9223372036854775808), toInt32(32767) < toInt64(-9223372036854775808), toInt32(32767) <= toInt64(-9223372036854775808), toInt32(32767) > toInt64(-9223372036854775808), toInt32(32767) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toInt32(32767), toInt64(-9223372036854775808) != toInt32(32767), toInt64(-9223372036854775808) < toInt32(32767), toInt64(-9223372036854775808) <= toInt32(32767), toInt64(-9223372036854775808) > toInt32(32767), toInt64(-9223372036854775808) >= toInt32(32767) , toUInt64(32767) = toInt64(-9223372036854775808), toUInt64(32767) != toInt64(-9223372036854775808), toUInt64(32767) < toInt64(-9223372036854775808), toUInt64(32767) <= toInt64(-9223372036854775808), toUInt64(32767) > toInt64(-9223372036854775808), toUInt64(32767) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toUInt64(32767), toInt64(-9223372036854775808) != toUInt64(32767), toInt64(-9223372036854775808) < toUInt64(32767), toInt64(-9223372036854775808) <= toUInt64(32767), toInt64(-9223372036854775808) > toUInt64(32767), toInt64(-9223372036854775808) >= toUInt64(32767) , toInt64(32767) = toInt64(-9223372036854775808), toInt64(32767) != toInt64(-9223372036854775808), toInt64(32767) < toInt64(-9223372036854775808), toInt64(32767) <= toInt64(-9223372036854775808), toInt64(32767) > toInt64(-9223372036854775808), toInt64(32767) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toInt64(32767), toInt64(-9223372036854775808) != toInt64(32767), toInt64(-9223372036854775808) < toInt64(32767), toInt64(-9223372036854775808) <= toInt64(32767), toInt64(-9223372036854775808) > toInt64(32767), toInt64(-9223372036854775808) >= toInt64(32767) 
CREATE TABLE test_01193_18429.table_2_588 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT blockSize(), * from tab_00481 format Null;
INSERT INTO dst_2 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 7
SELECT 'Running test stateless/02383_arrow_dict_special_cases.sh from pid=1715' 
desc format(JSONEachRow, '{"x" : "abc"}, {"x" : {"a" : 10, "b" : "abc"}}');
CREATE TABLE test_70564C2F5639655B4A554A694571684138465645346857627568305E3A7161796E404E7C332C7B6B(x UInt8) Engine=Memory;
DROP VIEW IF EXISTS test_02480_view;
SELECT 'Running test stateless/02717_pretty_json.sql from pid=1718' 
SELECT multiIf(1, [col2, col3], 1, ['foo', 'bar'], [col6, col7]) FROM multi_if_check;
CREATE TABLE test_4D2E49712E7E3E47495A6F6C3E4D2F7D4D67653D7350312F574C4B68507B22513D464A7C277B5F52(x UInt8) Engine=Memory;
SELECT [ 0];
SELECT x FROM b UNION ALL SELECT x FROM c UNION ALL SELECT x FROM d;
CREATE TABLE test_01193_18429.table_7_378 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_7A4A77744E666A63626C70237D71394B6C7A497B5F302C2C24467C672929342B72692B757C3E3154(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toUInt8(2), toUInt8(3)] ELSE [toFloat64(3), toFloat64(3)] END FROM system.numbers LIMIT 10;
DROP TABLE IF EXISTS replica1 SYNC;
SELECT 'Running test stateless/00992_system_parts_race_condition_zookeeper_long.sh from pid=1705' 
SELECT 'Logical functions nullable';
DROP DATABASE IF EXISTS test_z2ydobxj 
SELECT 'r1' FROM system.zookeeper WHERE path = '/clickhouse/' || currentDatabase() || '/01700_system_zookeeper_path_in/' || getMacro('shard') || '/replicas' AND name LIKE '%'|| getMacro('replica') ||'%' ORDER BY name;
SELECT multiIf(1, ['foo', 'bar'], 1, [col4, col5], ['foo', col7]) FROM multi_if_check;
DROP VIEW IF EXISTS test_02428_pv6
system reload dictionary db_01527_ranges.dict;
CREATE USER u5_01292 SETTINGS max_memory_usage MAX=5000000;
SELECT count() FROM test WHERE x >= '100000';
CREATE TABLE test_01193_18429.table_3_179 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
ATTACH TABLE sqllt.table;
SELECT 'Running test stateless/02833_array_join_columns.sql from pid=1720' 
CREATE TABLE perf_lc_num(Ã£ÂÂ num UInt8,Ã£ÂÂ arr Array(LowCardinality(Int64)) default [num]Ã£ÂÂ ) ENGINE = TinyLog;
WITH minSampleSizeContinous(20, sigma, 0.05, 0.8, 0.05) AS res SELECT 'continous Float64 2', roundBankers(res.1, 2), roundBankers(res.2, 2), roundBankers(res.3, 2) FROM minimum_sample_size_continuos ORDER BY roundBankers(res.1, 2);
INSERT INTO test_01193_18429.table_4_739 VALUES 
SELECT map[key] FROM ( SELECT materialize('key') AS key, CAST((['key'], ['value']), 'Map(String, String)') AS map );
DELETE FROM tab_02473 WHERE a = 0 AND b > 0 AND b <= 30;
SELECT avgWeighted(x, w) FROM values('x UInt8, w UInt32', (4, 1), (1, 0), (10, 2));
select parseDateTimeInJodaSyntax('1999 /11', 'yyyy /DD', 'UTC') = toDateTime('1999-01-11', 'UTC');
SELECT dictGet('range_dictionary', 'Tax', (toUInt64(1), '1'), toDate('2019-05-29'));
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (51 < 21 AND 4 > 0 ? 51 : 0)), throwIf(last != (51 < 21 AND 4 > 0 ? least(21 - 1, 51 + 4 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(21) LIMIT 51, 4);
CREATE DATABASE IF NOT EXISTS test_grom0gtp 
INSERT INTO test_01193_18429.table_9_311 VALUES 
CREATE TABLE test_443651535F5F20676855593E2A525D54793C2E224E55282D38694757642B5E7D7B27422878635370(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_bbo148z8 
SELECT 'Running test stateless/01260_ubsan_decimal_parse.sql from pid=1714' 
CREATE DATABASE IF NOT EXISTS test_swykjxw7 
SELECT 'aes-128-ofb' AS mode, hex(aes_encrypt_mysql(mode, '[HIDDEN]')) FROM encryption_test
CREATE TABLE test_3932554351702E5A2F7C566D2762603C664C58436B40646B5E643770583E7B427B46493A563C757E(x UInt8) Engine=Memory;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), N != toUInt64(1) as r FORMAT CSV;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (13 < 63 AND 73 > 0 ? 13 : 0)), throwIf(last != (13 < 63 AND 73 > 0 ? least(63 - 1, 13 + 73 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(63) LIMIT 13, 73);
CREATE DATABASE IF NOT EXISTS test_adi8iecf 
DROP TABLE IF EXISTS order_with_aggr;
 CREATE TABLE test_lazy_01294_concurrent_test_qna5lrny.slog (a UInt64, b UInt64) ENGINE = StripeLog; 
SELECT toIPv6OrNull('');
DROP TABLE cdp_orders;
SELECT anyLast_respect_nulls([]);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (73 < 19 AND 102 > 0 ? 73 : 0)), throwIf(last != (73 < 19 AND 102 > 0 ? least(19 - 1, 73 + 102 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(19) LIMIT 73, 102);
CREATE DATABASE IF NOT EXISTS test_l7tvwo2p 
EXPLAIN QUERY TREE SELECT count() FROM t_constraints_where WHERE b < 2 SETTINGS allow_experimental_analyzer = 1;
SELECT 1, 9223372036854775808, 1 = 9223372036854775808, 1 != 9223372036854775808, 1 < 9223372036854775808, 1 <= 9223372036854775808, 1 > 9223372036854775808, 1 >= 9223372036854775808, 9223372036854775808 = 1, 9223372036854775808 != 1, 9223372036854775808 < 1, 9223372036854775808 <= 1, 9223372036854775808 > 1, 9223372036854775808 >= 1 , toUInt8(1) = toUInt64(9223372036854775808), toUInt8(1) != toUInt64(9223372036854775808), toUInt8(1) < toUInt64(9223372036854775808), toUInt8(1) <= toUInt64(9223372036854775808), toUInt8(1) > toUInt64(9223372036854775808), toUInt8(1) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toUInt8(1), toUInt64(9223372036854775808) != toUInt8(1), toUInt64(9223372036854775808) < toUInt8(1), toUInt64(9223372036854775808) <= toUInt8(1), toUInt64(9223372036854775808) > toUInt8(1), toUInt64(9223372036854775808) >= toUInt8(1) , toInt8(1) = toUInt64(9223372036854775808), toInt8(1) != toUInt64(9223372036854775808), toInt8(1) < toUInt64(9223372036854775808), toInt8(1) <= toUInt64(9223372036854775808), toInt8(1) > toUInt64(9223372036854775808), toInt8(1) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toInt8(1), toUInt64(9223372036854775808) != toInt8(1), toUInt64(9223372036854775808) < toInt8(1), toUInt64(9223372036854775808) <= toInt8(1), toUInt64(9223372036854775808) > toInt8(1), toUInt64(9223372036854775808) >= toInt8(1) , toUInt16(1) = toUInt64(9223372036854775808), toUInt16(1) != toUInt64(9223372036854775808), toUInt16(1) < toUInt64(9223372036854775808), toUInt16(1) <= toUInt64(9223372036854775808), toUInt16(1) > toUInt64(9223372036854775808), toUInt16(1) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toUInt16(1), toUInt64(9223372036854775808) != toUInt16(1), toUInt64(9223372036854775808) < toUInt16(1), toUInt64(9223372036854775808) <= toUInt16(1), toUInt64(9223372036854775808) > toUInt16(1), toUInt64(9223372036854775808) >= toUInt16(1) , toInt16(1) = toUInt64(9223372036854775808), toInt16(1) != toUInt64(9223372036854775808), toInt16(1) < toUInt64(9223372036854775808), toInt16(1) <= toUInt64(9223372036854775808), toInt16(1) > toUInt64(9223372036854775808), toInt16(1) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toInt16(1), toUInt64(9223372036854775808) != toInt16(1), toUInt64(9223372036854775808) < toInt16(1), toUInt64(9223372036854775808) <= toInt16(1), toUInt64(9223372036854775808) > toInt16(1), toUInt64(9223372036854775808) >= toInt16(1) , toUInt32(1) = toUInt64(9223372036854775808), toUInt32(1) != toUInt64(9223372036854775808), toUInt32(1) < toUInt64(9223372036854775808), toUInt32(1) <= toUInt64(9223372036854775808), toUInt32(1) > toUInt64(9223372036854775808), toUInt32(1) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toUInt32(1), toUInt64(9223372036854775808) != toUInt32(1), toUInt64(9223372036854775808) < toUInt32(1), toUInt64(9223372036854775808) <= toUInt32(1), toUInt64(9223372036854775808) > toUInt32(1), toUInt64(9223372036854775808) >= toUInt32(1) , toInt32(1) = toUInt64(9223372036854775808), toInt32(1) != toUInt64(9223372036854775808), toInt32(1) < toUInt64(9223372036854775808), toInt32(1) <= toUInt64(9223372036854775808), toInt32(1) > toUInt64(9223372036854775808), toInt32(1) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toInt32(1), toUInt64(9223372036854775808) != toInt32(1), toUInt64(9223372036854775808) < toInt32(1), toUInt64(9223372036854775808) <= toInt32(1), toUInt64(9223372036854775808) > toInt32(1), toUInt64(9223372036854775808) >= toInt32(1) , toUInt64(1) = toUInt64(9223372036854775808), toUInt64(1) != toUInt64(9223372036854775808), toUInt64(1) < toUInt64(9223372036854775808), toUInt64(1) <= toUInt64(9223372036854775808), toUInt64(1) > toUInt64(9223372036854775808), toUInt64(1) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toUInt64(1), toUInt64(9223372036854775808) != toUInt64(1), toUInt64(9223372036854775808) < toUInt64(1), toUInt64(9223372036854775808) <= toUInt64(1), toUInt64(9223372036854775808) > toUInt64(1), toUInt64(9223372036854775808) >= toUInt64(1) , toInt64(1) = toUInt64(9223372036854775808), toInt64(1) != toUInt64(9223372036854775808), toInt64(1) < toUInt64(9223372036854775808), toInt64(1) <= toUInt64(9223372036854775808), toInt64(1) > toUInt64(9223372036854775808), toInt64(1) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toInt64(1), toUInt64(9223372036854775808) != toInt64(1), toUInt64(9223372036854775808) < toInt64(1), toUInt64(9223372036854775808) <= toInt64(1), toUInt64(9223372036854775808) > toInt64(1), toUInt64(9223372036854775808) >= toInt64(1) 
SELECT 39,toFixedString('Hello', 10), bin(bitShiftLeft(toFixedString('Hello', 10), 39));
CREATE TABLE test_422B613D214A357243474025416F725E38623771585B30775A365A34423A325A2048207B7B475C23(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_h4xezd1q 
CREATE DATABASE IF NOT EXISTS test_9gnfn4mt 
INSERT INTO r2 SELECT 90 % 10 = 2 ? 90 - 1 : 90
SELECT 'Running test stateless/02724_persist_interval_type.sql from pid=1718' 
INSERT INTO test_01193_18429.table_7_767 VALUES 
SELECT substring('abcdefgh', 2, materialize(-2));
CREATE TABLE test_28294D2F632570423C6860372161233C3552654C293720544C2B78457C70633575357727516F6667(x UInt8) Engine=Memory;
SELECT t1.id, t1.value, t2.id, t2.value, t3.id, t3.value FROM test_table_join_1 AS t1 LEFT JOIN test_table_join_2 AS t2 ON test_table_join_1.id = test_table_join_2.id INNER JOIN test_table_join_3 AS t3 ON test_table_join_2.id = test_table_join_3.id;
SELECT c FROM t_fixed_prefix WHERE a = 1 ORDER BY c SETTINGS optimize_read_in_order = 1
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 4929, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT Y, uniqCombined(12)(Z) FROM (SELECT number AS X, IPv4NumToString(toUInt32(X)) AS Z, (3*X*X - 7*X + 11) % 37 AS Y FROM system.numbers LIMIT 1000000) GROUP BY Y ORDER BY Y;
select makeDate(19800, 12, 3);
CREATE DATABASE IF NOT EXISTS test_7ryya4in 
SELECT 'Running test stateless/02480_client_option_print_num_processed_rows.expect from pid=1714' 
INSERT INTO four_rows_per_granule2 (p, k, v1, v2) VALUES 
SELECT arrayEnumerateUniqRanked(2, [[], [], [], [], [3], [3]]);
CREATE TABLE test_484C732020553431594A505D53764A282B5140644C7D6B604239575142554A46792A232167557043(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_3_308 VALUES 
CREATE DATABASE IF NOT EXISTS test_r7qbcaai 
CREATE TABLE test_table ( id UInt64, value String ) ENGINE = Memory;
DESCRIBE (SELECT * APPLY (x -> toString(x)) APPLY (x -> length(x)) FROM test_table);
CREATE INDEX idx_tab4_0 ON tab4 (col0 DESC,col4 DESC);
CREATE TABLE test_01193_18429.table_6_884 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT * FROM system.parts WHERE database = currentDatabase() AND table = 'data_01660';
OPTIMIZE TABLE new_table_test FINAL;
alter table many_mutations delete where y = 443 * 2 settings mutations_sync = 0;
SELECT value FROM 02703_keeper_map_concurrent_7 WHERE key = 7
SELECT count() from tab_02473 PREWHERE b > 10 AND b <= 70 AND c > 0 AND c <= 51 WHERE a == 0;
DROP DATABASE IF EXISTS test_eo6sba0d 
DROP DATABASE IF EXISTS test_25m105h2 
CREATE TABLE test_01193_18429.table_1_500 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT UUIDNumToString(NULL, NULL);
INSERT INTO test_01193_18429.table_3_360 VALUES 
SELECT 'Running test stateless/01551_mergetree_read_in_order_spread.sql from pid=1724' 
INSERT INTO test_01193_18429.table_7_624 VALUES 
SELECT quantileExactLow(0.0)(a), quantileExactLow(0.0)(b), quantileExactLow(0.0)(c) FROM decimal WHERE a >= 0;
CREATE TABLE test_7C394D496649503F2B4A286D742F2670705F275B2A7E5D5C5B6043597347695B2F7B4E3E6437245B(x UInt8) Engine=Memory;
select * from table_1 order by x settings additional_table_filters={'table_1' : 'x < 3'};
EXPLAIN SYNTAX SELECT materialize('ÃÂÃÂÃÂ¸ÃÂ²ÃÂµÃÂ, World') AS s1, materialize('ÃÂÃÂÃÂ¸ÃÂ²ÃÂµÃÂ, World') AS s2 WHERE (s1 LIKE 'hell%') OR (s2 ILIKE '%ÃÂ¿ÃÂÃÂ¸ÃÂ²ÃÂµÃÂ%') OR (s1 ILIKE 'world%') SETTINGS optimize_or_like_chain = 1, max_hyperscan_regexp_length = 10;
INSERT INTO test_01193_18429.table_4_218 VALUES 
CREATE TABLE test_3D69365F4C5071624670413E762138546B27602D33404D447B53334E616958207D4825285F592369(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_5_553 VALUES 
create table test_zkinsert ( name String, path String, value String ) ENGINE Memory;
CREATE DATABASE IF NOT EXISTS test_maiovo77 
select '----- Map/Map hash / State / ip6 -----';
CREATE TABLE x (`i` int, `j` int) ENGINE = MergeTree ORDER BY i / 10 SETTINGS index_granularity = 1, min_bytes_for_wide_part = 725132692, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 3124, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 9499606997, index_granularity_bytes = 30185806, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 57037, primary_key_compress_block_size = 90360
select subtractMonths(x1, 1) from t1;
CREATE TABLE test_4850513A2B256F255F4F49292E7D3A2A65663F2F3649625E4C4150315C537B566470773539544354(x UInt8) Engine=Memory;
SELECT multiIf((number % 2) = 0, toUInt32(1), (number % 3) = 0, toInt32(2), toUInt8(3)) FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_7zv1ifdo 
SELECT sum(number) FROM (SELECT * FROM remote('127.0.0.1', system.numbers) LIMIT 5) with totals;
INSERT INTO test_01193_18429.table_9_598 VALUES 
SELECT uniqExactArray([0, 1, 1], [0, 1, 1], [0, 1, 1]);
INSERT INTO test_01193_18429.table_7_899 VALUES 
SELECT 'Running test stateless/02895_peak_memory_usage_http_headers_regression.sh from pid=1713' 
SELECT number, neighbor('ClickHouse', -5, 'World') FROM numbers(10);
INSERT INTO test_01193_18429.table_9_23 VALUES 
CREATE TABLE test_01193_18429.table_6_549 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT * FROM cdp_orders;
CREATE DATABASE IF NOT EXISTS test_k8yeu1nv 
CREATE TABLE test_01193_18429.table_7_458 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_5_433 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE arrow_types2 (int8 Int8, uint8 UInt8, int16 Int16, uint16 UInt16, int32 Int32, uint32 UInt32, int64 Int64, uint64 UInt64, float32 Float32, float64 Float64, string String, fixedstring FixedString(15), date Date, datetime DateTime, datetime64 DateTime64(6)) ENGINE = Memory
SELECT i FROM generateRandom('i Array(String)', 1, 10, 10) LIMIT 10;
SELECT n.values.id FROM t_nested_with_dots;
SELECT CASE WHEN (number % 2) = 0 THEN toInt32(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toFloat32(3) END FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_fs7unfe2 
INSERT INTO test_01193_18429.table_1_78 VALUES 
CREATE TABLE test_01193_18429.table_4_349 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
WITH '2020-02-05 14:34:12.333' as S, toDateTime64(S, 3) as DT64 SELECT * WHERE S = materialize(DT64);
CREATE TABLE test_684A5C4D5B5E40234D226A6C4B504C6B3D76312B675A445D2C7B407A4873532D207332593167464B(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_7_463 VALUES 
SELECT murmurHash2_32('foo');
SELECT CAST(1111111111.222 AS DateTime64(3, 'Asia/Istanbul'));
SELECT toUnixTimestamp(-1);
CREATE TABLE test_01193_18429.table_6_424 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
 CREATE TABLE t_async_insert_dedup_no_part ( KeyID UInt32 ) Engine = ReplicatedMergeTree('/clickhouse/tables/{shard}/{database}/t_async_insert_dedup', '{replica}') ORDER BY (KeyID) 
select 'arrayPushFront(arr1, 0.1)';
DROP TABLE IF EXISTS pk_func;
SELECT 1 FROM mysql('127.0.0.1:9004', 'system', 'one', 'session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_double_sha1_password_no_profiles_no_roles', '[HIDDEN]') LIMIT 1 FORMAT `Null`
SELECT 'Running test stateless/02394_every_profile_event_must_have_documentation.sql from pid=1718' 
SET extremes = 1;
DROP TABLE IF EXISTS arrow_types4
CREATE TABLE test_54506B636235646636602131464F5A5D5B2925313F47775A5B4E2A3173476C253E50473A60434266(x UInt8) Engine=Memory;
SELECT CASE WHEN 1 THEN toFixedString(col2, 16) WHEN (col1 % 3) = 0 THEN toFixedString('bar', 16) ELSE toFixedString(col4, 16) END FROM multi_if_check;
CREATE DATABASE IF NOT EXISTS test_zv0c1l6d 
CREATE DATABASE IF NOT EXISTS test_pxiiu8at 
CREATE TABLE test_676A42687B712E3B2C7838446E75417A5A2B245A6A6B646D29317D315178334A3722275D68475330(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_10_393 VALUES 
SELECT 2 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'val', tuple(IPv6StringToNum('::ffff:7f00:ff7f')))
SELECT * FROM test_sort_proj WHERE x < 10 order by x SETTINGS optimize_move_to_prewhere = 0, optimize_use_projections = 0
SELECT largestTriangleThreeBuckets(4)(x, y) AS downsampled_data FROM largestTriangleThreeBucketsTestFloat64Float64;
DROP DATABASE IF EXISTS test_2zfsyel3 
INSERT INTO dst_11 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 42
DROP DATABASE IF EXISTS test_srfu6zim 
select arrayPopFront([1]);
SELECT * FROM mergetree_00712 ORDER BY x;
INSERT INTO test_01193_18429.table_9_124 VALUES 
select toDate('2018-01-01') != '2018-01-01';
EXPLAIN SYNTAX SELECT sum(i + 1 AS m) from columns_transformers;
CREATE DATABASE IF NOT EXISTS test_y69ljonw 
desc format(JSONEachRow, '{"x" : {"k1" : "123", "k2" : "Some string"}}');
SELECT finalizeAggregation(initializeAggregation('uniqExactState', toNullable(123)));
CREATE TABLE test_01193_18429.table_10_402 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE INDEX idx_tab2_0 ON tab2 (col4,col3);
SELECT * FROM system.trace_log LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
SELECT toUInt128OrNull(NULL);
CREATE WINDOW VIEW wv TO dst WATERMARK = INTERVAL '2' SECOND AS SELECT count(a) AS count, tumbleEnd(wid) AS w_end FROM mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND, 'US/Samoa') AS wid;
SELECT * FROM summing_table ORDER BY id, ip4Map.value, ip4Map.total, ip6Map.value, ip6Map.total, uuidMap.value, uuidMap.total;
CREATE DATABASE IF NOT EXISTS test_ts9x7l0e 
CREATE DATABASE IF NOT EXISTS test_wzdg6hbs 
INSERT INTO summing_00155 (x) SELECT number AS x FROM system.numbers LIMIT 8193
CREATE TABLE test_01193_18429.table_2_946 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select * from format(JSONEachRow, $$ {"a": "Hello", "b": 111} {"a": "World", "b": 123} {"a": "Hello", "b": 111} {"a": "World", "b": 123} {"a": "Hello", "b": 111} {"a": "World", "b": 123} {"a": "Hello", "b": 111} {"a": "World", "b": 123} {"a": "Hello", "b": 111} {"a": "World", "b": 123} {"a": "Hello", "b": 111} {"a": "World", "b": 123} {"a": "Hello", "b": 111} {"a": "World", "b": 123} {"a": "Hello", "b": 111} {"a": "World", "b": 123} {"a": "Hello", "b": 111} {"a": "World", "b": 123} {"a": "Hello", "b": 111} {"a": "World", "b": 123} $$);
INSERT INTO test_01193_18429.table_2_339 VALUES 
DROP DATABASE IF EXISTS test_74kbzank 
SELECT number AS id, toString(number) AS s, range(number) AS arr FROM numbers(10) FORMAT MsgPack
DROP TABLE IF EXISTS test_00687;
CREATE TABLE test_01193_18429.table_10_737 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT FROM_UNIXTIME(NULL);
kill query where query_id = '02450_kill_distributed_query_deadlock_test_ft363ahb-25' sync
SELECT multiIf((col1 % 2) = 0, [col2, 'bar'], (col1 % 3) = 0, ['foo', 'bar'], [col6, 'bar']) FROM multi_if_check;
SELECT '(forward, first_match, B)', id, sequenceNextNode('forward', 'first_match')(dt, action, 1, action = 'B') AS next_node FROM test_sequenceNextNode_Nullable GROUP BY id ORDER BY id;
SELECT CASE WHEN 1 THEN [col2, 'bar'] WHEN 1 THEN ['foo', col5] ELSE ['foo', 'bar'] END FROM multi_if_check;
CREATE DATABASE IF NOT EXISTS test_2n68n0em 
INSERT INTO test_01193_18429.table_9_220 VALUES 
DROP DATABASE IF EXISTS test_1bghhgpt 
INSERT INTO test_01193_18429.table_3_239 VALUES 
CREATE TABLE test_506B3B642E40476E73465376517D4172625D3A3B302C7946207D7E585A474760433E7E407A31287E(x UInt8) Engine=Memory;
select Null or isNull(intDiv(number, 1)) from numbers(5);
CREATE TABLE test_01193_18429.table_1_603 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_ifwh81xi 
SELECT count(), min(x), max(x), sum(x), uniqExact(x) FROM sample_00276 SAMPLE 1/2 OFFSET 1/2 SETTINGS parallel_replicas_count = 3, parallel_replica_offset = 2;
DROP TABLE IF EXISTS t1_00848;
SELECT multiIf((number % 2) = 0, toFloat32(1), (number % 3) = 0, toInt8(2), toUInt16(3)) FROM system.numbers LIMIT 10;
ALTER TABLE dst_12 DROP PART '1_1_1_0'
CREATE TABLE sharded_table (dummy UInt8) ENGINE = Distributed('test_cluster_two_shards', 'system', 'one');
SELECT x FROM a UNION ALL SELECT x FROM b UNION ALL SELECT x FROM c UNION ALL SELECT x FROM d;
CREATE DATABASE IF NOT EXISTS test_a0sn3inq 
CREATE TABLE test_50714F5F58765C5746393E22204E2D4F6231576B3F42387872674E7D642F6E5763636D2765556772(x UInt8) Engine=Memory;
/* ddl_entry=query-0000000054 */ ALTER TABLE test_990cm9di.t1 ADD COLUMN `newcol` UInt32
SELECT '1' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('8000::')))
SELECT arrayFirst(x -> materialize(1), arrayMap(x -> toString(x), range(number))) FROM system.numbers LIMIT 10;
SELECT query, ProfileEvents['S3CopyObject']>0 FROM system.query_log WHERE type = 'QueryFinish' AND event_date >= yesterday() AND current_database = 'test_s5wpyi15' AND query_id = 'asgowoqint' 
create database rdb_test_5mr53c62 engine=Replicated('/test/test_5mr53c62/rdb', 's1', 'r1')
CREATE DATABASE IF NOT EXISTS test_lvv3vrlk 
CREATE TABLE tuple_01016 (`a` Tuple(DateTime, Int32)) ENGINE = MergeTree ORDER BY a SETTINGS index_granularity = 50616, min_bytes_for_wide_part = 579766154, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 41, merge_max_block_size = 12353, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 95, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 8958299, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 46725, primary_key_compress_block_size = 22512
select format('{}{}', toFixedString('a', 1), materialize(toFixedString('b', 1))) == 'ab' from system.numbers limit 5;
INSERT INTO src_11 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 55
SELECT extractURLParameters(materialize('http://bigmir.net/?a=b&c=d')), extractURLParameters(materialize('http://bigmir.net/?a=b&c=d#e=f')), extractURLParameters(materialize('http://bigmir.net/?a&c=d#e=f')), extractURLParameters(materialize('http://bigmir.net/?a=b&c=d#e=f&g=h')), extractURLParameters(materialize('http://bigmir.net/?a=b&c=d#e')), extractURLParameters(materialize('http://bigmir.net/?a=b&c=d#e&g=h')), extractURLParameters(materialize('http://bigmir.net/?a=b&c=d#test?e=f&g=h')), extractURLParameters(materialize('//bigmir.net/?a=b&c=d')), extractURLParameters(materialize('//bigmir.net/?a=b&c=d#e=f')), extractURLParameters(materialize('//bigmir.net/?a&c=d#e=f')), extractURLParameters(materialize('//bigmir.net/?a=b&c=d#e=f&g=h')), extractURLParameters(materialize('//bigmir.net/?a=b&c=d#e')), extractURLParameters(materialize('//bigmir.net/?a=b&c=d#e&g=h')), extractURLParameters(materialize('//bigmir.net/?a=b&c=d#test?e=f&g=h'));
SELECT t1.value, t2.value, t3.value FROM test_table_join_1 AS t1 FULL JOIN test_table_join_2 AS t2 ON t1.id = t2.id OR t1.id = t2.id RIGHT JOIN test_table_join_3 AS t3 ON t2.id = t3.id OR t3.id = t2.id;
CREATE TABLE test_7B38206B792B7C6D7E326A7D432E7E6D4C4A3D652F2B735569683F4228625B4A7A204C5440223B5F(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01472_toBoundsOfInterval_disallow_empty_tz_field.sql from pid=1720' 
SELECT arrayIntersect([]);
SELECT 'After insert';
CREATE TABLE test_01193_18429.table_3_879 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_nbejf3oj 
select 5, * from test order by id
SELECT number > 5 ? 'censor.net' : 'google' FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_1_514 VALUES 
CREATE TABLE test_5B555B2A7A7A4C626F2B3246584E2E644C2F362330516563586D2F33573F323C5E4C25665E386C7C(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_3_606 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT count() FROM t_cnf_fuzz WHERE (c4 AND c4 AND c3 AND (NOT c8) AND c0) SETTINGS convert_query_to_cnf = 0
SELECT max(length(`x`)) FROM `test_ailfxhci`.`parallel_replicas_plain`
select hex(sipHash128ReferenceKeyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34)));
SELECT dictGetStringOrDefault('db_01268.dict2', 'region_name', toUInt64(1), 'NONE');
INSERT INTO memory_01069.file VALUES 
SELECT * FROM bloom_filter_idx WHERE s LIKE '%database%' AND s LIKE '%ClickHouse%' ORDER BY k
select 214 from test54378 prewhere date in ('2018-04-19');
select filesystemCapacity('s3_disk') >= filesystemAvailable('s3_disk') and filesystemAvailable('s3_disk') >= filesystemUnreserved('s3_disk');
DROP DATABASE IF EXISTS 01056_window_view_proc_hop_watch
INSERT INTO replicated_constraints1 VALUES 
INSERT INTO r9 SELECT 81
SELECT 1 FROM numbers(10) INTERSECT DISTINCT SELECT 1 FROM numbers(10);
select sum(*) from (select * from url('http://127.0.0.1:8123?query=select+{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}+as+x+format+TSV', 'TSV') settings max_threads=1, max_download_threads=1);
CREATE TABLE test_01193_18429.table_2_726 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT substring(explain, 1, 17) FROM (EXPLAIN SYNTAX SELECT * FROM t_02809 WHERE b NOT IN t_02809_set ) WHERE explain LIKE '%WHERE%';
CREATE TABLE morton_numbers_mask_02457 (`n1` UInt32, `n2` UInt8) ENGINE = MergeTree ORDER BY n1 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 667073379, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 4777, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 9068, primary_key_compress_block_size = 59207
SELECT count() FROM pk_in_tuple_perf WHERE (v, u) IN ((2, 10), (2, 20)) FORMAT JSON
CREATE TABLE test_352C5A3D355F453D4A3A627A7035572928577B7221307320683B2F2570677E6D407A3D30256D5A42(x UInt8) Engine=Memory;
INSERT INTO test_00974 VALUES 
SELECT arrayMap(x -> range(x), materialize([2, 1, 3])) AS arr, arraySort(arr), arrayReverseSort(arr), arraySort(x -> -length(x), arr);
CREATE INDEX idx_tab4_1 ON tab4 (col4 DESC,col1 DESC);
CREATE TABLE test_01193_18429.table_9_418 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE INDEX idx_tab4_5 ON tab4 (col0 DESC);
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt32(1), toUInt32(2)] WHEN (number % 3) = 0 THEN [toUInt32(2), toUInt32(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_232F50333C5A4F4559244B26623F4B7E606F66253C65317B446D2B2A7D483B2F306B755755555269(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_6_205 VALUES 
SELECT endUserIDs._experience FROM t_nested_tuple FORMAT JSONEachRow;
SELECT toInt128OrDefault('');
drop table if exists mixed_final_mark;
insert into lc_int8_1 select 1;
SELECT count() == 3 FROM null_in WHERE i global in test_set;
CREATE TABLE test_6D727271564E404D5F5E2E724F6C352F7A24404E643E53346C7D763B714360513F2B3D774856315B(x UInt8) Engine=Memory;
DROP TABLE dictionary_source_ru;
SELECT EXTRACT('Hello, world', '^\w+');
INSERT INTO src_8 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 18
CREATE TABLE test_01193_18429.table_10_465 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT x, txt FROM 02540_date WHERE txt == 'toUInt16(65536)';
select 0 = multiSearchFirstIndexUTF8('\0', CAST([], 'Array(String)'));
INSERT INTO r5 SELECT 99 % 10 = 5 ? 99 - 1 : 99
SELECT stddevPopStable(NULL, NULL, NULL);
INSERT INTO test_01193_18429.table_5_252 VALUES 
SELECT 'Running test stateless/01787_map_remote.sql from pid=1713' 
CREATE TABLE test_02908_r2_122 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_122', 'r2') ORDER BY tuple()
select count(if(d=4, d, 1)) from test settings force_optimize_projection = 1;
CREATE DATABASE IF NOT EXISTS test_4knt5trn 
SELECT JSONExtractBool('-1');
CREATE TABLE test_01193_18429.table_7_942 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO src VALUES /* (-93, 2) */ 
INSERT INTO test_02098 FORMAT JSONCompactStringsEachRowWithNamesAndTypes
SELECT 'Running test stateless/01549_low_cardinality_materialized_view.sql from pid=1724' 
CREATE TABLE test_01193_18429.table_2_640 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT toUInt32(1) AS x, [[1, 2, 3], [4, 5], []] as a FORMAT RowBinaryWithNames
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (0 < 11 AND 34 > 0 ? 0 : 0)), throwIf(last != (0 < 11 AND 34 > 0 ? least(11 - 1, 0 + 34 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(11) LIMIT 0, 34);
CREATE TABLE datetime_t (`id` UInt32, `value1` String, `date1` Datetime) ENGINE = ReplacingMergeTree ORDER BY id SETTINGS index_granularity = 51260, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 22220, prefer_fetch_merged_part_size_threshold = 7754704724, vertical_merge_algorithm_min_rows_to_activate = 794770, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 1687802, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 9384, primary_key_compress_block_size = 11577
CREATE TABLE test_01193_18429.table_8_521 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO employees VALUES 
DROP DATABASE IF EXISTS test_74d23y3g 
select JSONExtractString('{"abc":"hello}', 'abc');
SELECT tumbleStart(NULL, NULL, NULL);
CREATE TABLE test_01193_18429.table_2_399 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select * from agg_view01747;
CREATE TABLE test_01193_18429.table_4_579 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT groupBitAnd(NULL);
CREATE DATABASE IF NOT EXISTS test_2g49hbch 
SELECT multiIf((number % 2) = 0, toInt16(1), (number % 3) = 0, toInt64(2), toInt64(3)) FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/01281_join_with_prewhere_fix.sql from pid=1724' 
select * from data format Null settings max_local_read_bandwidth='1M', local_filesystem_read_method='read'
DROP TABLE json_parse;
FROM (FROM numbers(1) SELECT *) SELECT number;
INSERT INTO test_01193_18429.table_2_367 VALUES 
SELECT hopStart(NULL);
CREATE TABLE test02910_second (`Id1` String, `Id2` String, `timestamp` DateTime64(6), `tags` Array(String)) ENGINE = MergeTree PRIMARY KEY (Id1, Id2) ORDER BY (Id1, Id2, timestamp) SETTINGS index_granularity = 8192, index_granularity_bytes = 0, min_bytes_for_wide_part = 819416622, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 4479, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 2344737368, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 19453, primary_key_compress_block_size = 55109
SELECT arrayConcat(a, nest.b) AS x, toTypeName(x) FROM decimal;
SELECT 40
CREATE TABLE test_01193_18429.table_9_720 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_6C4E7A606A7560555A59703C2D2C557B415A4F7B2A3A2F7A5D55796D6D2560697C3A743652225321(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_8vfxttee 
CREATE TABLE test_3D63793340295C7A26605137633B7A48775F286729263E642F56264F5D2E48363868714157362123(x UInt8) Engine=Memory;
ALTER TABLE video_log MATERIALIZE PROJECTION p_agg SETTINGS mutations_sync = 1;
CREATE TABLE test_01193_18429.table_8_458 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
with '2018-01-12 22:33:44' as s, toDateTime(s) as datetime, toDateTime64(s, 6) as datetime64, toDate(s) as date, toDate32(s) as date32 SELECT formatDateTimeInJodaSyntax(datetime, 'ddd'), formatDateTimeInJodaSyntax(datetime64, 'ddd'), formatDateTimeInJodaSyntax(date, 'ddd'), formatDateTimeInJodaSyntax(date32, 'ddd');
DROP TABLE IF EXISTS concurrent_alter_add_drop_1
INSERT INTO test_02098 FORMAT TSVWithNamesAndTypes
SELECT count() FROM pk_set WHERE host IN ('admin.market2', 'admin.market3', 'admin.market4', 'abc', 'news') AND code = 100 AND n = 11;
SELECT '---polymorphic---';
SELECT 'insert 4 blocks, 2 deduplicated, 2 inserted'
CREATE TABLE test_01193_18429.table_2_85 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
EXPLAIN SYNTAX SELECT value1 FROM date32_t WHERE toYYYYMM(date1) = 199312 AND id BETWEEN 1 AND 3;
EXPLAIN SYNTAX SELECT sum(n + -1), sum(-1 + n), sum(n - -1), sum(-1 - n) FROM (SELECT number n FROM numbers(10));
SELECT count() FROM minmax_idx WHERE i64 = 5;
DROP DATABASE IF EXISTS test_6oqr8ggv 
CREATE TABLE test_01193_18429.table_4_88 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE comment_test_table ( k UInt64, s String ) ENGINE = TinyLog COMMENT 'Test table with comment';
select '-------toQuarter---------';
SELECT '--JSON_QUERY--';
INSERT INTO test_01193_18429.table_3_671 VALUES 
INSERT INTO test_01193_18429.table_10_97 VALUES 
SELECT arrayEnumerateUniqRanked([1,2], [1,2], [1,2]);
select 11;
select path from system.parts where database='test_eao6nox2' and table='rmt' and name='all_1_1_0'
select histogram(2)(num) from histogram;
CREATE TABLE test_02908_r3_294 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_294', 'r3') ORDER BY tuple()
CREATE DATABASE IF NOT EXISTS test_c5zukzwt 
CREATE TABLE test_01193_18429.table_7_63 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_2_368 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select length(b) as l from tab_00717 group by l;
CREATE WINDOW VIEW wv TO dst WATERMARK=STRICTLY_ASCENDING AS SELECT count(a) AS count, tumbleEnd(wid) as w_end FROM mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND, 'US/Samoa') AS wid;
set max_threads =1;
SELECT 'Running test stateless/00421_storage_merge__table_index.sh from pid=1713' 
CREATE TABLE test_01193_18429.table_4_526 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP DATABASE IF EXISTS test_jjitgv4k 
CREATE TABLE test_693F20737E41494C2A4E3E6750503221505C5F6C4A267E304330533A3955213426406C31262D315C(x UInt8) Engine=Memory;
SELECT count(n), sum(n) FROM test_01107.mt
SELECT count(1), uniqExact(1) FROM ( SELECT k FROM (SELECT materialize(1) as k FROM numbers(1)) nums JOIN (SELECT 1 AS k, number n FROM numbers(100000)) j USING k);
INSERT INTO test_01193_18429.table_2_71 VALUES 
CREATE TABLE test_01193_18429.table_6_699 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_4A4C5D79683155795C51757D406D286A5B5A3F39532A5C6B684C743F58716522263C696661254B4F(x UInt8) Engine=Memory;
SELECT CASE WHEN 1 THEN col2 WHEN 1 THEN toFixedString(col3, 16) ELSE 'baz' END FROM multi_if_check;
select [0] = multiSearchAllPositions(materialize('abcd'), ['cde']) from system.numbers limit 10;
SELECT * FROM t1 ASOF LEFT JOIN t2 ON t1.a = t2.a AND t1.b > t2.b ORDER BY t1.b;
DROP TABLE IF EXISTS 02703_keeper_map_concurrent_3
CREATE TABLE test_472678523A6E25377A3E32486D5276614870796C5E56666B7C497840734542452929546B584B6C2C(x UInt8) Engine=Memory;
SELECT toStartOfQuarter(toDateTime('2017-12-31 00:00:00', 'UTC'), 'UTC');
CREATE DATABASE IF NOT EXISTS test_h20z5s1h 
CREATE TABLE test_01193_18429.table_9_500 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE DATABASE IF NOT EXISTS test_i8rsxlbu 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (108 < 55 AND 72 > 0 ? 108 : 0)), throwIf(last != (108 < 55 AND 72 > 0 ? least(55 - 1, 108 + 72 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(55) LIMIT 108, 72);
CREATE TABLE test_01193_18429.table_9_82 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
drop table if exists part_01278_3;
SELECT count(*) AS total FROM ( SELECT message, info, count() AS cnt FROM installation_stats WHERE message_type LIKE 'fail' GROUP BY message, info ORDER BY cnt DESC LIMIT 5 BY message );
CREATE TABLE test_30407E616D3454792D7E56682F52585F345F4625714721257A622A4B2D7B54583E4265254C5D7654(x UInt8) Engine=Memory;
SELECT COUNT() FROM bloom_filter_array_types_test WHERE has(i32, 10);
EXPLAIN PIPELINE SELECT count() FROM t1 LEFT JOIN t2 ON t1.x = t2.x
DROP DATABASE IF EXISTS test_jc8b0knr 
SELECT toInt16(0) AS x, toUInt8(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
CREATE TABLE test_7243552D71213E2120484F70314B4F663C427135744E682A6546654225325F61256A66283F34495D(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02460_projections_and_aggregate_null_if_empty.sh from pid=1722' 
alter table many_mutations delete where y = 864 * 2 settings mutations_sync = 0;
DROP DATABASE IF EXISTS test_283gok45 
CREATE TABLE test_01193_18429.table_7_772 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_8_448 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT a FROM t_fixed_prefix WHERE bitNot(a) = 1 ORDER BY a SETTINGS optimize_read_in_order = 0
SELECT reinterpretAsInt16(-1);
select 1 = sequenceMatch('(?3)')(time, data = 0, data = 1, data = 2, data = 3) from sequence_test;
ALTER TABLE t1 MODIFY COLUMN s Nullable(String);
CREATE TABLE test_55393324343F5A522A4A3A4B60515C2D49577739763D287E496B474173243F666D445C2C7E676C79(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt32(1), toInt32(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toInt64(3), toInt64(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_5A4A71505031747C247627484D64722F71302C4B61523B4A76245A405F5E78667B2A2A6172232734(x UInt8) Engine=Memory;
CREATE INDEX idx_tab4_1 ON tab4 (col0,col3,col4 DESC);
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c0) AND c8 AND (NOT c5) AND (NOT c3) AND (NOT c7)) OR ((NOT c8) AND (NOT c6)) OR ((NOT c2) AND (NOT c9) AND c2 AND (NOT c5)) OR (c2 AND c2 AND (NOT c2)) OR ((NOT c7)) OR (c8 AND (NOT c3) AND (NOT c8) AND c7) OR ((NOT c9) AND c1 AND (NOT c7) AND (NOT c3) AND (NOT c8)) OR ((NOT c0) AND c1 AND c9) OR ((NOT c3) AND (NOT c4) AND c7 AND (NOT c1) AND c5) OR ((NOT c0) AND (NOT c7) AND (NOT c9) AND c7 AND (NOT c2)) SETTINGS convert_query_to_cnf = 0
SELECT domainRFC('[2001db81]:80') FORMAT CSV;
DROP DATABASE IF EXISTS test_b7pnkl7o 
CREATE TABLE test_01193_18429.table_9_213 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO src VALUES /* (-58, 1) */ 
SELECT tupleHammingDistance(t2, t3) FROM defaults;
SELECT Y.id - 1 FROM X RIGHT JOIN Y ON (X.id + 1) = toInt64(Y.id) SETTINGS join_use_nulls=1;
SELECT materialize(1) % CAST(materialize(1), 'Nullable(UInt32)');
INSERT INTO test_01193_18429.table_10_0 VALUES 
SELECT c1, c2, c3 FROM urlCluster('test_cluster_one_shard_three_replicas_localhost', 'http://localhost:11111/test/{a,b}.tsv', 'TSV', '`c1` Nullable(Int64), `c2` Nullable(Int64), `c3` Nullable(Int64)', 'auto') ORDER BY c1 ASC, c2 ASC, c3 ASC
DROP DATABASE IF EXISTS test_aai02309 
SHOW INDEX FROM database_123456789abcde.tbl;
SHOW CREATE test_complex_dictionary_load_factor;
SELECT '2023-10-23' - INTERVAL 1 DAY, '2023-10-23 12:34:56.123' - INTERVAL 1 DAY;
DROP TABLE one;
INSERT INTO 02131_rqtable VALUES 
SELECT 'Running test stateless/00466_comments_in_keyword.sql from pid=1715' 
SELECT multiMatchAny('goodbye', ['^hello[, ]+world$', 'go+d *bye', 'w(or)+ld']);
DROP TABLE IF EXISTS mutations_cleaner_r2 SYNC
CREATE TABLE test_4279593A382C57494D6F212C37292D594F567925483D7C556521752C45237E434E592332747B4935(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02676_kafka_murmur_hash.sql from pid=1724' 
SELECT 'alias2alias';
DROP TABLE msgpack
SELECT maxMap([number % 3, number % 4 - 1], [number, NULL]) FROM numbers(3) GROUP BY number WITH TOTALS ORDER BY number;
SELECT arrayPartialShuffle([tuple(1, -1), tuple(99999999, -99999999), tuple(3, -3)], 0, 0xbad_cafe);
INSERT INTO test_01193_18429.table_9_514 VALUES 
SELECT * FROM t1 ANTI RIGHT JOIN anti_right_join j USING(x) ORDER BY x, str, s;
CREATE TABLE t2 (`time` DateTime, `bar` String, `dimension_2` String, `dt` Date MATERIALIZED toDate(time), `dt2` Date MATERIALIZED toDayOfYear(time), `aliascol2` ALIAS concat(bar, dimension_2), `time_alias` DateTime ALIAS time) ENGINE = MergeTree PARTITION BY toYYYYMM(dt) ORDER BY (dt, bar) SETTINGS index_granularity = 5615, min_bytes_for_wide_part = 556076031, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 11573, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 76, min_merge_bytes_to_use_direct_io = 288389078, index_granularity_bytes = 7092473, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 65297, primary_key_compress_block_size = 96911
SELECT CASE WHEN (number % 2) = 0 THEN toUInt8(1) WHEN (number % 3) = 0 THEN toFloat64(2) ELSE toUInt32(3) END FROM system.numbers LIMIT 10;
SELECT farmFingerprint64(NULL);
INSERT INTO t_async_insert_empty_data FORMAT JSONEachRow 
CREATE TABLE test_01193_18429.table_1_86 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_table_compound (`id` UInt64, `value` Tuple(value_1 String)) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 20139, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 23094, prefer_fetch_merged_part_size_threshold = 693173534, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 69, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 521355, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 60380, primary_key_compress_block_size = 76395
INSERT INTO test_01193_18429.table_6_532 VALUES 
SELECT id FROM test_bf_indexOf WHERE indexOf(ary, 'value1') != 1 ORDER BY id FORMAT TSV;
SELECT CASE WHEN 1 THEN ['foo', 'bar'] WHEN 1 THEN ['foo', col5] ELSE [col6, 'bar'] END FROM multi_if_check;
CREATE DATABASE IF NOT EXISTS test_b7damfvz 
SELECT dictHas('02183_flat_dictionary', 2);
SELECT subtractTupleOfIntervals('2022-10-11'::Date, tuple(INTERVAL 1 DAY));
INSERT INTO test_01193_18429.table_2_446 VALUES 
CREATE DATABASE IF NOT EXISTS test_fashsbiw 
SELECT `A`, maxMap(CAST(arrayMap(`x` -> (`x`, 1), `r`), 'Map(UInt8,Int64)')) AS `x` FROM view(SELECT `number` AS `A`, range(150) AS `r` FROM numbers(60) WHERE (`A` % 2) = shardNum()) GROUP BY `A` LIMIT 100000000
select 2 = sequenceCount('(?1)(?1)(?1)')(time, data = 0, data = 1, data = 2, data = 3) from sequence_test;
CREATE TABLE test_706C2A5B572F3067473D58456C245853394944624A4D5520247E50514B202B33544D49566F38423B(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_7_170 VALUES 
CREATE TABLE test_535172292D2D7B3356514B6875222C3479243C536D2359292C705C794743747271784E5E4F79404B(x UInt8) Engine=Memory;
CREATE VIEW 02539_settings_alias_view AS SELECT 1 SETTINGS replication_alter_partitions_sync = 2;
SELECT CASE WHEN 1 THEN col2 WHEN (col1 % 3) = 0 THEN 'bar' ELSE toFixedString(col4, 16) END FROM multi_if_check;
SELECT multiIf(1, ['foo', 'bar'], (col1 % 3) = 0, [col4, col5], ['foo', 'bar']) FROM multi_if_check;
select * from set_index_not where status!='rip';
CREATE TABLE test_01193_18429.table_3_733 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
alter table many_mutations delete where y = 918 * 2 settings mutations_sync = 0;
CREATE TABLE test2_00671(start Integer, end Integer) engine = Memory;
CREATE TABLE t4 (a UInt32, b Nullable(Int32)) ENGINE = Memory;
SELECT 'Running test stateless/01051_all_join_engine.sql from pid=1724' 
CREATE TABLE test_01193_18429.table_8_736 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select 5 as x format TSKV 
SELECT * EXCEPT STRICT i from columns_transformers;
INSERT INTO lwd_test_02521 SELECT number, randomString(10), now() FROM numbers(50000);
INSERT INTO test_02908_r1_65 SELECT rand64() FROM numbers(5);
INSERT INTO test_01193_18429.table_8_301 VALUES 
CREATE TABLE constraint_on_nullable_type ( `id` Nullable(UInt64), CONSTRAINT `c0` CHECK `id` = 1 ) ENGINE = TinyLog();
CREATE TABLE test_01193_18429.table_4_418 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT toTypeName(today()) = 'Date';
SELECT rand32('');
SELECT * FROM (SELECT toInt128(NULL) AS x UNION ALL SELECT materialize(toInt128(-2))) WHERE x != 0;
CREATE TABLE test_49733B3D7B4B595979626631656F7E307468544245356A75662751235933402546456F574973795D(x UInt8) Engine=Memory;
EXPLAIN PIPELINE SELECT c, d FROM t_fixed_prefix WHERE a = 1 ORDER BY c, d SETTINGS optimize_read_in_order = 1
DROP DATABASE IF EXISTS test_8kbne4kh 
SELECT toDecimal32OrDefault ('\n\t\r', 4);
select number == 0 or intDiv(1, number) != 0 or number == 2 or intDiv(1, number - 2) != 0 from numbers(10);
CREATE TABLE test_5023562D263F35692D66477D4E66312B4C7765346A7D3859453B2A5F302D2B7E2732555B645A4520(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_8qb3csaa 
DROP TABLE IF EXISTS elog;
CREATE TABLE test_01193_18429.table_4_494 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_lggnnwv4 
DROP DATABASE IF EXISTS test_ohw9a813 
CREATE TABLE summing_00155 (d Date DEFAULT today(), x UInt64, s UInt64 DEFAULT 1) ENGINE = SummingMergeTree(d, x, 8192)
INSERT INTO test_01193_18429.table_3_427 VALUES 
INSERT INTO partition_all2 VALUES 
SELECT * FROM array_of_arrays_protobuf_00825 FORMAT Protobuf SETTINGS format_schema = '/usr/share/clickhouse-test/queries/0_stateless/format_schemas/00825_protobuf_format_array_of_arrays:AA'
SELECT normalizeQuery('SELECT 1, 1, 1, /* Hwllo */');
SELECT * FROM pk WHERE x = 3 AND y = 44 AND z = 4579;
SELECT uniqTheta(dummy) FROM remote('127.0.0.{2,3}', system.one);
SELECT 'Running test stateless/02845_parquet_odd_decimals.sh from pid=1722' 
CREATE TABLE test_01193_18429.table_9_842 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP TABLE IF EXISTS mt_compact;
DROP TABLE IF EXISTS dict_ui64;
SELECT s, y FROM test_02559 PREWHERE x AND y ORDER BY s;
SELECT dictGet('database_for_range_dict.range_dictionary_nullable', 'Tax', toUInt64(2), toDate('2019-05-29'));
SELECT * FROM pk WHERE x = 2 AND y = 11;
SELECT 'Running test stateless/01293_client_interactive_vertical_singleline.expect from pid=1724' 
SELECT transform(number, [3, 5, 7], ['hello', 'world', 'abc'], '') FROM system.numbers LIMIT 10;
CREATE INDEX idx_tab2_0 ON tab2 (col1,col0,col4 DESC);
INSERT INTO test_01193_18429.table_5_75 VALUES 
CREATE DATABASE IF NOT EXISTS test_rccm8j5q 
OPTIMIZE TABLE t_sparse_mutations_2 FINAL;
CREATE DATABASE IF NOT EXISTS test_xxn7ceqf 
CREATE USER u1_01292 DEFAULT ROLE ALL;
SELECT multiIf((number % 2) = 0, toUInt16(1), (number % 3) = 0, toUInt32(2), toInt16(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_7_847 VALUES 
SELECT t.b.s FROM sparse_tuple WHERE t.b.u != 0 ORDER BY id LIMIT 5;
SELECT multiIf((number % 2) = 0, [toFloat32(1), toFloat32(2)], (number % 3) = 0, [toUInt16(2), toUInt16(3)], [toUInt32(3), toUInt32(3)]) FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_q94afbld 
INSERT INTO test_01193_18429.table_2_921 VALUES 
CREATE DATABASE IF NOT EXISTS test_3nmhbwxm 
INSERT INTO test_01193_18429.table_2_228 VALUES 
CREATE TABLE test_02908_r3_9 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_9', 'r3') ORDER BY tuple()
CREATE DATABASE IF NOT EXISTS test_vw7mgc3g 
CREATE TABLE test_01193_18429.table_2_11 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT arrayCumSum(x -> 0, emptyArrayUInt8());
SELECT *, toTypeName(t1.id), toTypeName(t3.id) FROM t1_00848 t1 ANY FULL JOIN t3_00848 t3 ON t1.id = t3.id ORDER BY t1.id, t3.id;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (61 < 46 AND 73 > 0 ? 61 : 0)), throwIf(last != (61 < 46 AND 73 > 0 ? least(46 - 1, 61 + 73 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(46) LIMIT 61, 73);
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), N > toUInt64(1) as r FORMAT CSV;
CREATE TABLE test_prewhere_column_type (`a` LowCardinality(String), `x` Nullable(Int32)) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 12461, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 63, merge_max_block_size = 11602, prefer_fetch_merged_part_size_threshold = 9566373806, vertical_merge_algorithm_min_rows_to_activate = 187613, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 7889926109, index_granularity_bytes = 19373878, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 96011, primary_key_compress_block_size = 20665
SHOW SETTING output_format_pretty_color;
INSERT INTO test_01193_18429.table_4_209 VALUES 
select value from system.events where event = 'MergedRows'
SELECT 'Running test stateless/01161_all_system_tables.sh from pid=1705' 
SELECT s, replaceAll(s, '_', 'oo') AS a, REGEXP_REPLACE(s, '_', 'oo') AS b, a = b FROM (SELECT arrayJoin(['.', '_._']) AS s);
CREATE TABLE test (a Int32, b String) ENGINE = MergeTree() ORDER BY a SETTINGS disk = disk(type = cache, max_size = '1Gi', max_file_segment_size = '40Mi', boundary_alignment = '20Mi', path = '02789_filesystem_cache_alignment_test_xvwg5chi', disk = 's3_disk');
SELECT byteSize();
drop table test2 sync;
SELECT 2 IN (SELECT 1);
DROP DATABASE IF EXISTS test_7vy1znoe 
select 2 from t as l join t as r on l.id = r.id where r.x;
SELECT avgWeighted(x, w) FROM values('x UInt8, w UInt64', (0, 0), (1, 0));
CREATE TABLE test_46602652416C364D456563264C7857522B207E50733D38366754416058227B6349544A2F38443B33(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_oe01xgw9 
CREATE DATABASE IF NOT EXISTS test_amffpcc5 
SELECT CASE WHEN (number % 2) = 0 THEN toInt16(1) WHEN (number % 3) = 0 THEN toInt8(2) ELSE toInt64(3) END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_2_160 VALUES 
SELECT 'Running test stateless/02360_clickhouse_local_config-option.sh from pid=1705' 
INSERT INTO r8 SELECT 22 % 10 = 8 ? 22 - 1 : 22
WITH map(1, '1234') AS value, 'Array(Tuple(UInt64, UInt64))' AS type SELECT value, cast(value, type), cast(materialize(value), type);
CREATE TABLE test_01193_18429.table_6_818 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT multiIf((number % 2) = 0, [toFloat32(1), toFloat32(2)], (number % 3) = 0, [toUInt8(2), toUInt8(3)], [toFloat64(3), toFloat64(3)]) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_10_904 VALUES 
INSERT INTO r1 SELECT 59
SELECT CASE WHEN (number % 2) = 0 THEN toInt16(1) WHEN (number % 3) = 0 THEN toInt8(2) ELSE toUInt8(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_2_990 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_6_856 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select '5 left', * from (select 1 as x, 2 as y) t1 left join (select 1 as xx, 2 as yy from numbers(5)) t2 on x = xx or y = yy;
CREATE TABLE test_01193_18429.table_10_83 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
drop table if exists XXXX;
set force_primary_key=0;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (82 < 21 AND 94 > 0 ? 82 : 0)), throwIf(last != (82 < 21 AND 94 > 0 ? least(21 - 1, 82 + 94 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(21) LIMIT 82, 94);
CREATE USER 'session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_no_password_no_profiles_no_roles' IDENTIFIED WITH no_password ;
SELECT CASE WHEN (number % 2) = 0 THEN toInt32(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toUInt32(3) END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_4_89 VALUES 
INSERT INTO test_01193_18429.table_6_853 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt64(1), toUInt64(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toUInt64(3), toUInt64(3)] END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_4_134 VALUES 
INSERT INTO test_01193_18429.table_3_793 VALUES 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), D == N as r FORMAT CSV;
select mapPopulateSeries([toUInt8(1), 2], [toUInt8(1), 1]) as res, toTypeName(res);
SELECT 'Running test stateless/00118_storage_join.sql from pid=1718' 
CREATE TABLE test_02908_r3_233 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_233', 'r3') ORDER BY tuple()
CREATE TABLE test_01193_18429.table_9_146 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP ROW POLICY IF EXISTS 02131_filter_2 ON 02131_rptable;
CREATE TABLE gen ( repo_name String, event_type Enum8('CommitCommentEvent' = 1, 'CreateEvent' = 2, 'DeleteEvent' = 3, 'ForkEvent' = 4, 'GollumEvent' = 5, 'IssueCommentEvent' = 6, 'IssuesEvent' = 7, 'MemberEvent' = 8, 'PublicEvent' = 9, 'PullRequestEvent' = 10, 'PullRequestReviewCommentEvent' = 11, 'PushEvent' = 12, 'ReleaseEvent' = 13, 'SponsorshipEvent' = 14, 'WatchEvent' = 15, 'GistEvent' = 16, 'FollowEvent' = 17, 'DownloadEvent' = 18, 'PullRequestReviewEvent' = 19, 'ForkApplyEvent' = 20, 'Event' = 21, 'TeamAddEvent' = 22), actor_login String, created_at DateTime, action Enum8('none' = 0, 'created' = 1, 'added' = 2, 'edited' = 3, 'deleted' = 4, 'opened' = 5, 'closed' = 6, 'reopened' = 7, 'assigned' = 8, 'unassigned' = 9, 'labeled' = 10, 'unlabeled' = 11, 'review_requested' = 12, 'review_request_removed' = 13, 'synchronize' = 14, 'started' = 15, 'published' = 16, 'update' = 17, 'create' = 18, 'fork' = 19, 'merged' = 20), number UInt32, merged_at DateTime ) ENGINE = GenerateRandom;
DROP TABLE IF EXISTS pk_test7;
CREATE TABLE test_02908_r1_211 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_211', 'r1') ORDER BY tuple()
SELECT CASE WHEN (number % 2) = 0 THEN [toInt64(1), toInt64(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toInt8(3), toInt8(3)] END FROM system.numbers LIMIT 10;
INSERT INTO table_rename_with_ttl SELECT toDate('2018-10-01') + number % 3, toString(number) from numbers(9);
drop table if exists test_enum;
select 0 = sequenceMatch('(?1)(?t<2)(?3)')(time, data = 0, data = 1, data = 2, data = 3) from sequence_test;
INSERT INTO test_table_9 VALUES 
DROP TABLE t SYNC;
DROP DATABASE IF EXISTS test_0g1zo08o 
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toInt32(2) ELSE toInt64(3) END FROM system.numbers LIMIT 10;
DROP TABLE IF EXISTS local;
SELECT count() FROM t_cnf_fuzz WHERE (c0) OR (c0 AND (NOT c6) AND c8 AND c9 AND (NOT c6)) OR ((NOT c2) AND (NOT c0) AND c3 AND c9 AND (NOT c8)) OR ((NOT c4)) OR ((NOT c5) AND (NOT c6) AND (NOT c0) AND (NOT c5) AND c1) OR ((NOT c0) AND c7 AND (NOT c8) AND c6) OR (c7 AND (NOT c0) AND c1 AND (NOT c8) AND (NOT c8)) OR (c0) OR ((NOT c2) AND c7 AND c4) SETTINGS convert_query_to_cnf = 0
CREATE DATABASE IF NOT EXISTS test_gdis77og 
select toDateTimeOrDefault(cast(19 as Int32), 'UTC');
SELECT toInt8OrDefault(-1);
INSERT INTO test_01193_18429.table_6_47 VALUES 
CREATE TABLE test_01193_18429.table_5_883 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
insert into r select number%100 x, 'x' a, quantilesTimingState(0.5, 0.95, 0.99)(number::Int64) q, sum(1) s from numbers(1000) group by x,a;
DROP DATABASE IF EXISTS test_pr2u2aox 
SELECT value, time, round(exp_smooth, 3) FROM (SELECT number = 0 AS value, number AS time, exponentialTimeDecayedCount(1)(time) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS exp_smooth FROM numbers(10));
SELECT subtractInterval(tuple(INTERVAL 1 DAY, INTERVAL 1 SECOND), INTERVAL 1 SECOND);
CREATE TABLE test_58472A585B536B74462A79353B3A356C753B38294B6025216F3240527450646E4341674C3C4D4B59(x UInt8) Engine=Memory;
CREATE MATERIALIZED VIEW IF NOT EXISTS mv4 TO data_b_02187 AS Select sleepEachRow(0.05) as a FROM data_a_02187;
select 0 = multiMatchAny(materialize('abc'), ['abcdef']) from system.numbers limit 10;
select 1 = multiSearchAnyCaseInsensitive(materialize('GEsmYgXgMWWYsdhZaVvikXZiN'), ['wySd', 'smYgxGMWWYsDHZ', 'vIk', 'smyGxgmwWysDHzAvvikxZi', 'WYsdHZAvVI', 'YGxGmwWYSDhzavvI', 'XzI', 'ySDhZAvvIK', '', 'myGXgmwWySdHz', 'MYGxgmwWySdHZaVvik', 'wYsDhzAvvikXz', 'wwYsdHzav', 'Z']) from system.numbers limit 10;
CREATE TABLE test_01193_18429.table_8_610 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_2_277 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/02010_lc_native.sh from pid=1724' 
CREATE TABLE test_01193_18429.table_8_17 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SHOW CREATE TABLE dict_db_01225_dictionary.`dict_db_01225.dict` FORMAT TSVRaw;
CREATE TABLE array_jaccard_index (`arr` Array(UInt8)) ENGINE = MergeTree ORDER BY arr SETTINGS index_granularity = 37024, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.9618685841560364, replace_long_file_name_to_hash = true, max_file_name_length = 63, merge_max_block_size = 11856, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 642660, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 27571205, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 24152, primary_key_compress_block_size = 59487
CREATE DATABASE IF NOT EXISTS test_yugxc7su 
select * from file(data_02314.avro, auto, 'x UInt32') settings input_format_avro_null_as_default=1
INSERT INTO test_01193_18429.table_4_457 VALUES 
SELECT constant_true ? then_non_constant : else_non_constant_nullable AS res FROM nullable_00431;
INSERT INTO test_01193_18429.table_4_975 VALUES 
CREATE TABLE test_4144467447783E2A7977794236236C55655321304B374B3E2C327A6F793752366154413B713C4A25(x UInt8) Engine=Memory;
drop table if exists j;
CREATE TABLE test_01193_18429.table_4_331 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_6_408 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_8_191 VALUES 
CREATE DATABASE IF NOT EXISTS test_f6ibaz8j 
SELECT CASE WHEN (number % 2) = 0 THEN toUInt16(1) WHEN (number % 3) = 0 THEN toUInt8(2) ELSE toInt64(3) END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_5_533 VALUES 
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 25279, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT a, b, e FROM t_fixed_prefix WHERE bitNot(a) = 1 AND bitNot(c) = 1 ORDER BY a, b, e SETTINGS optimize_read_in_order = 1
SELECT `number`, `number` % 2, sum(`number`) AS `val` FROM numbers(10) GROUP BY GROUPING SETS ((`number`), (`number` % 2)) ORDER BY `number` ASC, `number` % 2 ASC, `val` ASC
DROP DATABASE IF EXISTS test_6p4mqmsg 
select count() from rmt
ALTER TABLE tab MODIFY COLUMN long_string String SETTINGS (min_compress_block_size = 163840, max_compress_block_size = 163840);
INSERT INTO test_01193_18429.table_3_458 VALUES 
alter table many_mutations delete where y = 86 * 2 settings mutations_sync = 0;
INSERT INTO src VALUES /* (-41, 2) */ 
SELECT nothingUInt64ArrayIf([NULL], 1) AS `x` FROM numbers(3)
DESC TABLE numbers(20)
CREATE TABLE test1_00395( col1 UInt64, col2 Nullable(UInt64), col3 String, col4 Nullable(String), col5 Array(UInt64), col6 Array(Nullable(UInt64)), col7 Array(String), col8 Array(Nullable(String)), d Date) Engine = StripeLog;
select * from format('RowBinaryWithDefaults', 'x Nullable(UInt32) default 42', x'0001');
CREATE TABLE test_01193_18429.table_8_825 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT '49' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ffff:ff00::')))
select x, y from tab where (x + y) = 2;
SELECT DISTINCT `k1`, `k2` FROM view(SELECT 1 AS `k1`, 2 AS `k2`, 3 AS `v`)
SELECT count() == 1 FROM dtest WHERE b IN toDecimal256('44.4000', 4);
SELECT upperUTF8(NULL);
DROP DATABASE IF EXISTS 01070_window_view_watch_events;
CREATE TABLE test_01193_18429.table_7_421 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select 0 = multiMatchAny(materialize('abc'), materialize(['abcdef'])) from system.numbers limit 10;
select 1 = multiSearchAny(materialize('abcdefgh'), ['fgh']);
INSERT INTO dst_4 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 8
CREATE TABLE test_01193_18429.table_5_754 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE DATABASE IF NOT EXISTS test_7xpw2kgv 
INSERT INTO src VALUES /* (19, 1) */ 
SELECT parseDateTime32BestEffortOrNull('<Empty>') AS a, toTypeName(a);
create dictionary regexp_dict1 ( regexp String, name String, version Nullable(UInt64), comment String default 'nothing' ) PRIMARY KEY(regexp) SOURCE(CLICKHOUSE(TABLE 'regexp_dictionary_source_table')) LIFETIME(0) LAYOUT(regexp_tree);
SELECT multiIf((col1 % 2) = 0, [col2, 'bar'], (col1 % 3) = 0, [col4, 'bar'], ['foo', col7]) FROM multi_if_check;
INSERT INTO r10 SELECT 87 % 10 = 10 ? 87 - 1 : 87
CREATE TABLE test_4A2C20743640342C7857772B2A226E432F3E4A222862775436625364777B706D7E5766683042304C(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02662_sparse_columns_mutations_4.sql from pid=1714' 
CREATE TABLE test_01193_18429.table_4_603 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_block_mismatch_sk1 VALUES 
select 0 = multiMatchAny(materialize('abcd'), ['cdefg']) from system.numbers limit 10;
INSERT INTO test_01193_18429.table_10_952 VALUES 
SELECT '(backward, tail, B)', id, sequenceNextNode('backward', 'tail')(dt, action, 1, action = 'B') AS next_node FROM test_sequenceNextNode GROUP BY id ORDER BY id;
SELECT date_trunc('month', d), SUM(c) FROM t FINAL WHERE f2 = 'x' GROUP BY 1;
SELECT f + 21, f - 21, f - 84, f * 21, f * -21, f / 21, f / 84 FROM decimal WHERE f > 0;
CREATE DICTIONARY 02183_hashed_dictionary ( id UInt64 ) PRIMARY KEY id LAYOUT(HASHED()) SOURCE(CLICKHOUSE(TABLE '02183_dictionary_test_table')) LIFETIME(0);
CREATE TABLE test_01193_18429.table_4_942 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP USER 'test_user_02771_30643'
SET date_time_output_format='iso';
SELECT multiIf((col1 % 2) = 0, ['foo', 'bar'], (col1 % 3) = 0, [col4, 'bar'], [col6, 'bar']) FROM multi_if_check;
DROP DATABASE IF EXISTS test_uyjjdrmn 
SELECT * FROM bf_tokenbf_lowcard_test WHERE like(lc, '%CD5%') SETTINGS force_data_skipping_indices='lc_bf_tokenbf';
CREATE TABLE test_5E484E302338346F243376424E632D4C46684E7870255F77282E587B234B28313656405561427068(x UInt8) Engine=Memory;
SELECT count() FROM system.processes WHERE query_id LIKE '01168_mutations_isolation_test_oos88xqy_tx13%'
SELECT joinGet('join_any_left', 's', number) FROM numbers(3);
ALTER TABLE src_1 MOVE PARTITION 9 TO TABLE dst_1
INSERT INTO test_01193_18429.table_8_920 VALUES 
CREATE TABLE test_30435878457D6876237E617C3A4526402E7C4E6B3E516E3B356F2541324F27684F414040656F5A25(x UInt8) Engine=Memory;
SELECT ngrams(materialize(toFixedString('Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ', 16)), 5);
SELECT 'type;timeSlot;toDateTime64;false', toTypeName(timeSlot(toDateTime64('1920-02-02 10:20:30', 3, 'UTC'), 'UTC')) SETTINGS enable_extended_results_for_datetime_functions = false;
SELECT * FROM (SELECT 1 AS x) AS t1 ALL RIGHT JOIN (SELECT 2 AS x) AS t2 ON t1.x = t2.x;
CREATE TABLE test_01193_18429.table_8_778 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DICTIONARY IF EXISTS 01785_db.simple_key_flat_dictionary;
SELECT x FROM d UNION ALL SELECT x FROM c;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt16(1) WHEN (number % 3) = 0 THEN toInt16(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
SELECT formatDateTime(toDateTime('2000-12-31 00:33:44'), '%j'), formatDateTime(toDate32('2000-12-31'), '%j');
DROP DATABASE IF EXISTS test_ese6dm37 
SELECT 'Running test stateless/00709_virtual_column_partition_id.sql from pid=1722' 
SELECT CASE WHEN (number % 2) = 0 THEN toUInt16(1) WHEN (number % 3) = 0 THEN toInt64(2) ELSE toInt64(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_10_641 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SHOW CREATE TEMPORARY TABLE test_01602b;
SELECT quantileTimingWeighted(0.2)(d, 1) FROM datetime;
EXPLAIN AST ALTER TABLE t MODIFY TTL z + INTERVAL 7 DAY;
SELECT 'Running test stateless/01459_manual_write_to_replicas_quorum_detach_attach.sh from pid=1705' 
CREATE TABLE test_467C6C527E44253833237E364C276C45703E3741357C57484B30524C66242D61547C6F293C4C3E75(x UInt8) Engine=Memory;
CREATE TABLE user_all ( id Int64, name String, age Int32 ) ENGINE = Distributed('test_shard_localhost', currentDatabase(), user_local, rand());
CREATE TABLE test_01193_18429.table_1_690 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select count(), * from dist_01247 group by number settings distributed_group_by_no_merge=1;
EXPLAIN QUERY TREE run_passes = 1 select sum(if(number % 2, null, number)) from numbers(100);
SELECT 'Running test stateless/02963_remote_read_small_buffer_size_bug.sh from pid=1722' 
SELECT `UserID` FROM `test_c5zukzwt`.`users` WHERE `UserID` IN ((SELECT arrayJoin([1468013291393583084, 1321770221388956068])) AS `_subquery3788`)
SELECT 'xn--gk3at1e.com' AS ascii, idnaDecode(ascii) AS unicode, idnaEncode(unicode) AS original, tryIdnaEncode(unicode) AS original_try;
CREATE DATABASE IF NOT EXISTS test_mqajgqfc 
CREATE TABLE test_6F4271705D3F3E43257861622F4F7B435F7457685265672E58202624212B57356876297868562C25(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00177_inserts_through_http_parts.sh from pid=1722' 
INSERT INTO test_01193_18429.table_3_53 VALUES 
CREATE DATABASE IF NOT EXISTS test_wpro1idw 
INSERT INTO test_01193_18429.table_8_863 VALUES 
select * from file(02475_data.bsonEachRow, auto, 'bool Bool, int8 Int8, uint8 UInt8, int16 Int16, uint16 UInt16, int32 Int32, uint32 UInt32, int64 Int64, uint64 UInt64')
INSERT INTO test_01193_18429.table_6_358 VALUES 
CREATE DATABASE IF NOT EXISTS test_skr1wjm2 
CREATE TABLE test_5E5D254670534952587E373366545F5C6D2777434F46627E567B3E28583D7C504E445031463E3B59(x UInt8) Engine=Memory;
CREATE TABLE test_6B7B7C546A7C3D29735E3321234776507A3C624F5E703F4E33733C4F55752F2C6977692D724C2042(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01516_create_table_primary_key.sql from pid=1705' 
INSERT INTO test_01193_18429.table_8_1 VALUES 
select *;
SELECT JSONType('{"a": "hello", "b": [-100, 200.0, 300]}', 'b');
DROP DATABASE IF EXISTS test_uow8fat6 
SELECT roundBankers(studentTTest(left, right).2, 6) from welch_ttest__fuzz_7;
show create table merge_distributed;
SELECT '===Replicated case===';
CREATE TABLE test_01193_18429.table_10_787 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE null_00557 (x UInt8) ENGINE = Null;
SELECT * FROM ( SELECT number, n, j1, j2 FROM (SELECT number, number / 2 AS n FROM remote('127.0.0.{2,3}', system.numbers)) ANY LEFT JOIN (SELECT number / 3 AS n, number AS j1, 'Hello' AS j2 FROM system.numbers LIMIT 0) USING n LIMIT 10 ) ORDER BY number;
INSERT INTO test_01193_18429.table_10_524 VALUES 
SELECT * FROM ( SELECT String1,String2,String3,String4,COUNT(*) FROM Test GROUP by String1,String2,String3,String4 ) AS expr_qry WHERE String4 ='String4_0';
SYSTEM STOP MERGES table_for_rename_replicated;
CREATE TABLE test_01193_18429.table_10_610 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
insert into function null() values 
INSERT INTO test_01193_18429.table_6_224 VALUES 
INSERT INTO test_01193_18429.table_3_599 VALUES 
create table test_00609 (a Int8) engine=Memory;
CREATE TABLE test_01193_18429.table_9_453 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select * from (explain pipeline select sum(x) from t settings max_threads=4, max_streams_for_merge_tree_reading=16, allow_asynchronous_read_from_io_pool_for_merge_tree=0, max_streams_to_max_threads_ratio=8) where explain like '%Resize%' or explain like '%MergeTreeSelect%';
INSERT INTO arena SELECT number % 10 AS k, hex(intDiv(number, 10) % 1000) AS d FROM system.numbers LIMIT 10000000;
CREATE TABLE test_3C46675B79236C3F40312836376C226F796D4F3C22504138425A6B4E7C532A2250735B2331334B36(x UInt8) Engine=Memory;
SELECT value FROM select_in_test WHERE value IN (SELECT -1);
INSERT INTO test_01193_18429.table_4_747 VALUES 
CREATE TABLE test_7C23742C644547394F21245376793D6046414268396E6C532D484F4264735C6D74386C31632A3E34(x UInt8) Engine=Memory;
SELECT * FROM merge(currentDatabase(), 'alter_table') FORMAT Null
SELECT countIf(explain like '%COMMA%' OR explain like '%CROSS%'), countIf(explain like '%INNER%') FROM ( EXPLAIN QUERY TREE SELECT t1.a FROM t1, t2, t3, t4 WHERE t1.b = t2.b AND t1.b = t3.b AND t1.b = t4.b SETTINGS allow_experimental_analyzer = 1);
select cutToFirstSignificantSubdomainCustom('foo.kernel.dev.ss', 'public_suffix_list');
SELECT extractTextFromHTML('Hello<style type="text/css">World <![CDAT[</style>]]> </style> goodbye');
SELECT 'Running test stateless/01651_bugs_from_15889.sql from pid=1724' 
CREATE DATABASE IF NOT EXISTS test_itc560gz 
SELECT 'Running test stateless/02461_welch_t_test_fuzz.sql from pid=1718' 
CREATE TABLE test_6064215C7828377459422878547B366B687E4D726C41344A38793622662F453759364F2B35694139(x UInt8) Engine=Memory;
SELECT sipHash64('');
drop table if exists dist_01643;
INSERT INTO r6 SELECT 9
CREATE TABLE test_643D52252B73434D223073367A603B3861414F39632A2B367B7753463B7034652572694A503E512E(x UInt8) Engine=Memory;
select sum(*) from (select * from url('http://127.0.0.1:8123?query=select+{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}+as+x+format+Native', 'Native') settings max_threads=1, max_download_threads=1);
CREATE TABLE IF NOT EXISTS test_01516_test_u75vly87.data2 ENGINE = MergeTree ORDER BY number SETTINGS index_granularity = 12256, min_bytes_for_wide_part = 747639576, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 4406, prefer_fetch_merged_part_size_threshold = 8623381541, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 5307695899, index_granularity_bytes = 17481569, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 38170, primary_key_compress_block_size = 92760 AS SELECT * FROM numbers(1)
DROP DATABASE IF EXISTS test_sh663xjk 
SELECT * FROM bf_ngrambf_map_values_test WHERE map['K3'] = '';
DROP TABLE IF EXISTS buf;
DROP DATABASE IF EXISTS test_8oaa0s9g 
select array, struct.d1, struct.a1, struct.a2, struct.a3, struct.a4, struct.a5, struct.a6 from aliases_test array join struct;
SELECT 'Running test stateless/02234_column_function_short_circuit.sql from pid=1726' 
insert into table function file('test_02167.CustomSeparatedWithNamesAndTypes', 'auto', 'x UInt64') select * from numbers(2)
SELECT COUNT() FROM single_column_bloom_filter WHERE i32 IN (SELECT arrayJoin([toInt32(1), toInt32(2)])) SETTINGS max_rows_to_read = 7;
select 3 = position('abcdefgh', materialize('c'));
SELECT dateDiff('second', materialize(toDateTime('2015-08-18 00:00:00', 'UTC')), materialize(toDateTime64('2015-08-18 00:00:10', 3, 'UTC')));
CREATE TABLE test_645D2423406E76272966282C484A435C67722063636F60482D6729652B5E4C4B7259404D31416855(x UInt8) Engine=Memory;
SHOW CREATE POLICY p4_01295 ON db.table;
CREATE TABLE mv_target (`a` UInt64) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 31815, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.22951553761959076, replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 7421, prefer_fetch_merged_part_size_threshold = 6748274359, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 58, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 27955410, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 41623, primary_key_compress_block_size = 86771
SELECT 'Running test stateless/00031_parser_number.sql from pid=1720' 
CREATE DATABASE IF NOT EXISTS test_mydvmgm9 
SELECT toUInt64(1), bitPositionsToArray(toUInt64(1));
SELECT '*** Before DROP PARTITION ***';
SELECT arrayEnumerateUniqRanked([NULL]);
CREATE DATABASE IF NOT EXISTS test_e1v8d74o 
SELECT 'Running test stateless/02691_multiple_joins_backtick_identifiers.sql from pid=1726' 
alter table many_mutations delete where y = 306 * 2 settings mutations_sync = 0;
SELECT dictGet('hashed_dictionary', 'value', toUInt64(2));
SELECT arrayStringConcat(groupArray(s), '\n:::::::\n'), count(), wordShingleSimHashCaseInsensitiveUTF8(s, 2) as h FROM defaults GROUP BY h ORDER BY h;
SELECT toDateTime('2015-02-03 06:07:08') >= '2015-02-03 05:06:07';
SELECT CASE WHEN (number % 2) = 0 THEN [toInt8(1), toInt8(2)] WHEN (number % 3) = 0 THEN [toInt8(2), toInt8(3)] ELSE [toUInt16(3), toUInt16(3)] END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_1_587 VALUES 
CREATE TABLE test_01193_18429.table_4_541 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_2_839 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO 02845_prewhere SELECT number, number, number from numbers(10);
CREATE TABLE test_01193_18429.table_6_300 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT concat(toString(number % 256 AS n), '') AS s, n, max(s) FROM system.numbers_mt GROUP BY s, n, n, n, n, n, n, n, n, n ORDER BY s, n;
INSERT INTO test_01193_18429.table_5_184 VALUES 
INSERT INTO test_01193_18429.table_1_563 VALUES 
INSERT INTO test_01193_18429.table_9_832 VALUES 
SELECT multiIf((number % 2) = 0, [toUInt32(1), toUInt32(2)], (number % 3) = 0, [toInt64(2), toInt64(3)], [toInt8(3), toInt8(3)]) FROM system.numbers LIMIT 10;
SELECT CASE WHEN (col1 % 2) = 0 THEN 'foo' WHEN (col1 % 3) = 0 THEN col3 ELSE 'baz' END FROM multi_if_check;
insert into function file(02458_data.jsonl) select NULL as x, 42 as y settings engine_file_truncate_on_insert=1;
DROP TABLE IF EXISTS cast;
CREATE TABLE test_01193_18429.table_10_133 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_8_904 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT CASE WHEN (number % 2) = 0 THEN toUInt16(1) WHEN (number % 3) = 0 THEN toInt64(2) ELSE toInt32(3) END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_1_572 VALUES 
CREATE DATABASE IF NOT EXISTS test_38o7024g 
DROP TABLE IF EXISTS 01913_db.test_source_table_1;
INSERT INTO test_01193_18429.table_4_23 VALUES 
SELECT t1.key, t2.key, t1.s, isNull(t2.s) FROM t1 ANY LEFT JOIN t2 ON t1.key == t2.key ORDER BY t1.key, t2.key, t1.s ;
DROP DATABASE IF EXISTS test_lvv3vrlk 
SELECT stddevPop(NULL);
SELECT CASE WHEN 1 THEN toFixedString('foo', 16) WHEN 1 THEN toFixedString('bar', 16) ELSE col4 END FROM multi_if_check;
SELECT toString(2) FROM numbers(10) EXCEPT SELECT toString(1) FROM numbers(5);
CREATE DATABASE IF NOT EXISTS test_yy7c5vic 
SELECT 1 and sin(1);
EXPLAIN QUERY TREE (SELECT (sum(float64) + 2 * count(float64)) + (sum(float64) + 3 * count(float64)) From test_table);
CREATE DATABASE IF NOT EXISTS test_grpiz2ay 
CREATE MATERIALIZED VIEW test_materialized_view (`id` UInt64, `value` String) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 10690, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 63, merge_max_block_size = 775, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 46, min_merge_bytes_to_use_direct_io = 7295669995, index_granularity_bytes = 18263213, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 77598, primary_key_compress_block_size = 64017 AS SELECT id, value FROM test_table
SELECT 255, -129, 255 = -129, 255 != -129, 255 < -129, 255 <= -129, 255 > -129, 255 >= -129, -129 = 255, -129 != 255, -129 < 255, -129 <= 255, -129 > 255, -129 >= 255 , toUInt8(255) = toInt16(-129), toUInt8(255) != toInt16(-129), toUInt8(255) < toInt16(-129), toUInt8(255) <= toInt16(-129), toUInt8(255) > toInt16(-129), toUInt8(255) >= toInt16(-129), toInt16(-129) = toUInt8(255), toInt16(-129) != toUInt8(255), toInt16(-129) < toUInt8(255), toInt16(-129) <= toUInt8(255), toInt16(-129) > toUInt8(255), toInt16(-129) >= toUInt8(255) , toUInt8(255) = toInt32(-129), toUInt8(255) != toInt32(-129), toUInt8(255) < toInt32(-129), toUInt8(255) <= toInt32(-129), toUInt8(255) > toInt32(-129), toUInt8(255) >= toInt32(-129), toInt32(-129) = toUInt8(255), toInt32(-129) != toUInt8(255), toInt32(-129) < toUInt8(255), toInt32(-129) <= toUInt8(255), toInt32(-129) > toUInt8(255), toInt32(-129) >= toUInt8(255) , toUInt8(255) = toInt64(-129), toUInt8(255) != toInt64(-129), toUInt8(255) < toInt64(-129), toUInt8(255) <= toInt64(-129), toUInt8(255) > toInt64(-129), toUInt8(255) >= toInt64(-129), toInt64(-129) = toUInt8(255), toInt64(-129) != toUInt8(255), toInt64(-129) < toUInt8(255), toInt64(-129) <= toUInt8(255), toInt64(-129) > toUInt8(255), toInt64(-129) >= toUInt8(255) , toUInt16(255) = toInt16(-129), toUInt16(255) != toInt16(-129), toUInt16(255) < toInt16(-129), toUInt16(255) <= toInt16(-129), toUInt16(255) > toInt16(-129), toUInt16(255) >= toInt16(-129), toInt16(-129) = toUInt16(255), toInt16(-129) != toUInt16(255), toInt16(-129) < toUInt16(255), toInt16(-129) <= toUInt16(255), toInt16(-129) > toUInt16(255), toInt16(-129) >= toUInt16(255) , toUInt16(255) = toInt32(-129), toUInt16(255) != toInt32(-129), toUInt16(255) < toInt32(-129), toUInt16(255) <= toInt32(-129), toUInt16(255) > toInt32(-129), toUInt16(255) >= toInt32(-129), toInt32(-129) = toUInt16(255), toInt32(-129) != toUInt16(255), toInt32(-129) < toUInt16(255), toInt32(-129) <= toUInt16(255), toInt32(-129) > toUInt16(255), toInt32(-129) >= toUInt16(255) , toUInt16(255) = toInt64(-129), toUInt16(255) != toInt64(-129), toUInt16(255) < toInt64(-129), toUInt16(255) <= toInt64(-129), toUInt16(255) > toInt64(-129), toUInt16(255) >= toInt64(-129), toInt64(-129) = toUInt16(255), toInt64(-129) != toUInt16(255), toInt64(-129) < toUInt16(255), toInt64(-129) <= toUInt16(255), toInt64(-129) > toUInt16(255), toInt64(-129) >= toUInt16(255) , toInt16(255) = toInt16(-129), toInt16(255) != toInt16(-129), toInt16(255) < toInt16(-129), toInt16(255) <= toInt16(-129), toInt16(255) > toInt16(-129), toInt16(255) >= toInt16(-129), toInt16(-129) = toInt16(255), toInt16(-129) != toInt16(255), toInt16(-129) < toInt16(255), toInt16(-129) <= toInt16(255), toInt16(-129) > toInt16(255), toInt16(-129) >= toInt16(255) , toInt16(255) = toInt32(-129), toInt16(255) != toInt32(-129), toInt16(255) < toInt32(-129), toInt16(255) <= toInt32(-129), toInt16(255) > toInt32(-129), toInt16(255) >= toInt32(-129), toInt32(-129) = toInt16(255), toInt32(-129) != toInt16(255), toInt32(-129) < toInt16(255), toInt32(-129) <= toInt16(255), toInt32(-129) > toInt16(255), toInt32(-129) >= toInt16(255) , toInt16(255) = toInt64(-129), toInt16(255) != toInt64(-129), toInt16(255) < toInt64(-129), toInt16(255) <= toInt64(-129), toInt16(255) > toInt64(-129), toInt16(255) >= toInt64(-129), toInt64(-129) = toInt16(255), toInt64(-129) != toInt16(255), toInt64(-129) < toInt16(255), toInt64(-129) <= toInt16(255), toInt64(-129) > toInt16(255), toInt64(-129) >= toInt16(255) , toUInt32(255) = toInt16(-129), toUInt32(255) != toInt16(-129), toUInt32(255) < toInt16(-129), toUInt32(255) <= toInt16(-129), toUInt32(255) > toInt16(-129), toUInt32(255) >= toInt16(-129), toInt16(-129) = toUInt32(255), toInt16(-129) != toUInt32(255), toInt16(-129) < toUInt32(255), toInt16(-129) <= toUInt32(255), toInt16(-129) > toUInt32(255), toInt16(-129) >= toUInt32(255) , toUInt32(255) = toInt32(-129), toUInt32(255) != toInt32(-129), toUInt32(255) < toInt32(-129), toUInt32(255) <= toInt32(-129), toUInt32(255) > toInt32(-129), toUInt32(255) >= toInt32(-129), toInt32(-129) = toUInt32(255), toInt32(-129) != toUInt32(255), toInt32(-129) < toUInt32(255), toInt32(-129) <= toUInt32(255), toInt32(-129) > toUInt32(255), toInt32(-129) >= toUInt32(255) , toUInt32(255) = toInt64(-129), toUInt32(255) != toInt64(-129), toUInt32(255) < toInt64(-129), toUInt32(255) <= toInt64(-129), toUInt32(255) > toInt64(-129), toUInt32(255) >= toInt64(-129), toInt64(-129) = toUInt32(255), toInt64(-129) != toUInt32(255), toInt64(-129) < toUInt32(255), toInt64(-129) <= toUInt32(255), toInt64(-129) > toUInt32(255), toInt64(-129) >= toUInt32(255) , toInt32(255) = toInt16(-129), toInt32(255) != toInt16(-129), toInt32(255) < toInt16(-129), toInt32(255) <= toInt16(-129), toInt32(255) > toInt16(-129), toInt32(255) >= toInt16(-129), toInt16(-129) = toInt32(255), toInt16(-129) != toInt32(255), toInt16(-129) < toInt32(255), toInt16(-129) <= toInt32(255), toInt16(-129) > toInt32(255), toInt16(-129) >= toInt32(255) , toInt32(255) = toInt32(-129), toInt32(255) != toInt32(-129), toInt32(255) < toInt32(-129), toInt32(255) <= toInt32(-129), toInt32(255) > toInt32(-129), toInt32(255) >= toInt32(-129), toInt32(-129) = toInt32(255), toInt32(-129) != toInt32(255), toInt32(-129) < toInt32(255), toInt32(-129) <= toInt32(255), toInt32(-129) > toInt32(255), toInt32(-129) >= toInt32(255) , toInt32(255) = toInt64(-129), toInt32(255) != toInt64(-129), toInt32(255) < toInt64(-129), toInt32(255) <= toInt64(-129), toInt32(255) > toInt64(-129), toInt32(255) >= toInt64(-129), toInt64(-129) = toInt32(255), toInt64(-129) != toInt32(255), toInt64(-129) < toInt32(255), toInt64(-129) <= toInt32(255), toInt64(-129) > toInt32(255), toInt64(-129) >= toInt32(255) , toUInt64(255) = toInt16(-129), toUInt64(255) != toInt16(-129), toUInt64(255) < toInt16(-129), toUInt64(255) <= toInt16(-129), toUInt64(255) > toInt16(-129), toUInt64(255) >= toInt16(-129), toInt16(-129) = toUInt64(255), toInt16(-129) != toUInt64(255), toInt16(-129) < toUInt64(255), toInt16(-129) <= toUInt64(255), toInt16(-129) > toUInt64(255), toInt16(-129) >= toUInt64(255) , toUInt64(255) = toInt32(-129), toUInt64(255) != toInt32(-129), toUInt64(255) < toInt32(-129), toUInt64(255) <= toInt32(-129), toUInt64(255) > toInt32(-129), toUInt64(255) >= toInt32(-129), toInt32(-129) = toUInt64(255), toInt32(-129) != toUInt64(255), toInt32(-129) < toUInt64(255), toInt32(-129) <= toUInt64(255), toInt32(-129) > toUInt64(255), toInt32(-129) >= toUInt64(255) , toUInt64(255) = toInt64(-129), toUInt64(255) != toInt64(-129), toUInt64(255) < toInt64(-129), toUInt64(255) <= toInt64(-129), toUInt64(255) > toInt64(-129), toUInt64(255) >= toInt64(-129), toInt64(-129) = toUInt64(255), toInt64(-129) != toUInt64(255), toInt64(-129) < toUInt64(255), toInt64(-129) <= toUInt64(255), toInt64(-129) > toUInt64(255), toInt64(-129) >= toUInt64(255) , toInt64(255) = toInt16(-129), toInt64(255) != toInt16(-129), toInt64(255) < toInt16(-129), toInt64(255) <= toInt16(-129), toInt64(255) > toInt16(-129), toInt64(255) >= toInt16(-129), toInt16(-129) = toInt64(255), toInt16(-129) != toInt64(255), toInt16(-129) < toInt64(255), toInt16(-129) <= toInt64(255), toInt16(-129) > toInt64(255), toInt16(-129) >= toInt64(255) , toInt64(255) = toInt32(-129), toInt64(255) != toInt32(-129), toInt64(255) < toInt32(-129), toInt64(255) <= toInt32(-129), toInt64(255) > toInt32(-129), toInt64(255) >= toInt32(-129), toInt32(-129) = toInt64(255), toInt32(-129) != toInt64(255), toInt32(-129) < toInt64(255), toInt32(-129) <= toInt64(255), toInt32(-129) > toInt64(255), toInt32(-129) >= toInt64(255) , toInt64(255) = toInt64(-129), toInt64(255) != toInt64(-129), toInt64(255) < toInt64(-129), toInt64(255) <= toInt64(-129), toInt64(255) > toInt64(-129), toInt64(255) >= toInt64(-129), toInt64(-129) = toInt64(255), toInt64(-129) != toInt64(255), toInt64(-129) < toInt64(255), toInt64(-129) <= toInt64(255), toInt64(-129) > toInt64(255), toInt64(-129) >= toInt64(255) 
SELECT name FROM (SELECT path, name FROM system.zookeeper WHERE path LIKE '/clickhouse/%' ORDER BY name) WHERE path LIKE '%02221_system_zookeeper_unrestricted_like_test_90m2pvar/02221_system_zookeeper_unrestricted_like%'
alter table many_mutations delete where y = 274 * 2 settings mutations_sync = 0;
CREATE TABLE rmt2 (`n` int) ENGINE = ReplicatedMergeTree('/test/02369/02369_lost_part_intersecting_merges_test_bqn03gim/{database}', '2') ORDER BY n SETTINGS index_granularity = 22469, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.28186264634132385, replace_long_file_name_to_hash = true, max_file_name_length = 47, merge_max_block_size = 6124, prefer_fetch_merged_part_size_threshold = 5727103656, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 7896019248, index_granularity_bytes = 30189799, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 93960, primary_key_compress_block_size = 37726
CREATE DATABASE IF NOT EXISTS test_e1yc5z9h 
CREATE TABLE test_r2 AS test ENGINE = ReplicatedMergeTree('/clickhouse/{database}/test_01666', 'r2') ORDER BY `\\` SETTINGS min_bytes_for_wide_part = '100G', index_granularity = 50908, ratio_of_defaults_for_sparse_serialization = 0.3249889314174652, replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 18822, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 7780398032, index_granularity_bytes = 4946950, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 69480, primary_key_compress_block_size = 93779
DROP DATABASE IF EXISTS test_rqb433qa 
insert into function file(02475_data.bsonEachRow, auto, 'str String, fixstr FixedString(5)') select repeat('HelloWorld', number), repeat(char(97 + number), number % 6) from numbers(5) settings engine_file_truncate_on_insert=1, output_format_bson_string_as_string=1
CREATE TABLE test_7C72737A5048397C513B6F6A6B3953622A6750426A37766D7C613577236E3E7531475B3836312A3F(x UInt8) Engine=Memory;
select array, d1, a1, a2, a3, a4, a5, a6 from aliases_test array join d1 as d1;
CREATE TABLE test_01193_18429.table_3_456 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 128, 2147483649, 128 = 2147483649, 128 != 2147483649, 128 < 2147483649, 128 <= 2147483649, 128 > 2147483649, 128 >= 2147483649, 2147483649 = 128, 2147483649 != 128, 2147483649 < 128, 2147483649 <= 128, 2147483649 > 128, 2147483649 >= 128 , toUInt8(128) = toUInt32(2147483649), toUInt8(128) != toUInt32(2147483649), toUInt8(128) < toUInt32(2147483649), toUInt8(128) <= toUInt32(2147483649), toUInt8(128) > toUInt32(2147483649), toUInt8(128) >= toUInt32(2147483649), toUInt32(2147483649) = toUInt8(128), toUInt32(2147483649) != toUInt8(128), toUInt32(2147483649) < toUInt8(128), toUInt32(2147483649) <= toUInt8(128), toUInt32(2147483649) > toUInt8(128), toUInt32(2147483649) >= toUInt8(128) , toUInt8(128) = toUInt64(2147483649), toUInt8(128) != toUInt64(2147483649), toUInt8(128) < toUInt64(2147483649), toUInt8(128) <= toUInt64(2147483649), toUInt8(128) > toUInt64(2147483649), toUInt8(128) >= toUInt64(2147483649), toUInt64(2147483649) = toUInt8(128), toUInt64(2147483649) != toUInt8(128), toUInt64(2147483649) < toUInt8(128), toUInt64(2147483649) <= toUInt8(128), toUInt64(2147483649) > toUInt8(128), toUInt64(2147483649) >= toUInt8(128) , toUInt8(128) = toInt64(2147483649), toUInt8(128) != toInt64(2147483649), toUInt8(128) < toInt64(2147483649), toUInt8(128) <= toInt64(2147483649), toUInt8(128) > toInt64(2147483649), toUInt8(128) >= toInt64(2147483649), toInt64(2147483649) = toUInt8(128), toInt64(2147483649) != toUInt8(128), toInt64(2147483649) < toUInt8(128), toInt64(2147483649) <= toUInt8(128), toInt64(2147483649) > toUInt8(128), toInt64(2147483649) >= toUInt8(128) , toUInt16(128) = toUInt32(2147483649), toUInt16(128) != toUInt32(2147483649), toUInt16(128) < toUInt32(2147483649), toUInt16(128) <= toUInt32(2147483649), toUInt16(128) > toUInt32(2147483649), toUInt16(128) >= toUInt32(2147483649), toUInt32(2147483649) = toUInt16(128), toUInt32(2147483649) != toUInt16(128), toUInt32(2147483649) < toUInt16(128), toUInt32(2147483649) <= toUInt16(128), toUInt32(2147483649) > toUInt16(128), toUInt32(2147483649) >= toUInt16(128) , toUInt16(128) = toUInt64(2147483649), toUInt16(128) != toUInt64(2147483649), toUInt16(128) < toUInt64(2147483649), toUInt16(128) <= toUInt64(2147483649), toUInt16(128) > toUInt64(2147483649), toUInt16(128) >= toUInt64(2147483649), toUInt64(2147483649) = toUInt16(128), toUInt64(2147483649) != toUInt16(128), toUInt64(2147483649) < toUInt16(128), toUInt64(2147483649) <= toUInt16(128), toUInt64(2147483649) > toUInt16(128), toUInt64(2147483649) >= toUInt16(128) , toUInt16(128) = toInt64(2147483649), toUInt16(128) != toInt64(2147483649), toUInt16(128) < toInt64(2147483649), toUInt16(128) <= toInt64(2147483649), toUInt16(128) > toInt64(2147483649), toUInt16(128) >= toInt64(2147483649), toInt64(2147483649) = toUInt16(128), toInt64(2147483649) != toUInt16(128), toInt64(2147483649) < toUInt16(128), toInt64(2147483649) <= toUInt16(128), toInt64(2147483649) > toUInt16(128), toInt64(2147483649) >= toUInt16(128) , toInt16(128) = toUInt32(2147483649), toInt16(128) != toUInt32(2147483649), toInt16(128) < toUInt32(2147483649), toInt16(128) <= toUInt32(2147483649), toInt16(128) > toUInt32(2147483649), toInt16(128) >= toUInt32(2147483649), toUInt32(2147483649) = toInt16(128), toUInt32(2147483649) != toInt16(128), toUInt32(2147483649) < toInt16(128), toUInt32(2147483649) <= toInt16(128), toUInt32(2147483649) > toInt16(128), toUInt32(2147483649) >= toInt16(128) , toInt16(128) = toUInt64(2147483649), toInt16(128) != toUInt64(2147483649), toInt16(128) < toUInt64(2147483649), toInt16(128) <= toUInt64(2147483649), toInt16(128) > toUInt64(2147483649), toInt16(128) >= toUInt64(2147483649), toUInt64(2147483649) = toInt16(128), toUInt64(2147483649) != toInt16(128), toUInt64(2147483649) < toInt16(128), toUInt64(2147483649) <= toInt16(128), toUInt64(2147483649) > toInt16(128), toUInt64(2147483649) >= toInt16(128) , toInt16(128) = toInt64(2147483649), toInt16(128) != toInt64(2147483649), toInt16(128) < toInt64(2147483649), toInt16(128) <= toInt64(2147483649), toInt16(128) > toInt64(2147483649), toInt16(128) >= toInt64(2147483649), toInt64(2147483649) = toInt16(128), toInt64(2147483649) != toInt16(128), toInt64(2147483649) < toInt16(128), toInt64(2147483649) <= toInt16(128), toInt64(2147483649) > toInt16(128), toInt64(2147483649) >= toInt16(128) , toUInt32(128) = toUInt32(2147483649), toUInt32(128) != toUInt32(2147483649), toUInt32(128) < toUInt32(2147483649), toUInt32(128) <= toUInt32(2147483649), toUInt32(128) > toUInt32(2147483649), toUInt32(128) >= toUInt32(2147483649), toUInt32(2147483649) = toUInt32(128), toUInt32(2147483649) != toUInt32(128), toUInt32(2147483649) < toUInt32(128), toUInt32(2147483649) <= toUInt32(128), toUInt32(2147483649) > toUInt32(128), toUInt32(2147483649) >= toUInt32(128) , toUInt32(128) = toUInt64(2147483649), toUInt32(128) != toUInt64(2147483649), toUInt32(128) < toUInt64(2147483649), toUInt32(128) <= toUInt64(2147483649), toUInt32(128) > toUInt64(2147483649), toUInt32(128) >= toUInt64(2147483649), toUInt64(2147483649) = toUInt32(128), toUInt64(2147483649) != toUInt32(128), toUInt64(2147483649) < toUInt32(128), toUInt64(2147483649) <= toUInt32(128), toUInt64(2147483649) > toUInt32(128), toUInt64(2147483649) >= toUInt32(128) , toUInt32(128) = toInt64(2147483649), toUInt32(128) != toInt64(2147483649), toUInt32(128) < toInt64(2147483649), toUInt32(128) <= toInt64(2147483649), toUInt32(128) > toInt64(2147483649), toUInt32(128) >= toInt64(2147483649), toInt64(2147483649) = toUInt32(128), toInt64(2147483649) != toUInt32(128), toInt64(2147483649) < toUInt32(128), toInt64(2147483649) <= toUInt32(128), toInt64(2147483649) > toUInt32(128), toInt64(2147483649) >= toUInt32(128) , toInt32(128) = toUInt32(2147483649), toInt32(128) != toUInt32(2147483649), toInt32(128) < toUInt32(2147483649), toInt32(128) <= toUInt32(2147483649), toInt32(128) > toUInt32(2147483649), toInt32(128) >= toUInt32(2147483649), toUInt32(2147483649) = toInt32(128), toUInt32(2147483649) != toInt32(128), toUInt32(2147483649) < toInt32(128), toUInt32(2147483649) <= toInt32(128), toUInt32(2147483649) > toInt32(128), toUInt32(2147483649) >= toInt32(128) , toInt32(128) = toUInt64(2147483649), toInt32(128) != toUInt64(2147483649), toInt32(128) < toUInt64(2147483649), toInt32(128) <= toUInt64(2147483649), toInt32(128) > toUInt64(2147483649), toInt32(128) >= toUInt64(2147483649), toUInt64(2147483649) = toInt32(128), toUInt64(2147483649) != toInt32(128), toUInt64(2147483649) < toInt32(128), toUInt64(2147483649) <= toInt32(128), toUInt64(2147483649) > toInt32(128), toUInt64(2147483649) >= toInt32(128) , toInt32(128) = toInt64(2147483649), toInt32(128) != toInt64(2147483649), toInt32(128) < toInt64(2147483649), toInt32(128) <= toInt64(2147483649), toInt32(128) > toInt64(2147483649), toInt32(128) >= toInt64(2147483649), toInt64(2147483649) = toInt32(128), toInt64(2147483649) != toInt32(128), toInt64(2147483649) < toInt32(128), toInt64(2147483649) <= toInt32(128), toInt64(2147483649) > toInt32(128), toInt64(2147483649) >= toInt32(128) , toUInt64(128) = toUInt32(2147483649), toUInt64(128) != toUInt32(2147483649), toUInt64(128) < toUInt32(2147483649), toUInt64(128) <= toUInt32(2147483649), toUInt64(128) > toUInt32(2147483649), toUInt64(128) >= toUInt32(2147483649), toUInt32(2147483649) = toUInt64(128), toUInt32(2147483649) != toUInt64(128), toUInt32(2147483649) < toUInt64(128), toUInt32(2147483649) <= toUInt64(128), toUInt32(2147483649) > toUInt64(128), toUInt32(2147483649) >= toUInt64(128) , toUInt64(128) = toUInt64(2147483649), toUInt64(128) != toUInt64(2147483649), toUInt64(128) < toUInt64(2147483649), toUInt64(128) <= toUInt64(2147483649), toUInt64(128) > toUInt64(2147483649), toUInt64(128) >= toUInt64(2147483649), toUInt64(2147483649) = toUInt64(128), toUInt64(2147483649) != toUInt64(128), toUInt64(2147483649) < toUInt64(128), toUInt64(2147483649) <= toUInt64(128), toUInt64(2147483649) > toUInt64(128), toUInt64(2147483649) >= toUInt64(128) , toUInt64(128) = toInt64(2147483649), toUInt64(128) != toInt64(2147483649), toUInt64(128) < toInt64(2147483649), toUInt64(128) <= toInt64(2147483649), toUInt64(128) > toInt64(2147483649), toUInt64(128) >= toInt64(2147483649), toInt64(2147483649) = toUInt64(128), toInt64(2147483649) != toUInt64(128), toInt64(2147483649) < toUInt64(128), toInt64(2147483649) <= toUInt64(128), toInt64(2147483649) > toUInt64(128), toInt64(2147483649) >= toUInt64(128) , toInt64(128) = toUInt32(2147483649), toInt64(128) != toUInt32(2147483649), toInt64(128) < toUInt32(2147483649), toInt64(128) <= toUInt32(2147483649), toInt64(128) > toUInt32(2147483649), toInt64(128) >= toUInt32(2147483649), toUInt32(2147483649) = toInt64(128), toUInt32(2147483649) != toInt64(128), toUInt32(2147483649) < toInt64(128), toUInt32(2147483649) <= toInt64(128), toUInt32(2147483649) > toInt64(128), toUInt32(2147483649) >= toInt64(128) , toInt64(128) = toUInt64(2147483649), toInt64(128) != toUInt64(2147483649), toInt64(128) < toUInt64(2147483649), toInt64(128) <= toUInt64(2147483649), toInt64(128) > toUInt64(2147483649), toInt64(128) >= toUInt64(2147483649), toUInt64(2147483649) = toInt64(128), toUInt64(2147483649) != toInt64(128), toUInt64(2147483649) < toInt64(128), toUInt64(2147483649) <= toInt64(128), toUInt64(2147483649) > toInt64(128), toUInt64(2147483649) >= toInt64(128) , toInt64(128) = toInt64(2147483649), toInt64(128) != toInt64(2147483649), toInt64(128) < toInt64(2147483649), toInt64(128) <= toInt64(2147483649), toInt64(128) > toInt64(2147483649), toInt64(128) >= toInt64(2147483649), toInt64(2147483649) = toInt64(128), toInt64(2147483649) != toInt64(128), toInt64(2147483649) < toInt64(128), toInt64(2147483649) <= toInt64(128), toInt64(2147483649) > toInt64(128), toInt64(2147483649) >= toInt64(128) 
CREATE TABLE t_source_part_is_intact (`id` UInt64, `u` UInt64) ENGINE = MergeTree ORDER BY id SETTINGS min_bytes_for_wide_part = 1, ratio_of_defaults_for_sparse_serialization = 0.5, index_granularity = 18218, replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 8143, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 765559146, index_granularity_bytes = 26723892, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 82832, primary_key_compress_block_size = 76520
DROP TABLE IF EXISTS truncate_test_set;
SELECT least(toUInt64('18446744073709551615'), toUInt256(0)) x, least(toUInt64('18446744073709551615'), toUInt256('18446744073709551616')) x2, greatest(toUInt64('18446744073709551615'), toUInt256(0)) y, greatest(toUInt64('18446744073709551615'), toUInt256('18446744073709551616')) y2, toTypeName(x), toTypeName(y);
SELECT avg(arrayJoin([NULL, 1]));
INSERT INTO t64 SELECT (intExp2(16) - 64 + number) AS x, x, x, x, x, x, x, x FROM numbers(64);
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt64(1), toUInt64(2)] WHEN (number % 3) = 0 THEN [toUInt8(2), toUInt8(3)] ELSE [toUInt8(3), toUInt8(3)] END FROM system.numbers LIMIT 10;
select finalizeAggregation( minState(ip) ) AS min, finalizeAggregation( maxState(ip) ) AS max, finalizeAggregation( first_valueState(ip) ) AS first_value, finalizeAggregation( last_valueState(ip) ) AS last_value, finalizeAggregation( topKState(ip) ) AS topK, finalizeAggregation( groupArrayState(ip) ) AS groupArray, finalizeAggregation( groupUniqArrayState(ip) ) AS groupUniqArray, finalizeAggregation( uniqState(ip) ) AS uniq, finalizeAggregation( uniqExactState(ip) ) AS uniqExact, finalizeAggregation( uniqCombinedState(ip) ) AS uniqCombined, finalizeAggregation( uniqCombined64State(ip) ) AS uniqCombined64, finalizeAggregation( uniqHLL12State(ip) ) AS uniqHLL12, finalizeAggregation( uniqThetaState(ip) ) AS uniqTheta from ( select num::UInt32::IPv4 ip from (select arrayJoin(range(999999999, number)) as num from numbers(999999999,50)) order by ip ) format Vertical;
CREATE TABLE simple_key_source_table_01862 ( id UInt64, value String ) ENGINE = Memory();
CREATE TABLE test_01193_18429.table_9_457 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_repl ON CLUSTER test_shard_localhost (`n` UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/test_01181/{database}/test_repl', 'r1') ORDER BY tuple() SETTINGS index_granularity = 26722, min_bytes_for_wide_part = 1063024397, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 19, merge_max_block_size = 1824, prefer_fetch_merged_part_size_threshold = 795103603, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 16078392, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 74276, primary_key_compress_block_size = 99789
SELECT -.34e-2_1;
CREATE TABLE test_01193_18429.table_10_949 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_9_988 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT javaHashUTF16LE([]);
DROP USER IF EXISTS 'session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_no_password_no_profiles_no_roles';
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat32(1), toFloat32(2)] WHEN (number % 3) = 0 THEN [toInt16(2), toInt16(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
select 1 = isValidUTF8(toFixedString('\x7F', 1)) from system.numbers limit 10;
INSERT INTO test_01193_18429.table_3_757 VALUES 
DROP DATABASE IF EXISTS test_vtj193uk 
select toStartOfInterval(toDateTime64('1930-12-12 12:12:12.12', 2), INTERVAL 1 MILLISECOND);
CREATE TABLE test_5C2F535A77492C3A2B664C415A45777B69253B232F513349675A3A7D6C704C70342476382A2F3B6A(x UInt8) Engine=Memory;
drop table if exists d2;
CREATE TABLE test_01193_18429.table_8_462 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT nullIf(toString(number), '4') IN (SELECT nullIf(toString(number), '2') FROM system.numbers LIMIT 1, 3) AS res FROM system.numbers LIMIT 5;
# Test INTERPOLATE with aggregates SELECT n, any(source), sum(inter) AS inter_s FROM ( SELECT toFloat32(number % 10) AS n, 'original' AS source, number AS inter FROM numbers(10) WHERE (number % 3) = 1 ) GROUP BY n ORDER BY n ASC WITH FILL FROM 0 TO 11.51 STEP 0.5 INTERPOLATE ( inter_s AS inter_s + 1 );
INSERT INTO r6 SELECT 91 % 10 = 6 ? 91 - 1 : 91
CREATE TABLE replicated_collapsing_merge_tree (d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = ReplicatedCollapsingMergeTree('/clickhouse/tables/{database}/test_00083/01/replicated_collapsing_merge_tree/', 'r1', d, (a, b), 111, y);
CREATE TABLE tab_00712_1 (`a` UInt32, `b` UInt32 ALIAS a + 1, `c` UInt32) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 35634, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 20029, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 4133496480, index_granularity_bytes = 11524324, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 97405, primary_key_compress_block_size = 25906
INSERT INTO r5 SELECT 5
CREATE TABLE 02661_archive_table Engine=File('CSV', '/var/lib/clickhouse/user_files/02661_read_from_archive_test_4dk9rw9v_tarbz2_archive1.tar.bz2 :: 02661_read_from_archive_test_4dk9rw9v_tarbz2_data1.csv')
SELECT toDateTime(tumbleEnd(toDateTime('2020-01-09 12:00:01', 'US/Samoa'), INTERVAL '1' DAY, 'US/Samoa'), 'US/Samoa');
CREATE TABLE test_4B3B315E33695C29774F266B4B736C653C315433784F513B642667757732753D7642443E6D603F3A(x UInt8) Engine=Memory;
ALTER TABLE concurrent_alter_column ADD COLUMN c185 DOUBLE;
ALTER TABLE concurrent_alter_column ADD COLUMN c92 DOUBLE;
SELECT arrayElement(NULL, NULL);
SELECT subtractSeconds(NULL);
SELECT 1234;
select throwIf(A != 21) from src format Null
CREATE TABLE minmax_idx1 (`u64` UInt64, `i32` Int32, `f64` Float64, `d` Decimal(10, 2), `s` String, `e` Enum8('a' = 1, 'b' = 2, 'c' = 3), `dt` Date, INDEX idx_all (i32, i32 + f64, d, s, e, dt) TYPE minmax GRANULARITY 1, INDEX idx_2 (u64 + toYear(dt), substring(s, 2, 4)) TYPE minmax GRANULARITY 3) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00837/minmax', 'r1') ORDER BY u64 SETTINGS index_granularity = 2, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 289540630, ratio_of_defaults_for_sparse_serialization = 0.9060608148574829, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 23736, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 4667819440, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 32072, primary_key_compress_block_size = 8365
SELECT '= left using =';
insert into tDD select toDateTime(toDate('2020-09-23'), 'Asia/Istanbul'), number from numbers(10000) UNION ALL select toDateTime(toDateTime('2020-09-23 11:00:00', 'Asia/Istanbul')), number from numbers(10000) UNION ALL select toDateTime(toDate('2020-09-24'), 'Asia/Istanbul'), number from numbers(10000) UNION ALL select toDateTime(toDate('2020-09-25'), 'Asia/Istanbul'), number from numbers(10000) UNION ALL select toDateTime(toDate('2020-08-15'), 'Asia/Istanbul'), number from numbers(10000);
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c8)) OR (c4) OR ((NOT c8) AND c9 AND c9 AND c2) OR (c3 AND c9 AND c8 AND c7) OR ((NOT c5) AND (NOT c6)) OR ((NOT c8)) OR ((NOT c7) AND (NOT c8) AND (NOT c0) AND c0 AND (NOT c5)) OR (c9 AND c8 AND (NOT c3) AND c1) SETTINGS convert_query_to_cnf = 1
ATTACH TABLE adaptive_granularity_alter;
alter table data_01900_2 update s = 'bar_87' where 1;
SELECT 'Running test stateless/01922_client_param.sh from pid=1715' 
CREATE INDEX idx_tab4_0 ON tab4 (col3 DESC,col1 DESC);
CREATE TABLE test_01193_18429.table_2_867 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT * FROM system.s3queue_log LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
CREATE TABLE test_797A652865223E6F6A285E562953643F5D3E2635616D705B7163704F7E5930715B76554626674756(x UInt8) Engine=Memory;
WITH test1 AS (SELECT n FROM with_test order by n limit 100) SELECT max(n) FROM test1 where n=42;
INSERT INTO test_01193_18429.table_6_844 VALUES 
CREATE DATABASE IF NOT EXISTS test_c6z10emy 
CREATE TABLE test_7E215161372A7A2976486A707579794C3D583A6821706F285C2C6856273565505F5450527A285B66(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_9_172 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP TABLE IF EXISTS 02918_table_obj1;
SELECT 'Running test stateless/01283_strict_resize_bug.sql from pid=1715' 
CREATE TABLE test_01193_18429.table_4_700 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT uniqCombined(17)(`dummy`) FROM `system`.`one`
SELECT CASE WHEN (number % 2) = 0 THEN toInt8(1) WHEN (number % 3) = 0 THEN toInt64(2) ELSE toUInt16(3) END FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/01442_h3kring_range_check.sql from pid=1713' 
SELECT 'Running test stateless/01715_background_checker_blather_zookeeper_long.sql from pid=1720' 
DROP DATABASE IF EXISTS test_da3c1j4k 
SELECT * FROM custom_separated ORDER BY n FORMAT CSV
INSERT INTO markdown VALUES 
select concat(materialize(toFixedString('a', 1)), materialize('b'), materialize(toFixedString('c', 1))) == 'abc';
drop table t_00712_1;
/* ddl_entry=query-0000000012 */ ALTER TABLE test_3eb2h3zx_repl_01111_11.rmt_24908_17412_10489 UPDATE n = n + (SELECT max(n) FROM merge(REGEXP('test_3eb2h3zx.*'), '.*')) WHERE 1 SETTINGS allow_nondeterministic_mutations = 1
CREATE TABLE test_44787B42684D4C74733520537A212E54632D257B374D50363C3257482B2557416E61745943633156(x UInt8) Engine=Memory;
CREATE INDEX idx_tab3_0 ON tab3 (col0 DESC,col4);
INSERT INTO test_01193_18429.table_6_176 VALUES 
CREATE DATABASE IF NOT EXISTS test_gn6oc0kl 
SELECT * FROM 02265_atomic_db.join_table;
SELECT count() FROM t_cnf_fuzz WHERE (c2 AND c4) OR ((NOT c1) AND (NOT c4) AND c8 AND c9) OR ((NOT c2) AND c6 AND c0 AND c5 AND c1) SETTINGS convert_query_to_cnf = 1
SELECT multiIf((col1 % 2) = 0, toFixedString('foo', 16), (col1 % 3) = 0, toFixedString(col3, 16), 'baz') FROM multi_if_check;
CREATE TABLE test_01193_18429.table_3_423 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP TABLE tskv
USE test_ao23yen4
SELECT COUNT() FROM bloom_filter_array_lc_null_types_test WHERE has(date, toDate('1970-01-06'));
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 26607, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE TABLE test_01193_18429.table_8_735 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
create table test_02245_s3_nested_parquet1(a Int64, b Tuple(a Int64, b String)) engine=S3(s3_conn, filename='test_02245_s3_nested_parquet1_{_partition_id}', format='Parquet') partition by a;
SELECT dictHas('02183_polygon_dictionary', tuple(0.5, 0.5));
CREATE TABLE test_6A2D677145677279242920542D2940635137384C4C277D6D4F2B38537E483E237E366B30523F5B26(x UInt8) Engine=Memory;
SYSTEM SYNC REPLICA execute_on_single_replica_r1;
CREATE TABLE test_01193_18429.table_7_835 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_414D394867286167792A404E747A746E4F4A5776763A224F6F74562B56426243773644722F5B2C22(x UInt8) Engine=Memory;
alter table test_wide_nested update `info.id` = [100,200,300], `info.age` = `info.id`, `info.name` = ['a','b','c'] where id = 2;
INSERT INTO r7 SELECT 40 % 10 = 7 ? 40 - 1 : 40
CREATE TABLE test_5E5A60722B24336D3C3C214A7E2944776F4930352E2547724C6631583544575C2E55483422385C63(x UInt8) Engine=Memory;
select count(ignore(*)) from data_02051 settings min_bytes_to_use_direct_io=1, local_filesystem_read_method='mmap', local_filesystem_read_prefetch=1, read_priority=1, max_read_buffer_size=65505 ;
SELECT c, d FROM t_fixed_prefix WHERE a = 1 AND b = 1 ORDER BY c, d SETTINGS optimize_read_in_order = 0
ALTER TABLE test_table_7 MODIFY SETTING parts_to_throw_insert = 0
INSERT INTO test_01193_18429.table_6_891 VALUES 
SELECT tgamma(NULL);
SELECT ifNull(CAST('\0' AS Nullable(String)),'');
INSERT INTO test_01193_18429.table_7_595 VALUES 
INSERT INTO r4 SELECT 17
drop table data_01756_signed;
SELECT 'Running test stateless/01081_demangle.sql from pid=1714' 
CREATE TABLE dict_string (entityIri String) ENGINE = Memory;
CREATE TABLE test_50583C212D3D45346335626652324622416F3626307E602B63287E425976453B7971677B466C7743(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00846_join_using_tuple_crash.sql from pid=1713' 
select 8 as offset, -8 as length, 'Hello' as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
SELECT 'Running test stateless/01109_sc0rp10_string_hash_map_zero_bytes.sql from pid=1715' 
SELECT count() AS amount, a, b, GROUPING(a, b) FROM test02416 GROUP BY ROLLUP(a, b) ORDER BY (amount, a, b);
SELECT dictGetString(concat('test_8yvdjyfm', '.dict1'), 'third_column', toUInt64(12))
select g % 2 as gg, sum(s) from table_01356_view_threads group by gg order by gg;
SELECT 'Running test stateless/01528_setting_aggregate_functions_null_for_empty.sql from pid=1713' 
CREATE DATABASE IF NOT EXISTS test_nxvryv6j 
CREATE TABLE test_7C6134582725607D357222752D6C5A435659753D3C3854694779203B6D3C7E617C356678543D4F6F(x UInt8) Engine=Memory;
select toInt32(number * 2) as x from numbers(42) order by x desc;
CREATE TABLE test_01193_18429.table_9_536 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP DATABASE IF EXISTS test_29xg5dlt 
INSERT INTO test_01193_18429.table_6_714 VALUES 
insert into function file(02475_data.bsonEachRow, auto, 'lc LowCardinality(Nullable(String))') select number % 2 ? NULL : char(97 + number % 3)::LowCardinality(String) from numbers(5) settings engine_file_truncate_on_insert=1
select upperUTF8('AAAAAAAAAAAAAAA012345789,.!AAAA' as str) = str;
SELECT ngramMinHashCaseInsensitiveUTF8(NULL);
SELECT 'Const point; No holes';
select count(*) from replacing_m3;
CREATE TABLE test_697C3F2C4D7B616F76764169244F7849336E333D3E383D7B5B404256542B737A757952787A6C724E(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_7_864 VALUES 
select concat(materialize(toFixedString('a', 1)), 'b') == 'ab' from system.numbers limit 5;
CREATE DATABASE IF NOT EXISTS test_l5vemv50 
DROP TABLE IF EXISTS table_for_rename_nested;
create database rdb_test_uofsla12 engine=Replicated('/test/test_uofsla12/rdb', 's1', 'r1')
CREATE DATABASE IF NOT EXISTS test_h8vqis45 
CREATE TABLE B (`k` UInt32, `t` DateTime, `b` Float64) ENGINE = MergeTree ORDER BY (k, t) SETTINGS index_granularity = 48885, min_bytes_for_wide_part = 135336175, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 12848, prefer_fetch_merged_part_size_threshold = 2562783933, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 27, min_merge_bytes_to_use_direct_io = 2546504205, index_granularity_bytes = 7969062, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 76834, primary_key_compress_block_size = 42494
select * from data_01753 group by key settings max_block_size=1;
SELECT 0, 11, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (0 < 13 AND 11 > 0 ? 0 : 0)), throwIf(last != (0 < 13 AND 11 > 0 ? least(13 - 1, 0 + 11 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 0, 11);
CREATE TABLE test_02908_r2_101 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_101', 'r2') ORDER BY tuple()
CREATE TABLE test_2C31494D263D64682F3775656332477D665D60234C4D493657797C57655855405C5E6C44226A2D3C(x UInt8) Engine=Memory;
SELECT constant_false ? then_non_constant_nullable : else_constant AS res FROM nullable_00431;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toInt64(-1) < N as r FORMAT CSV;
select * from v4test_array_joins array join columns('^arr') where match(arr_4,'a') and id < 100 order by id format Null settings optimize_read_in_order = 0;
select t.*, s.* from t right join s on (s.a = t.a and s.b = t.b) SETTINGS join_use_nulls = 1;
DROP DATABASE IF EXISTS test_ubndream 
INSERT INTO test_01193_18429.table_10_670 VALUES 
CREATE TABLE dep2 ( `id` Int32, `country` LowCardinality(String), `purchase_location` UInt16 MATERIALIZED if(id IN joinGet(concat(currentDatabase(), '.id_join'), 'location', 'CLICK'), 123, 456) ) ENGINE = ReplicatedMergeTree('/test/02433/{database}/dep', '2') ORDER BY tuple();
SELECT cutQueryStringAndFragment('//paul@www.example.com/a/b/c#d=f');
INSERT INTO test_01193_18429.table_3_521 VALUES 
DROP ROW POLICY 02763_filter_5 ON 02763_merge_fancycols;
DROP DATABASE IF EXISTS test_mx4sd0c4 
SELECT 'ALL INNER | bs = 5';
SELECT * FROM numbers(34605)
CREATE TABLE test_373A746F23244A556724536F5E5A4A252A47726C31576421647547204433566B732F2C717A6D2E6A(x UInt8) Engine=Memory;
CREATE TABLE test_table (`id` UInt64, `value` String) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 12740, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 10936, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 18933618, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 41371, primary_key_compress_block_size = 70056
CREATE TABLE test_3D692E4C5349445F4E6165203C6023705F56793D7B6F314625473E3221313A5669544D634E752D7B(x UInt8) Engine=Memory;
CREATE INDEX idx_tab4_0 ON tab4 (col1 DESC,col4 DESC,col0 DESC);
INSERT INTO test_01193_18429.table_6_301 VALUES 
INSERT INTO test_01193_18429.table_5_503 VALUES 
select v, variantElement(v, 'Int128') from format(TSV, 'v Variant(String, Int128, Int256)', '\\N\nstring\n-1\n0\n42d42') format TSV;
SELECT count(), min(x), max(x), sum(x), uniqExact(x) FROM sample_00276 SAMPLE 1/10 OFFSET 1/10;
DROP TABLE IF EXISTS TESTTABLE4;
CREATE TABLE test_734C4B39523B6943352A7C4F2B36555148654A34293F442357673F554649645A7365747833497265(x UInt8) Engine=Memory;
CREATE TABLE test_02908_r1_248 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_248', 'r1') ORDER BY tuple()
INSERT INTO test_01193_18429.table_2_975 VALUES 
CREATE TABLE replicated_with_sampling (`x` UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00509/replicated_with_sampling', 'r1') ORDER BY x SAMPLE BY x SETTINGS index_granularity = 58299, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 9848, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 11762772, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 49821, primary_key_compress_block_size = 74473
INSERT INTO t_sparse_distinct SELECT number % 10, toString(number % 100 = 0) FROM numbers(100);
CREATE DATABASE IF NOT EXISTS test_uv7ms2ro 
SELECT materialize(`PhraseProcessedID`) FROM `test_holn7q2v`.`click_storage`
CREATE TABLE test_5E6D6F4A6F34693865302E626A5146333F575D7D6B212364407C5D5B3B4742653F613A622F5A5165(x UInt8) Engine=Memory;
SELECT toDateTime64OrNull('');
CREATE TABLE test_01193_18429.table_9_34 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_692C2A2B632A4E446357775567482059593B5F41362F3B245432673775372951667A407D7B317B5A(x UInt8) Engine=Memory;
EXPLAIN QUERY TREE SELECT value FROM ( SELECT tupleElement(value, 'a') AS value FROM test_table SETTINGS optimize_functions_to_subcolumns = 1 ) SETTINGS optimize_functions_to_subcolumns = 0;
select mapContains(a, b) from table_map;
SELECT 'Running test stateless/01181_db_atomic_drop_on_cluster.sql from pid=1714' 
INSERT INTO alter_table_5 SELECT rand(1), rand(2), 1 / rand(3), toString(rand(4)), [rand(5), rand(6)], rand(7) % 2 ? NULL : generateUUIDv4(), (rand(8), rand(9)) FROM numbers(100000)
select 0 = multiSearchAnyCaseInsensitive(materialize('QWyWngrQGrDmZxgRnlOMYHBtuMW'), ['ZnvckNbkeVHnIBwAwpPZIr', 'NCzFhWQmOqIGQzMORw', 'tDYaxfQXWpKNLsawBUUOmik', 'IMveCViyAvmoTEQqmbcTbdfjULnnl', 'NRvsdotmmfwumsDpDtZU', 'mnqVnwWOvMiD', 'HXpHrMvGQpbuhVgnUkfFPqjpoRdhXBrFB', 'awtr', 'IMIdOmMHZccbOZHhWOKcKjkwwgkJSfxHDCzR', 'jPLISbIwWJEKPwgvajTxVLws', 'HBfRrzEC', 'VXsysGnAsFbqNOvIaR', 'upCaeaIOK', 'GUDFkrzBiqrbZVnS', 'MoCOePXRlVqCQpSCaIKpEXkH', 'rfF', 'fjhMEpySIpevBVWLOpqi', 'KdeskLSktU', 'vjUuNUlBEGkQyRuojZLyrmf', 'SvSxotkTKCeVzNICcSZLsScKsf']) from system.numbers limit 10;
CREATE DICTIONARY 01914_db.dictionary_1 (id UInt64, value String) PRIMARY KEY id LAYOUT(DIRECT()) SOURCE(CLICKHOUSE(DB '01914_db' TABLE 'table_1'));
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toInt64(2) ELSE toUInt32(3) END FROM system.numbers LIMIT 10;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c2) AND (NOT c2) AND c5 AND (NOT c1) AND c1) OR (c6 AND (NOT c1)) OR (c0 AND c9 AND c6 AND (NOT c2) AND (NOT c3)) OR ((NOT c6) AND (NOT c2) AND c0 AND (NOT c7)) OR ((NOT c1) AND (NOT c0) AND c1 AND c2) OR (c0 AND (NOT c6)) OR ((NOT c7) AND (NOT c5) AND c9 AND (NOT c3) AND (NOT c6)) SETTINGS convert_query_to_cnf = 1
SELECT a, b, c FROM pk_order ORDER BY a, b DESC, c DESC;
SELECT toDecimal32OrDefault('Hello', 3, 123.456::Decimal32(3)) AS x, toTypeName(x);
CREATE TABLE lc_00800_1 (`names` Array(LowCardinality(String))) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 62945, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 5543, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1284826603, index_granularity_bytes = 29060274, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 78645, primary_key_compress_block_size = 51990
DROP TABLE IF EXISTS t1_00850;
INSERT INTO test_01193_18429.table_2_198 VALUES 
INSERT INTO mt VALUES /* (33, 2) */ 
CREATE TABLE test_01193_18429.table_7_138 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'parseDateTime32BestEffortOrNull';
CREATE TABLE IF NOT EXISTS test_01444.t18733 (`x` UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 49736, min_bytes_for_wide_part = 645103364, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 6, merge_max_block_size = 15200, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 21360504, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75390, primary_key_compress_block_size = 98921
SELECT formatReadableSize(NULL);
SHOW CREATE POLICY p4_01295 ON db.table, p5_01295 ON db2.table2;
CREATE TABLE test_01193_18429.table_10_645 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT count(*) FROM test_array_ops where arr <= CAST([10, -20] AS Array(Nullable(Int64)));
SELECT CASE WHEN 1 THEN [col2, col3] WHEN 1 THEN ['foo', 'bar'] ELSE ['foo', 'bar'] END FROM multi_if_check;
CREATE INDEX idx_tab2_3 ON tab2 (col0,col1 DESC);
INSERT INTO r7 SELECT 42 % 10 = 7 ? 42 - 1 : 42
SELECT [[1, 2, 3], [], [1]]::Array(Array(UInt32));
SELECT 'Running test stateless/01514_distributed_cancel_query_on_error.sh from pid=1718' 
DROP TABLE map_protobuf_00825
DROP DATABASE IF EXISTS test_n8fe8hgg 
SELECT intDiv(4, toDecimal128(2.2, 3));
alter table mut modify setting max_number_of_mutations_for_replica=100;
SELECT toTypeName(any(a)) == 'Nullable(Int32)' AND toTypeName(any(t2.a)) == 'Nullable(Int32)' FROM t1 FULL JOIN t2 USING (a);
SELECT t3.id = 'l', t3.not_id = 'l' FROM t1_00848 t1 LEFT JOIN t3_00848 t3 ON t1.id = t3.id ORDER BY t1.id, t3.id;
select table from system.dropped_tables where table = '02681_undrop_multiple' limit 1;
INSERT INTO r3 SELECT 48
select sleepEachRow(0.01)from numbers(10) FORMAT CSVWithNames 
set input_format_json_infer_incomplete_types_as_strings=0;
SELECT * FROM nORX WHERE B >= 1000 ORDER BY A ASC, -B ASC LIMIT 3 SETTINGS max_threads = 1;
SELECT '--- compound identifier ---';
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c0) AND (NOT c8) AND (NOT c2) AND (NOT c6)) OR ((NOT c6)) OR (c7) OR ((NOT c7) AND (NOT c6) AND c3 AND c9 AND (NOT c6)) OR (c7 AND c6 AND c6) OR (c6 AND (NOT c8) AND (NOT c8) AND c3) OR (c0) OR (c0 AND (NOT c8) AND (NOT c9) AND (NOT c6) AND (NOT c7)) SETTINGS convert_query_to_cnf = 1
INSERT INTO test_parallel_replicas_settings SELECT * FROM numbers(10);
EXPLAIN QUERY TREE run_passes=1 SELECT sum(if(number % 2 == 0, 0, 123)) FROM numbers(100);
drop table if exists morton_numbers_02457;
CREATE TABLE test_02908_r1_150 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_150', 'r1') ORDER BY tuple()
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), toInt32(-1) + N as r FORMAT CSV;
INSERT INTO test_01193_18429.table_6_430 VALUES 
CREATE TABLE test_264C5F496B504E57735C5D794F2321755C612C5A3323513833587B41703F345C6047326F40617E72(x UInt8) Engine=Memory;
INSERT INTO collate_test1 VALUES 
SELECT 'Running test stateless/02705_protobuf_debug_abort.sh from pid=1722' 
INSERT INTO test_01193_18429.table_9_620 VALUES 
INSERT INTO test_8yvdjyfm.table_for_dict SELECT number, number % 17, toString(number * number), number / 2. FROM numbers(100)
CREATE TABLE test_01193_18429.table_5_927 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select * from auto_assign_enum1;
alter table many_mutations delete where y = 780 * 2 settings mutations_sync = 0;
INSERT INTO test_01193_18429.table_5_751 VALUES 
SELECT -1, 65536, -1 = 65536, -1 != 65536, -1 < 65536, -1 <= 65536, -1 > 65536, -1 >= 65536, 65536 = -1, 65536 != -1, 65536 < -1, 65536 <= -1, 65536 > -1, 65536 >= -1 , toInt8(-1) = toUInt32(65536), toInt8(-1) != toUInt32(65536), toInt8(-1) < toUInt32(65536), toInt8(-1) <= toUInt32(65536), toInt8(-1) > toUInt32(65536), toInt8(-1) >= toUInt32(65536), toUInt32(65536) = toInt8(-1), toUInt32(65536) != toInt8(-1), toUInt32(65536) < toInt8(-1), toUInt32(65536) <= toInt8(-1), toUInt32(65536) > toInt8(-1), toUInt32(65536) >= toInt8(-1) , toInt8(-1) = toInt32(65536), toInt8(-1) != toInt32(65536), toInt8(-1) < toInt32(65536), toInt8(-1) <= toInt32(65536), toInt8(-1) > toInt32(65536), toInt8(-1) >= toInt32(65536), toInt32(65536) = toInt8(-1), toInt32(65536) != toInt8(-1), toInt32(65536) < toInt8(-1), toInt32(65536) <= toInt8(-1), toInt32(65536) > toInt8(-1), toInt32(65536) >= toInt8(-1) , toInt8(-1) = toUInt64(65536), toInt8(-1) != toUInt64(65536), toInt8(-1) < toUInt64(65536), toInt8(-1) <= toUInt64(65536), toInt8(-1) > toUInt64(65536), toInt8(-1) >= toUInt64(65536), toUInt64(65536) = toInt8(-1), toUInt64(65536) != toInt8(-1), toUInt64(65536) < toInt8(-1), toUInt64(65536) <= toInt8(-1), toUInt64(65536) > toInt8(-1), toUInt64(65536) >= toInt8(-1) , toInt8(-1) = toInt64(65536), toInt8(-1) != toInt64(65536), toInt8(-1) < toInt64(65536), toInt8(-1) <= toInt64(65536), toInt8(-1) > toInt64(65536), toInt8(-1) >= toInt64(65536), toInt64(65536) = toInt8(-1), toInt64(65536) != toInt8(-1), toInt64(65536) < toInt8(-1), toInt64(65536) <= toInt8(-1), toInt64(65536) > toInt8(-1), toInt64(65536) >= toInt8(-1) , toInt16(-1) = toUInt32(65536), toInt16(-1) != toUInt32(65536), toInt16(-1) < toUInt32(65536), toInt16(-1) <= toUInt32(65536), toInt16(-1) > toUInt32(65536), toInt16(-1) >= toUInt32(65536), toUInt32(65536) = toInt16(-1), toUInt32(65536) != toInt16(-1), toUInt32(65536) < toInt16(-1), toUInt32(65536) <= toInt16(-1), toUInt32(65536) > toInt16(-1), toUInt32(65536) >= toInt16(-1) , toInt16(-1) = toInt32(65536), toInt16(-1) != toInt32(65536), toInt16(-1) < toInt32(65536), toInt16(-1) <= toInt32(65536), toInt16(-1) > toInt32(65536), toInt16(-1) >= toInt32(65536), toInt32(65536) = toInt16(-1), toInt32(65536) != toInt16(-1), toInt32(65536) < toInt16(-1), toInt32(65536) <= toInt16(-1), toInt32(65536) > toInt16(-1), toInt32(65536) >= toInt16(-1) , toInt16(-1) = toUInt64(65536), toInt16(-1) != toUInt64(65536), toInt16(-1) < toUInt64(65536), toInt16(-1) <= toUInt64(65536), toInt16(-1) > toUInt64(65536), toInt16(-1) >= toUInt64(65536), toUInt64(65536) = toInt16(-1), toUInt64(65536) != toInt16(-1), toUInt64(65536) < toInt16(-1), toUInt64(65536) <= toInt16(-1), toUInt64(65536) > toInt16(-1), toUInt64(65536) >= toInt16(-1) , toInt16(-1) = toInt64(65536), toInt16(-1) != toInt64(65536), toInt16(-1) < toInt64(65536), toInt16(-1) <= toInt64(65536), toInt16(-1) > toInt64(65536), toInt16(-1) >= toInt64(65536), toInt64(65536) = toInt16(-1), toInt64(65536) != toInt16(-1), toInt64(65536) < toInt16(-1), toInt64(65536) <= toInt16(-1), toInt64(65536) > toInt16(-1), toInt64(65536) >= toInt16(-1) , toInt32(-1) = toUInt32(65536), toInt32(-1) != toUInt32(65536), toInt32(-1) < toUInt32(65536), toInt32(-1) <= toUInt32(65536), toInt32(-1) > toUInt32(65536), toInt32(-1) >= toUInt32(65536), toUInt32(65536) = toInt32(-1), toUInt32(65536) != toInt32(-1), toUInt32(65536) < toInt32(-1), toUInt32(65536) <= toInt32(-1), toUInt32(65536) > toInt32(-1), toUInt32(65536) >= toInt32(-1) , toInt32(-1) = toInt32(65536), toInt32(-1) != toInt32(65536), toInt32(-1) < toInt32(65536), toInt32(-1) <= toInt32(65536), toInt32(-1) > toInt32(65536), toInt32(-1) >= toInt32(65536), toInt32(65536) = toInt32(-1), toInt32(65536) != toInt32(-1), toInt32(65536) < toInt32(-1), toInt32(65536) <= toInt32(-1), toInt32(65536) > toInt32(-1), toInt32(65536) >= toInt32(-1) , toInt32(-1) = toUInt64(65536), toInt32(-1) != toUInt64(65536), toInt32(-1) < toUInt64(65536), toInt32(-1) <= toUInt64(65536), toInt32(-1) > toUInt64(65536), toInt32(-1) >= toUInt64(65536), toUInt64(65536) = toInt32(-1), toUInt64(65536) != toInt32(-1), toUInt64(65536) < toInt32(-1), toUInt64(65536) <= toInt32(-1), toUInt64(65536) > toInt32(-1), toUInt64(65536) >= toInt32(-1) , toInt32(-1) = toInt64(65536), toInt32(-1) != toInt64(65536), toInt32(-1) < toInt64(65536), toInt32(-1) <= toInt64(65536), toInt32(-1) > toInt64(65536), toInt32(-1) >= toInt64(65536), toInt64(65536) = toInt32(-1), toInt64(65536) != toInt32(-1), toInt64(65536) < toInt32(-1), toInt64(65536) <= toInt32(-1), toInt64(65536) > toInt32(-1), toInt64(65536) >= toInt32(-1) , toInt64(-1) = toUInt32(65536), toInt64(-1) != toUInt32(65536), toInt64(-1) < toUInt32(65536), toInt64(-1) <= toUInt32(65536), toInt64(-1) > toUInt32(65536), toInt64(-1) >= toUInt32(65536), toUInt32(65536) = toInt64(-1), toUInt32(65536) != toInt64(-1), toUInt32(65536) < toInt64(-1), toUInt32(65536) <= toInt64(-1), toUInt32(65536) > toInt64(-1), toUInt32(65536) >= toInt64(-1) , toInt64(-1) = toInt32(65536), toInt64(-1) != toInt32(65536), toInt64(-1) < toInt32(65536), toInt64(-1) <= toInt32(65536), toInt64(-1) > toInt32(65536), toInt64(-1) >= toInt32(65536), toInt32(65536) = toInt64(-1), toInt32(65536) != toInt64(-1), toInt32(65536) < toInt64(-1), toInt32(65536) <= toInt64(-1), toInt32(65536) > toInt64(-1), toInt32(65536) >= toInt64(-1) , toInt64(-1) = toUInt64(65536), toInt64(-1) != toUInt64(65536), toInt64(-1) < toUInt64(65536), toInt64(-1) <= toUInt64(65536), toInt64(-1) > toUInt64(65536), toInt64(-1) >= toUInt64(65536), toUInt64(65536) = toInt64(-1), toUInt64(65536) != toInt64(-1), toUInt64(65536) < toInt64(-1), toUInt64(65536) <= toInt64(-1), toUInt64(65536) > toInt64(-1), toUInt64(65536) >= toInt64(-1) , toInt64(-1) = toInt64(65536), toInt64(-1) != toInt64(65536), toInt64(-1) < toInt64(65536), toInt64(-1) <= toInt64(65536), toInt64(-1) > toInt64(65536), toInt64(-1) >= toInt64(65536), toInt64(65536) = toInt64(-1), toInt64(65536) != toInt64(-1), toInt64(65536) < toInt64(-1), toInt64(65536) <= toInt64(-1), toInt64(65536) > toInt64(-1), toInt64(65536) >= toInt64(-1) 
INSERT INTO test_01193_18429.table_7_335 VALUES 
SELECT 5 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'val', tuple(IPv4StringToNum('255.192.0.0')))
DROP DATABASE IF EXISTS test_mxs3wdun 
INSERT INTO test_01193_18429.table_10_118 VALUES 
show create table enabled_roles format TSVRaw;
CREATE TABLE test_26286B602822602D316F64374F54513E3C6F3C5E7D233C5B5868412432454A602436716C3E656D57(x UInt8) Engine=Memory;
INSERT INTO r6 SELECT 2 % 10 = 6 ? 2 - 1 : 2
SET log_comment='session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_no_password_two_profiles_no_roles no_password - Two profiles, no roles';
CREATE OR REPLACE TABLE t_temp (`a` UInt32, `timestamp` DateTime) ENGINE = MergeTree ORDER BY a TTL timestamp + toIntervalSecond(2) WHERE a IN (SELECT number FROM system.numbers LIMIT 100000) SETTINGS index_granularity = 18852, min_bytes_for_wide_part = 1073720067, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 2, merge_max_block_size = 22506, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1306764033, index_granularity_bytes = 2588709, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 80732, primary_key_compress_block_size = 64939
SELECT '18446744073709551615', '-0.500000000', 18446744073709551615 = -0.500000000, 18446744073709551615 != -0.500000000, 18446744073709551615 < -0.500000000, 18446744073709551615 <= -0.500000000, 18446744073709551615 > -0.500000000, 18446744073709551615 >= -0.500000000, -0.500000000 = 18446744073709551615, -0.500000000 != 18446744073709551615, -0.500000000 < 18446744073709551615, -0.500000000 <= 18446744073709551615, -0.500000000 > 18446744073709551615, -0.500000000 >= 18446744073709551615 , toUInt64(18446744073709551615) = -0.500000000, toUInt64(18446744073709551615) != -0.500000000, toUInt64(18446744073709551615) < -0.500000000, toUInt64(18446744073709551615) <= -0.500000000, toUInt64(18446744073709551615) > -0.500000000, toUInt64(18446744073709551615) >= -0.500000000, -0.500000000 = toUInt64(18446744073709551615), -0.500000000 != toUInt64(18446744073709551615), -0.500000000 < toUInt64(18446744073709551615), -0.500000000 <= toUInt64(18446744073709551615), -0.500000000 > toUInt64(18446744073709551615), -0.500000000 >= toUInt64(18446744073709551615) ;
INSERT INTO test_01193_18429.table_7_369 VALUES 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), toYYYYMMDDhhmmss(N, 'Asia/Istanbul') as r FORMAT CSV;
alter table data_01900_2 update s = 'bar_62' where 1;
INSERT INTO test_01193_18429.table_7_440 VALUES 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), DT >= N as r FORMAT CSV;
SELECT count() FROM t_cnf_fuzz WHERE (c1 AND (NOT c2) AND (NOT c1)) OR ((NOT c5) AND (NOT c0) AND (NOT c8) AND c7 AND c7) OR ((NOT c0) AND (NOT c2) AND c9 AND c3 AND (NOT c1)) SETTINGS convert_query_to_cnf = 0
INSERT INTO test_01193_18429.table_1_450 VALUES 
create table distr2 (number UInt64) engine = Distributed(test_cluster_two_shards_different_databases, '', num2_01232);
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt32(1), toUInt32(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toFloat32(3), toFloat32(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE shard_0.num2_01232 (`number` UInt64) ENGINE = MergeTree ORDER BY number SETTINGS index_granularity = 13814, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 1905, prefer_fetch_merged_part_size_threshold = 5022673566, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 2068870113, index_granularity_bytes = 16951928, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 89131, primary_key_compress_block_size = 38608
SELECT CASE WHEN 1 THEN 'foo' WHEN 1 THEN toFixedString(col3, 16) ELSE 'baz' END FROM multi_if_check;
select round(h3PointDistKm(lat1, lon1,lat2, lon2), 2) AS k from table1 order by k;
SELECT bin('Hello') == bin(bitShiftLeft('Hello', 0));
INSERT INTO test_01193_18429.table_4_486 VALUES 
CREATE TABLE test_604271557A6632322E297151556F4A7B6B45355935575F6A2577425453754A4D3A71677C33482D28(x UInt8) Engine=Memory;
insert into function file('/var/lib/clickhouse/user_files/02026_storage_filelog_largefile_test_mlouecdc/test19.csv', 'CSV', 'k UInt32, v UInt32') select number, number from numbers(10000);
SELECT hasSubstr([], []);
INSERT INTO test_01193_18429.table_6_775 VALUES 
select 2 = position('abcabc', 'b', 2);
INSERT INTO test_01193_18429.table_8_683 VALUES 
DROP NAMED COLLECTION IF EXISTS 02883_named_collections_override_test_5r4han3w_collection2;
SELECT 'Running test stateless/02784_connection_string.sh from pid=1724' 
CREATE TABLE test_01193_18429.table_7_225 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 9223372036854775809, -9223372036854775807, 9223372036854775809 = -9223372036854775807, 9223372036854775809 != -9223372036854775807, 9223372036854775809 < -9223372036854775807, 9223372036854775809 <= -9223372036854775807, 9223372036854775809 > -9223372036854775807, 9223372036854775809 >= -9223372036854775807, -9223372036854775807 = 9223372036854775809, -9223372036854775807 != 9223372036854775809, -9223372036854775807 < 9223372036854775809, -9223372036854775807 <= 9223372036854775809, -9223372036854775807 > 9223372036854775809, -9223372036854775807 >= 9223372036854775809 , toUInt64(9223372036854775809) = toInt64(-9223372036854775807), toUInt64(9223372036854775809) != toInt64(-9223372036854775807), toUInt64(9223372036854775809) < toInt64(-9223372036854775807), toUInt64(9223372036854775809) <= toInt64(-9223372036854775807), toUInt64(9223372036854775809) > toInt64(-9223372036854775807), toUInt64(9223372036854775809) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toUInt64(9223372036854775809), toInt64(-9223372036854775807) != toUInt64(9223372036854775809), toInt64(-9223372036854775807) < toUInt64(9223372036854775809), toInt64(-9223372036854775807) <= toUInt64(9223372036854775809), toInt64(-9223372036854775807) > toUInt64(9223372036854775809), toInt64(-9223372036854775807) >= toUInt64(9223372036854775809) 
CREATE TABLE test_2D6859713335414D7A6E7E6D3E6447323C292E5C2B415760765F2861714B3E5930727B2B2A336A31(x UInt8) Engine=Memory;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), N - D as r FORMAT CSV;
select sipHash128ReferenceKeyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55)) == sipHash128Reference(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55));
SELECT CASE WHEN 1 THEN ['foo', 'bar'] WHEN 1 THEN [col4, col5] ELSE ['foo', col7] END FROM multi_if_check;
DROP DATABASE IF EXISTS test_ke1vkerj 
select uniqExact(_part), count() from sDD;
select number from numbers(100) intersect select number from numbers(20, 60) except select number from numbers(30, 20) except select number from numbers(60, 20);
SELECT bitNot(NULL);
SYSTEM STOP MERGES t_sparse_full;
CREATE TABLE test_01193_18429.table_9_103 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT CASE WHEN 1 THEN col2 WHEN 1 THEN col3 ELSE col4 END FROM multi_if_check;
SELECT * FROM t0 ANY INNER JOIN t1 USING (x);
INSERT INTO bitmap_state_test SELECT pickup_date, city_id, groupBitmapState(uid) AS uv FROM bitmap_test GROUP BY pickup_date, city_id;
SELECT '=== partial_merge ===';
INSERT INTO src_2 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 13
SELECT arrayAll(x -> 1, range(number)) FROM system.numbers LIMIT 10;
SELECT s2ToGeo(arrayJoin([4704772434919038107,9926594385212866560]));
SELECT 'Running test stateless/01560_monotonicity_check_multiple_args_bug.sql from pid=1718' 
CREATE TABLE replica_01108_1 (`n` int) ENGINE = ReplicatedMergeTree('/clickhouse/tables/01108_restart_replicas_rename_deadlock_zookeeper_test_gmla4knt/replica_01108_1', 'replica') ORDER BY tuple() SETTINGS index_granularity = 54206, min_bytes_for_wide_part = 107393377, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 21917, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 734127, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 2447171233, index_granularity_bytes = 7487035, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 48088, primary_key_compress_block_size = 85065
CREATE DATABASE IF NOT EXISTS test_kcintf6b 
ALTER TABLE concurrent_alter_column ADD COLUMN c75 DOUBLE;
SELECT diff, traf FROM order_by_nulls_first ORDER BY diff DESC NULLS FIRST, traf DESC;
alter table many_mutations delete where y = 633 * 2 settings mutations_sync = 0;
CREATE TEMPORARY TABLE t AS SELECT * FROM system.numbers LIMIT 11;
CREATE TABLE test_01193_18429.table_3_515 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_612C6B765F5127314D332B6B435332695F4E3A7067357A4C7C7C583A6E417D226B51503F52622777(x UInt8) Engine=Memory;
select toStartOfInterval(toDateTime64('2220-12-12 12:12:12.1234567', 7), INTERVAL 1 NANOSECOND);
SELECT date_trunc('year', toDate('2020-01-01', 'Europe/London'));
alter table rmt2 update m = m * 10 where 1 settings mutations_sync=2;
INSERT INTO test_01193_18429.table_7_157 VALUES 
DESCRIBE TABLE s3Cluster('test_cluster_one_shard_three_replicas_localhost', 'http://localhost:11111/test/{a,b}.tsv', 'test', '[HIDDEN]', 'TSV', 'auto', 'auto')
select (1 ? ('abc' as s) : 'def') = s;
CREATE TABLE test_01193_18429.table_3_604 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO src VALUES /* (-27, 2) */ 
SELECT greatCircleDistance(0., 0., 0., 90.);
CREATE DATABASE IF NOT EXISTS test_tsph6bkz 
EXPLAIN SYNTAX (SELECT sum(decimal32) - 2 * count(decimal32) From test_table);
CREATE TABLE test_01193_18429.table_9_511 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/00803_odbc_driver_2_format.sql from pid=1722' 
INSERT INTO test FORMAT CSV
CREATE DATABASE IF NOT EXISTS test_lgk5brhw 
CREATE TABLE test_465A21457E3E396273245F47527C3B634D4B3F3A4B542B2A6E3B4E474A3A7A377A5D6A675E6E2C5F(x UInt8) Engine=Memory;
select if(number % 5 == 0, Null, toInt64OrZero(toString(number))) from numbers(20);
CREATE TABLE test_01193_18429.table_10_247 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP TABLE IF EXISTS arrow_types3
DROP DATABASE IF EXISTS test_x9jcpf2l 
select round(1000 * ngramDistanceCaseInsensitiveUTF8('ÃÂ°ÃÂÃÂÃÂÃÂ´ÃÂµÃÂÃÂÃÂ·', materialize('ÃÂÃÂ±ÃÂ²ÃÂÃÂ´ÃÂµÃÂÃÂ¶'))) = round(1000 * ngramDistanceCaseInsensitiveUTF8(materialize('ÃÂ°ÃÂÃÂÃÂÃÂ´ÃÂµÃÂÃÂÃÂ·'), 'ÃÂÃÂ±ÃÂ²ÃÂÃÂ´ÃÂµÃÂÃÂ¶')) from system.numbers limit 5;
SELECT sum(marks) from system.parts WHERE table = 'adaptive_granularity_alter2' and database=currentDatabase() and active=1;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a ANTI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d ON a.id = d.id ;
SELECT multiIf(1, col2, 1, col3, toFixedString(col4, 16)) FROM multi_if_check;
INSERT INTO table_gcd_codec_decimal256 SELECT number FROM system.numbers LIMIT 50;
CREATE TABLE test_32205A4F4D5852555A6D6C3E4A556929387E5F75442C25722B6E25433A67712A284956273143432D(x UInt8) Engine=Memory;
SELECT dateName(NULL, NULL, NULL);
CREATE TABLE test_01193_18429.table_1_424 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_bf_indexOf (`id` int, `ary` Array(LowCardinality(Nullable(String))), INDEX idx_ary ary TYPE bloom_filter(0.01) GRANULARITY 1) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 1, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 9045, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 74651, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 3414402093, index_granularity_bytes = 25968000, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 36268, primary_key_compress_block_size = 59407
CREATE TABLE test_2F6A3D75587C712B30494966416D59447D582F7B5A68255C313B2067784F234F4A3B6F2260384C5C(x UInt8) Engine=Memory;
SELECT `x` FROM `test_6sl9qpyr`.`02535_custom_key` WHERE (sipHash64(`x`) >= 6148914691236517205) AND (sipHash64(`x`) < 12297829382473034410)
SELECT x, isFinite(x), isInfinite(x), isNaN(x) FROM (SELECT toFloat32(arrayJoin([0, 1, -1, inf, -inf, nan, -nan, 0 / 0, 1 / 0, -1 / 0, 0 / -0., -0. / 0, 1 / -0., -1 / -0.])) AS x);
CREATE TABLE test_425036262A5B27236378382A303A3E434C59742A4921722962215945526449703939532E4D314E71(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS r9 SYNC;
SELECT * FROM system.processes WHERE query_id LIKE 'alter\_00816\_%' 
Select number, last_value_respect_nulls (number) over (order by number) from numbers(1);
SELECT 'Running test stateless/02293_grouping_function_group_by.sql from pid=1713' 
CREATE TABLE test_02908_r2_240 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_240', 'r2') ORDER BY tuple()
CREATE TABLE test_24585E483C496E60373B764526784A5E6F3766223C5C41777D6A495344604B6B465563527A4B6B5B(x UInt8) Engine=Memory;
INSERT INTO dst SELECT * FROM src
SELECT sum(e) from tab_02473 PREWHERE b > 10 AND b <= 70 AND c > 23 AND c <= 53 AND d > 5 AND d <= 35 WHERE a == 0;
CREATE TEMPORARY TABLE table_gcd (id UInt64, ui UInt256 CODEC(GCD, LZ4)) ENGINE = Memory;
SELECT quantileExactWeighted(0.5)(number, number) FROM numbers(10);
SELECT xxh3([], [], []);
select count() from system.schema_inference_cache where countSubstrings(source, '02404_data.TSKV') > 0;
CREATE DATABASE IF NOT EXISTS test_74vtwf4v 
CREATE TABLE t2 (`c0` Int32) ENGINE = MergeTree ORDER BY c0 SETTINGS index_granularity = 30345, min_bytes_for_wide_part = 250541727, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 21585, prefer_fetch_merged_part_size_threshold = 7845277623, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 811981982, index_granularity_bytes = 15898986, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 79625, primary_key_compress_block_size = 32339
CREATE TABLE columns (a UInt8, b UInt8, c UInt8) ENGINE = Memory;
SELECT countIfArray([NULL, NULL], [1, 0]) AS `x` FROM numbers(3)
CREATE TABLE test_01193_18429.table_4_850 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_2_130 VALUES 
alter table data_01900_2 update s = 'bar_47' where 1;
set optimize_respect_aliases = 1, optimize_monotonous_functions_in_order_by = 1;
INSERT INTO t_nested_tuple FORMAT JSONEachRow 
SHOW CREATE TABLE r_prop_table2;
set allow_nondeterministic_optimize_skip_unused_shards=1;
INSERT INTO test_01193_18429.table_3_177 VALUES 
SELECT emptyArrayDate();
SELECT COUNT() FROM bloom_filter_array_lc_null_types_test WHERE has(i32, 1);
SELECT CASE WHEN (col1 % 2) = 0 THEN toFixedString(col2, 16) WHEN 1 THEN col3 ELSE toFixedString('baz', 16) END FROM multi_if_check;
CREATE TABLE test (`a` Nullable(String)) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 58428, min_bytes_for_wide_part = 16298057, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 14, merge_max_block_size = 5485, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 30393539, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 52414, primary_key_compress_block_size = 63404
CREATE DATABASE IF NOT EXISTS test_ob4uf9bh 
SELECT * FROM numbers(34587)
CREATE TABLE test_4640612A383925783427235E765D24417071386A49714F253C43396270467540363D3B6F61687C51(x UInt8) Engine=Memory;
SET insert_keeper_max_retries = 0;
SELECT 'Running test stateless/02250_hints_for_columns.sh from pid=1715' 
SELECT t1.key, t2.key, length(t1.s), t2.s FROM t1 AS t1 ANY RIGHT JOIN tn2 AS t2 ON t1.key == t2.key ORDER BY t1.key, t2.key, t2.s;
alter table many_mutations delete where y = 342 * 2 settings mutations_sync = 0;
SELECT a.pk, b.pk, a.dt, b.dt, toTypeName(a.pk), toTypeName(b.pk), toTypeName(materialize(a.dt)), toTypeName(materialize(b.dt)) FROM (SELECT toUInt8(number) > 0 as pk, toNullable(toUInt8(number)) as dt FROM numbers(3)) a ASOF JOIN (SELECT 1 as pk, toNullable(0) as dt) b ON a.dt >= b.dt AND a.pk = b.pk ORDER BY a.dt;
WITH 'needle' as n SELECT haystack, needle, hasToken(haystack, n) as result FROM ht WHERE func = 'hasToken' AND needle = n AND result != match;
SELECT count() FROM t_cnf_fuzz WHERE (c0) OR ((NOT c9) AND c0 AND (NOT c5) AND c5 AND c2) OR ((NOT c6)) OR ((NOT c7)) OR (c6) OR ((NOT c8) AND (NOT c7) AND (NOT c0) AND c1) OR ((NOT c5) AND c2 AND (NOT c3) AND c1) OR (c8) SETTINGS convert_query_to_cnf = 1
select 0 = position('abc', materialize('defgh'));
CREATE TEMPORARY TABLE t_00693 (x UInt8);
SELECT `x` FROM generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8))))))))))))))))))))))))))))))))))))))', 1, 1, 1) LIMIT 1
CREATE TABLE test_table_nullable_signed_values ( id UInt64, value1 Nullable(Int8), value2 Nullable(Int16), value3 Nullable(Int32), value4 Nullable(Int64), weight UInt64 ) ENGINE=TinyLog;
CREATE TABLE test_5051623B504D5D66713A345275383A7A422D5D6F7E6360387C253347387B353678546264572C756D(x UInt8) Engine=Memory;
alter table many_mutations delete where y = 657 * 2 settings mutations_sync = 0;
SELECT sum(u) FROM (SELECT intDiv(number, 8192) AS k, uniqCombined(18)(reinterpretAsString(number % 8192)) u FROM numbers(8192 * 100) GROUP BY k);
SELECT id as shift_right_bit,toFixedString('Hel', 10) as arg,bin(bitShiftLeft(toFixedString('Hel', 10), id)) as fixed_string_res FROM test_bit_shift_left_string_integer;
DROP TABLE IF EXISTS tttb;
DROP DATABASE non_post_request_test
CREATE TABLE test_01193_18429.table_5_448 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT s, replaceOne(s, '_', 'o') AS a, replaceRegexpOne(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['__.__', '__.']) AS s);
DROP TABLE IF EXISTS without_fixed_size_columns;
SELECT h3HexAreaKm2(13);
CREATE TABLE test_71662558443D2C394D224D5B5D592D585A737949504D65412E312A7E6B587C376B304C4F246B733D(x UInt8) Engine=Memory;
CREATE TABLE test_2D6A3F76512738253D77754B486F38715E74584132536469447C7C6769704878535D2A6758613F39(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01015_array_split.sql from pid=1720' 
INSERT INTO test_01193_18429.table_2_901 VALUES 
CREATE DATABASE IF NOT EXISTS test_l1mrkvd2 
SELECT count() FROM t_cnf_fuzz WHERE (c3 AND c1 AND c3) SETTINGS convert_query_to_cnf = 1
truncate table test_02302;
INSERT INTO test_01193_18429.table_9_996 VALUES 
INSERT INTO test_01193_18429.table_1_177 VALUES 
CREATE TABLE test_01193_18429.table_7_273 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT toInt32(-199) % toUInt64(200) as k, toTypeName(k);
select 2 = positionUTF8('ÃÂ°ÃÂ±ÃÂ²ÃÂ°ÃÂ±ÃÂ²', materialize('ÃÂ±'), 1) from system.numbers limit 10;
select * from (select 'a' as a, 'b' as b, 'c' as c, 'd' as d, 'e' as e, 'f' as f) as t1 inner join (select 'a' as a, 'b' as b, 'c' as c, 'd' as d, 'e' as e, 'f' as f) as t2 on t1.d = t2.b or t1.c = t2.b or t1.e = t2.e and t1.a=t2.a and t2.f=t1.f;
SELECT length(groupUniqArray(10000)(v)) FROM group_uniq_str GROUP BY id ORDER BY id;
CREATE TABLE test_213A774F4E307E70796668763343762D516A7D61637E5D5553323A7823794C4B414F7B6239794734(x UInt8) Engine=Memory;
select '---- arrays ----';
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toInt16(-1) != N as r FORMAT CSV;
SELECT database, t.name FROM (SELECT name, database FROM system.tables) AS t ALL INNER JOIN (SELECT name AS database FROM system.databases) AS db USING database WHERE database = 'system' AND t.name = 'one' FORMAT PrettyCompactNoEscapes;
ALTER TABLE concurrent_alter_column ADD COLUMN c212 DOUBLE;
INSERT INTO test_01193_18429.table_1_516 VALUES 
ALTER TABLE sqllt.table DROP COLUMN the_new_col;
DROP TABLE IF EXISTS mt1;
SELECT 'Running test stateless/01455_default_compression.sql from pid=1722' 
SELECT arrayConcat(c, nest.a) AS x, toTypeName(x) FROM decimal;
CREATE TABLE test_01193_18429.table_4_111 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_4_130 VALUES 
CREATE TABLE non_const_needle (`id` UInt32, `haystack` String, `needle` String) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 30027, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.49161437153816223, replace_long_file_name_to_hash = true, max_file_name_length = 46, merge_max_block_size = 7620, prefer_fetch_merged_part_size_threshold = 1418720672, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 24166309, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 24568, primary_key_compress_block_size = 17522
DROP TABLE IF EXISTS test_optimize_exception_replicated
SELECT number AS id, toString(number) AS s, range(number) AS arr FROM numbers(10) FORMAT TabSeparatedRawWithNamesAndTypes
explain pipeline select number from remote('127.0.0.{1,2,3}', system, numbers_mt) group by number settings distributed_aggregation_memory_efficient = 0;
SELECT 'Running test stateless/01213_optimize_skip_unused_shards_DISTINCT.sql from pid=1724' 
CREATE TABLE IF NOT EXISTS test_01444.t27699 (`x` UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 49736, min_bytes_for_wide_part = 645103364, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 6, merge_max_block_size = 15200, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 21360504, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75390, primary_key_compress_block_size = 98921
DROP DATABASE IF EXISTS test_dxjrvcs1 
select -5 as offset, 5 as length, 'Hello' as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
SELECT arrayFirstOrNull(NULL);
SELECT `UserID` FROM `test_c5zukzwt`.`users` WHERE `UserID` IN ((SELECT arrayJoin([1468013291393583084, 1321770221388956068])) AS `_subquery3838`)
DROP DATABASE IF EXISTS test_y8572uj2 
SELECT a FROM t_fixed_prefix WHERE bitNot(c) = 1 ORDER BY a SETTINGS optimize_read_in_order = 0
SHOW CREATE TABLE compress_table;
CREATE TABLE test_5E78532D672F6048276B5825546A5D562436467C4C772352463A413E5C573760374B7B5924774925(x UInt8) Engine=Memory;
INSERT INTO clear_column VALUES 
INSERT INTO test_02908_r1_182 SELECT rand64() FROM numbers(5);
SELECT 'Running test stateless/02919_alter_temporary_table_with_nondefault_engine.sql from pid=1718' 
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 22416, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT a, b, c FROM t_vertical_merges;
CREATE TABLE buf_file ENGINE = File(TabSeparated) AS SELECT * FROM buf_00385
SELECT arraySort(geohashesInBox(-49.26, -25.38, -49.25, -25.37, 6));
ATTACH DATABASE test_01676;
CREATE TABLE test_7B46296928314B5F3A5D6E447566237C7769346E792E5A276574373B745A4B626C462D6E3426357C(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_vlovdofe 
SELECT database || '.' || name FROM system.tables WHERE database in ('system', 'information_schema', 'INFORMATION_SCHEMA') and name != 'zookeeper' and name != 'models' AND sipHash64(name || toString(3942)) % 8 = 3 AND name NOT LIKE '%\_sender' AND name NOT LIKE '%\_watcher'
SELECT dictGet('02179_test_dictionary', 'value', 0, 15);
CREATE TABLE test_01193_18429.table_5_602 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_3_620 VALUES 
SELECT -2147483648, 9223372036854775807, -2147483648 = 9223372036854775807, -2147483648 != 9223372036854775807, -2147483648 < 9223372036854775807, -2147483648 <= 9223372036854775807, -2147483648 > 9223372036854775807, -2147483648 >= 9223372036854775807, 9223372036854775807 = -2147483648, 9223372036854775807 != -2147483648, 9223372036854775807 < -2147483648, 9223372036854775807 <= -2147483648, 9223372036854775807 > -2147483648, 9223372036854775807 >= -2147483648 , toInt32(-2147483648) = toUInt64(9223372036854775807), toInt32(-2147483648) != toUInt64(9223372036854775807), toInt32(-2147483648) < toUInt64(9223372036854775807), toInt32(-2147483648) <= toUInt64(9223372036854775807), toInt32(-2147483648) > toUInt64(9223372036854775807), toInt32(-2147483648) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toInt32(-2147483648), toUInt64(9223372036854775807) != toInt32(-2147483648), toUInt64(9223372036854775807) < toInt32(-2147483648), toUInt64(9223372036854775807) <= toInt32(-2147483648), toUInt64(9223372036854775807) > toInt32(-2147483648), toUInt64(9223372036854775807) >= toInt32(-2147483648) , toInt32(-2147483648) = toInt64(9223372036854775807), toInt32(-2147483648) != toInt64(9223372036854775807), toInt32(-2147483648) < toInt64(9223372036854775807), toInt32(-2147483648) <= toInt64(9223372036854775807), toInt32(-2147483648) > toInt64(9223372036854775807), toInt32(-2147483648) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toInt32(-2147483648), toInt64(9223372036854775807) != toInt32(-2147483648), toInt64(9223372036854775807) < toInt32(-2147483648), toInt64(9223372036854775807) <= toInt32(-2147483648), toInt64(9223372036854775807) > toInt32(-2147483648), toInt64(9223372036854775807) >= toInt32(-2147483648) , toInt64(-2147483648) = toUInt64(9223372036854775807), toInt64(-2147483648) != toUInt64(9223372036854775807), toInt64(-2147483648) < toUInt64(9223372036854775807), toInt64(-2147483648) <= toUInt64(9223372036854775807), toInt64(-2147483648) > toUInt64(9223372036854775807), toInt64(-2147483648) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toInt64(-2147483648), toUInt64(9223372036854775807) != toInt64(-2147483648), toUInt64(9223372036854775807) < toInt64(-2147483648), toUInt64(9223372036854775807) <= toInt64(-2147483648), toUInt64(9223372036854775807) > toInt64(-2147483648), toUInt64(9223372036854775807) >= toInt64(-2147483648) , toInt64(-2147483648) = toInt64(9223372036854775807), toInt64(-2147483648) != toInt64(9223372036854775807), toInt64(-2147483648) < toInt64(9223372036854775807), toInt64(-2147483648) <= toInt64(9223372036854775807), toInt64(-2147483648) > toInt64(9223372036854775807), toInt64(-2147483648) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toInt64(-2147483648), toInt64(9223372036854775807) != toInt64(-2147483648), toInt64(9223372036854775807) < toInt64(-2147483648), toInt64(9223372036854775807) <= toInt64(-2147483648), toInt64(9223372036854775807) > toInt64(-2147483648), toInt64(9223372036854775807) >= toInt64(-2147483648) 
select table, arraySort(dependencies_table), arraySort(loading_dependencies_table), arraySort(loading_dependent_table) from system.tables where database in (currentDatabase(), 'test_2j4sloxh_1_renamed') order by table
SELECT multiIf((col1 % 2) = 0, ['foo', col3], 1, ['foo', col5], ['foo', col7]) FROM multi_if_check;
CREATE TABLE test_4B64235A4F48713C60652F273264693B3668794B7221496C6779287D2D2522762F3A3A7256362244(x UInt8) Engine=Memory;
SELECT * FROM `system`.`one` AS `xxx`;
SELECT '----- has -----';
DROP TABLE IF EXISTS test_view_00597;
SELECT 0.1::Decimal(38, 38) AS c;
SELECT 't fj n', t1.x, t2.x FROM t AS t1 FULL JOIN nt AS t2 ON t1.x = t2.x ORDER BY t1.x;
INSERT INTO test_01193_18429.table_1_388 VALUES 
INSERT INTO test_01193_18429.table_2_895 VALUES 
SELECT 'atomic after rename:';
CREATE TABLE test_334F5C2B7B3C4729426A53597035273B202B42464F537C47474B632979315B5D33692E6065675968(x UInt8) Engine=Memory;
SELECT arrayAUC([1, 1], [0, 0]);
CREATE TABLE test_01193_18429.table_1_571 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/00330_view_subqueries.sql from pid=1724' 
INSERT INTO t_async_insert_native_1 FORMAT JSONEachRow 
CREATE DATABASE IF NOT EXISTS test_zc1ysg5o 
CREATE DATABASE dictdb_01376;
SELECT toDecimal128OrNull(NULL);
SELECT dictIsIn('hierarchy_flat_dictionary', 2, 1);
SELECT WIDTH_BUCKET(Inf, 0, 10, 10);
DROP DATABASE IF EXISTS test_swv8yoz8 
SHOW CREATE TABLE numbers2;
INSERT INTO test_01193_18429.table_9_445 VALUES 
SELECT range(number) * 42 FROM numbers(5);
CREATE TABLE test_01193_18429.table_8_1 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Hello, world!' FROM merge_view_00270 LIMIT 5;
SELECT normalizeQuery('SELECT 1 AS xyz11');
INSERT INTO test_01193_18429.table_5_371 VALUES 
SELECT 'Running test stateless/00191_aggregating_merge_tree_and_final.sql from pid=1722' 
CREATE TABLE test_46742C204C3A284B587D2B652125404A465E6A647836216124707C6B7E433875485C497365243F2F(x UInt8) Engine=Memory;
CREATE TABLE geo (p Array(Tuple(Float64, Float64)), s String, id Int) engine=Memory();
SELECT 'IPv4 functions';
CREATE TABLE dt_overflow (`d` Date, `i` int) ENGINE = MergeTree PARTITION BY d ORDER BY i SETTINGS index_granularity = 6766, min_bytes_for_wide_part = 899072699, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 2842, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 203518, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 6147068198, index_granularity_bytes = 18273146, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 32568, primary_key_compress_block_size = 36932
select round(1000 * ngramSearchUTF8(materialize(''), materialize('')))=round(1000 * ngramSearchUTF8(materialize(''), '')) from system.numbers limit 5;
select formatRowNoNewline('Vertical', number, good) from (select number, 'good' as good from numbers(3));
CREATE TABLE test_2A3A22466B7979617A3244576B603E4457374A5D51503B3455712357763E4D4B2F405739784E6946(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00609_distributed_with_case_when_then.sql from pid=1713' 
INSERT INTO test_01193_18429.table_6_925 VALUES 
INSERT INTO test_01193_18429.table_3_87 VALUES 
SELECT CASE WHEN (col1 % 2) = 0 THEN 'foo' WHEN (col1 % 3) = 0 THEN col3 ELSE toFixedString('baz', 16) END FROM multi_if_check;
INSERT INTO test_01193_18429.table_2_394 VALUES 
SELECT coalesce([NULL], [NULL], [NULL]);
CREATE TABLE IF NOT EXISTS parallel_replicas_final (`x` String) ENGINE = ReplacingMergeTree ORDER BY x SETTINGS index_granularity = 64852, min_bytes_for_wide_part = 336559651, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 2297, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 27087759, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 8815, primary_key_compress_block_size = 82677
select (b, b) in (select b, b from tab_00386) from tab_00386
CREATE TABLE test_01193_18429.table_5_120 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT transform(3, [-1, 2], [11, 22], 33);
CREATE TABLE test_7070705670235E7E414C3838584248782D414C2A54397E6F53414D5058333147682138635C77244A(x UInt8) Engine=Memory;
SELECT multiIf((number % 2) = 0, [toInt16(1), toInt16(2)], (number % 3) = 0, [toUInt8(2), toUInt8(3)], [toFloat32(3), toFloat32(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_70345B41557A6F2877415B4F632151736B774F4E463E333350247D352B3B332529657731535E7653(x UInt8) Engine=Memory;
SELECT date_trunc('year', toDateTime64('2020-01-01 20:11:22.123', 3, 'Europe/London'), 'Asia/Tokyo');
SELECT 'r1' FROM system.zookeeper WHERE path IN ('/clickhouse/' || currentDatabase() || '/01700_system_zookeeper_path_in/' || getMacro('shard') || '/replicas') AND name LIKE '%' || getMacro('replica') || '%' ORDER BY name;
CREATE TABLE aggr (`n` int, `s` AggregateFunction(max, String)) ENGINE = MergeTree ORDER BY n SETTINGS index_granularity = 2759, min_bytes_for_wide_part = 604255012, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 822, prefer_fetch_merged_part_size_threshold = 5847443544, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 634718291, index_granularity_bytes = 27252418, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 30416, primary_key_compress_block_size = 29169
CREATE FUNCTION 02101_test_function AS x -> x + 1;
SELECT '\xED\x20\xA8' AS s FORMAT XML;
CREATE TABLE test_01193_18429.table_9_723 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'Running test stateless/00541_to_start_of_fifteen_minutes.sql from pid=1726' 
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toUInt16(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
INSERT INTO test_7zv1ifdo.async_insert_mt_test SETTINGS async_insert = 1, wait_for_async_insert = 1, async_insert_busy_timeout_min_ms = 10, async_insert_busy_timeout_max_ms = 500, async_insert_busy_timeout_increase_rate = 1., async_insert_busy_timeout_decrease_rate = 1. FORMAT Values
CREATE TABLE test_246066282D4D7861506934212329334379326C237540656B6B3232212B793F7A636731587C385672(x UInt8) Engine=Memory;
CREATE TABLE test_6F357B3544555139692E4E782A4146296462556B6D6A48477177656427364B65226F6141645B6C6D(x UInt8) Engine=Memory;
INSERT INTO user VALUES 
SELECT date, argMax(name, clicks) FROM lc GROUP BY date;
SELECT extractURLParameterNames('');
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c0) AND c6) OR ((NOT c0)) OR ((NOT c3) AND c0 AND (NOT c9) AND (NOT c8) AND (NOT c0)) SETTINGS convert_query_to_cnf = 0
CREATE TABLE tskv (text String) ENGINE = Memory
CREATE TABLE test_01193_18429.table_10_840 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT count(1) FROM test_table PREWHERE 7 / (n % 5) > 2 WHERE (n % 33) == 0;
CREATE DATABASE IF NOT EXISTS test_30533d8t 
CREATE TABLE test_544A35473E75366E545664685F5B304B4E274B66362F61686B7A3C2D766655674C72704E785D5C48(x UInt8) Engine=Memory;
ATTACH TABLE merge_tree_pk;
EXPLAIN SYNTAX SELECT max(n * -2), max(-2 * n), max(n / -2), max(-1 / n) FROM (SELECT number n FROM numbers(10));
CREATE TABLE test_02908_r2_130 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_130', 'r2') ORDER BY tuple()
CREATE TABLE test_3B3A573C4A492255653D215C716C3D7D41335D703B445771584E5C5467505A617D4A3C517878663B(x UInt8) Engine=Memory;
select 1 = multiSearchAny(materialize('abcdefgh'), ['ab']) from system.numbers limit 10;
CREATE TABLE test_3A6C3D314234205479535B57442A472968552C6B294965272A43246A6F46505334496F6956405238(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_4_646 VALUES 
INSERT INTO test_01193_18429.table_6_62 VALUES 
SELECT INTERVAL 2 days;
alter table many_mutations delete where y = 344 * 2 settings mutations_sync = 0;
CREATE TABLE test_01193_18429.table_6_276 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
OPTIMIZE TABLE concurrent_mutate_kill FINAL
CREATE TABLE test_316B31476C41677A62287D44502C686C487341394C60794B3B5D7E7B3A73312C572A526179336477(x UInt8) Engine=Memory;
SELECT intDiv(materialize(1), CAST(1, 'Nullable(Decimal(7, 2))'));
CREATE TABLE test_01193_18429.table_5_72 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT a from where_qualified WHERE where_qualified.b;
SELECT '-- Throw exception with query cache enabled';
select * from test_02381_compress where a = 10000 limit 1;
SELECT 29
select makeDate32(2299,1,1);
INSERT INTO test_01193_18429.table_8_429 VALUES 
SELECT sum(a) == 2 + 3 + 4 FROM t1 FULL JOIN t2 ON (t1.a + t1.b = t2.a + t2.b - 100) WHERE t1.b < 105 AND t2.b > 201;
SELECT covarSampMatrix(a_value, b_value, c_value, d_value) FROM (select a_value, b_value, c_value, d_value from fh limit 1);
CREATE TABLE test_01193_18429.table_3_93 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP TABLE IF EXISTS merge_item_16
SELECT count() FROM date_test_table WHERE toUInt16(val) == 1;
DROP TABLE IF EXISTS test_02504;
select 0 = isValidUTF8(toFixedString('\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xF1', 32)) from system.numbers limit 10;
CREATE TABLE test_48494935602E3C625F452A724E2D2624613E443E204C67582E302220235F343577685F463E416D74(x UInt8) Engine=Memory;
DESC file('/var/lib/clickhouse/user_files/02661_read_from_archive_test_5hkep204_tzst_archive*.tzst :: 02661_read_from_archive_test_5hkep204_tzst_data{2..3}.csv')
INSERT INTO test_01193_18429.table_8_662 VALUES 
SELECT date, value FROM local_00952;
select count(ignore(*)) from data_02051 settings min_bytes_to_use_direct_io=0, local_filesystem_read_method='io_uring', local_filesystem_read_prefetch=1, read_priority=0, max_read_buffer_size=65505 ;
SELECT *, * APPLY toTypeName FROM ( SELECT * FROM (SELECT 1 :: Int32 as a) t1 FULL JOIN (SELECT 2 :: UInt32 as a) t2 USING (a) ) ORDER BY 1;
select 0 = multiSearchAnyCaseInsensitiveUTF8(materialize('ÃÂºÃÂ´ÃÂÃÂÃÂ¢ÃÂ©ÃÂµÃÂÃÂÃÂÃÂ¹ÃÂÃÂ©ÃÂ¦ÃÂÃÂ¸ÃÂÃÂÃÂÃÂ'), ['ÃÂÃÂÃÂ', 'ÃÂÃÂ§ÃÂ©ÃÂ©ÃÂ¸ÃÂÃÂÃÂÃÂ¹ÃÂ¦ÃÂÃÂ ÃÂµÃÂÃÂÃÂÃÂ¿ÃÂ¾ÃÂÃÂÃÂÃÂÃÂ±ÃÂÃÂÃÂ¤ÃÂ¸ÃÂ¾', 'ÃÂ¼ÃÂÃÂÃÂ¸ÃÂ¦ÃÂ ÃÂ¾ÃÂÃÂÃÂÃÂÃÂ±ÃÂ¡ÃÂ»ÃÂÃÂ·ÃÂ¸ÃÂÃÂ§ÃÂÃÂÃÂ¤ÃÂµÃÂ²ÃÂ¢ÃÂ¼ÃÂ¸ÃÂ¶ÃÂÃÂ', 'ÃÂÃÂÃÂ³ÃÂ½ÃÂÃÂ¨ÃÂÃÂÃÂ¢ÃÂÃÂÃÂÃÂÃÂÃÂÃÂ¨ÃÂ¦ÃÂ ÃÂ¨ÃÂ ÃÂ', 'ÃÂÃÂ°ÃÂ°ÃÂ±ÃÂ ÃÂÃÂÃÂÃÂÃÂ¿ÃÂÃÂ°ÃÂÃÂÃÂÃÂ¿ÃÂÃÂÃÂÃÂÃÂ¸ÃÂ²ÃÂ¦ÃÂµÃÂÃÂ', 'ÃÂ¼ÃÂ¿ÃÂÃÂÃÂÃÂÃÂµÃÂÃÂÃÂ£ÃÂ³ÃÂ ÃÂÃÂÃÂ¸ÃÂ½ÃÂ·ÃÂÃÂÃÂÃÂ¸ÃÂÃÂ¨', 'ÃÂ©ÃÂ¶ÃÂÃÂ¹ÃÂ¨ÃÂÃÂ¿ÃÂ³ÃÂ»ÃÂ»ÃÂÃÂ£', 'ÃÂ¿ÃÂÃÂÃÂÃÂÃÂÃÂ ÃÂ¥ÃÂÃÂ¶ÃÂÃÂ¡', 'ÃÂ½ÃÂ±ÃÂÃÂÃÂÃÂ¨ÃÂÃÂ', 'ÃÂ¹ÃÂÃÂ ÃÂÃÂÃÂ¸ÃÂ¾ÃÂÃÂ°ÃÂÃÂ ÃÂÃÂ²ÃÂ½ÃÂÃÂÃÂÃÂÃÂµÃÂºÃÂ·ÃÂÃÂºÃÂÃÂ¢', 'ÃÂ ÃÂÃÂ¼ÃÂ¦ÃÂ¼ÃÂ½ÃÂ¢ÃÂÃÂ©ÃÂºÃÂÃÂ¢ÃÂÃÂ¸ÃÂ¥ÃÂÃÂÃÂºÃÂ¦ÃÂÃÂ ', 'ÃÂÃÂ¼ÃÂÃÂÃÂ±ÃÂÃÂÃÂÃÂÃÂ¦ÃÂ¹ÃÂ°ÃÂÃÂÃÂ²ÃÂ·ÃÂÃÂÃÂ¼ÃÂÃÂÃÂÃÂÃÂÃÂ¼ÃÂÃÂÃÂÃÂ', 'ÃÂÃÂ¦ÃÂ¥ÃÂ ÃÂÃÂ ÃÂ¼ÃÂºÃÂ¶ÃÂ¼ÃÂ ÃÂÃÂÃÂÃÂ', 'ÃÂ·', 'ÃÂ»ÃÂÃÂ¢ÃÂºÃÂ¿ÃÂºÃÂ´ÃÂÃÂÃÂÃÂÃÂ¶ÃÂÃÂÃÂ¾', 'ÃÂÃÂ¢ÃÂÃÂÃÂ¹ÃÂ³ÃÂÃÂÃÂ·ÃÂ£ÃÂ¢ÃÂÃÂ©', 'ÃÂÃÂÃÂÃÂ±ÃÂÃÂ¿ÃÂÃÂ', 'ÃÂÃÂÃÂ¾ÃÂ¾ÃÂ¨ÃÂ¿ÃÂ¦ÃÂ¼ÃÂÃÂÃÂÃÂÃÂÃÂ²ÃÂÃÂ']) from system.numbers limit 10;
INSERT INTO test_01193_18429.table_9_115 VALUES 
select hasAll([], [NULL]);
INSERT INTO test_01193_18429.table_10_445 VALUES 
CREATE DATABASE IF NOT EXISTS test_x9eltavm 
INSERT INTO test_01193_18429.table_5_36 VALUES 
SELECT CAST(database, 'Nullable(String)') AS ndb FROM system.tables WHERE ndb LIKE '%' format Null;
SELECT DISTINCT substr(new_part_name, 1, position(new_part_name, '_') - 1) AS partition_id FROM system.replication_queue WHERE (database = currentDatabase()) AND (table LIKE 'alter_table_%') AND (last_exception LIKE '%No active replica has part%') AND (partition_id NOT IN ( SELECT partition_id FROM system.parts WHERE (database = currentDatabase()) AND (table LIKE 'alter_table_%') ))
SELECT count() FROM test WHERE x = '100000';
INSERT INTO test_01193_18429.table_7_993 VALUES 
CREATE TABLE test_01193_18429.table_9_969 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Running test stateless/02908_table_ttl_dependency.sh from pid=1718' 
CREATE TABLE test_01193_18429.table_4_15 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select arrayShiftRight(['a', 'b', 'c', 'd', 'e'], 3);
KILL MUTATION WHERE mutation_id='0000000050' and table='concurrent_mutate_kill' and database='test_ivy0esel'
SHOW CREATE POLICY sqllt_policy FORMAT Null;
CREATE TABLE test_462F3A5C786A6B593A38395C6D7C6123237E2D3C5B5E732877703A6761635B60465E6C4F55664B28(x UInt8) Engine=Memory;
DETACH TABLE new_syntax_01071_test;
SELECT 'Running test stateless/00353_join_by_tuple.sql from pid=1722' 
DROP DATABASE IF EXISTS test_drypyxx2 
SELECT 'Running test stateless/01117_comma_and_others_join_mix.sql from pid=1718' 
SELECT hex(toInt16(100)) AS res;
CREATE DATABASE IF NOT EXISTS test_oxbcx723 
CREATE TABLE without_fixed_size_columns_replica2 (`s` String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test/without_fixed_size_columns_00502', '2') PARTITION BY length(s) ORDER BY s SETTINGS index_granularity = 51693, min_bytes_for_wide_part = 334324242, ratio_of_defaults_for_sparse_serialization = 0.8895542621612549, replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 10896, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 7036590958, index_granularity_bytes = 19358850, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 84164, primary_key_compress_block_size = 18504
DROP TABLE IF EXISTS pk_test4;
select * from values([[1, 2, 3], [1.1, 2.2, 3.3]]);
CREATE DATABASE IF NOT EXISTS test_d7ba1km5 
SELECT value, time, round(exp_smooth, 3) FROM (SELECT number AS value, number AS time, exponentialTimeDecayedCount(1)(time) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS exp_smooth FROM numbers(10));
CREATE INDEX idx_tab2_1 ON tab2 (col0,col3 DESC,col1);
select toMonday(toDateTime(0, 'Africa/Monrovia'));
SELECT toInt64(0) AS x, toInt32(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
SELECT multiIf((number % 2) = 0, toInt32(1), (number % 3) = 0, toFloat64(2), toInt16(3)) FROM system.numbers LIMIT 10;
INSERT INTO r5 SELECT 75
SELECT countIf(case = 1) > 0 AND countIf(case = 2) > 0 FROM mv LIMIT 1;
SELECT x FROM a UNION ALL SELECT x FROM c;
CREATE TABLE test_626F3D46493D2F46765B3C7D3238626D4531574B61394D65343B22647D473864683452474A5B734B(x UInt8) Engine=Memory;
SELECT a, b, c, d, e FROM t_fixed_prefix WHERE a = 1 AND b = 1 ORDER BY a, b, c, d, e SETTINGS optimize_read_in_order = 1
INSERT INTO test_01193_18429.table_6_474 VALUES 
DROP DATABASE IF EXISTS test_a31ez33r 
SELECT largestTriangleThreeBuckets(NULL, NULL);
SELECT id, toTypeName(id), value, toTypeName(value), d.id, toTypeName(d.id) , d.values, toTypeName(d.values) FROM ( SELECT 1 AS id, 2 AS value ) a SEMI LEFT JOIN ( SELECT 1 AS id, 3 AS values ) AS d USING id;
DROP TABLE IF EXISTS arrays_test;
select runningDifference(x) from (select arrayJoin([0, 1, 5, 10, 170141183460469231731687303715884105727]::Array(Int128)) as x);
SELECT `x` FROM generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8)))))))))))))))))))))', 1, 1, 1) LIMIT 1
INSERT INTO test_01193_18429.table_9_409 VALUES 
SELECT 'tn1 ANY INNER JOIN tn2 | bs = 1';
ALTER TABLE sqllt.table DELETE WHERE i > 65535;
INSERT INTO test_01193_18429.table_10_608 VALUES 
CREATE DATABASE IF NOT EXISTS test_37v0bhhk 
SELECT sumIf(1, 1);
INSERT INTO test_01193_18429.table_2_873 VALUES 
SHOW CREATE TABLE system.query_log
desc format(CSV, '"[123, 123]"\n"[321.321, 312]"');
WITH 'aes-256-gcm' AS mode, 'test_key________________________' AS key, 'test_iv_____' AS iv SELECT mode, hex(encrypt(mode, '[HIDDEN]'))
SELECT pow(NULL, NULL);
select v, variantElement(v, 'UInt32') from format(TSV, 'v Variant(String, UInt32, Int64)', '\\N\nstring\n-1\n0\n10000000000\n42d42') format TSV;
select 'dictGetOrDefault', 'hashed_ints' as dict_name, toUInt64(0) as k, dictGetOrDefault(dict_name, 'i8', k, toInt8(42)), dictGetOrDefault(dict_name, 'i16', k, toInt16(42)), dictGetOrDefault(dict_name, 'i32', k, toInt32(42)), dictGetOrDefault(dict_name, 'i64', k, toInt64(42)), dictGetOrDefault(dict_name, 'u8', k, toUInt8(42)), dictGetOrDefault(dict_name, 'u16', k, toUInt16(42)), dictGetOrDefault(dict_name, 'u32', k, toUInt32(42)), dictGetOrDefault(dict_name, ('i8', 'i16', 'i32'), k, (toInt8(42), toInt16(42), toInt32(42)));
CREATE DICTIONARY range_dictionary_nullable ( CountryID UInt64, CountryKey String, StartDate Date, EndDate Date, Tax Nullable(Float64) DEFAULT 0.2 ) PRIMARY KEY CountryID, CountryKey SOURCE(CLICKHOUSE(TABLE 'date_table')) LIFETIME(MIN 1 MAX 1000) LAYOUT(COMPLEX_KEY_RANGE_HASHED()) RANGE(MIN StartDate MAX EndDate);
INSERT INTO test_01193_18429.table_1_708 VALUES 
INSERT INTO test_01193_18429.table_7_927 VALUES 
INSERT INTO test_01193_18429.table_8_408 VALUES 
select addMilliseconds(toDateTime64('1930-12-12 12:12:12.123', 3), 1);
DROP DATABASE IF EXISTS test_zlw31hy7 
DROP TABLE array_jaccard_index;
SELECT a, b, c FROM t_fixed_prefix ORDER BY a, b, c SETTINGS optimize_read_in_order = 0
DROP TABLE src_a
CREATE TABLE mt ORDER BY n AS SELECT 1 as n;
CREATE DATABASE IF NOT EXISTS test_13545y4r 
INSERT INTO test_01193_18429.table_8_223 VALUES 
CREATE TABLE bloom_filter_array_offsets_lc_str (`order_key` int, `str` Array(LowCardinality(String)), INDEX idx str TYPE bloom_filter(1.) GRANULARITY 1024) ENGINE = MergeTree ORDER BY order_key SETTINGS index_granularity = 1024, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 9045, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 74651, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 3414402093, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 36268, primary_key_compress_block_size = 59407
insert into test select number, toString(number) from numbers(1000000);
CREATE TABLE test_3E695833684A5D305D5E45673D3558506C7D52212A2637782E433F4E65204142302532524C326D2E(x UInt8) Engine=Memory;
CREATE TABLE test_623A33443D5E79606A26313D312873662C556741706E4B5D277C20454A375249455F235D27774D2D(x UInt8) Engine=Memory;
SELECT count() FROM t_cnf_fuzz WHERE (c6 AND c0 AND c2 AND (NOT c7)) OR ((NOT c9) AND (NOT c2) AND (NOT c4) AND c2 AND (NOT c6)) OR (c2 AND c1 AND (NOT c8) AND c0) OR (c7 AND c6 AND (NOT c9)) OR (c7 AND (NOT c5) AND c8 AND (NOT c4)) OR ((NOT c9)) OR (c9) OR (c9 AND c9 AND c1 AND c0 AND c9) OR ((NOT c5) AND c7) SETTINGS convert_query_to_cnf = 0
DROP TABLE IF EXISTS numbers_10_00290;
with (select uuid from system.tables where database = currentDatabase() and table = 'data_02491') as table_uuid_ select table_uuid != toUUIDOrDefault(Null), event_type, merge_reason, part_name from system.part_log where database = currentDatabase() and table = 'data_02491' and table_uuid = table_uuid_ order by event_time_microseconds;
SELECT nullIf(number, 2) IN (1, 2, 3) FROM system.numbers LIMIT 5;
CREATE TABLE test_01193_18429.table_10_8 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_6_920 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE mt(colA String, colB String) ENGINE=MergeTree ORDER BY tuple();
select v, variantElement(v, 'Decimal64(6)') from format(Values, 'v Variant(String, Decimal64(6))', '(NULL), (''string''), (42.42)') format Values;
select 0 = multiMatchAny(materialize('abc'), []::Array(String)) from system.numbers limit 5;
INSERT INTO src VALUES /* (76, 1) */ 
SELECT * FROM numbers(10) LIMIT 5 OFFSET 2;
CREATE TABLE t1 (`c0` Int32) ENGINE = MergeTree PRIMARY KEY c0 SETTINGS index_granularity = 58013, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 7, merge_max_block_size = 17921, prefer_fetch_merged_part_size_threshold = 4246951679, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 18218251, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 52008, primary_key_compress_block_size = 63962
CREATE TABLE test_36614B75724830633124554D5367632B295759547B422F6A406C37325A292E225E735C2E69365326(x UInt8) Engine=Memory;
INSERT INTO r9 SELECT 19 % 10 = 9 ? 19 - 1 : 19
SELECT 1 UNION DISTINCT SELECT 1 UNION ALL SELECT 1;
SELECT count(), sum(n), sum(toInt64(s)), max(n), min(n) FROM dst;
ALTER TABLE concurrent_alter_column ADD COLUMN c337 DOUBLE;
CREATE TABLE test_71525C6664316B666A5B41456324214C77512A782F446E24316F2D2B6F763F25217B61394669376E(x UInt8) Engine=Memory;
SHOW CREATE TABLE comment_test_table;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c2)) OR (c8 AND (NOT c8)) OR ((NOT c3) AND c7 AND (NOT c7)) OR ((NOT c0) AND c7 AND (NOT c5)) OR ((NOT c2) AND c1 AND (NOT c8)) OR (c0 AND (NOT c3) AND (NOT c9) AND (NOT c6)) OR (c0) OR (c9 AND (NOT c0) AND c2 AND (NOT c8) AND c6) OR ((NOT c4)) SETTINGS convert_query_to_cnf = 1
DROP TABLE 01069_window_view_proc_tumble_watch.mt
CREATE TABLE test_44544A41273C71302C2B396C79695B4C314B3C25314B764C5D6A5E5C3325563F567052665B6B2D63(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_4_119 VALUES 
select polygonsEqualsCartesian([[[(1., 1.),(1., 4.),(4., 4.),(4., 1.)]]], [[[(1., 1.),(1., 4.),(4., 4.),(4., 1.),(1., 1.)]]]);
INSERT INTO test_01193_18429.table_7_263 VALUES 
CREATE TABLE test_01193_18429.table_10_250 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE INDEX idx_tab3_0 ON tab3 (col4 DESC,col0 DESC);
SELECT mortonDecode(NULL, NULL);
SELECT 'Running test stateless/00423_storage_log_single_thread.sql from pid=1724' 
SELECT 'Running test stateless/00668_compare_arrays_silviucpp.sql from pid=1726' 
DROP DATABASE IF EXISTS test_1tccssra 
SELECT toFloat64(number * number) * -1 y, toDecimal32(y, 1), toDecimal64(y, 2), toDecimal128(y, 6), toDecimal256(y, 7) FROM numbers_mt(10) ORDER BY number;
SELECT indexHint(-1);
CREATE TABLE test_01193_18429.table_4_623 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_k5u9ljs3 
SELECT * FROM tbl
CREATE DATABASE IF NOT EXISTS test_7l0pd4gw 
CREATE TABLE test_01193_18429.table_6_286 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_6F2B244D2F407169696D5177285B486A73733B6F5D205C2E357B7D727E75305551322B31496E333F(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01014_lazy_database_basic.sh from pid=1705' 
CREATE TABLE test_2F6964666E4C5C6F6D64446C63682B557C33303A2D74484D6779655369596F384B2264637632393B(x UInt8) Engine=Memory;
SELECT proportionsZTest(sx, sy, tx, ty, 0.95, 'unpooled') FROM proportions_ztest;
SELECT hex(toInt128(100000000000)) AS res;
CREATE TABLE test_01193_18429.table_4_906 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TEMPORARY TABLE t4_02271 (x INT(11) SIGNED);
CREATE TABLE merge_storage (d Int8) ENGINE = Merge('test_abrub28b', '^merge_item_')
SELECT javaHashUTF16LE(NULL, NULL);
INSERT INTO test_01193_18429.table_8_986 VALUES 
CREATE TABLE test_58533F723D6C252F7C3B6F7E2E335C5D6C5D2E3474507D73313D6A2E47623039273A603738223372(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_2_361 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT DISTINCT t1.key, toUInt8(t1.id) as e FROM t1 INNER ANY JOIN t2 ON t1.id == t2.id AND toUInt8(e + 1);
SELECT throwIf((SELECT sum(nm) FROM mv) != 4) FORMAT Null;
select arr1, 2, l, arraySlice(arr1, 2, l) from array_functions;
SELECT 'Running test stateless/01632_group_array_msan.sql from pid=1713' 
INSERT INTO test_01193_18429.table_1_159 VALUES 
INSERT INTO r6 SELECT 85 % 10 = 6 ? 85 - 1 : 85
SELECT '61f0c404-5cb3-11e7-907b-a6006ad3dba0' < toUUID('61f0c404-5cb3-11e7-907b-a6006ad3dba0');
DROP DATABASE IF EXISTS test_t3qnhv65 
CREATE TABLE IF NOT EXISTS t2 (x UInt64, s Array(Nullable(String))) ENGINE = StripeLog
CREATE DATABASE IF NOT EXISTS test_ftnbuvp3 
INSERT INTO test_01193_18429.table_6_61 VALUES 
SELECT t.t as e, toTypeName(e) FROM nnna FULL JOIN nnnb USING (t.t.t.t.t);
/* toStartOfInterval */ SELECT 'toStartOfInterval';
OPTIMIZE TABLE dict;
SELECT -nan = toInt8(0), -nan != toInt8(0), -nan < toInt8(0), -nan > toInt8(0), -nan <= toInt8(0), -nan >= toInt8(0);
CREATE TABLE test_2D5D5253397B2375444543556A5E333653517745793D58283D77592F22745E397C7E255272676B66(x UInt8) Engine=Memory;
SELECT ngramSimHashUTF8(NULL, NULL);
SELECT 'tn1 ALL RIGHT JOIN tn2 | bs = 9';
select 'Char' as mysql_type, cast(44 as char) as result, toTypeName(result) as native_type;
SELECT count() FROM t_cnf_fuzz WHERE (c4 AND (NOT c2) AND c9 AND c4 AND c3) OR ((NOT c5) AND c2) OR ((NOT c5)) OR (c9 AND c6 AND (NOT c0)) OR (c7 AND c5 AND c5 AND (NOT c6)) OR ((NOT c7) AND (NOT c4) AND (NOT c6)) OR ((NOT c0)) OR (c5 AND c0) OR ((NOT c1)) SETTINGS convert_query_to_cnf = 0
SELECT count() FROM t_cnf_fuzz WHERE (c8) OR (c3 AND (NOT c1) AND c8 AND c4) OR ((NOT c0)) OR (c6 AND c0 AND (NOT c0)) OR ((NOT c0) AND (NOT c6) AND c6 AND c8) OR (c6) SETTINGS convert_query_to_cnf = 0
SELECT multiIf((number % 2) = 0, [toUInt8(1), toUInt8(2)], (number % 3) = 0, [toFloat64(2), toFloat64(3)], [toFloat64(3), toFloat64(3)]) FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_34l6vt0l 
CREATE TABLE test_02908_r1_180 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_180', 'r1') ORDER BY tuple()
INSERT INTO dst VALUES /* (17, 4) */ 
SELECT a.*, b.* FROM ( SELECT number AS k FROM system.numbers LIMIT 10 ) AS a ANY LEFT JOIN ( SELECT number * 2 AS k, number AS joined FROM system.numbers LIMIT 10 ) AS b USING k ORDER BY k;
insert into test select number + 9, number % 2 ? CAST(NULL, 'Variant(String, UInt64, LowCardinality(String), Tuple(a UInt32, b UInt32), Array(UInt64))') : CAST(('lc_str_' || toString(number))::LowCardinality(String), 'Variant(String, UInt64, LowCardinality(String), Tuple(a UInt32, b UInt32), Array(UInt64))') from numbers(3);
CREATE DATABASE IF NOT EXISTS test_o6yphjc6 
INSERT INTO test_01193_18429.table_10_205 VALUES 
SELECT '*** With an ALIAS column ***';
INSERT INTO r9 SELECT 28
SELECT name, length(attribute.names), element_count, round(load_factor, 4) FROM system.dictionaries WHERE database = currentDatabase() AND name = 'dict_sharded';
DROP DATABASE IF EXISTS test_4ykbeqzu 
INSERT INTO test_01193_18429.table_1_144 VALUES 
alter table many_mutations delete where y = 644 * 2 settings mutations_sync = 0;
SELECT count() FROM t_cnf_fuzz WHERE (c7 AND c7 AND (NOT c7) AND c5) OR ((NOT c3) AND c6 AND c1 AND c3 AND c7) OR (c5 AND c2) OR ((NOT c6) AND (NOT c7) AND c9 AND (NOT c4) AND (NOT c2)) OR (c8 AND (NOT c6) AND c5) SETTINGS convert_query_to_cnf = 0
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toInt16(2) ELSE toFloat64(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_5449386B7242572966246A5558502B6330683C605E3F77635D652F3354336744433547784B485B5F(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00758_array_reverse.sql from pid=1720' 
INSERT INTO limit_by (Num, Name) VALUES 
CREATE TABLE test_786E42572A3758693D7A586B6646306E2E6E266C4D3F33393E60656749353D655F58605F53597734(x UInt8) Engine=Memory;
SET join_algorithm = 'hash';
ALTER TABLE minmax_compact CLEAR INDEX idx IN PARTITION 1;
CREATE TABLE test_01193_18429.table_9_628 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_8_509 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select table from system.dropped_tables where table = '02681_undrop_log' limit 1;
SELECT 7, 12, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (7 < 13 AND 12 > 0 ? 7 : 0)), throwIf(last != (7 < 13 AND 12 > 0 ? least(13 - 1, 7 + 12 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 7, 12);
CREATE TABLE sequence ( userID UInt64, eventType Enum8('A' = 1, 'B' = 2, 'C' = 3, 'D' = 4), EventTime UInt64 ) ENGINE = Memory;
SELECT count() FROM t_cnf_fuzz WHERE (c1 AND c2) OR ((NOT c8) AND c6 AND (NOT c1) AND (NOT c4) AND c1) OR (c9 AND (NOT c8) AND (NOT c9)) OR (c8 AND (NOT c4) AND (NOT c0) AND (NOT c2)) SETTINGS convert_query_to_cnf = 1
INSERT INTO test_01193_18429.table_9_281 VALUES 
CREATE TABLE test_01193_18429.table_5_547 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_4464286A3623765D706343207735707261527B44385C344D5151295F5554252747594C3244376055(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_u2322u2x 
select JSONArrayLength('[{"a":123},{"b":"hello"}]');
INSERT INTO right SELECT number, toString(number) FROM numbers(131015);
INSERT INTO join_string_key VALUES 
DROP TABLE numbers3;
SELECT toMinute(toDateTime(1412106600), 'Asia/Tokyo');
select round(1000 * ngramSearchCaseInsensitiveUTF8('ÃÂ°ÃÂ±ÃÂ²ÃÂÃÂÃÂÃÂÃÂ¶ÃÂ·', materialize('ÃÂÃÂ±ÃÂ²ÃÂ³ÃÂ´ÃÂÃÂÃÂ¶ÃÂ·'))) = round(1000 * ngramSearchCaseInsensitiveUTF8(materialize('ÃÂ°ÃÂ±ÃÂ²ÃÂÃÂÃÂÃÂÃÂ¶ÃÂ·'), 'ÃÂÃÂ±ÃÂ²ÃÂ³ÃÂ´ÃÂÃÂÃÂ¶ÃÂ·')) from system.numbers limit 5;
SET data_type_default_nullable='true';
CREATE DATABASE IF NOT EXISTS test_c67upi2n 
SELECT 'Running test stateless/02483_add_engine_full_column_to_system_databases.sql from pid=1705' 
INSERT INTO test_01193_18429.table_10_846 VALUES 
CREATE TABLE test_3E72475764446F6A6A2F58604D5873377C44402324542D274D68304F532B2E266C4E43262A5A6769(x UInt8) Engine=Memory;
select number, neighbor(number, -1, 1000) from numbers(3);
CREATE TABLE test_01193_18429.table_8_79 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT dictGetOrDefault('hashed_array_dictionary_complex_key_complex_attributes', 'value_first', (number, concat('id_key_', toString(number))), toString('default')) as value_first, dictGetOrDefault('hashed_array_dictionary_complex_key_complex_attributes', 'value_second', (number, concat('id_key_', toString(number))), toString('default')) as value_second FROM system.numbers LIMIT 4;
ALTER TABLE dst_7 DROP PARTITION 3
CREATE TABLE local_01099_a (`number` UInt64) ENGINE = MergeTree ORDER BY number SETTINGS index_granularity = 31790, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 17617, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 11138692, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 69969, primary_key_compress_block_size = 80967
CREATE TABLE wrong_metadata_compact( a UInt64, b UInt64, c UInt64 ) ENGINE ReplicatedMergeTree('/test/{database}/tables/wrong_metadata_compact', '1') ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 10000000
CREATE TABLE test_5E792B3A652A2C797A46475C704F5A533F404E7447483E717954582A4422352A312D77664A626167(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_9_794 VALUES 
ALTER TABLE concurrent_alter_column ADD COLUMN c146 DOUBLE;
SELECT throwIf((SELECT (count(), sum(n)) FROM merge(currentDatabase(), '') WHERE type=3) != (12 + 1, 78 + 13)) FORMAT Null
CREATE TABLE t0 (`x` UInt32, `y` UInt64) ENGINE = MergeTree ORDER BY (x, y) SETTINGS index_granularity = 61280, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 9994, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 272414, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 4525608, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 58394, primary_key_compress_block_size = 72295
SELECT 'Running test stateless/00994_table_function_numbers_mt.sql from pid=1724' 
INSERT INTO test_01193_18429.table_9_713 VALUES 
DROP TABLE IF EXISTS t4;
SELECT arrayFilter(x -> notEmpty(concat(x, 'hello')), ['']) FROM system.one ARRAY JOIN [0] AS elem, arrayMap(x -> concat(x, 'hello'), ['']) AS unused WHERE NOT ignore(elem);
CREATE TABLE test_01193_18429.table_2_792 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO src VALUES /* (-57, 2) */ 
CREATE TABLE test_694B66705E3C53284A426C7920316C6B613A616F6E383A7E542A786D695E207E71204C7967526651(x UInt8) Engine=Memory;
SELECT * FROM 01753_dictionary_db.direct_dictionary_simple_key_complex_attributes;
SELECT partition, name, rows FROM system.parts WHERE database = currentDatabase() AND table = 'without_fixed_size_columns_replica2' AND active ORDER BY name;
INSERT INTO test_01193_18429.table_1_179 VALUES 
CREATE TABLE test_5A30317446257C523A2A5C2776565857267B3E4D29507E4A214039774F285A5961274A355E637A20(x UInt8) Engine=Memory;
SELECT m1, m2 FROM t_map_int_key;
DROP DATABASE IF EXISTS test_huk7b2af 
SELECT t1.id, t1.value, t2.value FROM test_table AS t1 INNER JOIN test_table_join AS t2 ON t1.id = t2.id WHERE t1.id = 0;
SELECT 't1 ALL RIGHT JOIN tn2 | bs = 9';
SELECT toUInt64(0) AS x, toDecimal32(1, 0) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
SELECT decodeXMLComponent(NULL);
alter table many_mutations delete where y = 944 * 2 settings mutations_sync = 0;
INSERT INTO test_01193_18429.table_9_760 VALUES 
EXPLAIN SYNTAX SELECT max(n*n + 1), max(1 + n*n), max(n*n - 1), max(1 - n*n) FROM (SELECT number n FROM numbers(10));
CREATE DICTIONARY simple_key_sparse_hashed_dictionary_01862 ( id UInt64, value String ) PRIMARY KEY id SOURCE(CLICKHOUSE(TABLE 'simple_key_source_table_01862')) LAYOUT(SPARSE_HASHED()) LIFETIME(MIN 0 MAX 1000);
SELECT 'Running test stateless/02882_replicated_fetch_checksums_doesnt_match.sql from pid=1722' 
CREATE DATABASE IF NOT EXISTS test_3bxmk0wt 
CREATE TABLE values_template_nullable (d Date, s Nullable(String), u Nullable(UInt8), a Array(Nullable(Float32))) ENGINE = Memory;
select parseDateTimeInJodaSyntax('7 am', 'H a', 'UTC') = toDateTime('1970-01-01 07:00:00', 'UTC');
SET max_block_size = 4213;
alter table many_mutations delete where y = 195 * 2 settings mutations_sync = 0;
SELECT count() FROM t_cnf_fuzz WHERE (c8 AND c2 AND c2) OR ((NOT c6) AND (NOT c8) AND (NOT c1) AND c6) OR (c4 AND (NOT c1) AND (NOT c4) AND (NOT c9)) OR ((NOT c5)) OR ((NOT c1) AND (NOT c9)) SETTINGS convert_query_to_cnf = 0
KILL QUERY WHERE 0 ASYNC
CREATE TABLE test_377E255B3D2323505F267C343D26726F504675247D74424A4C373077552D772F314570415D716E69(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_2_527 VALUES 
SELECT substring(cast('abcdefgh' AS FixedString(8)), -2, -1);
system sync replica test_1164_memory.r2;
SELECT 1 as x, roundDown(x, [1.5]);
CREATE DATABASE IF NOT EXISTS test_h7941qf0 
select accurateCastOrNull('true', 'Bool');
CREATE DATABASE IF NOT EXISTS test_p4nu301b 
INSERT INTO r2 SELECT 72
SELECT (1, '') IN ((1, ''));
SELECT 'Running test stateless/01062_alter_on_mutataion_zookeeper_long.sql from pid=1726' 
DROP DATABASE IF EXISTS test_ma0g5mkk 
insert into test_agg_proj select intDiv(number, 2), -intDiv(number,3) - 1 from numbers(100)
SELECT -.34e21;
CREATE DATABASE IF NOT EXISTS test_ow2nvi60 
CREATE TABLE test_01193_18429.table_2_673 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT * FROM test_tuple_filter WHERE (id, (id, id) = (1, NULL)) == (NULL, NULL);
SELECT number FROM remote('127.0.0.{2,3}', system, numbers) WHERE number GLOBAL IN (SELECT number FROM remote('127.0.0.{2,3}', system, numbers) WHERE number % 2 = 1 LIMIT 10) LIMIT 10;
SELECT rightPad('abc', 5), rightPad('abc', 5::Int32);
SELECT parseDateTime(NULL);
 DETACH TABLE test_lazy_01294_concurrent_test_qna5lrny.log; 
INSERT INTO r6 SELECT 11
DROP DATABASE IF EXISTS test_2wcexh3b 
CREATE TABLE IF NOT EXISTS t (`id` UUID, `d` DateTime) ENGINE = MergeTree PARTITION BY toDate(d) ORDER BY id SETTINGS index_granularity = 63596, min_bytes_for_wide_part = 339402687, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 21196, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 7746651998, index_granularity_bytes = 21058962, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 49933, primary_key_compress_block_size = 8162
CREATE TABLE test_01193_18429.table_10_791 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c0) AND (NOT c3) AND (NOT c4)) SETTINGS convert_query_to_cnf = 1
SELECT groupArrayMovingSum(10)(number) FROM numbers(100);
alter table many_mutations delete where y = 797 * 2 settings mutations_sync = 0;
SELECT formatReadableTimeDelta(-(1 + 3600 + 86400 + 30.5 * 86400 + 365 * 86400));
DROP DICTIONARY IF EXISTS database_dictionary_test_key_expression.test_query_log_dictionary_complex;
CREATE TABLE test_01193_18429.table_5_178 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_1_586 VALUES 
INSERT INTO r1 SELECT 33 % 10 = 1 ? 33 - 1 : 33
SELECT toStartOfInterval(toDate(17933), INTERVAL 1 month);
SELECT IPv4ToIPv6(NULL);
CREATE TABLE test_715221506D3566485D5E6973756D332E437E65763A6C40637A275678713F546E2F67596B3F586170(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS r3 SYNC;
CREATE DATABASE IF NOT EXISTS test_9jhytbrn 
CREATE DATABASE IF NOT EXISTS test_44d82x5r 
SYSTEM SYNC REPLICA src_10 STRICT
SELECT 'Running test stateless/02354_tuple_element_with_default.sql from pid=1715' 
select toStartOfInterval(toDateTime64('1980-12-12 12:12:12.123456', 6), INTERVAL 1 MICROSECOND);
CREATE TABLE test_01193_18429.table_2_611 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_9_607 VALUES 
SELECT generateULID(1) != generateULID(2), toTypeName(generateULID());
CREATE TABLE test_53643C2D7E215560646F295062574E3122705B2064574F7D286F4D555D624722262D33674A236D73(x UInt8) Engine=Memory;
SELECT sum(2 - float64) From test_table;
INSERT INTO test_01193_18429.table_3_698 VALUES 
CREATE TABLE test_01193_18429.table_5_300 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT -127, 4294967295, -127 = 4294967295, -127 != 4294967295, -127 < 4294967295, -127 <= 4294967295, -127 > 4294967295, -127 >= 4294967295, 4294967295 = -127, 4294967295 != -127, 4294967295 < -127, 4294967295 <= -127, 4294967295 > -127, 4294967295 >= -127 , toInt8(-127) = toUInt32(4294967295), toInt8(-127) != toUInt32(4294967295), toInt8(-127) < toUInt32(4294967295), toInt8(-127) <= toUInt32(4294967295), toInt8(-127) > toUInt32(4294967295), toInt8(-127) >= toUInt32(4294967295), toUInt32(4294967295) = toInt8(-127), toUInt32(4294967295) != toInt8(-127), toUInt32(4294967295) < toInt8(-127), toUInt32(4294967295) <= toInt8(-127), toUInt32(4294967295) > toInt8(-127), toUInt32(4294967295) >= toInt8(-127) , toInt8(-127) = toUInt64(4294967295), toInt8(-127) != toUInt64(4294967295), toInt8(-127) < toUInt64(4294967295), toInt8(-127) <= toUInt64(4294967295), toInt8(-127) > toUInt64(4294967295), toInt8(-127) >= toUInt64(4294967295), toUInt64(4294967295) = toInt8(-127), toUInt64(4294967295) != toInt8(-127), toUInt64(4294967295) < toInt8(-127), toUInt64(4294967295) <= toInt8(-127), toUInt64(4294967295) > toInt8(-127), toUInt64(4294967295) >= toInt8(-127) , toInt8(-127) = toInt64(4294967295), toInt8(-127) != toInt64(4294967295), toInt8(-127) < toInt64(4294967295), toInt8(-127) <= toInt64(4294967295), toInt8(-127) > toInt64(4294967295), toInt8(-127) >= toInt64(4294967295), toInt64(4294967295) = toInt8(-127), toInt64(4294967295) != toInt8(-127), toInt64(4294967295) < toInt8(-127), toInt64(4294967295) <= toInt8(-127), toInt64(4294967295) > toInt8(-127), toInt64(4294967295) >= toInt8(-127) , toInt16(-127) = toUInt32(4294967295), toInt16(-127) != toUInt32(4294967295), toInt16(-127) < toUInt32(4294967295), toInt16(-127) <= toUInt32(4294967295), toInt16(-127) > toUInt32(4294967295), toInt16(-127) >= toUInt32(4294967295), toUInt32(4294967295) = toInt16(-127), toUInt32(4294967295) != toInt16(-127), toUInt32(4294967295) < toInt16(-127), toUInt32(4294967295) <= toInt16(-127), toUInt32(4294967295) > toInt16(-127), toUInt32(4294967295) >= toInt16(-127) , toInt16(-127) = toUInt64(4294967295), toInt16(-127) != toUInt64(4294967295), toInt16(-127) < toUInt64(4294967295), toInt16(-127) <= toUInt64(4294967295), toInt16(-127) > toUInt64(4294967295), toInt16(-127) >= toUInt64(4294967295), toUInt64(4294967295) = toInt16(-127), toUInt64(4294967295) != toInt16(-127), toUInt64(4294967295) < toInt16(-127), toUInt64(4294967295) <= toInt16(-127), toUInt64(4294967295) > toInt16(-127), toUInt64(4294967295) >= toInt16(-127) , toInt16(-127) = toInt64(4294967295), toInt16(-127) != toInt64(4294967295), toInt16(-127) < toInt64(4294967295), toInt16(-127) <= toInt64(4294967295), toInt16(-127) > toInt64(4294967295), toInt16(-127) >= toInt64(4294967295), toInt64(4294967295) = toInt16(-127), toInt64(4294967295) != toInt16(-127), toInt64(4294967295) < toInt16(-127), toInt64(4294967295) <= toInt16(-127), toInt64(4294967295) > toInt16(-127), toInt64(4294967295) >= toInt16(-127) , toInt32(-127) = toUInt32(4294967295), toInt32(-127) != toUInt32(4294967295), toInt32(-127) < toUInt32(4294967295), toInt32(-127) <= toUInt32(4294967295), toInt32(-127) > toUInt32(4294967295), toInt32(-127) >= toUInt32(4294967295), toUInt32(4294967295) = toInt32(-127), toUInt32(4294967295) != toInt32(-127), toUInt32(4294967295) < toInt32(-127), toUInt32(4294967295) <= toInt32(-127), toUInt32(4294967295) > toInt32(-127), toUInt32(4294967295) >= toInt32(-127) , toInt32(-127) = toUInt64(4294967295), toInt32(-127) != toUInt64(4294967295), toInt32(-127) < toUInt64(4294967295), toInt32(-127) <= toUInt64(4294967295), toInt32(-127) > toUInt64(4294967295), toInt32(-127) >= toUInt64(4294967295), toUInt64(4294967295) = toInt32(-127), toUInt64(4294967295) != toInt32(-127), toUInt64(4294967295) < toInt32(-127), toUInt64(4294967295) <= toInt32(-127), toUInt64(4294967295) > toInt32(-127), toUInt64(4294967295) >= toInt32(-127) , toInt32(-127) = toInt64(4294967295), toInt32(-127) != toInt64(4294967295), toInt32(-127) < toInt64(4294967295), toInt32(-127) <= toInt64(4294967295), toInt32(-127) > toInt64(4294967295), toInt32(-127) >= toInt64(4294967295), toInt64(4294967295) = toInt32(-127), toInt64(4294967295) != toInt32(-127), toInt64(4294967295) < toInt32(-127), toInt64(4294967295) <= toInt32(-127), toInt64(4294967295) > toInt32(-127), toInt64(4294967295) >= toInt32(-127) , toInt64(-127) = toUInt32(4294967295), toInt64(-127) != toUInt32(4294967295), toInt64(-127) < toUInt32(4294967295), toInt64(-127) <= toUInt32(4294967295), toInt64(-127) > toUInt32(4294967295), toInt64(-127) >= toUInt32(4294967295), toUInt32(4294967295) = toInt64(-127), toUInt32(4294967295) != toInt64(-127), toUInt32(4294967295) < toInt64(-127), toUInt32(4294967295) <= toInt64(-127), toUInt32(4294967295) > toInt64(-127), toUInt32(4294967295) >= toInt64(-127) , toInt64(-127) = toUInt64(4294967295), toInt64(-127) != toUInt64(4294967295), toInt64(-127) < toUInt64(4294967295), toInt64(-127) <= toUInt64(4294967295), toInt64(-127) > toUInt64(4294967295), toInt64(-127) >= toUInt64(4294967295), toUInt64(4294967295) = toInt64(-127), toUInt64(4294967295) != toInt64(-127), toUInt64(4294967295) < toInt64(-127), toUInt64(4294967295) <= toInt64(-127), toUInt64(4294967295) > toInt64(-127), toUInt64(4294967295) >= toInt64(-127) , toInt64(-127) = toInt64(4294967295), toInt64(-127) != toInt64(4294967295), toInt64(-127) < toInt64(4294967295), toInt64(-127) <= toInt64(4294967295), toInt64(-127) > toInt64(4294967295), toInt64(-127) >= toInt64(4294967295), toInt64(4294967295) = toInt64(-127), toInt64(4294967295) != toInt64(-127), toInt64(4294967295) < toInt64(-127), toInt64(4294967295) <= toInt64(-127), toInt64(4294967295) > toInt64(-127), toInt64(4294967295) >= toInt64(-127) 
SELECT singleValueOrNull(NULL, NULL);
CREATE TABLE test_5D583F5B3179397C3F74417C72424961395A5F627D204A343C3C685025435965362E476B737E7A4E(x UInt8) Engine=Memory;
SELECT toUnixTimestamp(x) as tt, (toDateTime('2020-03-21 00:00:00', 'Asia/Tehran') + INTERVAL number * 600 SECOND) AS x, timezoneOffset(x) as res,(toDateTime(toString(x), 'UTC') - x ) AS calc FROM numbers(576) where res != calc;
DROP TABLE ttl_where;
SELECT LEAST([NULL], [0]);
SELECT varPopStable(NULL);
CREATE TABLE test_01193_18429.table_1_570 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT x, t, round(max, 12) FROM ( SELECT d[1] AS x, d[2] AS t, exponentialTimeDecayedMax(100)(-x, t) OVER w AS max FROM ( SELECT [[2, 1], [1, 2], [10, 3], [4, 4], [5, 5], [1, 6], [10, 7], [10, 8], [10, 9], [9.81, 10], [9.9, 11]] AS d ) ARRAY JOIN d WINDOW w AS (ORDER BY 1 ASC Rows BETWEEN 2 PRECEDING AND 2 FOLLOWING) );
CREATE TABLE t_1 (`order_0` UInt64, `ordinary_1` UInt32, `p_time` Date, `computed` ALIAS concat('computed_', CAST(p_time, 'String')), `granule` MATERIALIZED CAST(order_0 / 8192, 'UInt64') % 3, INDEX index_granule granule TYPE minmax GRANULARITY 1) ENGINE = MergeTree PARTITION BY toYYYYMM(p_time) ORDER BY order_0 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 18006, prefer_fetch_merged_part_size_threshold = 598583801, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 76243, primary_key_compress_block_size = 39619
CREATE TABLE test_01193_18429.table_6_85 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
ALTER TABLE concurrent_alter_column ADD COLUMN c377 DOUBLE;
CREATE TABLE indexed_table (`tm` DateTime, `log_message` String, INDEX log_message log_message TYPE tokenbf_v1(4096, 2, 0) GRANULARITY 1) ENGINE = MergeTree ORDER BY tm SETTINGS index_granularity_bytes = 50, min_index_granularity_bytes = 40, index_granularity = 13611, min_bytes_for_wide_part = 225401439, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 393, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 2, min_merge_bytes_to_use_direct_io = 1, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 22035, primary_key_compress_block_size = 37774
SELECT 'Running test stateless/01853_s2_cells_intersect.sql from pid=1713' 
CREATE TABLE test_763A2A706B752C2B534A4F465420642E3C74357A384A53473D5F70567E5541773B34423168463D44(x UInt8) Engine=Memory;
select 0 = multiSearchFirstIndexCaseInsensitive('\0', CAST([], 'Array(String)'));
desc format(JSONEachRow, '{"x" : [123, "Some string"]}');
DROP TABLE dist_01213;
CREATE TABLE mt (`a` Int32, `market` Int64, `timestamp` DateTime('US/Samoa')) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 31724, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 21129, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 24, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 10963804, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 51571, primary_key_compress_block_size = 83725
DESC file('/var/lib/clickhouse/user_files/02661_read_from_archive_test_fv9w6ph7_zip_archive{1..2}.zip :: 02661_read_from_archive_test_fv9w6ph7_zip_data1.csv')
SELECT has([(a, b), (c, d)], (a, b)) FROM (SELECT materialize(1) AS a, 2 AS b, materialize(3) AS c, 4 AS d);
SELECT 'Running test stateless/02020_exponential_smoothing_cross_block.sql from pid=1715' 
INSERT INTO concurrent_alter_mt_3 VALUES
OPTIMIZE TABLE dst_8
CREATE DATABASE IF NOT EXISTS test_1tccssra 
select 'month', date_diff('month', toDateTime64('1969-12-25 10:00:00.000', 3), toDateTime64('1970-01-05 10:00:00.000', 3));
SELECT a, b, g FROM decimal WHERE a IN(42) AND b IN(42) AND g IN(42);
DROP DICTIONARY 01685_database_for_cache_dictionary.cache_dictionary_complex_key_complex_attributes;
CREATE TABLE test_2B753D375F6A627B276346254E5A6B4E4542472945303C735567275732792B38584F3B6425357A79(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_jrbqchel 
CREATE INDEX idx_tab4_3 ON tab4 (col1 DESC,col3 DESC);
CREATE TABLE test_01193_18429.table_1_273 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT xxHash64(123456) = toUInt64(9049736899514479480);
CREATE TABLE test_32377D714B475C2A6D7D396C52796B33782C37737D545B236B5D792C345A2A335D48606C73776B50(x UInt8) Engine=Memory;
SELECT 'test2', number FROM system.numbers GROUP BY number ORDER BY number;
CREATE TABLE test_01193_18429.table_7_467 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
ALTER TABLE dst_6 DROP PARTITION 1
INSERT INTO src VALUES /* (-88, 2) */ 
SELECT multiIf(1, [col2, 'bar'], (col1 % 3) = 0, [col4, col5], [col6, col7]) FROM multi_if_check;
select 1 = multiSearchAny(materialize('abc'), ['b']) from system.numbers limit 10;
CREATE USER with_on_cluster_02250_ON_CLUSTER_grant_test_caxo4wnv;
CREATE DATABASE IF NOT EXISTS test_ycxtqsoi 
DROP DATABASE IF EXISTS test_mn89emks 
SELECT * FROM template GROUP BY question, answer, likes, date WITH TOTALS ORDER BY date LIMIT 3 FORMAT Template SETTINGS format_template_row = '/usr/share/clickhouse-test/queries/0_stateless/00937_format_schema_rows_template_test_sbp1mdkp_template_output_format_row.tmp', format_template_row_format = 'Question: ${question:Quoted}, Answer: ${answer:Quoted}, Number of Likes: ${likes:Raw}, Date: ${date:Raw}', format_template_rows_between_delimiter = ';\n';
INSERT INTO test_01193_18429.table_6_84 VALUES 
SELECT fromUnixTimestamp64Nano(NULL, NULL);
CREATE TABLE test_01193_18429.table_8_127 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT tuple([NULL], [NULL], [NULL]);
INSERT INTO dst_3 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 56
SELECT toStartOfWeek(toDateTime(1419800400), 1, 'Asia/Tokyo');
INSERT INTO test_01193_18429.table_6_484 VALUES 
select substring(a, 1, 3), substring(substring(substring(a, c, count(b)), 1, count(b)), 1, count(b)) from group_by_all group by all;
DROP DATABASE IF EXISTS test_8m9jdjui 
SELECT count('special query for 01290_max_execution_speed_distributed') FROM remote('127.0.0.{2,3}', numbers(1000000));
INSERT INTO r10 SELECT 95
select dictGetAll('regexp_dict4', 'pattern', 'hello\nworld');
DROP TABLE requests;
SELECT 'dictGetOrDefault';
drop user " spaces ";
SELECT sum(b.ID), sum(m.key) FROM m FULL JOIN b ON (m.key == b.key) GROUP BY key;
CREATE TABLE test_01193_18429.table_6_425 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT count() FROM (SELECT sum(x), arrayJoin([min(x), max(x)]) FROM (SELECT number AS x FROM numbers(10)));
select 1 from test_index where date < toDateTime('2020-10-30 06:00:00');
CREATE TABLE test_01193_18429.table_9_660 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT uniq(t.alias_of_a) FROM (SELECT a as alias_of_a, sum(b) FROM test_rewrite_uniq_to_count GROUP BY alias_of_a) t settings allow_experimental_analyzer=1;
drop row policy filter on projection_test;
SELECT name, found_rate FROM system.dictionaries WHERE database = currentDatabase() AND name = 'ip_trie_dictionary_01862';
CREATE TABLE test_01193_18429.table_4_125 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_grace_hash SELECT number, number % 100 = 0 FROM numbers(100000);
INSERT INTO test_01193_18429.table_5_456 VALUES 
SELECT 'Running test stateless/02233_with_total_empty_chunk.sql from pid=1714' 
CREATE USER u4_01292 IDENTIFIED WITH double_sha1_password HOST ANY DEFAULT ROLE ALL EXCEPT r1_01292
CREATE DATABASE IF NOT EXISTS test_xz6ieeu5 
INSERT INTO alter_table_3 SELECT rand(1), rand(2), 1 / rand(3), toString(rand(4)), [rand(5), rand(6)], rand(7) % 2 ? NULL : generateUUIDv4(), (rand(8), rand(9)) FROM numbers(100000)
CREATE TABLE test_01193_18429.table_8_232 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
alter table test_wide_nested update `info.id` = [100,200] where id = 1;
SELECT `xp`.`i`, `xp`.`j` FROM `test_tmwc4miy`.`xp` WHERE `i` IN ((SELECT * FROM numbers(2)) AS `_subquery850`)
ALTER TABLE alter_compression_codec MODIFY COLUMN alter_column CODEC(ZSTD, LZ4HC, LZ4, LZ4, NONE);
INSERT INTO test_01193_18429.table_8_231 VALUES 
CREATE TABLE test_334B24406C7A7A3B32787A446F4877262A7B3A663764462D27506F407567657E50736E25313F5348(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS alter_compression_codec;
INSERT INTO test_01193_18429.table_7_559 VALUES 
DROP TABLE IF EXISTS promotion;
SELECT rank() OVER (ORDER BY price) AS rank FROM products ORDER BY rank;
CREATE TABLE test_01193_18429.table_3_35 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT count() FROM t_cnf_fuzz WHERE (c6 AND (NOT c7)) OR (c8 AND (NOT c3) AND (NOT c3)) OR ((NOT c8) AND (NOT c7) AND c9 AND c0) OR ((NOT c8) AND c2) OR ((NOT c5) AND c3) OR (c6 AND c5 AND c5) OR ((NOT c8) AND (NOT c1)) OR (c6 AND (NOT c8) AND (NOT c4)) SETTINGS convert_query_to_cnf = 1
SELECT * FROM tskv
CREATE DATABASE IF NOT EXISTS test_npkxr68x 
CREATE TABLE test_525142366C6E203D43323A3659775D2D74227733375E587D45435B3378244D2D6E547C273D7D2D2E(x UInt8) Engine=Memory;
EXPLAIN SYNTAX (SELECT (sum(decimal32) + 2 * count(decimal32)) + (sum(decimal32) + 3 * count(decimal32)) From test_table);
SELECT `dummy` FROM `system`.`one` WHERE `dummy` GLOBAL IN (`_subquery1047`)
INSERT INTO local_01099_a SELECT number from system.numbers limit 3;
SELECT 'Running test stateless/01507_multiversion_storage_for_storagememory.sql from pid=1715' 
CREATE TABLE t1 (a Int, b Int) ENGINE = Memory;
SELECT * FROM t_nested_with_dots;
SELECT murmurHash3_64(1, 3, 2);
SELECT CASE WHEN (number % 2) = 0 THEN toInt8(1) WHEN (number % 3) = 0 THEN toUInt16(2) ELSE toFloat32(3) END FROM system.numbers LIMIT 10;
SELECT 3_4e-2_1;
CREATE DATABASE IF NOT EXISTS test_75niq3c8 
DROP TABLE IF EXISTS null_00634_1
SELECT 'Running test stateless/02579_parameterized_replace.sql from pid=1714' 
DROP TABLE alter_table0;
INSERT INTO r5 SELECT 27
CREATE DATABASE IF NOT EXISTS test_t1sm4b8e 
INSERT INTO test_01193_18429.table_3_513 VALUES 
INSERT INTO r6 SELECT 80
DROP DATABASE IF EXISTS test_n5ryd7ro 
SELECT ngramMinHashArg(NULL, NULL);
select 0 = sequenceMatch('(?2)(?t>7)(?2)')(time, data = 0, data = 1, data = 2, data = 3) from sequence_test;
INSERT INTO test_01193_18429.table_6_702 VALUES 
DROP TABLE IF EXISTS bloom_filter_idx_good;
SELECT id, `n.a`, `n.b`, toTypeName(`n.b`) FROM t_nested_modify ORDER BY id;
CREATE TABLE test_01193_18429.table_9_373 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT a, b, e FROM t_fixed_prefix WHERE bitNot(a) = 1 AND bitNot(b) = 1 ORDER BY a, b, e SETTINGS optimize_read_in_order = 0
CREATE DATABASE IF NOT EXISTS test_6eihcbak 
INSERT INTO load_parts_refcounts VALUES 
DROP DICTIONARY IF EXISTS test_dictionary_sparse_hashed_load_factor;
SELECT value FROM system.build_options WHERE name = 'CXX_FLAGS' 
SELECT cityHash64(groupArray(d)) FROM enum_pk WHERE d = '0';
CREATE TABLE test_01193_18429.table_3_368 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_6C27605E477C4371297324726460745E4F5023253F227121632D3C24384E314E33676D323F535026(x UInt8) Engine=Memory;
EXPLAIN QUERY TREE SELECT grouping(id), grouping(value) FROM test_table GROUP BY GROUPING SETS (id, value);
drop table dist;
INSERT INTO test_01193_18429.table_2_958 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN toInt16(1) WHEN (number % 3) = 0 THEN toInt16(2) ELSE toInt64(3) END FROM system.numbers LIMIT 10;
DROP DATABASE 01681_database_for_flat_dictionary;
CREATE TABLE test_hklfjq8i.tablefunc06 (`a` int) AS s3('http://some_addr:9000/cloud-storage-01/data.tsv', 'M9O7o0SX5I4udXhWxI12', '[HIDDEN]', 'TSV')
set optimize_sorting_by_input_stream_properties=1;
DROP DATABASE IF EXISTS test_ixp389bx 
DROP TABLE IF EXISTS format_nested;
INSERT INTO check_table_test (value1) SELECT value FROM system.events WHERE event = 'Merge';
CREATE DATABASE IF NOT EXISTS test_it8dxpl7 
CREATE TABLE test_3373356D77777067596B33607E2D237839765F7E5E496A5744494738476D60422E28417B6D2F526A(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_z5zb95sw 
CREATE TABLE test_01193_18429.table_6_830 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select tuple(1) in tuple(tuple(Null), tuple(1));
CREATE TABLE test_02908_r1_36 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_36', 'r1') ORDER BY tuple()
select colAlias0, colAlias1, colAlias2, colAlias3 from alias_2;
CREATE TABLE test_01193_18429.table_10_726 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 0x0.ee;
drop table IF EXISTS tab1_copy;
INSERT INTO r3 SELECT 66 % 10 = 3 ? 66 - 1 : 66
INSERT INTO test_01193_18429.table_4_967 VALUES 
select * from (select 0 as k, toInt256('340282366920938463463374607431768211457') as v) t1 asof join (select 0 as k, toInt256('340282366920938463463374607431768211456') as v) t2 using(k, v);
INSERT INTO test (x, y, z) VALUES 
INSERT INTO 02763_alias VALUES 
SELECT Y, uniqHLL12(X) FROM (SELECT number AS X, round(1/(1 + (3*X*X - 7*X + 11) % 37), 3) AS Y FROM system.numbers LIMIT 1000000) GROUP BY Y ORDER BY Y;
CREATE TABLE test_313A4D5C26442E335B502F27517D59295171694570216D6E2E72476F727532712C4329732736774D(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00931_low_cardinality_nullable_aggregate_function_type.sql from pid=1726' 
CREATE TABLE test_01193_18429.table_8_99 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_4_994 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE t1_02867 (x UInt64) ENGINE=Set();
select [0, 0, 0, 8, 19, 0, 3, 12, 1, 4] = multiSearchAllPositionsCaseInsensitiveUTF8(materialize('ÃÂÃÂ¿ÃÂ±ÃÂÃÂÃÂÃÂÃÂ±ÃÂÃÂ½ÃÂÃÂ±ÃÂ°ÃÂ ÃÂÃÂ°ÃÂ¥ÃÂ¢ÃÂÃÂ°ÃÂ±ÃÂ¨'), ['ÃÂÃÂÃÂ°ÃÂ©ÃÂ²ÃÂ³ÃÂµÃÂÃÂ ', 'ÃÂ¤', 'ÃÂ ÃÂÃÂ¸ÃÂ', 'ÃÂÃÂ¿ÃÂ½ÃÂÃÂ±', 'ÃÂ£', 'ÃÂ¢ÃÂÃÂ½', 'ÃÂ', 'ÃÂÃÂ', '', 'ÃÂÃÂÃÂÃÂ·ÃÂÃÂÃÂ½ÃÂ»ÃÂ±ÃÂÃÂ ÃÂ±ÃÂ°ÃÂ¥']) from system.numbers limit 10;
SELECT 'ngramSimHashCaseInsensitiveUTF8';
CREATE TABLE test_6955576941476F4B3E584B4C233F7033272B3529467465656445454E61492A2A233770722768306E(x UInt8) Engine=Memory;
SELECT * FROM nested_optional_protobuf_00825 FORMAT Protobuf SETTINGS format_schema = '/usr/share/clickhouse-test/queries/0_stateless/format_schemas/00825_protobuf_format_nested_optional:Message'
CREATE TABLE ttl_table2 (`key` DateTime) ENGINE = ReplicatedMergeTree('/test/01921_concurrent_ttl_and_normal_merges/01921_concurrent_ttl_and_normal_merges_zookeeper_long_test_63f87xjh/ttl_table', '2') ORDER BY tuple() TTL key + toIntervalSecond(1) SETTINGS merge_with_ttl_timeout = 1, max_replicated_merges_with_ttl_in_queue = 100, max_number_of_merges_with_ttl_in_pool = 100, cleanup_delay_period = 1, cleanup_delay_period_random_add = 0, cleanup_thread_preferred_points_per_iteration = 0, index_granularity = 24633, min_bytes_for_wide_part = 826532404, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 16987, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 49, min_merge_bytes_to_use_direct_io = 6839317876, index_granularity_bytes = 15995554, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 41836, primary_key_compress_block_size = 22358
drop table if exists tab_lc;
SELECT dictGetInt64(NULL, NULL, NULL);
CREATE TABLE test_263E34342825356F3C78347449476E7122432D5A665D672F2670365A736C29742F5C562A694B3735(x UInt8) Engine=Memory;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), toRelativeWeekNum(N, 'Asia/Istanbul') as r FORMAT CSV;
SELECT toString(toDateTime(1436956200), 'Europe/London');
SELECT 0.1 AS level, quantile(level)(number) FROM numbers(1000);
CREATE TABLE test_4B26576B63574851206D542E725F79215E323B6F253C30437B255C213D3F7C51302A644E5E262C52(x UInt8) Engine=Memory;
SELECT parseDateTimeBestEffort('2020-05-14T03:37:03.253184', 3, 'UTC') AS a, toTypeName(a);
select 1, * from test order by id
INSERT INTO TABLE table_with_version VALUES
CREATE TABLE test_01193_18429.table_2_313 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select 'src_to_dst', 6, 'dst', type, n, _part from dst order by type, n
select (1 ? (toInt32(0) as i) : toInt8(1)) = i;
SELECT _shard_num, key FROM dist_2 order by _shard_num, key;
DROP DATABASE IF EXISTS test_rnq0vibw 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (69 < 47 AND 70 > 0 ? 69 : 0)), throwIf(last != (69 < 47 AND 70 > 0 ? least(47 - 1, 69 + 70 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(47) LIMIT 69, 70);
INSERT INTO r9 SELECT 39 % 10 = 9 ? 39 - 1 : 39
drop table if exists with_overflow;
INSERT INTO test_01193_18429.table_7_988 VALUES 
DROP TABLE IF EXISTS t_to;
drop table if exists v_numbers;
CREATE TABLE test_01193_18429.table_1_898 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT dictHas('02183_range_dictionary', 0, 2);
SELECT toStartOfInterval(toDate(17933), INTERVAL 1 year);
CREATE TABLE test_01193_18429.table_8_300 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test1_00395( col1 UInt64, col2 Nullable(UInt64), col3 String, col4 Nullable(String), col5 Array(UInt64), col6 Array(Nullable(UInt64)), col7 Array(String), col8 Array(Nullable(String)), d Date) Engine = Log;
CREATE TABLE test_01193_18429.table_2_735 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT dictGetOrDefault('01681_database_for_cache_dictionary.cache_dictionary_simple_key_simple_attributes', 'value_first', number, toString('default')) as value_first, dictGetOrDefault('01681_database_for_cache_dictionary.cache_dictionary_simple_key_simple_attributes', 'value_second', number, toString('default')) as value_second FROM system.numbers LIMIT 3;
CREATE TABLE test_01193_18429.table_2_301 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT `x` FROM generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8))))))))))))))', 1, 1, 1) LIMIT 1
CREATE TABLE test_36387E7C44322E695C78527D4C3424596F6E31634155477A443D2020513F6F3D66347D5F5663464A(x UInt8) Engine=Memory;
SELECT 2147483648, -9223372036854775807, 2147483648 = -9223372036854775807, 2147483648 != -9223372036854775807, 2147483648 < -9223372036854775807, 2147483648 <= -9223372036854775807, 2147483648 > -9223372036854775807, 2147483648 >= -9223372036854775807, -9223372036854775807 = 2147483648, -9223372036854775807 != 2147483648, -9223372036854775807 < 2147483648, -9223372036854775807 <= 2147483648, -9223372036854775807 > 2147483648, -9223372036854775807 >= 2147483648 , toUInt32(2147483648) = toInt64(-9223372036854775807), toUInt32(2147483648) != toInt64(-9223372036854775807), toUInt32(2147483648) < toInt64(-9223372036854775807), toUInt32(2147483648) <= toInt64(-9223372036854775807), toUInt32(2147483648) > toInt64(-9223372036854775807), toUInt32(2147483648) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toUInt32(2147483648), toInt64(-9223372036854775807) != toUInt32(2147483648), toInt64(-9223372036854775807) < toUInt32(2147483648), toInt64(-9223372036854775807) <= toUInt32(2147483648), toInt64(-9223372036854775807) > toUInt32(2147483648), toInt64(-9223372036854775807) >= toUInt32(2147483648) , toUInt64(2147483648) = toInt64(-9223372036854775807), toUInt64(2147483648) != toInt64(-9223372036854775807), toUInt64(2147483648) < toInt64(-9223372036854775807), toUInt64(2147483648) <= toInt64(-9223372036854775807), toUInt64(2147483648) > toInt64(-9223372036854775807), toUInt64(2147483648) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toUInt64(2147483648), toInt64(-9223372036854775807) != toUInt64(2147483648), toInt64(-9223372036854775807) < toUInt64(2147483648), toInt64(-9223372036854775807) <= toUInt64(2147483648), toInt64(-9223372036854775807) > toUInt64(2147483648), toInt64(-9223372036854775807) >= toUInt64(2147483648) , toInt64(2147483648) = toInt64(-9223372036854775807), toInt64(2147483648) != toInt64(-9223372036854775807), toInt64(2147483648) < toInt64(-9223372036854775807), toInt64(2147483648) <= toInt64(-9223372036854775807), toInt64(2147483648) > toInt64(-9223372036854775807), toInt64(2147483648) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toInt64(2147483648), toInt64(-9223372036854775807) != toInt64(2147483648), toInt64(-9223372036854775807) < toInt64(2147483648), toInt64(-9223372036854775807) <= toInt64(2147483648), toInt64(-9223372036854775807) > toInt64(2147483648), toInt64(-9223372036854775807) >= toInt64(2147483648) 
SELECT max(NULL, NULL, NULL);
select sipHash64Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43)) == sipHash64(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43));
INSERT INTO test_01193_18429.table_2_355 VALUES 
CREATE VIEW dictionary_source_view AS SELECT id, dictionary_source_en.value as value_en, dictionary_source_ru.value as value_ru FROM dictionary_source_en LEFT JOIN dictionary_source_ru USING (id);
SELECT last_value_respect_nulls(-1);
SELECT grouping, item, runningAccumulate(state, grouping) FROM ( SELECT number % 6 AS grouping, number AS item, sumState(number) AS state FROM (SELECT number FROM system.numbers LIMIT 30) GROUP BY grouping, item ORDER BY grouping, item );
CREATE TABLE morton_numbers_mask_02457 (`n1` UInt16, `n2` UInt16, `n3` UInt8) ENGINE = MergeTree ORDER BY n1 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 667073379, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 4777, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 9068, primary_key_compress_block_size = 59207
SELECT hex(xxHash64('')) = upper('ef46db3751d8e999');
select makeDate(NULL, 3, 4);
EXPLAIN SYNTAX SELECT avg(log(2) * number) AS k FROM numbers(10000000) GROUP BY (number % 2) * (number % 3), number % 3 ORDER BY k;
SELECT 'aes-128-gcm' AS mode, hex(encrypt(mode, '[HIDDEN]')) FROM encryption_test
CREATE DATABASE IF NOT EXISTS test_gvjbn10m 
SELECT materialize(toInt16(0)) AS x, toFloat32(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
CREATE TABLE test_71503D43494C74403729592D3B4D60227E3E434251757B6732554D5D496A6337754B41247D652A61(x UInt8) Engine=Memory;
SELECT splitByWhitespace('Nein, nein, nein! Doch!', -1) SETTINGS splitby_max_substrings_includes_remaining_string = 1;
INSERT INTO mt VALUES /* (35, 2) */ 
INSERT INTO test_01193_18429.table_8_322 VALUES 
CREATE TABLE test_01193_18429.table_7_925 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE DATABASE IF NOT EXISTS test_3kc6im75 
SELECT name, active, refcount FROM system.parts WHERE database = 'test_pdyya2du' AND table = 't_insert_storage_snapshot' FORMAT CSV
SELECT sum(`number`) FROM `test_owehxw65`.`test_parallel_replicas_automatic_count` PREWHERE `p` != 3
SELECT count() FROM async_inserts_02246
select round(1000 * ngramDistanceUTF8(materialize(''), materialize('')))=round(1000 * ngramDistanceUTF8(materialize(''), '')) from system.numbers limit 5;
INSERT INTO test_01193_18429.table_3_249 VALUES 
DROP DATABASE IF EXISTS test_uh6z32f0 
DROP DATABASE IF EXISTS test_e0mxmkj6 
SELECT 'Running test stateless/02573_quantile_fuse_msan.sql from pid=1714' 
select 0 = multiSearchAny(materialize('pqqnugshlczcuxhpjxjbcnro'), ['dpeedqy', 'rtsc', 'jdgla', 'qkgudqjiyzvlvsj', 'xmfxawhijgxxtydbd', 'ebgzazqthb', 'wyrjhvhwzhmpybnylirrn', 'iviqbyuclayqketooztwegtkgwnsezfl', 'bhvidy', 'hijctxxweboq', 't', 'osnzfbziidteiaifgaanm']) from system.numbers limit 10;
CREATE TABLE product_fp64_fp64 (`x` Array(Float64), `y` Array(Float64)) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 5220, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 17358, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 310041, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 4597258760, index_granularity_bytes = 23737711, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 9499, primary_key_compress_block_size = 11717
CREATE TABLE t1_local ON CLUSTER test_shard_localhost (`partition_col_1` String, `tc1` int, `tc2` int) ENGINE = MergeTree PARTITION BY partition_col_1 ORDER BY tc1 SETTINGS index_granularity = 60007, min_bytes_for_wide_part = 820483182, ratio_of_defaults_for_sparse_serialization = 0.8860019445419312, replace_long_file_name_to_hash = false, max_file_name_length = 5, merge_max_block_size = 3693, prefer_fetch_merged_part_size_threshold = 10111002500, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 15000951, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 13053, primary_key_compress_block_size = 39262
SELECT 'Running test stateless/00932_array_intersect_bug.sql from pid=1726' 
CREATE TABLE test_474C2A3A2C25375E6B733B404851316D4A337A6C4F4C567E6B5C2F75702F792462532F337925556B(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_uybivg2w 
create table t1_00729 (id UInt64, val Array(String),nid UInt64, eDate Date) ENGINE = MergeTree(eDate, (id, eDate), 8192);
select cos(pi() / 2) < 1.0e-9;
drop table if exists data_02340_rep sync;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (30 < 65 AND 59 > 0 ? 30 : 0)), throwIf(last != (30 < 65 AND 59 > 0 ? least(65 - 1, 30 + 59 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(65) LIMIT 30, 59);
SELECT * FROM codecs4;
INSERT INTO 01280_db.keys_table VALUES 
SELECT quantiles(0.1, 0.2)(NULL :: Nullable(UInt32)) FROM remote('127.0.0.{1,2}', numbers(3)) GROUP BY number % 2 WITH TOTALS;
CREATE TABLE t_row_exists (`a` int, `b` int) ENGINE = MergeTree ORDER BY a SETTINGS index_granularity = 35591, min_bytes_for_wide_part = 504586601, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 12089, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 16009228, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 48446, primary_key_compress_block_size = 22419
select if(number % 5 == 0, Null, toInt8OrZero(toString(number))) from numbers(20);
CREATE TABLE test_5D527A765C3345444F5471304A26356B5A4C225C2E68746B3D4E3C296E455C2827582A7876274654(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_5_210 VALUES 
SELECT * FROM (SELECT a, arrayEnumerateUniqRanked(a) FROM ( SELECT * FROM ( SELECT [[], [1, 2, 3, 4]] AS a UNION ALL SELECT [[3, 4, 5]] AS a ) ) ) ORDER BY a ASC;
CREATE TABLE test_792B4F2921365234536B5D7E2C65523B58533A604875357547503E692B745C45597E663C63256551(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_8_3 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT toStartOfHour(d) as d, count() FROM with_fill_date GROUP BY d ORDER BY d WITH FILL STEP INTERVAL 6 HOUR LIMIT 5;
CREATE INDEX idx_tab2_3 ON tab2 (col4,col1 DESC);
INSERT INTO bloom_filter_lc_null_types_test SELECT number AS order_key, toString(number) AS str, toFixedString(toString(number), 5) AS fixed_string FROM system.numbers LIMIT 100;
CREATE DATABASE IF NOT EXISTS test_ryasqxom 
SELECT accurateCast(5, 'UInt32');
USE test3
INSERT INTO test_01193_18429.table_5_270 VALUES 
DROP DATABASE IF EXISTS test_9yt80t8x 
select 3 = position('abcdefgh', materialize('cdefgh')) from system.numbers limit 10;
ALTER TABLE partitioned_by_tuple DETACH PARTITION ID '20000101-1';
EXPLAIN QUERY TREE SELECT uniq(t.a) FROM (SELECT a, sum(b) FROM test_rewrite_uniq_to_count GROUP BY a) t settings allow_experimental_analyzer=1;
SELECT 'Running test stateless/02504_regexp_dictionary_ua_parser.sh from pid=1705' 
DESCRIBE (SELECT cast(tuple(1), 'Tuple (id UInt64)') AS compound_value, arrayMap(x -> compound_value.* APPLY x -> toString(x), [1,2,3]));
SELECT avgWeightedIf(if(number < 10000, NULL, number), if(number < 10000, NULL, number), if(number < 10000, NULL, number % 10)) t, toTypeName(t) FROM numbers(100);
CREATE TABLE test_01193_18429.table_4_356 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP DATABASE IF EXISTS test_ftrvuji4 
SELECT *, _file FROM file('/var/lib/clickhouse/user_files/02771_multidirectory_globs_storage_file_test_1re3m9pf/dir?/{subdir?1/data1,subdir2?/data2}.csv', CSV) WHERE _file == 'data1.csv';
SELECT concat_ws(NULL);
INSERT INTO test_01193_18429.table_9_438 VALUES 
SELECT count(), `dist_layer_01247`.`number` FROM `test_liwee4wb`.`dist_layer_01247` GROUP BY `number` ORDER BY `number` ASC LIMIT 1
CREATE TABLE test_01193_18429.table_7_237 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/02113_untuple_func_alias.sql from pid=1713' 
DROP TABLE IF EXISTS id1;
SET allow_experimental_funnel_functions = 0;
select 0 = multiSearchAnyUTF8(materialize('ÃÂ¹ÃÂ ÃÂÃÂ³ÃÂ»ÃÂºÃÂÃÂ²ÃÂ·ÃÂÃÂÃÂÃÂ¾ÃÂÃÂ¿ÃÂ·ÃÂ¼ÃÂ½ÃÂÃÂÃÂÃÂµÃÂ°ÃÂ¾'), ['ÃÂ¹ÃÂµÃÂÃÂ´ÃÂ°ÃÂ¹', 'ÃÂ´ÃÂ°ÃÂÃÂ¶ÃÂÃÂ·ÃÂ»ÃÂ¾ÃÂÃÂ¼ÃÂ¹', 'ÃÂ°ÃÂÃÂÃÂºÃÂºÃÂ³ÃÂÃÂ³ÃÂ°ÃÂ°ÃÂ·ÃÂÃÂÃÂÃÂ¿ÃÂÃÂ½ÃÂ ÃÂÃÂÃÂÃÂ¼ÃÂ»ÃÂÃÂ', 'ÃÂÃÂÃÂÃÂÃÂÃÂºÃÂÃÂÃÂ¹ÃÂÃÂº', 'ÃÂ¶ÃÂ»ÃÂÃÂÃÂºÃÂÃÂÃÂ½ÃÂÃÂ¸ÃÂ¶ÃÂÃÂµÃÂ ÃÂ¿ÃÂ¿ÃÂ°ÃÂÃÂ ÃÂ²ÃÂÃÂÃÂ', 'ÃÂ±ÃÂ·ÃÂ¶ÃÂÃÂ²', 'ÃÂÃÂºÃÂÃÂ¹ÃÂ¼ÃÂ½ÃÂºÃÂÃÂ»ÃÂ¿ÃÂµÃÂ´ÃÂ¸ÃÂ´ÃÂÃÂ', 'ÃÂ¾ÃÂÃÂ±ÃÂ°ÃÂ¶ÃÂÃÂ·ÃÂÃÂ·ÃÂ¹ÃÂ¿ÃÂ¿ÃÂÃÂ³ÃÂÃÂÃÂÃÂµÃÂºÃÂÃÂÃÂ´ÃÂ¿ÃÂ´ÃÂ·ÃÂÃÂ¾ÃÂ´ÃÂ²ÃÂ¾ÃÂ¹ÃÂ²ÃÂ¾ÃÂ ', 'ÃÂ¹ÃÂ¶ÃÂ´ÃÂ´ÃÂ±ÃÂÃÂÃÂµÃÂÃÂ ÃÂ¸ÃÂÃÂ³ÃÂ½ÃÂÃÂ»ÃÂºÃÂ¸ÃÂ´ÃÂ²ÃÂ³ÃÂ±ÃÂ´ÃÂ·ÃÂÃÂÃÂµÃÂ¼ÃÂ±ÃÂÃÂ', 'ÃÂºÃÂÃÂÃÂ²ÃÂÃÂºÃÂÃÂÃÂ¼ÃÂ´ÃÂÃÂÃÂ¾ÃÂ³ÃÂ ÃÂÃÂ ÃÂÃÂÃÂ´ÃÂ¾ÃÂÃÂÃÂÃÂÃÂÃÂ ÃÂÃÂ¸ÃÂ', 'ÃÂ¿ÃÂÃÂÃÂÃÂºÃÂºÃÂ°ÃÂ¼ÃÂ½ÃÂ±ÃÂ½ÃÂ°ÃÂÃÂ´ÃÂ¿ÃÂ·ÃÂÃÂ»ÃÂÃÂµÃÂÃÂ ÃÂÃÂ½ÃÂ´ÃÂÃÂ³ÃÂÃÂ¾ÃÂµÃÂ³ÃÂÃÂ·ÃÂ', 'ÃÂ½ÃÂÃÂÃÂ½ÃÂÃÂÃÂ·ÃÂ³ÃÂ¶ÃÂÃÂÃÂÃÂ½ÃÂ¶ÃÂ½ÃÂ°ÃÂÃÂÃÂÃÂ¸ÃÂµÃÂ»ÃÂµÃÂ±ÃÂÃÂ±', 'ÃÂÃÂ³ÃÂ¶ÃÂ¼ÃÂºÃÂ²ÃÂÃÂÃÂ¶ÃÂÃÂºÃÂºÃÂ´ÃÂ½ÃÂ³ÃÂ°ÃÂÃÂºÃÂ·ÃÂÃÂ¿ÃÂ²ÃÂºÃÂ³ÃÂ·ÃÂ ÃÂÃÂ¹ÃÂ', 'ÃÂ·ÃÂ¼ÃÂºÃÂ²ÃÂÃÂµÃÂÃÂÃÂÃÂ»ÃÂ ÃÂÃÂ¾ÃÂ ÃÂ±ÃÂ½ÃÂ ÃÂ±ÃÂ°ÃÂºÃÂ´ÃÂ¸ÃÂÃÂÃÂ´ÃÂÃÂ¼ÃÂ¹ÃÂÃÂ¿']) from system.numbers limit 10;
select 'MULTISEARCHFIRSTPOSITION';
SELECT hex(sipHash128ReferenceKeyed((key0, key1), val)) FROM sipHashKeyed_keys ORDER by key0;
CREATE TABLE test_45794456233C2028582E6778346C583B52657231606F58283E2D497B443C6A20377256325E7B4A35(x UInt8) Engine=Memory;
INSERT INTO test_01114_3.mt SELECT * FROM numbers(110);
SELECT 24 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'val', tuple(IPv4StringToNum('255.255.255.240')))
SELECT categoricalInformationValue(dummy, dummy) WHERE 0;
INSERT INTO test_01193_18429.table_6_826 VALUES 
CREATE TABLE test_01193_18429.table_7_19 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT count() FROM t_cnf_fuzz WHERE (c8 AND (NOT c5)) OR ((NOT c6) AND c7 AND c1 AND (NOT c2)) OR ((NOT c1) AND c3 AND c3 AND c0) OR ((NOT c4) AND c6) OR ((NOT c7) AND (NOT c5) AND (NOT c2)) SETTINGS convert_query_to_cnf = 0
ATTACH TABLE concurrent_mutate_mt_3
SELECT toDecimal256OrDefault('Hello', 3, 123.456::Decimal256(3)) AS x, toTypeName(x);
ALTER TABLE concurrent_alter_column DROP COLUMN e 
CREATE TABLE test_01193_18429.table_3_264 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_3D676444492D7E5B2F242672443F455055447646775E662A3B3B5673405F4965417941394079635D(x UInt8) Engine=Memory;
SELECT count() = 200000 FROM remote('127.0.0.{2,3}', currentDatabase(), numbers_100k_log) GROUP BY number WITH TOTALS ORDER BY number LIMIT 10;
SELECT throwIf((SELECT (count(), sum(n)) FROM merge(currentDatabase(), '') WHERE type=3) != (16 + 1, 136 + 17)) FORMAT Null
CREATE DATABASE IF NOT EXISTS test_x2sxnnil 
DESCRIBE (SELECT id IN test_table_in FROM test_table);
SELECT 'Running test stateless/02834_analyzer_with_statement_references.sql from pid=1718' 
CREATE DATABASE IF NOT EXISTS test_f10zfjw4 
SELECT 'Running test stateless/02533_generate_random_schema_inference.sql from pid=1720' 
SELECT addMonths(materialize(toDateTime('2017-11-05 08:07:47')), 1.);
SHOW CREATE TABLE test_table;
CREATE INDEX idx_tab4_2 ON tab4 (col4 DESC,col3 DESC);
CREATE TABLE test_01193_18429.table_4_551 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_5_426 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT CASE WHEN 1 THEN toFixedString('foo', 16) WHEN (col1 % 3) = 0 THEN toFixedString(col3, 16) ELSE col4 END FROM multi_if_check;
SELECT multiIf(1, [1,2], 1, [3,4], [5,6]);
SELECT ngramMinHashCaseInsensitive(NULL, NULL, NULL);
SELECT throwIf((SELECT sum(nm) FROM mv) != 148) FORMAT Null;
SELECT id, haystack, needle, 'x', replaceAll('Hello World', needle, 'x') FROM test_tab ORDER BY id;
CREATE TABLE test_5A227C454341356464524B653D7735413E3632472E364653225B5C58263132605B2D753838343F2F(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_1_301 VALUES 
CREATE TABLE test_01193_18429.table_7_326 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 1 AS x, 200000 AS y, least(x, y), greatest(x, y), least(x, materialize(y)), greatest(materialize(x), y), greatest(materialize(x), materialize(y)), toTypeName(least(x, y));
CREATE TABLE testing (`a` String, `b` String, `c` Int32, `d` Int32, `e` Int32, PROJECTION proj_1 (SELECT c ORDER BY d), PROJECTION proj_2 (SELECT c ORDER BY e, d)) ENGINE = MergeTree PRIMARY KEY a SETTINGS min_bytes_for_wide_part = 0, index_granularity = 29515, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 2720, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 75507, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 28097, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 14162, primary_key_compress_block_size = 63853
SELECT 'Running test stateless/02027_ngrams.sql from pid=1724' 
CREATE DATABASE IF NOT EXISTS test_wnam5vs7 
CREATE TABLE test_7148382C755874584F2C25233425206143542C23404C54223E3876723C6E56247E4F2F2F564F552B(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01319_mv_constants_bug.sql from pid=1714' 
SELECT 'Running test stateless/02310_clickhouse_local_INSERT_progress_profile_events.expect from pid=1724' 
SELECT arrayJoin([[3,4,5], [6,7], [2], [1,1]]) AS x ORDER BY x DESC 
CREATE TABLE test_01193_18429.table_8_705 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE DATABASE IF NOT EXISTS test_huk7b2af 
SELECT name FROM join_table_mutation WHERE id = 10;
select toValidUTF8('\xc3\x28') from system.numbers limit 10;
EXPLAIN QUERY TREE (SELECT sum(decimal32) - 2 * count(decimal32) From test_table);
DESC TABLE test_ogkb7p2h.numbers500k
SELECT sumIfOrNull(number, number % 2 == 1) FILTER(WHERE 0) FROM numbers(100);
CREATE TABLE test_3F553F62467A3F7050655336547E6464477D2449782E5F7457644170386E46602D564745556F2625(x UInt8) Engine=Memory;
ALTER TABLE concurrent_kill_4 MODIFY COLUMN value UInt64 SETTINGS replication_alter_partitions_sync=2
SELECT normalizedQueryHashKeepNames(NULL);
CREATE TABLE test_01193_18429.table_3_78 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_9_701 VALUES 
CREATE DATABASE IF NOT EXISTS test_gb1r80mu 
SELECT * FROM ( SELECT * FROM ( SELECT * FROM numbers(3) GROUP BY number ORDER BY number ASC ) ORDER BY number ASC ) ORDER BY number ASC
SELECT splitByRegexp('', 'a12bc23de345f', 5) SETTINGS splitby_max_substrings_includes_remaining_string = 1;
SELECT 'Running test stateless/01634_sum_map_nulls.sql from pid=1713' 
CREATE TABLE test_4A45247A76537457773247355A2F406B33253455256E264A2E672746616E3C592B73422B4D4A716F(x UInt8) Engine=Memory;
SELECT file_segment_range, read_type FROM system.filesystem_cache_log WHERE query_id = (SELECT query_id from system.query_log where query LIKE '%SELECT 2242%s3_cache%' AND current_database = currentDatabase() AND type = 'QueryFinish' ORDER BY event_time desc LIMIT 1) ORDER BY file_segment_range, read_type
SELECT leftPad(toFixedString('abc343243424324', 15), 1) as a, toTypeName(a);
CREATE INDEX idx_tab3_4 ON tab3 (col0,col3);
select 1 = multiMatchAny(materialize(''), ['']);
SELECT countIfArrayIf([1, NULL], [1, 0], 1) AS `x` FROM numbers(3)
CREATE TABLE aggregating_00682 (`k` UInt32, `v` AggregateFunction(count)) ENGINE = AggregatingMergeTree ORDER BY k SETTINGS remove_empty_parts = 0, index_granularity = 43905, min_bytes_for_wide_part = 650154211, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 4438, prefer_fetch_merged_part_size_threshold = 6077919811, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 5877401500, index_granularity_bytes = 6089721, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 26016, primary_key_compress_block_size = 53861
SELECT * FROM template GROUP BY question, answer, likes, date WITH TOTALS ORDER BY date LIMIT 3 FORMAT Template SETTINGS format_template_row_format = 'Question: ${question:Quoted}, Answer: ${answer:Quoted}, Number of Likes: ${likes:Raw}, Date: ${date:Raw}', format_template_rows_between_delimiter = ';\n'
DROP DATABASE IF EXISTS test_h88cfn4f 
CREATE TABLE test_2D53632F5D3D2F43725B2D3277493A5A3B4B52566A56472F4456615C7074385423544C2132247373(x UInt8) Engine=Memory;
select parseDateTimeInJodaSyntax('/31/', '/d/', 'UTC') = toDateTime('2000-01-31', 'UTC');
SELECT toDate32OrNull('');
select 'src_to_dst', 11, 'src', type, n, _part from src order by type, n
INSERT INTO r8 SELECT 20 % 10 = 8 ? 20 - 1 : 20
CREATE TABLE test_01193_18429.table_8_529 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO r9 SELECT 34 % 10 = 9 ? 34 - 1 : 34
DROP DATABASE IF EXISTS test_xyw2ai7p 
CREATE TABLE test_01193_18429.table_7_922 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP TABLE IF EXISTS bloom_filter_sizing_pk;
CREATE TABLE dict_db_01254.dict_data (key UInt64, val UInt64) Engine=Memory();
CREATE DICTIONARY dict (id UInt32, value String) PRIMARY KEY id SOURCE(CLICKHOUSE(host 'localhost' port tcpPort() user 'default' db currentDatabase() table 'view')) LAYOUT (HASHED()) LIFETIME (MIN 600 MAX 600);
select if(number % 5 == 0, Null, toDecimal32OrZero(toString(number), 5)) from numbers(20);
SELECT CASE WHEN (number % 2) = 0 THEN [toInt8(1), toInt8(2)] WHEN (number % 3) = 0 THEN [toInt16(2), toInt16(3)] ELSE [toInt64(3), toInt64(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_7_321 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP DATABASE IF EXISTS test_67ov0lqp 
SELECT '----- END -----';
DROP TABLE local_01213;
INSERT INTO r7 SELECT 25
DROP TABLE IF EXISTS t_async_insert_dedup_no_part SYNC
SELECT *, * APPLY toTypeName FROM ( SELECT t2.* FROM (SELECT 1 :: Int32 as a) t1 FULL JOIN (SELECT 2 :: UInt32 as key) t2 ON t1.a = t2.key ) ORDER BY 1;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 14305, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT toInt8(0), bitPositionsToArray(toInt8(0));
CREATE TABLE empty_as_default (s String, n UInt64 DEFAULT 1, d Date DEFAULT '2019-06-19') ENGINE = Memory
CREATE TABLE test_54654D325D6730523E5D592C553D543832556261714472625270463969437E604431662F2951685E(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_ms3qtwia 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), N + toUInt64(1) as r FORMAT CSV;
CREATE TABLE test_02908_r1_261 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_261', 'r1') ORDER BY tuple()
INSERT INTO r1 SELECT 43 % 10 = 1 ? 43 - 1 : 43
EXPLAIN SYNTAX SELECT i, j, COLUMNS(i, j, k) APPLY(toFloat64), COLUMNS(i, j) EXCEPT (i) from columns_transformers;
INSERT INTO test_01193_18429.table_3_734 VALUES 
CREATE DATABASE IF NOT EXISTS test_auas3s6x 
INSERT INTO test_01193_18429.table_7_115 VALUES 
CREATE INDEX idx_tab4_0 ON tab4 (col0 DESC,col4 DESC,col1 DESC);
select key, toTypeName(f32), byteSize(f32), toTypeName(f64), byteSize(f64) from test_byte_size_number0 order by key;
SELECT multiIf((number % 2) = 0, toUInt16(1), (number % 3) = 0, toUInt32(2), toUInt16(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_284847322B3D793E445E3330677B224D487D6B6B5C6F3F58416A57437D3C53606C31534951226E3B(x UInt8) Engine=Memory;
INSERT INTO r2 SELECT 60 % 10 = 2 ? 60 - 1 : 60
select s2CapUnion(1157339245694594829, -1.0, 1152921504606846977, -1.0);
DROP DATABASE IF EXISTS test_sx5qulzf 
SELECT h3ToString(arrayJoin([579205133326352383,589753847883235327,594082350283882495]));
INSERT INTO test_0tlcicff.`02784_async_table_with_dedup` FORMAT Values
select id, id2, val, val2, created from ( SELECT toUInt64(arrayJoin(range(50))) AS id2 ) js1 SEMI LEFT JOIN joinbug_join using id2;
SELECT max(arrayJoin(arr)) FROM (SELECT arrayEnumerateUniq(groupArray(intDiv(number, 54321)) AS nums, groupArray(toString(intDiv(number, 98765)))) AS arr FROM (SELECT number FROM system.numbers LIMIT 1000000) GROUP BY intHash32(number) % 100000);
SELECT toTypeName(fuzzBits(randomString(100), 0.5));
INSERT INTO test_01193_18429.table_7_28 VALUES 
INSERT INTO test_01193_18429.table_8_884 VALUES 
DROP DATABASE IF EXISTS test_sca3truw 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), toTime(N, 'Asia/Istanbul') as r FORMAT CSV;
select 1 = multiSearchAny(materialize('abcdefgh'), ['h']) from system.numbers limit 129;
CREATE TABLE test_01193_18429.table_8_766 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_2_900 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select uniqExact(_part), count() from tMM where toYYYYMM(d) between 202009 and 202010 and toStartOfDay(d) = '2020-10-01 00:00:00';
SELECT 'toStartOfTenMinutes;toDateTime64;true', toStartOfTenMinutes(toDateTime64('1920-02-02 10:23:33.789', 3, 'UTC'), 'UTC') SETTINGS enable_extended_results_for_datetime_functions = true;
select count() from tt
INSERT INTO test_02908_r1_236 SELECT rand64() FROM numbers(5);
INSERT INTO test_01193_18429.table_7_370 VALUES 
select cutToFirstSignificantSubdomainCustomRFC('a.foo.bar', 'no_new_line_list');
CREATE DATABASE IF NOT EXISTS test_pqmm0fjx 
alter table many_mutations delete where y = 677 * 2 settings mutations_sync = 0;
system sync replica rmt1;
SELECT count() FROM t_cnf_fuzz WHERE (c4 AND (NOT c5) AND c4 AND (NOT c0) AND c4) OR ((NOT c8) AND c6) OR ((NOT c3) AND c1 AND (NOT c8) AND c6) OR ((NOT c0) AND c1) OR ((NOT c9)) OR (c1) OR ((NOT c2) AND c8 AND (NOT c7)) OR ((NOT c8) AND (NOT c2)) OR ((NOT c0) AND (NOT c2) AND c1 AND (NOT c3)) OR ((NOT c8) AND c8 AND c8 AND c9 AND c2) SETTINGS convert_query_to_cnf = 0
SELECT 'Running test stateless/01866_bit_positions_to_array.sql from pid=1718' 
CREATE INDEX idx_tab4_4 ON tab4 (col4 DESC,col3 DESC,col0 DESC);
SELECT id FROM test_bf_indexOf WHERE indexOf(ary, 'value1') > toDecimal32(0, 2) ORDER BY id FORMAT TSV;
SELECT cityHash64(CAST( 0 AS Nullable(UInt8)));
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c1) AND (NOT c6) AND (NOT c1)) OR ((NOT c0) AND (NOT c1) AND c1 AND (NOT c6)) OR ((NOT c7) AND (NOT c4)) OR (c3 AND c2 AND (NOT c0) AND c5) OR (c4 AND c0 AND (NOT c4) AND c1 AND (NOT c6)) OR (c4 AND c9) SETTINGS convert_query_to_cnf = 1
select splitByChar(',', '1,2,3');
CREATE INDEX idx_tab4_5 ON tab4 (col3 DESC,col1,col4);
INSERT INTO test_02908_r1_242 SELECT rand64() FROM numbers(5);
CREATE TABLE test_754B694149297639393E607D692267372A4954315E435A203E587770317D786A475E74497C78214D(x UInt8) Engine=Memory;
SELECT anyIf(toNullable('Hello'), arrayJoin([1, 1]) = 0) FROM `system`.`one`
SELECT 'Running test stateless/00415_into_outfile.sh from pid=1715' 
CREATE TABLE mt3 (id UInt64) ENGINE = TinyLog;
SELECT '*** Replacing with implicit version ***';
/* toUnixTimestamp */ SELECT 'toUnixTimestamp';
CREATE TABLE t1 (`x` UInt32, `lc` LowCardinality(String) ) ENGINE = Memory;
SELECT [concat(NULL, arrayJoin([]))];
select if(number % 5 == 0, Null, toDateTimeOrZero(toString(number * 10000), 'UTC')) from numbers(20);
INSERT INTO r6 SELECT 52 % 10 = 6 ? 52 - 1 : 52
create table data (key Int) engine=MergeTree() order by key;
WITH ( SELECT toLowCardinality('a') ) AS bar SELECT bar
SELECT * FROM system.text_log WHERE event_time >= now() - 30 and level == 'Error' and message like '%BAD_DATA_PART_NAME%'and message like '%p_norm%';
CREATE TABLE test_01193_18429.table_4_476 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_3_875 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO r4 SELECT 27 % 10 = 4 ? 27 - 1 : 27
INSERT INTO test_01193_18429.table_4_279 VALUES 
SELECT 'Running test stateless/02303_cast_nullable_to_custom_types.sql from pid=1713' 
SELECT materialize(toInt8(0)) AS x, toFloat64(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
ALTER TABLE src_14 MOVE PARTITION 2 TO TABLE dst_1
CREATE DATABASE IF NOT EXISTS test_95gzsaf2 
INSERT INTO table_for_rename_nested (date, key, n.x, n.y, value1) SELECT toDate('2019-10-01'), number, [number + 1, number + 2, number + 3], ['a', 'b', 'c'], [[toString(number)]] FROM numbers(10);
INSERT INTO defaults FORMAT JSONEachRow 
CREATE TABLE test_01193_18429.table_6_896 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_4_509 VALUES 
DROP TABLE IF EXISTS numbers5;
DROP TABLE IF EXISTS vec1d;
SELECT * FROM bf_tokenbf_map_keys_test WHERE map['K2'] != 'V2' SETTINGS force_data_skipping_indices='map_keys_tokenbf';
select arr1, no, 2, arraySlice(arr1, no, -2) from array_functions;
CREATE TABLE test_01193_18429.table_9_778 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_2_964 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT age('week', toDateTime64('2015-01-01 20:30:36.200', 3, 'UTC'), toDateTime64('2015-01-15 20:30:35.200', 3, 'UTC'));
SELECT * FROM remote('127.0.0.{1,2}', generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8)))))))))))))))))))))))))))))))))))))))))))', 1, 1, 1)) LIMIT 1 FORMAT Null
CREATE TABLE test_01193_18429.table_9_191 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DATABASE IF NOT EXISTS test_calg9mo3 
SELECT toUInt256(NULL);
CREATE DICTIONARY dict (key UInt64, value UInt64) PRIMARY KEY key SOURCE(CLICKHOUSE(TABLE dict_data)) LIFETIME(0) LAYOUT(HASHED());
SELECT quantileArrayIf(0.5)([NULL], 1) AS x FROM remote('127.0.0.{1,2}', numbers(3));
CREATE TABLE test_01193_18429.table_5_508 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_57514D4E282754414E7C2027447B5859573D353F2D444666386C5A7744564175285B762E394C2C7C(x UInt8) Engine=Memory;
create temporary table t1 (a Nullable(UInt8));
DROP TABLE IF EXISTS data_memory;
SET max_bytes_before_external_group_by = 1000000;
DROP TABLE IF EXISTS fl_interval;
select 1 = multiMatchAny(materialize('vbcsettndwuntnruiyclvvwoo'), materialize(['dwuntnru', '', 'ttndwuntnruiyclvv', 'ntnr', 'nruiyclvvw', 'wo', '', 'bcsettndwuntnruiycl', 'yc', 'untnruiyclvvw', 'csettndwuntnr', 'ntnruiyclvvwo'])) from system.numbers limit 10;
insert into nullable_set_index values 
SELECT _shard_num, key FROM dist_1 order by _shard_num, key;
CREATE TABLE IF NOT EXISTS defaults ( vals UInt32 ) ENGINE = Memory;
INSERT INTO test_01193_18429.table_5_779 VALUES 
INSERT INTO test_01193_18429.table_5_676 VALUES 
select runningDifference(x) from (select arrayJoin([Null, Null, toDateTime('1970-06-28 23:48:12', 'Asia/Istanbul'), toDateTime('2070-04-12 21:16:41', 'Asia/Istanbul'), Null, Null, toDateTime('2106-02-03 06:38:52', 'Asia/Istanbul')]) as x);
CREATE TABLE test_376B334866472B4436474A226A5C6E4D34735440374F30544A57753E38314465286F53545837346A(x UInt8) Engine=Memory;
explain actions = 1 select number from (select number from numbers(500000000) order by -number) limit 10
SELECT concat('With ', materialize('{"foo": "bar"}' :: JSON));
CREATE DATABASE IF NOT EXISTS test_2zpe8yrj 
INSERT INTO test_01193_18429.table_5_329 VALUES 
SELECT '18446744073709551615', '18446744073709551616.000000000', 18446744073709551615 = 18446744073709551616.000000000, 18446744073709551615 != 18446744073709551616.000000000, 18446744073709551615 < 18446744073709551616.000000000, 18446744073709551615 <= 18446744073709551616.000000000, 18446744073709551615 > 18446744073709551616.000000000, 18446744073709551615 >= 18446744073709551616.000000000, 18446744073709551616.000000000 = 18446744073709551615, 18446744073709551616.000000000 != 18446744073709551615, 18446744073709551616.000000000 < 18446744073709551615, 18446744073709551616.000000000 <= 18446744073709551615, 18446744073709551616.000000000 > 18446744073709551615, 18446744073709551616.000000000 >= 18446744073709551615 , toUInt64(18446744073709551615) = 18446744073709551616.000000000, toUInt64(18446744073709551615) != 18446744073709551616.000000000, toUInt64(18446744073709551615) < 18446744073709551616.000000000, toUInt64(18446744073709551615) <= 18446744073709551616.000000000, toUInt64(18446744073709551615) > 18446744073709551616.000000000, toUInt64(18446744073709551615) >= 18446744073709551616.000000000, 18446744073709551616.000000000 = toUInt64(18446744073709551615), 18446744073709551616.000000000 != toUInt64(18446744073709551615), 18446744073709551616.000000000 < toUInt64(18446744073709551615), 18446744073709551616.000000000 <= toUInt64(18446744073709551615), 18446744073709551616.000000000 > toUInt64(18446744073709551615), 18446744073709551616.000000000 >= toUInt64(18446744073709551615) ;
INSERT INTO r1 SELECT 78
CREATE TABLE test_47365D33416435586B443664493C753E786F3D275C3156245128423E7C514D3E73232A2626316F29(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_5_406 VALUES 
insert into src2 values
INSERT INTO test_01193_18429.table_8_73 VALUES 
CREATE DATABASE IF NOT EXISTS test_cee9vdyj 
SELECT substring('abcdefgh', materialize(2), materialize(-2));
SELECT throwIf((SELECT (count(), sum(n)) FROM merge(currentDatabase(), '') WHERE type=4) != (toUInt8(0/2 + 1), (select sum(number) from numbers(1, 0) where number % 2 or number=0))) FORMAT Null
DROP DATABASE IF EXISTS test_9av2swya 
SELECT y, count() FROM cluster(test_cluster_1_shard_3_replicas_1_unavailable, currentDatabase(), 02918_parallel_replicas) GROUP BY y ORDER BY y SETTINGS max_parallel_replicas=3, parallel_replicas_custom_key='cityHash64(y)', parallel_replicas_custom_key_filter_type='range';
DROP DATABASE IF EXISTS test_0o0kn3c9 
alter table many_mutations delete where y = 75 * 2 settings mutations_sync = 0;
DROP DATABASE IF EXISTS test_03jgim7i 
CREATE DATABASE IF NOT EXISTS test_6rrv9yxu 
INSERT INTO test_01193_18429.table_7_900 VALUES 
SELECT extractTextFromHTML('Hello<style type="text/css">World <script>abc</script> </style> goodbye');
DROP DATABASE IF EXISTS test_o4lywppa 
CREATE INDEX idx_tab2_4 ON tab2 (col4 DESC,col3);
INSERT INTO csv FORMAT CSVWithNames
CREATE TABLE test_3C535668772B7B4B59773C5A416F575E7B7D574872266D635E25546B7D74545053684226715A5049(x UInt8) Engine=Memory;
select 1 = multiSearchAny(materialize('abcdefgh'), ['cdef']) from system.numbers limit 129;
select arrayIntersect([], []);
CREATE TABLE test_363921375D3D4B624E4D7669624950437A35327522332E325821256975505F574B523C232E305534(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_3_275 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_66434B5959453F43577638635456283D75785F7E5454703E4A6578205A39427D796D744E79612665(x UInt8) Engine=Memory;
SELECT dictGet('hashed_array_dictionary_simple_key_simple_attributes', 'value_first', number) as value_first, dictGet('hashed_array_dictionary_simple_key_simple_attributes', 'value_second', number) as value_second FROM system.numbers LIMIT 3;
CREATE TABLE test_01193_18429.table_1_219 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT a.number FROM system.numbers AS a LIMIT 1
SELECT 'out_transaction', count() FROM target;
SELECT t.t.t.*, t.t.t.* APPLY toTypeName FROM ttta FULL JOIN tttb USING (t.t);
CREATE TABLE test_6A4C752B733958204D386476453F7A6F7475235627796A355A40784071394B632344555C25254C29(x UInt8) Engine=Memory;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toInt32(-1) >= N as r FORMAT CSV;
show create table asynchronous_inserts format TSVRaw;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt16(1), toInt16(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
SELECT multiIf((number % 2) = 0, [toFloat32(1), toFloat32(2)], (number % 3) = 0, [toUInt32(2), toUInt32(3)], [toFloat64(3), toFloat64(3)]) FROM system.numbers LIMIT 10;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt16(1), toUInt16(2)] WHEN (number % 3) = 0 THEN [toUInt64(2), toUInt64(3)] ELSE [toUInt64(3), toUInt64(3)] END FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/00360_to_date_from_string_with_datetime.sql from pid=1724' 
CREATE DATABASE IF NOT EXISTS test_mmkymkur 
EXPLAIN QUERY TREE SELECT count() FROM constraint_test_constants WHERE (a > 100 OR b > 100 OR c > 100) AND (a <= 100 OR b > 100 OR c > 100) AND (NOT b > 100 OR c > 100) SETTINGS allow_experimental_analyzer = 1;
SELECT * FROM VALUES('x Decimal64(0)', (2));
SELECT toStartOfQuarter(toDate(16343));
select arrayCompact([1,1]);
select toDate32('2020-01-01') in 1::UInt64;
SELECT * FROM (SELECT * FROM (SELECT * FROM test_00597) ANY LEFT JOIN (SELECT * FROM test_00597) USING id) WHERE id = 1 SETTINGS allow_experimental_analyzer=0;
insert into tp2 select 'aaa', 2;
TRUNCATE data_01660;
CREATE TABLE subcolumns(n Nullable(UInt32), a1 Array(UInt32), a2 Array(Array(Array(UInt32))), a3 Array(Nullable(UInt32)), t Tuple(s String, v UInt32), m Map(String, UInt32)) ENGINE = TinyLog
SELECT count() = 8194, sum(s) = 8194 FROM replacing_00155
DROP ROLE test_role_01073;
attach database rdb_test_5mr53c62_3
DESCRIBE (SELECT * EXCEPT id REPLACE (5 AS id, 6 as value) APPLY toString FROM test_table);
SELECT date_trunc('quarter', toDateTime('2020-01-01 20:11:22', 'Europe/London'), 'Asia/Tokyo');
GRANT ALL ON *.* TO u01281
select * from test where a like '1%1' order by a;
SELECT JSONExtract('{"string_value":null}', 'string_value', 'LowCardinality(Nullable(String))') as x, toTypeName(x);
SELECT number % 3 = 2 ? (number, 'Hello') : (0, 'World') FROM system.numbers LIMIT 10;
SELECT normalizeQuery('SELECT $doc$VALUE$doc$, ''xyz11''');
CREATE TABLE test_01193_18429.table_6_823 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE tab1 (`a1` Int32, `b1` Int32) ENGINE = MergeTree ORDER BY a1 SETTINGS index_granularity = 40815, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.46450382471084595, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 15132, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 6397448149, index_granularity_bytes = 22252569, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 48255, primary_key_compress_block_size = 84000
SELECT isNullable(toLowCardinality(1));
INSERT INTO r3 SELECT 45
insert into function file(02483_data.LineAsString) select 'Hello' settings engine_file_truncate_on_insert=1;
SELECT toInt64(0), bitPositionsToArray(toInt64(0));
CREATE ROLE test_role_02244;
CREATE TABLE test_62687E7126753E4B55413E63377B2B745138266C613B4C4A5E4E3559613D2532605271333367693C(x UInt8) Engine=Memory;
INSERT INTO r7 SELECT 11
SELECT number, neighbor('ClickHouse', -15) FROM numbers(10);
DESCRIBE (SELECT value.value_0_level_0 AS value_alias, value_alias.* APPLY toString FROM test_table);
insert into test_02302 select 2 settings s3_create_new_file_on_insert = true;
CREATE DATABASE test_jlnyr8ig_1
SELECT pointInPolygon((39.840202, 21.451471), [(39.89348, 21.39296),(39.89286, 21.39348),(39.89194, 21.39401),(39.88552, 21.39692),(39.8847, 21.3955),(39.88413, 21.39366),(39.88401, 21.39185),(39.88434, 21.39012),(39.88475, 21.38944),(39.88506, 21.38913),(39.88593, 21.38845),(39.88615, 21.38848),(39.88648, 21.38874),(39.88738, 21.38915),(39.89272, 21.39085),(39.89371, 21.39128),(39.89392, 21.39143),(39.89398, 21.39158),(39.89408, 21.39224),(39.89348, 21.39296)]);
SELECT t1.key, t1.key2 FROM t1 INNER ALL JOIN t2 ON t1.id == t2.id AND t2.key == t2.key2 ORDER BY t1.key, t1.key2;
SELECT rand() % 100;
create table data_read (key Int) engine=ReplicatedMergeTree('/tables/{database}/data', 'read') order by key;
SELECT count() FROM t_cnf_fuzz WHERE (c3) OR ((NOT c1) AND (NOT c3) AND (NOT c2) AND (NOT c7) AND c2) OR ((NOT c6) AND c7) OR (c0) OR (c6 AND c7 AND c2) OR (c7) OR (c8 AND (NOT c0) AND (NOT c1) AND (NOT c9) AND c4) SETTINGS convert_query_to_cnf = 0
INSERT INTO test_01193_18429.table_3_953 VALUES 
INSERT INTO test_01193_18429.table_2_307 VALUES 
SELECT nullIf(toNullable(toDecimal128(1, 0)), toDecimal128(2, 0));
DESCRIBE (SELECT cast(tuple(1, 'Value'), 'Tuple (id UInt64, value String)') AS compound_value, arrayMap(x -> compound_value.* EXCEPT value APPLY toString, [1,2,3]));
 SELECT view_name, view_type, view_query, view_target, read_rows, read_bytes, written_rows, written_bytes, replace(status::String, 'Exception', 'Exc*****on') as status, exception_code FROM system.query_views_log WHERE event_date >= yesterday() AND initial_query_id = (SELECT flush_query_id FROM system.asynchronous_insert_log WHERE event_date >= yesterday() AND query_id = 'bvyykdrlez') FORMAT Vertical
SHOW TABLES FROM test_osmy88n0
drop table if exists mv_01278_2;
SELECT 'Depending views 2' as stage, view_name, view_type, status, view_target, view_query, read_rows, written_rows, ProfileEvents['SleepFunctionCalls'] as sleep_calls, ProfileEvents['SleepFunctionMicroseconds'] as sleep_us, ProfileEvents['SelectedRows'] as profile_select_rows, ProfileEvents['SelectedBytes'] as profile_select_bytes, ProfileEvents['InsertedRows'] as profile_insert_rows, ProfileEvents['InsertedBytes'] as profile_insert_bytes FROM system.query_views_log WHERE initial_query_id = ( SELECT initial_query_id FROM system.query_log WHERE query like '-- INSERT 2%INSERT INTO table_d%' AND current_database = currentDatabase() AND event_date >= yesterday() LIMIT 1 ) ORDER BY view_name FORMAT Vertical;
CREATE INDEX idx_tab3_5 ON tab3 (col1 DESC,col3);
CREATE DATABASE IF NOT EXISTS test_l5cvn347 
INSERT INTO testNullableStates SELECT toDateTime('2020-01-01 00:00:00') + number AS ts, toString(number % 999 - 5) AS id, NULL AS string, NULL AS float64, NULL AS float32, NULL AS decimal325, NULL, NULL, NULL, NULL, NULL, NULL, NULL FROM numbers(500);
DROP TABLE test_nullable_float_issue7347;
CREATE TABLE test_4E226A777E2E345C4C763E2F203D26525476567B7873412D4844482961236C65795F2E25374F5D32(x UInt8) Engine=Memory;
select jsonMergePatch(null);
CREATE TABLE ties (a Int) ENGINE = Memory;
SELECT 0 = dictHas(concat('test_7kssh40k', '.dict_ip_trie'), tuple(IPv6StringToNum('654f:3716:ffff::')))
SELECT 'Running test stateless/01852_dictionary_found_rate_long.sql from pid=1705' 
select format('{}{}', toFixedString('a', 1), 'b') == 'ab';
INSERT INTO test_02908_r1_283 SELECT rand64() FROM numbers(5);
select * from file(data_02313.avro);
ATTACH TABLE mutate_and_zero_copy_replication2;
select IPv4NumToString(toUInt32(0)) == '0.0.0.0';
select value % -9223372036854775808 from (select toInt32(arrayJoin([3, 5])) value);
CREATE INDEX idx_tab2_0 ON tab2 (col3,col4 DESC);
DROP DATABASE IF EXISTS test_vp8ffhdi 
select x, y, v, v.String, v.UInt64 from test order by x
SELECT 'Running test stateless/02370_extractAll_regress.sql from pid=1724' 
CREATE TABLE test_01193_18429.table_10_712 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT DISTINCT UserID FROM audience_local PREWHERE Date = toDate('2019-07-25') AND Release = '17.11.0.542';
CREATE TABLE test_01193_18429.table_10_46 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test1_00395(col1 Nullable(Int8), col2 Nullable(UInt16), col3 Nullable(Float32)) Engine=TinyLog;
select * from numbers(1) t1 anti right join numbers(1) t2 using number;
with t + 1 as s select t from tab where s > '2020-01-01 01:01:01';
select value from system.settings where name='distributed_ddl_output_mode';
SELECT 'Running test stateless/02150_replace_regexp_all_empty_match.sql from pid=1713' 
select 'byteSize for complex fields';
CREATE TABLE test_3C3030216D383A6135282E34375E547B4437607D4E3B2B59506D225467505E66244B312775377A3F(x UInt8) Engine=Memory;
SELECT 'DROP database - Directory not empty error, but database detached';
DROP DATABASE IF EXISTS test_2di7slc1 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c8) AND c8 AND c0) OR ((NOT c9) AND c0) OR ((NOT c2) AND c9) OR ((NOT c3) AND c9) OR ((NOT c8) AND (NOT c3)) OR (c5 AND (NOT c6)) OR ((NOT c3) AND (NOT c8) AND (NOT c6) AND (NOT c1) AND (NOT c2)) OR ((NOT c2) AND (NOT c7) AND c8) SETTINGS convert_query_to_cnf = 1
SELECT a, b FROM (SELECT 1 AS a) ANY FULL JOIN (SELECT 1 AS a, 1 AS b) USING (a) WHERE b = 0;
EXPLAIN SYNTAX SELECT t2.1 FROM t_tuple_element;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt16(1), toUInt16(2)] WHEN (number % 3) = 0 THEN [toFloat32(2), toFloat32(3)] ELSE [toInt16(3), toInt16(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE mt (`x` UInt64) ENGINE = MergeTree ORDER BY x SETTINGS cleanup_delay_period = 1, cleanup_delay_period_random_add = 0, cleanup_thread_preferred_points_per_iteration = 0, old_parts_lifetime = 1, parts_to_delay_insert = 100000, parts_to_throw_insert = 100000, index_granularity = 47541, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 12, merge_max_block_size = 13518, prefer_fetch_merged_part_size_threshold = 4770874965, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 8, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 6414358, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 31771, primary_key_compress_block_size = 26477
CREATE TABLE test_table ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 51199, min_bytes_for_wide_part = 542191156, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 69, merge_max_block_size = 5287, prefer_fetch_merged_part_size_threshold = 2027391621, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 33, min_merge_bytes_to_use_direct_io = 9366228639, index_granularity_bytes = 30004051, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 35873, primary_key_compress_block_size = 43587 AS SELECT * FROM test_table_data
CREATE TABLE test_2959782A39535F3B554159523C274D63372362223A5E40605B3C4238633E5C2A285668525C702834(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02357_file_default_value.sql from pid=1714' 
CREATE TABLE src (`p` UInt64, `k` String, `d` UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/01034_move_partition_from_table_zookeeper_test_g36gekyz/src2', '1') PARTITION BY p ORDER BY (d, p) SETTINGS index_granularity = 14093, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 6411, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 952904313, index_granularity_bytes = 14029348, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 91034, primary_key_compress_block_size = 30682
SELECT count() FROM null_in_1 WHERE (a, b) IN (NULL, NULL);
select dictGetAll('regexp_dict4', 'pattern', 'FOO');
CREATE TABLE not_partitioned_replica2_00502 (`x` UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test/not_partitioned_00502', '2') ORDER BY x SETTINGS index_granularity = 51693, min_bytes_for_wide_part = 334324242, ratio_of_defaults_for_sparse_serialization = 0.8895542621612549, replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 10896, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 7036590958, index_granularity_bytes = 19358850, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 84164, primary_key_compress_block_size = 18504
select substringIndex(materialize('www.clickhouse.com'), '.', materialize(2));
SELECT pointInPolygon((97.66905, 16.5026053), [(97.66905, 16.5026053), (97.667878, 16.4979175), (97.661433, 16.4917645), (97.656745, 16.4859047), (97.656745, 16.4818029), (97.658796, 16.4785801), (97.665535, 16.4753572), (97.670808, 16.4730135), (97.676082, 16.4697907), (97.680477, 16.4677398), (97.68575, 16.4686189), (97.689559, 16.4727207), (97.69454, 16.4744788), (97.698055, 16.4747718), (97.702157, 16.4724279), (97.703036, 16.4683261), (97.703036, 16.4633453), (97.702451, 16.4594354), (97.699533, 16.4539205), (97.699106, 16.4521467), (97.699896, 16.4500714), (97.701852, 16.4474887), (97.701272, 16.4460233), (97.699896, 16.4439216), (97.699857, 16.4425297), (97.700705, 16.4417585), (97.699266, 16.4404319), (97.696817, 16.439585), (97.69468, 16.4391501), (97.690854, 16.439294), (97.686571, 16.4407665), (97.683728, 16.4428458), (97.680647, 16.444719), (97.678369, 16.445322), (97.675195, 16.4448526), (97.672627, 16.4435941), (97.670568, 16.4419727), (97.667276, 16.4410039), (97.666215, 16.439402), (97.66599, 16.43656), (97.664579, 16.435632), (97.66195, 16.4344612), (97.659174, 16.4324549), (97.658693, 16.4290256), (97.659289, 16.4246502), (97.660882, 16.422609), (97.663533, 16.4225057), (97.666402, 16.4210711), (97.67148, 16.4170395), (97.673433, 16.4146478), (97.674184, 16.4124121), (97.6742, 16.4085257), (97.674894, 16.4055148), (97.675906, 16.4019452), (97.675287, 16.3996593), (97.675062, 16.3963334), (97.675798, 16.3936434), (97.675676, 16.3909321), (97.67508, 16.386655), (97.679839, 16.386241), (97.689403, 16.3726191), (97.692011, 16.372909), (97.696359, 16.3679819), (97.699866, 16.360968), (97.697233, 16.3609438), (97.693077, 16.3596272), (97.686631, 16.3584552), (97.68165, 16.3558182), (97.674619, 16.3496653), (97.667588, 16.3482003), (97.664072, 16.3502511), (97.659384, 16.3540599), (97.652353, 16.3578686), (97.649716, 16.3625565), (97.650595, 16.3672443), (97.65206, 16.3701742), (97.65206, 16.3733971), (97.651181, 16.3760339), (97.646493, 16.3763268), (97.6462, 16.3801357), (97.646786, 16.3851165), (97.643563, 16.3883393), (97.638583, 16.3889252), (97.636239, 16.392148), (97.630379, 16.3933199), (97.629132, 16.3964903), (97.624347, 16.4056104), (97.615377, 16.4165245), (97.614779, 16.4229534), (97.611938, 16.4335685), (97.613882, 16.4410439), (97.619713, 16.4461272), (97.62375, 16.4542007), (97.62345, 16.4640683), (97.618965, 16.4793181), (97.617321, 16.4884382), (97.617747, 16.4985751), (97.623301, 16.5026416), (97.629303, 16.5016624), (97.63272, 16.4986048), (97.640862, 16.498226), (97.647134, 16.5006382), (97.650873, 16.5051263), (97.654987, 16.5089598), (97.65639, 16.5118583), (97.658166, 16.5160658), (97.660395, 16.5197566), (97.66612, 16.5140318), (97.668757, 16.507879), (97.66905, 16.5026053)]);
INSERT INTO test_01193_18429.table_3_183 VALUES 
DROP TABLE IF EXISTS t_enum8;
select 25, * from test where id = 2
CREATE DATABASE test_lazy_01014_concurrent_test_bo56il5m ENGINE = Lazy(1);
CREATE TABLE test_01193_18429.table_6_623 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_9_822 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE DATABASE IF NOT EXISTS test_1q46adzu 
INSERT INTO test_01193_18429.table_4_473 VALUES 
CREATE TABLE test_01193_18429.table_5_19 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO table_02513 SELECT number+11*13*1000 FROM numbers(20);
EXPLAIN QUERY TREE (SELECT 2.11 * count(uint64) + sum(uint64) From test_table);
INSERT INTO r1 SELECT 89
CREATE TABLE test_01193_18429.table_4_656 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/00229_prewhere_column_missing.sql from pid=1714' 
SELECT val FROM tab WHERE nowInBlock(tz) != toDateTime('2000-01-01 00:00:00') ORDER BY val SETTINGS allow_nonconst_timezone_arguments = 1;
ALTER TABLE concurrent_alter_add_drop_2 ADD COLUMN value2 UInt32 DEFAULT 42 SETTINGS replication_alter_partitions_sync=0
INSERT INTO test_01193_18429.table_9_624 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN toUInt8(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toInt16(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_02908_r2_105 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_105', 'r2') ORDER BY tuple()
CREATE TABLE test_01193_18429.table_8_122 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP DATABASE IF EXISTS test_3ro1arxj 
DROP DATABASE IF EXISTS test_3rummss3 
DROP TABLE mt_01451;
select runningDifference(x) from (select arrayJoin([Null, Null, toDate('1970-1-1'), toDate('1970-12-31'), Null, Null, toDate('2010-8-9')]) as x);
DROP DATABASE IF EXISTS test_la8x1yc1 
SELECT * FROM remote('127.0.0.{1,2}', generateRandom('x Array(Array(Array(UInt8)))', 1, 1, 1)) LIMIT 1 FORMAT Null
SELECT 5 AS constant, arrayMap(x -> x + arrayMap(x -> x + constant, [1])[1], [1,2,3]) FROM test_table;
CREATE TABLE test_3B32737B312A3444566E303273235E5467797D474C5024303D455A3D3F755D347C5D2231704B7C35(x UInt8) Engine=Memory;
CREATE TABLE test_29432750672B542D40636F4362386D4B373C3B255A5B3C23293C614757485A207A41716862386439(x UInt8) Engine=Memory;
CREATE INDEX idx_tab4_1 ON tab4 (col4 DESC,col1);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (110 < 52 AND 55 > 0 ? 110 : 0)), throwIf(last != (110 < 52 AND 55 > 0 ? least(52 - 1, 110 + 55 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(52) LIMIT 110, 55);
create table db_01870.z_buffer_01870 as system.numbers Engine=Buffer(db_01870, a_data_01870, 1, 100, 100, /* time */ 100, 100, /* rows */ 100, 1e6 /* bytes */ );
SET default_table_engine = 'Memory';
SELECT 'Running test stateless/02458_key_condition_not_like_prefix.sql from pid=1722' 
SELECT [2, 1, 3] AS arr, arraySort(arr), arrayReverseSort(arr), arraySort(x -> -x, arr);
select makeDate32(NULL, 3, 4);
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toUInt16(2) ELSE toUInt8(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_9_324 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT count(), sum(ProfileEvents['MergedIntoWideParts']), sum(ProfileEvents['MergedIntoCompactParts']) FROM system.query_log WHERE current_database = currentDatabase() AND log_comment = '02306_part_types_profile_events' AND query ILIKE 'OPTIMIZE TABLE%' AND type = 'QueryFinish';
INSERT INTO test_01193_18429.table_6_788 VALUES 
INSERT INTO testSummingMT (*) VALUES 
CREATE TABLE t_sparse (`id` UInt64, `u` UInt64, `s` String, `arr1` Array(String), `arr2` Array(UInt64)) ENGINE = MergeTree ORDER BY tuple() SETTINGS ratio_of_defaults_for_sparse_serialization = 0.1, index_granularity = 60281, min_bytes_for_wide_part = 0, replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 7075, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 67, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 4149809, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 14179, primary_key_compress_block_size = 49284
CREATE TABLE test_01193_18429.table_2_705 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'Running test stateless/02151_http_s_structure_set_eof.sh from pid=1714' 
CREATE TABLE test_01193_18429.table_4_315 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT regionToName(NULL);
SELECT 't1 ALL FULL JOIN tn2 | bs = 5';
select 'MsgPack';
CREATE TABLE test_01193_18429.table_8_706 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT count() FROM t_cnf_fuzz WHERE (c9 AND c4 AND (NOT c4) AND c2 AND c8) OR ((NOT c2) AND c5 AND c0) OR ((NOT c2)) SETTINGS convert_query_to_cnf = 0
create table mapop_test engine=TinyLog() as (select map(1, toInt32(2), number, 2) as m from numbers(1, 10));
drop table if exists data_01756_str;
/* toHour */ SELECT 'toHour';
SELECT *, x=4 FROM merge(currentDatabase(), '02763_merge_merge') ORDER BY x SETTINGS optimize_move_to_prewhere= 1;
INSERT INTO test_01193_18429.table_8_741 VALUES 
DROP DATABASE IF EXISTS test_q33y7ypu 
alter table many_mutations delete where y = 883 * 2 settings mutations_sync = 0;
insert into aliases_lazyness(x) select * from numbers(100);
SELECT * FROM system.aggregate_function_combinators LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
drop table 02681_undrop_log;
CREATE TABLE test_61434351417D5C6F3772442A48524154645571242B233B4C56227B3933243F592771707125422D36(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_5_287 VALUES 
SELECT t1.*, t2.* FROM t1 LEFT JOIN t2 ON t1.y = t2.y ORDER BY x;
CREATE TABLE test_02908_r2_250 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_250', 'r2') ORDER BY tuple()
GRANT SELECT ON system.one TO session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_plaintext_password_two_profiles_two_roles;
DROP TABLE IF EXISTS csv
SELECT dictGetHierarchy('hierachical_flat_dictionary', number) FROM system.numbers LIMIT 6;
DROP TABLE IF EXISTS test_7yb5p3v5_1.data_02716_3
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toInt32(2) ELSE toFloat32(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_25703D30774149354E7A29294D223C493559694C5533756C56722B294E51357B497552515A71613C(x UInt8) Engine=Memory;
INSERT INTO test_hjqqp1i2.v_00751 FORMAT Values
DROP DATABASE IF EXISTS test_8dmwm166 
drop table if exists test_ins_arr_arr;
CREATE TABLE test_01193_18429.table_7_236 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
/* cutIPv6 */ /* ÃÂ ÃÂµÃÂ°ÃÂ»ÃÂÃÂ½ÃÂÃÂ¹ IPv6-ÃÂ°ÃÂ´ÃÂÃÂµÃÂ */ SELECT cutIPv6(IPv6StringToNum('2001:0DB8:AC10:FE01:FEED:BABE:CAFE:F00D'), 0, 0);
CREATE TABLE test_01193_18429.table_8_158 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_q679yo86 
select sipHash64Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19)) == sipHash64(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19));
CREATE DATABASE IF NOT EXISTS test_xm5jyex7 
select format('{}{}{}', toFixedString('a', 1), materialize('b'), materialize('c')) == 'abc';
CREATE DATABASE IF NOT EXISTS test_vioe4ycx 
SELECT COUNT() FROM bloom_filter_null_types_test WHERE isNull(fixed_string);
CREATE INDEX idx_tab4_3 ON tab4 (col4 DESC,col1 DESC);
CREATE TABLE test_01532_3 (a Array(Tuple(key String, value String))) ENGINE Memory();
CREATE TABLE morton_numbers_mask_02457 (`n1` UInt8, `n2` UInt8, `n3` UInt8, `n4` UInt8) ENGINE = MergeTree ORDER BY n1 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 667073379, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 4777, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 9068, primary_key_compress_block_size = 59207
SHOW CREATE PROFILE s9_01294;
create table X (id Int32, x_name String) engine Memory;
SELECT intDiv(number, 2) AS k, count(), argMax(toString(number), number) FROM (SELECT number FROM system.numbers LIMIT 500000) GROUP BY k WITH TOTALS ORDER BY k LIMIT 10;
SELECT toString(toStartOfHour(toDateTime(1549483055), 'Asia/Tokyo'), 'Asia/Tokyo');
ALTER TABLE wrong_metadata_wide RENAME COLUMN column1 TO column1_renamed SETTINGS replication_alter_partitions_sync = 0;
ALTER TABLE alter_test ADD COLUMN IF NOT EXISTS Added0 UInt32;
CREATE TABLE test_01193_18429.table_10_357 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT CASE WHEN (number % 2) = 0 THEN toFloat64(1) WHEN (number % 3) = 0 THEN toFloat64(2) ELSE toUInt8(3) END FROM system.numbers LIMIT 10;
create table s_00725_2(a Int64, b Int64) engine = TinyLog;
INSERT INTO test_01193_18429.table_7_210 VALUES 
DETACH TABLE test_dist_02536;
CREATE TABLE test_4072265A315B542B282C46457C55485A454C4D477A2D674E652C6D3C505451566B6C5A5B3347346C(x UInt8) Engine=Memory;
drop table if exists dist2_layer_01071;
CREATE TABLE test_01193_18429.table_7_477 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_9_20 VALUES 
CREATE TABLE test_584043625F31392E54534A2E556D2B382F224A2F4A3243744D7A252C414D4A57776E525A7530474A(x UInt8) Engine=Memory;
SELECT regionToName(number::UInt32, 'en'), regionToPopulation(number::UInt32) AS id, regionToName(id, 'en') FROM numbers(13);
SELECT multiIf((number % 2) = 0, [toInt8(1), toInt8(2)], (number % 3) = 0, [toUInt16(2), toUInt16(3)], [toFloat32(3), toFloat32(3)]) FROM system.numbers LIMIT 10;
SELECT has(c, toDecimal128(0.7, 3)), has(c, toDecimal128(1.0, 3)) FROM decimal;
select round(1000 * ngramSearch('',materialize('')))=round(1000 * ngramSearch(materialize(''), '')) from system.numbers limit 5;
DROP TEMPORARY TABLE IF EXISTS test_00744;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (17 < 95 AND 7 > 0 ? 17 : 0)), throwIf(last != (17 < 95 AND 7 > 0 ? least(95 - 1, 17 + 7 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(95) LIMIT 17, 7);
select positionCaseInsensitive(materialize('') as h, '' as n) = positionCaseInsensitive(h, n);
SET max_partitions_per_insert_block = 0;
SELECT 'Delete 100K rows using lightweight DELETE';
select -6 as offset, 6 as length, 'Hello' as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 40648, 500 settings ignore_materialized_views_with_dropped_target_table=1
select sipHash64Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52)) == sipHash64(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52));
CREATE TABLE concurrent_alter_add_drop_3 (`key` UInt64, `value0` UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/01079_parallel_alter_add_drop_column_zookeeper_test_acn9rii2/concurrent_alter_add_drop_column', '3') ORDER BY key SETTINGS max_replicated_mutations_in_queue = 1000, number_of_free_entries_in_pool_to_execute_mutation = 0, max_replicated_merges_in_queue = 1000, index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 33877562, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 7990, prefer_fetch_merged_part_size_threshold = 1326196179, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 59284, primary_key_compress_block_size = 83320
DROP DATABASE IF EXISTS test_zyunoo66 
SELECT sumWithOverflowMap(statusMap) FROM sum_map_decimal;
INSERT INTO test_01193_18429.table_3_144 VALUES 
CREATE DATABASE IF NOT EXISTS test_0dkuwgi7 
CREATE TABLE test_383C6C623A6D5E314F7B246F7A40746E6332487933502D58272854437B6F293A76224A35316F426D(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_10_990 VALUES 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c8) AND (NOT c9) AND (NOT c8) AND c4 AND (NOT c9)) OR (c0) OR ((NOT c2) AND (NOT c8) AND c5 AND c5) OR (c8 AND (NOT c9) AND (NOT c4) AND (NOT c9)) OR (c2) OR (c8 AND (NOT c0) AND c0 AND (NOT c5) AND (NOT c9)) OR (c7 AND (NOT c2)) OR (c1 AND c0 AND (NOT c8) AND c9) SETTINGS convert_query_to_cnf = 0
CREATE DATABASE IF NOT EXISTS test_1pgv8xm4 
select count(), * from dist_01247 group by number with rollup;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 13575, 500 settings ignore_materialized_views_with_dropped_target_table=1
select 0 = multiMatchAny(materialize('abcd'), ['cde']) from system.numbers limit 10;
SELECT 'Running test stateless/01009_global_array_join_names.sql from pid=1720' 
CREATE DATABASE IF NOT EXISTS test_j0dzs4ib 
set param_n = 13;
INSERT INTO foo_c VALUES 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (57 < 55 AND 91 > 0 ? 57 : 0)), throwIf(last != (57 < 55 AND 91 > 0 ? least(55 - 1, 57 + 91 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(55) LIMIT 57, 91);
CREATE WINDOW VIEW wv TO dst AS SELECT tumbleStart(w_id) AS time, colA, colB FROM mt GROUP BY tumble(now('US/Samoa'), INTERVAL '10' SECOND, 'US/Samoa') AS w_id, colA, colB;
SELECT avgWeighted(x, w) FROM values('x UInt16, w Int8', (0, 0), (1, 0));
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 33264, 500 settings ignore_materialized_views_with_dropped_target_table=1
SYSTEM STOP MERGES summing_00155
select toColumnTypeName(map(1, assumeNotNull(materialize(NULL))));
SELECT t1.key, t2.key, length(t1.s), t2.s FROM t1 AS t1 ALL RIGHT JOIN t2 AS t2 ON t1.key == t2.key ORDER BY t1.key, t2.key, t2.s;
CREATE TABLE test_02908_r2_65 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_65', 'r2') ORDER BY tuple()
SELECT round(corrStable(DISTINCT x, y), 5) FROM (SELECT number % 10 AS x, number % 5 AS y FROM remote('127.0.0.{1,2}', numbers(1000)));
INSERT INTO logs VALUES
INSERT INTO test_01193_18429.table_7_199 VALUES 
INSERT INTO test_01193_18429.table_8_420 VALUES 
select -7 as offset, 7 as length, 'Hello' as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
OPTIMIZE TABLE small_table FINAL;
SELECT * FROM 02668_logical_optimizer WHERE a <> 1 AND 1 <> a;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c8) AND c0) OR (c2 AND (NOT c6) AND c4 AND c7) OR ((NOT c6) AND (NOT c7) AND (NOT c0) AND c0) OR ((NOT c6) AND c7 AND c3 AND c1 AND c6) OR (c7) OR ((NOT c3) AND (NOT c3)) OR ((NOT c8) AND c1 AND (NOT c2)) OR (c0 AND (NOT c3) AND (NOT c1) AND c1 AND (NOT c6)) OR (c0 AND c8) SETTINGS convert_query_to_cnf = 1
INSERT INTO test_01193_18429.table_1_694 VALUES 
insert into summing_merge_tree_aggregate_function select 1, avgState(0.375);
CREATE INDEX idx_tab3_3 ON tab3 (col0,col4 DESC);
CREATE TABLE test_02908_r2_46 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_46', 'r2') ORDER BY tuple()
CREATE TABLE test_5B5E2439715F676C4F41345F692C2D77433277594E3147266A31223F754D4C77213969632B735B48(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_6ait0q09 
DROP TABLE IF EXISTS t_object_convert;
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat64(1), toFloat64(2)] WHEN (number % 3) = 0 THEN [toUInt32(2), toUInt32(3)] ELSE [toUInt8(3), toUInt8(3)] END FROM system.numbers LIMIT 10;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt16(1), toUInt16(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toFloat32(3), toFloat32(3)] END FROM system.numbers LIMIT 10;
DROP TABLE test_fetch;
DROP DATABASE IF EXISTS test_t1fwus88 
CREATE MATERIALIZED VIEW mview TO mview_backend AS SELECT n, n * n AS "n2" FROM test_table;
SELECT multiIf(1, col2, 1, 'bar', 'baz') FROM multi_if_check;
SELECT multiIf((number % 2) = 0, toInt32(1), (number % 3) = 0, toInt16(2), toInt64(3)) FROM system.numbers LIMIT 10;
SELECT 'SELECT N >= toInt32(-1)';
CREATE TABLE test_47417C6F6D4979583B644B7E4C36727A335F3039532D405B6F70394F5F4157515C6C615C587A4F66(x UInt8) Engine=Memory;
SELECT ipv6_, hex(ipv6_) FROM ipv6_test ORDER BY ipv6_;
INSERT INTO test_01193_18429.table_9_922 VALUES 
CREATE TABLE test_5A4C584B6825485D3E3F614E495078784C6D72653B2923757C2C752D4C36544B4851515754286266(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00098_g_union_all.sql from pid=1713' 
CREATE TABLE test_5D5D563B4126457E476178322B417138484F325D72455F26413067632230607B7440775B2B31267A(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_6_39 VALUES 
CREATE TABLE test_736D5A7D512C5F507C4D6C31656F653F4B38343054562C286F6E385D202866776C7B656273666675(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_3_507 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE INDEX idx_tab4_3 ON tab4 (col4,col1);
SHOW CREATE TABLE unsigned_types;
DROP DICTIONARY IF EXISTS 02183_hashed_dictionary;
INSERT INTO r2 SELECT 77
CREATE DATABASE IF NOT EXISTS test_k4cj06j1 
ALTER TABLE b MODIFY COLUMN x Nullable(UInt8)
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a SEMI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d USING (id) ;
SELECT 'Running test stateless/02477_s3_request_throttler.sh from pid=1722' 
SELECT sum(number / 2) FROM numbers(10);
CREATE TABLE test_01193_18429.table_2_609 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Running test stateless/01760_ddl_dictionary_use_current_database_name.sql from pid=1705' 
SELECT t1.value, t2.value, t3.value FROM test_table_join_1 AS t1 FULL JOIN test_table_join_2 AS t2 ON t1.id = t2.id OR t1.id = t2.id LEFT JOIN test_table_join_3 AS t3 ON t2.id = t3.id OR t3.id = t2.id;
CREATE TABLE test_01193_18429.table_7_384 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP TABLE numbers;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (52 < 64 AND 41 > 0 ? 52 : 0)), throwIf(last != (52 < 64 AND 41 > 0 ? least(64 - 1, 52 + 41 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(64) LIMIT 52, 41);
CREATE DATABASE IF NOT EXISTS test_ykq78e1q 
INSERT INTO test_01193_18429.table_5_447 VALUES 
CREATE TABLE test_01193_18429.table_5_644 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_384E7849222C44397B49687D56774C5F606F7138623D5C2F5E2B7C7370583F526C4A63246C467E36(x UInt8) Engine=Memory;
CREATE TABLE test_5C705C656D307424617060356C6778214D36313C552B424A6D6D2C21435A475F5129326424524B7A(x UInt8) Engine=Memory;
SELECT count() FROM composite_partition_key WHERE a < 200 AND c = 2 FORMAT XML SETTINGS optimize_trivial_count_query = 0
INSERT INTO test_01193_18429.table_5_149 VALUES 
CREATE TABLE test_5166427A723B4423475E7C3321603F5B333F43324A274A5D6947206D6D4C7D79343E5B56206A5550(x UInt8) Engine=Memory;
select a, b from tab_00717 group by a, b order by a, b;
SELECT 1 FROM test_table_join_1 AS t1 LEFT JOIN test_table_join_2 AS t2 USING (id) RIGHT JOIN test_table_join_3 AS t3 USING(id);
select [7] = multiSearchAllPositions(materialize('abcdefgh'), ['gh']);
SELECT toISOYear(NULL);
CREATE DATABASE IF NOT EXISTS test_vybc84sd 
CREATE TABLE test_01193_18429.table_3_6 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DATABASE IF NOT EXISTS test_tfjckn6l 
CREATE TABLE test_01193_18429.table_9_566 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_6_528 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_02102 (x UInt32, y String DEFAULT 'default', z Date) engine=Memory()
SELECT ngrams(NULL, NULL);
CREATE TABLE test_02908_r3_113 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_113', 'r3') ORDER BY tuple()
SELECT getSetting('max_block_size')
select sumMap(val, cnt) from ( SELECT [ CAST(1, 'UInt64') ] as val, [1] as cnt );
DETACH TABLE union;
DROP TABLE 2025_test_db.view_table;
CREATE INDEX idx_tab2_5 ON tab2 (col1 DESC,col4 DESC);
SELECT parseDateTimeBestEffortOrNull(NULL, NULL);
INSERT INTO mt VALUES /* (48, 2) */ 
SELECT 1 = dictHas(concat('test_7kssh40k', '.dict_ipv4_trie'), tuple(IPv4StringToNum('127.255.128.127')))
CREATE TABLE test_01193_18429.table_3_309 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select has([toUInt64(0)], number) from system.numbers limit 10;
SELECT today() = CURDATE();
INSERT INTO test_01193_18429.table_1_316 VALUES 
SELECT multiIf(1, toFixedString(col2, 16), 1, 'bar', 'baz') FROM multi_if_check;
SELECT multiIf((number % 2) = 0, [toUInt16(1), toUInt16(2)], (number % 3) = 0, [toUInt32(2), toUInt32(3)], [toUInt32(3), toUInt32(3)]) FROM system.numbers LIMIT 10;
SELECT 1 = dictHas(concat('test_7kssh40k', '.dict_ipv4_trie'), tuple(IPv4StringToNum('127.255.128.255')))
SELECT number AS id, toString(number) AS s, range(number) AS arr FROM numbers(10) FORMAT CSV
DROP DATABASE IF EXISTS test_kthn2k7b 
CREATE DATABASE IF NOT EXISTS test_e8goqt2a 
SHOW CREATE USER test_user_02867;
WITH now64(6) as n, toDateTime64('2024-02-22 04:05:36.047308', 3) as test_start_time SELECT replaceAll(user, 'session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da', '${BASE_USERNAME}') as user_name, interface, type, if(count(*) > 1, 'many', toString(count(*))) -- do not rely on count value since MySQL does arbitrary number of retries FROM system.session_log WHERE (user LIKE '%session_log_test_xml_user%' OR user LIKE '%session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da%') AND event_time_microseconds >= test_start_time GROUP BY user_name, interface, type ORDER BY user_name, interface, type;
SELECT count() FROM system.processes WHERE query_id LIKE '01167_isolation_hermitage_test_bvbtk2qs_tx13%'
CREATE TABLE test_2C392639262066724D6B5D403B3D385F4B3F76704D582431742059392C6D2D7C543A383E4D31443F(x UInt8) Engine=Memory;
INSERT INTO numbers_mt SELECT * FROM system.numbers LIMIT 1, 1000000;
CREATE TABLE test_01193_18429.table_1_20 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT key FROM ( SELECT key FROM t1 ) AS t1 JOIN ( SELECT key FROM t1 ) AS t2 ON t1.key = t2.key WHERE key;
CREATE TABLE test_4C30502D3F5C3D3730682A2378667C4E2A5E2D544E41306C493A5929616D4C724E2D68266637756A(x UInt8) Engine=Memory;
SELECT * FROM calendar WHERE (year, month) IN ( SELECT (year, month) FROM events32 );
select arrayPopBack([0.1, 0.2, 0.3]);
SELECT age('month', toDateTime64('2015-01-02 20:30:36.200', 3, 'UTC'), toDateTime64('2016-05-01 20:30:36.200', 3, 'UTC'));
CREATE TABLE t1 (`id` LowCardinality(Nullable(Int64))) ENGINE = MergeTree ORDER BY id SETTINGS allow_nullable_key = 1, index_granularity = 1, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 52, merge_max_block_size = 4565, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 8279905566, index_granularity_bytes = 25661628, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 40306, primary_key_compress_block_size = 37062
CREATE TABLE test_01193_18429.table_9_408 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT DISTINCT arrayReduce('quantiles(0.5)', []::Array(Float64)) FROM numbers(1000) LIMIT 10;
SELECT number FROM numbers(10) FORMAT MsgPack
ALTER TABLE concurrent_alter_column ADD COLUMN c224 DOUBLE;
DROP DATABASE IF EXISTS test_h0zczyvf 
create table data_01270 (key LowCardinality(Int)) Engine=Null();
SELECT arrayCompact(['hello', '', '', '', 'world', 'world']);
INSERT INTO test_01193_18429.table_9_37 VALUES 
CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_6;
select row_number() over (order by dummy) as x from remote('127.0.0.{1,2}', system, one) order by x;
CREATE TABLE test_723D6D6A407A735B714E57696D2930495B7737275B4D6E6E3E33714E755E6E432E396A6661242443(x UInt8) Engine=Memory;
INSERT INTO dst_10 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 64
DETACH TABLE huge_granularity_small_blocks;
CREATE TABLE test_585254786E46216959225B3D3E3F7E54237A776F64233D24364620447B5A436B60466A2F2D7D483B(x UInt8) Engine=Memory;
SELECT count() == 9 FROM (SELECT 100 AS s) AS js1 ALL RIGHT JOIN ( SELECT number AS s FROM numbers(9) ) AS js2 USING (s);
alter table many_mutations delete where y = 744 * 2 settings mutations_sync = 0;
DROP DATABASE IF EXISTS test_61rs517r 
INSERT INTO test_01193_18429.table_3_732 VALUES 
INSERT INTO test_01193_18429.table_7_529 VALUES 
CREATE TABLE map_comb(a int, statusMap Map(UInt16, UInt32)) ENGINE = Log;
DROP DATABASE IF EXISTS test_r9kbo6ug 
SELECT * FROM ipv6_test;
SELECT 'Running test stateless/00997_extract_all_crash_6627.sql from pid=1715' 
SELECT 'uniqTheta remote()';
kill query where query_id = '02450_kill_distributed_query_deadlock_test_ft363ahb-22' sync
CREATE TABLE test_01193_18429.table_7_796 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_4_456 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
ALTER TABLE concurrent_alter_column ADD COLUMN c265 DOUBLE;
INSERT INTO test_01193_18429.table_4_970 VALUES 
DROP TABLE IF EXISTS wikistat2;
CREATE TABLE test_4E372C3F62473F5162387D77585F386A7A6D6065252851512C235D67356B653A5F4656332F4D2778(x UInt8) Engine=Memory;
CREATE TABLE test_49215229747A31353F20735D3229245339306D575528455E4E58356C36714D51412B2335413D7032(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_9_102 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 5, 1, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (5 < 13 AND 1 > 0 ? 5 : 0)), throwIf(last != (5 < 13 AND 1 > 0 ? least(13 - 1, 5 + 1 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 5, 1);
 select * from (select key, value from num_1) l inner join (select key, value from num_2) r on l.key = r.key order by l.key limit 10 offset 700000 SETTINGS allow_experimental_analyzer=1, send_logs_level='trace', allow_experimental_parallel_reading_from_replicas = 2, max_parallel_replicas = 2, parallel_replicas_for_non_replicated_merge_tree = 1, cluster_for_parallel_replicas = 'test_cluster_one_shard_three_replicas_localhost', parallel_replicas_prefer_local_join=1
SELECT shardNum() AS `_shard_num`, `key` FROM `test_rzij4415`.`mem1` ORDER BY `_shard_num` ASC
CREATE TABLE test_59495C7957545733307C36455A76702E22697C3C5C4D79782D4F552771747537394A6C415D4A763C(x UInt8) Engine=Memory;
# Test without default CREATE TABLE t_ephemeral_02205_1 (x UInt32 DEFAULT y, y UInt32 EPHEMERAL, z UInt32 DEFAULT 5) ENGINE = Memory;
INSERT INTO r10 SELECT 40
SELECT count() == 6 FROM (SELECT 100 AS s) AS js1 ALL FULL JOIN ( SELECT number AS s FROM numbers(5) ) AS js2 USING (s);
INSERT INTO test_01193_18429.table_10_358 VALUES 
SELECT b, c FROM t_fixed_prefix WHERE c = 1 ORDER BY b, c SETTINGS optimize_read_in_order = 0
DROP DATABASE IF EXISTS test_d31jtbim 
DROP TABLE IF EXISTS 01056_window_view_proc_hop_watch.wv
CREATE TABLE test_5B5E74633D246E542C5C372A437B7B7E66312B6826452F4C626A7123202E6830543052503326306B(x UInt8) Engine=Memory;
SET max_memory_usage = 39000000;
CREATE TABLE sqlite_table3_inferred_engine ENGINE = SQLite('/var/lib/clickhouse/user_files/test_01889_sqllite_test_74159509_db1', 'table3')
CREATE TABLE test_log ( `crypto_name` String, `trade_date` Date ) ENGINE = Log;
CREATE TABLE test_21653E362F503835207B795F6C393B26417232726955526E252176557879674D5F224D5B6A337875(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_diz2mq6x 
create table test_ins_arr (date Date, val Array(UInt64)) engine = MergeTree(date, (date), 8192);
SELECT `NULL` FROM remote('127.0.0.2', view(SELECT 1 AS `NULL`));
SELECT count() FROM lc_nullable WHERE has(date_time, NULL);
CREATE TABLE test_5C466F79555C24253D294E473A364A31502A525D6B5656287B5F36656F253B3820792A3173613677(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_vmm15huu 
select 1 = position('' in 'ÃÂ°ÃÂ±ÃÂ²');
SELECT toIntervalHour(NULL);
select mutation_id, command, parts_to_do_names, is_done from system.mutations where database=currentDatabase() and table='mut';
CREATE DATABASE IF NOT EXISTS test_6wgu22i7 
SELECT 'Running test stateless/02536_distributed_detach_table.sql from pid=1713' 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), CAST(N as DateTime64(9, 'Europe/Minsk')) as r FORMAT CSV;
SELECT toDecimal32(NULL, NULL, NULL);
SELECT '2015-02-05' <= materialize(toDate('2015-02-04'));
 SELECT COUNT() AS c, group_key, anyIf(r, key = 0) AS x0, anyIf(r, key = 1) AS x1, anyIf(r, key = 2) AS x2 FROM ( SELECT CRC32(toString(number)) % 1000000 AS group_key, number % 3 AS key, number AS r FROM numbers(10000000) ) GROUP BY group_key HAVING (c = 2) AND (x0 > 0) AND (x1 > 0) AND (x2 > 0) ORDER BY group_key ASC LIMIT 10 SETTINGS max_bytes_before_external_group_by = 200000 
SELECT 'Running test stateless/02902_add_scalar_in_all_case.sql from pid=1722' 
CREATE TABLE test_01193_18429.table_2_199 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_7_376 VALUES 
system stop merges t4;
INSERT INTO src VALUES /* (-5, 2) */ 
SELECT splitByString('', 'a==b=c=d') SETTINGS splitby_max_substrings_includes_remaining_string = 1;
CREATE TABLE test_01193_18429.table_8_931 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE kstest (left Float64, right Float64) ENGINE = Memory;
INSERT INTO r4 SELECT 51
DROP DATABASE IF EXISTS test_mo52m24d 
CREATE TABLE test_01193_18429.table_1_462 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_5E3E60772359475E27287A384B4E2359703A435F7C7533242E4777247D612C536D473D6F6D5D604B(x UInt8) Engine=Memory;
SELECT formatReadableTimeDelta(1e100, 'minutes');
alter table data_01900_1 update s = 'foo_85' where 1;
SELECT * FROM 02763_merge_log_1 ORDER BY x SETTINGS optimize_move_to_prewhere= 1;
DROP TABLE test_table_ipv4_materialized;
CREATE TABLE test_267D505F6E4C7D717B3226315A354E333B504A2433482B7A23282379253F6A3B55785F3C25387574(x UInt8) Engine=Memory;
CREATE TABLE test_34632B41494274344D3578315F63322E25395853314E5A45723E62496A7B58675E64683A20564853(x UInt8) Engine=Memory;
CREATE INDEX idx_tab4_1 ON tab4 (col0,col3);
CREATE TABLE tbl (`id1` UInt32) ENGINE = MergeTree ORDER BY id1 SETTINGS index_granularity = 9810, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 4449, prefer_fetch_merged_part_size_threshold = 8427702098, vertical_merge_algorithm_min_rows_to_activate = 655634, vertical_merge_algorithm_min_columns_to_activate = 28, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 3472601, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 90108, primary_key_compress_block_size = 59810
desc file('02374_data1.jsonl');
INSERT INTO test_01193_18429.table_7_126 VALUES 
select 0 = multiSearchFirstIndexUTF8(materialize('ÃÂÃÂÃÂ²ÃÂÃÂÃÂ³ÃÂ°ÃÂ¼ÃÂÃÂ¶ÃÂ°ÃÂÃÂ½ÃÂÃÂ¾ÃÂÃÂ±ÃÂ·ÃÂÃÂÃÂ¹ÃÂÃÂÃÂÃÂ '), ['ÃÂ´ÃÂ¸ÃÂ¹ÃÂ', 'ÃÂ¶ÃÂµÃÂ¾ÃÂ¼ÃÂ»ÃÂÃÂ¶ÃÂÃÂ¹ÃÂ¼ÃÂµÃÂ¼ÃÂÃÂÃÂÃÂÃÂ¾ÃÂÃÂ´ÃÂÃÂ°ÃÂ¶ÃÂÃÂÃÂ´ÃÂ¿', 'ÃÂ½ÃÂ³ÃÂ¾ÃÂ¿ÃÂ½ÃÂÃÂºÃÂ²ÃÂ±ÃÂ', 'ÃÂ ÃÂ¾ÃÂ¿ÃÂ±', 'ÃÂ¸ÃÂ²', 'ÃÂÃÂ²ÃÂÃÂ²ÃÂÃÂÃÂÃÂ´ÃÂÃÂµÃÂ»ÃÂÃÂ´ÃÂ±ÃÂÃÂ°ÃÂÃÂÃÂ²ÃÂµÃÂ¹ÃÂÃÂ³', 'ÃÂ²ÃÂ ÃÂºÃÂÃÂ°ÃÂ´ÃÂ¼ÃÂÃÂ¿ÃÂ´ÃÂÃÂ±ÃÂ°ÃÂÃÂÃÂÃÂ»ÃÂ´ÃÂºÃÂÃÂ¹ÃÂ²', 'ÃÂ¶ÃÂÃÂ¶ÃÂ±ÃÂÃÂ²ÃÂ¼ÃÂÃÂÃÂÃÂ¹ÃÂµÃÂÃÂÃÂ´ÃÂ¿ÃÂ±ÃÂ´ÃÂ»ÃÂºÃÂºÃÂ²ÃÂ´ÃÂ¸ÃÂ¾ÃÂ²ÃÂ¶', 'ÃÂ³ÃÂÃÂÃÂ´ÃÂ¾ÃÂ»ÃÂÃÂ½ÃÂ ÃÂµÃÂÃÂ¹ÃÂÃÂºÃÂ¹ÃÂºÃÂ¼ÃÂ¸ÃÂÃÂ³ÃÂÃÂ·ÃÂµÃÂ´ÃÂ ', 'ÃÂ¾ÃÂÃÂ¿ÃÂ»ÃÂ¿', 'ÃÂ¸ÃÂÃÂ¿ÃÂÃÂÃÂÃÂ¸ÃÂºÃÂ±ÃÂ¾ÃÂ¿ÃÂ¹ÃÂ³ÃÂ¸ÃÂÃÂÃÂ¸', 'ÃÂÃÂ´ÃÂÃÂ¹ÃÂ¼ÃÂÃÂ´ÃÂ°ÃÂ¸ÃÂ±ÃÂ²ÃÂÃÂÃÂ¶ÃÂÃÂ·ÃÂ³ÃÂ»ÃÂ', 'ÃÂ·ÃÂ¿ÃÂÃÂ¼ÃÂ²ÃÂ¿ÃÂ½ÃÂ»ÃÂÃÂÃÂ½ÃÂ²ÃÂ¹ÃÂ¶', 'ÃÂµÃÂ¶ÃÂ´ÃÂÃÂ¹ÃÂ¸ÃÂÃÂ ÃÂÃÂÃÂµÃÂÃÂ»ÃÂÃÂ', 'ÃÂ²ÃÂ¼ÃÂ¾ÃÂÃÂÃÂÃÂ¶ÃÂ ÃÂ³ÃÂÃÂ½ÃÂ·ÃÂµÃÂ ÃÂºÃÂ ', 'ÃÂÃÂ¶ÃÂ³ÃÂºÃÂ²ÃÂºÃÂÃÂÃÂ¶ÃÂ¼ÃÂ¶ÃÂ¶ÃÂÃÂµÃÂÃÂ¿ÃÂ°ÃÂ ÃÂÃÂ']) from system.numbers limit 10;
SELECT 'Running test stateless/01710_projection_with_ast_rewrite_settings.sql from pid=1726' 
SELECT lcm(toInt128(-170141183460469231731687303715884105728), toInt128(-170141183460469231731687303715884105728));
SELECT * FROM system.one WHERE 255
INSERT INTO test_01193_18429.table_6_248 VALUES 
DROP DATABASE IF EXISTS test_dupi8czi 
select 'any_join_distinct_right_table_keys = 0';
DROP TABLE sensor_value;
select B'00110000';
CREATE TABLE t_delete_skip_index (`x` UInt32, `y` String, INDEX i y TYPE minmax GRANULARITY 3) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 19119, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10710434304, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 33244, primary_key_compress_block_size = 98058
create table test_table_url(id UInt32) ENGINE = URL('http://localhost/endpoint', 'JSONEachRow', 'zstd');
CREATE TABLE 02005_test_table ( key Array(Int64), value Array(Int64) ) ENGINE = TinyLog;
INSERT INTO test_01193_18429.table_9_327 VALUES 
INSERT INTO test_01193_18429.table_5_483 VALUES 
SELECT arrayDistinct(groupArray(dictGetUInt64('db_01501.cache_dict', 'UInt64_', toUInt64(number)))) from numbers(10);
DROP TABLE 02702_logical_optimizer_with_null_column;
SELECT multiIf((number % 2) = 0, toUInt32(1), (number % 3) = 0, toUInt8(2), toUInt64(3)) FROM system.numbers LIMIT 10;
SELECT count() == 3 FROM null_in WHERE i global not in range(4);
SELECT s, replaceOne(s, '_', 'o') AS a, replaceRegexpOne(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['_._', '_.']) AS s);
select format('{}{}', toFixedString('a', 1), materialize('b')) == 'ab';
SELECT * FROM test_collate ORDER BY x, s;
select k, city from smta;
CREATE TABLE IF NOT EXISTS test_5qyz18pn.r1 (`name` String) ENGINE = Memory
CREATE TABLE test_02908_r2_143 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_143', 'r2') ORDER BY tuple()
INSERT INTO test_01193_18429.table_10_601 VALUES 
SELECT h3HexAreaKm2(12);
SELECT `dummy` FROM view(SELECT * FROM `system`.`one`)
SELECT finalizeAggregation(countState(DISTINCT toString(number % 20))) FROM numbers_mt(100000);
SHOW CREATE TEMPORARY TABLE tmp_table
SELECT count() FROM t_cnf_fuzz WHERE (c6 AND (NOT c7) AND (NOT c4) AND (NOT c0)) OR (c8 AND (NOT c2)) OR (c2 AND (NOT c7)) OR ((NOT c8)) OR ((NOT c7)) OR ((NOT c3) AND (NOT c5) AND (NOT c1) AND (NOT c9)) OR ((NOT c3) AND c1 AND c4 AND c5) OR ((NOT c7) AND (NOT c6) AND (NOT c1)) OR (c0 AND c6 AND (NOT c4) AND (NOT c0) AND (NOT c3)) SETTINGS convert_query_to_cnf = 1
INSERT INTO r8 SELECT 91 % 10 = 8 ? 91 - 1 : 91
select 2, n, _part from mt order by n
INSERT INTO r4 SELECT 74
INSERT INTO test_01193_18429.table_3_280 VALUES 
select 1 settings log_queries=1, log_queries_min_type='QUERY_FINISH' format Null;
INSERT INTO test_01193_18429.table_7_678 VALUES 
select parseDateTime('07 am', '%H %p', 'UTC') = toDateTime('1970-01-01 07:00:00', 'UTC');
ALTER TABLE concurrent_alter_add_drop_3 ADD COLUMN value5 UInt32 DEFAULT 42 SETTINGS replication_alter_partitions_sync=0
DROP TABLE t2_00844;
ALTER TABLE mt_00763_1 MODIFY column s String;
INSERT INTO test_01193_18429.table_3_834 VALUES 
DROP DATABASE IF EXISTS test_ln4841wg 
CREATE TABLE test_4C725326495B775A53204778476D60725E346B7238495D2D33713F6D3462524B747634413652212E(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_4_671 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP TABLE test_optimize_exception
CREATE TABLE test_334D29662839265C5C2D764B23482C266355714D4C3645532B635C5373692034254B5273737A6F4E(x UInt8) Engine=Memory;
SELECT a FROM (SELECT 1 AS a) AS b;
INSERT INTO test_01193_18429.table_9_952 VALUES 
select count(ignore(*)) from data_02051 settings min_bytes_to_use_direct_io=1, local_filesystem_read_method='mmap', local_filesystem_read_prefetch=0, read_priority=1, max_read_buffer_size=1048576 ;
drop table funnel_test2;
CREATE TABLE test_01193_18429.table_5_824 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_7_730 VALUES 
SELECT * FROM test_truncate.test_view;
CREATE TABLE test_01193_18429.table_2_916 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE INDEX idx_tab4_0 ON tab4 (col3,col4);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (19 < 52 AND 70 > 0 ? 19 : 0)), throwIf(last != (19 < 52 AND 70 > 0 ? least(52 - 1, 19 + 70 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(52) LIMIT 19, 70);
INSERT INTO test_01193_18429.table_5_719 VALUES 
DROP ROW POLICY IF EXISTS p1_01296, p2_01296, p3_01296, p4_01296, p5_01296 ON db_01296.table;
INSERT INTO t_sparse_pk SELECT number % 10, number % 4 = 0 FROM numbers(1000);
CREATE TABLE test_482958415D4C5D3B2E306724503C4A65594173357145283E4D732A744423734C47503F775F434D40(x UInt8) Engine=Memory;
CREATE TABLE test_2D6A4A484A35794F3F233259377220635162595C2369694E422F5A6943516F6D4C45277B46504837(x UInt8) Engine=Memory;
SELECT 65535, 2147483649, 65535 = 2147483649, 65535 != 2147483649, 65535 < 2147483649, 65535 <= 2147483649, 65535 > 2147483649, 65535 >= 2147483649, 2147483649 = 65535, 2147483649 != 65535, 2147483649 < 65535, 2147483649 <= 65535, 2147483649 > 65535, 2147483649 >= 65535 , toUInt16(65535) = toUInt32(2147483649), toUInt16(65535) != toUInt32(2147483649), toUInt16(65535) < toUInt32(2147483649), toUInt16(65535) <= toUInt32(2147483649), toUInt16(65535) > toUInt32(2147483649), toUInt16(65535) >= toUInt32(2147483649), toUInt32(2147483649) = toUInt16(65535), toUInt32(2147483649) != toUInt16(65535), toUInt32(2147483649) < toUInt16(65535), toUInt32(2147483649) <= toUInt16(65535), toUInt32(2147483649) > toUInt16(65535), toUInt32(2147483649) >= toUInt16(65535) , toUInt16(65535) = toUInt64(2147483649), toUInt16(65535) != toUInt64(2147483649), toUInt16(65535) < toUInt64(2147483649), toUInt16(65535) <= toUInt64(2147483649), toUInt16(65535) > toUInt64(2147483649), toUInt16(65535) >= toUInt64(2147483649), toUInt64(2147483649) = toUInt16(65535), toUInt64(2147483649) != toUInt16(65535), toUInt64(2147483649) < toUInt16(65535), toUInt64(2147483649) <= toUInt16(65535), toUInt64(2147483649) > toUInt16(65535), toUInt64(2147483649) >= toUInt16(65535) , toUInt16(65535) = toInt64(2147483649), toUInt16(65535) != toInt64(2147483649), toUInt16(65535) < toInt64(2147483649), toUInt16(65535) <= toInt64(2147483649), toUInt16(65535) > toInt64(2147483649), toUInt16(65535) >= toInt64(2147483649), toInt64(2147483649) = toUInt16(65535), toInt64(2147483649) != toUInt16(65535), toInt64(2147483649) < toUInt16(65535), toInt64(2147483649) <= toUInt16(65535), toInt64(2147483649) > toUInt16(65535), toInt64(2147483649) >= toUInt16(65535) , toUInt32(65535) = toUInt32(2147483649), toUInt32(65535) != toUInt32(2147483649), toUInt32(65535) < toUInt32(2147483649), toUInt32(65535) <= toUInt32(2147483649), toUInt32(65535) > toUInt32(2147483649), toUInt32(65535) >= toUInt32(2147483649), toUInt32(2147483649) = toUInt32(65535), toUInt32(2147483649) != toUInt32(65535), toUInt32(2147483649) < toUInt32(65535), toUInt32(2147483649) <= toUInt32(65535), toUInt32(2147483649) > toUInt32(65535), toUInt32(2147483649) >= toUInt32(65535) , toUInt32(65535) = toUInt64(2147483649), toUInt32(65535) != toUInt64(2147483649), toUInt32(65535) < toUInt64(2147483649), toUInt32(65535) <= toUInt64(2147483649), toUInt32(65535) > toUInt64(2147483649), toUInt32(65535) >= toUInt64(2147483649), toUInt64(2147483649) = toUInt32(65535), toUInt64(2147483649) != toUInt32(65535), toUInt64(2147483649) < toUInt32(65535), toUInt64(2147483649) <= toUInt32(65535), toUInt64(2147483649) > toUInt32(65535), toUInt64(2147483649) >= toUInt32(65535) , toUInt32(65535) = toInt64(2147483649), toUInt32(65535) != toInt64(2147483649), toUInt32(65535) < toInt64(2147483649), toUInt32(65535) <= toInt64(2147483649), toUInt32(65535) > toInt64(2147483649), toUInt32(65535) >= toInt64(2147483649), toInt64(2147483649) = toUInt32(65535), toInt64(2147483649) != toUInt32(65535), toInt64(2147483649) < toUInt32(65535), toInt64(2147483649) <= toUInt32(65535), toInt64(2147483649) > toUInt32(65535), toInt64(2147483649) >= toUInt32(65535) , toInt32(65535) = toUInt32(2147483649), toInt32(65535) != toUInt32(2147483649), toInt32(65535) < toUInt32(2147483649), toInt32(65535) <= toUInt32(2147483649), toInt32(65535) > toUInt32(2147483649), toInt32(65535) >= toUInt32(2147483649), toUInt32(2147483649) = toInt32(65535), toUInt32(2147483649) != toInt32(65535), toUInt32(2147483649) < toInt32(65535), toUInt32(2147483649) <= toInt32(65535), toUInt32(2147483649) > toInt32(65535), toUInt32(2147483649) >= toInt32(65535) , toInt32(65535) = toUInt64(2147483649), toInt32(65535) != toUInt64(2147483649), toInt32(65535) < toUInt64(2147483649), toInt32(65535) <= toUInt64(2147483649), toInt32(65535) > toUInt64(2147483649), toInt32(65535) >= toUInt64(2147483649), toUInt64(2147483649) = toInt32(65535), toUInt64(2147483649) != toInt32(65535), toUInt64(2147483649) < toInt32(65535), toUInt64(2147483649) <= toInt32(65535), toUInt64(2147483649) > toInt32(65535), toUInt64(2147483649) >= toInt32(65535) , toInt32(65535) = toInt64(2147483649), toInt32(65535) != toInt64(2147483649), toInt32(65535) < toInt64(2147483649), toInt32(65535) <= toInt64(2147483649), toInt32(65535) > toInt64(2147483649), toInt32(65535) >= toInt64(2147483649), toInt64(2147483649) = toInt32(65535), toInt64(2147483649) != toInt32(65535), toInt64(2147483649) < toInt32(65535), toInt64(2147483649) <= toInt32(65535), toInt64(2147483649) > toInt32(65535), toInt64(2147483649) >= toInt32(65535) , toUInt64(65535) = toUInt32(2147483649), toUInt64(65535) != toUInt32(2147483649), toUInt64(65535) < toUInt32(2147483649), toUInt64(65535) <= toUInt32(2147483649), toUInt64(65535) > toUInt32(2147483649), toUInt64(65535) >= toUInt32(2147483649), toUInt32(2147483649) = toUInt64(65535), toUInt32(2147483649) != toUInt64(65535), toUInt32(2147483649) < toUInt64(65535), toUInt32(2147483649) <= toUInt64(65535), toUInt32(2147483649) > toUInt64(65535), toUInt32(2147483649) >= toUInt64(65535) , toUInt64(65535) = toUInt64(2147483649), toUInt64(65535) != toUInt64(2147483649), toUInt64(65535) < toUInt64(2147483649), toUInt64(65535) <= toUInt64(2147483649), toUInt64(65535) > toUInt64(2147483649), toUInt64(65535) >= toUInt64(2147483649), toUInt64(2147483649) = toUInt64(65535), toUInt64(2147483649) != toUInt64(65535), toUInt64(2147483649) < toUInt64(65535), toUInt64(2147483649) <= toUInt64(65535), toUInt64(2147483649) > toUInt64(65535), toUInt64(2147483649) >= toUInt64(65535) , toUInt64(65535) = toInt64(2147483649), toUInt64(65535) != toInt64(2147483649), toUInt64(65535) < toInt64(2147483649), toUInt64(65535) <= toInt64(2147483649), toUInt64(65535) > toInt64(2147483649), toUInt64(65535) >= toInt64(2147483649), toInt64(2147483649) = toUInt64(65535), toInt64(2147483649) != toUInt64(65535), toInt64(2147483649) < toUInt64(65535), toInt64(2147483649) <= toUInt64(65535), toInt64(2147483649) > toUInt64(65535), toInt64(2147483649) >= toUInt64(65535) , toInt64(65535) = toUInt32(2147483649), toInt64(65535) != toUInt32(2147483649), toInt64(65535) < toUInt32(2147483649), toInt64(65535) <= toUInt32(2147483649), toInt64(65535) > toUInt32(2147483649), toInt64(65535) >= toUInt32(2147483649), toUInt32(2147483649) = toInt64(65535), toUInt32(2147483649) != toInt64(65535), toUInt32(2147483649) < toInt64(65535), toUInt32(2147483649) <= toInt64(65535), toUInt32(2147483649) > toInt64(65535), toUInt32(2147483649) >= toInt64(65535) , toInt64(65535) = toUInt64(2147483649), toInt64(65535) != toUInt64(2147483649), toInt64(65535) < toUInt64(2147483649), toInt64(65535) <= toUInt64(2147483649), toInt64(65535) > toUInt64(2147483649), toInt64(65535) >= toUInt64(2147483649), toUInt64(2147483649) = toInt64(65535), toUInt64(2147483649) != toInt64(65535), toUInt64(2147483649) < toInt64(65535), toUInt64(2147483649) <= toInt64(65535), toUInt64(2147483649) > toInt64(65535), toUInt64(2147483649) >= toInt64(65535) , toInt64(65535) = toInt64(2147483649), toInt64(65535) != toInt64(2147483649), toInt64(65535) < toInt64(2147483649), toInt64(65535) <= toInt64(2147483649), toInt64(65535) > toInt64(2147483649), toInt64(65535) >= toInt64(2147483649), toInt64(2147483649) = toInt64(65535), toInt64(2147483649) != toInt64(65535), toInt64(2147483649) < toInt64(65535), toInt64(2147483649) <= toInt64(65535), toInt64(2147483649) > toInt64(65535), toInt64(2147483649) >= toInt64(65535) 
CREATE DATABASE IF NOT EXISTS test_bfcyeths 
INSERT INTO r5 SELECT 48
CREATE TABLE test_01193_18429.table_1_531 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP TABLE test_01392.tableClick;
SELECT dictGetHierarchy('01681_database_for_flat_dictionary.flat_dictionary_simple_key_hierarchy', toUInt64(4));
CREATE TABLE t2_00856 (a Int32, n Int32) ENGINE = Memory;
SELECT * FROM shard_0.demo_loan_01568;
CREATE TABLE test_5623524B634B4E3E67436E615E387A2057653C212F543D3E5161743A7B20616F4B6E4A2945706472(x UInt8) Engine=Memory;
INSERT INTO r1 SELECT 6 % 10 = 1 ? 6 - 1 : 6
SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l FULL JOIN r_lc AS r USING (lc) ORDER BY x, r.lc, l.lc;
SELECT * FROM 02185_range_dictionary_source_table;
select 'dst_to_src', 0, 'dst', type, n, _part from dst order by type, n
INSERT INTO mt VALUES /* (-17, 1) */ 
DROP TABLE IF EXISTS test_table_signed_values;
select t from data_order_by_proj_incomp where t > 0 order by t settings max_threads=1;
SELECT normalizeQuery('SELECT 1, 1, 1, /* Hello */ \'abc\' WHERE 1 = 1');
SELECT 'Running test stateless/01710_minmax_count_projection_count_nullable.sql from pid=1726' 
CREATE TABLE t (x UInt64, i256 Int256, u256 UInt256, d256 Decimal256(2)) ENGINE = Memory;
select hex(sipHash128ReferenceKeyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24)));
SELECT id as shift_right_bit,toFixedString('Hello', 10) as arg,bin(bitShiftLeft(toFixedString('Hello', 10), id)) as fixed_string_res FROM test_bit_shift_left_string_integer;
CREATE TABLE test_01193_18429.table_10_471 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DATABASE IF NOT EXISTS test_g2ggxcxn 
drop table push_to_logs_proxy_mv_02572;
INSERT INTO test_s3 SELECT number, number FROM numbers(1000000);
DROP DATABASE IF EXISTS test_j3gttcrg 
select cosh(0) = 1;
backup table test_h75tm4x2.test on cluster test_shard_localhost to Disk('backups', '02907_backup_restore_flatten_nested_test_h75tm4x2');
INSERT INTO test_01193_18429.table_1_637 VALUES 
ALTER TABLE replicated_mutations_empty_partitions DROP PARTITION '3';
CREATE DICTIONARY 01754_dictionary_db.direct_dictionary_complex_key_complex_attributes ( id UInt64, id_key String, value_first String DEFAULT 'value_first_default', value_second Nullable(String) DEFAULT 'value_second_default' ) PRIMARY KEY id, id_key SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'complex_key_complex_attributes_source_table')) LAYOUT(COMPLEX_KEY_DIRECT());
CREATE TABLE test_01193_18429.table_9_253 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE DATABASE IF NOT EXISTS test_ozvssjvh 
SELECT * FROM collate_test2 ORDER BY s COLLATE 'ru';
SELECT 'Running test stateless/02245_join_with_nullable_lowcardinality_crash.sql from pid=1726' 
CREATE TABLE test_5D73746A22447E4D6D653A522B2E7B64522B50462A5169375A7565753C407D3E472E494E5358586B(x UInt8) Engine=Memory;
INSERT INTO src_12 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 71
CREATE TABLE test_692041737143217234622073675B493323773C415370213A67612A2763413A627B3E78473C272225(x UInt8) Engine=Memory;
SELECT uniqExact([NULL], [NULL], [NULL]);
INSERT INTO test_01193_18429.table_8_43 VALUES 
ALTER TABLE dst_13 MODIFY SETTING max_replicated_merges_in_queue=0
CREATE TABLE test_2D4C232238714F2F58765C505227213334234A7D467947567847293F726E596A347B4D71605B2B5D(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_hloreqh4 
CREATE TABLE test_566F4135474544563263445670675B3E3126766544513B3D355053545B31586640322E2A6A6C6572(x UInt8) Engine=Memory;
SET async_insert = 1;
SELECT throwIf((SELECT sum(nm) FROM mv) != 144) FORMAT Null;
SELECT toInt64OrDefault(-1);
SELECT CASE WHEN 1 THEN ['foo', col3] WHEN 1 THEN ['foo', col5] ELSE ['foo', 'bar'] END FROM multi_if_check;
SELECT hasToken('hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,NEEDLE', 'NEEDLE'), ' expecting ', 1;
SELECT * FROM bloom_filter_idx WHERE multiSearchAny(s, ['ÃÂÃÂÃÂÃÂ¾ÃÂºÃÂ°', 'string'])
select * from rep_fsync_r2 order by key;
CREATE TABLE test_01193_18429.table_8_673 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select (1 ? (toUInt8(0) as i) : toInt16(1)) = i;
SELECT arrayAll(x -> materialize(1), arrayMap(x -> toString(x), range(number))) FROM system.numbers LIMIT 10;
SELECT 'shifted grid';
CREATE TABLE test_01193_18429.table_2_484 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT shardNum() AS `_shard_num`, `key` FROM `test_rzij4415`.`mem1` ORDER BY `_shard_num` ASC, `key` ASC
select parseDateTime('23', '%k', 'UTC') = toDateTime('1970-01-01 23:00:00', 'UTC');
SELECT rand32(-1);
CREATE DATABASE IF NOT EXISTS test_vggycgsc 
CREATE TABLE test_357A245D2F47534F72647A422164604449655C36584142345D3C4F31523A3E6E294C2B703252526A(x UInt8) Engine=Memory;
SELECT count(), X FROM foo_merge JOIN t2 USING Val WHERE Val = 3 AND (Id = 3 AND t2.X == 4) GROUP BY X;
INSERT INTO test_01193_18429.table_10_309 VALUES 
SELECT count() FROM (SELECT arrayJoin([sum(x), medianExact(x)]), arrayJoin([min(x), max(x)]) FROM (SELECT number AS x FROM numbers(10)));
SELECT `CounterID` FROM `test_hzdyahun`.`globalin` WHERE `CounterID` GLOBAL IN (`_subquery3150`) GROUP BY `CounterID`
SELECT '13' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('fffc::')))
SELECT 18,toFixedString('Hello', 10), bin(bitShiftLeft(toFixedString('Hello', 10), 18));
CREATE TABLE test_01193_18429.table_3_299 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE INDEX idx_tab4_2 ON tab4 (col3 DESC,col0 DESC);
SELECT * FROM s3Cluster('test_cluster_two_shards_localhost', 'http://localhost:11111/test/{a,b,c}.tsv', 'test', '[HIDDEN]', 'TSV') ORDER BY c1 ASC, c2 ASC, c3 ASC
drop table if exists order;
CREATE DATABASE IF NOT EXISTS test_wyruormw 
SELECT -nan = toUInt16(0), -nan != toUInt16(0), -nan < toUInt16(0), -nan > toUInt16(0), -nan <= toUInt16(0), -nan >= toUInt16(0);
CREATE TABLE signed_integer_test_table (val Int32) ENGINE = MergeTree ORDER BY val SETTINGS index_granularity = 1, index_granularity_bytes = 0, min_bytes_for_wide_part = 0;
INSERT INTO test_01193_18429.table_3_7 VALUES 
alter table many_mutations delete where y = 530 * 2 settings mutations_sync = 0;
select 1 = multiSearchFirstPosition(materialize('abcdefgh'), ['defgh', 'bcd', 'abcd', 'c']) from system.numbers limit 10;
insert into queue values 
INSERT INTO test_01193_18429.table_8_527 VALUES 
SELECT COUNT() FROM replicated_table_for_alter1;
INSERT INTO test_01193_18429.table_8_381 VALUES 
DROP TABLE IF EXISTS table_with_single_pk
INSERT INTO test_01193_18429.table_1_817 VALUES 
SELECT 'Running test stateless/00800_low_cardinality_array_group_by_arg.sql from pid=1722' 
SELECT 'SELECT N > DT64';
CREATE TEMPORARY TABLE table_gcd_codec_int64 (n Int64 CODEC(GCD, LZ4)) ENGINE = Memory;
EXPLAIN QUERY TREE run_passes = 0 SELECT 1;
INSERT INTO test_01193_18429.table_3_819 VALUES 
DROP DATABASE IF EXISTS test_f422w9mu 
INSERT INTO test_01193_18429.table_6_694 VALUES 
SELECT toDate32('2022-08-22 01:02:03.1');
SELECT x FROM t FULL JOIN r USING (x) ORDER BY * ;
CREATE TABLE test_01193_18429.table_5_889 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT * FROM t1, t2, (SELECT a as x from t3 where a + 1 = b ) as t3 WHERE t1.a = if(t2.b > 0, t2.a, 0) AND t2.a = t3.x AND 1 ;
INSERT INTO test_01193_18429.table_9_250 VALUES 
select [0] = multiSearchAllPositions(materialize('abc'), ['bcdef']) from system.numbers limit 10;
SELECT id, timestamp, payload FROM events WHERE (organisation_id = reinterpretAsUUID(1)) AND (session_id = reinterpretAsUUID(0)) ORDER BY timestamp, payload, id ASC;
CREATE TABLE t_enum(x Enum8('hello' = 1, 'world' = 2)) ENGINE = TinyLog;
select format('{}{}{}', materialize('a'), materialize('b'), toFixedString('c', 1)) == 'abc';
SELECT arrayCumSumNonNegative([1, -5, 5, -2]);
SELECT array([NULL],[NULL]);
SELECT count() FROM t_cnf_fuzz WHERE (c7 AND c8 AND (NOT c1) AND (NOT c8) AND (NOT c2)) OR (c9 AND c5) OR ((NOT c7)) OR (c2 AND (NOT c2)) OR (c5 AND c7 AND c7 AND c3 AND (NOT c4)) SETTINGS convert_query_to_cnf = 1
select addNanoseconds(a, 1) from ( select toDateTime64('1980-12-12 12:12:12.123456789', 9) AS a );
CREATE TABLE ttttttt (`timestamp` DateTime, `col1` Float64, `col2` Float64, `col3` Float64) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 51067, min_bytes_for_wide_part = 675024592, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 23638, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 8195481198, index_granularity_bytes = 14231143, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 62094, primary_key_compress_block_size = 48036
SELECT toFloat64('inf'), toFloat64('-inf'), toFloat64('INF'), toFloat64('-INF'), toFloat64('Infinity'), toFloat64('-Infinity'), toFloat64('nan'), toFloat64('-nan'), toFloat64('NAN'), toFloat64('-NAN'), toFloat64('NaN'), toFloat64('-NaN'), toFloat64OrZero('in'), toFloat64OrZero('-in'), toFloat64OrZero('INFi'), toFloat64OrZero('-INFi'), toFloat64OrZero('Infinit'), toFloat64OrZero('-Infinit'), toFloat64OrZero('na'), toFloat64OrZero('-na'), toFloat64OrZero('NANo'), toFloat64OrZero('-NANo'), toFloat64OrZero('NaN+'), toFloat64OrZero('-NaNa'), toFloat64OrZero('+Na'), toFloat32('inf'), toFloat32('-inf'), toFloat32('INF'), toFloat32('-INF'), toFloat32('Infinity'), toFloat32('-Infinity'), toFloat32('nan'), toFloat32('-nan'), toFloat32('NAN'), toFloat32('-NAN'), toFloat32('NaN'), toFloat32('-NaN'), toFloat32OrZero('in'), toFloat32OrZero('-in'), toFloat32OrZero('INFi'), toFloat32OrZero('-INFi'), toFloat32OrZero('Infinit'), toFloat32OrZero('-Infinit'), toFloat32OrZero('na'), toFloat32OrZero('-na'), toFloat32OrZero('NANo'), toFloat32OrZero('-NANo'), toFloat32OrZero('NaN+'), toFloat32OrZero('-NaNa'), toFloat32OrZero('+Na') FORMAT TabSeparated;
CREATE TABLE t2 (Id Int32, Val Int32, X Int32) Engine=Memory;
SELECT 'Running test stateless/01417_freeze_partition_verbose_zookeeper.sh from pid=1705' 
SELECT name FROM system.tables WHERE database=currentDatabase() AND name like 'dst_%' ORDER BY rand() LIMIT 1
INSERT INTO dst_12 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 12
SYSTEM SYNC REPLICA wrong_metadata_wide;
select 'intersect', countSubstringsCaseInsensitiveUTF8(concat(char(number), repeat('ÃÂ', 8)), 'ÃÂÃÂ¯') from numbers(100) where number = 0x41 format CSV;
CREATE TABLE test_01193_18429.table_2_452 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
alter table many_mutations delete where y = 900 * 2 settings mutations_sync = 0;
INSERT INTO t_02267 (b, a, c) SELECT 1, [], ['1','2','3','4','5','6'] FROM numbers(300000);
INSERT INTO test_01193_18429.table_2_81 VALUES 
select '-----';
DROP TABLE distributed_00952;
CREATE TABLE test_632678606B475A6B3330547640787B3D236E642645716E365920435579633E23314C56223E754F42(x UInt8) Engine=Memory;
select polygonsSymDifferenceCartesian([[[(0, 0),(0, 3),(1, 2.9),(2, 2.6),(2.6, 2),(2.9, 1),(3, 0),(0, 0)]]], [[[(1., 1.),(1., 4.),(4., 4.),(4., 1.),(1., 1.)]]]);
CREATE DATABASE IF NOT EXISTS test_ihyzew7j 
CREATE TABLE codecTest (`key` UInt64, `ref_valueU64` UInt64, `ref_valueU32` UInt32, `ref_valueU16` UInt16, `ref_valueU8` UInt8, `ref_valueI64` Int64, `ref_valueI32` Int32, `ref_valueI16` Int16, `ref_valueI8` Int8, `ref_valueDT` DateTime, `ref_valueD` Date, `valueU64` UInt64 CODEC(DoubleDelta), `valueU32` UInt32 CODEC(DoubleDelta), `valueU16` UInt16 CODEC(DoubleDelta), `valueU8` UInt8 CODEC(DoubleDelta), `valueI64` Int64 CODEC(DoubleDelta), `valueI32` Int32 CODEC(DoubleDelta), `valueI16` Int16 CODEC(DoubleDelta), `valueI8` Int8 CODEC(DoubleDelta), `valueDT` DateTime CODEC(DoubleDelta), `valueD` Date CODEC(DoubleDelta)) ENGINE = MergeTree ORDER BY key SETTINGS min_bytes_for_wide_part = 0, index_granularity = 61051, ratio_of_defaults_for_sparse_serialization = 0.9244707822799683, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 21782, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 5592552498, index_granularity_bytes = 16897286, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 40996, primary_key_compress_block_size = 87611
select [5, 11, 0, 0, 0, 5, 0, 0, 0, 1, 16, 0, 0, 0, 0, 0] = multiSearchAllPositions(materialize('egxmimubhidowgnfziwgnlqiw'), ['imubhidowgnfzi', 'dowgnf', 'yqpcpfvnfpxetozraxbmzxxcvtzm', 'xkbaqvzlqjyjoiqourezbzwaqkfyekcfie', 'jjctusdmxr', 'imubhi', 'zawnslbfrtqohnztmnssxscymonlhkitq', 'oxcitennfpuoptwrlmc', 'ac', 'egxmi', 'fziwgn', 'rt', 'fuxfuctdmawmhxxxg', 'suulqkrsfgynruygjckrmizsksjcfwath', 'slgsq', 'zcbqjpehilwyztumebmdrsl']) from system.numbers limit 10;
DROP DATABASE IF EXISTS test_tk42s02d 
SELECT 'Running test stateless/01825_replacing_vertical_merge.sql from pid=1714' 
SELECT 1 from defaults_on_defaults where length(`Arr.C3`) = 0;
INSERT INTO test_01193_18429.table_8_835 VALUES 
INSERT INTO dst_3 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 65
SELECT merge_algorithm, peak_memory_usage < 500 * 1024 * 1024 ? 'OK' : format('FAIL: memory usage: {}', formatReadableSize(peak_memory_usage)) FROM system.part_log WHERE database = currentDatabase() AND table = 't_vertical_merge_memory' AND event_type = 'MergeParts' AND length(merged_from) = 2;
DROP DATABASE IF EXISTS test_gbvdnp6j 
CREATE DATABASE IF NOT EXISTS test_7c3icli3 
SELECT sum(data.value) FROM t_json;
INSERT INTO test_01193_18429.table_5_598 VALUES 
SELECT 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
SELECT JSON_QUERY('{"123":{"123":1}}', '$.123.123');
DROP TABLE IF EXISTS 02713_seqt_distr;
CREATE TEMPORARY TABLE test_01602a(x UInt32);
SELECT multiIf((number % 2) = 0, toInt64(1), (number % 3) = 0, toUInt32(2), toInt16(3)) FROM system.numbers LIMIT 10;
insert into table function file(concat(currentDatabase(), '/test4/data.Parquet.gz'), 'Parquet', 'number UInt64') select * from numbers(10) settings engine_file_truncate_on_insert=1;
SELECT '5935,5998,6014' == replaceRegexpAll('5935,5998,6014, ', concat('^[', regexpQuoteMeta(', '), ']*|[', regexpQuoteMeta(', '), ']*$'), '') AS x;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt8(1) WHEN (number % 3) = 0 THEN toInt32(2) ELSE toUInt16(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_604A4E713D434523596B4E337B702A21264835214B78785A4A20514D595E7E4D6F3A5F7B412E6E4F(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_jgar0zbm 
SELECT JSON_VALUE(NULL, NULL);
INSERT INTO test_01193_18429.table_10_296 VALUES 
CREATE TABLE test_31677E463E582062457E756E7C4C543B564224692E2E607430614E5B503F6A6B6C4052797A583935(x UInt8) Engine=Memory;
create database ordinary_test_ha4xxq99 engine=Ordinary
SELECT * APPLY (x -> toString(x)) APPLY length FROM test_table;
EXPLAIN SYNTAX (SELECT sum(2 + uint64) From test_table);
CREATE TABLE test_624D352A693E2526234B617E463F7C7636683175742921504A3C242B58386B4320556B3E7D79224F(x UInt8) Engine=Memory;
select cityHash64(hex( minState(ip) )) AS minState, cityHash64(hex( maxState(ip) )) AS maxState, cityHash64(hex( first_valueState(ip) )) AS first_valueState, cityHash64(hex( last_valueState(ip) )) AS last_valueState, cityHash64(hex( topKState(ip) )) AS topKState, cityHash64(hex( groupArrayState(ip) )) AS groupArrayState, cityHash64(hex( groupUniqArrayState(ip) )) AS groupUniqArrayState, cityHash64(hex( uniqState(ip) )) AS uniqState, cityHash64(hex( uniqExactState(ip) )) AS uniqExactState, cityHash64(hex( uniqCombinedState(ip) )) AS uniqCombinedState, cityHash64(hex( uniqCombined64State(ip) )) AS uniqCombined64State, cityHash64(hex( uniqHLL12State(ip) )) AS uniqHLL12State, cityHash64(hex( uniqThetaState(ip) )) AS uniqThetaState from ( SELECT toIPv6(IPv6NumToString(toFixedString(reinterpretAsFixedString(num)||reinterpretAsFixedString(num), 16))) AS ip FROM (select arrayJoin(range(1010011101, number)) as num from numbers(1010011101,50)) order by ip ) format Vertical;
RENAME TABLE test_01192.mt TO test_01192_atomic.mt, test_01192.rmt TO test_01192_atomic.rmt, test_01192.mv TO test_01192_atomic.mv
DROP DATABASE IF EXISTS test_zkt6mt6k 
insert into without_nullable values
SELECT subtractTupleOfIntervals(NULL, NULL);
INSERT INTO test_01193_18429.table_6_636 VALUES 
CREATE TABLE test_74237B237520365E24647B2226477A6F26463F27232B636B3D42553B3959745020553D2C62353C69(x UInt8) Engine=Memory;
SELECT '*** Test ALTER ***';
SELECT 'Running test stateless/02373_heap_buffer_overflow_in_avro.sh from pid=1705' 
CREATE DATABASE IF NOT EXISTS test_2nnjpr5f 
CREATE TABLE test_01193_18429.table_7_641 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT dateDiff('second', toDateTime64('1927-01-01 00:00:00', 0, 'UTC'), toDateTime64('1927-01-01 01:00:00', 0, 'UTC'));
CREATE TABLE test_01193_18429.table_7_816 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 65536, 2147483648, 65536 = 2147483648, 65536 != 2147483648, 65536 < 2147483648, 65536 <= 2147483648, 65536 > 2147483648, 65536 >= 2147483648, 2147483648 = 65536, 2147483648 != 65536, 2147483648 < 65536, 2147483648 <= 65536, 2147483648 > 65536, 2147483648 >= 65536 , toUInt32(65536) = toUInt32(2147483648), toUInt32(65536) != toUInt32(2147483648), toUInt32(65536) < toUInt32(2147483648), toUInt32(65536) <= toUInt32(2147483648), toUInt32(65536) > toUInt32(2147483648), toUInt32(65536) >= toUInt32(2147483648), toUInt32(2147483648) = toUInt32(65536), toUInt32(2147483648) != toUInt32(65536), toUInt32(2147483648) < toUInt32(65536), toUInt32(2147483648) <= toUInt32(65536), toUInt32(2147483648) > toUInt32(65536), toUInt32(2147483648) >= toUInt32(65536) , toUInt32(65536) = toUInt64(2147483648), toUInt32(65536) != toUInt64(2147483648), toUInt32(65536) < toUInt64(2147483648), toUInt32(65536) <= toUInt64(2147483648), toUInt32(65536) > toUInt64(2147483648), toUInt32(65536) >= toUInt64(2147483648), toUInt64(2147483648) = toUInt32(65536), toUInt64(2147483648) != toUInt32(65536), toUInt64(2147483648) < toUInt32(65536), toUInt64(2147483648) <= toUInt32(65536), toUInt64(2147483648) > toUInt32(65536), toUInt64(2147483648) >= toUInt32(65536) , toUInt32(65536) = toInt64(2147483648), toUInt32(65536) != toInt64(2147483648), toUInt32(65536) < toInt64(2147483648), toUInt32(65536) <= toInt64(2147483648), toUInt32(65536) > toInt64(2147483648), toUInt32(65536) >= toInt64(2147483648), toInt64(2147483648) = toUInt32(65536), toInt64(2147483648) != toUInt32(65536), toInt64(2147483648) < toUInt32(65536), toInt64(2147483648) <= toUInt32(65536), toInt64(2147483648) > toUInt32(65536), toInt64(2147483648) >= toUInt32(65536) , toInt32(65536) = toUInt32(2147483648), toInt32(65536) != toUInt32(2147483648), toInt32(65536) < toUInt32(2147483648), toInt32(65536) <= toUInt32(2147483648), toInt32(65536) > toUInt32(2147483648), toInt32(65536) >= toUInt32(2147483648), toUInt32(2147483648) = toInt32(65536), toUInt32(2147483648) != toInt32(65536), toUInt32(2147483648) < toInt32(65536), toUInt32(2147483648) <= toInt32(65536), toUInt32(2147483648) > toInt32(65536), toUInt32(2147483648) >= toInt32(65536) , toInt32(65536) = toUInt64(2147483648), toInt32(65536) != toUInt64(2147483648), toInt32(65536) < toUInt64(2147483648), toInt32(65536) <= toUInt64(2147483648), toInt32(65536) > toUInt64(2147483648), toInt32(65536) >= toUInt64(2147483648), toUInt64(2147483648) = toInt32(65536), toUInt64(2147483648) != toInt32(65536), toUInt64(2147483648) < toInt32(65536), toUInt64(2147483648) <= toInt32(65536), toUInt64(2147483648) > toInt32(65536), toUInt64(2147483648) >= toInt32(65536) , toInt32(65536) = toInt64(2147483648), toInt32(65536) != toInt64(2147483648), toInt32(65536) < toInt64(2147483648), toInt32(65536) <= toInt64(2147483648), toInt32(65536) > toInt64(2147483648), toInt32(65536) >= toInt64(2147483648), toInt64(2147483648) = toInt32(65536), toInt64(2147483648) != toInt32(65536), toInt64(2147483648) < toInt32(65536), toInt64(2147483648) <= toInt32(65536), toInt64(2147483648) > toInt32(65536), toInt64(2147483648) >= toInt32(65536) , toUInt64(65536) = toUInt32(2147483648), toUInt64(65536) != toUInt32(2147483648), toUInt64(65536) < toUInt32(2147483648), toUInt64(65536) <= toUInt32(2147483648), toUInt64(65536) > toUInt32(2147483648), toUInt64(65536) >= toUInt32(2147483648), toUInt32(2147483648) = toUInt64(65536), toUInt32(2147483648) != toUInt64(65536), toUInt32(2147483648) < toUInt64(65536), toUInt32(2147483648) <= toUInt64(65536), toUInt32(2147483648) > toUInt64(65536), toUInt32(2147483648) >= toUInt64(65536) , toUInt64(65536) = toUInt64(2147483648), toUInt64(65536) != toUInt64(2147483648), toUInt64(65536) < toUInt64(2147483648), toUInt64(65536) <= toUInt64(2147483648), toUInt64(65536) > toUInt64(2147483648), toUInt64(65536) >= toUInt64(2147483648), toUInt64(2147483648) = toUInt64(65536), toUInt64(2147483648) != toUInt64(65536), toUInt64(2147483648) < toUInt64(65536), toUInt64(2147483648) <= toUInt64(65536), toUInt64(2147483648) > toUInt64(65536), toUInt64(2147483648) >= toUInt64(65536) , toUInt64(65536) = toInt64(2147483648), toUInt64(65536) != toInt64(2147483648), toUInt64(65536) < toInt64(2147483648), toUInt64(65536) <= toInt64(2147483648), toUInt64(65536) > toInt64(2147483648), toUInt64(65536) >= toInt64(2147483648), toInt64(2147483648) = toUInt64(65536), toInt64(2147483648) != toUInt64(65536), toInt64(2147483648) < toUInt64(65536), toInt64(2147483648) <= toUInt64(65536), toInt64(2147483648) > toUInt64(65536), toInt64(2147483648) >= toUInt64(65536) , toInt64(65536) = toUInt32(2147483648), toInt64(65536) != toUInt32(2147483648), toInt64(65536) < toUInt32(2147483648), toInt64(65536) <= toUInt32(2147483648), toInt64(65536) > toUInt32(2147483648), toInt64(65536) >= toUInt32(2147483648), toUInt32(2147483648) = toInt64(65536), toUInt32(2147483648) != toInt64(65536), toUInt32(2147483648) < toInt64(65536), toUInt32(2147483648) <= toInt64(65536), toUInt32(2147483648) > toInt64(65536), toUInt32(2147483648) >= toInt64(65536) , toInt64(65536) = toUInt64(2147483648), toInt64(65536) != toUInt64(2147483648), toInt64(65536) < toUInt64(2147483648), toInt64(65536) <= toUInt64(2147483648), toInt64(65536) > toUInt64(2147483648), toInt64(65536) >= toUInt64(2147483648), toUInt64(2147483648) = toInt64(65536), toUInt64(2147483648) != toInt64(65536), toUInt64(2147483648) < toInt64(65536), toUInt64(2147483648) <= toInt64(65536), toUInt64(2147483648) > toInt64(65536), toUInt64(2147483648) >= toInt64(65536) , toInt64(65536) = toInt64(2147483648), toInt64(65536) != toInt64(2147483648), toInt64(65536) < toInt64(2147483648), toInt64(65536) <= toInt64(2147483648), toInt64(65536) > toInt64(2147483648), toInt64(65536) >= toInt64(2147483648), toInt64(2147483648) = toInt64(65536), toInt64(2147483648) != toInt64(65536), toInt64(2147483648) < toInt64(65536), toInt64(2147483648) <= toInt64(65536), toInt64(2147483648) > toInt64(65536), toInt64(2147483648) >= toInt64(65536) 
CREATE TABLE test_7853715A3A7E502F745D3D757A6E3929672974335D6177253E284D304342483E335E4B7A56663E31(x UInt8) Engine=Memory;
CREATE DICTIONARY test_dictionary_non_nullable (id UInt64, value String) PRIMARY KEY id LAYOUT(DIRECT()) SOURCE(CLICKHOUSE(TABLE 'dictionary_non_nullable_source_table'));
SELECT 'SELECT DT != N';
SELECT nest.a, nest.b, nested.`nest`.`a`, nested.nest.b, t.nest.a, t.nest.b, t.* FROM nested AS t;
DROP DATABASE IF EXISTS test_y3wshzox 
INSERT INTO test_01193_18429.table_9_179 VALUES 
CREATE TABLE test_3C7C4B7D6A5F795E3C5A4C5C657D395C5F7A655F246A4D792266294C68525F6B3152754C6A783E50(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_sbhut91j 
CREATE TABLE test_01193_18429.table_4_112 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_4_684 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_4B636E733A3B6F2A69253821355F7B5C204F223326625B2C722130535D4475736067287248635279(x UInt8) Engine=Memory;
DROP TABLE replicated_alter1;
INSERT INTO test_01193_18429.table_4_803 VALUES 
SELECT 'SELECT N < toUInt8(1)';
select match('\0 key="v" ', 'key="(.*?)"');
select addMilliseconds(toDateTime64('2220-12-12 12:12:12.123', 3), 1);
SELECT dictHas('01681_database_for_cache_dictionary.cache_dictionary_simple_key_complex_attributes', number) FROM system.numbers LIMIT 4;
SELECT 'Running test stateless/00612_pk_in_tuple.sql from pid=1722' 
SELECT notEmpty(nest.a), notEmpty(nest.b), notEmpty(nest.c) FROM decimal;
CREATE TABLE test_68743F6E4F625C366040346D696B35554F336D21687C767E252F437679475E4C4D307533445A5629(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_9_882 VALUES 
CREATE TABLE test_2E5C7D792E49367544772D29445A2E6A237B616C6B2B76394A262A4C2B75327C7A313F6632374D57(x UInt8) Engine=Memory;
INSERT INTO insert_select_dst(insert_select_dst.* EXCEPT (middle_a, middle_b)) SELECT * FROM insert_select_src;
SELECT 'After rename';
CREATE TABLE test_01193_18429.table_7_602 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_1_53 VALUES 
DROP TABLE alias_local10;
CREATE TABLE test_inserts (`key` Int, `part` Int) ENGINE = MergeTree PARTITION BY part ORDER BY key SETTINGS temporary_directories_lifetime = 0, merge_tree_clear_old_temporary_directories_interval_seconds = 0, index_granularity = 9727, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.3754497170448303, replace_long_file_name_to_hash = true, max_file_name_length = 27, merge_max_block_size = 23822, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 3362230, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 23992, primary_key_compress_block_size = 21550
CREATE TABLE test_5675383E29392362465F3E3B504469583B5B626571204B5F6059365F4476492C3622507E5838256A(x UInt8) Engine=Memory;
SELECT '---first---';
SELECT hasColumnInTable('localhost', currentDatabase(), 'has_column_in_table', 'i');
SELECT * FROM t1_00826 cross join t2_00826 where t1_00826.b = t2_00826.b;
CREATE DATABASE IF NOT EXISTS test_9ihbp9xj 
CREATE DATABASE IF NOT EXISTS test_l6kdzamq 
INSERT INTO test_01193_18429.table_8_726 VALUES 
SET read_overflow_mode = 'throw';
INSERT INTO max_length_alias_14053 VALUES 
DROP DATABASE IF EXISTS test4;
CREATE TABLE test_01193_18429.table_2_483 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
ALTER TABLE dst_r1 DETACH PARTITION 0;
DROP TABLE dictionary_source_en;
SET allow_deprecated_syntax_for_merge_tree=1;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt32(1), toInt32(2)] WHEN (number % 3) = 0 THEN [toInt16(2), toInt16(3)] ELSE [toInt64(3), toInt64(3)] END FROM system.numbers LIMIT 10;
INSERT INTO ips_v6 FORMAT TSV 
SELECT number AS id, toString(number) AS s, range(number) AS arr FROM numbers(10) FORMAT JSONLines
INSERT INTO r5 SELECT 86
CREATE TABLE test_01193_18429.table_3_52 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP USER test_user_01074;
SELECT * FROM table_with_defaults_on_aliases WHERE col1 = 3;
select * from numbers(1) t1 right anti join numbers(1) t2 using number;
CREATE TABLE test_66653579755231614E2675457D44493B3B5B57606938517345472E2E4B7369572B23307C226D6D7E(x UInt8) Engine=Memory;
CREATE TABLE test_6A482E283823737C4E753267294E3E6148456E25442C4F334D6C3C287B445A69286F73687853265C(x UInt8) Engine=Memory;
SELECT 'SELECT N < toUInt16(1)';
CREATE TABLE test_602E736E545B626F266549426662216754473A42587E7E23506757797E4336606D60313A63662C33(x UInt8) Engine=Memory;
 CREATE TABLE t_async_insert_dedup ( EventDate DateTime, KeyID UInt32 ) Engine = ReplicatedMergeTree('/clickhouse/tables/{shard}/{database}/t_async_insert_dedup', '{replica}') PARTITION BY toYYYYMM(EventDate) ORDER BY (KeyID, EventDate) SETTINGS use_async_block_ids_cache = 1 
DROP DATABASE IF EXISTS test_l18xfalk 
select sum from (select sum(dummy) sum from system.one where 0) where sum is null;
DROP DATABASE IF EXISTS test_ss8zg6lm 
DROP DATABASE IF EXISTS test_jd8kp8qz 
insert into summing_merge_tree_aggregate_function select 1, avgState(0.5);
select dictGet('02186_range_dictionary', 'value', toUInt64(1), toDate('2020-01-03'));
INSERT INTO src VALUES /* (47, 2) */ 
SELECT min(ts = toUInt32(toDateTime(toString(ts)))) FROM (SELECT 10000 + 1234 * number AS ts FROM system.numbers LIMIT 1000000);
SELECT 'Running test stateless/02515_analyzer_null_for_empty.sql from pid=1718' 
INSERT INTO test_01193_18429.table_7_255 VALUES 
SELECT round(h3HexAreaKm2(arrayJoin([1,2])), 2);
CREATE TABLE test_01193_18429.table_1_754 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP TABLE IF EXISTS mv2_00726;
SELECT t1.id AS t1_id, t1.value, t2.id AS t2_id, t2.value, t3.id AS t3_id, t3.value FROM test_table_join_1 AS t1 FULL JOIN test_table_join_2 AS t2 ON t1_id = t2_id INNER JOIN test_table_join_3 AS t3 ON t2_id = t3_id;
select * from (select 1) as a, (select 1) as b, (select 2);
INSERT INTO null SELECT * FROM numbers_mt(1000) settings max_threads=1000, max_insert_threads=1000, max_block_size=1
SELECT t1.key, t2.key, length(t1.s), length(t2.s) FROM tn1 AS t1 ANY INNER JOIN t2 AS t2 ON t1.key == t2.key ORDER BY t1.key, t2.key;
DROP TABLE partitioned_by_string_replica2 SYNC;
SET preferred_block_size_bytes = 8192;
SELECT toStartOfISOYear(NULL, NULL, NULL);
SELECT obj FROM t_json_17 ORDER BY obj.id FORMAT JSONEachRow;
CREATE DATABASE IF NOT EXISTS test_ktxr58je 
INSERT INTO test_01193_18429.table_4_274 VALUES 
CREATE TABLE test_01193_18429.table_2_984 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT * FROM table_for_alter;
CREATE TABLE test_5E78265C616C397B52303F4C413B636D7B4E30585A7D225D6E3B5B7E4E5E7539684E3E60434B374E(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_10_607 VALUES 
CREATE TABLE test_01193_18429.table_5_30 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT has(b, toDecimal32(0.4, 3)) FROM decimal;
SELECT count() from tab_02473 PREWHERE b > 0 AND b <= 70 AND c > 46 AND c <= 76 AND d > 5 AND d <= 35 WHERE a == 0;
CREATE TABLE rename_table_multiple (key Int32, value1 String, value2 Int32) ENGINE = MergeTree ORDER BY tuple() SETTINGS min_bytes_for_wide_part=0;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt64(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toUInt64(3) END FROM system.numbers LIMIT 10;
select X.id, Y.id from X full join Y on (Y.id - 1) = X.id order by X.id, Y.id;
DROP DATABASE IF EXISTS test_luiy9hhq 
system stop merges t;
SELECT dictHas('01765_db.sparse_hashed_dictionary_simple_key_complex_attributes', number) FROM system.numbers LIMIT 4;
SELECT * FROM numbers(34629)
SELECT subtractYears(materialize('2023-10-22'), 1), subtractYears(materialize('2023-10-22 12:34:56.123'), 1);
DROP DATABASE IF EXISTS test_fnqwi61y 
SELECT arrayShuffle(groupArray(toUInt64(x)),0xbad_cafe) FROM (SELECT number as x from system.numbers LIMIT 100);
SELECT hop(toDateTime('2020-01-09 12:00:01', 'US/Samoa'), INTERVAL 1 MINUTE, INTERVAL 3 MINUTE, 'US/Samoa');
SELECT ceiling(NULL);
SELECT 'Dictionary cache_dictionary_complex_key_complex_attributes';
INSERT INTO test_01193_18429.table_5_325 VALUES 
SELECT 'Running test stateless/02160_h3_cell_area_m2.sql from pid=1724' 
SELECT 'Running test stateless/02875_fix_column_decimal_serialization.sql from pid=1713' 
SELECT multiIf((number % 2) = 0, toUInt16(1), (number % 3) = 0, toFloat32(2), toUInt32(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_3D5B5F41203364474A4E4C245B5276784873566B5F4638642B6D3A5E2E3D4038382C3C372F675078(x UInt8) Engine=Memory;
select toString(x) from values ('x Nullable(String)', '42', NULL, 'test');
INSERT INTO nums_buf (n) VALUES 
SELECT a > '0.0' FROM decimal ORDER BY a;
SELECT 'Running test stateless/00754_alter_modify_order_by_replicated_zookeeper_long.sql from pid=1724' 
SELECT 'Running test stateless/01018_ambiguous_column.sql from pid=1718' 
SELECT positionCaseInsensitiveUTF8(materialize('ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ'), 'ÃÂ');
CREATE TABLE test_487E4D447962403E5D7E293F5E64662F7E2E392D6A304869673A547972767D3B51655C5C413D3656(x UInt8) Engine=Memory;
CREATE TABLE test_7E5446575C2926327A3B265F525953375A2F5266504A682A6B28636E5A326D4F58357D667B446A48(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_4wtfkyuq 
INSERT INTO test_01193_18429.table_1_187 VALUES 
CREATE DATABASE IF NOT EXISTS test_992224tg 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (90 < 23 AND 96 > 0 ? 90 : 0)), throwIf(last != (90 < 23 AND 96 > 0 ? least(23 - 1, 90 + 96 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(23) LIMIT 90, 96);
DROP DATABASE IF EXISTS test_f2wf78xk 
CREATE DATABASE IF NOT EXISTS test_uea9qehy 
SELECT count() from test_startsWith where startsWith(a, 'a') settings force_primary_key=1;
SHOW CREATE test_sparse_dictionary_load_factor;
CREATE TABLE test_5A62343F55263A327871432A66657A4A6235396F3C7A6A5F7947725E7B366D575B7B4C6C63682330(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_6_195 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO nested_nested_table SETTINGS input_format_parquet_import_nested = 1, input_format_parquet_case_insensitive_column_matching = 1 FORMAT Parquet
SELECT CASE WHEN (col1 % 2) = 0 THEN col2 WHEN (col1 % 3) = 0 THEN 'bar' ELSE toFixedString(col4, 16) END FROM multi_if_check;
CREATE TABLE test_6655544935243B4862474F7C6D4E27764346632F22597967392B57643275764F4079204A69594560(x UInt8) Engine=Memory;
DETACH TABLE alter_enum_array;
drop table if exists test_progress
INSERT INTO test_01193_18429.table_4_902 VALUES 
SELECT decodeURLFormComponent(encodeURLFormComponent('http://paul@127.0.0.1/?query=hello world foo+bar#a=b'));
SELECT t1.id, t1.value, t2.id, t2.value FROM test_table_join_1 AS t1 INNER JOIN test_table_join_2 AS t2 ON t1.id = t2.id AND t2.value = 'Join_2_Value_0';
DROP DATABASE IF EXISTS test_06eh6ksn 
SELECT 'n rj n', t1.x, t2.x FROM nt AS t1 RIGHT JOIN nt AS t2 ON t1.x = t2.x ORDER BY t1.x;
CREATE DATABASE IF NOT EXISTS test_6wna9c0e 
SELECT isNotNull(NULL);
DROP DATABASE IF EXISTS test_3uccz023 
CREATE WINDOW VIEW test_01048.wv ENGINE Memory AS SELECT count(a) AS count, hop(timestamp, INTERVAL '1' SECOND, INTERVAL '3' SECOND) AS wid FROM test_01048.mt GROUP BY wid;
SELECT JSONExtractKeysAndValues('{"a": "hello", "b": "world"}', 'String');
CREATE DATABASE IF NOT EXISTS test_y4u70pcy 
select arrayPopBack(emptyArrayUInt8());
system drop database replica 's1|r2' from database rdb_test_5mr53c62
CREATE TABLE test_01193_18429.table_4_611 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT toDecimal64OrZero('', 0) AS x, toDecimal64OrZero('0.42', 3) AS y;
SELECT CASE WHEN 1 THEN toFixedString(col2, 16) WHEN (col1 % 3) = 0 THEN 'bar' ELSE 'baz' END FROM multi_if_check;
alter table many_mutations delete where y = 759 * 2 settings mutations_sync = 0;
INSERT INTO test_01193_18429.table_1_925 VALUES 
CREATE DATABASE IF NOT EXISTS parallel_ddl
SELECT serialization_kind FROM system.parts_columns WHERE table = 't_sparse_s3' AND active AND column = 's' AND database = currentDatabase();
INSERT INTO r10 SELECT 53
SELECT 'Dictionary hashed_array_dictionary_complex_key_simple_attributes';
SELECT 'uniqTheta many agrs';
CREATE TABLE test_672C2A4F5D7E2B2C2C7B253F2B262D68547A3B6A39243F72222F2320714B4D4B3E796131276B4E64(x UInt8) Engine=Memory;
CREATE TEMPORARY TABLE table_gcd_codec_decimal256 (n Decimal256(1) CODEC(GCD, LZ4)) ENGINE = Memory;
CREATE TABLE test_01193_18429.table_6_65 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT y, count() FROM cluster(test_cluster_one_shard_three_replicas_localhost, currentDatabase(), 02535_custom_key) GROUP BY y ORDER BY y SETTINGS max_parallel_replicas=3 , parallel_replicas_custom_key='cityHash64(y) + 1' , parallel_replicas_custom_key_filter_type='range' , prefer_localhost_replica=1
alter table many_mutations delete where y = 742 * 2 settings mutations_sync = 0;
SELECT toUInt8(1), bitPositionsToArray(toUInt8(1));
CREATE TABLE data_02411 (`key` Int32) ENGINE = MergeTree ORDER BY key SETTINGS min_bytes_for_wide_part = 0, index_granularity = 8192, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 20623, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 6179265718, index_granularity_bytes = 22626786, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 79498, primary_key_compress_block_size = 22185
CREATE TABLE src_2 (`p` UInt64, `k` UInt64, `v` UInt64) ENGINE = ReplicatedMergeTree(concat('/test/01154_move_partition_long_test_uepaqe2p/{shard}/src_', toString(randConstant())), '{replica}') PARTITION BY p % 10 ORDER BY k SETTINGS index_granularity = 13557, min_bytes_for_wide_part = 756562708, ratio_of_defaults_for_sparse_serialization = 0.35682085156440735, replace_long_file_name_to_hash = false, max_file_name_length = 50, merge_max_block_size = 13985, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 376025, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 6001059207, index_granularity_bytes = 10151118, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 83048, primary_key_compress_block_size = 78650
CREATE TABLE test_5769635929576839503A4C353C5A353C5347356B5A2B47786E427E23543A51613A3D647D7B772561(x UInt8) Engine=Memory;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toUInt16(1) + N as r FORMAT CSV;
SELECT number AS id, toString(number) AS s, range(number) AS arr FROM numbers(10) FORMAT TSVWithNames
INSERT INTO r8 SELECT 42 % 10 = 8 ? 42 - 1 : 42
SELECT * FROM system.dropped_tables LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
CREATE TABLE test_01193_18429.table_5_204 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_02908_r3_171 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_171', 'r3') ORDER BY tuple()
INSERT INTO distinct (Num, Name) VALUES 
alter table many_mutations delete where y = 642 * 2 settings mutations_sync = 0;
CREATE TABLE alter_table_2 (`a` UInt8, `b` Int16, `c` Float32, `d` String, `e` Array(UInt8), `f` Nullable(UUID), `g` Tuple(UInt8, UInt16)) ENGINE = ReplicatedMergeTree('/clickhouse/tables/00993_system_parts_race_condition_drop_zookeeper_test_zoczfe66/alter_table', 'r_2') PARTITION BY b % 10 ORDER BY a SETTINGS old_parts_lifetime = 1, cleanup_delay_period = 0, cleanup_delay_period_random_add = 0, cleanup_thread_preferred_points_per_iteration = 0, replicated_max_mutations_in_one_entry = 118, index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 17222, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 5082719006, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75985, primary_key_compress_block_size = 73298
DROP VIEW mv;
INSERT INTO test_01193_18429.table_4_471 VALUES 
insert into summing_merge_tree_aggregate_function select 1, 1, uniqState(1), uniqExactState(1);
CREATE TABLE test_51486A20375678256A473E467B4A2D364C6665372038742956656A435535402B49363F794E337D41(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_g9gzbewy 
SYSTEM SYNC REPLICA partitioned_by_string_replica1 PULL
CREATE TABLE test_01193_18429.table_6_557 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP DATABASE IF EXISTS test_pyh7sk9g 
SELECT 'Running test stateless/02676_analyzer_limit_offset.sql from pid=1713' 
CREATE DATABASE IF NOT EXISTS test_xwtkdnzi 
DROP DATABASE IF EXISTS test_63vbp1he 
INSERT INTO test_01193_18429.table_7_283 VALUES 
SELECT val, b, x FROM t1 ALL RIGHT JOIN tj ON t1.id1 == tj.key1 AND t1.id2 == tj.key2 ORDER BY key1 FORMAT TSVWithNames;
INSERT INTO test_01193_18429.table_8_242 VALUES 
SELECT stringJaccardIndexUTF8(materialize('hello'), materialize('\xF0\x9F\x99\x82'));
DROP TABLE test_alter;
SELECT toDateTime('2016-02-29 01:02:03') + INTERVAL number YEAR, toDateTime('2016-02-29 01:02:03') + INTERVAL number MONTH FROM system.numbers LIMIT 16;
SELECT 'Running test stateless/02346_non_negative_derivative.sql from pid=1724' 
insert into joint VALUES 
/* ddl_entry=query-0000000034 */ DROP TABLE IF EXISTS test_jxssy5ho.t02006
SELECT 1 FROM test_table_join_1 AS t1 LEFT JOIN test_table_join_2 AS t2 USING (id) INNER JOIN test_table_join_3 AS t3 USING(id);
CREATE TABLE test_01193_18429.table_10_271 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT count() FROM parquet_load
INSERT INTO test_01193_18429.table_9_59 VALUES 
INSERT INTO test_01193_18429.table_8_386 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN [toInt8(1), toInt8(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_5_313 VALUES 
CREATE TABLE test_02908_r1_208 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_208', 'r1') ORDER BY tuple()
create table t_l5ydey on cluster test_shard_localhost as local_t_l5ydey engine=Distributed('test_shard_localhost', currentDatabase(),'local_t_l5ydey', rand());
INSERT INTO r5 SELECT 40
SELECT (a, d, g) = (c, f, i), (a, d, g) != (c, f, i) FROM decimal ORDER BY a;
CREATE INDEX idx_tab3_2 ON tab3 (col1 DESC,col3 DESC);
select 'dst_to_src', 4, 'src', type, n, _part from src order by type, n
CREATE TABLE IF NOT EXISTS 02703_keeper_map_concurrent_8 (key UInt64, value UInt64) ENGINE = KeeperMap('/02703_keeper_map/test_v80w9u9h') PRIMARY KEY(key)
CREATE TABLE test_02908_r1_207 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_207', 'r1') ORDER BY tuple()
DROP DATABASE IF EXISTS test_x4j5zx84 
INSERT INTO table_for_alter VALUES 
SYSTEM STOP MERGES test_h9sgbm48.async_inserts
CREATE TABLE test_01193_18429.table_7_496 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT `k`, sipHash64(`v`) FROM `test_qw0suh8b`.`t1` ORDER BY `k` ASC LIMIT 998, 5
SELECT 'Running test stateless/02783_parallel_replicas_trivial_count_optimization.sh from pid=1718' 
INSERT INTO src_6 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 99
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 22635, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT decodeURLComponent(queryString('http://127.0.0.1/?'));
SET input_format_null_as_default = 1;
ALTER TABLE concurrent_alter_column ADD COLUMN c186 DOUBLE;
SELECT count() FROM composite_partition_key WHERE b = 11 FORMAT XML SETTINGS optimize_trivial_count_query = 0
select 'create table, column +type +NULL +DEFAULT';
INSERT INTO datetime_table VALUES 
CREATE TABLE test_01193_18429.table_7_502 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT COUNT() FROM startsWith_test WHERE startsWith(S2, S3);
select * from table1 as t1 join table2 as t2 on t1_a = t2_a where (table1.a as t1_a) > 4 and (table2.a as t2_a) > 2;
CREATE TABLE test_01193_18429.table_3_617 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select format('{}{}{}', 'a', 'b', materialize(toFixedString('c', 1))) == 'abc' from system.numbers limit 5;
DROP DATABASE IF EXISTS test_ddiq01zr 
SELECT 'Running test stateless/02918_wrong_dictionary_source.sql from pid=1714' 
SELECT `__table1`.`key` AS `key`, `__table1`.`value` AS `value`, `__table3`.`key` AS `r.key`, `__table3`.`value` AS `r.value` FROM (SELECT `__table2`.`key` AS `key`, `__table2`.`value` AS `value` FROM `test_49nwqtsw`.`num_1` AS `__table2`) AS `__table1` GLOBAL ALL INNER JOIN `_data_16882533282878710784_894952518173894655` AS `__table3` ON `__table1`.`key` = `__table3`.`key` ORDER BY `__table1`.`key` ASC LIMIT _CAST(10000, 'UInt64'), _CAST(10, 'UInt64') SETTINGS allow_experimental_analyzer = 1, send_logs_level = 'trace', allow_experimental_parallel_reading_from_replicas = 2, max_parallel_replicas = 2, parallel_replicas_for_non_replicated_merge_tree = 1, cluster_for_parallel_replicas = 'test_cluster_one_shard_three_replicas_localhost', parallel_replicas_prefer_local_join = 0
SELECT maxMap([number % 3, number % 4 - 1], [number :: UInt256, NULL]) FROM numbers(3) GROUP BY number WITH ROLLUP ORDER BY number;
drop table data_02052_10_wide0;
SELECT bin(bitShiftLeft('Hello', 42));
DROP DATABASE IF EXISTS test_rknh4fse 
SELECT min_time, max_time FROM system.parts WHERE table = 'test' AND database = currentDatabase();
SELECT dictGet('simple_key_hashed_dictionary_01862', 'value', toUInt64(1)) FORMAT Null;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 23644, 500 settings ignore_materialized_views_with_dropped_target_table=1
DROP DATABASE IF EXISTS test_22edklij 
alter table many_mutations delete where y = 51 * 2 settings mutations_sync = 0;
CREATE TABLE test_7C72424573716B64595C335E73244D50496679763C3325275E6C3D6D565759433B32464E41332C5A(x UInt8) Engine=Memory;
CREATE INDEX idx_tab2_4 ON tab2 (col4,col3);
SELECT quantileExactInclusive(0.6)(x) FROM (SELECT number AS x FROM num);
CREATE TABLE test_7154212437592E3A786A3C577A4D717C4D6C772E3960272476792E63275238376847772723435142(x UInt8) Engine=Memory;
select position(materialize('ÃÂ°ÃÂ±ÃÂ²') as h, lower('ÃÂ' as n)) = positionCaseInsensitive(h, n);
CREATE DATABASE IF NOT EXISTS test_gqmtn4ik 
INSERT INTO test_01193_18429.table_8_254 VALUES 
drop table if exists merge1;
ALTER TABLE concurrent_alter_column ADD COLUMN c496 DOUBLE;
SELECT 'Running test stateless/01294_system_distributed_on_cluster.sql from pid=1705' 
CREATE TABLE test_01193_18429.table_1_337 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP DATABASE IF EXISTS test_ztoqjqhw 
DROP TABLE IF EXISTS alter_table_0;
INSERT INTO test_01193_18429.table_3_20 VALUES 
CREATE TABLE part (`p_partkey` Int32, `p_name` String, `p_mfgr` FixedString(25), `p_brand` FixedString(10), `p_type` String, `p_size` Int32, `p_container` FixedString(10), `p_retailprice` Decimal(18, 2), `p_comment` String, CONSTRAINT pk CHECK p_partkey >= 0, CONSTRAINT positive CHECK (p_size >= 0) AND (p_retailprice >= 0)) ENGINE = MergeTree ORDER BY p_partkey SETTINGS index_granularity = 1495, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 120, merge_max_block_size = 2901, prefer_fetch_merged_part_size_threshold = 6417235238, vertical_merge_algorithm_min_rows_to_activate = 999436, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 31432715, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 31577, primary_key_compress_block_size = 51950
SELECT round(sum(toDecimal64(40, 2) * f32), 6) FROM test01603;
CREATE TABLE test_2C677D2E66734A524F3E4D4A573F58204957356A3352204F545D4C27205A406B6B705D52797E214A(x UInt8) Engine=Memory;
SELECT round(abs(res1 - res2), 6) FROM ( SELECT kurtPop(x_value) AS res1, ( sum(x_value * x_value * x_value * x_value) / count() - 4 * sum(x_value * x_value * x_value) / count() * sum(x_value) / count() + 6 * sum(x_value * x_value) / count() * sum(x_value) / count() * sum(x_value) / count() - 3 * sum(x_value) / count() * sum(x_value) / count() * sum(x_value) / count() * sum(x_value) / count() ) / pow((sum(x_value * x_value) - ((sum(x_value) * sum(x_value)) / count())) / count(), 2) AS res2 FROM series );
INSERT INTO test_01193_18429.table_10_969 VALUES 
CREATE USER session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_plaintext_password_two_profiles_no_roles IDENTIFIED WITH plaintext_password
INSERT INTO checksums_r3 VALUES 
SELECT wordShingleMinHashCaseInsensitive(NULL);
CREATE TABLE nbagames_from_string (`data` JSON) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 29222, min_bytes_for_wide_part = 454666478, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 3593, prefer_fetch_merged_part_size_threshold = 5971113424, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 4527368405, index_granularity_bytes = 3857295, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 75999, primary_key_compress_block_size = 28656
DROP DATABASE IF EXISTS test_pigpnxge 
select toJSONString(c) from ( select cast( (number:: String, null, (number:: String, null)), 'Tuple(a Nullable(String), b Nullable(Int64), c Tuple(x Nullable(String), y Nullable(Float64)))' ) as c from numbers(3) ) settings output_format_json_named_tuples_as_objects = 1, output_format_json_skip_null_value_in_named_tuples = 1;
CREATE TABLE test_02908_r2_206 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_206', 'r2') ORDER BY tuple()
SELECT 'TÃÂ¼rk (default)';
CREATE DATABASE IF NOT EXISTS test_9rw21puk 
select * from test_in where a in ('a');
CREATE TABLE test_4C6A453D536B5D7328385E753349754E3C613B3851495437735B5857385A4B46237228736F3B2F6A(x UInt8) Engine=Memory;
CREATE TABLE test_6F5D426140444A512D4A314E797E22675F5F484C266551697B7B205C472A265641453170496F2A74(x UInt8) Engine=Memory;
INSERT INTO binary_op_mono6 VALUES 
CREATE TABLE test_557A7D7D6A4B7C49782E7E31395A384E43372C335B22307E5A514C567C374669693B30454C593D7E(x UInt8) Engine=Memory;
DROP DICTIONARY complex_key_hashed_dictionary_01862;
CREATE TABLE test_226354332F7B62466834567679437D53776D317E7041445A304D655F5328312B6C7144594D4D527B(x UInt8) Engine=Memory;
select toTypeName(materialize(js1.k)), toTypeName(materialize(js2.k)), toTypeName(materialize(js1.s)), toTypeName(materialize(js2.s)) from (select number k, toLowCardinality(toString(number)) s from numbers(2)) as js1 join (select toLowCardinality(number+1) k, toString(number+1) s from numbers(2)) as js2 using k order by js1.k, js2.k;
CREATE TABLE test_02908_r3_267 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_267', 'r3') ORDER BY tuple()
SELECT count() FROM map_subcolumns PREWHERE arrayMax(m.values) > 3;
SELECT 'Running test stateless/01717_int_div_float_too_large_ubsan.sql from pid=1715' 
CREATE TABLE test_5B7875296E77413B2C2367413A735F5E5B72567D77282E412B5D7D56634936692246755832775929(x UInt8) Engine=Memory;
select mortonDecode(1, 4294967286);
INSERT INTO r5 SELECT 32 % 10 = 5 ? 32 - 1 : 32
DROP TABLE collapsing_merge_tree_with_sampling;
CREATE TABLE shard_0.t_local (a Int) ENGINE = Memory;
CREATE TABLE test_5C6661643A517562672F7A465B315C495F2F20496D765B6324242B36203B265366495B61302F4940(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_7_497 VALUES 
SELECT b, sum(a) FROM attach_partition_t6 GROUP BY b ORDER BY b;
DROP DATABASE IF EXISTS test_hn1733e4 
SELECT ifNotFinite(-1 / 0, 2);
SELECT * FROM test INTO OUTFILE '/tmp/clickhouse-test/0_stateless/test_hr7d8afz/test_hr7d8afz_test.native.zstd' FORMAT Native
drop table if exists data_01256;
SELECT CASE WHEN 1 THEN 'foo' WHEN 1 THEN 'bar' ELSE toFixedString(col4, 16) END FROM multi_if_check;
INSERT INTO test_01193_18429.table_3_40 VALUES 
INSERT INTO test_01193_18429.table_10_727 VALUES 
CREATE VIEW test_view_00595 AS SELECT * FROM test_00595;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), N >= DT as r FORMAT CSV;
SELECT 'Running test stateless/02561_sorting_constants_and_distinct_crash.sql from pid=1720' 
SELECT arraySort(x -> (x.1, x.2), groupArray(t)) == [(1, '1'), (NULL, NULL)] FROM null_in_tuple WHERE t global in ((1, '1'), (NULL, NULL));
ALTER TABLE dst_7 DROP PARTITION 5
SELECT * FROM t1_00826 cross join t2_00826 where t1_00826.a = t2_00826.a and (t1_00826.b = t2_00826.b and 1);
DROP TABLE IF EXISTS ".inner_id.e15f3ab5-6cae-4df3-b879-f40deafd82c2";
select number, number + 1, concat('string: ', toString(number)) from numbers(200000) group by number with totals order by number limit 190000 format PrettySpaceNoEscapes
create user 'test 01119';
OPTIMIZE TABLE testing FINAL;
SELECT k, groupArrayForEach(arr) FROM (SELECT intDiv(number, 3) AS k, range(number) AS arr FROM system.numbers LIMIT 10) GROUP BY k ORDER BY k;
select bitmapContains(bitmapBuild([9]), 964291337) 
EXPLAIN SYNTAX (SELECT sum(((uint64 AS m) + (1 AS n)) AS i) j from test_table where m > 0 and n > 0 and i > 0 having j > 0);
SELECT * FROM set_idx WHERE (u64 < 2 OR u64 > 10) AND s != 'cba' ORDER BY dt
SELECT (0 + 1 + 2 + 3 + 4)::Date AS c;
CREATE TABLE test_02908_r3_155 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_155', 'r3') ORDER BY tuple()
desc format(JSONCompactEachRow, '[[1, 2]], [[null]]');
CREATE DATABASE IF NOT EXISTS test_z7wgfkq8 
CREATE TABLE test_584D5B7062264C75432667574A24502B6F2E5F4C3F70607E4D383C5366645D4D426D32537074604C(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_o6o8fdxt 
DROP DATABASE IF EXISTS test_oujn6rzr 
CREATE INDEX idx_tab3_2 ON tab3 (col1 DESC,col4);
SELECT '--- cross multiple ands ---';
SELECT x, txt FROM 02540_date WHERE txt == 'CAST(65534 as UInt32)';
INSERT INTO r3 SELECT 41 % 10 = 3 ? 41 - 1 : 41
CREATE TABLE test_2E6927375D3049325776366D76224F6279647B25787E565A286A3C63614E476F77273D5F6A353521(x UInt8) Engine=Memory;
SET input_format_allow_errors_num=0;
INSERT INTO 02267_t FORMAT JSONLines 
DROP DATABASE IF EXISTS test_vixkg2t8 
CREATE DATABASE IF NOT EXISTS test_d7bm5jtz 
CREATE TABLE test_01193_18429.table_10_524 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SET allow_experimental_analyzer = 0;
CREATE TABLE test_01193_18429.table_10_627 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select 1 = multiSearchAny(materialize('abcdefgh'), ['bcdef']) from system.numbers limit 10;
SELECT 15,'Hello',bin(bitShiftLeft('Hello', 15));
CREATE TABLE test_25795128763A772C7E522E205934645560353776625967772E7B336E4720645273286F2C44563A2F(x UInt8) Engine=Memory;
SELECT toUnixTimestamp(x) as tt, (toDateTime('2020-10-04 01:40:00', 'Australia/Lord_Howe') + INTERVAL number * 600 SECOND) AS x, timezoneOffset(x) as res,(toDateTime(toString(x), 'UTC') - x ) AS calc FROM numbers(576) where res != calc;
SHOW TABLES;
CREATE TABLE test_01193_18429.table_4_796 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
insert into t2 values
INSERT INTO t64 SELECT (1 - toInt64(intExp2(16)) + number) AS x, x, x, x, x, x, x, x FROM numbers(65);
SELECT 'Running test stateless/02476_analyzer_join_with_unused_columns.sql from pid=1714' 
INSERT INTO test_01193_18429.table_5_438 VALUES 
select arrayShiftRight([[1, 2], [3, 4], [5, 6]], 2, [7, 8]);
CREATE TABLE test_02908_r1_293 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_293', 'r1') ORDER BY tuple()
ALTER TABLE t1 ADD COLUMN s String;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (48 < 43 AND 2 > 0 ? 48 : 0)), throwIf(last != (48 < 43 AND 2 > 0 ? least(43 - 1, 48 + 2 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(43) LIMIT 48, 2);
SELECT '-- Bug 56258: Check identifiers (ASTIdentifier)';
CREATE TEMPORARY TABLE datetime__fuzz_14 (`d` LowCardinality(Nullable(UInt128)));
DROP DATABASE IF EXISTS test_obr0ncpf 
INSERT INTO r8 SELECT 7 % 10 = 8 ? 7 - 1 : 7
CREATE TABLE test_01193_18429.table_10_710 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_634C41704E53314B704B202E783C415C6333253E444C2D392B593E4960246A42385D515052466370(x UInt8) Engine=Memory;
INSERT INTO r6 SELECT 56 % 10 = 6 ? 56 - 1 : 56
SELECT multiIf(1, col2, (col1 % 3) = 0, col3, col4) FROM multi_if_check;
select if(materialize(0), materialize(toLowCardinality('a')), materialize('b'));
CREATE TABLE test_403E62495F644B3B2E217E64642D5C227D32336E6F3F58393F3E4A5E272832694A65314B3D405243(x UInt8) Engine=Memory;
CREATE TABLE fh(a_value UInt32, b_value Float64, c_value Float64, d_value Float64) ENGINE = Memory;
SELECT materialize('ÃÂÃÂÃÂ¸ÃÂ²ÃÂµÃÂ, World') AS s WHERE (s LIKE 'hell%') OR (s ILIKE '%ÃÂ¿ÃÂÃÂ¸ÃÂ²ÃÂµÃÂ%') OR (s ILIKE 'world%') SETTINGS optimize_or_like_chain = 1, allow_experimental_analyzer = 1;
ATTACH TABLE t_remove_sample_by;
SELECT 'Running test stateless/02725_memory-for-merges.sql from pid=1726' 
select firstSignificantSubdomainCustom('foo.kernel.biz.ss', 'public_suffix_list');
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (93 < 12 AND 94 > 0 ? 93 : 0)), throwIf(last != (93 < 12 AND 94 > 0 ? least(12 - 1, 93 + 94 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(12) LIMIT 93, 94);
DROP DATABASE IF EXISTS test_en266p95 
CREATE TABLE test_a (`id` UInt32, `company` UInt32, `total` UInt64) ENGINE = SummingMergeTree PARTITION BY company PRIMARY KEY id ORDER BY (id, company) SETTINGS index_granularity = 29499, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 12066, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 3132118669, index_granularity_bytes = 4874312, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 67074, primary_key_compress_block_size = 90705
SELECT arrayEnumerateUniqRanked(2, [[1,2,3],[2,2,1],[3]],1,[[[1,2,3],[1,2,3],[1,2,3]],[[1,2,3],[1,2,3],[1,2,3]],[[1,2]]],2);
CREATE TABLE test_01193_18429.table_8_368 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'Running test stateless/00710_array_enumerate_dense.sql from pid=1726' 
SELECT 'Outer part of Mecca';
SELECT '-- overflow test';
drop table if exists projection_without_key;
SELECT pk1, pk2, pk4, pk3, countMerge(occurences) AS occurences FROM ds GROUP BY pk1, pk2, pk4, pk3 ORDER BY pk1, pk2, pk4, pk3;
SELECT 'Running test stateless/02416_grouping_function_compatibility.sql from pid=1718' 
select 0 = isValidUTF8(toFixedString('\xf0\x28\x8c\x28', 4)) from system.numbers limit 10;
OPTIMIZE TABLE summing_00682 PARTITION tuple() FINAL
select 1 = multiSearchAny(materialize('abcdefgh'), ['abcdefg']) from system.numbers limit 129;
INSERT INTO test_01193_18429.table_10_567 VALUES 
ALTER TABLE src_5 MOVE PARTITION 0 TO TABLE dst_12
DROP DATABASE IF EXISTS test_16181cmy 
SELECT number FROM remote('127.0.0.{2,3}', currentDatabase(), data_00184) LIMIT 1 BY number LIMIT 1 SETTINGS distributed_group_by_no_merge=2;
CREATE DATABASE IF NOT EXISTS test_88v9v5e2 
DROP DATABASE `02661_db1`
SELECT dimension_1, sum_metric_1, sum_metric_2 FROM ( SELECT dimension_1, sum(metric_1) AS sum_metric_1 FROM foo GROUP BY dimension_1 WITH TOTALS ) AS subquery_1 ALL FULL OUTER JOIN ( SELECT dimension_1, sum(metric_2) AS sum_metric_2 FROM bar GROUP BY dimension_1 WITH TOTALS ) AS subquery_2 USING (dimension_1) WHERE sum_metric_2 < 20 ORDER BY dimension_1 ASC;
INSERT INTO r10 SELECT 38 % 10 = 10 ? 38 - 1 : 38
select sipHash128ReferenceKeyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37)) == sipHash128Reference(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37));
SELECT '--simple 3';
INSERT INTO test_array_ops(arr) values 
SELECT multiIf((number % 2) = 0, [toFloat32(1), toFloat32(2)], (number % 3) = 0, [toUInt8(2), toUInt8(3)], [toInt8(3), toInt8(3)]) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_5_233 VALUES 
CREATE TABLE complex_key_dictionary_source_table ( id UInt64, id_key String, value String, value_nullable Nullable(String) ) ENGINE = TinyLog;
INSERT INTO test_01193_18429.table_5_696 VALUES 
CREATE DATABASE IF NOT EXISTS test_rzq5lmy4 
SELECT '---- toDecimal32OrNull ----';
SELECT ifNull(materialize('x'), materialize('y')) AS res, toTypeName(res);
INSERT INTO test_02559__fuzz_20 SELECT number, number FROM numbers(10);
select hasSubsequence('garbage', 'garbage1');
INSERT INTO test ("\\") VALUES 
SELECT nx FROM nested ARRAY JOIN nest.x AS nx, nest.y AS ny WHERE notEmpty(nest.x);
SELECT hasToken('NEEDLE,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,', 'NEEDLE'), ' expecting ', 1;
SELECT 'Running test stateless/00956_http_prepared_statements.sh from pid=1722' 
SELECT type FROM system.columns WHERE table='concurrent_kill_2' and database='test_bc61bq8k' and name='value'
SELECT 'Running test stateless/01070_h3_get_base_cell.sql from pid=1715' 
SELECT 'Running test stateless/01508_format_regexp_raw.sh from pid=1713' 
select 2, *, _part from rmt2 order by n;
SELECT 13 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'val', tuple(IPv4StringToNum('255.248.0.0')))
drop table if exists test_shard;
SELECT toIntervalWeek(-1);
INSERT INTO mt VALUES /* (-3, 2) */ 
CREATE TABLE test_6933737121564163206B61575D28356F522F6D4B792C7D3633343E2136722877427D603C265B6735(x UInt8) Engine=Memory;
INSERT INTO test_y9d6pdpj.t_async_insert FORMAT JSONColumnsWithMetadata
INSERT INTO test_01193_18429.table_6_349 VALUES 
select b from prewhere_alias prewhere a = 1;
CREATE DATABASE IF NOT EXISTS test_ctc2cv25 
SELECT (c1, c2) as t FROM values((NULL, 0.), (0., 0.), (5., 5.)) ORDER BY t ASC LIMIT 1;
DROP DATABASE test_01155_ordinary;
SELECT B, neighbor(B, 1) AS next_B FROM (SELECT * FROM test ORDER BY B) WHERE A == 1;
DROP DATABASE IF EXISTS test_qhylfs37 
SELECT any([[0, 1], [`number`, `number`]]) AS `k` FROM numbers(10)
ALTER TABLE t_limit_mutations UPDATE v = 4 WHERE 1;
SELECT 'Running test stateless/01710_minmax_count_projection_distributed_query.sql from pid=1715' 
create table ttl_00933_1 (b Int, a Int ttl '2100-10-10'::Date) engine = MergeTree order by tuple() partition by tuple() settings min_bytes_for_wide_part = 0;
CREATE TABLE test_01193_18429.table_9_388 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT avgWeighted(x, w) FROM values('x Float64, w Int32', (4, 1), (1, 0), (10, 2));
CREATE DATABASE IF NOT EXISTS test_jwyki9uv 
select * from numbers(10) SETTINGS result_overflow_mode = 'break', max_block_size = 1 FORMAT PrettySpaceNoEscapes;
CREATE TABLE test_01193_18429.table_2_253 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE t2 (`id` UInt32, `attr` UInt32) ENGINE = MergeTree ORDER BY id SETTINGS ratio_of_defaults_for_sparse_serialization = 0.1, index_granularity = 17727, min_bytes_for_wide_part = 0, replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 18950, prefer_fetch_merged_part_size_threshold = 3651659627, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 48, min_merge_bytes_to_use_direct_io = 5410149628, index_granularity_bytes = 12898238, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 84500, primary_key_compress_block_size = 63504
CREATE TABLE test_707B3F296A53253A353D4F793B4F77784458723A3C322C6D5D592A68564D7A3F7B3B44676D4B343F(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_5_879 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Running test stateless/02931_size_virtual_column_use_structure_from_insertion_table.sh from pid=1726' 
INSERT INTO t5 VALUES 
SELECT 11, 0, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (11 < 13 AND 0 > 0 ? 11 : 0)), throwIf(last != (11 < 13 AND 0 > 0 ? least(13 - 1, 11 + 0 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 11, 0);
CREATE TABLE test_02908_r2_284 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_284', 'r2') ORDER BY tuple()
SELECT number AS id, toString(number) AS s, range(number) AS arr FROM numbers(10) FORMAT JSONObjectEachRow
SELECT '5' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('fff0::')))
CREATE TABLE test_01193_18429.table_5_945 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select 4 = position('abcdefgh', materialize('def')) from system.numbers limit 10;
SELECT value,f FROM bool_test order by value FORMAT CSV;
INSERT INTO indexed_table SELECT toDateTime('2019-05-27 10:00:00') + number % 100, concat('hhhhhhhhhhhhhhhhhhhhhhhhh', 'xxxxxxxxxxxxxxxxxxxxxxxxxxxx', 'yyyyyyyyyyyyyyyyyyyyyyyyyy', toString(rand())) FROM numbers(1000);
SELECT count() FROM with_deduplication;
create table tab_00484 (date Date, x UInt64, s String) engine = MergeTree PARTITION BY date ORDER BY (date, x) SETTINGS min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1;
SELECT * FROM 02131_rptable;
alter table data_compact detach partition all;
DROP TABLE IF EXISTS t_random_1;
select * from (explain plan actions = 1 select * from (select * from tab union all select * from tab5) order by (a + b) * c, sin(a / b) limit 3) where explain ilike '%sort description%' or explain like '%ReadType%' or explain like '%Limit%';
CREATE DATABASE IF NOT EXISTS test_e12bwaq5 
INSERT INTO test_01193_18429.table_7_30 VALUES 
select makeDateTime64(1991, 8, 24, 21, 4, 0, 1234, 3, 'CET');
CREATE TABLE t_large (`a` UInt32, `b` int) ENGINE = MergeTree ORDER BY a SETTINGS min_bytes_for_wide_part = 0, index_granularity = 8192, index_granularity_bytes = '10Mi', ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 16523, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 480192687, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 54969, primary_key_compress_block_size = 30039
SELECT 'Running test stateless/02799_transform_empty_arrays.sql from pid=1713' 
CREATE INDEX idx_tab2_1 ON tab2 (col0,col3 DESC,col4);
SELECT * FROM database_for_dict.dict_with_conversion ORDER BY CompanyID;
CREATE TABLE test_632145326C4A4D2965796F5E54526E3C59452A3B26287179287058782E7A75645E7E3060493C7C42(x UInt8) Engine=Memory;
SELECT sum(a) + sum(t_ab2.a) - 1, sum(b) + sum(t_ab2.b) - 1 FROM t_ab1 FULL JOIN t_ab2 ON (t_ab1.a == t_ab2.a AND t_ab1.b == t_ab2.b);
SELECT decodeXMLComponent('Hello, &ltt&amp; world');
SELECT repeat('Hello, world! ', 3);
DROP DATABASE IF EXISTS test_ic30wxdg 
SELECT 'Running test stateless/01527_bad_aggregation_in_lambda.sql from pid=1713' 
CREATE INDEX idx_tab3_4 ON tab3 (col0,col4 DESC);
select 5 = position('abcdefgh', materialize('ef')) from system.numbers limit 129;
DROP TABLE lc_nullable_string;
DROP TABLE partitioned_by_tuple_replica2_00661 SYNC;
GRANT SELECT ON system.numbers TO user_01317_no_password_in_command_line_test_15hay45l
select format('{}{}{}', 'a', 'b', toFixedString('c', 1)) == 'abc';
SELECT 'other', * FROM 02703_db_asterisk.other;
select r from (select [('y',0),('n',1)] as cg, if( arrayMap( x -> x.1, cg ) != ['y', 'n'], 'y', 'n') as so, arrayFilter( x -> x.1 = so , cg) as r );
CREATE TABLE test_01193_18429.table_8_871 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
drop table summing_table01747;
CREATE TABLE test_425234245F4A402540202E553335342D546B20507C792758254A27383F606353293A7A3D25475169(x UInt8) Engine=Memory;
SELECT '1947 #2 CHECK - TRUE' as test, ProfileEvents['SleepFunctionCalls'] as sleep_calls, ProfileEvents['SleepFunctionMicroseconds'] as sleep_microseconds FROM system.query_log WHERE query like '%INSERT into src SELECT number + 100 as id, 1 FROM numbers(2)%' AND type > 1 AND current_database = currentDatabase() AND event_date >= yesterday() FORMAT JSONEachRow;
INSERT INTO test_01193_18429.table_1_646 VALUES 
SELECT number AS hello, toString(number) AS world, (hello, world) AS tuple, nullIf(hello % 3, 0) AS sometimes_nulls FROM system.numbers LIMIT 10 SETTINGS max_block_size = 5 FORMAT Pretty;
INSERT INTO r9 SELECT 20
CREATE TABLE test_01193_18429.table_9_590 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO t64 SELECT number AS x, x, x, x, x, x, x, x FROM numbers(2);
CREATE TABLE group_uniq_arr_str ENGINE = Memory AS SELECT hex(intHash32(g)) as id, if(c == 0, [hex(v)], if(c == 1, emptyArrayString(), [hex(v), hex(v)])) as v FROM (SELECT intDiv(number%1000000, 100) as v, intDiv(number%100, 10) as g, number%10 as c FROM system.numbers WHERE c < 3 LIMIT 10000000);
CREATE TABLE test_01193_18429.table_3_133 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT '====CUT QUERY STRING AND FRAGMENT====';
SELECT d4, f2, least(d4, f2) FROM t ORDER BY f2;
insert into test select uniqStateForEachResample(30, 75, 30)([number, number + 1], 30) from numbers(10);
INSERT INTO test_01193_18429.table_10_184 VALUES 
INSERT INTO test_01193_18429.table_7_358 VALUES 
INSERT INTO test_01193_18429.table_10_938 VALUES 
INSERT INTO r10 SELECT 35 % 10 = 10 ? 35 - 1 : 35
EXPLAIN SYNTAX SELECT mapContains(m, 'a') FROM t_map_contains;
EXPLAIN SYNTAX SELECT a FROM t_bad_constraint;
SELECT '----- assumeNotNull -----';
SELECT parseDateTimeBestEffortUSOrZero('');
SELECT has(materialize([111, NULL, 222]), materialize(111));
select 2 as x format TSKV 
DROP DATABASE IF EXISTS test_4ghnukxr 
DROP VIEW test_02428_pv12
DROP DICTIONARY 01754_dictionary_db.direct_dictionary_complex_key_complex_attributes;
SELECT * FROM bf_ngram_array_test WHERE has(array, 'K3') SETTINGS force_data_skipping_indices='array_ngram';
INSERT INTO alter_table SELECT number, toString(number) FROM numbers(20000, 10000)
 SELECT * FROM replicas_summary LIMIT 100 SETTINGS max_parallel_replicas = 2, cluster_for_parallel_replicas = 'test_cluster_one_shard_three_replicas_localhost', allow_experimental_parallel_reading_from_replicas = 2, parallel_replicas_for_non_replicated_merge_tree = 1, interactive_delay=99999999999 
CREATE DATABASE IF NOT EXISTS test_i9rp9oxj 
SELECT 'Running test stateless/01503_if_const_optimization.sql from pid=1718' 
select substringIndexUTF8(materialize('Ã¥Â¯ÂÃ¥Â¼ÂºÃ¯Â¼ÂÃ¦Â°ÂÃ¤Â¸Â»Ã¯Â¼ÂÃ¦ÂÂÃ¦ÂÂ'), 'Ã¯Â¼Â', -1);
CREATE TABLE test_01193_18429.table_4_372 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/02916_addcolumn_nested.sql from pid=1726' 
INSERT INTO r_prop_table1 (column_codec, column_comment, column_ttl) VALUES 
INSERT INTO test_01193_18429.table_8_598 VALUES 
INSERT INTO test_01193_18429.table_1_929 VALUES 
SELECT toFloat64OrZero(NULL, NULL);
select tuple(toNullable(number + 1)) < tuple(toNullable(number + 1)) from numbers(1);
CREATE TABLE table3 (b UInt32, c UInt32) ENGINE = Memory;
CREATE TABLE test_01193_18429.table_10_765 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO TABLE test2(year, uv) select '2021',4;
INSERT INTO TABLE tab VALUES 
DROP DATABASE IF EXISTS test_8567wdbw 
CREATE TABLE test_2F555021275366696F433B452D4B396B3A6340664757512C74524676416D5751737A454163644B50(x UInt8) Engine=Memory;
INSERT INTO input SELECT * FROM numbers(1)
INSERT INTO test_01193_18429.table_4_484 VALUES 
INSERT INTO test_01193_18429.table_10_590 VALUES 
SELECT dictGet('01684_database_for_cache_dictionary.cache_dictionary_simple_key_hierarchy', 'parent_id', number) FROM system.numbers LIMIT 5;
CREATE TABLE max_length_alias_14053 (`a` Date, `b` UInt16, `c.d` Array(Date), `dcount` UInt16 ALIAS length(c.d)) ENGINE = MergeTree PARTITION BY toMonday(a) ORDER BY (a, b) SETTINGS index_granularity = 8192, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 64, merge_max_block_size = 5200, prefer_fetch_merged_part_size_threshold = 3927598331, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 31429796, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 65082, primary_key_compress_block_size = 78845
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 47208, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE TABLE d AS t ENGINE = Distributed(test_cluster_two_shards_different_databases, currentDatabase(), t);
CREATE TABLE test_01193_18429.table_10_826 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT greater([NULL],[NULL]);
select arr1, arrayPushFront(arr1, 0.1) from array_functions;
INSERT INTO test_01193_18429.table_3_312 VALUES 
CREATE TABLE test_01193_18429.table_5_326 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT t1.id AS t1_id, t2.id AS t2_id, t1._sample_factor AS t1_sample_factor, t2._sample_factor AS t2_sample_factor FROM test_table_join_1 AS t1 SAMPLE 1/2 INNER JOIN test_table_join_2 AS t2 SAMPLE 1/2 ON t1.id = t2.id;
INSERT INTO test_01193_18429.table_5_774 VALUES 
INSERT INTO mt VALUES /* (-6, 1) */ 
CREATE TABLE test_02908_r1_107 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_107', 'r1') ORDER BY tuple()
select [2] = multiSearchAllPositions(materialize('abcdefgh'), ['bcdefg']);
with '2018-01-12 22:33:44.55' as s, toDateTime64(s, 6) as datetime64 SELECT fromUnixTimestampInJodaSyntax(datetime64, 'SSSSSSSSS', 'UTC');
select parseDateTimeInJodaSyntax('32', 'D', 'UTC') = toDateTime('2000-02-01', 'UTC');
SELECT * FROM 02165_out_tb INTO OUTFILE '/tmp/clickhouse-test/0_stateless/test_meka8o97/example.com.';
OPTIMIZE TABLE t_sparse_mutations_1 FINAL;
CREATE TABLE tab (`x` String) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 8440, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 8559, prefer_fetch_merged_part_size_threshold = 1242120585, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 2746948072, index_granularity_bytes = 6267402, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 9663, primary_key_compress_block_size = 34335 AS SELECT 'Hello'
DROP DATABASE IF EXISTS test_q26wjeoa 
SELECT parseDateTime32BestEffortOrZero('2020-05-14 12:37:03 PM', 'UTC') AS a, toTypeName(a);
CREATE TABLE test_74257025664F4B6C713C36367B482A40516554364479794F52227D2D564C3928565C7C494921684F(x UInt8) Engine=Memory;
SELECT count(*) FROM source WHERE toYear(dt_32) > 2023;
SELECT intervalLengthSum(x, y) FROM values('x Int64, y Int64', (0, 10), (5, 5), (5, 6), (1, -1));
CREATE DATABASE IF NOT EXISTS test_tgth68e2 
CREATE TABLE test_01193_18429.table_7_953 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_79727A38265C4D20744B5726697A386747232D5A7A37367A643F6C5C32796F3E754D436D6E667075(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_1_924 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select parseDateTimeInJodaSyntax('1999 32', 'yyyy D', 'UTC') = toDateTime('1999-02-01', 'UTC');
INSERT INTO src_2 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 80
CREATE TABLE test_01193_18429.table_7_441 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select if(number % 5 == 0, toFloat64OrZero(toString(number)), Null) from numbers(20);
SELECT multiIf((col1 % 2) = 0, ['foo', col3], (col1 % 3) = 0, [col4, col5], ['foo', col7]) FROM multi_if_check;
INSERT INTO dist_1 VALUES 
SELECT 6, 15, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (6 < 13 AND 15 > 0 ? 6 : 0)), throwIf(last != (6 < 13 AND 15 > 0 ? least(13 - 1, 6 + 15 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 6, 15);
DROP DATABASE IF EXISTS test_7pb7weyz 
INSERT INTO replicated_summing_merge_tree_with_sampling VALUES 
DROP TABLE IF EXISTS concurrent_alter_add_drop_3
DROP DATABASE IF EXISTS test_990cm9di 
CREATE INDEX idx_tab3_1 ON tab3 (col3 DESC,col1);
SET cross_to_inner_join_rewrite = 2;
SELECT '104' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ffff:ffff:ff00:0')))
CREATE TABLE data (`key` Int, `val1` SimpleAggregateFunction(max, Nullable(Int)), `val2` SimpleAggregateFunction(min, Int)) ENGINE = AggregatingMergeTree ORDER BY key SETTINGS index_granularity = 54352, min_bytes_for_wide_part = 624198371, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 20913, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 324467, vertical_merge_algorithm_min_columns_to_activate = 73, min_merge_bytes_to_use_direct_io = 4665100111, index_granularity_bytes = 4866261, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 34397, primary_key_compress_block_size = 49407
SELECT * FROM alter_00061 ORDER BY k;
DROP DATABASE IF EXISTS dict_db_02179;
INSERT INTO test_01193_18429.table_2_978 VALUES 
SHOW CREATE TABLE system.filesystem_cache_log
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), toYear(N, 'Asia/Istanbul') as r FORMAT CSV;
CREATE DATABASE IF NOT EXISTS test_8fqmsocf 
SELECT a.pk, b.pk, a.dt, b.dt, toTypeName(a.pk), toTypeName(b.pk), toTypeName(materialize(a.dt)), toTypeName(materialize(b.dt)) FROM (SELECT toUInt8(number) > 0 as pk, toUInt8(number) as dt FROM numbers(3)) a ASOF JOIN (SELECT 1 as pk, toNullable(0) as dt) b USING(pk, dt) ORDER BY a.dt SETTINGS allow_experimental_analyzer = 0;
CREATE TABLE test_7B73614A5C422E59612C2D6F6020294428333B63327234707E2D6D477C562F562B7071253B337261(x UInt8) Engine=Memory;
DROP TABLE buffer_table1;
SELECT 't1 ALL INNER JOIN tn2 | bs = 1';
select throwIf(substring('/var/lib/clickhouse/store/e49/e49df64b-db7a-4970-950f-c647de86313c/0_0_0_0/', 1, 1) != '/', 'Path is relative: /var/lib/clickhouse/store/e49/e49df64b-db7a-4970-950f-c647de86313c/0_0_0_0/')
CREATE DATABASE IF NOT EXISTS test_pvhbjg06 
INSERT INTO test_01193_18429.table_7_29 VALUES 
CREATE TABLE t2 (`k` UInt32, `v` UInt32) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_02723/zookeeper_name/t2', '1') ORDER BY k SETTINGS index_granularity = 12808, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 32, merge_max_block_size = 16067, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 25987942, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 87247, primary_key_compress_block_size = 82418
CREATE TABLE test_6878697A5A4C754B69463A332A4373284F252437705C6B64203C4169305D73224C5221773645497A(x UInt8) Engine=Memory;
CREATE TABLE IF NOT EXISTS t1 (x UInt64, s Array(Nullable(String))) ENGINE = TinyLog
INSERT INTO test_01193_18429.table_5_673 VALUES 
select makeDateTime(1991, 8, 24, 65537, 4, 0, 'UTC');
SELECT count() = countDistinct(message) FROM system.warnings
CREATE TABLE test_6766284A21505D6D4D7C7021553275624025745A375A3C353F6F705827707269512B23497A226755(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_nsb3u5hc 
INSERT INTO test_01193_18429.table_7_912 VALUES 
SELECT count() FROM t_cnf_fuzz WHERE (c9 AND c1 AND c7 AND c6 AND c1) OR ((NOT c7) AND (NOT c0) AND (NOT c7)) OR ((NOT c0)) OR ((NOT c1) AND c6 AND (NOT c6)) OR ((NOT c0) AND (NOT c3) AND (NOT c2) AND (NOT c9) AND c6) OR (c0 AND c4 AND (NOT c5)) OR ((NOT c5) AND c6 AND c1 AND c7) OR (c0 AND c8 AND c8 AND c4) SETTINGS convert_query_to_cnf = 0
CREATE DATABASE IF NOT EXISTS test_nuhki25f 
CREATE TABLE test_01193_18429.table_9_603 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_6936612C507E325A7E753F4D706B7A7B5D2361555E70735938726B5E5D796763553A2E792972653C(x UInt8) Engine=Memory;
SELECT `x` FROM generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8)))))))))))))))))))))))))))))))))', 1, 1, 1) LIMIT 1
SYSTEM STOP FETCHES sqllt.table
SELECT 1, x, 2, s, 3, k, 4 FROM (SELECT number AS k FROM system.numbers LIMIT 10) js1 ANY LEFT JOIN t2 USING k;
CREATE TABLE test_01193_18429.table_9_764 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_4_588 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_9_797 VALUES 
DROP DATABASE IF EXISTS dict_db_01225;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c7) AND (NOT c9) AND c1 AND (NOT c1) AND c7) OR (c0 AND c5 AND (NOT c7) AND (NOT c5)) OR (c7 AND c9) OR ((NOT c4) AND c6 AND (NOT c1) AND (NOT c1)) OR ((NOT c0)) OR (c6 AND (NOT c6) AND (NOT c8)) OR ((NOT c1) AND (NOT c0) AND (NOT c1)) SETTINGS convert_query_to_cnf = 0
SELECT CASE WHEN (number % 2) = 0 THEN toInt16(1) WHEN (number % 3) = 0 THEN toInt32(2) ELSE toInt16(3) END FROM system.numbers LIMIT 10;
SELECT '-- argument validation';
alter table many_mutations delete where y = 12 * 2 settings mutations_sync = 0;
SELECT * FROM test WHERE timestamp <= '2020-10-16' ORDER BY timestamp;
CREATE TABLE test_table_join_1 (`id` UInt64, `value` String) ENGINE = MergeTree ORDER BY id SAMPLE BY id SETTINGS index_granularity = 828, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 4481, prefer_fetch_merged_part_size_threshold = 8843623642, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 17588163, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 36079, primary_key_compress_block_size = 55509
SELECT 'ÃÂ©ÃÂÃÂÃÂ¿ÃÂ°ÃÂ½ÃÂ´ÃÂµÃÂ' ILIKE '%ÃÂÃÂ%ÃÂµ%';
CREATE TABLE test_01193_18429.table_8_319 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DICTIONARY IF EXISTS dict_hashed_simple_auto_convert;
DROP DATABASE IF EXISTS test_k9q8bjst 
set max_rows_to_read = 3;
SELECT 'Running test stateless/02786_transform_float.sql from pid=1720' 
CREATE TABLE test_6A685974674F7D414A6D7C5E7651355B4A3176635E69476461322D507D633033735A31385E4F6A7C(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_irle9elj 
CREATE TABLE test_2j4sloxh_1.xdict_src (`n` int, `m` int, `s` String) ENGINE = MergeTree ORDER BY n SETTINGS index_granularity = 48156, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.3903268277645111, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 1794, prefer_fetch_merged_part_size_threshold = 4566724619, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 3915780837, index_granularity_bytes = 3791544, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 89831, primary_key_compress_block_size = 16654
SELECT 'Running test stateless/00236_replicated_drop_on_non_leader_zookeeper_long.sql from pid=1713' 
CREATE TABLE test_01193_18429.table_6_137 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_2_521 VALUES 
SELECT 'Running test stateless/02867_storage_set_tsan.sh from pid=1720' 
CREATE DATABASE IF NOT EXISTS test_c3evq1h5 
SELECT nan AS value, value = value, value = materialize(value), materialize(value) = value, materialize(value) = materialize(value);
SELECT count(*) FROM source WHERE toYYYYMM(ts) <> 202312 SETTINGS allow_experimental_analyzer=1;
CREATE TABLE test_6A43386E3B3F58777C6466653C41657D384E3E6F356D3B29383F3B506F68615A325F6B5C64657249(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_9_444 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO dst_14 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 42
SELECT 'Versioned Collapsing Merge Tree';
CREATE DATABASE IF NOT EXISTS test_njoc9re0 
SELECT murmurHash3_32(-1);
CREATE TABLE test_01193_18429.table_9_712 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_2_564 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 12, 12, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (12 < 13 AND 12 > 0 ? 12 : 0)), throwIf(last != (12 < 13 AND 12 > 0 ? least(13 - 1, 12 + 12 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 12, 12);
CREATE TABLE test_bug_optimization (`path` String) ENGINE = MergeTree ORDER BY path SETTINGS index_granularity = 43321, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 18584, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 8304422761, index_granularity_bytes = 29672974, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 12064, primary_key_compress_block_size = 84190
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (85 < 4 AND 67 > 0 ? 85 : 0)), throwIf(last != (85 < 4 AND 67 > 0 ? least(4 - 1, 85 + 67 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(4) LIMIT 85, 67);
SELECT s, y FROM mergetree_00712 PREWHERE x AND y ORDER BY s;
INSERT INTO test_01193_18429.table_7_504 VALUES 
SELECT count() FROM composite_partition_key WHERE a = 301 AND b < 20 FORMAT XML SETTINGS optimize_trivial_count_query = 0
CREATE TABLE test_5241693A7B744F7247556225652F5378205428532F455B3D712E2A6A54452A355860464A6F706124(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_10_938 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP TABLE json_each_row
SELECT avgWeighted(x, w) FROM values('x UInt16, w Float32', (4, 1), (1, 0), (10, 2));
CREATE TABLE test_4E3D73525F7269525247373A4B79675627715B3A215C454C362238735B6960782653384A50242843(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_9_75 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_9_440 VALUES 
CREATE TABLE test_32207E4059432D2A5F256F735E29496A736E6A545E3575542B4B2D2D36444372437E6F214D48592E(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_7_209 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT sum(e) from tab_02473 PREWHERE b > 10 AND b <= 70 AND c > 0 AND c <= 51 WHERE a == 0;
INSERT INTO test_01193_18429.table_1_670 VALUES 
CREATE DATABASE IF NOT EXISTS test_4wtfkyuq 
SELECT small_hash == big_hash FROM (SELECT 1 AS key, sum(cityHash64(*)) AS small_hash FROM delta_codec_string) INNER JOIN (SELECT 1 AS key, sum(cityHash64(*)) AS big_hash FROM default_codec_string) USING(key);
SELECT count() FROM t_cnf_fuzz WHERE (c1 AND c0 AND (NOT c9) AND (NOT c0) AND c9) OR (c0 AND c2 AND c1 AND (NOT c6) AND (NOT c0)) OR ((NOT c3)) SETTINGS convert_query_to_cnf = 1
DROP TABLE test_6f5zb2fb.table_for_dict
SELECT 'Running test stateless/01603_rename_overwrite_bug.sql from pid=1705' 
INSERT INTO src_15 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 29
select 1 intersect (select 1 except select 2);
set aggregate_functions_null_for_empty = 1;
INSERT INTO r3 SELECT 71 % 10 = 3 ? 71 - 1 : 71
DROP DATABASE IF EXISTS test_ux62sorf 
CREATE TABLE test_503A345158397824582231697B35692C412C694B543D21402E365725362B2D74646848727E243F43(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS constraint_constant_nullable_expression_that_contains_null;
SELECT argMin(a, b), argMin(a, c), argMin(b, a), argMin(b, c), argMin(c, a), argMin(c, b) FROM decimal WHERE a > 0;
SYSTEM STOP MERGES test;
SELECT a FROM ( select 1 AS a UNION ALL select 1 as a ) AS t1, ( select 2 AS b, 3 AS c UNION ALL select 2 as b, 3 as c) AS t2;
CREATE MATERIALIZED VIEW t_mv ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 18030, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 9387, prefer_fetch_merged_part_size_threshold = 4106613177, vertical_merge_algorithm_min_rows_to_activate = 908826, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 27339098, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 87080, primary_key_compress_block_size = 77093 AS SELECT uniq(x), bitAnd(x, 255) AS y FROM t GROUP BY y
CREATE TABLE test_01193_18429.table_1_750 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT action, user FROM null_lc_set_index WHERE user = 'alice';
CREATE TABLE test_01193_18429.table_3_249 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT avgWeighted(x, w) FROM values('x Int64, w Int32', (4, 1), (1, 0), (10, 2));
SELECT greater(CAST(1 AS Int8),CAST( 0 AS Nullable(Int8)));
SELECT 'Running test stateless/02474_create_user_query_fuzzer_bug.sql from pid=1714' 
SELECT 'Running test stateless/01603_read_with_backoff_bug.sql from pid=1724' 
SELECT * FROM view1 WHERE id = 1;
CREATE TABLE test_54323A6D655A70417E537370713C5156652D3B656C60515B484F67207A4D6D6264595C78545B4557(x UInt8) Engine=Memory;
SELECT '-- Constant enums';
CREATE DATABASE IF NOT EXISTS test_w0ic67gf 
DROP TABLE t_json_10;
select zero from system.zeros_mt limit 10 settings max_block_size = 3, max_threads = 2;
SELECT multiIf(1, ['foo', 'bar'], (col1 % 3) = 0, [col4, 'bar'], ['foo', 'bar']) FROM multi_if_check;
CREATE TABLE `02680_datetime64_monotonic_check` (`t` DateTime64(3), `x` Nullable(Decimal(18, 14))) ENGINE = MergeTree PARTITION BY toYYYYMMDD(t) ORDER BY x SETTINGS allow_nullable_key = 1, index_granularity = 28558, min_bytes_for_wide_part = 712754954, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 102, merge_max_block_size = 23961, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 30191727, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 72360, primary_key_compress_block_size = 33757
SELECT 1 = multiMatchAny(materialize('khljxzxlpcrxpkrfybbfk'), materialize(['k']));
INSERT INTO test_01193_18429.table_6_284 VALUES 
SELECT sleep(1) 
DROP TABLE IF EXISTS alter_table_9
SELECT number, grouping(number, number % 2) + 3 as gr FROM remote('127.0.0.{2,3}', numbers(10)) GROUP BY CUBE(number, number % 2) HAVING grouping(number) != 0 ORDER BY number, gr SETTINGS force_grouping_standard_compatibility=0;
SELECT toDecimal128('-0.7', 2) AS x, toUInt16(x);
SELECT 'Running test stateless/00013_create_table_with_arrays.sql from pid=1714' 
DROP DATABASE IF EXISTS test_22150xjl 
DROP DATABASE IF EXISTS test_0an0yem6 
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 45467, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT '0.286';
DROP TABLE IF EXISTS set_array;
CREATE TABLE test_02908_r2_154 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_154', 'r2') ORDER BY tuple()
DROP TABLE IF EXISTS 01913_db.test_source_table_2;
SELECT ALL * FROM (SELECT 1 UNION ALL SELECT 1);
CREATE DATABASE IF NOT EXISTS test_edfcte4k 
CREATE TABLE test_5F2050756856383E58356C2F6D717059714721357325246B4A6E6D2A282D7B38395F4A2335562A4D(x UInt8) Engine=Memory;
INSERT INTO test_33excl4a.t2 (x, y) VALUES
CREATE TABLE test_01193_18429.table_1_102 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_2_270 VALUES 
CREATE TABLE test_01193_18429.table_7_155 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT CONCAT('Testing the ', 'alias');
EXPLAIN SYNTAX SELECT materialize('ÃÂÃÂÃÂ¸ÃÂ²ÃÂµÃÂ, World') AS s1, materialize('ÃÂÃÂÃÂ¸ÃÂ²ÃÂµÃÂ, World') AS s2 WHERE (s1 LIKE 'hell%') OR (s2 ILIKE '%ÃÂ¿ÃÂÃÂ¸ÃÂ²ÃÂµÃÂ%') OR (s1 ILIKE 'world%') OR s1 == 'ÃÂÃÂÃÂ¸ÃÂ²ÃÂµÃÂ' SETTINGS optimize_or_like_chain = 1;
CREATE TABLE test_303531722D27296B5A6D5D3D24786E6B566E6B4F723C267E6B2C6F3749596E407A337E684D6A426F(x UInt8) Engine=Memory;
SELECT errorCodeToName(toUInt32(-1));
DROP TABLE IF EXISTS map_extractKeyLike_test;
SELECT 'Running test stateless/02012_zookeeper_changed_enum_type_incompatible.sql from pid=1722' 
DROP DATABASE IF EXISTS test_xkw9ool5 
CREATE TABLE test_54622A4323472B5178274C5331737A612B392B255D342D5A3F7D2B5B24226C354E3C573A5B4D4032(x UInt8) Engine=Memory;
DROP TABLE bloom_filter;
select * from defaulted order by payload;
CREATE TABLE `01746_local` ( `n1` Int8, `n2` Int8, `n3` Int8 ) ENGINE = Memory;
SELECT 'Running test stateless/02915_sleep_large_uint.sql from pid=1718' 
alter table many_mutations delete where y = 765 * 2 settings mutations_sync = 0;
SELECT * FROM bloom_filter_nullable_index WHERE str IN (SELECT value FROM nullable_string_value) SETTINGS transform_null_in = 1;
CREATE DATABASE IF NOT EXISTS test_ddwrfdhe 
INSERT INTO test_01193_18429.table_10_699 VALUES 
DROP DATABASE IF EXISTS test_kfip4dhr 
DROP DATABASE IF EXISTS test_0n26ln8v 
SELECT * FROM system.merges LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
CREATE TABLE test_01193_18429.table_4_795 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_53285624447D54485E5E6A227C5D647443452278702B563F3E393F6956672A334451533A5A372560(x UInt8) Engine=Memory;
CREATE TABLE test_3B6F5E465666783D477E3F396B254C6228424466264C603D7646694A5A605B794B3975566B425577(x UInt8) Engine=Memory;
insert into function hdfs('hdfs://localhost:12222/02368_data_9.jsonl') select range(number % 1000) from numbers(100000) settings hdfs_truncate_on_insert=1, output_format_parallel_formatting=1
SELECT 'Running test stateless/02353_partition_prune_nullable_key.sql from pid=1715' 
DROP DATABASE IF EXISTS test_r4jaasxc 
SELECT 1 IN NULL;
SELECT toDecimal64(-12345.6789, 4) AS x, floor(x), floor(x, 1), floor(x, 2), floor(x, 3), floor(x, 4), floor(x, 5);
CREATE INDEX idx_tab2_0 ON tab2 (col0);
SELECT bitmapToArray(subBitmap(bitmapBuild(emptyArrayUInt16()), toUInt32(0), toUInt64(10)));
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (108 < 66 AND 77 > 0 ? 108 : 0)), throwIf(last != (108 < 66 AND 77 > 0 ? least(66 - 1, 108 + 77 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(66) LIMIT 108, 77);
SELECT 'Running test stateless/01550_mutation_subquery.sql from pid=1718' 
CREATE TABLE test_01193_18429.table_7_856 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE INDEX idx_tab2_5 ON tab2 (col0 DESC,col3 DESC);
SELECT uniq(bitNot(number)) FROM dist;
SELECT 'Running test stateless/02033_join_engine_deadlock_long.sh from pid=1715' 
CREATE TABLE test_02908_r1_151 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_151', 'r1') ORDER BY tuple()
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c3)) OR (c6) OR ((NOT c9) AND c1 AND (NOT c0)) OR (c4 AND c9 AND c4 AND c1 AND c9) OR (c1 AND c0) SETTINGS convert_query_to_cnf = 1
INSERT INTO test_01193_18429.table_7_931 VALUES 
INSERT INTO test_mhze7fsb.async_inserts_2156 FORMAT Values
DROP DATABASE IF EXISTS test_yv1b713y 
INSERT INTO test_01193_18429.table_10_277 VALUES 
SELECT rand64([NULL]);
CREATE TABLE test_01193_18429.table_7_555 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_4_568 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT soundex('Jonston');
INSERT INTO test_01193_18429.table_7_924 VALUES 
SELECT arrayShuffle([]);
CREATE TABLE bloom_filter (`id` UInt64, `s` String, INDEX tok_bf (s, lower(s)) TYPE tokenbf_v1(512, 3, 0) GRANULARITY 1) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 8, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 24203, prefer_fetch_merged_part_size_threshold = 2271603625, vertical_merge_algorithm_min_rows_to_activate = 993978, vertical_merge_algorithm_min_columns_to_activate = 74, min_merge_bytes_to_use_direct_io = 8067773945, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 76685, primary_key_compress_block_size = 21514
CREATE TABLE time_table (`timecol` DateTime, `value` Int32) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 43359, min_bytes_for_wide_part = 278520463, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 19104, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 2216983655, index_granularity_bytes = 28240924, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 88281, primary_key_compress_block_size = 44149
SELECT n, n.null, a1, a1.size0, a2, a2.size0, a2.size1, a2.size2, a3, a3.size0, a3.null, t, t.s, t.v, m, m.keys, m.values FROM subcolumns
CREATE DATABASE IF NOT EXISTS test_hplqu8bz 
INSERT INTO test_01193_18429.table_2_386 VALUES 
CREATE TABLE test_4C5E204D50762631314D4D5E24513252253A2B2E39776B2532633265614A21504620352A7077705D(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_tz2pe8vt 
SELECT 'Running test stateless/01909_mbtolou.sql from pid=1715' 
DROP TABLE IF EXISTS logs;
CREATE TABLE test_4058707B5761285333327B37635B376D676A2748526121706635505329224835764B5D72336A2A5A(x UInt8) Engine=Memory;
select array, struct.d1, struct.a1, struct.a2, struct.a3, struct.a4, struct.a5, struct.a6, joined from aliases_test array join struct.a5 as joined;
INSERT INTO test_01193_18429.table_7_755 VALUES 
SELECT 7
SELECT * FROM test_02240_storage_policy FORMAT Null
CREATE TABLE parquet_types2 (int8 Int8, uint8 UInt8, int16 Int16, uint16 UInt16, int32 Int32, uint32 UInt32, int64 Int64, uint64 UInt64, float32 Float32, float64 Float64, string String, fixedstring FixedString(15), date Date, datetime DateTime, datetime64 DateTime64(9)) ENGINE = Memory
select 1, * from rdb_test_uofsla12.rmt order by n
SELECT toDate('2017-01-01') - INTERVAL 12 MONTH AS x;
alter table many_mutations delete where y = 355 * 2 settings mutations_sync = 0;
DESCRIBE TABLE s3Cluster('test_cluster_two_shards_localhost', 'http://localhost:11111/test/{a,b,c}.tsv', 'test', '[HIDDEN]')
CREATE TABLE test_01193_18429.table_2_637 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP DATABASE IF EXISTS test_mppty465 
SELECT 4, 'Hello',bin(bitShiftRight('Hello', 4));
DROP TABLE IF EXISTS table_view;
SELECT sum(e) from tab_02473 PREWHERE b > 0 AND b <= 70 WHERE a == 0;
SELECT 'Running test stateless/00070_insert_fewer_columns_http.sh from pid=1718' 
system stop merges t2;
select v, variantElement(v, 'UUID') from format(CSV, 'v Variant(String, UUID)', '\\N\n"string"\n"c8619cca-0caa-445e-ae76-1d4f6e0b3927"\nc8619cca-0caa-445e-ae76-1d4f6e0b3927AAA') format CSV;
SHOW CREATE TABLE test_01457.tf_remote;
SELECT 'Running test stateless/02875_merge_engine_set_index.sh from pid=1713' 
CREATE TABLE test_5251536D5A4638756D2F72755F4C76436C74492A573942313C4820674E4E28726068466163607722(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS index_memory;
DESC TABLE t_json_empty_parts SETTINGS describe_extend_object_types = 1;
SELECT x FROM t FULL JOIN r USING (x) ORDER BY * SETTINGS join_algorithm = 'full_sorting_merge';
CREATE TABLE test_705A497950414B60583F575662443759453A3C62466F3824467D784043663E52382A482960495049(x UInt8) Engine=Memory;
INSERT INTO xMM SELECT toDateTime('2020-10-15 00:00:00', 'Asia/Istanbul') + number*60, 1, number FROM numbers(5000);
CREATE TABLE test_01193_18429.table_8_744 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_8_214 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT intDivOrZero(toDecimal64(4.4, 2), 2.2);
CREATE TABLE test_01193_18429.table_7_320 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_02908_r1_289 SELECT rand64() FROM numbers(5);
SELECT reinterpret(toFloat64(0.2), 'UInt64'), reinterpretAsUInt64(toFloat64(0.2));
CREATE TABLE test_5E75575E505E4F69564F7D59406F6C79657E2F49447741794331474A386647464C6B2E27282E493A(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00572_aggregation_by_empty_set.sql from pid=1722' 
INSERT INTO test_01193_18429.table_3_946 VALUES 
drop table projection_test;
SELECT toLastDayOfWeek(toDate(16433), 0);
CREATE TABLE test_01193_18429.table_8_470 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_6_363 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT cityHash64(groupArray(x)) FROM enum_pk WHERE x IN ('0', '1');
CREATE TABLE test_3A6E2B467A5D5E5C524E5B3E356F43376969514F366849577137226F4B57416D672B58582C6D3D65(x UInt8) Engine=Memory;
SELECT '--show error: index type should be integer';
CREATE DATABASE IF NOT EXISTS test_jnh9s57y 
SELECT runningAccumulate(string_state) FROM ( SELECT argMaxState(repeat('a', 48), 1) AS string_state )
SELECT age('hour', toDateTime64('2015-01-01 20:30:36.300', 3, 'UTC'), toDateTime64('2015-01-01 23:30:36.200', 3, 'UTC'));
SELECT * FROM table_with_defaults_on_aliases WHERE col1 = 2;
DROP DATABASE IF EXISTS test_f2icb0y0 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (69 < 36 AND 17 > 0 ? 69 : 0)), throwIf(last != (69 < 36 AND 17 > 0 ? least(36 - 1, 69 + 17 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(36) LIMIT 69, 17);
CREATE DATABASE IF NOT EXISTS test_a5hd3u7t 
select RIGHT('bar', 1);
DROP DATABASE IF EXISTS test_ns6czt7k 
set distributed_aggregation_memory_efficient = 1, group_by_two_level_threshold = 1, group_by_two_level_threshold_bytes=1;
DROP DATABASE IF EXISTS test_jdtkibcd 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), toStartOfMinute(N, 'Asia/Istanbul') as r FORMAT CSV;
SELECT throwIf((SELECT (count(), sum(n)) FROM merge(currentDatabase(), '') WHERE type=3) != (17 + 1, 153 + 18)) FORMAT Null
SELECT a, b FROM (SELECT sum(x) AS a, avg(x) AS b FROM (SELECT number AS x FROM numbers(10)));
CREATE TABLE test_01193_18429.table_2_720 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT varSamp(0.1) FROM numbers(1000000);
insert into tp (p, k, v1, v2) values 
SELECT count() FROM system.mutations WHERE database = currentDatabase() AND table = 't_limit_mutations' AND NOT is_done;
DROP DATABASE IF EXISTS test_01748;
show databases format Null 
CREATE TABLE test_5658292129786C64785C717056673C7233544F704F42232D2D2B552448793657273F472C5D41445D(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00515_shard_desc_table_functions_and_subqueries.sql from pid=1718' 
SELECT substring(materialize('abc'), number - 5) FROM system.numbers LIMIT 10;
SELECT 'Africa/El_Aaiun', rand() as r, toHour(toDateTime(r, 'Africa/El_Aaiun') AS t) AS h, t, toTypeName(t) FROM numbers(1000000) WHERE h < 0 OR h > 23 ORDER BY h LIMIT 1 BY h;
CREATE TABLE t_regex (`id` UInt64) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 32152, min_bytes_for_wide_part = 692214928, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 94, merge_max_block_size = 18030, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 84, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 15402308, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 62695, primary_key_compress_block_size = 94072
insert into t_temp select rand(), now() from system.numbers limit 1_000_000;
CREATE TABLE pr_1 (`a` UInt32) ENGINE = MergeTree PARTITION BY a % 10 ORDER BY a SETTINGS index_granularity = 1168, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.7329016327857971, replace_long_file_name_to_hash = true, max_file_name_length = 111, merge_max_block_size = 20933, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 5639435065, index_granularity_bytes = 21840499, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 55369, primary_key_compress_block_size = 19917 AS SELECT (10 * intDiv(number, 10)) + 1 FROM numbers(1000000)
SELECT CAST('hello' AS FixedString(5)) LIKE 'hell_';
SELECT arrayFirstIndex(x -> materialize(1), emptyArrayString());
INSERT INTO test_01193_18429.table_9_162 VALUES 
SELECT count() FROM t_cnf_fuzz WHERE (c5) OR (c3) OR (c6 AND (NOT c3) AND c8) OR ((NOT c6) AND (NOT c6)) OR (c6 AND c0) SETTINGS convert_query_to_cnf = 1
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (92 < 36 AND 17 > 0 ? 92 : 0)), throwIf(last != (92 < 36 AND 17 > 0 ? least(36 - 1, 92 + 17 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(36) LIMIT 92, 17);
drop table if exists t_01568;
CREATE TABLE t_json_11 (`obj` JSON) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 40964, min_bytes_for_wide_part = 624740333, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 54, merge_max_block_size = 19664, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 165894, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 19643231, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 87618, primary_key_compress_block_size = 75392
SELECT (SELECT toDate('2015-01-02')) = toDate('2015-01-02'), 'Hello' = (SELECT 'Hello');
CREATE TABLE test_01193_18429.table_9_41 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_9_781 VALUES 
SELECT value FROM system.zookeeper WHERE path = '/clickhouse/tables/01593_concurrent_alter_mutations_kill_many_replicas_long_test_bc61bq8k/s1/replicas/r14/' and name = 'metadata_version'
CREATE DATABASE IF NOT EXISTS test_zjv7mf84 
INSERT INTO table_for_dict VALUES 
SELECT multiIf((col1 % 2) = 0, 'foo', (col1 % 3) = 0, toFixedString('bar', 16), col4) FROM multi_if_check;
SELECT bitAnd(number, toUInt64(pow(2, 20) - 1)) as k, argMaxIf(k, number % 2 = 0 ? number : Null, number > 42), uniq(number) AS u FROM numbers(1000000) GROUP BY k format Null;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 25713, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT sumIf(DISTINCT number % 10, number % 5 = 2) FROM numbers(10000);
CREATE DATABASE IF NOT EXISTS test_aqqk5ne3 
INSERT INTO test_01193_18429.table_6_243 VALUES 
INSERT INTO test_01193_18429.table_9_896 VALUES 
INSERT INTO test_01193_18429.table_4_29 VALUES 
CREATE TABLE test_02908_r2_203 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_203', 'r2') ORDER BY tuple()
CREATE TABLE test_01193_18429.table_6_507 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT groupArray(query_duration_ms) FROM system.query_log WHERE current_database = currentDatabase() AND query_id LIKE 'test_01193_18429-%' AND type=2
INSERT INTO test_01193_18429.table_9_18 VALUES 
SELECT value1 FROM table_with_compact_parts WHERE key = 1;
SELECT throwIf((SELECT count() FROM src WHERE n=42 AND m=3) != 1) FORMAT Null;
CREATE TABLE test_02908_r2_132 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_132', 'r2') ORDER BY tuple()
INSERT INTO test_01193_18429.table_8_907 VALUES 
SELECT key FROM system.filesystem_cache_log WHERE query_id = '116097578' ORDER BY size DESC LIMIT 1;
SELECT dictGetChildren('hierachical_flat_dictionary', number) FROM system.numbers LIMIT 6;
CREATE TABLE test_20527D61455F40742C71792E4C6729393D385D7D487C245A276050266F4C6A572A4C4E367E504977(x UInt8) Engine=Memory;
SELECT count() FROM composite_partition_key WHERE a = 301 AND b = 21 AND c = 3 FORMAT XML SETTINGS optimize_trivial_count_query = 0
CREATE TABLE test_5752453C7E21233F202D3F61662C71455D7268385961542D317A5E4379666B3952492C3A292E2C79(x UInt8) Engine=Memory;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), N > toUInt8(1) as r FORMAT CSV;
SELECT dictGetChildren('hierachical_hashed_array_dictionary', number) FROM system.numbers LIMIT 6;
SELECT order_0, _part_offset, _part FROM t_1 WHERE order_0 <= 1 OR order_0 >= 999998 ORDER BY order_0 LIMIT 3;
select deltaSumMerge(rows) as delta_sum from ( select * from ( select deltaSumState(arrayJoin([4, 5])) as rows union all select deltaSumState(arrayJoin([0, 1])) as rows ) order by rows ) order by delta_sum;
SELECT d3, f1, d3 + f1 FROM t ORDER BY f1;
CREATE TABLE test_01193_18429.table_6_416 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select 'Vertical';
SELECT 1 CSE_Multi, 1 allow_experimental_analyzer, ProfileEvents['InsertQuery'] InsertQuery, ProfileEvents['SelectQuery'] SelectQuery, ProfileEvents['InsertQueriesWithSubqueries'] InsertQueriesWithSubqueries, ProfileEvents['SelectQueriesWithSubqueries'] SelectQueriesWithSubqueries, ProfileEvents['QueriesWithSubqueries'] QueriesWithSubqueries FROM system.query_log WHERE current_database = currentDatabase() AND type = 'QueryFinish' AND query_id = 'djtidhoein' FORMAT TSVWithNames;
DETACH TABLE nested;
CREATE TABLE test_01193_18429.table_5_613 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_4_777 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE INDEX idx_tab2_2 ON tab2 (col4);
INSERT INTO test_01193_18429.table_1_672 VALUES 
INSERT INTO test_01193_18429.table_1_198 VALUES 
desc file('test_02149_schema_inference_test_2lktp9cn.data', 'Regexp') settings format_regexp='^Line: value_1=(.+?), value_2=(.+?), value_3=(.+?)', format_regexp_escaping_rule='CSV'
SELECT CASE WHEN 1 THEN [col2, 'bar'] WHEN 1 THEN ['foo', col5] ELSE [col6, col7] END FROM multi_if_check;
CREATE TABLE test_01193_18429.table_6_837 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE INDEX idx_tab4_5 ON tab4 (col3 DESC,col4 DESC);
CREATE TABLE test_01193_18429.table_10_533 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_8_218 VALUES 
select '---------Dense';
select count(ignore(*)) from data_02051 settings min_bytes_to_use_direct_io=0, local_filesystem_read_method='mmap', local_filesystem_read_prefetch=0, read_priority=0, max_read_buffer_size=65505 ;
SELECT h3ToCenterChild(h3_index,res) FROM h3_indexes ORDER BY id;
DROP DICTIONARY dict_in_01023.dict;
CREATE DATABASE IF NOT EXISTS test_euemax95 
CREATE TABLE test_7850456660494222495E6F4D737E2931532076354F692B5D782E2F202B213764257855596E606C2B(x UInt8) Engine=Memory;
select v, variantElement(v, 'Date32') from format(Values, 'v Variant(String, Date32, DateTime64)', '(NULL), (''string''), (''2020-01-d1''), (''1900-01-01''), (''2020-01-01 00:00:00.999'')') format Values;
SELECT xxHash32('\x03\0\0\0') = toUInt32(2158931063);
SELECT sum(e) from tab_02473 PREWHERE b > 10 AND b <= 70 AND c > 0 AND c <= 72 AND d > 32 AND d <= 62 WHERE a == 0;
EXPLAIN SYNTAX SELECT (number % 5) * (number % 5) AS k FROM numbers(10000000) GROUP BY number % 5, ((number % 5) * (number % 5)) HAVING ((number % 5) * (number % 5)) < 5 ORDER BY k;
CREATE TABLE test_01193_18429.table_6_982 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT age('month', toDateTime64('2015-01-02 20:30:36.200', 3, 'UTC'), toDateTime64('2016-05-02 19:30:36.200', 3, 'UTC'));
SELECT 02099_lambda_function([1,2,3]);
CREATE TABLE test_724A5E41526E486129755A746C3C6F786C7058215D5D73565624684621362E6E295C7D3345432D3F(x UInt8) Engine=Memory;
SELECT `x`, `y` FROM `test_33excl4a`.`t1` ORDER BY `x` ASC
SELECT shardNum() AS `_shard_num`, `dummy` FROM `system`.`one`
SELECT YYYYMMDDToDate32(20230228);
DROP DATABASE IF EXISTS test_m2ys3cwt 
SELECT * FROM system.mysql_binlogs LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
INSERT INTO test_1tccssra.async_inserts FORMAT JSONEachRow
select 1 = position('abcdefgh', materialize('ab')) from system.numbers limit 10;
alter table many_mutations delete where y = 188 * 2 settings mutations_sync = 0;
CREATE INDEX idx_tab2_2 ON tab2 (col0 DESC,col1);
SELECT CASE WHEN 1 THEN col2 WHEN 1 THEN toFixedString('bar', 16) ELSE toFixedString('baz', 16) END FROM multi_if_check;
INSERT INTO test_01193_18429.table_8_848 VALUES 
select 'dictGetOrDefault', 'complex_cache_ints' as dict_name, tuple(toUInt64(0)) as k, dictGetOrDefault(dict_name, 'i8', k, toInt8(42)), dictGetOrDefault(dict_name, 'i16', k, toInt16(42)), dictGetOrDefault(dict_name, 'i32', k, toInt32(42)), dictGetOrDefault(dict_name, 'i64', k, toInt64(42)), dictGetOrDefault(dict_name, 'u8', k, toUInt8(42)), dictGetOrDefault(dict_name, 'u16', k, toUInt16(42)), dictGetOrDefault(dict_name, 'u32', k, toUInt32(42)), dictGetOrDefault(dict_name, 'u64', k, toUInt64(42)), dictGetOrDefault(dict_name, ('i8', 'i16', 'i32'), k, (toInt8(42), toInt16(42), toInt32(42)));
/* Check Totals */ SELECT name, count() AS c FROM test_table GROUP BY name WITH TOTALS ORDER BY name FORMAT JSONCompactEachRow;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt8(1) WHEN (number % 3) = 0 THEN toUInt16(2) ELSE toUInt32(3) END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_6_575 VALUES 
CREATE DATABASE IF NOT EXISTS test_csib3uhl 
CREATE TABLE test_01193_18429.table_10_187 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT t0.c1 FROM t0 WHERE NOT (t0.c1 OR (t0.c0 AND inf));
SELECT a, b, sum(s), count() from cube GROUP BY a, b WITH CUBE WITH TOTALS ORDER BY a, b;
SYSTEM START FETCHES sqllt.table
 explain actions = 1 select x, y from ( select number % 2 as x, number % 3 as y from numbers(6) order by y desc ) where x != 0 and y != 0 settings enable_optimize_predicate_expression = 0
DROP DATABASE IF EXISTS test_6u75j5jd 
INSERT INTO test_01193_18429.table_8_62 VALUES 
INSERT INTO test_01193_18429.table_7_930 VALUES 
CREATE TABLE test_01193_18429.table_6_821 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT '!#$%&(*+,-./:<=>?@[^`{|}~' AS a FORMAT Markdown;
CREATE TABLE test_01193_18429.table_8_25 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO 02703_keeper_map_concurrent_2 VALUES 
INSERT INTO test_01193_18429.table_5_531 VALUES 
CREATE TABLE test_475E385535432F4E46307A466739457679643F46255023793E424D2B5133216B582233427041604E(x UInt8) Engine=Memory;
SELECT test.id, test.value FROM test_table AS test;
select count(), sum(n) from merge(currentDatabase(), 'src_table') where _table in set;
select * from generateRandom(10000000, 2, 2) limit 1;
INSERT INTO pk (x, y, z) VALUES 
INSERT INTO r1 SELECT 2
DROP TABLE ttl_repl2
/* corr */ SELECT corr(x_value, y_value) FROM (SELECT x_value, y_value FROM series LIMIT 0);
DESCRIBE TABLE t_desc_subcolumns FORMAT PrettyCompactNoEscapes;
SELECT '99' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ffff:ffff:fe00:0')))
CREATE DATABASE IF NOT EXISTS test_ccai56mn 
select formatRowNoNewline('TSKV', number, good) from (select number, 'good' as good from numbers(3));
CREATE INDEX idx_tab4_0 ON tab4 (col4,col0,col1);
WITH CAST('text', 'LowCardinality(String)') AS input, 'aes-256-ofb' AS mode SELECT toTypeName(input), hex(aes_encrypt_mysql(mode, '[HIDDEN]')) FROM encryption_test LIMIT 1
SELECT c + c, c - c, c * c, c / c, intDiv(c, c), intDivOrZero(c, c) FROM decimal WHERE c = 42;
SELECT multiIf((col1 % 2) = 0, [col2, 'bar'], 1, [col4, col5], ['foo', col7]) FROM multi_if_check;
CREATE TABLE test_332367366C4B3E4956462F7E41562F35626E2D315E6C4B4A423244573922216D593F3D5D31224E4D(x UInt8) Engine=Memory;
INSERT INTO t_move_to_prewhere SELECT 1, number % 2 = 0, number % 3 = 0, number % 5 = 0, repeat('a', 1000) FROM numbers(1000);
CREATE TABLE test_01193_18429.table_7_843 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT t1.id AS t1_id, t1.value, t2.id AS t2_id, t2.value, t3.id AS t3_id, t3.value FROM test_table_join_1 AS t1 INNER JOIN test_table_join_2 AS t2 ON t1_id = t2_id LEFT JOIN test_table_join_3 AS t3 ON t2_id = t3_id;
DROP TABLE IF EXISTS t_ab1;
DROP DATABASE IF EXISTS test_zm8ng6vp 
DROP DATABASE IF EXISTS test_c82cepiu 
CREATE TABLE test_775C4C4D3C4D432E796D7A5A7C37514139463C6040675A5930227D74367A38726A36256C5B4A6847(x UInt8) Engine=Memory;
CREATE INDEX idx_tab3_2 ON tab3 (col3 DESC,col1,col0 DESC);
CREATE TABLE test_787428273A51443059317A382E66327326626E6F27535E233321784056385637492C3570666A632E(x UInt8) Engine=Memory;
SELECT JSONExtract('[3,5,7]', 'Tuple(Int, Int)');
INSERT INTO test_01193_18429.table_8_423 VALUES 
SELECT 'Running test stateless/02495_parser_string_binary_literal.sh from pid=1722' 
SELECT 'Running test stateless/01768_array_product.sql from pid=1722' 
SELECT `id`, `u`, `s` FROM `test_7vkn0jtc`.`t_sparse_full` ORDER BY `id` ASC, `u` ASC, `s` ASC LIMIT 5
CREATE TABLE test_7D354F242A615B5B436B624B67663F7E2F77783F492167467C4F7E204E482E3E5529207855557669(x UInt8) Engine=Memory;
CREATE TABLE preferred_block_size_bytes (p Date, s String) ENGINE = MergeTree PARTITION BY p ORDER BY p SETTINGS index_granularity=1, index_granularity_bytes=0, min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1
select count(), sum(number) from file('02841.parquet') where indexHint(sometimes_null is NULL);
DROP DATABASE IF EXISTS test_htvfvgzx 
SELECT 'Running test stateless/01321_monotonous_functions_in_order_by_bug.sql from pid=1715' 
CREATE TABLE test_6ztqwvhd.table_with_hierarchy (`RegionID` UInt64, `ParentRegionID` UInt64, `RegionName` String) ENGINE = MergeTree ORDER BY RegionID SETTINGS index_granularity = 25955, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 5263, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 6565404, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 32133, primary_key_compress_block_size = 57993
SELECT replaceRegexpAll(',,1,,', '^[,]*|[,]*$', '');
CREATE TABLE test_726352634E506F4070473D6A4B75712973402E245A2A38354C3A686647662F73522C28225F314966(x UInt8) Engine=Memory;
SELECT 6, * FROM merge_tree ORDER BY d;
CREATE TABLE test_693E7B657E5D415F61774555222E2B673B613653285527724F4976202A3A76253623266B71757245(x UInt8) Engine=Memory;
SELECT 255, 2147483647, 255 = 2147483647, 255 != 2147483647, 255 < 2147483647, 255 <= 2147483647, 255 > 2147483647, 255 >= 2147483647, 2147483647 = 255, 2147483647 != 255, 2147483647 < 255, 2147483647 <= 255, 2147483647 > 255, 2147483647 >= 255 , toUInt8(255) = toUInt32(2147483647), toUInt8(255) != toUInt32(2147483647), toUInt8(255) < toUInt32(2147483647), toUInt8(255) <= toUInt32(2147483647), toUInt8(255) > toUInt32(2147483647), toUInt8(255) >= toUInt32(2147483647), toUInt32(2147483647) = toUInt8(255), toUInt32(2147483647) != toUInt8(255), toUInt32(2147483647) < toUInt8(255), toUInt32(2147483647) <= toUInt8(255), toUInt32(2147483647) > toUInt8(255), toUInt32(2147483647) >= toUInt8(255) , toUInt8(255) = toInt32(2147483647), toUInt8(255) != toInt32(2147483647), toUInt8(255) < toInt32(2147483647), toUInt8(255) <= toInt32(2147483647), toUInt8(255) > toInt32(2147483647), toUInt8(255) >= toInt32(2147483647), toInt32(2147483647) = toUInt8(255), toInt32(2147483647) != toUInt8(255), toInt32(2147483647) < toUInt8(255), toInt32(2147483647) <= toUInt8(255), toInt32(2147483647) > toUInt8(255), toInt32(2147483647) >= toUInt8(255) , toUInt8(255) = toUInt64(2147483647), toUInt8(255) != toUInt64(2147483647), toUInt8(255) < toUInt64(2147483647), toUInt8(255) <= toUInt64(2147483647), toUInt8(255) > toUInt64(2147483647), toUInt8(255) >= toUInt64(2147483647), toUInt64(2147483647) = toUInt8(255), toUInt64(2147483647) != toUInt8(255), toUInt64(2147483647) < toUInt8(255), toUInt64(2147483647) <= toUInt8(255), toUInt64(2147483647) > toUInt8(255), toUInt64(2147483647) >= toUInt8(255) , toUInt8(255) = toInt64(2147483647), toUInt8(255) != toInt64(2147483647), toUInt8(255) < toInt64(2147483647), toUInt8(255) <= toInt64(2147483647), toUInt8(255) > toInt64(2147483647), toUInt8(255) >= toInt64(2147483647), toInt64(2147483647) = toUInt8(255), toInt64(2147483647) != toUInt8(255), toInt64(2147483647) < toUInt8(255), toInt64(2147483647) <= toUInt8(255), toInt64(2147483647) > toUInt8(255), toInt64(2147483647) >= toUInt8(255) , toUInt16(255) = toUInt32(2147483647), toUInt16(255) != toUInt32(2147483647), toUInt16(255) < toUInt32(2147483647), toUInt16(255) <= toUInt32(2147483647), toUInt16(255) > toUInt32(2147483647), toUInt16(255) >= toUInt32(2147483647), toUInt32(2147483647) = toUInt16(255), toUInt32(2147483647) != toUInt16(255), toUInt32(2147483647) < toUInt16(255), toUInt32(2147483647) <= toUInt16(255), toUInt32(2147483647) > toUInt16(255), toUInt32(2147483647) >= toUInt16(255) , toUInt16(255) = toInt32(2147483647), toUInt16(255) != toInt32(2147483647), toUInt16(255) < toInt32(2147483647), toUInt16(255) <= toInt32(2147483647), toUInt16(255) > toInt32(2147483647), toUInt16(255) >= toInt32(2147483647), toInt32(2147483647) = toUInt16(255), toInt32(2147483647) != toUInt16(255), toInt32(2147483647) < toUInt16(255), toInt32(2147483647) <= toUInt16(255), toInt32(2147483647) > toUInt16(255), toInt32(2147483647) >= toUInt16(255) , toUInt16(255) = toUInt64(2147483647), toUInt16(255) != toUInt64(2147483647), toUInt16(255) < toUInt64(2147483647), toUInt16(255) <= toUInt64(2147483647), toUInt16(255) > toUInt64(2147483647), toUInt16(255) >= toUInt64(2147483647), toUInt64(2147483647) = toUInt16(255), toUInt64(2147483647) != toUInt16(255), toUInt64(2147483647) < toUInt16(255), toUInt64(2147483647) <= toUInt16(255), toUInt64(2147483647) > toUInt16(255), toUInt64(2147483647) >= toUInt16(255) , toUInt16(255) = toInt64(2147483647), toUInt16(255) != toInt64(2147483647), toUInt16(255) < toInt64(2147483647), toUInt16(255) <= toInt64(2147483647), toUInt16(255) > toInt64(2147483647), toUInt16(255) >= toInt64(2147483647), toInt64(2147483647) = toUInt16(255), toInt64(2147483647) != toUInt16(255), toInt64(2147483647) < toUInt16(255), toInt64(2147483647) <= toUInt16(255), toInt64(2147483647) > toUInt16(255), toInt64(2147483647) >= toUInt16(255) , toInt16(255) = toUInt32(2147483647), toInt16(255) != toUInt32(2147483647), toInt16(255) < toUInt32(2147483647), toInt16(255) <= toUInt32(2147483647), toInt16(255) > toUInt32(2147483647), toInt16(255) >= toUInt32(2147483647), toUInt32(2147483647) = toInt16(255), toUInt32(2147483647) != toInt16(255), toUInt32(2147483647) < toInt16(255), toUInt32(2147483647) <= toInt16(255), toUInt32(2147483647) > toInt16(255), toUInt32(2147483647) >= toInt16(255) , toInt16(255) = toInt32(2147483647), toInt16(255) != toInt32(2147483647), toInt16(255) < toInt32(2147483647), toInt16(255) <= toInt32(2147483647), toInt16(255) > toInt32(2147483647), toInt16(255) >= toInt32(2147483647), toInt32(2147483647) = toInt16(255), toInt32(2147483647) != toInt16(255), toInt32(2147483647) < toInt16(255), toInt32(2147483647) <= toInt16(255), toInt32(2147483647) > toInt16(255), toInt32(2147483647) >= toInt16(255) , toInt16(255) = toUInt64(2147483647), toInt16(255) != toUInt64(2147483647), toInt16(255) < toUInt64(2147483647), toInt16(255) <= toUInt64(2147483647), toInt16(255) > toUInt64(2147483647), toInt16(255) >= toUInt64(2147483647), toUInt64(2147483647) = toInt16(255), toUInt64(2147483647) != toInt16(255), toUInt64(2147483647) < toInt16(255), toUInt64(2147483647) <= toInt16(255), toUInt64(2147483647) > toInt16(255), toUInt64(2147483647) >= toInt16(255) , toInt16(255) = toInt64(2147483647), toInt16(255) != toInt64(2147483647), toInt16(255) < toInt64(2147483647), toInt16(255) <= toInt64(2147483647), toInt16(255) > toInt64(2147483647), toInt16(255) >= toInt64(2147483647), toInt64(2147483647) = toInt16(255), toInt64(2147483647) != toInt16(255), toInt64(2147483647) < toInt16(255), toInt64(2147483647) <= toInt16(255), toInt64(2147483647) > toInt16(255), toInt64(2147483647) >= toInt16(255) , toUInt32(255) = toUInt32(2147483647), toUInt32(255) != toUInt32(2147483647), toUInt32(255) < toUInt32(2147483647), toUInt32(255) <= toUInt32(2147483647), toUInt32(255) > toUInt32(2147483647), toUInt32(255) >= toUInt32(2147483647), toUInt32(2147483647) = toUInt32(255), toUInt32(2147483647) != toUInt32(255), toUInt32(2147483647) < toUInt32(255), toUInt32(2147483647) <= toUInt32(255), toUInt32(2147483647) > toUInt32(255), toUInt32(2147483647) >= toUInt32(255) , toUInt32(255) = toInt32(2147483647), toUInt32(255) != toInt32(2147483647), toUInt32(255) < toInt32(2147483647), toUInt32(255) <= toInt32(2147483647), toUInt32(255) > toInt32(2147483647), toUInt32(255) >= toInt32(2147483647), toInt32(2147483647) = toUInt32(255), toInt32(2147483647) != toUInt32(255), toInt32(2147483647) < toUInt32(255), toInt32(2147483647) <= toUInt32(255), toInt32(2147483647) > toUInt32(255), toInt32(2147483647) >= toUInt32(255) , toUInt32(255) = toUInt64(2147483647), toUInt32(255) != toUInt64(2147483647), toUInt32(255) < toUInt64(2147483647), toUInt32(255) <= toUInt64(2147483647), toUInt32(255) > toUInt64(2147483647), toUInt32(255) >= toUInt64(2147483647), toUInt64(2147483647) = toUInt32(255), toUInt64(2147483647) != toUInt32(255), toUInt64(2147483647) < toUInt32(255), toUInt64(2147483647) <= toUInt32(255), toUInt64(2147483647) > toUInt32(255), toUInt64(2147483647) >= toUInt32(255) , toUInt32(255) = toInt64(2147483647), toUInt32(255) != toInt64(2147483647), toUInt32(255) < toInt64(2147483647), toUInt32(255) <= toInt64(2147483647), toUInt32(255) > toInt64(2147483647), toUInt32(255) >= toInt64(2147483647), toInt64(2147483647) = toUInt32(255), toInt64(2147483647) != toUInt32(255), toInt64(2147483647) < toUInt32(255), toInt64(2147483647) <= toUInt32(255), toInt64(2147483647) > toUInt32(255), toInt64(2147483647) >= toUInt32(255) , toInt32(255) = toUInt32(2147483647), toInt32(255) != toUInt32(2147483647), toInt32(255) < toUInt32(2147483647), toInt32(255) <= toUInt32(2147483647), toInt32(255) > toUInt32(2147483647), toInt32(255) >= toUInt32(2147483647), toUInt32(2147483647) = toInt32(255), toUInt32(2147483647) != toInt32(255), toUInt32(2147483647) < toInt32(255), toUInt32(2147483647) <= toInt32(255), toUInt32(2147483647) > toInt32(255), toUInt32(2147483647) >= toInt32(255) , toInt32(255) = toInt32(2147483647), toInt32(255) != toInt32(2147483647), toInt32(255) < toInt32(2147483647), toInt32(255) <= toInt32(2147483647), toInt32(255) > toInt32(2147483647), toInt32(255) >= toInt32(2147483647), toInt32(2147483647) = toInt32(255), toInt32(2147483647) != toInt32(255), toInt32(2147483647) < toInt32(255), toInt32(2147483647) <= toInt32(255), toInt32(2147483647) > toInt32(255), toInt32(2147483647) >= toInt32(255) , toInt32(255) = toUInt64(2147483647), toInt32(255) != toUInt64(2147483647), toInt32(255) < toUInt64(2147483647), toInt32(255) <= toUInt64(2147483647), toInt32(255) > toUInt64(2147483647), toInt32(255) >= toUInt64(2147483647), toUInt64(2147483647) = toInt32(255), toUInt64(2147483647) != toInt32(255), toUInt64(2147483647) < toInt32(255), toUInt64(2147483647) <= toInt32(255), toUInt64(2147483647) > toInt32(255), toUInt64(2147483647) >= toInt32(255) , toInt32(255) = toInt64(2147483647), toInt32(255) != toInt64(2147483647), toInt32(255) < toInt64(2147483647), toInt32(255) <= toInt64(2147483647), toInt32(255) > toInt64(2147483647), toInt32(255) >= toInt64(2147483647), toInt64(2147483647) = toInt32(255), toInt64(2147483647) != toInt32(255), toInt64(2147483647) < toInt32(255), toInt64(2147483647) <= toInt32(255), toInt64(2147483647) > toInt32(255), toInt64(2147483647) >= toInt32(255) , toUInt64(255) = toUInt32(2147483647), toUInt64(255) != toUInt32(2147483647), toUInt64(255) < toUInt32(2147483647), toUInt64(255) <= toUInt32(2147483647), toUInt64(255) > toUInt32(2147483647), toUInt64(255) >= toUInt32(2147483647), toUInt32(2147483647) = toUInt64(255), toUInt32(2147483647) != toUInt64(255), toUInt32(2147483647) < toUInt64(255), toUInt32(2147483647) <= toUInt64(255), toUInt32(2147483647) > toUInt64(255), toUInt32(2147483647) >= toUInt64(255) , toUInt64(255) = toInt32(2147483647), toUInt64(255) != toInt32(2147483647), toUInt64(255) < toInt32(2147483647), toUInt64(255) <= toInt32(2147483647), toUInt64(255) > toInt32(2147483647), toUInt64(255) >= toInt32(2147483647), toInt32(2147483647) = toUInt64(255), toInt32(2147483647) != toUInt64(255), toInt32(2147483647) < toUInt64(255), toInt32(2147483647) <= toUInt64(255), toInt32(2147483647) > toUInt64(255), toInt32(2147483647) >= toUInt64(255) , toUInt64(255) = toUInt64(2147483647), toUInt64(255) != toUInt64(2147483647), toUInt64(255) < toUInt64(2147483647), toUInt64(255) <= toUInt64(2147483647), toUInt64(255) > toUInt64(2147483647), toUInt64(255) >= toUInt64(2147483647), toUInt64(2147483647) = toUInt64(255), toUInt64(2147483647) != toUInt64(255), toUInt64(2147483647) < toUInt64(255), toUInt64(2147483647) <= toUInt64(255), toUInt64(2147483647) > toUInt64(255), toUInt64(2147483647) >= toUInt64(255) , toUInt64(255) = toInt64(2147483647), toUInt64(255) != toInt64(2147483647), toUInt64(255) < toInt64(2147483647), toUInt64(255) <= toInt64(2147483647), toUInt64(255) > toInt64(2147483647), toUInt64(255) >= toInt64(2147483647), toInt64(2147483647) = toUInt64(255), toInt64(2147483647) != toUInt64(255), toInt64(2147483647) < toUInt64(255), toInt64(2147483647) <= toUInt64(255), toInt64(2147483647) > toUInt64(255), toInt64(2147483647) >= toUInt64(255) , toInt64(255) = toUInt32(2147483647), toInt64(255) != toUInt32(2147483647), toInt64(255) < toUInt32(2147483647), toInt64(255) <= toUInt32(2147483647), toInt64(255) > toUInt32(2147483647), toInt64(255) >= toUInt32(2147483647), toUInt32(2147483647) = toInt64(255), toUInt32(2147483647) != toInt64(255), toUInt32(2147483647) < toInt64(255), toUInt32(2147483647) <= toInt64(255), toUInt32(2147483647) > toInt64(255), toUInt32(2147483647) >= toInt64(255) , toInt64(255) = toInt32(2147483647), toInt64(255) != toInt32(2147483647), toInt64(255) < toInt32(2147483647), toInt64(255) <= toInt32(2147483647), toInt64(255) > toInt32(2147483647), toInt64(255) >= toInt32(2147483647), toInt32(2147483647) = toInt64(255), toInt32(2147483647) != toInt64(255), toInt32(2147483647) < toInt64(255), toInt32(2147483647) <= toInt64(255), toInt32(2147483647) > toInt64(255), toInt32(2147483647) >= toInt64(255) , toInt64(255) = toUInt64(2147483647), toInt64(255) != toUInt64(2147483647), toInt64(255) < toUInt64(2147483647), toInt64(255) <= toUInt64(2147483647), toInt64(255) > toUInt64(2147483647), toInt64(255) >= toUInt64(2147483647), toUInt64(2147483647) = toInt64(255), toUInt64(2147483647) != toInt64(255), toUInt64(2147483647) < toInt64(255), toUInt64(2147483647) <= toInt64(255), toUInt64(2147483647) > toInt64(255), toUInt64(2147483647) >= toInt64(255) , toInt64(255) = toInt64(2147483647), toInt64(255) != toInt64(2147483647), toInt64(255) < toInt64(2147483647), toInt64(255) <= toInt64(2147483647), toInt64(255) > toInt64(2147483647), toInt64(255) >= toInt64(2147483647), toInt64(2147483647) = toInt64(255), toInt64(2147483647) != toInt64(255), toInt64(2147483647) < toInt64(255), toInt64(2147483647) <= toInt64(255), toInt64(2147483647) > toInt64(255), toInt64(2147483647) >= toInt64(255) 
SELECT t1.a, t2.b, t3.b, t4.b FROM t1, t2, t3, t4 WHERE t1.a = t2.a AND t1.a = t3.a AND t1.a = t4.a ORDER BY t2.b, t3.b, t4.b;
select round(1000 * ngramSearchUTF8(materialize('ÃÂ°ÃÂ±ÃÂ²ÃÂ³ÃÂ´ÃÂµÃÂÃÂ¶ÃÂ·'), materialize('ÃÂ°ÃÂ±ÃÂ²ÃÂ³ÃÂ´ÃÂµÃÂÃÂ¶')))=round(1000 * ngramSearchUTF8(materialize('ÃÂ°ÃÂ±ÃÂ²ÃÂ³ÃÂ´ÃÂµÃÂÃÂ¶ÃÂ·'), 'ÃÂ°ÃÂ±ÃÂ²ÃÂ³ÃÂ´ÃÂµÃÂÃÂ¶')) from system.numbers limit 5;
SELECT fromUnixTimestampInJodaSyntax(1669804872, 'GGGG', 'UTC');
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c9) AND c6 AND (NOT c6) AND c0) OR (c4 AND c4 AND (NOT c3) AND (NOT c4) AND c4) OR (c4) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_337067322F6C5A7B775B7E642F42723357682E764D2C746F424E6D56557A4A61356A54745B3E6D71(x UInt8) Engine=Memory;
