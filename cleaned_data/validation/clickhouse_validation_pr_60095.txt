INSERT INTO src VALUES /* (7, 2) */ 
SELECT * FROM merge_tree_in_subqueries WHERE id IN (SELECT * FROM system.numbers LIMIT 0);
CREATE DATABASE IF NOT EXISTS test_2h4yy9st 
DROP DATABASE IF EXISTS test_rghljjuf 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), date_trunc('day', N, 'Asia/Istanbul') as r FORMAT CSV;
SELECT '\w' LIKE '%\w';
SELECT COUNT() FROM replicated_table_for_alter2;
SYSTEM STOP TTL MERGES test_lazy_01294_concurrent_test_qna5lrny.tlog
DROP DATABASE IF EXISTS test_sttfgf2r 
DROP TABLE aggregating_00155
SELECT 25,toFixedString('Hello', 10), bin(bitShiftLeft(toFixedString('Hello', 10), 25));
SELECT 'Running test stateless/01585_fuzz_bits_with_bugfix.sql from pid=1714' 
INSERT INTO test_01193_18429.table_9_68 VALUES 
DROP TABLE IF EXISTS t_mt_async_insert;
INSERT INTO test_01193_18429.table_9_436 VALUES 
DROP DATABASE IF EXISTS test_eh9t6oxw 
DROP DATABASE IF EXISTS test_45jkyg56 
SELECT splitByRegexp('\\d+', 'a12bc23de345f', 4) SETTINGS splitby_max_substrings_includes_remaining_string = 1;
CREATE USER session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_double_sha1_password_no_profiles_no_roles IDENTIFIED WITH double_sha1_password
CREATE TABLE test_02908_r2_220 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_220', 'r2') ORDER BY tuple()
SELECT 1 FROM test_table_join_1 AS t1 INNER JOIN test_table_join_2 AS t2 USING (id) LEFT JOIN test_table_join_3 AS t3 USING(id);
INSERT INTO dst_8 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 68
CREATE TABLE test_01193_18429.table_1_874 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_8_729 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_3826345334522C366529334D4557697A285F525D616376463C517E7D4C5B2741572765343C6C2A5F(x UInt8) Engine=Memory;
INSERT INTO TABLE FUNCTION file('test_02270_1.csv.gz') SELECT 'Hello', 'World'
DROP TABLE check_query_tiny_log;
INSERT INTO r3 SELECT 88
INSERT INTO test_01193_18429.table_5_922 VALUES 
INSERT INTO test_y9d6pdpj.t_async_insert FORMAT JSONStringsEachRow
SELECT arrayCumSum(x -> materialize(10), arrayMap(x -> toString(x), [1, 2, 3]));
DROP TABLE IF EXISTS distributed_02184;
SELECT JSONExtract('[1]', toNullable(1), 'Nullable(Bool)');
select sumIf(number::Int128, number % 10 == 0) from numbers(1000);
CREATE DATABASE IF NOT EXISTS test_u2uzx3hf 
SELECT arrayFill(x -> 1, []);
DROP DATABASE IF EXISTS test_8z891v9y 
CREATE TABLE test_6A7249567247754E7E6129682D7C7E656C50407141374551443445633D3A7775347B355B24505445(x UInt8) Engine=Memory;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c1) AND c9) OR ((NOT c3) AND (NOT c3) AND c0) OR (c7 AND c3 AND (NOT c8)) OR (c9 AND c0) OR (c2 AND c2) OR ((NOT c6) AND c6 AND c1) OR (c4 AND c0 AND c9 AND c9) OR (c9 AND (NOT c8) AND c4 AND (NOT c2) AND (NOT c5)) SETTINGS convert_query_to_cnf = 1
CREATE TABLE test_5C72424F6C69286A5A5D67284E66306C292A40346A26357373714E634A5B7640513A51675F533426(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02132_client_history_navigation.expect from pid=1722' 
ALTER TABLE recompression_table MODIFY TTL dt + INTERVAL 1 DAY RECOMPRESS CODEC(ZSTD(12)) SETTINGS mutations_sync = 2;
SELECT 'Running test stateless/00486_if_fixed_string.sql from pid=1715' 
CREATE INDEX idx_tab4_1 ON tab4 (col4 DESC,col3 DESC);
select str from lc_null_str_1;
INSERT INTO test_01193_18429.table_8_120 VALUES 
CREATE TABLE test_6F292D3E5C7466373B65463E634F213150625A664031674C45363929642B705B582260463337704B(x UInt8) Engine=Memory;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c4) AND (NOT c7) AND (NOT c4)) OR (c6 AND (NOT c5)) OR ((NOT c8) AND c0) OR ((NOT c0) AND (NOT c7) AND (NOT c4)) OR (c0 AND c5 AND c7) OR (c5 AND (NOT c8) AND c8 AND c5 AND c9) SETTINGS convert_query_to_cnf = 0
select * from system.stack_trace where thread_id = 0
SHOW TABLES FROM test_8y0pt1h3
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (0 < 3 AND 23 > 0 ? 0 : 0)), throwIf(last != (0 < 3 AND 23 > 0 ? least(3 - 1, 0 + 23 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(3) LIMIT 0, 23);
SELECT cutToFirstSignificantSubdomainWithWWWRFC('');
SELECT CASE WHEN (number % 2) = 0 THEN toFloat64(1) WHEN (number % 3) = 0 THEN toInt32(2) ELSE toUInt16(3) END FROM system.numbers LIMIT 10;
WITH toDateTime64('2019-09-16 19:20:11.123', 3, 'UTC') AS dt64 SELECT toStartOfSecond(materialize(dt64)) AS res, toTypeName(res);
DROP TABLE ws
INSERT INTO test_01193_18429.table_7_807 VALUES 
SELECT a.pk, b.pk, a.dt, b.dt, toTypeName(a.pk), toTypeName(b.pk), toTypeName(materialize(a.dt)), toTypeName(materialize(b.dt)) FROM (SELECT toUInt8(number) > 0 as pk, toUInt8(number) as dt FROM numbers(3)) a ASOF JOIN (SELECT 1 as pk, toNullable(0) as dt) b ON a.pk = b.pk AND a.dt >= b.dt ORDER BY a.dt;
SELECT 65536, 65535, 65536 = 65535, 65536 != 65535, 65536 < 65535, 65536 <= 65535, 65536 > 65535, 65536 >= 65535, 65535 = 65536, 65535 != 65536, 65535 < 65536, 65535 <= 65536, 65535 > 65536, 65535 >= 65536 , toUInt32(65536) = toUInt16(65535), toUInt32(65536) != toUInt16(65535), toUInt32(65536) < toUInt16(65535), toUInt32(65536) <= toUInt16(65535), toUInt32(65536) > toUInt16(65535), toUInt32(65536) >= toUInt16(65535), toUInt16(65535) = toUInt32(65536), toUInt16(65535) != toUInt32(65536), toUInt16(65535) < toUInt32(65536), toUInt16(65535) <= toUInt32(65536), toUInt16(65535) > toUInt32(65536), toUInt16(65535) >= toUInt32(65536) , toUInt32(65536) = toUInt32(65535), toUInt32(65536) != toUInt32(65535), toUInt32(65536) < toUInt32(65535), toUInt32(65536) <= toUInt32(65535), toUInt32(65536) > toUInt32(65535), toUInt32(65536) >= toUInt32(65535), toUInt32(65535) = toUInt32(65536), toUInt32(65535) != toUInt32(65536), toUInt32(65535) < toUInt32(65536), toUInt32(65535) <= toUInt32(65536), toUInt32(65535) > toUInt32(65536), toUInt32(65535) >= toUInt32(65536) , toUInt32(65536) = toInt32(65535), toUInt32(65536) != toInt32(65535), toUInt32(65536) < toInt32(65535), toUInt32(65536) <= toInt32(65535), toUInt32(65536) > toInt32(65535), toUInt32(65536) >= toInt32(65535), toInt32(65535) = toUInt32(65536), toInt32(65535) != toUInt32(65536), toInt32(65535) < toUInt32(65536), toInt32(65535) <= toUInt32(65536), toInt32(65535) > toUInt32(65536), toInt32(65535) >= toUInt32(65536) , toUInt32(65536) = toUInt64(65535), toUInt32(65536) != toUInt64(65535), toUInt32(65536) < toUInt64(65535), toUInt32(65536) <= toUInt64(65535), toUInt32(65536) > toUInt64(65535), toUInt32(65536) >= toUInt64(65535), toUInt64(65535) = toUInt32(65536), toUInt64(65535) != toUInt32(65536), toUInt64(65535) < toUInt32(65536), toUInt64(65535) <= toUInt32(65536), toUInt64(65535) > toUInt32(65536), toUInt64(65535) >= toUInt32(65536) , toUInt32(65536) = toInt64(65535), toUInt32(65536) != toInt64(65535), toUInt32(65536) < toInt64(65535), toUInt32(65536) <= toInt64(65535), toUInt32(65536) > toInt64(65535), toUInt32(65536) >= toInt64(65535), toInt64(65535) = toUInt32(65536), toInt64(65535) != toUInt32(65536), toInt64(65535) < toUInt32(65536), toInt64(65535) <= toUInt32(65536), toInt64(65535) > toUInt32(65536), toInt64(65535) >= toUInt32(65536) , toInt32(65536) = toUInt16(65535), toInt32(65536) != toUInt16(65535), toInt32(65536) < toUInt16(65535), toInt32(65536) <= toUInt16(65535), toInt32(65536) > toUInt16(65535), toInt32(65536) >= toUInt16(65535), toUInt16(65535) = toInt32(65536), toUInt16(65535) != toInt32(65536), toUInt16(65535) < toInt32(65536), toUInt16(65535) <= toInt32(65536), toUInt16(65535) > toInt32(65536), toUInt16(65535) >= toInt32(65536) , toInt32(65536) = toUInt32(65535), toInt32(65536) != toUInt32(65535), toInt32(65536) < toUInt32(65535), toInt32(65536) <= toUInt32(65535), toInt32(65536) > toUInt32(65535), toInt32(65536) >= toUInt32(65535), toUInt32(65535) = toInt32(65536), toUInt32(65535) != toInt32(65536), toUInt32(65535) < toInt32(65536), toUInt32(65535) <= toInt32(65536), toUInt32(65535) > toInt32(65536), toUInt32(65535) >= toInt32(65536) , toInt32(65536) = toInt32(65535), toInt32(65536) != toInt32(65535), toInt32(65536) < toInt32(65535), toInt32(65536) <= toInt32(65535), toInt32(65536) > toInt32(65535), toInt32(65536) >= toInt32(65535), toInt32(65535) = toInt32(65536), toInt32(65535) != toInt32(65536), toInt32(65535) < toInt32(65536), toInt32(65535) <= toInt32(65536), toInt32(65535) > toInt32(65536), toInt32(65535) >= toInt32(65536) , toInt32(65536) = toUInt64(65535), toInt32(65536) != toUInt64(65535), toInt32(65536) < toUInt64(65535), toInt32(65536) <= toUInt64(65535), toInt32(65536) > toUInt64(65535), toInt32(65536) >= toUInt64(65535), toUInt64(65535) = toInt32(65536), toUInt64(65535) != toInt32(65536), toUInt64(65535) < toInt32(65536), toUInt64(65535) <= toInt32(65536), toUInt64(65535) > toInt32(65536), toUInt64(65535) >= toInt32(65536) , toInt32(65536) = toInt64(65535), toInt32(65536) != toInt64(65535), toInt32(65536) < toInt64(65535), toInt32(65536) <= toInt64(65535), toInt32(65536) > toInt64(65535), toInt32(65536) >= toInt64(65535), toInt64(65535) = toInt32(65536), toInt64(65535) != toInt32(65536), toInt64(65535) < toInt32(65536), toInt64(65535) <= toInt32(65536), toInt64(65535) > toInt32(65536), toInt64(65535) >= toInt32(65536) , toUInt64(65536) = toUInt16(65535), toUInt64(65536) != toUInt16(65535), toUInt64(65536) < toUInt16(65535), toUInt64(65536) <= toUInt16(65535), toUInt64(65536) > toUInt16(65535), toUInt64(65536) >= toUInt16(65535), toUInt16(65535) = toUInt64(65536), toUInt16(65535) != toUInt64(65536), toUInt16(65535) < toUInt64(65536), toUInt16(65535) <= toUInt64(65536), toUInt16(65535) > toUInt64(65536), toUInt16(65535) >= toUInt64(65536) , toUInt64(65536) = toUInt32(65535), toUInt64(65536) != toUInt32(65535), toUInt64(65536) < toUInt32(65535), toUInt64(65536) <= toUInt32(65535), toUInt64(65536) > toUInt32(65535), toUInt64(65536) >= toUInt32(65535), toUInt32(65535) = toUInt64(65536), toUInt32(65535) != toUInt64(65536), toUInt32(65535) < toUInt64(65536), toUInt32(65535) <= toUInt64(65536), toUInt32(65535) > toUInt64(65536), toUInt32(65535) >= toUInt64(65536) , toUInt64(65536) = toInt32(65535), toUInt64(65536) != toInt32(65535), toUInt64(65536) < toInt32(65535), toUInt64(65536) <= toInt32(65535), toUInt64(65536) > toInt32(65535), toUInt64(65536) >= toInt32(65535), toInt32(65535) = toUInt64(65536), toInt32(65535) != toUInt64(65536), toInt32(65535) < toUInt64(65536), toInt32(65535) <= toUInt64(65536), toInt32(65535) > toUInt64(65536), toInt32(65535) >= toUInt64(65536) , toUInt64(65536) = toUInt64(65535), toUInt64(65536) != toUInt64(65535), toUInt64(65536) < toUInt64(65535), toUInt64(65536) <= toUInt64(65535), toUInt64(65536) > toUInt64(65535), toUInt64(65536) >= toUInt64(65535), toUInt64(65535) = toUInt64(65536), toUInt64(65535) != toUInt64(65536), toUInt64(65535) < toUInt64(65536), toUInt64(65535) <= toUInt64(65536), toUInt64(65535) > toUInt64(65536), toUInt64(65535) >= toUInt64(65536) , toUInt64(65536) = toInt64(65535), toUInt64(65536) != toInt64(65535), toUInt64(65536) < toInt64(65535), toUInt64(65536) <= toInt64(65535), toUInt64(65536) > toInt64(65535), toUInt64(65536) >= toInt64(65535), toInt64(65535) = toUInt64(65536), toInt64(65535) != toUInt64(65536), toInt64(65535) < toUInt64(65536), toInt64(65535) <= toUInt64(65536), toInt64(65535) > toUInt64(65536), toInt64(65535) >= toUInt64(65536) , toInt64(65536) = toUInt16(65535), toInt64(65536) != toUInt16(65535), toInt64(65536) < toUInt16(65535), toInt64(65536) <= toUInt16(65535), toInt64(65536) > toUInt16(65535), toInt64(65536) >= toUInt16(65535), toUInt16(65535) = toInt64(65536), toUInt16(65535) != toInt64(65536), toUInt16(65535) < toInt64(65536), toUInt16(65535) <= toInt64(65536), toUInt16(65535) > toInt64(65536), toUInt16(65535) >= toInt64(65536) , toInt64(65536) = toUInt32(65535), toInt64(65536) != toUInt32(65535), toInt64(65536) < toUInt32(65535), toInt64(65536) <= toUInt32(65535), toInt64(65536) > toUInt32(65535), toInt64(65536) >= toUInt32(65535), toUInt32(65535) = toInt64(65536), toUInt32(65535) != toInt64(65536), toUInt32(65535) < toInt64(65536), toUInt32(65535) <= toInt64(65536), toUInt32(65535) > toInt64(65536), toUInt32(65535) >= toInt64(65536) , toInt64(65536) = toInt32(65535), toInt64(65536) != toInt32(65535), toInt64(65536) < toInt32(65535), toInt64(65536) <= toInt32(65535), toInt64(65536) > toInt32(65535), toInt64(65536) >= toInt32(65535), toInt32(65535) = toInt64(65536), toInt32(65535) != toInt64(65536), toInt32(65535) < toInt64(65536), toInt32(65535) <= toInt64(65536), toInt32(65535) > toInt64(65536), toInt32(65535) >= toInt64(65536) , toInt64(65536) = toUInt64(65535), toInt64(65536) != toUInt64(65535), toInt64(65536) < toUInt64(65535), toInt64(65536) <= toUInt64(65535), toInt64(65536) > toUInt64(65535), toInt64(65536) >= toUInt64(65535), toUInt64(65535) = toInt64(65536), toUInt64(65535) != toInt64(65536), toUInt64(65535) < toInt64(65536), toUInt64(65535) <= toInt64(65536), toUInt64(65535) > toInt64(65536), toUInt64(65535) >= toInt64(65536) , toInt64(65536) = toInt64(65535), toInt64(65536) != toInt64(65535), toInt64(65536) < toInt64(65535), toInt64(65536) <= toInt64(65535), toInt64(65536) > toInt64(65535), toInt64(65536) >= toInt64(65535), toInt64(65535) = toInt64(65536), toInt64(65535) != toInt64(65536), toInt64(65535) < toInt64(65536), toInt64(65535) <= toInt64(65536), toInt64(65535) > toInt64(65536), toInt64(65535) >= toInt64(65536) 
CREATE DATABASE IF NOT EXISTS test_e36rmybr 
DROP DATABASE IF EXISTS test_rkwyroto 
SELECT toString(toStartOfTenMinutes(toDateTime(1549483055), 'Asia/Tokyo'), 'Asia/Tokyo');
SELECT toQuarter(NULL);
SET optimize_on_insert=0;
ALTER TABLE test ADD COLUMN s2 String DEFAULT s1;
SELECT L2Norm((1, 1.0));
OPTIMIZE TABLE movement FINAL
SELECT multiIf((number % 2) = 0, toUInt16(1), (number % 3) = 0, toInt32(2), toFloat32(3)) FROM system.numbers LIMIT 10;
select tuple(toNullable(number + 1)) < tuple(number) from numbers(1);
SELECT 'Running test stateless/00804_test_delta_codec_no_type_alter.sql from pid=1724' 
SELECT count() FROM t_cnf_fuzz WHERE (c0) OR (c0 AND (NOT c6) AND c8 AND c9 AND (NOT c6)) OR ((NOT c2) AND (NOT c0) AND c3 AND c9 AND (NOT c8)) OR ((NOT c4)) OR ((NOT c5) AND (NOT c6) AND (NOT c0) AND (NOT c5) AND c1) OR ((NOT c0) AND c7 AND (NOT c8) AND c6) OR (c7 AND (NOT c0) AND c1 AND (NOT c8) AND (NOT c8)) OR (c0) OR ((NOT c2) AND c7 AND c4) SETTINGS convert_query_to_cnf = 1
ALTER TABLE t_mutations_nondeterministic UPDATE v = now() WHERE 1;
CREATE DATABASE IF NOT EXISTS test_4ztowvli 
INSERT INTO t2 SELECT number, number FROM numbers(10, 5);
ATTACH TABLE IF NOT EXISTS aine;
CREATE DATABASE IF NOT EXISTS test_kjezfd6z 
CREATE WINDOW VIEW wv TO dst POPULATE AS SELECT count(a) AS count, tumbleEnd(wid) FROM mt GROUP BY tumble(now('US/Samoa'), INTERVAL '5' SECOND, 'US/Samoa') AS wid;
CREATE TABLE test_01193_18429.table_2_383 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT toDecimal128(12345.6789, 4) AS x, ceil(x), ceil(x, 1), ceil(x, 2), ceil(x, 3), ceil(x, 4), ceil(x, 5);
SELECT 39
SELECT 'Running test stateless/02024_create_dictionary_with_comment.sql from pid=1724' 
INSERT INTO test_01193_18429.table_4_192 VALUES 
DROP DATABASE IF EXISTS test_t8otcz2b 
CREATE TABLE test_39282A365140482778256C5D725746466A69514E4F316B405C22546539793A5C3B37596A2C35765A(x UInt8) Engine=Memory;
ALTER TABLE concurrent_alter_column ADD COLUMN c135 DOUBLE;
SELECT count() FROM mt_match_pk WHERE match(v, '^ab');
CREATE TABLE test_722C2E3927287674304E6F2C6721222E66712C725B48686C405621455E37456D6050243F5046353F(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt8(1) WHEN (number % 3) = 0 THEN toUInt8(2) ELSE toUInt32(3) END FROM system.numbers LIMIT 10;
SELECT topK([ [ [1], [2] ], [ [3], [4]] ]);
SELECT 'Running test stateless/01709_inactive_parts_to_throw_insert.sql from pid=1726' 
DROP TABLE vec2d;
drop table test_02097
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (2 < 24 AND 41 > 0 ? 2 : 0)), throwIf(last != (2 < 24 AND 41 > 0 ? least(24 - 1, 2 + 41 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(24) LIMIT 2, 41);
CREATE TABLE test_01193_18429.table_9_252 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO r5 SELECT 26
SELECT 'Running test stateless/00555_hasAll_hasAny.sql from pid=1726' 
INSERT INTO test_01193_18429.table_3_818 VALUES 
CREATE DATABASE IF NOT EXISTS test_m6vom9km 
desc file(02404_data.CSVWithNames) settings schema_inference_hints='c1 UInt8';
CREATE TABLE test_01193_18429.table_9_31 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_5F4B7D7535402D252C645C4C332964253D557877227D6E353853443432233B786E4C616F55772050(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_tqcsokfy 
CREATE TABLE test_42777962304B63442A3C4953233C432F2F4140264E755D333029662D2022425B6C6B50243C7B785B(x UInt8) Engine=Memory;
SELECT `one`.`dummy` FROM `system`.`one` WHERE `dummy` IN tuple(1)
SELECT avgWeighted(x, w) FROM values('x Int32, w Int16', (0, 0), (1, 0));
SELECT t1.id, test_table_join_1.id, t1.value, test_table_join_1.value, t2.id, test_table_join_2.id, t2.value, test_table_join_2.value, t3.id, test_table_join_3.id, t3.value, test_table_join_3.value FROM test_table_join_1 AS t1 LEFT JOIN test_table_join_2 AS t2 ON test_table_join_1.id = test_table_join_2.id RIGHT JOIN test_table_join_3 AS t3 ON test_table_join_2.id = test_table_join_3.id;
select [3] = multiSearchAllPositions(materialize('abcdefgh'), ['cdef']) from system.numbers limit 129;
SELECT 'Running test stateless/01183_custom_separated_format_http.sh from pid=1713' 
SELECT count() FROM bftest WHERE hasAny(x, [42,-42]) FORMAT Null;
INSERT INTO src VALUES /* (33, 2) */ 
DROP TABLE IF EXISTS test_alter_attach_01901S;
DROP DATABASE IF EXISTS test_xpppyn0a 
SELECT portRFC(NULL);
CREATE INDEX idx_tab4_5 ON tab4 (col3,col0);
SELECT count() FROM bftest WHERE hasAll(y, [0,NULL]) FORMAT Null;
CREATE TABLE test_01193_18429.table_10_757 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT concatWithSeparator('|', 'a', materialize(52 :: UInt128)) == 'a|52';
SELECT count() FROM t_cnf_fuzz WHERE (c1) OR ((NOT c3) AND c4 AND c6) SETTINGS convert_query_to_cnf = 0
SELECT * FROM system.mutations WHERE table='concurrent_mutate_mt_5' and is_done=0
SELECT 'Standalone lambda';
CREATE TABLE test_4D585E4A677B646B44636D483A7E3B35676B7B51452C783C515550616C236148482F7B3322412E43(x UInt8) Engine=Memory;
INSERT INTO r7 SELECT 9 % 10 = 7 ? 9 - 1 : 9
SELECT b FROM t_fixed_prefix ORDER BY b SETTINGS optimize_read_in_order = 0
SELECT * FROM (SELECT toLowCardinality(number) AS l FROM system.numbers LIMIT 3) s1 ANY LEFT JOIN (SELECT toLowCardinality(number) AS r FROM system.numbers LIMIT 3) s2 ON l + 1 = r * 1 ORDER BY l;
INSERT INTO test_01193_18429.table_7_314 VALUES 
CREATE DATABASE IF NOT EXISTS test_h2gxtdt1 
SELECT 'Running test stateless/02722_line_as_string_consistency.sh from pid=1720' 
SELECT cast('1234' AS lhs AS UInt32), lhs;
CREATE TABLE test_01193_18429.table_6_7 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT arraySort(geohashesInBox(20.0, 20.0, 20.000001, 20.000001, 11));
INSERT INTO FUNCTION remote('127.0.0.1', test_gfyagppn, async_inserts) VALUES 
SELECT if(`dummy` IN (0, 1), 'ok', 'ok') FROM `system`.`one`
SELECT 'Running test stateless/02815_join_algorithm_setting.sql from pid=1724' 
SELECT 'Running test stateless/02486_truncate_and_unexpected_parts.sql from pid=1726' 
SELECT t1.value, t2.value, t3.value FROM test_table_join_1 AS t1 FULL JOIN test_table_join_2 AS t2 ON test_table_join_1.id = test_table_join_2.id FULL JOIN test_table_join_3 AS t3 ON test_table_join_2.id = test_table_join_3.id;
DROP TABLE test_01037.polygons_array;
CREATE TABLE test_n6lig2oj_1.dict_data (`key` Int, `value` UInt16) ENGINE = Memory
DROP DATABASE IF EXISTS test_gek2t2xg 
CREATE TABLE test_286D695F6C79436B3A415C5C272B2A2D54424F417D63334747693B522B482E6423335F776B347346(x UInt8) Engine=Memory;
INSERT INTO src_13 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 65
INSERT INTO test_01193_18429.table_9_585 VALUES 
CREATE DATABASE IF NOT EXISTS test_ob9v3k1x 
create table sequence_test (time UInt32, data UInt8) engine=Memory;
CREATE TABLE test_724A7A703B41374E613D55737A50583143203C6745314F7B4F7E4F6C3444552E764F5A504D2F7052(x UInt8) Engine=Memory;
select sinh(0) = 0;
INSERT INTO table_gcd_codec_uint64 SELECT number FROM system.numbers LIMIT 50;
SELECT nothingNullArrayIf([NULL], 0) AS `x` FROM numbers(3)
SELECT '13' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff::')))
SELECT * FROM bf_ngrambf_map_keys_test WHERE map_fixed['K2'] != 'V2' SETTINGS force_data_skipping_indices='map_fixed_keys_ngrambf';
CREATE TABLE test (`id` UInt32, `a` UInt32) ENGINE = MergeTree ORDER BY id SETTINGS allow_experimental_block_number_column = 1, index_granularity = 63591, min_bytes_for_wide_part = 357685737, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 23910, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 20893533, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 61699, primary_key_compress_block_size = 18282
SELECT * FROM temp WHERE y IN (toDecimal256(256, 1));
DROP TABLE zstd_1_00;
SELECT round(h3EdgeLengthKm(arrayJoin([0,1,2])), 2);
drop dictionary dict1;
ALTER TABLE comment_test_table MODIFY COMMENT '';
CREATE TABLE test_01193_18429.table_1_338 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO data_compact VALUES 
insert into test_02480_support_wildcard_write values 
CREATE DATABASE IF NOT EXISTS test_r9hdpbeg 
CREATE DATABASE IF NOT EXISTS test_ppe4t0yg 
SELECT count() FROM lc_nullable WHERE has(f64, 100);
DROP TABLE 02337_db.test_table;
CREATE TABLE test_01193_18429.table_5_244 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT * FROM alt_persons_02240 ORDER BY name
drop table if exists mt;
DROP DATABASE IF EXISTS test_6ltzwzzg 
CREATE TABLE test_01193_18429.table_3_73 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_6238266C604627734B38235F4C7C555D746E484E265B6D5D59393B272C6C56337920435B23723769(x UInt8) Engine=Memory;
ALTER TABLE src_11 REPLACE PARTITION 1 FROM src_14
SELECT avgWeighted(x, w) FROM values('x UInt64, w UInt16', (0, 0), (1, 0));
SELECT * FROM values('arr Array(JSON)', '[\'{"x" : 1}\']') FORMAT JSONEachRow;
SELECT 'GLOBAL IN';
SYSTEM START REPLICATED SENDS r2
SELECT ngrams(materialize(toFixedString('Test', 4)), 3);
DROP DATABASE IF EXISTS test_mnskvg2y 
SELECT x < 'aa', x > 'aa' FROM strings_00469;
CREATE TABLE test_01193_18429.table_10_439 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT if(y = 0, 0, x % y) from nullable_division;
SELECT 'Running test stateless/01036_no_superfluous_dict_reload_on_create_database_2.sql from pid=1705' 
DROP TABLE IF EXISTS insert_number_query
INSERT INTO src_6 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 32
select array, d1, a1, a2, a3, a4, a5, a6 from aliases_test array join a3 as a3;
CREATE TABLE test_2C7134725C646A4A69516968276E6F777145403474682F215C5C63684C414E5521585A437D602140(x UInt8) Engine=Memory;
INSERT INTO src VALUES /* (15, 3) */ 
SELECT id as shift_right_bit,'Hello' as arg,bin(bitShiftRight('Hello', id)) as string_res FROM test_bit_shift_right_string_integer;
SELECT 'Running test stateless/02479_nullable_primary_key_non_first_column.sql from pid=1722' 
SELECT multiIf(1, ['foo', col3], (col1 % 3) = 0, [col4, 'bar'], [col6, col7]) FROM multi_if_check;
ALTER TABLE data DETACH PART 'all_2_2_0'
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c2)) OR (c1 AND (NOT c8) AND (NOT c2)) OR ((NOT c8) AND c2 AND (NOT c1) AND c2 AND c3) OR (c6 AND c1 AND c8) OR (c7 AND c7 AND (NOT c3) AND (NOT c0)) OR (c7 AND (NOT c2) AND c8) OR ((NOT c8) AND (NOT c6) AND (NOT c4) AND c2) OR (c7 AND (NOT c8) AND (NOT c7) AND (NOT c8) AND c3) OR ((NOT c5) AND c8) OR (c8 AND (NOT c6) AND c9) SETTINGS convert_query_to_cnf = 1
select hasSubstr([1, 2, 3, 4], [1, 3, 5]);
SELECT sum(isIPAddressInRange('255.0.0.0', cidr)) == 9 FROM test_data;
CREATE TABLE data_r2 (`key` Int, `value` Int, INDEX value_idx value TYPE minmax GRANULARITY 1) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/data', '{table}') ORDER BY key SETTINGS index_granularity = 47083, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 59, merge_max_block_size = 10490, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 4, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 15720686, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 83585, primary_key_compress_block_size = 90273
CREATE TABLE test_01193_18429.table_8_258 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_5_628 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_table_join_1 ( id UInt8, value String ) ENGINE = TinyLog;
SELECT cityHash64(CAST( 0 AS Nullable(Int8)));
DROP DATABASE IF EXISTS test_n1pn2h07 
CREATE TABLE test_01193_18429.table_5_182 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT x FROM 01154_test WHERE x = toUUID('00000000-0000-0000-0000-000000000001');
CREATE TABLE test_01193_18429.table_7_178 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT number % 2 ? materialize([0xFFFFFFFF]) : materialize([-1]) AS res FROM system.numbers LIMIT 10 FORMAT TabSeparatedWithNamesAndTypes;
DROP TABLE 02763_a_merge;
INSERT INTO t_async_insert FORMAT JSONCompactColumns 
SELECT arrayMap(x -> round(x), quantileForEachMerge(0.10)((*,).1)) FROM t2;
INSERT INTO test_01193_18429.table_4_760 VALUES 
CREATE DATABASE IF NOT EXISTS test_dgx43jr7 
SELECT (sum(decimal32) - 2 * count(decimal32)) + (sum(decimal32) - 3 * count(decimal32)) From test_table;
SELECT arrayReduce('maxOrDefault', arrayPopBack([toDecimal128(-123.45, 2)]));
select arrayResize([1, 2, 3, 4, 5, 6], -3);
INSERT INTO t SELECT value FROM system.events WHERE event = 'OverflowAny';
CREATE TABLE test_25665C2B2D5E307846637C3C386120675D224A5D56644D7251597174575D46446B244532462F4851(x UInt8) Engine=Memory;
SYSTEM STOP REPLICATED SENDS r1
select position(materialize('ÃÂ°ÃÂ±ÃÂ²') as h, lower('ÃÂ°ÃÂÃÂ²' as n)) = positionCaseInsensitive(h, n) from system.numbers limit 10;
INSERT INTO test_01193_18429.table_5_94 VALUES 
SELECT toDecimal32('42.42', 4) AS x, toDecimal32(log(x), 4) AS y, round(exp(y), 6);
alter table many_mutations delete where y = 609 * 2 settings mutations_sync = 0;
CREATE TABLE test_01193_18429.table_6_328 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_6431697C6C2256435C2E7D303C21763962297C38794D4567496031683D20313262497729227A682F(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt8(1), toInt8(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toInt8(3), toInt8(3)] END FROM system.numbers LIMIT 10;
SELECT `x` FROM generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8)))))))))))))))))))))))))))))))))))))))))))', 1, 1, 1) LIMIT 1
CREATE INDEX idx_tab2_2 ON tab2 (col4,col1);
CREATE TABLE test_7675456775555622693B3574434473667D417D4C714A74727739244C7E25645652376A284D246F63(x UInt8) Engine=Memory;
DROP TABLE nullable_00571;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (35 < 44 AND 49 > 0 ? 35 : 0)), throwIf(last != (35 < 44 AND 49 > 0 ? least(44 - 1, 35 + 49 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(44) LIMIT 35, 49);
DROP DATABASE IF EXISTS test_u6nkzlpd 
INSERT INTO mt_without_pk VALUES 
CREATE TABLE t_02809 (`a` Int64, `b` Int64, `s` String) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 2334, min_bytes_for_wide_part = 818953927, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 121, merge_max_block_size = 11296, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 496888, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 6593850301, index_granularity_bytes = 30491044, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 50167, primary_key_compress_block_size = 81410 AS SELECT number, number % 10, toString(arrayMap(i -> cityHash64(i * number), range(50))) FROM numbers(10000)
CREATE TABLE test_01193_18429.table_5_842 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_1_98 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT toFloat64(99999999999.9999999) as x, toDecimal128(x, 7), toDecimal128(-x, 7);
SELECT 'Running test stateless/02734_optimize_group_by.sql from pid=1714' 
DROP DATABASE IF EXISTS test_9hjlaqb2 
SELECT * FROM set_idx WHERE startsWith(s, 'abra') FORMAT JSON
CREATE TABLE test_5A5D306E3965347758356F48404E4B5924213C3A425B6D7E4E796B2A453E7C653B4A2E3D6D5C444F(x UInt8) Engine=Memory;
SELECT quantileInterpolatedWeighted(NULL);
DROP TABLE summing_merge_tree_with_sampling;
CREATE TABLE test_3A4023313253754D30386D3D4F4A5552413B2752732A38683634246A37522068473E504D5A275924(x UInt8) Engine=Memory;
SELECT number AS id, toString(number) AS s, range(number) AS arr FROM numbers(10) FORMAT Avro
SELECT 'Running test stateless/02813_func_now_and_alias.sql from pid=1722' 
CREATE INDEX idx_tab4_0 ON tab4 (col0,col4,col1,col3 DESC);
SELECT toMonth(toDateTime(1412106600), 'Asia/Tokyo');
SELECT count() FROM t_sparse_reload WHERE NOT ignore(*);
select [0, 2, 0, 0, 19, 0, 0, 12, 1, 0, 3, 1, 0, 0] = multiSearchAllPositionsCaseInsensitive(materialize('ugpnWWncvqSLsYUCVXRZk'), ['yOWnQmZuhppRVZamgmRIXXMDQdeUich', 'gPNww', 'jlyFSbvmjaYPsMe', 'fQUeGVxgQdmPbVH', 'rZk', 'ariCX', 'grAffMPlefMQvugtAzN', 'LsYuCVX', '', 'jZFoQdWEWJFfSmNDqxIyNjvxnZJ', 'P', 'UgPN', 'JmKMsbegxNvusaiGGAZKglq', 'qArXLxzdYvabPv']) from system.numbers limit 10;
DROP TABLE custom_separated
INSERT INTO test_01193_18429.table_6_412 VALUES 
INSERT INTO test_01193_18429.table_1_360 VALUES 
CREATE TABLE compression_codec_on_alias (`c0` UInt64 CODEC(ZSTD), `c1` UInt64) ENGINE = MergeTree PARTITION BY c0 ORDER BY c1 SETTINGS index_granularity = 45250, min_bytes_for_wide_part = 26903208, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 10783, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 441073, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 18002085, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 62020, primary_key_compress_block_size = 72370
SELECT t.t.t.t.*, t.t.t.t.* APPLY toTypeName FROM nnna FULL JOIN nnnb USING (t.t.t);
CREATE TABLE test_7366427B5B70247434646F47313B33555058267E6254716B555042317B612E332A56755C233A455B(x UInt8) Engine=Memory;
DROP TABLE decimal;
SELECT '=====';
SELECT parseDateTimeBestEffortUSOrZero(NULL, NULL);
WITH - INTERVAL 1 SECOND - INTERVAL 1 HOUR - INTERVAL 1 SECOND as expr SELECT expr, toTypeName(expr);
SELECT normalizeQuery('SELECT 1, 1, 1, /* Hello */ \'abc\' WHERE 1 = 1 AND (1, y)');
select toUnixTimestamp64Milli(toDateTime64('1969-12-31 23:59:59.999', 3, 'Europe/Amsterdam'));
CREATE TABLE test_5C61452F295D276361592F6A6873523464242022312E6A70604D55673E5A332A3A2D675579324F4A(x UInt8) Engine=Memory;
CREATE TABLE t (`x` UInt64, `s` String) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 725, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 96, min_merge_bytes_to_use_direct_io = 1, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 90003, primary_key_compress_block_size = 15058
select IF(3>2, 1, 0);
INSERT INTO test_01193_18429.table_7_960 VALUES 
SELECT sum(uint64 + 2) + sum(uint64 + 3) From test_table;
SELECT arrayStringConcat(groupArray(s), '\n:::::::\n'), count(), wordShingleSimHash(s, 2) as h FROM defaults GROUP BY h ORDER BY h;
CREATE TABLE test_223B776F29595E54753C7157233F574929427E5648206B566B3D73287E257C3E7B2751316A4C412C(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_7_75 VALUES 
explain pipeline select number from remote('127.0.0.{1,2,3}', system, numbers_mt) group by number settings distributed_aggregation_memory_efficient = 1;
INSERT INTO test_01193_18429.table_3_203 VALUES 
CREATE TABLE test_2F503A573E567245474E2D2A307A55204D2044733768444D7E2A6E65294F6456413053537A7D5A7A(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_uvsbzgq9 
CREATE TABLE test_01193_18429.table_1_93 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select 1 = position('abcdefgh', materialize('abc')) from system.numbers limit 10;
select entry_version, initiator_host, initiator_port, cluster, replaceRegexpOne(query, 'UUID \'[0-9a-f\-]{36}\' ', ''), abs(query_create_time - now()) < 600, host, port, status, exception_code, replace(replaceRegexpOne(exception_text, ' \(version.*', ''), 'Exception', 'Error'), abs(query_finish_time - query_create_time - query_duration_ms/1000) <= 1 , query_duration_ms < 600000 from system.distributed_ddl_queue where arrayExists((key, val) -> key='log_comment' and val like '%01175_DDL_test_rjj380a9%', mapKeys(settings), mapValues(settings)) and arrayExists((key, val) -> key='distributed_ddl_task_timeout' and val in ('300', '1'), mapKeys(settings), mapValues(settings)) order by entry, host, port, exception_code
INSERT INTO 01760_db.example_simple_key_source VALUES 
DROP DATABASE IF EXISTS test_uhseye8v 
insert into test1 select * from numbers(10);
select distinct 'constant_1' as constant_value, * from (select string_value from test_table) ORDER BY constant_value, string_value settings max_threads=1;
DROP DATABASE IF EXISTS test_calg9mo3 
INSERT INTO t_async_insert_skip_settings VALUES 
ALTER TABLE test_max_mt_projections_alter ADD PROJECTION p4 (SELECT c2, c3 ORDER BY c2, c3);
SELECT YYYYMMDDhhmmssToDateTime64(toDecimal64(189912315959.1, 5));
DROP DATABASE IF EXISTS test_2eoiexfw 
SELECT 'Hello' ILIKE '%';
DROP TABLE numbers5;
INSERT INTO r0 SELECT number * 2 + 0 FROM numbers(200)
CREATE TABLE test_6B2A6D4B24733250442D4C3D23473263596452345E51697D6647286E2B372C3E24547954226A3155(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_1_6 VALUES 
CREATE DATABASE IF NOT EXISTS test_4a29n9q8 
select -14 as offset, 14 as length, toFixedString('Hello', 6) as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
SELECT * FROM VALUES('x Decimal256(0)', (4));
select 'XML';
SELECT quantilesTDigest(0.5, 0.9)(`number`) FROM numbers(10)
create table test_capnp engine=File(CapnProto) settings format_schema='test_02327/02327_schema:MessageWithEmpty', input_format_capn_proto_skip_fields_with_unsupported_types_in_schema_inference=1
select upperUTF8('aaaaÃÂÃÂÃÂÃÂAAAAaaAA') = 'AAAAÃÂÃÂÃÂÃÂAAAAAAAA';
SELECT dictGetDescendants('hierarchy_flat_dictionary', 0);
DROP DATABASE IF EXISTS test_1nr10xox 
CREATE TABLE test_3F235B4B302254524F7B3D40614750486E5F5B5D486B7079716C29744333684E7E7757453978375C(x UInt8) Engine=Memory;
SELECT 'SELECT addYears(N, 1, \'Asia/Istanbul\')';
CREATE TABLE alter_table_9 (`a` UInt8, `b` Int16, `c` Float32, `d` String, `e` Array(UInt8), `f` Nullable(UUID), `g` Tuple(UInt8, UInt16)) ENGINE = ReplicatedMergeTree('/clickhouse/tables/00993_system_parts_race_condition_drop_zookeeper_test_zoczfe66/alter_table', 'r_9') PARTITION BY b % 10 ORDER BY a SETTINGS old_parts_lifetime = 1, cleanup_delay_period = 0, cleanup_delay_period_random_add = 0, cleanup_thread_preferred_points_per_iteration = 0, replicated_max_mutations_in_one_entry = 14, index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 17222, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 5082719006, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75985, primary_key_compress_block_size = 73298
CREATE DATABASE IF NOT EXISTS test_9uf5bagv 
CREATE INDEX idx_tab3_0 ON tab3 (col0,col1 DESC);
DROP TABLE IF EXISTS 02918_table_obj2;
select t1_distr.id from t1_distr join ( select t1_distr.id from t1_distr as d1 inner join t2_distr as d2 on t1_distr.id = t2_distr.id where t1_distr.id > 0 order by t1_distr.id ) s0 using id;
CREATE DICTIONARY 01765_db.sparse_hashed_dictionary_simple_key_simple_attributes ( id UInt64, value_first String DEFAULT 'value_first_default', value_second String DEFAULT 'value_second_default' ) PRIMARY KEY id SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_simple_attributes_source_table')) LIFETIME(MIN 1 MAX 1000) LAYOUT(SPARSE_HASHED());
CREATE TABLE test_01193_18429.table_4_604 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE DATABASE IF NOT EXISTS test_wru3i2pv 
CREATE TABLE test_715D5A5844767A456543494D346B4F5D2E3E363345517A73374C506B2A3837303C532B6B44687A24(x UInt8) Engine=Memory;
select JSON_VALUE('{"hello":{"world":"!"}}', '$.hello') settings function_json_value_return_type_allow_complex=true;
CREATE TABLE kv (k UInt32, v UInt32) ENGINE Join(Any, Left, k);
CREATE DATABASE IF NOT EXISTS test_mvpimmsb 
CREATE TABLE test_566F3B49352E376A2F5C312E27714B78534A6D25417862307B21725D24286D5A522A206164676B30(x UInt8) Engine=Memory;
SELECT data FROM t_json_wide_parts ORDER BY data.k1 FORMAT JSONEachRow;
DROP DATABASE IF EXISTS test_ogk2syhg 
DROP DATABASE IF EXISTS test_gmvah32a 
DROP TABLE IF EXISTS t_parts_profile_events;
DROP DATABASE IF EXISTS test_040bhejb 
SELECT toDate32(NULL, NULL, NULL);
select tuple(number, materialize(toUInt64OrNull(''))) <= tuple(number, number) from numbers(1);
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), N >= toUInt8(1) as r FORMAT CSV;
SELECT 'Running test stateless/00837_insert_select_and_read_prefix.sql from pid=1724' 
ALTER TABLE 02416_rocksdb UPDATE value = 'Another' WHERE key > 2;
INSERT INTO r1 SELECT 53 % 10 = 1 ? 53 - 1 : 53
CREATE TABLE test_7A674E625F5332222822472E64452D3C574E5936776326365E7E4D24477039447E2C4D563C306D78(x UInt8) Engine=Memory;
SELECT multiIf(1, toFixedString('foo', 16), 1, toFixedString(col3, 16), 'baz') FROM multi_if_check;
CREATE TABLE test_02908_r2_195 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_195', 'r2') ORDER BY tuple()
SELECT 501
SELECT kostikConsistentHash(16045690984833335023, 1), kostikConsistentHash(16045690984833335023, 2), kostikConsistentHash(16045690984833335023, 3), kostikConsistentHash(16045690984833335023, 4), kostikConsistentHash(16045690984833335023, 173), kostikConsistentHash(16045690984833335023, 255);
CREATE TABLE index_append_test_test (`i` Int64, `a` UInt32, `b` UInt64, CONSTRAINT c1 ASSUME (i <= (2 * b)) AND ((i + 40) > a)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 24155, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 73, merge_max_block_size = 4823, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 20560401, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 34242, primary_key_compress_block_size = 30777
CREATE DATABASE IF NOT EXISTS test_xzjsdj12 
CREATE TABLE test_682C41543F225E5D742B5F7656494B2F246B67494E375C575279465C3C572F505E5D485F4357417D(x UInt8) Engine=Memory;
SELECT dummy, count() FROM remote('127.0.0.{2,3}', system, one) GROUP BY dummy WITH TOTALS;
select '----- hash / IfState / ip4 -----';
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 11813, 500 settings ignore_materialized_views_with_dropped_target_table=1
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), N > toUInt16(1) as r FORMAT CSV;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), toStartOfInterval(N, INTERVAL 1 month, 'Asia/Istanbul') as r FORMAT CSV;
DROP TABLE IF EXISTS lazy_mark_test;
CREATE TABLE test_01193_18429.table_7_495 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP TABLE IF EXISTS ddl_dictonary_test_source;
INSERT INTO test_01193_18429.table_5_481 VALUES 
DROP DATABASE IF EXISTS test_etiswgxe 
INSERT INTO testSettingsR1 (*) VALUES 
SELECT toFloat32OrNull(NULL);
CREATE TABLE test_506F5342627E3F2A646E454E597A4C4D535E585446795E6C46654B3C27645577542E524C354F576C(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_3pyrxbf9 
DROP TABLE t_json_field;
SELECT SHA224('');
WITH v1 AS (SELECT t1.c2, t2.c2, t2.c3 FROM t1 ASOF JOIN t2 USING (c1, c2)) SELECT count() FROM v1 WHERE c3 = 'b';
WITH '2020-02-05 14:34:12.333' as S, toDateTime64(S, 3) as DT64 SELECT * WHERE S < DT64;
SELECT cast('' , 'IPv6');
create database db_01517_atomic Engine=Atomic;
CREATE TABLE t_constraints_where(a UInt32, b UInt32, CONSTRAINT c1 ASSUME b < 10) ENGINE = Memory;
DROP DATABASE IF EXISTS test_bcdjpg10 
SELECT substr(NULL);
INSERT INTO test_01193_18429.table_3_544 VALUES 
select makeDate(2149, 157);
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c8)) OR (c4) OR ((NOT c8) AND c9 AND c9 AND c2) OR (c3 AND c9 AND c8 AND c7) OR ((NOT c5) AND (NOT c6)) OR ((NOT c8)) OR ((NOT c7) AND (NOT c8) AND (NOT c0) AND c0 AND (NOT c5)) OR (c9 AND c8 AND (NOT c3) AND c1) SETTINGS convert_query_to_cnf = 0
SELECT 5, 4, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (5 < 13 AND 4 > 0 ? 5 : 0)), throwIf(last != (5 < 13 AND 4 > 0 ? least(13 - 1, 5 + 4 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 5, 4);
CREATE TABLE test_5F68575C34253A692754683A6F245C605448387D64666C2C4E32643C655A6E556E2E46446756234B(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_mmbd530f 
show cluster 'test_cluster_one_shard_two_replicas'
INSERT INTO test_01193_18429.table_3_909 VALUES 
alter table many_mutations delete where y = 848 * 2 settings mutations_sync = 0;
SELECT 1 UNION SELECT 1 UNION SELECT 1 UNION ALL SELECT 1;
SELECT CASE WHEN (number % 2) = 0 THEN toInt64(1) WHEN (number % 3) = 0 THEN toInt32(2) ELSE toInt32(3) END FROM system.numbers LIMIT 10;
SELECT toStartOfYear(NULL);
select arrayShiftRight(['a', 'b', 'c', 'd', 'e'], 3, 'foo');
CREATE TABLE test_01193_18429.table_8_120 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'Running test stateless/02376_arrow_dict_with_string.sql from pid=1705' 
select mapPopulateSeries(m, n) from map_test;
INSERT INTO test_01193_18429.table_2_577 VALUES 
SELECT max(abs(n) + 1), max(abs(n) + n), max(n - abs(n)), max(1 - abs(n)) FROM (SELECT number n FROM numbers(10));
INSERT INTO test_01193_18429.table_1_680 VALUES 
WITH map(1, 2, 3, 4) AS m SELECT m[number] FROM numbers(5);
SELECT positionUTF8(NULL, NULL, NULL);
SELECT * FROM (SELECT 1 AS x) AS t1 ALL LEFT JOIN (SELECT materialize(2) AS x) AS t2 ON t1.x = t2.x;
CREATE TABLE test_6D6D6E79534050686A4071203035572F7E60345E423527683B4A3F3B387A53235C5337636F425078(x UInt8) Engine=Memory;
 SELECT event, value > 0 FROM system.events WHERE event IN ('AsyncInsertQuery', 'AsyncInsertBytes', 'AsyncInsertRows') ORDER BY event
alter table many_mutations delete where y = 610 * 2 settings mutations_sync = 0;
CREATE DATABASE IF NOT EXISTS test_u5b2bjh1 
drop table if exists dst_02224;
DROP DATABASE IF EXISTS test_xjq0ysa4 
CREATE TABLE arrow_types6 (int8 Nullable(Int8), uint8 Nullable(UInt8), int16 Nullable(Int16), uint16 Nullable(UInt16), int32 Nullable(Int32), uint32 Nullable(UInt32), int64 Nullable(Int64), uint64 Nullable(UInt64), float32 Nullable(Float32), float64 Nullable(Float64), string Nullable(String), fixedstring Nullable(FixedString(15)), date Nullable(Date), datetime Nullable(DateTime), datetime64 Nullable(DateTime64)) ENGINE = Memory
SELECT count() FROM t_cnf_fuzz WHERE (c0 AND c6 AND (NOT c2) AND c2) OR (c3) OR ((NOT c3)) OR (c1 AND (NOT c8) AND c9) OR ((NOT c7) AND c0 AND (NOT c0)) OR (c6 AND (NOT c8) AND (NOT c3) AND c4) OR ((NOT c5)) OR ((NOT c8)) OR (c4 AND c0 AND c9 AND c8 AND (NOT c3)) OR ((NOT c4) AND c8 AND c3 AND (NOT c2) AND (NOT c2)) SETTINGS convert_query_to_cnf = 0
INSERT INTO test_01193_18429.table_10_389 VALUES 
INSERT INTO r7 SELECT 97 % 10 = 7 ? 97 - 1 : 97
CREATE DATABASE IF NOT EXISTS test_fli3byoi 
drop user "ÃÂÃÂ°ÃÂÃÂ ÃÂÃÂÃÂ¿ÃÂºÃÂ¸ÃÂ½";
CREATE TABLE test_55322877222F74615A7B6A327B365445343B5F78234946443626296D3840256B466028256074546C(x UInt8) Engine=Memory;
SELECT '00000000-0000-01f8-9cb8-cb1b82fb3900' AS str, toUUID(str);
INSERT INTO test_01193_18429.table_5_547 VALUES 
insert into open_events_tmp select 2, '2020-07-11' from numbers(31);
CREATE TABLE `/t0` (`a` Int64, `b` Int64) ENGINE = MergeTree PARTITION BY a ORDER BY a SETTINGS index_granularity = 57455, min_bytes_for_wide_part = 369624931, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 15124, prefer_fetch_merged_part_size_threshold = 5289851922, vertical_merge_algorithm_min_rows_to_activate = 655287, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 8095346439, index_granularity_bytes = 27194542, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 39793, primary_key_compress_block_size = 96601
CREATE TABLE test_02908_r2_198 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_198', 'r2') ORDER BY tuple()
DESC TABLE test_aoagfgvc.remote_test
set output_format_write_statistics = 0;
CREATE TABLE template (s1 String, s2 String, `s 3` String, "s 4" String, n UInt64, d Date) ENGINE = Memory
CREATE TABLE test_23297070443D5433736A2A6B5C257B533948213364277764417C7C7A3542425E6F515E5867373931(x UInt8) Engine=Memory;
SELECT byteSwap(4135::UInt16);
INSERT INTO test_01193_18429.table_7_82 VALUES 
CREATE TABLE test_2C6E503E62506A2054533E59202A2C7E533E27234E583A7258675F417B5A527372616A534A494B4A(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_4_809 VALUES 
select [0, 0, 0, 1, 10, 4, 0, 0, 5, 0, 1, 0, 7, 0, 3, 7, 0, 0] = multiSearchAllPositionsCaseInsensitiveUTF8(materialize('ÃÂÃÂÃÂ ÃÂ»ÃÂ¶ÃÂ³ÃÂÃÂÃÂ¥ÃÂ»ÃÂÃÂ½ÃÂºÃÂÃÂ¦ÃÂÃÂ¶ÃÂÃÂ³ÃÂÃÂÃÂ½ÃÂ´ÃÂ§'), ['ÃÂÃÂ´ÃÂ¼ÃÂ ÃÂÃÂÃÂÃÂÃÂÃÂ½ÃÂ¡ÃÂ´ÃÂ¡ÃÂÃÂ¨ÃÂ¿ÃÂÃÂÃÂÃÂ³ÃÂÃÂ', 'ÃÂÃÂÃÂÃÂ³', 'ÃÂÃÂÃÂÃÂÃÂ§ÃÂÃÂµÃÂÃÂÃÂ²ÃÂÃÂ¿ÃÂÃÂÃÂÃÂ§ÃÂ³ÃÂ´ÃÂ¥ÃÂÃÂÃÂ¡ÃÂÃÂÃÂÃÂ²ÃÂÃÂÃÂ', '', 'ÃÂÃÂ¹', 'ÃÂ', 'ÃÂÃÂ¹ÃÂÃÂÃÂÃÂ£ÃÂ¶ÃÂÃÂÃÂ¦ÃÂÃÂÃÂ¶ÃÂÃÂÃÂ»', 'ÃÂ²ÃÂ¥ÃÂ£ÃÂÃÂº', 'ÃÂ¶ÃÂ³ÃÂÃÂ¶ÃÂ ÃÂÃÂÃÂ', 'ÃÂÃÂÃÂ±ÃÂÃÂÃÂÃÂ§ÃÂÃÂÃÂ£ÃÂÃÂÃÂ¨ÃÂ¥ÃÂÃÂÃÂÃÂÃÂÃÂ½ÃÂ', '', 'ÃÂÃÂÃÂÃÂ¶ÃÂÃÂÃÂÃÂÃÂÃÂÃÂ°ÃÂ', 'ÃÂÃÂ¶ÃÂ ÃÂ»ÃÂÃÂ', 'ÃÂ©ÃÂ³ÃÂ¨ÃÂÃÂ ÃÂ¦ÃÂÃÂÃÂ¢ÃÂÃÂµÃÂ¶ÃÂ ÃÂ³ÃÂ¥ÃÂºÃÂÃÂ³ÃÂ¾ÃÂºÃÂ±ÃÂÃÂ¤ÃÂÃÂÃÂÃÂ´ÃÂ¢ÃÂÃÂ¨ÃÂ¤ÃÂ¦', 'ÃÂ¥', 'ÃÂºÃÂÃÂ¥ÃÂÃÂ¹ÃÂÃÂºÃÂºÃÂ¦ÃÂ¤ÃÂ¶ÃÂÃÂÃÂ', 'ÃÂÃÂ·ÃÂ ÃÂÃÂ¡ÃÂÃÂ´ÃÂ½ÃÂ°ÃÂ¡ÃÂÃÂ±ÃÂ§ÃÂÃÂ ÃÂ¾ÃÂ', 'ÃÂ¿ÃÂÃÂÃÂÃÂ£ÃÂ§ÃÂ¼ÃÂÃÂ¿ÃÂÃÂ»ÃÂÃÂÃÂÃÂÃÂ£']) from system.numbers limit 10;
CREATE TABLE test_01193_18429.table_9_666 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE parquet_load (`idx` String, `lst` Array(String)) ENGINE = Memory;
CREATE TABLE replica2 (`v` UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test/01451/quorum', 'r2') ORDER BY tuple() SETTINGS max_replicated_merges_in_queue = 0, index_granularity = 54690, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 16459, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 881312, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 15810846, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 96115, primary_key_compress_block_size = 41929
INSERT INTO test_01193_18429.table_4_604 VALUES 
select * from s3Cluster('test_cluster_one_shard_three_replicas_localhost', 'http://localhost:11111/test/{a,b}.tsv', 'TSV', 'auto') order by c1, c2, c3;
SYSTEM DROP MARK CACHE
CREATE TABLE t13 (`a` UInt32, `b` UInt32) ENGINE = MergeTree PARTITION BY (intDiv(a, 2), intDiv(b, 3)) ORDER BY a SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 77, merge_max_block_size = 5221, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 76652, primary_key_compress_block_size = 22585
SELECT multiIf((number % 2) = 0, toInt8(1), (number % 3) = 0, toFloat32(2), toUInt16(3)) FROM system.numbers LIMIT 10;
select 332 from test54378 where part_date in (SELECT toDate('2018-04-19'));
CREATE TABLE replacing_m3 (`a` Int64, `b` UInt64) ENGINE = ReplacingMergeTree ORDER BY (a, b) SETTINGS index_granularity = 14701, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.17303328216075897, replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 16619, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 11244589, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 23916, primary_key_compress_block_size = 48184
TRUNCATE TABLE arrays_test;
CREATE INDEX idx_tab2_2 ON tab2 (col0,col4 DESC,col1 DESC);
show create table system.rocksdb;
DROP DATABASE IF EXISTS test_txg3d5np 
CREATE TABLE test_01193_18429.table_8_408 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP TABLE IF EXISTS fh;
insert into function file(02475_data.bsonEachRow) select [number::UInt32] as x from numbers(2)
INSERT INTO XXXX FORMAT Values 
CREATE TABLE test_237E4A6F7E44693664605163677026484A464D76744C627452736E294B2B6B7135623C2F5E20777A(x UInt8) Engine=Memory;
CREATE TABLE test_736F477B6B6046374D346C4D3F51434F38796A596E225735586B617B36772F38612054536F6B7921(x UInt8) Engine=Memory;
DROP TABLE test_table_tuple;
CREATE TABLE test_01193_18429.table_3_917 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP DATABASE IF EXISTS test_a0sn3inq 
CREATE TABLE attach_partition_t2 (`a` UInt32, `b` String, INDEX bf b TYPE bloom_filter GRANULARITY 1) ENGINE = MergeTree ORDER BY a SETTINGS index_granularity = 25866, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 4303, prefer_fetch_merged_part_size_threshold = 2505950316, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 7469782776, index_granularity_bytes = 8318948, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 84124, primary_key_compress_block_size = 74757
select 'begin-' || replace(toString(generateUUIDv4()), '-', '') || '-end' format TSV
SELECT multiIf((number % 2) = 0, [toUInt8(1), toUInt8(2)], (number % 3) = 0, [toInt64(2), toInt64(3)], [toInt16(3), toInt16(3)]) FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/02264_format_insert_compression.sql from pid=1715' 
DROP DATABASE IF EXISTS test_vt7t9uj4 
CREATE DATABASE IF NOT EXISTS test_dzlx7bvv 
SELECT NULL, (CAST((-997276) AS DateTime)), NULL, -4443297.555831;
SELECT a, e FROM t_fixed_prefix WHERE a = 1 ORDER BY a, e SETTINGS optimize_read_in_order = 1
SELECT toDecimal256(1.555,3) IN (1.550,1.5);
select 1 = multiMatchAny(materialize('abcd'), ['c']) from system.numbers limit 10;
SELECT quantile(NULL, NULL, NULL);
SELECT * FROM t ALL RIGHT JOIN tj ON t.key1 == tj.key1 AND t.key2 == tj.key2 AND t.b == 22 ORDER BY t.key1, tj.key2 FORMAT TSVWithNames;
CREATE TABLE test_432975752C2C704E4B3D225F6A6D3F283F685F49712B31643247217C4C6E7D353F79662F7D377630(x UInt8) Engine=Memory;
CREATE TABLE b (k UInt64, b1 UInt64, b2 String) ENGINE = Memory;
INSERT INTO test_01193_18429.table_5_479 VALUES 
SELECT * from db_01721.decimal_dict where KeyField = 4999;
select * from urlCluster('test_cluster_one_shard_three_replicas_localhost', 'http://localhost:11111/test/{a,b}.tsv', 'TSV', 'auto', 'auto') order by c1, c2, c3;
CREATE TABLE test_02908_r2_84 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_84', 'r2') ORDER BY tuple()
DROP DATABASE IF EXISTS test_s5wpyi15 
SELECT 'Running test stateless/00542_access_to_temporary_table_in_readonly_mode.sql from pid=1714' 
SELECT dictGetString('db_01268.dict2', 'region_name', toUInt64(4));
INSERT INTO test_01193_18429.table_10_845 VALUES 
CREATE TABLE file (x UInt64) ENGINE = File(TSV, 'test_3jf9fl6r/xz.tsv.xz')
SELECT 'Running test stateless/01621_clickhouse_compressor.sh from pid=1713' 
DROP TABLE IF EXISTS t_json_str_5;
SHOW CREATE USER u13_01292;
create table table_with_nullable_keys (nullable_int Nullable(UInt32), nullable_str Nullable(String), nullable_lc LowCardinality(Nullable(String)), nullable_ints Array(Nullable(UInt32)), nullable_misc Tuple(Nullable(String), Nullable(UInt32)), nullable_val Map(UInt32, Nullable(String)), value UInt8) engine MergeTree order by (nullable_int, nullable_str, nullable_lc, nullable_ints, nullable_misc, nullable_val) settings allow_nullable_key = 1, index_granularity = 1
SELECT mannWhitneyUTest(NULL, NULL);
create table local (a UInt64, b UInt64, c UInt64, d UInt64, e UInt64, f UInt64, g UInt64, h UInt64) engine = Log;
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat32(1), toFloat32(2)] WHEN (number % 3) = 0 THEN [toInt8(2), toInt8(3)] ELSE [toFloat32(3), toFloat32(3)] END FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_gjpio7bf 
SELECT arrayReduce('stddevSampOrDefault', arrayPopBack([1]));
SELECT count(-1);
CREATE TABLE test_01193_18429.table_5_118 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE toModifiedJulianDay_test (d String) ENGINE = Memory;
SELECT 'Running test stateless/01804_uniq_up_to_ubsan.sql from pid=1722' 
INSERT INTO test_01193_18429.table_7_141 VALUES 
CREATE TABLE test_676B394C302B273A71607228434C4B403266647B542B467E5949797E482F352F7946626151765A7E(x UInt8) Engine=Memory;
drop dictionary if exists regexp_device;
SELECT * FROM csv ORDER BY d FORMAT CSV
CREATE DATABASE IF NOT EXISTS test_zruwam0n 
INSERT INTO test_01193_18429.table_10_702 VALUES 
CREATE TABLE test_396E7444747A5D7D7722427767413F24493173683A4B44523060346E48554F2C543C2D2960236D70(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_fzmksche 
SELECT Title, round(1000 * distance) FROM test_distance ORDER BY ngramDistanceUTF8(Title, 'metrika') as distance, Title;
CREATE TABLE test_01193_18429.table_7_787 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select 1 = isValidUTF8(toValidUTF8('some text')) from system.numbers limit 10;
CREATE TABLE test_01193_18429.table_9_772 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT multiIf((col1 % 2) = 0, [col2, 'bar'], 1, [col4, 'bar'], [col6, 'bar']) FROM multi_if_check;
SELECT queryStringAndFragment(NULL);
CREATE TABLE test_24437A5D6E7C55515147784E5B3C582A5A59334F6C7155346062446D6E3C2C3F7743795F547D713D(x UInt8) Engine=Memory;
insert into orc_load format ORC
CREATE TABLE test_30534C4A322E2928434874495526246A7E73533C29234F362E2340774477784E4426672C74344E6E(x UInt8) Engine=Memory;
drop table map_test;
select id from table1 where id % 200 < 0 order by id;
SELECT parseDateTimeBestEffort('2020-05-14 12:37:03 AM', 3, 'UTC') AS a, toTypeName(a);
CREATE VIEW test_view_00740 AS SELECT * FROM test_00740;
CREATE TABLE test_01193_18429.table_7_760 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP TABLE IF EXISTS `.inner.tmp_mv4`;
INSERT INTO test_01193_18429.table_6_51 VALUES 
SELECT count() FROM t_cnf_fuzz WHERE (c0 AND (NOT c3) AND (NOT c5)) OR ((NOT c5) AND c4 AND c4 AND c0) OR (c7) OR (c3 AND (NOT c8)) OR (c5) OR ((NOT c1) AND c7) OR ((NOT c9) AND (NOT c6)) OR ((NOT c7) AND c4 AND (NOT c2)) OR (c9) SETTINGS convert_query_to_cnf = 1
INSERT INTO test_01193_18429.table_8_131 VALUES 
SELECT 'Running test stateless/01847_bad_like.sql from pid=1713' 
CREATE TABLE test_01193_18429.table_8_742 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO src_9 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 32
SELECT count() FROM bftest WHERE hasAny(x, [0, 1]) OR 0. FORMAT Null;
SELECT filesystemUnreserved();
select makeDateTime64(1991, 8, 24, 65537, 4, 0);
CREATE TABLE r9 (`x` UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/tables/01459_manual_write_to_replicas_test_rtlzcyyu/r', 'r9') ORDER BY x SETTINGS index_granularity = 13972, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 16861, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 3148779030, index_granularity_bytes = 14261115, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 47059, primary_key_compress_block_size = 60410
drop table 02681_undrop_no_uuid_on_cluster on cluster test_shard_localhost format Null;
SELECT age('minute', toDate('2014-10-26'), toDate('2014-10-27'), 'UTC');
CREATE TABLE kill_mutation_r2 (`d` Date, `x` UInt32, `s` String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/00834_kill_mutation_replicated_zookeeper_test_kzou0211/kill_mutation', '2') PARTITION BY d ORDER BY x SETTINGS index_granularity = 15291, min_bytes_for_wide_part = 973703705, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 1619, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 123826, vertical_merge_algorithm_min_columns_to_activate = 94, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 4141753, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 94204, primary_key_compress_block_size = 18186
select '--';
select format('{}{}', materialize('a'), materialize(toFixedString('b', 1))) == 'ab' from system.numbers limit 5;
INSERT INTO commententry1 VALUES 
INSERT INTO values_template_fallback VALUES 
SELECT '-- query_cache_nondeterministic_function_handling = save';
SELECT max(explain like '%Delayed%') FROM (EXPLAIN PIPELINE graph=1 SELECT sum(a) FROM remote('127.0.0.4', currentDatabase(), '02863_delayed_source') WITH TOTALS SETTINGS extremes = 1);
CREATE TABLE merge_tree_table (`Date` Date, `SomeType` UInt8, `Alternative1` UInt64, `Alternative2` UInt64, `User` UInt32, `CharID` UInt64 ALIAS multiIf(SomeType IN (3, 4, 11), 0, SomeType IN (7, 8), Alternative1, Alternative2)) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 23389, min_bytes_for_wide_part = 645048488, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 6288, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 5140122, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 56388, primary_key_compress_block_size = 60631
CREATE TABLE test_01193_18429.table_7_460 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT arrayAll(x -> materialize(0), [1, 2, 3]);
SELECT arrayExists(x -> materialize(0), arrayMap(x -> toString(x), range(number))) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_10_424 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_6_516 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 1 ? (number, toString(number)) : (number * 10, concat('! ', toString(number))) FROM system.numbers LIMIT 10;
SET max_rows_to_read = 4;
CREATE DATABASE IF NOT EXISTS test_tpdurobx 
CREATE DATABASE IF NOT EXISTS test_83x0qcr3 
INSERT INTO src_15 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 85
select '2283-11-11' >= toDate32('2283-11-10');
SELECT dateDiff('day', toDate('2014-10-26'), toDate('2014-10-27'), 'UTC');
INSERT INTO test_01193_18429.table_6_981 VALUES 
SELECT multiIf((number % 2) = 0, [toUInt32(1), toUInt32(2)], (number % 3) = 0, [toInt64(2), toInt64(3)], [toUInt8(3), toUInt8(3)]) FROM system.numbers LIMIT 10;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt8(1), toInt8(2)] WHEN (number % 3) = 0 THEN [toFloat32(2), toFloat32(3)] ELSE [toFloat32(3), toFloat32(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_4525227D604121406874254F666F59434D44386F766D483643397365786450702D2F404A5A626E78(x UInt8) Engine=Memory;
INSERT INTO t_json_local FORMAT JSONAsObject 
SELECT 94;
ALTER TABLE src_1 REPLACE PARTITION 8 FROM src_3
SELECT 'a' UNION ALL (SELECT 'a' UNION ALL SELECT 'a' UNION SELECT 'a');
CREATE DATABASE IF NOT EXISTS test_eae17zw9 
create materialized view mv to dst (a Int32) as select * from src;
SELECT 'Running test stateless/02891_functions_over_sparse_columns.sql from pid=1713' 
SELECT '-1', '0.500000000', -1 = 0.500000000, -1 != 0.500000000, -1 < 0.500000000, -1 <= 0.500000000, -1 > 0.500000000, -1 >= 0.500000000, 0.500000000 = -1, 0.500000000 != -1, 0.500000000 < -1, 0.500000000 <= -1, 0.500000000 > -1, 0.500000000 >= -1 , toInt8(-1) = 0.500000000, toInt8(-1) != 0.500000000, toInt8(-1) < 0.500000000, toInt8(-1) <= 0.500000000, toInt8(-1) > 0.500000000, toInt8(-1) >= 0.500000000, 0.500000000 = toInt8(-1), 0.500000000 != toInt8(-1), 0.500000000 < toInt8(-1), 0.500000000 <= toInt8(-1), 0.500000000 > toInt8(-1), 0.500000000 >= toInt8(-1) , toInt16(-1) = 0.500000000, toInt16(-1) != 0.500000000, toInt16(-1) < 0.500000000, toInt16(-1) <= 0.500000000, toInt16(-1) > 0.500000000, toInt16(-1) >= 0.500000000, 0.500000000 = toInt16(-1), 0.500000000 != toInt16(-1), 0.500000000 < toInt16(-1), 0.500000000 <= toInt16(-1), 0.500000000 > toInt16(-1), 0.500000000 >= toInt16(-1) , toInt32(-1) = 0.500000000, toInt32(-1) != 0.500000000, toInt32(-1) < 0.500000000, toInt32(-1) <= 0.500000000, toInt32(-1) > 0.500000000, toInt32(-1) >= 0.500000000, 0.500000000 = toInt32(-1), 0.500000000 != toInt32(-1), 0.500000000 < toInt32(-1), 0.500000000 <= toInt32(-1), 0.500000000 > toInt32(-1), 0.500000000 >= toInt32(-1) , toInt64(-1) = 0.500000000, toInt64(-1) != 0.500000000, toInt64(-1) < 0.500000000, toInt64(-1) <= 0.500000000, toInt64(-1) > 0.500000000, toInt64(-1) >= 0.500000000, 0.500000000 = toInt64(-1), 0.500000000 != toInt64(-1), 0.500000000 < toInt64(-1), 0.500000000 <= toInt64(-1), 0.500000000 > toInt64(-1), 0.500000000 >= toInt64(-1) ;
SELECT 'Running test stateless/01396_negative_datetime_saturate_to_zero.sql from pid=1724' 
INSERT INTO test_01193_18429.table_8_380 VALUES 
CREATE TABLE test_01193_18429.table_8_61 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP DATABASE IF EXISTS test_4w4fjabq 
DROP TABLE IF EXISTS table_map;
SELECT 'hashed: inner';
SELECT INTERVAL 2 years;
SELECT hasTokenCaseInsensitiveOrNull('', '');
INSERT INTO mt VALUES /* (12, 2) */ 
select 12 as x format Native 
INSERT INTO test_01193_18429.table_9_847 VALUES 
SELECT 39,'Hello',bin(bitShiftRight('Hello', 39));
CREATE TABLE test_01193_18429.table_4_402 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE DATABASE IF NOT EXISTS test_6k1ata8x 
SELECT 127, -9223372036854775808, 127 = -9223372036854775808, 127 != -9223372036854775808, 127 < -9223372036854775808, 127 <= -9223372036854775808, 127 > -9223372036854775808, 127 >= -9223372036854775808, -9223372036854775808 = 127, -9223372036854775808 != 127, -9223372036854775808 < 127, -9223372036854775808 <= 127, -9223372036854775808 > 127, -9223372036854775808 >= 127 , toUInt8(127) = toInt64(-9223372036854775808), toUInt8(127) != toInt64(-9223372036854775808), toUInt8(127) < toInt64(-9223372036854775808), toUInt8(127) <= toInt64(-9223372036854775808), toUInt8(127) > toInt64(-9223372036854775808), toUInt8(127) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toUInt8(127), toInt64(-9223372036854775808) != toUInt8(127), toInt64(-9223372036854775808) < toUInt8(127), toInt64(-9223372036854775808) <= toUInt8(127), toInt64(-9223372036854775808) > toUInt8(127), toInt64(-9223372036854775808) >= toUInt8(127) , toInt8(127) = toInt64(-9223372036854775808), toInt8(127) != toInt64(-9223372036854775808), toInt8(127) < toInt64(-9223372036854775808), toInt8(127) <= toInt64(-9223372036854775808), toInt8(127) > toInt64(-9223372036854775808), toInt8(127) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toInt8(127), toInt64(-9223372036854775808) != toInt8(127), toInt64(-9223372036854775808) < toInt8(127), toInt64(-9223372036854775808) <= toInt8(127), toInt64(-9223372036854775808) > toInt8(127), toInt64(-9223372036854775808) >= toInt8(127) , toUInt16(127) = toInt64(-9223372036854775808), toUInt16(127) != toInt64(-9223372036854775808), toUInt16(127) < toInt64(-9223372036854775808), toUInt16(127) <= toInt64(-9223372036854775808), toUInt16(127) > toInt64(-9223372036854775808), toUInt16(127) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toUInt16(127), toInt64(-9223372036854775808) != toUInt16(127), toInt64(-9223372036854775808) < toUInt16(127), toInt64(-9223372036854775808) <= toUInt16(127), toInt64(-9223372036854775808) > toUInt16(127), toInt64(-9223372036854775808) >= toUInt16(127) , toInt16(127) = toInt64(-9223372036854775808), toInt16(127) != toInt64(-9223372036854775808), toInt16(127) < toInt64(-9223372036854775808), toInt16(127) <= toInt64(-9223372036854775808), toInt16(127) > toInt64(-9223372036854775808), toInt16(127) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toInt16(127), toInt64(-9223372036854775808) != toInt16(127), toInt64(-9223372036854775808) < toInt16(127), toInt64(-9223372036854775808) <= toInt16(127), toInt64(-9223372036854775808) > toInt16(127), toInt64(-9223372036854775808) >= toInt16(127) , toUInt32(127) = toInt64(-9223372036854775808), toUInt32(127) != toInt64(-9223372036854775808), toUInt32(127) < toInt64(-9223372036854775808), toUInt32(127) <= toInt64(-9223372036854775808), toUInt32(127) > toInt64(-9223372036854775808), toUInt32(127) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toUInt32(127), toInt64(-9223372036854775808) != toUInt32(127), toInt64(-9223372036854775808) < toUInt32(127), toInt64(-9223372036854775808) <= toUInt32(127), toInt64(-9223372036854775808) > toUInt32(127), toInt64(-9223372036854775808) >= toUInt32(127) , toInt32(127) = toInt64(-9223372036854775808), toInt32(127) != toInt64(-9223372036854775808), toInt32(127) < toInt64(-9223372036854775808), toInt32(127) <= toInt64(-9223372036854775808), toInt32(127) > toInt64(-9223372036854775808), toInt32(127) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toInt32(127), toInt64(-9223372036854775808) != toInt32(127), toInt64(-9223372036854775808) < toInt32(127), toInt64(-9223372036854775808) <= toInt32(127), toInt64(-9223372036854775808) > toInt32(127), toInt64(-9223372036854775808) >= toInt32(127) , toUInt64(127) = toInt64(-9223372036854775808), toUInt64(127) != toInt64(-9223372036854775808), toUInt64(127) < toInt64(-9223372036854775808), toUInt64(127) <= toInt64(-9223372036854775808), toUInt64(127) > toInt64(-9223372036854775808), toUInt64(127) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toUInt64(127), toInt64(-9223372036854775808) != toUInt64(127), toInt64(-9223372036854775808) < toUInt64(127), toInt64(-9223372036854775808) <= toUInt64(127), toInt64(-9223372036854775808) > toUInt64(127), toInt64(-9223372036854775808) >= toUInt64(127) , toInt64(127) = toInt64(-9223372036854775808), toInt64(127) != toInt64(-9223372036854775808), toInt64(127) < toInt64(-9223372036854775808), toInt64(127) <= toInt64(-9223372036854775808), toInt64(127) > toInt64(-9223372036854775808), toInt64(127) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toInt64(127), toInt64(-9223372036854775808) != toInt64(127), toInt64(-9223372036854775808) < toInt64(127), toInt64(-9223372036854775808) <= toInt64(127), toInt64(-9223372036854775808) > toInt64(127), toInt64(-9223372036854775808) >= toInt64(127) 
select X.*, s.* from X full join (select * from X) as s on X.x_b = s.x_b order by X.id, X.x_a, X.x_b, s.id, s.x_a, s.x_b;
select is_blocked, error_count, data_files, data_compressed_bytes>100, broken_data_files, broken_data_compressed_bytes from system.distribution_queue where database = currentDatabase();
DROP TABLE IF EXISTS bloom_filter_array_lc_null_types_test;
INSERT INTO one_00458 (x, y) VALUES 
INSERT INTO r5 SELECT 97
DROP DATABASE IF EXISTS test_mmbd530f 
CREATE TABLE test_02908_r2_62 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_62', 'r2') ORDER BY tuple()
INSERT INTO test_01193_18429.table_2_622 VALUES 
select bin('10');
CREATE TABLE test_2B33632A653D336B295678453420265F27334C5D6C2B59316B583547207B6E337C292A5D55584837(x UInt8) Engine=Memory;
SELECT floor(sum(somenum), 1) FROM compression_codec_multiple_tiny_log;
DROP DATABASE IF EXISTS test_drjpgqha 
CREATE DATABASE IF NOT EXISTS test_v9advq01 
SELECT 'Running test stateless/00592_union_all_different_aliases.sql from pid=1720' 
SELECT count() FROM test_parallel_replicas_settings WHERE NOT ignore(*) settings log_comment='0_f621c4f2-4da7-4a7c-bb6d-052c442d0f7f';
DROP DICTIONARY IF EXISTS database_for_dict.dict1;
select '----- Arg / hash / State / ip4 -----';
SELECT 1 = dictHas(concat('test_7kssh40k', '.dict_ipv4_trie'), tuple(IPv4StringToNum('127.0.255.127')))
CREATE DATABASE IF NOT EXISTS test_71t4hao9 
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 22860, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE ROLE sqllt_role;
SELECT toRelativeDayNum(NULL, NULL);
DROP DATABASE IF EXISTS test_a3tum6br 
SELECT 'Running test stateless/01098_msgpack_format.sh from pid=1705' 
DROP TABLE test_jit_nullable;
INSERT INTO test_01193_18429.table_10_342 VALUES 
select polygonsIntersectionCartesian([[[(0., 0.),(0., 3.),(1., 2.9),(2., 2.6),(2.6, 2.),(2.9, 1.),(3., 0.),(0., 0.)]]], [[[(1., 1.),(1., 4.),(4., 4.),(4., 1.),(1., 1.)]]]);
CREATE TABLE test_41795424443653384850252B37312A5274587560332B66684B25676D27573D423931216C6C455263(x UInt8) Engine=Memory;
CREATE TABLE test_7A3C61534A267A593E335B65755E3C5B4A3E497A4F642C5B3E4247392B5037592D70305F49403F31(x UInt8) Engine=Memory;
SELECT '> 127.0.0.1', ipv6_ FROM ipv6_test WHERE ipv6_ > IPv4ToIPv6(toIPv4('127.0.0.1')) ORDER BY ipv6_;
SELECT toBool(100000000000.0000001);
SELECT dictGet('test_dictionary', 'value', 0);
CREATE TABLE test_01193_18429.table_1_973 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_3_697 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select jsonMergePatch('{"a":1}');
CREATE TABLE test_3A3E442B32633621704A5753585F39622A5128524F586A2E5C644E413673734F5539632B395F2B73(x UInt8) Engine=Memory;
CREATE TABLE test_665F3B5851583620274048716D6978414D6678346E6E4244653D5648542D3E306A5E4C4538532136(x UInt8) Engine=Memory;
ALTER TABLE mutations UPDATE y = y + 1 WHERE x IN for_subquery;
INSERT INTO src_3 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 38
CREATE TABLE test_517B596D6D764E296873652640407B365A79307B6B4876557749365268795D4C7E732D477B494C75(x UInt8) Engine=Memory;
SELECT indexOf(a, toDecimal32(0.1, 3)), indexOf(a, toDecimal32(1.0, 3)) FROM decimal;
CREATE TABLE test_01193_18429.table_4_480 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select 0 = multiMatchAny(materialize('dyhycfhzyewaikgursyxfkuv'), materialize(['sktnofpugrmyxmbizzrivmhn', 'fhlgadpoqcvktbfzncxbllvwutdawmw', 'eewzjpcgzrqmltbgmhafwlwqb', 'tpogbkyj', 'rtllntxjgkzs', 'mirbvsqexscnzglogigbujgdwjvcv', 'iktwpgjsakemewmahgqza', 'xgfvzkvqgiuoihjjnxwwpznxhz', 'nxaumpaknreklbwynvxdsmatjekdlxvklh', 'zadzwqhgfxqllihuudozxeixyokhny', 'tdqpgfpzexlkslodps', 'slztannufxaabqfcjyfquafgfhfb', 'xvjldhfuwurvkb', 'aecv', 'uycfsughpikqsbcmwvqygdyexkcykhbnau', 'jr'])) from system.numbers limit 10;
alter table data_01900_1 update s = 'foo_38' where 1;
SELECT 'Running test stateless/02706_array_map_tuples.sql from pid=1720' 
DROP TABLE IF EXISTS "/t0";
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (38 < 68 AND 31 > 0 ? 38 : 0)), throwIf(last != (38 < 68 AND 31 > 0 ? least(68 - 1, 38 + 31 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(68) LIMIT 38, 31);
DROP TABLE offset_without_limit;
select 3 as offset, -3 as length, toFixedString('Hello', 6) as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
CREATE DATABASE IF NOT EXISTS test_pjcmnpu9 
DROP DATABASE IF EXISTS test_tihzhggw 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (57 < 48 AND 49 > 0 ? 57 : 0)), throwIf(last != (57 < 48 AND 49 > 0 ? least(48 - 1, 57 + 49 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(48) LIMIT 57, 49);
CREATE TABLE test_2634512928712D5D435B4F396421674D75524D20346B4967227D332F4B65576C4B69505B7C247034(x UInt8) Engine=Memory;
DROP TABLE mv3;
DROP TABLE byte_identical_r2;
CREATE TABLE test_01193_18429.table_1_997 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT splitByRegexp('', 'a12bc23de345f', 1) SETTINGS splitby_max_substrings_includes_remaining_string = 1;
INSERT INTO test_01193_18429.table_7_3 VALUES 
SELECT toDecimal128('1.0', 2) AS x, asin(x), acos(x), atan(x);
SELECT 'on with or';
select n, sum(x) OVER (ORDER BY n, x ROWS BETWEEN 100 PRECEDING AND CURRENT ROW) from test_01655_plan_optimizations_optimize_read_in_window_order_long_n SETTINGS optimize_read_in_order=1, max_memory_usage=20000000, max_threads=1 format Null
DROP TABLE IF EXISTS parallel_replicas_plain;
DROP DATABASE IF EXISTS test_6zzp4dvx 
SELECT count(), min(y), max(y), sum(y), uniqExact(y) FROM modify_sample_replicated SAMPLE 0.1;
CREATE TABLE test_01193_18429.table_6_352 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT minMap([number % 3, number % 4 - 1], [number :: UInt256, NULL]) FROM numbers(3) GROUP BY number WITH ROLLUP ORDER BY number;
alter table many_mutations delete where y = 438 * 2 settings mutations_sync = 0;
CREATE TABLE test_01193_18429.table_8_123 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
show create table data_skipping_indices format TSVRaw;
CREATE TABLE test_01193_18429.table_7_338 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT cityHash64(CAST( 0 AS Nullable(Int32)));
insert into test_byte_size_complex_array values
CREATE TABLE test_577D7A7032755A65413A21537A77635C3D57426A3870513157285D567E5D2F6E357964433C712952(x UInt8) Engine=Memory;
DROP TABLE clicks;
SET replication_alter_partitions_sync = 0;
DROP TABLE IF EXISTS test_7kssh40k.table_ip_trie
SELECT * FROM arrow_types5 ORDER BY int8 FORMAT ArrowStream
SELECT _shard_num, * FROM dist_3 order by _shard_num;
DROP DATABASE IF EXISTS test_ukp6d0k8 
SELECT javaHash();
CREATE TABLE test_01193_18429.table_1_99 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
ALTER TABLE test_max_size_drop DROP PART 'all_1_1_0';
CREATE TABLE test_01193_18429.table_10_661 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_474B466844292B6A42306F6D66233C746C6962666E5551494B7D2171797B614F2D5E74787133767A(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_3_428 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt8(1), toInt8(2)] WHEN (number % 3) = 0 THEN [toUInt8(2), toUInt8(3)] ELSE [toInt16(3), toInt16(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_3_1 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 1, 2147483647, 1 = 2147483647, 1 != 2147483647, 1 < 2147483647, 1 <= 2147483647, 1 > 2147483647, 1 >= 2147483647, 2147483647 = 1, 2147483647 != 1, 2147483647 < 1, 2147483647 <= 1, 2147483647 > 1, 2147483647 >= 1 , toUInt8(1) = toUInt32(2147483647), toUInt8(1) != toUInt32(2147483647), toUInt8(1) < toUInt32(2147483647), toUInt8(1) <= toUInt32(2147483647), toUInt8(1) > toUInt32(2147483647), toUInt8(1) >= toUInt32(2147483647), toUInt32(2147483647) = toUInt8(1), toUInt32(2147483647) != toUInt8(1), toUInt32(2147483647) < toUInt8(1), toUInt32(2147483647) <= toUInt8(1), toUInt32(2147483647) > toUInt8(1), toUInt32(2147483647) >= toUInt8(1) , toUInt8(1) = toInt32(2147483647), toUInt8(1) != toInt32(2147483647), toUInt8(1) < toInt32(2147483647), toUInt8(1) <= toInt32(2147483647), toUInt8(1) > toInt32(2147483647), toUInt8(1) >= toInt32(2147483647), toInt32(2147483647) = toUInt8(1), toInt32(2147483647) != toUInt8(1), toInt32(2147483647) < toUInt8(1), toInt32(2147483647) <= toUInt8(1), toInt32(2147483647) > toUInt8(1), toInt32(2147483647) >= toUInt8(1) , toUInt8(1) = toUInt64(2147483647), toUInt8(1) != toUInt64(2147483647), toUInt8(1) < toUInt64(2147483647), toUInt8(1) <= toUInt64(2147483647), toUInt8(1) > toUInt64(2147483647), toUInt8(1) >= toUInt64(2147483647), toUInt64(2147483647) = toUInt8(1), toUInt64(2147483647) != toUInt8(1), toUInt64(2147483647) < toUInt8(1), toUInt64(2147483647) <= toUInt8(1), toUInt64(2147483647) > toUInt8(1), toUInt64(2147483647) >= toUInt8(1) , toUInt8(1) = toInt64(2147483647), toUInt8(1) != toInt64(2147483647), toUInt8(1) < toInt64(2147483647), toUInt8(1) <= toInt64(2147483647), toUInt8(1) > toInt64(2147483647), toUInt8(1) >= toInt64(2147483647), toInt64(2147483647) = toUInt8(1), toInt64(2147483647) != toUInt8(1), toInt64(2147483647) < toUInt8(1), toInt64(2147483647) <= toUInt8(1), toInt64(2147483647) > toUInt8(1), toInt64(2147483647) >= toUInt8(1) , toInt8(1) = toUInt32(2147483647), toInt8(1) != toUInt32(2147483647), toInt8(1) < toUInt32(2147483647), toInt8(1) <= toUInt32(2147483647), toInt8(1) > toUInt32(2147483647), toInt8(1) >= toUInt32(2147483647), toUInt32(2147483647) = toInt8(1), toUInt32(2147483647) != toInt8(1), toUInt32(2147483647) < toInt8(1), toUInt32(2147483647) <= toInt8(1), toUInt32(2147483647) > toInt8(1), toUInt32(2147483647) >= toInt8(1) , toInt8(1) = toInt32(2147483647), toInt8(1) != toInt32(2147483647), toInt8(1) < toInt32(2147483647), toInt8(1) <= toInt32(2147483647), toInt8(1) > toInt32(2147483647), toInt8(1) >= toInt32(2147483647), toInt32(2147483647) = toInt8(1), toInt32(2147483647) != toInt8(1), toInt32(2147483647) < toInt8(1), toInt32(2147483647) <= toInt8(1), toInt32(2147483647) > toInt8(1), toInt32(2147483647) >= toInt8(1) , toInt8(1) = toUInt64(2147483647), toInt8(1) != toUInt64(2147483647), toInt8(1) < toUInt64(2147483647), toInt8(1) <= toUInt64(2147483647), toInt8(1) > toUInt64(2147483647), toInt8(1) >= toUInt64(2147483647), toUInt64(2147483647) = toInt8(1), toUInt64(2147483647) != toInt8(1), toUInt64(2147483647) < toInt8(1), toUInt64(2147483647) <= toInt8(1), toUInt64(2147483647) > toInt8(1), toUInt64(2147483647) >= toInt8(1) , toInt8(1) = toInt64(2147483647), toInt8(1) != toInt64(2147483647), toInt8(1) < toInt64(2147483647), toInt8(1) <= toInt64(2147483647), toInt8(1) > toInt64(2147483647), toInt8(1) >= toInt64(2147483647), toInt64(2147483647) = toInt8(1), toInt64(2147483647) != toInt8(1), toInt64(2147483647) < toInt8(1), toInt64(2147483647) <= toInt8(1), toInt64(2147483647) > toInt8(1), toInt64(2147483647) >= toInt8(1) , toUInt16(1) = toUInt32(2147483647), toUInt16(1) != toUInt32(2147483647), toUInt16(1) < toUInt32(2147483647), toUInt16(1) <= toUInt32(2147483647), toUInt16(1) > toUInt32(2147483647), toUInt16(1) >= toUInt32(2147483647), toUInt32(2147483647) = toUInt16(1), toUInt32(2147483647) != toUInt16(1), toUInt32(2147483647) < toUInt16(1), toUInt32(2147483647) <= toUInt16(1), toUInt32(2147483647) > toUInt16(1), toUInt32(2147483647) >= toUInt16(1) , toUInt16(1) = toInt32(2147483647), toUInt16(1) != toInt32(2147483647), toUInt16(1) < toInt32(2147483647), toUInt16(1) <= toInt32(2147483647), toUInt16(1) > toInt32(2147483647), toUInt16(1) >= toInt32(2147483647), toInt32(2147483647) = toUInt16(1), toInt32(2147483647) != toUInt16(1), toInt32(2147483647) < toUInt16(1), toInt32(2147483647) <= toUInt16(1), toInt32(2147483647) > toUInt16(1), toInt32(2147483647) >= toUInt16(1) , toUInt16(1) = toUInt64(2147483647), toUInt16(1) != toUInt64(2147483647), toUInt16(1) < toUInt64(2147483647), toUInt16(1) <= toUInt64(2147483647), toUInt16(1) > toUInt64(2147483647), toUInt16(1) >= toUInt64(2147483647), toUInt64(2147483647) = toUInt16(1), toUInt64(2147483647) != toUInt16(1), toUInt64(2147483647) < toUInt16(1), toUInt64(2147483647) <= toUInt16(1), toUInt64(2147483647) > toUInt16(1), toUInt64(2147483647) >= toUInt16(1) , toUInt16(1) = toInt64(2147483647), toUInt16(1) != toInt64(2147483647), toUInt16(1) < toInt64(2147483647), toUInt16(1) <= toInt64(2147483647), toUInt16(1) > toInt64(2147483647), toUInt16(1) >= toInt64(2147483647), toInt64(2147483647) = toUInt16(1), toInt64(2147483647) != toUInt16(1), toInt64(2147483647) < toUInt16(1), toInt64(2147483647) <= toUInt16(1), toInt64(2147483647) > toUInt16(1), toInt64(2147483647) >= toUInt16(1) , toInt16(1) = toUInt32(2147483647), toInt16(1) != toUInt32(2147483647), toInt16(1) < toUInt32(2147483647), toInt16(1) <= toUInt32(2147483647), toInt16(1) > toUInt32(2147483647), toInt16(1) >= toUInt32(2147483647), toUInt32(2147483647) = toInt16(1), toUInt32(2147483647) != toInt16(1), toUInt32(2147483647) < toInt16(1), toUInt32(2147483647) <= toInt16(1), toUInt32(2147483647) > toInt16(1), toUInt32(2147483647) >= toInt16(1) , toInt16(1) = toInt32(2147483647), toInt16(1) != toInt32(2147483647), toInt16(1) < toInt32(2147483647), toInt16(1) <= toInt32(2147483647), toInt16(1) > toInt32(2147483647), toInt16(1) >= toInt32(2147483647), toInt32(2147483647) = toInt16(1), toInt32(2147483647) != toInt16(1), toInt32(2147483647) < toInt16(1), toInt32(2147483647) <= toInt16(1), toInt32(2147483647) > toInt16(1), toInt32(2147483647) >= toInt16(1) , toInt16(1) = toUInt64(2147483647), toInt16(1) != toUInt64(2147483647), toInt16(1) < toUInt64(2147483647), toInt16(1) <= toUInt64(2147483647), toInt16(1) > toUInt64(2147483647), toInt16(1) >= toUInt64(2147483647), toUInt64(2147483647) = toInt16(1), toUInt64(2147483647) != toInt16(1), toUInt64(2147483647) < toInt16(1), toUInt64(2147483647) <= toInt16(1), toUInt64(2147483647) > toInt16(1), toUInt64(2147483647) >= toInt16(1) , toInt16(1) = toInt64(2147483647), toInt16(1) != toInt64(2147483647), toInt16(1) < toInt64(2147483647), toInt16(1) <= toInt64(2147483647), toInt16(1) > toInt64(2147483647), toInt16(1) >= toInt64(2147483647), toInt64(2147483647) = toInt16(1), toInt64(2147483647) != toInt16(1), toInt64(2147483647) < toInt16(1), toInt64(2147483647) <= toInt16(1), toInt64(2147483647) > toInt16(1), toInt64(2147483647) >= toInt16(1) , toUInt32(1) = toUInt32(2147483647), toUInt32(1) != toUInt32(2147483647), toUInt32(1) < toUInt32(2147483647), toUInt32(1) <= toUInt32(2147483647), toUInt32(1) > toUInt32(2147483647), toUInt32(1) >= toUInt32(2147483647), toUInt32(2147483647) = toUInt32(1), toUInt32(2147483647) != toUInt32(1), toUInt32(2147483647) < toUInt32(1), toUInt32(2147483647) <= toUInt32(1), toUInt32(2147483647) > toUInt32(1), toUInt32(2147483647) >= toUInt32(1) , toUInt32(1) = toInt32(2147483647), toUInt32(1) != toInt32(2147483647), toUInt32(1) < toInt32(2147483647), toUInt32(1) <= toInt32(2147483647), toUInt32(1) > toInt32(2147483647), toUInt32(1) >= toInt32(2147483647), toInt32(2147483647) = toUInt32(1), toInt32(2147483647) != toUInt32(1), toInt32(2147483647) < toUInt32(1), toInt32(2147483647) <= toUInt32(1), toInt32(2147483647) > toUInt32(1), toInt32(2147483647) >= toUInt32(1) , toUInt32(1) = toUInt64(2147483647), toUInt32(1) != toUInt64(2147483647), toUInt32(1) < toUInt64(2147483647), toUInt32(1) <= toUInt64(2147483647), toUInt32(1) > toUInt64(2147483647), toUInt32(1) >= toUInt64(2147483647), toUInt64(2147483647) = toUInt32(1), toUInt64(2147483647) != toUInt32(1), toUInt64(2147483647) < toUInt32(1), toUInt64(2147483647) <= toUInt32(1), toUInt64(2147483647) > toUInt32(1), toUInt64(2147483647) >= toUInt32(1) , toUInt32(1) = toInt64(2147483647), toUInt32(1) != toInt64(2147483647), toUInt32(1) < toInt64(2147483647), toUInt32(1) <= toInt64(2147483647), toUInt32(1) > toInt64(2147483647), toUInt32(1) >= toInt64(2147483647), toInt64(2147483647) = toUInt32(1), toInt64(2147483647) != toUInt32(1), toInt64(2147483647) < toUInt32(1), toInt64(2147483647) <= toUInt32(1), toInt64(2147483647) > toUInt32(1), toInt64(2147483647) >= toUInt32(1) , toInt32(1) = toUInt32(2147483647), toInt32(1) != toUInt32(2147483647), toInt32(1) < toUInt32(2147483647), toInt32(1) <= toUInt32(2147483647), toInt32(1) > toUInt32(2147483647), toInt32(1) >= toUInt32(2147483647), toUInt32(2147483647) = toInt32(1), toUInt32(2147483647) != toInt32(1), toUInt32(2147483647) < toInt32(1), toUInt32(2147483647) <= toInt32(1), toUInt32(2147483647) > toInt32(1), toUInt32(2147483647) >= toInt32(1) , toInt32(1) = toInt32(2147483647), toInt32(1) != toInt32(2147483647), toInt32(1) < toInt32(2147483647), toInt32(1) <= toInt32(2147483647), toInt32(1) > toInt32(2147483647), toInt32(1) >= toInt32(2147483647), toInt32(2147483647) = toInt32(1), toInt32(2147483647) != toInt32(1), toInt32(2147483647) < toInt32(1), toInt32(2147483647) <= toInt32(1), toInt32(2147483647) > toInt32(1), toInt32(2147483647) >= toInt32(1) , toInt32(1) = toUInt64(2147483647), toInt32(1) != toUInt64(2147483647), toInt32(1) < toUInt64(2147483647), toInt32(1) <= toUInt64(2147483647), toInt32(1) > toUInt64(2147483647), toInt32(1) >= toUInt64(2147483647), toUInt64(2147483647) = toInt32(1), toUInt64(2147483647) != toInt32(1), toUInt64(2147483647) < toInt32(1), toUInt64(2147483647) <= toInt32(1), toUInt64(2147483647) > toInt32(1), toUInt64(2147483647) >= toInt32(1) , toInt32(1) = toInt64(2147483647), toInt32(1) != toInt64(2147483647), toInt32(1) < toInt64(2147483647), toInt32(1) <= toInt64(2147483647), toInt32(1) > toInt64(2147483647), toInt32(1) >= toInt64(2147483647), toInt64(2147483647) = toInt32(1), toInt64(2147483647) != toInt32(1), toInt64(2147483647) < toInt32(1), toInt64(2147483647) <= toInt32(1), toInt64(2147483647) > toInt32(1), toInt64(2147483647) >= toInt32(1) , toUInt64(1) = toUInt32(2147483647), toUInt64(1) != toUInt32(2147483647), toUInt64(1) < toUInt32(2147483647), toUInt64(1) <= toUInt32(2147483647), toUInt64(1) > toUInt32(2147483647), toUInt64(1) >= toUInt32(2147483647), toUInt32(2147483647) = toUInt64(1), toUInt32(2147483647) != toUInt64(1), toUInt32(2147483647) < toUInt64(1), toUInt32(2147483647) <= toUInt64(1), toUInt32(2147483647) > toUInt64(1), toUInt32(2147483647) >= toUInt64(1) , toUInt64(1) = toInt32(2147483647), toUInt64(1) != toInt32(2147483647), toUInt64(1) < toInt32(2147483647), toUInt64(1) <= toInt32(2147483647), toUInt64(1) > toInt32(2147483647), toUInt64(1) >= toInt32(2147483647), toInt32(2147483647) = toUInt64(1), toInt32(2147483647) != toUInt64(1), toInt32(2147483647) < toUInt64(1), toInt32(2147483647) <= toUInt64(1), toInt32(2147483647) > toUInt64(1), toInt32(2147483647) >= toUInt64(1) , toUInt64(1) = toUInt64(2147483647), toUInt64(1) != toUInt64(2147483647), toUInt64(1) < toUInt64(2147483647), toUInt64(1) <= toUInt64(2147483647), toUInt64(1) > toUInt64(2147483647), toUInt64(1) >= toUInt64(2147483647), toUInt64(2147483647) = toUInt64(1), toUInt64(2147483647) != toUInt64(1), toUInt64(2147483647) < toUInt64(1), toUInt64(2147483647) <= toUInt64(1), toUInt64(2147483647) > toUInt64(1), toUInt64(2147483647) >= toUInt64(1) , toUInt64(1) = toInt64(2147483647), toUInt64(1) != toInt64(2147483647), toUInt64(1) < toInt64(2147483647), toUInt64(1) <= toInt64(2147483647), toUInt64(1) > toInt64(2147483647), toUInt64(1) >= toInt64(2147483647), toInt64(2147483647) = toUInt64(1), toInt64(2147483647) != toUInt64(1), toInt64(2147483647) < toUInt64(1), toInt64(2147483647) <= toUInt64(1), toInt64(2147483647) > toUInt64(1), toInt64(2147483647) >= toUInt64(1) , toInt64(1) = toUInt32(2147483647), toInt64(1) != toUInt32(2147483647), toInt64(1) < toUInt32(2147483647), toInt64(1) <= toUInt32(2147483647), toInt64(1) > toUInt32(2147483647), toInt64(1) >= toUInt32(2147483647), toUInt32(2147483647) = toInt64(1), toUInt32(2147483647) != toInt64(1), toUInt32(2147483647) < toInt64(1), toUInt32(2147483647) <= toInt64(1), toUInt32(2147483647) > toInt64(1), toUInt32(2147483647) >= toInt64(1) , toInt64(1) = toInt32(2147483647), toInt64(1) != toInt32(2147483647), toInt64(1) < toInt32(2147483647), toInt64(1) <= toInt32(2147483647), toInt64(1) > toInt32(2147483647), toInt64(1) >= toInt32(2147483647), toInt32(2147483647) = toInt64(1), toInt32(2147483647) != toInt64(1), toInt32(2147483647) < toInt64(1), toInt32(2147483647) <= toInt64(1), toInt32(2147483647) > toInt64(1), toInt32(2147483647) >= toInt64(1) , toInt64(1) = toUInt64(2147483647), toInt64(1) != toUInt64(2147483647), toInt64(1) < toUInt64(2147483647), toInt64(1) <= toUInt64(2147483647), toInt64(1) > toUInt64(2147483647), toInt64(1) >= toUInt64(2147483647), toUInt64(2147483647) = toInt64(1), toUInt64(2147483647) != toInt64(1), toUInt64(2147483647) < toInt64(1), toUInt64(2147483647) <= toInt64(1), toUInt64(2147483647) > toInt64(1), toUInt64(2147483647) >= toInt64(1) , toInt64(1) = toInt64(2147483647), toInt64(1) != toInt64(2147483647), toInt64(1) < toInt64(2147483647), toInt64(1) <= toInt64(2147483647), toInt64(1) > toInt64(2147483647), toInt64(1) >= toInt64(2147483647), toInt64(2147483647) = toInt64(1), toInt64(2147483647) != toInt64(1), toInt64(2147483647) < toInt64(1), toInt64(2147483647) <= toInt64(1), toInt64(2147483647) > toInt64(1), toInt64(2147483647) >= toInt64(1) 
CREATE TABLE test_01193_18429.table_3_230 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT dictGetChildren('hierarchy_flat_dictionary', 4);
SELECT '- analyzer -';
SELECT '5' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv4StringToNum('252.0.0.0')))
SELECT 41 AS `z` FROM `system`.`one` AS `__table1` GROUP BY 41 WITH TOTALS
CREATE TABLE test_6C316F5F6B765F516E41662E21327C35727E713F35323A6F483A45712A4A38714B5060526C273367(x UInt8) Engine=Memory;
CREATE ROW POLICY 02911_rowpolicy ON CLUSTER test_shard_localhost ON default.* USING 1 TO 02911_user;
CREATE TABLE test_35735468345F2341716E67704B3A3F6C59617364496B4B5E24444727345D48216E76793E495E7C54(x UInt8) Engine=Memory;
select [0, 0, 8, 5, 9, 1, 0, 4, 12, 6, 4, 0, 0, 12] = multiSearchAllPositionsCaseInsensitive(materialize('DbtStWzfvScJMGVPQEGkGFoS'), ['CSjYiEgihaqQDxZsOiSDCWXPrBdiVg', 'aQukOYRCSLiildgifpuUXvepbXuAXnYMyk', 'fvsCjmgv', 'TWZFV', 'VscjMgVpQ', 'dBtSTwZfVsCjmGVP', 'wqpMklzJiEvqRFnZYMfd', 'StwZfVScJ', 'j', 'wzfVsCjmGV', 'STWZfVS', 'kdrDcqSnKFvKGAcsjcAPEwUUGWxh', 'UtrcmrgonvUlLnzWXvZI', 'jMgvP']) from system.numbers limit 10;
SELECT a.pk, b.pk, a.dt, b.dt, toTypeName(a.pk), toTypeName(b.pk), toTypeName(materialize(a.dt)), toTypeName(materialize(b.dt)) FROM (SELECT toUInt8(number) > 0 as pk, toUInt8(number) as dt FROM numbers(3)) a ASOF LEFT JOIN (SELECT 1 as pk, toNullable(0) as dt) b USING(pk, dt) ORDER BY a.dt SETTINGS allow_experimental_analyzer = 0;
DROP QUOTA IF EXISTS q8_01297;
SELECT test_function(2, 2);
select makeDateTime64(1984, 1, 1, 0, 0, 70, 0, 9, 'UTC');
SELECT 'SELECT toUInt32(1) == N';
CREATE TABLE moving_sum_num (`k` String, `dt` DateTime, `v` UInt64) ENGINE = MergeTree ORDER BY (k, dt) SETTINGS index_granularity = 39799, min_bytes_for_wide_part = 681712452, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 27, merge_max_block_size = 19432, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 2078525, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 99152, primary_key_compress_block_size = 60698
ALTER TABLE replicated_mutations_empty_partitions DROP PARTITION '5';
CREATE TABLE nullable_key_without_final_mark (`s` Nullable(String)) ENGINE = MergeTree ORDER BY s SETTINGS allow_nullable_key = 1, write_final_mark = 0, index_granularity = 3709, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.9871368408203125, replace_long_file_name_to_hash = false, max_file_name_length = 77, merge_max_block_size = 14040, prefer_fetch_merged_part_size_threshold = 5958518413, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 4276562669, index_granularity_bytes = 23552577, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 25964, primary_key_compress_block_size = 44961
CREATE TABLE test_33533F236173265A2275727E786A696627324034314B3F335B63372751367E3B6A2B4820706E2D56(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_3js8ez67 
DROP DICTIONARY IF EXISTS test_g0lvg7te.test_dict_01080
INSERT INTO test_01193_18429.table_10_170 VALUES 
INSERT INTO test_01193_18429.table_10_841 VALUES 
DROP DATABASE IF EXISTS test_8eeswjr7 
DROP QUOTA q1_01297, q2_01297, q3_01297, q4_01297;
DROP TABLE IF EXISTS data_02771;
SELECT count() FROM t_cnf_fuzz WHERE (c8 AND c4 AND (NOT c9) AND (NOT c2)) OR ((NOT c2) AND c7 AND (NOT c0) AND (NOT c8) AND c8) OR (c2 AND c6) OR (c3 AND c4 AND (NOT c9) AND (NOT c2)) SETTINGS convert_query_to_cnf = 1
CREATE DATABASE IF NOT EXISTS test_3xxr8rr7 
CREATE DICTIONARY 01753_dictionary_db.direct_dictionary_simple_key_simple_attributes ( id UInt64, value_first String DEFAULT 'value_first_default', value_second String DEFAULT 'value_second_default' ) PRIMARY KEY id SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_simple_attributes_source_table')) LAYOUT(DIRECT());
INSERT INTO test_01193_18429.table_8_459 VALUES 
CREATE TABLE tbl (`dt` DateTime, `i` int, `j` String, `v` Float64) ENGINE = MergeTree PARTITION BY (toDate(dt), i % 2, length(j)) ORDER BY i SETTINGS index_granularity = 1, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 122, merge_max_block_size = 15842, prefer_fetch_merged_part_size_threshold = 984599503, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 45, min_merge_bytes_to_use_direct_io = 4451509116, index_granularity_bytes = 25486104, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 63646, primary_key_compress_block_size = 62187
CREATE TABLE test_4367264E752F3123204056433963525043593E6B7661314F21676B296A53752D504572212F533A6C(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_3_988 VALUES 
SELECT toBool('enabled');
select 'uniqCombinedState(10000)', blockSerializedSize(uniqCombinedState(number)) from (select number from system.numbers limit 10000);
CREATE TABLE test_593C4839276B77692C5A4E3F6D6A2A3C43322B535151245F59306C725A3C64512F394B4D7256374C(x UInt8) Engine=Memory;
REVOKE ALL ON *.* FROM AWD;
select regexpExtract(null, '([a-z])', materialize(1));
CREATE TABLE test_01193_18429.table_7_54 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_osmy88n0.test5 (`test` UInt8) ENGINE = TinyLog
CREATE TABLE t_sparse_1 (`id` UInt64, `v` Int64) ENGINE = MergeTree ORDER BY tuple() SETTINGS ratio_of_defaults_for_sparse_serialization = 0, index_granularity = 60281, min_bytes_for_wide_part = 0, replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 7075, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 67, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 4149809, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 14179, primary_key_compress_block_size = 49284
SELECT extractTextFromHTML('Hello <![CDATA[Hello <b>world</b>]]> world!');
CREATE TABLE test_6723676F2A643B5E6E4E5D3B55215A30702120257B675B21342D6D763C695E34552C21243A5F4153(x UInt8) Engine=Memory;
SELECT sum(x) == 9 FROM foo;
SELECT 'Running test stateless/01103_distributed_product_mode_local_column_renames.sql from pid=1705' 
CREATE DATABASE IF NOT EXISTS test_uge38r6t 
INSERT INTO tvs(k,t,tv) SELECT k, t, t FROM (SELECT toUInt32(number) AS k FROM numbers(1000)) keys CROSS JOIN (SELECT toUInt32(number * 3) as t FROM numbers(10000)) tv_times;
select 'dst_to_src', 16, 'dst', type, n, _part from dst order by type, n
SELECT 'Running test stateless/01056_create_table_as.sql from pid=1720' 
SELECT id, value FROM test_table;
SELECT '---- toDecimal64 ----';
SELECT YYYYMMDDToDate(20230911.1);
INSERT INTO test_01193_18429.table_1_798 VALUES 
CREATE TABLE test_4C595A5B69204A7B2F507A54347841404636406A533C3821642A647E66335B2A4B514C2464532350(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_7_856 VALUES 
ALTER TABLE dst_5 MODIFY SETTING max_replicated_merges_in_queue=0
detach table data
INSERT INTO src VALUES /* (-50, 1) */ 
CREATE DATABASE IF NOT EXISTS test_0du5pfi8 
SELECT enabledProfiles();
CREATE INDEX idx_tab4_2 ON tab4 (col4 DESC,col1);
SELECT '99' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffc0')))
SELECT 1,2,3,42
CREATE TABLE test_01193_18429.table_5_373 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO src_15 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 60
CREATE VIEW test_view_00597 AS SELECT * FROM test_00597;
SELECT materialize(1) % CAST(materialize(NULL), 'Nullable(Float32)');
CREATE TABLE test_3D62315749605F32415D30506E393D4247462D57433420323E423F473F414658273A6B2E29465E75(x UInt8) Engine=Memory;
select 1 from merge(currentDatabase(), '^data$') where _table in (NULL);
select path from system.parts where database='test_52czqgbq' and table='rmt1' and name='all_1_2_1'
SELECT * FROM Alpha FULL JOIN Beta ON Alpha.foo = Beta.foo ORDER BY foo;
select * from n where nc is null;
select v, variantElement(v, 'Float32') from format(JSONEachRow, 'v Variant(String, Float32)', '{"v" : null}, {"v" : "string"}, {"v" : 42.42}') format JSONEachRow;
SELECT throwIf((SELECT arraySort(groupArray(nm)) FROM mv) != (SELECT arraySort(groupArray(nm)) FROM dst)) FORMAT Null;
DETACH TABLE view_nulls_set;
CREATE TABLE test_527449487B5753446A312E204634556C4A54556C387B2C5E6F207660772A377C5E52406A3C724D2C(x UInt8) Engine=Memory;
DESCRIBE (SELECT test_table_join_1.*, test_table_join_2.*, test_table_join_3.* FROM test_table_join_1 INNER JOIN test_table_join_2 ON test_table_join_1.id = test_table_join_2.id INNER JOIN test_table_join_3 ON test_table_join_2.id = test_table_join_3.id);
CREATE TABLE test_756A50393263564934545C312E3824387D2B3D5F2F465A23235A4F60375167343B37705B347A3136(x UInt8) Engine=Memory;
SELECT 'abcdef' LIKE '%abc%def%';
DROP DATABASE IF EXISTS test_duvfej5n 
CREATE TABLE test_01193_18429.table_9_618 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_5_413 VALUES 
SELECT COUNT(*) FROM (SELECT * FROM test_table LIMIT 100);
DROP TABLE 02843_join;
select time FROM remote('127.0.0.{1,2}', currentDatabase(), tab) WHERE date = '2018-01-21' limit 2;
SELECT ['ab', 'c', 'de', '', 'hi'] AS arr, 5 AS len, arrayShingles(arr, len), arrayShingles(materialize(arr), len);
SELECT skewPop(NULL, NULL);
INSERT INTO test_01193_18429.table_9_918 VALUES 
SELECT nothingNull(NULL) as n, toTypeName(n);
SELECT k, count() AS c FROM (SELECT number, CASE WHEN number < 10 THEN 'hello' WHEN number < 50 THEN 'world' ELSE 'goodbye' END AS k FROM system.numbers LIMIT 100) GROUP BY k WITH TOTALS HAVING nullIf(c, 10) < 50 ORDER BY c;
SELECT multiIf((number % 2) = 0, [toInt64(1), toInt64(2)], (number % 3) = 0, [toUInt16(2), toUInt16(3)], [toUInt32(3), toUInt32(3)]) FROM system.numbers LIMIT 10;
SELECT arrayAll(x -> materialize(0), arrayMap(x -> toString(x), range(number))) FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/00901_joint_entropy.sql from pid=1722' 
SELECT test_table_join_1.id, test_table_join_1.value, test_table_join_2.id, test_table_join_2.value, test_table_join_3.id, test_table_join_3.value FROM test_table_join_1 RIGHT JOIN test_table_join_2 ON test_table_join_1.id = test_table_join_2.id LEFT JOIN test_table_join_3 ON test_table_join_2.id = test_table_join_3.id;
CREATE DATABASE IF NOT EXISTS test_v6nhhhyo 
CREATE TABLE test_01193_18429.table_5_549 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO src_9 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 96
CREATE TABLE test_01193_18429.table_4_94 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE ordinary_distinct (`low` UInt64, `medium` UInt64, `high` UInt64) ENGINE = MergeTree ORDER BY (low, medium) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.9116511940956116, replace_long_file_name_to_hash = false, max_file_name_length = 113, merge_max_block_size = 15341, prefer_fetch_merged_part_size_threshold = 9592371138, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 4347443583, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 80489, primary_key_compress_block_size = 54980
select DATE_DIFF(MONTH, toDate('2018-12-18'), toDate('2018-01-01'));
CREATE TABLE test (`id` UInt64, `v` Variant(UInt64, Array(Variant(String, UInt64)))) ENGINE = MergeTree ORDER BY id SETTINGS min_rows_for_wide_part = 1000000000, min_bytes_for_wide_part = 10000000000, index_granularity = 30609, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 2800, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 7937109, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 81448, primary_key_compress_block_size = 88740
CREATE TABLE test_01193_18429.table_7_276 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select val from lc_null_int8_0;
INSERT INTO test_01193_18429.table_3_728 VALUES 
INSERT INTO Alpha VALUES 
SELECT hopStart(NULL, NULL);
CREATE TABLE t (`d` Nullable(Date), `f1` Nullable(String), `f2` Nullable(String), `c` Nullable(Int64)) ENGINE = SummingMergeTree ORDER BY (f1, f2, d) SETTINGS allow_nullable_key = 1, index_granularity = 1, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 102, merge_max_block_size = 14839, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 22975199, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 50648, primary_key_compress_block_size = 61131
INSERT INTO test_01193_18429.table_8_141 VALUES 
SELECT 'SHOW CREATE TABLE 01902_db.t_merge';
select 0 = sequenceMatch('(?1)(?t==2)(?2)')(time, data = 1, data = 2) from sequence_test;
CREATE TABLE test_47325F6C682836402D3D276646267A43207D2C795A787A2940403A3F2C674029567E5C57555A6A75(x UInt8) Engine=Memory;
SELECT *, * APPLY toTypeName FROM ( SELECT a FROM (SELECT 1 :: Int32 as a) t1 RIGHT JOIN (SELECT 2 :: UInt32 as a) t2 USING (a) ) ORDER BY 1;
select 413 from test54378 where pk_date in ('2018-04-19');
SELECT age('minute', toDateTime('2014-10-26 00:00:00', 'Asia/Istanbul'), toDateTime('2014-10-27 00:00:00', 'Asia/Istanbul'));
SELECT date_diff(NULL, NULL, NULL);
SELECT 'Running test stateless/01496_signedness_conversion_monotonicity.sql from pid=1715' 
select 'GROUP BY WITH TOTALS LIMIT';
CREATE TABLE test_01193_18429.table_5_715 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT decrypt('aes-128-ctr', '[HIDDEN]') = ''
CREATE TABLE test_01193_18429.table_3_628 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 1_234;
INSERT INTO test_01193_18429.table_2_610 VALUES 
SELECT id, value, _database, _table FROM 02563_db.test_merge_table ORDER BY id;
SELECT countDigits(materialize(toDecimal32(4.2, 1))), countDigits(materialize(toDecimal64(4.2, 2))), countDigits(materialize(toDecimal128(4.2, 3)));
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), N == DT as r FORMAT CSV;
CREATE TABLE test_01193_18429.table_7_162 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT multiIf((number % 2) = 0, toInt32(1), (number % 3) = 0, toUInt32(2), toInt32(3)) FROM system.numbers LIMIT 10;
drop user if exists u_01889
SELECT concat('With ', materialize([[[(0, 0), (10, 0), (10, 10), (0, 10)]], [[(20, 20), (50, 20), (50, 50), (20, 50)],[(30, 30), (50, 50), (50, 30)]]] :: MultiPolygon));
SELECT toInt128(NULL);
INSERT INTO test_01193_18429.table_4_981 VALUES 
SELECT CAST(NULL AS Nullable(UInt64)) FROM system.numbers LIMIT 2 
SYSTEM STOP REPLICATION QUEUES mutations_cleaner_r2
SELECT foo.a FROM (SELECT 1 AS a, 2 AS b) AS foo RIGHT JOIN (SELECT 1 AS a, 2 AS b) AS bar ON (foo.b = bar.a) AND (foo.b = bar.b) ORDER BY foo.a;
INSERT INTO test_01193_18429.table_8_184 VALUES 
CREATE DATABASE IF NOT EXISTS test_rhdnflcw 
EXPLAIN json = 1, actions = 1, description = 0 SELECT x, y from numbers(2) array join [number, 1] as x, [number + 1] as y FORMAT TSVRaw 
INSERT INTO test_y9d6pdpj.t_async_insert FORMAT JSONCompactStringsEachRowWithNamesAndTypes
desc file('test_02149_external_schema_inference_test_r6b0wy2t.data', 'JSONAsString')
DROP DATABASE IF EXISTS test_moz0x6b4 
SELECT mapAdd(NULL, NULL);
SELECT DISTINCT toTypeName(obj) FROM t_json_11;
INSERT INTO test_table_10 VALUES 
CREATE TABLE test_3170796B55333E7C206C385175775E2F4D587D60517B3637736D68557176624D5B255853305C3837(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS collapsing_00682
INSERT INTO test_01193_18429.table_2_709 VALUES 
CREATE TABLE test_01193_18429.table_3_188 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE DATABASE IF NOT EXISTS test_dbzmd3ze 
SELECT 18
INSERT INTO test_01193_18429.table_4_964 VALUES 
DROP DATABASE IF EXISTS test_wqquyr1h 
optimize table test_01655_plan_optimizations_optimize_read_in_window_order_long_n_x final
SELECT toStartOfDay(toDateTime('2017-12-31 03:45:00', 'UTC'), 'UTC');
select (toInt128(-1) / toInt128(-1)) x, (toInt256(-1) / toInt128(-1)) y, toTypeName(x), toTypeName(y);
SELECT cutIPv6(IPv6StringToNum('2001:0DB8:AC10:FE01:FEED:BABE:CAFE:F00D'), 0, 4);
DESC file('/var/lib/clickhouse/user_files/02661_read_from_archive_test_fyi66vcq_targz_archive1.tar.gz :: 02661_read_from_archive_test_fyi66vcq_targz_data1.csv')
INSERT INTO type_json_src FORMAT JSONAsString 
INSERT INTO src_14 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 12
SELECT toYYYYMMDDhhmmss(NULL, NULL, NULL);
select format('{}{}{}', 'a', toFixedString('b', 1), 'c') == 'abc';
SELECT CASE WHEN 1 THEN toFixedString(col2, 16) WHEN (col1 % 3) = 0 THEN 'bar' ELSE col4 END FROM multi_if_check;
SELECT d4, f2, d4 + f2 FROM t ORDER BY f2;
SELECT * FROM system.numbers LIMIT 3 FORMAT Arrow
CREATE TABLE test_01193_18429.table_7_649 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_307A31283C4527297C7B4B51507747782553387E7C43617E702160613B2241477B50797E4844666E(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_lmrkotsm 
SELECT 'Running test stateless/02455_default_union_except_intersect.sh from pid=1715' 
INSERT INTO test_01193_18429.table_1_730 VALUES 
CREATE DICTIONARY 01681_database_for_flat_dictionary.flat_dictionary_simple_key_hierarchy ( id UInt64, parent_id UInt64 HIERARCHICAL ) PRIMARY KEY id SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_hierarchy_table')) LIFETIME(MIN 1 MAX 1000) LAYOUT(FLAT());
CREATE TABLE test_02908_r3_52 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_52', 'r3') ORDER BY tuple()
INSERT INTO test_01193_18429.table_6_260 VALUES 
insert into function file('02374_data1.jsonl') select number as x, 'str' as s from numbers(10);
select minMap(val) from values ('val Map(String, String)', (map('1', '1')), (map('1', '2')));
SELECT arrayExists(`x` -> (`x` IN ((SELECT '2') AS `_subquery211`)), [2]) FROM `system`.`one` GROUP BY '__unused_group_by_column'
SELECT length(groupUniqArray(100000)(v)) FROM group_uniq_arr_int GROUP BY id ORDER BY id;
CREATE TABLE test_446E234E7D32572C71203B5C207320243A344032442E5D5F48482678286D684321314D5D626F2B73(x UInt8) Engine=Memory;
INSERT INTO src VALUES /* (-19, 2) */ 
CREATE DATABASE IF NOT EXISTS test_6op5pgy9 
select 3 as x format JSONEachRow 
SELECT tupleElement(arrayJoin([(1, 1)]), 1) FROM A1 PREWHERE tupleElement((1, 1), 1) =1;
CREATE TABLE test_534D5A3D6D6B212F2D63264A266E6E3F332D342A6B5A342C557B612F247C2A264B4120782B753443(x UInt8) Engine=Memory;
SELECT COVAR_POP(NULL);
DROP TABLE IF EXISTS constraint_test_assumption;
DROP DATABASE IF EXISTS test_yh6e7tjv 
SELECT round(-1);
CREATE TABLE test_52273A74545D5D675032323A71294E7C796C3622713B294F415D6C47244A4D3955697843543B7652(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_mdygfdjt 
SELECT toYear(d) AS y, count() FROM ( SELECT today() AS d WHERE 0) GROUP BY y ORDER BY y ASC WITH FILL FROM 2019;
CREATE DATABASE IF NOT EXISTS test_e2pag32o 
CREATE DATABASE IF NOT EXISTS test_siourupx 
SET joined_subquery_requires_alias = 1;
SELECT greatest(toUInt8(1), toUInt8(intHash64(number))) FROM system.numbers LIMIT 2500000 FORMAT RowBinary
INSERT INTO test_bit_shift_left_string_integer VALUES
SELECT avgWeighted(x, w) FROM values('x UInt64, w UInt8', (0, 0), (1, 0));
INSERT INTO test_01193_18429.table_4_541 VALUES 
DROP TABLE IF EXISTS y;
INSERT INTO cannot_kill_query SELECT * FROM numbers(10000000)
SELECT 'stringJaccardIndexUTF8', s1, s2, stringJaccardIndexUTF8(s1, s2) FROM t ORDER BY *;
INSERT INTO test_01193_18429.table_3_724 VALUES 
DROP TABLE IF EXISTS memory_02184;
CREATE TABLE test_532A245A344937543057696E5F517235784321656D40612C29347729575D2C267E212878275C5F33(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_4_533 VALUES 
SELECT `data_01223`.`key` FROM `test_4zufzi3e`.`data_01223` ORDER BY `key` ASC
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c9) AND c9 AND (NOT c6)) OR ((NOT c2) AND c7 AND c7 AND (NOT c8) AND c0) OR (c0 AND c0 AND (NOT c6) AND c1 AND (NOT c1)) OR (c1) OR (c6 AND c9 AND (NOT c4)) OR (c4 AND (NOT c8) AND c0 AND (NOT c4) AND c2) SETTINGS convert_query_to_cnf = 1
INSERT INTO test_01193_18429.table_1_5 VALUES 
SELECT 'full';
INSERT INTO test_01193_18429.table_4_538 VALUES 
drop table largestTriangleThreeBucketsTestDecimal64Decimal64;
DROP DATABASE IF EXISTS test_ta0okt89 
SELECT sum(number) FROM numbers_mt(1000000) SETTINGS max_threads = 4, log_processors_profiles=true, log_queries=1, log_queries_min_type='QUERY_FINISH'; 
SELECT * FROM test WHERE '2020-10-15' <= timestamp ORDER BY timestamp;
SELECT `t1`.`a` AS `t1_a`, `t2`.`a` AS `t2_a` FROM `test_60hj7eta`.`source_table1` AS `t1` GLOBAL ALL INNER JOIN `t2` AS `t2` ON `t1_a` = `t2_a` LIMIT 1
SELECT database, name, total_rows, total_bytes FROM system.tables WHERE is_temporary AND name = '02271_temporary_table_show_rows_bytes';
SELECT 'Running test stateless/02921_bit_hamming_distance_big_int.sql from pid=1726' 
SELECT number % 2 ? materialize(['']) : materialize(['', '']) FROM system.numbers LIMIT 10;
select count() from x where _partition_id in (select partitionId(number + 1) from numbers(1));
CREATE TABLE test_70242B2A364754362730553D657B4B3F244B594B693269283D7759702C494831222C762A74597945(x UInt8) Engine=Memory;
CREATE TABLE test_2A4A245E4F6968334878443B275A785C3D735F376E5453425C34643C6A3B657827295D30392B752C(x UInt8) Engine=Memory;
select unbin('0011000100110000');
INSERT INTO test_01193_18429.table_2_512 VALUES 
SELECT indexOf(b, toDecimal64(0.4, 4)) FROM decimal;
SELECT toFloat64(999999999.999999999) as x, toDecimal128(x, 9), toDecimal128(-x, 9);
DROP TABLE IF EXISTS 01802_empsalary;
CREATE TABLE test_5932392C5A37686A7E2E474C55602A35325371766541305679437035732A547D7D4E744263573C44(x UInt8) Engine=Memory;
select 2 = position(materialize('abc'), 'bc');
SELECT 'Running test stateless/01746_long_zstd_http_compression_json_format.sh from pid=1714' 
DROP DATABASE IF EXISTS test_ayvgnfcc 
ALTER TABLE concurrent_alter_column ADD COLUMN c408 DOUBLE;
SELECT murmurHash2_32(1, 2, 3);
INSERT INTO r4 SELECT 61 % 10 = 4 ? 61 - 1 : 61
INSERT INTO r5 SELECT 53 % 10 = 5 ? 53 - 1 : 53
DROP DATABASE IF EXISTS test_yojyuh74 
CREATE TABLE IF NOT EXISTS replacing_mt (`x` String) ENGINE = ReplacingMergeTree ORDER BY x SETTINGS index_granularity = 9961, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 31, merge_max_block_size = 19087, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 28226842, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 93570, primary_key_compress_block_size = 43248
CREATE DATABASE IF NOT EXISTS test_jviitcb8 
CREATE TABLE test_01193_18429.table_3_992 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT arrayExists(`x` -> (`x` IN ((SELECT 1) AS `_subquery3051`)), [1]) FROM `system`.`one`
SELECT 'CREATE queries';
SELECT dictGetOrDefault('ssd_cache_dictionary', 'value', toUInt64(2), 2);
CREATE TABLE test_38643B5B7E20787B495D21512C213B7A745331773D7A6E575323257E34546D217E4C383366495A62(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_4_193 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT count() FROM pbs PREWHERE s = 0
INSERT INTO r4 SELECT 63 % 10 = 4 ? 63 - 1 : 63
CREATE TABLE test_33776C5E363E494A5728253D5629797B2D292043244A2E3F3C512E556F5B2727203B6C652D3E4032(x UInt8) Engine=Memory;
SELECT fuzzBits(toFixedString('', 200), 0.99) from numbers(128) FORMAT Null;
SELECT * FROM ( SELECT [dummy, dummy] AS dummy FROM system.one ) AS x ARRAY JOIN dummy JOIN system.one AS y ON x.dummy + 1 == y.dummy + 1;
DROP DATABASE IF EXISTS test_e52ktlqn 
INSERT INTO github_events SELECT * FROM gen LIMIT 100000;
with '2018-01-12 22:33:44.55' as s, toDateTime64(s, 6) as datetime64 SELECT fromUnixTimestampInJodaSyntax(datetime64, 'SSS', 'UTC');
SHOW CREATE test_dictionary_10_shards_nullable;
CREATE TABLE table_for_rename ( date Date, key UInt64, value1 String, value2 String, value3 String, CONSTRAINT cs_value1 CHECK toInt64(value1) < toInt64(value2), CONSTRAINT cs_value2 CHECK toInt64(value2) < toInt64(value3) ) ENGINE = MergeTree() PARTITION BY date ORDER BY key;
SELECT avgWeighted(x, w) FROM values('x Int8, w Float64', (4, 1), (1, 0), (10, 2));
CREATE TABLE test_74596A76685456595E46694D5A485A39524735537D667A5F61514D62284B3C766D713576655C3068(x UInt8) Engine=Memory;
select part_type, column, now()-modification_time < 10, modification_time - column_modification_time >= 3 from system.parts_columns where active and database = currentDatabase() and table = 'data_wide' order by column;
SELECT arrayElement(col1, 3) FROM test1_00395;
CREATE DATABASE IF NOT EXISTS test_iybvh79d 
SELECT CASE WHEN (number % 2) = 0 THEN toUInt16(1) WHEN (number % 3) = 0 THEN toInt16(2) ELSE toUInt32(3) END FROM system.numbers LIMIT 10;
SELECT multiIf((number % 2) = 0, toInt8(1), (number % 3) = 0, toUInt32(2), toUInt8(3)) FROM system.numbers LIMIT 10;
select name from system.databases where name like 'test_3eb2h3zx%' order by rand() limit 1
CREATE TABLE test_464D593349395136782D6E6F64742F3E6747554C377167744E6E6075736E283E5151262C724F5279(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_wzdg6hbs 
alter table many_mutations delete where y = 966 * 2 settings mutations_sync = 0;
DROP USER 02833_HTTP_WITH_SESSION_ID_USER_25955
SYSTEM FLUSH DISTRIBUTED dist;
INSERT INTO sample_00579_2 (x) SELECT number AS x FROM system.numbers LIMIT 2000;
CREATE TABLE test_752B265A33736771563C20772249516C5463655C6053446526457A682B6E737D65434A3A656B3A5C(x UInt8) Engine=Memory;
SELECT concat(materialize(42 :: Int32), materialize(144 :: UInt64));
SELECT CASE WHEN (number % 2) = 0 THEN [toInt32(1), toInt32(2)] WHEN (number % 3) = 0 THEN [toInt16(2), toInt16(3)] ELSE [toFloat64(3), toFloat64(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_7_262 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT '33' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:8000::')))
INSERT INTO test_01193_18429.table_2_841 VALUES 
CREATE TABLE merge_table_standard_delete (`id` Int32, `name` String) ENGINE = MergeTree ORDER BY id SETTINGS min_bytes_for_wide_part = 0, index_granularity = 51051, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 37, merge_max_block_size = 24474, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 55219, vertical_merge_algorithm_min_columns_to_activate = 95, min_merge_bytes_to_use_direct_io = 633233783, index_granularity_bytes = 14784435, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 24805, primary_key_compress_block_size = 10079
drop table if exists test_ins_arr_arr_arr;
select sum(abs(log2(exp2(x)) - x) < 1.0e-9) / count() from system.one array join range(1000) as x;
CREATE TABLE test_01193_18429.table_10_680 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 693962 AS u, toInt32(u) AS s, fromDaysSinceYearZero32(u), fromDaysSinceYearZero32(materialize(u)), fromDaysSinceYearZero32(s), fromDaysSinceYearZero32(materialize(s));
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (1 < 27 AND 103 > 0 ? 1 : 0)), throwIf(last != (1 < 27 AND 103 > 0 ? least(27 - 1, 1 + 103 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(27) LIMIT 1, 103);
ALTER TABLE ttl_table4 MODIFY SETTING max_replicated_merges_with_ttl_in_queue=0
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (27 < 51 AND 25 > 0 ? 27 : 0)), throwIf(last != (27 < 51 AND 25 > 0 ? least(51 - 1, 27 + 25 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(51) LIMIT 27, 25);
CREATE TABLE test_01193_18429.table_7_227 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_3C3927726D33266B6E523D544921235A383A72255E4955685571646A6F3F2779545F677D6A55756F(x UInt8) Engine=Memory;
create table funnel_test2 (uid UInt32 default 1,timestamp DateTime, event UInt32) engine=Memory;
DROP DATABASE IF EXISTS test_2cximzqi 
SELECT '47' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:fffe::')))
SELECT multiIf((number % 2) = 0, [toUInt16(1), toUInt16(2)], (number % 3) = 0, [toFloat32(2), toFloat32(3)], [toInt32(3), toInt32(3)]) FROM system.numbers LIMIT 10;
SELECT *, _table FROM merge(currentDatabase(), 'test_distributed_1') ORDER BY _table;
CREATE TABLE test_2B3745787947737064763628487A6A7A4C434E32646D3473463A7723257D4C29546456475E5C473B(x UInt8) Engine=Memory;
SYSTEM START MERGES t_json;
CREATE TABLE test_01193_18429.table_6_237 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_4_846 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE t1_00203 (k1 UInt32, k2 UInt32, k3 UInt32, val_t1 String) ENGINE=TinyLog;
CREATE DATABASE IF NOT EXISTS test_ehck42r5 
CREATE DATABASE IF NOT EXISTS test_ahkiibqc 
CREATE DICTIONARY datDictionary ( `blockNum` Decimal(10, 0), `eventTimestamp` DateTime64(9) ) PRIMARY KEY blockNum SOURCE(CLICKHOUSE(TABLE 'dat')) LIFETIME(MIN 0 MAX 1000) LAYOUT(FLAT());
SELECT range(number)[2 - number] FROM system.numbers LIMIT 10;
select case 1 when 1 then 'a' else 'b' end value;
INSERT INTO test_01193_18429.table_9_892 VALUES 
CREATE TABLE test_293468642D79416B3F35542D737D283C6766393043486D6333607D6E374023795E3664343E41354E(x UInt8) Engine=Memory;
SELECT id, name FROM join_table_race
INSERT INTO 02947_table_2 VALUES 
SELECT 'Running test stateless/02841_check_table_progress.sh from pid=1713' 
INSERT INTO test_01193_18429.table_1_825 VALUES 
SELECT format('The {0} to all questions is {1}.', 'answer', materialize(51 :: UInt64));
DROP TABLE deduplication_by_partition;
CREATE TABLE tsv_custom_null (id Nullable(UInt32)) ENGINE = Memory
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), N - toInt16(-1) as r FORMAT CSV;
DROP DATABASE IF EXISTS test_uu4rifsg 
SELECT multiIf(NULL, 2, 1, 3, 4);
CREATE TABLE test_01193_18429.table_3_563 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_3_55 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_23523F663E24623C6F2E61483170497C3C7C2E56484E47225B566F7E38364D246E4058415F2A5646(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_6_780 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_7C436F763958506B4367573F51454B5B5F5B31795B5148473321303C65582D614B597043793A6164(x UInt8) Engine=Memory;
SHOW CREATE PROFILE s7_01294;
SELECT 'Running test stateless/00573_shard_aggregation_by_empty_set.sql from pid=1720' 
SELECT count(*) FROM compression_codec_multiple_tiny_log;
SELECT 9, toFixedString('Hello', 10), bin(bitShiftRight(toFixedString('Hello', 10), 9));
SELECT t.x, l.s, r.s, toTypeName(l.s), toTypeName(r.s) FROM t AS l FULL JOIN nr AS r USING (x) ORDER BY t.x;
INSERT INTO test_01193_18429.table_4_57 VALUES 
EXPLAIN AST ALTER TABLE t MODIFY ORDER BY x;
CREATE TABLE test_02240_storage_policy (key UInt32, value String) Engine=MergeTree() ORDER BY key SETTINGS storage_policy='local_cache', min_bytes_for_wide_part = 1000000, compress_marks=false, compress_primary_key=false
insert into function file(data_02302.orc) select 1 as x settings engine_file_truncate_on_insert=1;
SELECT $$ value1 value2 value3 $$;
SELECT 'Running test stateless/02932_lwd_and_mutations.sql from pid=1726' 
SELECT subtractMinutes('2023-10-22', materialize(1)), subtractMinutes('2023-10-22 12:34:56.123', materialize(1));
DROP TABLE IF EXISTS t_map_null;
select bitmapToArray(bitmapSubsetInRange(bitmapBuild([1,5,7,9]), toUInt32(10), toUInt64(10)));
SELECT id, value FROM test_materialized_view ORDER BY id;
INSERT INTO test_01193_18429.table_8_960 VALUES 
ALTER TABLE test_table_9 MODIFY SETTING max_replicated_merges_in_queue=0
INSERT INTO replicated_table_detach_all1 VALUES 
CREATE TABLE test_01193_18429.table_5_844 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_ei0bcdpk 
SELECT soundex('MacDonald');
select v, variantElement(v, 'Bool') from format(TSV, 'v Variant(String, Bool)', '\\N\nTruee\nTrue') format TSV;
SELECT 'M';
SELECT 'other operators';
CREATE DICTIONARY flat_dictionary ( id UInt64, decimal_value Decimal256(5) ) PRIMARY KEY id SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dictionary_decimal_source_table')) LIFETIME(MIN 1 MAX 1000) LAYOUT(FLAT());
CREATE TABLE table_to_rename (`v` UInt64, `v1` UInt64) ENGINE = MergeTree ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0, index_granularity = 45814, ratio_of_defaults_for_sparse_serialization = 0.06975439190864563, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 6590, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 34, min_merge_bytes_to_use_direct_io = 3827429488, index_granularity_bytes = 5839731, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 13610, primary_key_compress_block_size = 67301
CREATE TABLE distinct_in_order (`a` int) ENGINE = MergeTree ORDER BY a SETTINGS index_granularity = 10, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.9116511940956116, replace_long_file_name_to_hash = false, max_file_name_length = 113, merge_max_block_size = 15341, prefer_fetch_merged_part_size_threshold = 9592371138, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 4347443583, index_granularity_bytes = 22832388, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 80489, primary_key_compress_block_size = 54980
SELECT extractAllGroups(NULL, 'worldworldworldwo\0ldworldworldworldwo\0ld'), fact_2_id, fact_3_id, fact_4_id FROM grouping_sets GROUP BY GROUPING SETS ( (sales_value), (fact_1_id, fact_2_id), ('wo\0ldworldwo\0ldworld'), (fact_3_id, fact_4_id)) ORDER BY fact_1_id DESC NULLS LAST, fact_1_id DESC NULLS FIRST, fact_2_id ASC, fact_3_id DESC NULLS FIRST, fact_4_id ASC;
alter table data_01900_2 update s = 'bar_38' where 1;
CREATE TABLE test_747B652A42254A72553B4821306F6427332462242A7D712C5A693B265A53353F2E25243C56202C30(x UInt8) Engine=Memory;
SELECT arrayFold((acc, x) -> (acc + (x * 2)), []::Array(Nullable(Int64)), toInt64(NULL));
SELECT '124' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ffff:ffff:ffff:fff0')))
DESCRIBE (SELECT count() OVER (PARTITION BY id, value ORDER BY id ASC, value DESC ROWS BETWEEN CURRENT ROW AND CURRENT ROW) FROM test_table);
SELECT multiIf((number % 2) = 0, toFloat64(1), (number % 3) = 0, toInt16(2), toInt32(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_1_91 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP DATABASE IF EXISTS test_j4e1hk6s 
SELECT multiIf((col1 % 2) = 0, ['foo', col3], (col1 % 3) = 0, [col4, 'bar'], [col6, col7]) FROM multi_if_check;
CREATE TABLE test_01193_18429.table_3_930 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_02908_r2_125 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_125', 'r2') ORDER BY tuple()
CREATE TABLE t10 (`a` UInt32, `b` UInt32) ENGINE = MergeTree PARTITION BY (intDiv(a, 2), intDiv(b, 3)) ORDER BY a SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 77, merge_max_block_size = 5221, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 76652, primary_key_compress_block_size = 22585
SELECT 55
DROP DATABASE IF EXISTS test_bz62lkdb 
DROP DATABASE IF EXISTS test_ymfn4oo5 
select * from dist_01223 order by key limit 1;
INSERT INTO test_01193_18429.table_3_852 VALUES 
EXPLAIN description = 0 SELECT day, count() AS s FROM test_table GROUP BY day SETTINGS optimize_aggregation_in_order = 0;
drop table if exists mv_01278_7;
select toRelativeHourNum(x1, 'Asia/Istanbul') from t1;
SELECT multiIf(1, col2, (col1 % 3) = 0, col3, toFixedString('baz', 16)) FROM multi_if_check;
select a2, b2 + 1 from tab1 any right join tab2 on b1 + 1 = a2 + 1 or a1 + 4 = b2 + 2 ORDER BY a2, b2 + 1;
WITH t AS ( SELECT number AS n FROM numbers(10000) ) SELECT count(*) FROM t AS a WHERE t.n < 5000;
SELECT JSONExtractBool('');
SELECT 'all' UNION SELECT 'all' UNION ALL SELECT 'all';
SELECT 'Running test stateless/01041_h3_is_valid.sql from pid=1718' 
select * from mv_table settings additional_table_filters={'mv_table' : 'x != 5'};
INSERT INTO test_01193_18429.table_5_409 VALUES 
DROP DATABASE IF EXISTS test_edww245x 
SYSTEM STOP FETCHES r2;
SELECT k FROM t2 LEFT SEMI JOIN rdb ON rdb.key == t2.k ORDER BY k;
SELECT 'Date' AS mysql_type, CAST('2021-02-03' AS DATE) AS result, toTypeName(result) AS native_type;
SELECT arrayReverseSplit(NULL, NULL);
CREATE TABLE test (`name` String, `time` Int64) ENGINE = MergeTree ORDER BY time SETTINGS index_granularity = 2850, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 8205, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 586161, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 16723894, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 92647, primary_key_compress_block_size = 49836
DROP DATABASE IF EXISTS test_8g14uja2 
CREATE INDEX idx_tab4_2 ON tab4 (col1,col4 DESC);
INSERT INTO r9 SELECT 79 % 10 = 9 ? 79 - 1 : 79
SELECT 'ALL LEFT | bs = 9';
INSERT INTO r7 SELECT 98
SELECT toWeek(toDate('2000-01-01'),0) AS w0, toWeek(toDate('2000-01-01'),1) AS w1, toWeek(toDate('2000-01-01'),2) AS w2, toWeek(toDate('2000-01-01'),3) AS w3, toWeek(toDate('2000-01-01'),4) AS w4, toWeek(toDate('2000-01-01'),5) AS w5, toWeek(toDate('2000-01-01'),6) AS w6, toWeek(toDate('2000-01-01'),7) AS w7;
CREATE TABLE test_34397D2A704342633C6E79422D2B2C45756D6B62576F757B2F2D4C5B64642370512D674669596157(x UInt8) Engine=Memory;
select 1 = isValidUTF8(toValidUTF8('\xE0\xC2\x80')) from system.numbers limit 10;
SELECT arrayExists(x -> 0, arrayMap(x -> toString(x), range(number))) FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_xarswqym 
SELECT toUInt64(1) IN (1234567890, 2345678901, 3456789012, 4567890123, 5678901234, 6789012345, 7890123456, 8901234567, 9012345678, 123456789) AS x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x FROM remote('127.0.0.2', system, one) SETTINGS max_query_size = 10000;
SHOW CREATE VIEW test_1602.v;
SELECT 0, 'Hello',bin(bitShiftLeft('Hello', 0));
select 'dictGetOrDefault', 'hashed_decimals' as dict_name, toUInt64(0) as k, dictGetOrDefault(dict_name, 'd32', k, toDecimal32(42, 4)), dictGetOrDefault(dict_name, 'd64', k, toDecimal64(42, 6)), dictGetOrDefault(dict_name, 'd128', k, toDecimal128(42, 1)), dictGetOrDefault(dict_name, ('d32', 'd64', 'd128'), k, (toDecimal32(42, 4), toDecimal64(42, 6), toDecimal128(42, 1)));
SELECT toString(toDateTime('2022-01-01 12:13:14'), CAST('UTC', 'Nullable(String)'));
CREATE TABLE test_21523820235D26777260533A7435697D5D72493A485A7368694171583A6D462D46536D6C66664E56(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_10_786 VALUES 
DROP TABLE IF EXISTS r10 SYNC;
CREATE DATABASE IF NOT EXISTS test_tk5d97tu 
INSERT INTO test_01193_18429.table_1_454 VALUES 
ATTACH TABLE r2
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c0)) OR (c2) SETTINGS convert_query_to_cnf = 1
SET timeout_overflow_mode='break';
SELECT 'Running test stateless/00057_join_aliases.sql from pid=1718' 
CREATE TABLE test_01193_18429.table_1_40 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_3_476 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_7_280 VALUES 
SELECT value FROM (SELECT 1 as value UNION ALL SELECT 1 UNION ALL SELECT 1);
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toUInt16(2) ELSE toFloat64(3) END FROM system.numbers LIMIT 10;
CREATE USER u5_01292 SETTINGS NONE;
CREATE TABLE test4 (`EventDate` Date) ENGINE = MergeTree PARTITION BY EventDate ORDER BY tuple() SETTINGS index_granularity = 36046, min_bytes_for_wide_part = 225511602, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 6, merge_max_block_size = 14961, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 11220378, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 88109, primary_key_compress_block_size = 48201
INSERT INTO mt VALUES /* (-39, 2) */ 
SELECT * FROM VALUES('x Decimal128(0)', (3));
INSERT INTO r8 SELECT 99
INSERT INTO min_if SELECT emptyArrayUInt8() AS arr, '' AS str, toInt32(0) AS int FROM system.numbers LIMIT 100000;
ALTER TABLE concurrent_alter_column ADD COLUMN c405 DOUBLE;
INSERT INTO test_01193_18429.table_7_71 VALUES 
DROP TABLE IF EXISTS test_table_4
select 15, * from test where value = 30
DESC nbagames SETTINGS describe_extend_object_types = 1
SELECT count() FROM (SELECT sum(x), avg(x) FROM (SELECT number % 3 AS x FROM numbers(10) GROUP BY x));
INSERT INTO test_01193_18429.table_5_1 VALUES 
SELECT stddevPop(toFloat64(a)), stddevPop(toFloat64(b)), stddevPop(toFloat64(c)) FROM decimal;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt64(1), toInt64(2)] WHEN (number % 3) = 0 THEN [toInt16(2), toInt16(3)] ELSE [toUInt16(3), toUInt16(3)] END FROM system.numbers LIMIT 10;
select 1 = isValidUTF8(toFixedString('\xF0\x90\xBF\x80', 4)) from system.numbers limit 10;
CREATE DATABASE IF NOT EXISTS test_oxw9e5b4 
CREATE TABLE test_01193_18429.table_7_526 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/01646_rewrite_sum_if.sql from pid=1714' 
drop table if exists test_ins_arr;
SELECT 'Running test stateless/02206_information_schema_show_database.sql from pid=1724' 
select toDateOrDefault(cast(19 as Int32));
CREATE TABLE test_3A612F7D32396B2E2B2D543766535528536F7C68735F363C482164304E433E442E2150565D655F56(x UInt8) Engine=Memory;
CREATE TABLE rep_fsync_r1 (`key` Int) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/rep_fsync', 'r1') ORDER BY key SETTINGS min_bytes_for_wide_part = 0, fsync_after_insert = 1, index_granularity = 25801, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 79, merge_max_block_size = 9385, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 853151, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 5985280, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 59185, primary_key_compress_block_size = 77080
CREATE TABLE test_01193_18429.table_8_925 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT h3GetUnidirectionalEdgeBoundary(1248204388774707199);
DROP TABLE ip_trie_source_table_01862;
SELECT 'Running test stateless/01457_create_as_table_function_structure.sql from pid=1705' 
CREATE TABLE test_01193_18429.table_3_549 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_5A414A68275257434A6C30733021463645666B426E534D7E617A2E5C2E2D31652C557C2164425F27(x UInt8) Engine=Memory;
SELECT age('quarter', toDate('2015-08-18', 'UTC'), toDate32('2015-11-18', 'UTC'), 'UTC');
SELECT dictGet('01685_database_for_cache_dictionary.cache_dictionary_complex_key_complex_attributes', 'value_first', (number, concat('id_key_', toString(number)))) as value_first, dictGet('01685_database_for_cache_dictionary.cache_dictionary_complex_key_complex_attributes', 'value_second', (number, concat('id_key_', toString(number)))) as value_second FROM system.numbers LIMIT 3;
CREATE TABLE test_01193_18429.table_3_169 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_5_425 VALUES 
CREATE TABLE smta (`k` Int64, `a` AggregateFunction(max, Int64), `city` SimpleAggregateFunction(max, LowCardinality(String))) ENGINE = SummingMergeTree ORDER BY k SETTINGS index_granularity = 4989, min_bytes_for_wide_part = 903614012, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 8558, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 19111, vertical_merge_algorithm_min_columns_to_activate = 95, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 16911696, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 71976, primary_key_compress_block_size = 25791
CREATE TABLE test_01193_18429.table_8_752 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT multiIf((number % 2) = 0, [toInt8(1), toInt8(2)], (number % 3) = 0, [toFloat32(2), toFloat32(3)], [toUInt8(3), toUInt8(3)]) FROM system.numbers LIMIT 10;
DROP TABLE polygon_dictionary_nullable_default_source_table;
EXPLAIN SYNTAX SELECT count() FROM t_02156_merge2 WHERE k = 3 AND notEmpty(v);
CREATE TABLE test_755A7226503E356D232A22793E5D732F3321684C2C3C4F62472A564E69783E227449735240293737(x UInt8) Engine=Memory;
SELECT intDiv(-1, number) FROM numbers(1, 10);
SELECT arrayShiftLeft(NULL, NULL, NULL);
CREATE TABLE test_01193_18429.table_10_733 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_table_4 VALUES 
SELECT concatWithSeparator('|', materialize(toFixedString('a', 1)), toFixedString('b', 1)) == 'a|b';
CREATE TABLE check_query_log (N UInt32,S String) Engine = Log;
SELECT tid();
select * from test_02302 where _file like '%1';
SELECT (i * i) != 0, (i / i) = 1 FROM decimal WHERE i > 0;
CREATE TABLE test_01193_18429.table_5_848 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_6_656 VALUES 
CREATE DATABASE IF NOT EXISTS test_0mvbx0tn 
CREATE INDEX idx_tab4_3 ON tab4 (col4 DESC,col1);
select toStartOfMinute(dt) dt_m, sum(cost) from projection_test_d group by dt_m;
SELECT toInt32(number * -1) * number y, toInt128(y), toInt256(y), toUInt256(y) FROM numbers_mt(10) ORDER BY number;
SELECT toDecimal32('-0.7', 2) AS x, toUInt16(x);
CREATE TABLE test_01193_18429.table_7_748 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01655_plan_optimizations_optimize_read_in_window_order_n_x ENGINE = MergeTree ORDER BY (n, x) SETTINGS index_granularity = 57658, min_bytes_for_wide_part = 416611715, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 17769, prefer_fetch_merged_part_size_threshold = 6587063142, vertical_merge_algorithm_min_rows_to_activate = 258186, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 9568292, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 89375, primary_key_compress_block_size = 56674 AS SELECT * FROM test_01655_plan_optimizations_optimize_read_in_window_order ORDER BY n ASC, x ASC
CREATE TABLE t0 (`pkey` UInt32, `c1` UInt32) ENGINE = MergeTree PRIMARY KEY pkey SETTINGS index_granularity = 30390, min_bytes_for_wide_part = 28919016, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 8149, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 29247908, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 21705, primary_key_compress_block_size = 55727
CREATE TABLE test_25377C515C2672256565453F2A5E61593D755C2828705271456548236C2F545A70657A4C22534C41(x UInt8) Engine=Memory;
CREATE TABLE test_2273395742702038413928684044485B2C7B373A26567B293F37646A653D59507B6E7C6C3E4C7721(x UInt8) Engine=Memory;
select 1 = positionCaseInsensitive(materialize(''), '');
SELECT item_id FROM (SELECT item_id FROM t GROUP BY item_id WITH TOTALS) AS l FULL OUTER JOIN (SELECT item_id FROM t GROUP BY item_id WITH TOTALS) AS r USING (item_id);
CREATE DATABASE IF NOT EXISTS test_t89kb4qo 
INSERT INTO r4 SELECT 29 % 10 = 4 ? 29 - 1 : 29
SELECT toUInt64(999999999) as x, toDecimal32(x, 0), toDecimal64(x, 0);
 WITH ( SELECT (event_time, event_time_microseconds) FROM system.part_log WHERE table = 'table_with_single_pk' AND database = currentDatabase() AND event_type = 'NewPart' ORDER BY event_time DESC LIMIT 1 ) AS time SELECT if(dateDiff('second', toDateTime(time.2), toDateTime(time.1)) = 0, 'ok', 'fail')
SELECT b FROM test PREWHERE c = 1;
CREATE TABLE test_71426A315428555A503552652E422A41486F7627273E402B795277525F537B705B58784C2C605726(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_b3ws7bby 
CREATE DATABASE IF NOT EXISTS test_bomons90 
SELECT 'Running test stateless/00189_time_zones_long.sql from pid=1720' 
select 'quarter', date_diff('quarter', toDate32('1969-12-25'), toDate32('1970-01-05'));
SELECT sqid(NULL, NULL);
set allow_experimental_object_type=0;
INSERT INTO r9 SELECT 26 % 10 = 9 ? 26 - 1 : 26
CREATE DATABASE IF NOT EXISTS test_ybgczm3n 
SELECT 'Running test stateless/02907_http_exception_json_bug.sh from pid=1724' 
INSERT INTO test_01193_18429.table_5_841 VALUES 
INSERT INTO t1 (c1,c2,c3) VALUES
INSERT INTO r10 SELECT 32 % 10 = 10 ? 32 - 1 : 32
DROP TABLE IF EXISTS test_guxq9hb0.mt
CREATE INDEX idx_tab3_2 ON tab3 (col3 DESC,col1);
OPTIMIZE TABLE test FINAL;
select 0 = multiMatchAny(materialize('rbrizgjbigvzfnpgmpkqxoqxvdj'), materialize(['ee', 'cohqnb', 'msol', 'yhlujcvhklnhuomy', 'ietn', 'vgmnlkcsybtokrepzrm', 'wspiryefojxysgrzsxyrluykxfnnbzdstcel', 'mxisnsivndbefqxwznimwgazuulupbaihavg', 'vpzdjvqqeizascxmzdhuq', 'pgvncohlxcqjhfkm', 'mbaypcnfapltsegquurahlsruqvipfhrhq', 'ioxjbcyyqujfveujfhnfdfokfcrlsincjbdt', 'cnvlujyowompdrqjwjx', 'wobwed', 'kdfhaoxiuifotmptcmdbk', 'leoamsnorcvtlmokdomkzuo', 'jjw', 'ogugysetxuqmvggneosbsfbonszepsatq'])) from system.numbers limit 10;
CREATE TABLE test_263748345258323D546F34673B68653125713468274E27706B6F7E512B5A696E21312734264E4E23(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_1_559 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE IF NOT EXISTS test_base_condition (`dt` DateTime, `id` int, `action` String, `referrer` String) ENGINE = MergeTree PARTITION BY dt ORDER BY id SETTINGS index_granularity = 44171, min_bytes_for_wide_part = 242497288, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 9611, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 281091680, index_granularity_bytes = 27896028, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 66107, primary_key_compress_block_size = 78955
CREATE TABLE test_01193_18429.table_2_239 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP USER IF EXISTS u2_01292_renamed;
select * from file('test_02167.Parquet', 'Parquet')
select * from file(dump1.sql, MySQLDump, 'x Nullable(Int32), z String') order by x, z settings input_format_skip_unknown_fields = 1
 CREATE TABLE distributed_00754 AS mergetree_00754 ENGINE = Distributed(test_unavailable_shard, test_21q4pfdv, mergetree_00754, jumpConsistentHash(a+b, 2)); 
SELECT -(NULL, NULL, 1);
SELECT CASE WHEN (number % 2) = 0 THEN [toInt32(1), toInt32(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toFloat64(3), toFloat64(3)] END FROM system.numbers LIMIT 10;
alter table src update A = 6 where 1 settings mutations_sync=2
select (1 ? (toInt32(0) as i) : toInt64(1)) = i;
CREATE TABLE test_01193_18429.table_9_757 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_02908_r2_20 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_20', 'r2') ORDER BY tuple()
INSERT INTO t64 SELECT (64 - toInt64(intExp2(16)) + number) AS x, x, x, x, x, x, x, x FROM numbers(65);
CREATE TABLE test_02908_r2_123 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_123', 'r2') ORDER BY tuple()
SYSTEM SYNC REPLICA replica1;
SELECT '2015-02-03' = materialize(toDate('2015-02-04'));
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toInt64(2) ELSE toUInt16(3) END FROM system.numbers LIMIT 10;
CREATE FUNCTION hasValidSizes17 AS (arr1, arr2) -> length(arr1) = length(arr2) AND arrayAll((x, y) -> length(x) = length(y), arr1, arr2);
CREATE DATABASE IF NOT EXISTS test_mmbjfi0a 
SELECT CAST('enabled', 'Bool');
DROP DATABASE IF EXISTS test_0qaqp54d 
SET enable_optimize_predicate_expression = 1;
CREATE TABLE test_01193_18429.table_3_31 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT toStartOfInterval(toDateTime(1549483055), INTERVAL 1 week, 'Asia/Istanbul');
SELECT 'Running test stateless/02501_limits_on_result_for_view.sql from pid=1722' 
select sipHash64(x) from tab sample 1/2 order by x, sipHash64(x) limit 5;
SELECT arrayMap(x -> range(x), range(number))[2] FROM system.numbers LIMIT 10;
DROP TABLE `$4@^7`;
CREATE DATABASE IF NOT EXISTS test_v3brwf2u 
SELECT t1.id, t1.value, t2.id, t2.value, t3.id, t3.value FROM test_table_join_1 AS t1 RIGHT JOIN test_table_join_2 AS t2 ON test_table_join_1.id = test_table_join_2.id RIGHT JOIN test_table_join_3 AS t3 ON test_table_join_2.id = test_table_join_3.id;
SELECT throwIf((SELECT count(), sum(nm) FROM tmp WHERE x=4) != (SELECT count(), sum(nm) FROM tmp WHERE x!=4)) FORMAT Null;
SELECT CASE WHEN (col1 % 2) = 0 THEN 'foo' WHEN (col1 % 3) = 0 THEN toFixedString(col3, 16) ELSE 'baz' END FROM multi_if_check;
create table t1 as remote('localhost', 'system.one');
INSERT INTO r5 SELECT 78
INSERT INTO table_1017_merge VALUES 
SELECT a.pk, b.pk, a.dt, b.dt, toTypeName(a.pk), toTypeName(b.pk), toTypeName(materialize(a.dt)), toTypeName(materialize(b.dt)) FROM (SELECT toUInt8(number) > 0 as pk, toNullable(toUInt8(number)) as dt FROM numbers(3)) a ASOF LEFT JOIN (SELECT 1 as pk, 2 as dt) b ON a.pk = b.pk AND a.dt >= b.dt ORDER BY a.dt;
select [1, 0, 0, 8, 6, 0, 7, 1, 3, 0, 0, 0, 0, 12] = multiSearchAllPositions(materialize('arbphzbbecypbzsqsljurtddve'), ['arbphzb', 'mnrboimjfijnti', 'cikcrd', 'becypbz', 'z', 'uocmqgnczhdcrvtqrnaxdxjjlhakoszuwc', 'bbe', '', 'bp', 'yhltnexlpdijkdzt', 'jkwjmrckvgmccmmrolqvy', 'vdxmicjmfbtsbqqmqcgtnrvdgaucsgspwg', 'witlfqwvhmmyjrnrzttrikhhsrd', 'pbzsqsljurt']) from system.numbers limit 10;
INSERT INTO test_01193_18429.table_4_321 VALUES 
CREATE TABLE test_01193_18429.table_8_305 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
drop table if exists tbl_8parts_3granules_rnd;
CREATE TABLE test_01193_18429.table_3_432 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP TABLE IF EXISTS semi_right_join;
CREATE TABLE test_01193_18429.table_1_475 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_6_398 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'Running test stateless/02552_analyzer_optimize_group_by_function_keys_crash.sql from pid=1722' 
select * from count_lc_test where arr <= [];
INSERT INTO test_01193_18429.table_7_212 VALUES 
CREATE TABLE test_306C3F46407B57215A7E475531514B2D325E2E5B566566465B4D5935636C2766577553537B4F4A30(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_pc7ivhyj 
select addMicroseconds(toDateTime64('1930-12-12 12:12:12.123456', 6), 1);
SELECT COUNT() FROM test WHERE key <= 100000 AND (NOT (toLowCardinality('') IN (SELECT '')));
SELECT toUUID(lc) as e, toTypeName(e) FROM t2;
CREATE TABLE xyz (`x` int, `y` int, `z` int) ENGINE = MergeTree PARTITION BY if(toUInt8(x), y, z) ORDER BY x SETTINGS index_granularity = 1, min_bytes_for_wide_part = 132449870, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 9351, prefer_fetch_merged_part_size_threshold = 1465857744, vertical_merge_algorithm_min_rows_to_activate = 802374, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 21261840, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 21255, primary_key_compress_block_size = 35635
SELECT multiIf(1, [col2, col3], (col1 % 3) = 0, [col4, col5], ['foo', 'bar']) FROM multi_if_check;
SELECT t.t.*, t.t.* APPLY toTypeName FROM nnna FULL JOIN nnnb USING (t.t.t);
CREATE TABLE test_tb (`a` UInt64, `s` String) ENGINE = MergeTree ORDER BY a SETTINGS index_granularity = 50006, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.8394487500190735, replace_long_file_name_to_hash = false, max_file_name_length = 78, merge_max_block_size = 11759, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 4389804, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 64854, primary_key_compress_block_size = 8554
select count() from system.projection_parts where database = currentDatabase() and table = 'tp_2' and name = 'pp' and active;
select 0 = multiSearchFirstIndexUTF8(materialize('ÃÂ¸ÃÂ¼ÃÂ°ÃÂÃÂµÃÂÃÂÃÂ´ÃÂÃÂ»ÃÂ³ÃÂ³ÃÂÃÂ¿ÃÂÃÂÃÂÃÂ¼ÃÂ´ÃÂ¶ÃÂ¿ÃÂÃÂ¿ÃÂ·ÃÂ¼ÃÂ²ÃÂ '), ['ÃÂ´ÃÂ°ÃÂ ÃÂ°ÃÂ ÃÂ¿ÃÂÃÂ»ÃÂÃÂ»ÃÂ°ÃÂ°ÃÂÃÂ³ÃÂÃÂ³ÃÂÃÂÃÂ¿ÃÂ½ÃÂ¶ÃÂ»ÃÂÃÂÃÂ¹ÃÂÃÂÃÂ±ÃÂÃÂÃÂ³', 'ÃÂ°ÃÂÃÂ¶ÃÂ¹ÃÂÃÂ²ÃÂ ÃÂµÃÂ', 'ÃÂ³ÃÂÃÂ´ÃÂÃÂ±ÃÂ²ÃÂ¸ÃÂ´ÃÂ½ÃÂ½ÃÂ¸ÃÂÃÂ´ÃÂ²ÃÂÃÂ¿ÃÂ¹ÃÂÃÂÃÂ³ÃÂ¼ÃÂµÃÂ³ÃÂÃÂ°ÃÂ¾ÃÂ¾ÃÂ¿ÃÂ½ÃÂ¶ÃÂ³ÃÂ¹', 'ÃÂÃÂ·ÃÂ»ÃÂ ÃÂÃÂµÃÂÃÂ¼ÃÂºÃÂÃÂÃÂ°ÃÂÃÂ¼ÃÂÃÂµÃÂµÃÂÃÂÃÂ¸ÃÂ°ÃÂ³ÃÂ¾ÃÂÃÂ±', 'ÃÂÃÂ°ÃÂ²ÃÂ±ÃÂ ÃÂ»ÃÂ¿ÃÂ¸ÃÂ»ÃÂ¸ÃÂ¹ÃÂÃÂÃÂ¸ÃÂ ÃÂÃÂÃÂ¹ÃÂÃÂ´ÃÂ³ÃÂÃÂÃÂ¾ÃÂ¹ÃÂ¹', 'ÃÂ²ÃÂ±ÃÂ³ÃÂ¾ÃÂÃÂ±ÃÂ·ÃÂ¸ÃÂÃÂÃÂ·ÃÂÃÂÃÂ´ÃÂµÃÂ½ÃÂÃÂÃÂÃÂ¾ÃÂÃÂ¸ÃÂ', 'ÃÂ¼ÃÂ°ÃÂ', 'ÃÂ´ÃÂÃÂÃÂ°ÃÂ¶ÃÂ ÃÂ´ÃÂÃÂÃÂ¸', 'ÃÂÃÂ¶ÃÂ»ÃÂ¼ÃÂÃÂÃÂ¶', 'ÃÂ¿ÃÂÃÂÃÂÃÂÃÂÃÂ³ÃÂÃÂ¼ÃÂ¼ÃÂ²', 'ÃÂÃÂµ', 'ÃÂ·ÃÂÃÂ°ÃÂÃÂ°ÃÂ¼ÃÂºÃÂÃÂºÃÂÃÂºÃÂ¸ÃÂ½ÃÂ¹ÃÂ¹ÃÂ¹', 'ÃÂ³ÃÂÃÂÃÂ¼ÃÂÃÂ¸ÃÂ·ÃÂÃÂ»ÃÂ²ÃÂ°ÃÂ·ÃÂÃÂ¶ÃÂÃÂ´ÃÂ¼ÃÂ ÃÂ½ÃÂµÃÂ»ÃÂÃÂ½ÃÂ¶ÃÂ±ÃÂ±ÃÂ´ÃÂÃÂÃÂÃÂ´ÃÂÃÂÃÂ½ÃÂÃÂÃÂ', 'ÃÂ½ÃÂ¹ÃÂÃÂ¸ÃÂ½ÃÂµÃÂÃÂÃÂºÃÂ ÃÂ½ÃÂ¿ÃÂÃÂ³ÃÂ½ÃÂ¹ÃÂ²ÃÂÃÂ²ÃÂÃÂ²ÃÂ»ÃÂ³ÃÂ¼ÃÂ¸ÃÂ½ÃÂÃÂÃÂ°ÃÂ ÃÂ³ÃÂÃÂ²ÃÂ²ÃÂ¶ÃÂ', 'ÃÂµÃÂÃÂ°ÃÂ³ÃÂÃÂ½ÃÂÃÂÃÂ»ÃÂÃÂ±ÃÂ±ÃÂ³ÃÂ±ÃÂµÃÂ»', 'ÃÂ¹ÃÂÃÂ¶ÃÂÃÂ³ÃÂ¾ÃÂ²ÃÂÃÂ¹ÃÂºÃÂ°ÃÂÃÂÃÂ¾ÃÂÃÂ´ÃÂ¾ÃÂºÃÂÃÂÃÂÃÂÃÂ¶ÃÂºÃÂÃÂ½ÃÂ¿ÃÂÃÂ¹ÃÂµÃÂ·ÃÂ·ÃÂÃÂÃÂÃÂ¾']) from system.numbers limit 10;
CREATE TABLE t_create_as_tuple ENGINE = MergeTree ORDER BY number SETTINGS index_granularity = 36912, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 18726, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10507375166, index_granularity_bytes = 22296983, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 47726, primary_key_compress_block_size = 90548 AS SELECT number, [('string', number)] AS array FROM numbers(3)
CREATE TABLE test_01193_18429.table_9_780 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE DATABASE IF NOT EXISTS test_9e99uiwf 
CREATE INDEX idx_tab4_4 ON tab4 (col4);
CREATE TABLE test_01193_18429.table_4_395 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_75635E662D65512C24375833597A32776F5C2C25542D6137347220673A7D5B656274637C6C444F3A(x UInt8) Engine=Memory;
with toDate('2023-01-09') as date_mon, date_mon - 1 as date_sun select toDayOfWeek(date_mon, 4), toDayOfWeek(date_sun, 4);
EXPLAIN indexes = 1, description=0 SELECT id FROM test_table WHERE id <= 10 AND value IN (SELECT toString(number) FROM numbers(5));
CREATE TABLE test_01193_18429.table_8_23 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE tab (`foo` Array(LowCardinality(String)), INDEX idx foo TYPE bloom_filter GRANULARITY 1) ENGINE = MergeTree PRIMARY KEY tuple() SETTINGS index_granularity = 22352, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 17999, prefer_fetch_merged_part_size_threshold = 728097204, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 667533303, index_granularity_bytes = 15560974, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 35411, primary_key_compress_block_size = 97867
insert into with_nullable values
SELECT t3.id = 'l', t3.not_id = 'l' FROM t1_00848 t1 LEFT JOIN t3_00848 t3 USING(id) ORDER BY t1.id, t3.id;
CREATE TABLE dst (`nm` Int16, CONSTRAINT c CHECK (xxHash32(nm) % 8) != 0) ENGINE = MergeTree ORDER BY nm SETTINGS old_parts_lifetime = 0, index_granularity = 24322, min_bytes_for_wide_part = 784575831, ratio_of_defaults_for_sparse_serialization = 0.30928289890289307, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 12236, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 5437178833, index_granularity_bytes = 19273587, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 18313, primary_key_compress_block_size = 79554
SELECT sleep(0.15) FROM `system`.`one`
SELECT 'JSONObjectEachRow';
detach table lc_small_dict;
SELECT dictGetChildren('01778_db.hierarchy_hashed_dictionary', number) FROM system.numbers LIMIT 6;
DROP TABLE IF EXISTS t_limit_mutations SYNC;
desc file('test_02149_external_schema_inference_test_r6b0wy2t.data', 'Protobuf') settings format_schema='test_02149/00825_protobuf_format_nested_in_nested:MessageType'
SELECT toUInt64(NULL, NULL, NULL);
SELECT 'Running test stateless/01474_decimal_scale_bug.sql from pid=1720' 
desc file(02404_data.CustomSeparated) settings schema_inference_hints='c1 UInt8';
SELECT a, b, c, d, e FROM t_fixed_prefix ORDER BY a, b, c, d, e SETTINGS optimize_read_in_order = 1
DROP DATABASE IF EXISTS test_54xgvhp0 
DROP TABLE IF EXISTS abc;
INSERT INTO r4 SELECT 2
BACKUP TABLE data TO S3('http://localhost:11111/test/backups/test_5zdpbe8j/use_same_s3_credentials_for_base_backup_base_inc_2', 'test', '[HIDDEN]') SETTINGS base_backup = S3('http://localhost:11111/test/backups/test_5zdpbe8j/use_same_s3_credentials_for_base_backup_base_inc_1', 'test', '[HIDDEN]')
alter table many_mutations delete where y = 484 * 2 settings mutations_sync = 0;
DROP DATABASE IF EXISTS test_94vyzpb5 
INSERT INTO collate_test2 VALUES 
SELECT 'Running test stateless/02124_buffer_insert_select_race.sh from pid=1713' 
ALTER TABLE prop_table MODIFY COLUMN column_codec REMOVE CODEC;
SELECT * FROM (SELECT 1 AS x) AS t1 ALL LEFT JOIN (SELECT 1 AS x) AS t2 ON t1.x = t2.x;
SELECT today() + INTERVAL 1::Int128 DAY - today();
CREATE TABLE test_342869207D68364C41604966454033626342396E6A695E2E456C6247333A28657854656731653364(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_2_441 VALUES 
CREATE TABLE test_01193_18429.table_7_515 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT dictGet('test_dictionary', 'value', toUInt64(0));
CREATE TABLE test_5549353632656D784E66243F5B5B6A795C756E4F7C5249437C7D7864224B734556415E4A7936296A(x UInt8) Engine=Memory;
drop table if exists data_write;
CREATE TABLE test_01193_18429.table_8_619 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DICTIONARY 01681_database_for_cache_dictionary.cache_dictionary_simple_key_hierarchy;
INSERT INTO test_01193_18429.table_1_303 VALUES 
INSERT INTO test_01193_18429.table_6_689 VALUES 
alter table many_mutations delete where y = 811 * 2 settings mutations_sync = 0;
CREATE TABLE test_4F68762F6E2E46773B5651733D5951482A77746222446D723D44275D55712E4F2E607324252A4368(x UInt8) Engine=Memory;
CREATE TABLE t (a String, b String) ENGINE = Memory;
INSERT INTO test_01193_18429.table_4_223 VALUES 
INSERT INTO test_01193_18429.table_6_296 VALUES 
CREATE TABLE test_404C3A366B6F5E7A3D325527602567616B61477A482D212B48617E58755E4C7C62377776752C594F(x UInt8) Engine=Memory;
create table dist_01850 (key Int) engine=Distributed('test_cluster_two_replicas_different_databases', /* default_database= */ '', data_01850, key);
DROP DATABASE IF EXISTS test_phrlcdth 
SELECT 'Running test stateless/01710_order_by_projections_complete.sql from pid=1714' 
INSERT INTO test SELECT number, 'test' FROM numbers(1000000);
CREATE TABLE test_6D7A3149417D67242E5A6A6125505F4C5F314A21603642533F736774455361474F56445B4D365A35(x UInt8) Engine=Memory;
CREATE VIEW numbers500k AS SELECT number FROM system.numbers LIMIT 500000;
DROP DATABASE IF EXISTS test_iowgetml 
INSERT INTO 02680_datetime_monotonic_check_lc VALUES 
SELECT 'SELECT N > toInt64(-1)';
CREATE TABLE test_01193_18429.table_1_234 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT '(backward, first_match, B)', id, sequenceNextNode('backward', 'first_match')(dt, action, 1, action = 'B') AS next_node FROM test_sequenceNextNode GROUP BY id ORDER BY id;
SELECT 'Running test stateless/02492_clickhouse_local_context_uaf.sh from pid=1714' 
SELECT 'Running test stateless/02100_limit_push_down_bug.sql from pid=1718' 
CREATE TABLE test_01193_18429.table_2_324 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_5_656 VALUES 
select s from buffer_table1 where x = 2;
SELECT number, groupArrayInsertAt(number, number) FROM (SELECT * FROM system.numbers LIMIT 10) GROUP BY number ORDER BY number;
ALTER TABLE concurrent_alter_column ADD COLUMN c388 DOUBLE;
CREATE TABLE test_5F277267496A485F3972716569655739323572422D6E4F3C7524252B4B52416921346D6D5C5C3257(x UInt8) Engine=Memory;
SET engine_file_empty_if_not_exists=0;
CREATE INDEX idx_tab2_3 ON tab2 (col1);
SELECT NOT 1;
SELECT 'Running test stateless/00515_gcd_lcm.sql from pid=1722' 
select 0 = isValidUTF8(toFixedString('\xED\xA0\x80', 3)) from system.numbers limit 10;
SELECT 255, 9223372036854775807, 255 = 9223372036854775807, 255 != 9223372036854775807, 255 < 9223372036854775807, 255 <= 9223372036854775807, 255 > 9223372036854775807, 255 >= 9223372036854775807, 9223372036854775807 = 255, 9223372036854775807 != 255, 9223372036854775807 < 255, 9223372036854775807 <= 255, 9223372036854775807 > 255, 9223372036854775807 >= 255 , toUInt8(255) = toUInt64(9223372036854775807), toUInt8(255) != toUInt64(9223372036854775807), toUInt8(255) < toUInt64(9223372036854775807), toUInt8(255) <= toUInt64(9223372036854775807), toUInt8(255) > toUInt64(9223372036854775807), toUInt8(255) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toUInt8(255), toUInt64(9223372036854775807) != toUInt8(255), toUInt64(9223372036854775807) < toUInt8(255), toUInt64(9223372036854775807) <= toUInt8(255), toUInt64(9223372036854775807) > toUInt8(255), toUInt64(9223372036854775807) >= toUInt8(255) , toUInt8(255) = toInt64(9223372036854775807), toUInt8(255) != toInt64(9223372036854775807), toUInt8(255) < toInt64(9223372036854775807), toUInt8(255) <= toInt64(9223372036854775807), toUInt8(255) > toInt64(9223372036854775807), toUInt8(255) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toUInt8(255), toInt64(9223372036854775807) != toUInt8(255), toInt64(9223372036854775807) < toUInt8(255), toInt64(9223372036854775807) <= toUInt8(255), toInt64(9223372036854775807) > toUInt8(255), toInt64(9223372036854775807) >= toUInt8(255) , toUInt16(255) = toUInt64(9223372036854775807), toUInt16(255) != toUInt64(9223372036854775807), toUInt16(255) < toUInt64(9223372036854775807), toUInt16(255) <= toUInt64(9223372036854775807), toUInt16(255) > toUInt64(9223372036854775807), toUInt16(255) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toUInt16(255), toUInt64(9223372036854775807) != toUInt16(255), toUInt64(9223372036854775807) < toUInt16(255), toUInt64(9223372036854775807) <= toUInt16(255), toUInt64(9223372036854775807) > toUInt16(255), toUInt64(9223372036854775807) >= toUInt16(255) , toUInt16(255) = toInt64(9223372036854775807), toUInt16(255) != toInt64(9223372036854775807), toUInt16(255) < toInt64(9223372036854775807), toUInt16(255) <= toInt64(9223372036854775807), toUInt16(255) > toInt64(9223372036854775807), toUInt16(255) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toUInt16(255), toInt64(9223372036854775807) != toUInt16(255), toInt64(9223372036854775807) < toUInt16(255), toInt64(9223372036854775807) <= toUInt16(255), toInt64(9223372036854775807) > toUInt16(255), toInt64(9223372036854775807) >= toUInt16(255) , toInt16(255) = toUInt64(9223372036854775807), toInt16(255) != toUInt64(9223372036854775807), toInt16(255) < toUInt64(9223372036854775807), toInt16(255) <= toUInt64(9223372036854775807), toInt16(255) > toUInt64(9223372036854775807), toInt16(255) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toInt16(255), toUInt64(9223372036854775807) != toInt16(255), toUInt64(9223372036854775807) < toInt16(255), toUInt64(9223372036854775807) <= toInt16(255), toUInt64(9223372036854775807) > toInt16(255), toUInt64(9223372036854775807) >= toInt16(255) , toInt16(255) = toInt64(9223372036854775807), toInt16(255) != toInt64(9223372036854775807), toInt16(255) < toInt64(9223372036854775807), toInt16(255) <= toInt64(9223372036854775807), toInt16(255) > toInt64(9223372036854775807), toInt16(255) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toInt16(255), toInt64(9223372036854775807) != toInt16(255), toInt64(9223372036854775807) < toInt16(255), toInt64(9223372036854775807) <= toInt16(255), toInt64(9223372036854775807) > toInt16(255), toInt64(9223372036854775807) >= toInt16(255) , toUInt32(255) = toUInt64(9223372036854775807), toUInt32(255) != toUInt64(9223372036854775807), toUInt32(255) < toUInt64(9223372036854775807), toUInt32(255) <= toUInt64(9223372036854775807), toUInt32(255) > toUInt64(9223372036854775807), toUInt32(255) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toUInt32(255), toUInt64(9223372036854775807) != toUInt32(255), toUInt64(9223372036854775807) < toUInt32(255), toUInt64(9223372036854775807) <= toUInt32(255), toUInt64(9223372036854775807) > toUInt32(255), toUInt64(9223372036854775807) >= toUInt32(255) , toUInt32(255) = toInt64(9223372036854775807), toUInt32(255) != toInt64(9223372036854775807), toUInt32(255) < toInt64(9223372036854775807), toUInt32(255) <= toInt64(9223372036854775807), toUInt32(255) > toInt64(9223372036854775807), toUInt32(255) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toUInt32(255), toInt64(9223372036854775807) != toUInt32(255), toInt64(9223372036854775807) < toUInt32(255), toInt64(9223372036854775807) <= toUInt32(255), toInt64(9223372036854775807) > toUInt32(255), toInt64(9223372036854775807) >= toUInt32(255) , toInt32(255) = toUInt64(9223372036854775807), toInt32(255) != toUInt64(9223372036854775807), toInt32(255) < toUInt64(9223372036854775807), toInt32(255) <= toUInt64(9223372036854775807), toInt32(255) > toUInt64(9223372036854775807), toInt32(255) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toInt32(255), toUInt64(9223372036854775807) != toInt32(255), toUInt64(9223372036854775807) < toInt32(255), toUInt64(9223372036854775807) <= toInt32(255), toUInt64(9223372036854775807) > toInt32(255), toUInt64(9223372036854775807) >= toInt32(255) , toInt32(255) = toInt64(9223372036854775807), toInt32(255) != toInt64(9223372036854775807), toInt32(255) < toInt64(9223372036854775807), toInt32(255) <= toInt64(9223372036854775807), toInt32(255) > toInt64(9223372036854775807), toInt32(255) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toInt32(255), toInt64(9223372036854775807) != toInt32(255), toInt64(9223372036854775807) < toInt32(255), toInt64(9223372036854775807) <= toInt32(255), toInt64(9223372036854775807) > toInt32(255), toInt64(9223372036854775807) >= toInt32(255) , toUInt64(255) = toUInt64(9223372036854775807), toUInt64(255) != toUInt64(9223372036854775807), toUInt64(255) < toUInt64(9223372036854775807), toUInt64(255) <= toUInt64(9223372036854775807), toUInt64(255) > toUInt64(9223372036854775807), toUInt64(255) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toUInt64(255), toUInt64(9223372036854775807) != toUInt64(255), toUInt64(9223372036854775807) < toUInt64(255), toUInt64(9223372036854775807) <= toUInt64(255), toUInt64(9223372036854775807) > toUInt64(255), toUInt64(9223372036854775807) >= toUInt64(255) , toUInt64(255) = toInt64(9223372036854775807), toUInt64(255) != toInt64(9223372036854775807), toUInt64(255) < toInt64(9223372036854775807), toUInt64(255) <= toInt64(9223372036854775807), toUInt64(255) > toInt64(9223372036854775807), toUInt64(255) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toUInt64(255), toInt64(9223372036854775807) != toUInt64(255), toInt64(9223372036854775807) < toUInt64(255), toInt64(9223372036854775807) <= toUInt64(255), toInt64(9223372036854775807) > toUInt64(255), toInt64(9223372036854775807) >= toUInt64(255) , toInt64(255) = toUInt64(9223372036854775807), toInt64(255) != toUInt64(9223372036854775807), toInt64(255) < toUInt64(9223372036854775807), toInt64(255) <= toUInt64(9223372036854775807), toInt64(255) > toUInt64(9223372036854775807), toInt64(255) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toInt64(255), toUInt64(9223372036854775807) != toInt64(255), toUInt64(9223372036854775807) < toInt64(255), toUInt64(9223372036854775807) <= toInt64(255), toUInt64(9223372036854775807) > toInt64(255), toUInt64(9223372036854775807) >= toInt64(255) , toInt64(255) = toInt64(9223372036854775807), toInt64(255) != toInt64(9223372036854775807), toInt64(255) < toInt64(9223372036854775807), toInt64(255) <= toInt64(9223372036854775807), toInt64(255) > toInt64(9223372036854775807), toInt64(255) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toInt64(255), toInt64(9223372036854775807) != toInt64(255), toInt64(9223372036854775807) < toInt64(255), toInt64(9223372036854775807) <= toInt64(255), toInt64(9223372036854775807) > toInt64(255), toInt64(9223372036854775807) >= toInt64(255) 
CREATE INDEX idx_tab4_0 ON tab4 (col0,col4 DESC);
CREATE TABLE test_01193_18429.table_6_333 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT CAST(5 AS IntervalQuarter);
drop table if exists test
select format('{}{}{}', materialize('a'), 'b', 'c') == 'abc' from system.numbers limit 5;
CREATE TABLE test_01193_18429.table_1_240 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_4C733E2C772773677C3A353D2D6255214E2D5A5A41653B66246C5C53467A7C6531426A2C2D635965(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_7hs8zoar 
select 3 = position('abcdefgh', materialize('cdefgh')) from system.numbers limit 129;
INSERT INTO r10 SELECT 79
INSERT INTO test_01193_18429.table_10_129 VALUES 
SYSTEM START MERGES ttl_table;
select 1 = sequenceCount('(?2)(?3)(?1)')(time, data = 0, data = 1, data = 2, data = 3) from sequence_test;
SELECT a, b, c FROM t_fixed_prefix WHERE bitNot(a) = 1 AND bitNot(c) = 1 ORDER BY a, b, c SETTINGS optimize_read_in_order = 1
SELECT arrayDistinct(groupArray(dictGetFloat32('db_01501.cache_dict', 'Float32_', toUInt64(number)))) from numbers(10);
SELECT 'uniqCombined(12)(round(toFloat32()))';
EXPLAIN SYNTAX SELECT uniq(alias_of_a) FROM (SELECT DISTINCT a as alias_of_a FROM test_rewrite_uniq_to_count) t settings allow_experimental_analyzer=0;
SELECT multiIf((number % 2) = 0, [toInt16(1), toInt16(2)], (number % 3) = 0, [toUInt16(2), toUInt16(3)], [toInt16(3), toInt16(3)]) FROM system.numbers LIMIT 10;
SELECT current_timestamp();
INSERT INTO src_0 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 5
CREATE INDEX idx_tab4_3 ON tab4 (col3);
SELECT any([[0, 1], [2, 3]]) AS `k` FROM numbers(10)
SELECT toInt8(NULL);
select format('{}{}', 'a', materialize('b')) == 'ab' from system.numbers limit 5;
SELECT toUInt32(1) AS x, 'text' AS y, toDate('2020-01-01') AS z FORMAT CustomSeparatedWithNamesAndTypes SETTINGS format_custom_row_before_delimiter='<row_before_delimiter>', format_custom_row_after_delimiter='<row_after_delimieter>\n', format_custom_row_between_delimiter='<row_between_delimiter>\n', format_custom_result_before_delimiter='<result_before_delimiter>\n', format_custom_result_after_delimiter='<result_after_delimiter>\n', format_custom_field_delimiter='<field_delimiter>', format_custom_escaping_rule='CSV'
CREATE TABLE derived_metrics_local (`timestamp` DateTime, `bytes` UInt64) ENGINE = MergeTree PARTITION BY toYYYYMMDD(timestamp) ORDER BY (toStartOfHour(timestamp), timestamp) TTL toStartOfHour(timestamp) + toIntervalHour(1) SETTINGS min_bytes_for_wide_part = 0, index_granularity = 937, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 14356, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 856346, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 213512729, index_granularity_bytes = 16782130, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 73221, primary_key_compress_block_size = 66198
CREATE DATABASE IF NOT EXISTS test_piw8e8fv 
ALTER TABLE concurrent_alter_column ADD COLUMN c487 DOUBLE;
SELECT 'Running test stateless/01657_array_element_ubsan.sql from pid=1714' 
SELECT 'Running test stateless/02721_url_cluster.sql from pid=1722' 
SELECT * FROM na FULL JOIN nb USING (x);
SELECT toFloat64(99999999.9) as x, toDecimal32(x, 1), toDecimal32(-x, 1), toDecimal64(x, 1), toDecimal64(-x, 1);
INSERT INTO test_01193_18429.table_5_834 VALUES 
SELECT *, * APPLY toTypeName FROM ( SELECT * FROM (SELECT 1 :: Int32 as a) t1 FULL JOIN (SELECT 2 :: UInt32 as key) t2 ON t1.a = t2.key ) ORDER BY 1;
SELECT 12,toFixedString('Hello', 10), bin(bitShiftLeft(toFixedString('Hello', 10), 12));
CREATE TABLE test_01193_18429.table_4_827 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
drop table if exists non_const_needle;
INSERT INTO table_gcd_codec_date SELECT number FROM system.numbers LIMIT 50;
SELECT countIf(explain like '%COMMA%' OR explain like '%CROSS%'), countIf(explain like '%INNER%') FROM ( EXPLAIN QUERY TREE SELECT t1.a FROM t1, t2, t3, t4 WHERE t3.a = t1.a AND t3.a = t2.a AND t3.a = t4.a SETTINGS allow_experimental_analyzer = 1);
DROP TABLE fl_interval;
alter table many_mutations delete where y = 629 * 2 settings mutations_sync = 0;
select 0 = position('abc', materialize('bcdefgh'));
CREATE DATABASE IF NOT EXISTS test_zoczfe66 
SELECT CASE WHEN (number % 2) = 0 THEN toUInt16(1) WHEN (number % 3) = 0 THEN toUInt16(2) ELSE toInt16(3) END FROM system.numbers LIMIT 10;
SELECT count() FROM lc_nullable WHERE has(u64, 100);
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toUInt64(3) END FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/02384_nullable_low_cardinality_as_dict_in_arrow.sql from pid=1713' 
SELECT CASE WHEN (number % 2) = 0 THEN toFloat32(1) WHEN (number % 3) = 0 THEN toInt16(2) ELSE toInt32(3) END FROM system.numbers LIMIT 10;
CREATE INDEX idx_tab2_3 ON tab2 (col1,col0 DESC);
SELECT arrayStringConcat(arr, '; ') FROM (SELECT materialize([toDate('2021-10-01'), toDate('2021-10-02')]) AS arr);
SELECT min(n*n * 2), min(2 * n*n), min(n*n / 2), min(1 / n*n) FROM (SELECT number n FROM numbers(10));
SELECT intDivOrZero(toDecimal64(4.4, 2), toDecimal256(2.2, 2));
SELECT 'Running test stateless/02096_totals_global_in_bug.sql from pid=1713' 
set optimize_move_to_prewhere = 0;
CREATE TABLE test_58495E7E2150693C4E37643970227769576272587341634B5F6D5D295B48687847405E2C332A6E6B(x UInt8) Engine=Memory;
CREATE TABLE test_7C5E6934696E6B47724069647162327B3954514A306352342D5276733873453B4E686F5B555B7B3B(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_8_773 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (7 < 84 AND 41 > 0 ? 7 : 0)), throwIf(last != (7 < 84 AND 41 > 0 ? least(84 - 1, 7 + 41 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(84) LIMIT 7, 41);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (62 < 21 AND 100 > 0 ? 62 : 0)), throwIf(last != (62 < 21 AND 100 > 0 ? least(21 - 1, 62 + 100 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(21) LIMIT 62, 100);
select makeDateTime64(1991, 8, 24, 21, 4, 0, 1234, 8, 'CET');
SELECT 'https://www.clickhouse.com/' AS s, REGEXP_REPLACE(s, '^https?://(?:www\.)?([^/]+)/.*$', '\1');
DROP TABLE IF EXISTS secure2;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (81 < 24 AND 105 > 0 ? 81 : 0)), throwIf(last != (81 < 24 AND 105 > 0 ? least(24 - 1, 81 + 105 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(24) LIMIT 81, 105);
select round(1000 * ngramSearchUTF8('', 'ÃÂ°ÃÂ±ÃÂ²'));
insert into t2_local values 
OPTIMIZE TABLE src_11
INSERT INTO r7 SELECT 61 % 10 = 7 ? 61 - 1 : 61
CREATE TABLE old_partition_key (sd Date, dh UInt64, ak UInt32, ed Date) ENGINE=MergeTree(sd, dh, (ak, ed, dh), 8192);
select v, variantElement(v, 'Int32') from format(TSV, 'v Variant(String, Int32, Int64)', '\\N\nstring\n-1\n0\n10000000000\n42d42') format TSV;
SELECT * FROM arrow_types3 ORDER BY int8
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 40993, 500 settings ignore_materialized_views_with_dropped_target_table=1
DROP ROLE r1_01293, r2_01293;
CREATE DATABASE IF NOT EXISTS test_b279cvra 
DROP DATABASE IF EXISTS test_cfjo6rt9 
create table test_02152 (x UInt32, y String, z Array(UInt32), t Tuple(UInt32, String, Array(UInt32))) engine=File('CustomSeparated') settings format_custom_field_delimiter='<field_delimiter>', format_custom_row_before_delimiter='<row_start>', format_custom_row_after_delimiter='<row_end_delimiter>', format_custom_escaping_rule='CSV';
SELECT arrayExists(x -> 1, range(number)) FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_x2q94xch 
select countSubstringsCaseInsensitive('aaaa', 'AA');
select [0, 0, 6, 1, 1, 0, 0, 1, 2, 0, 0, 0, 0, 0] = multiSearchAllPositions(materialize('vghzgedqpnqtvaoonwsz'), ['mfyndhucfpzjxzaezny', 'niejb', 'edqpnqt', '', 'v', 'kivdvealqadzdatziujdnvymmia', 'lvznmgwtlwevcxyfbkqc', 'vghzge', 'gh', 'tbzle', 'vjiqponbvgvguuhqdijbdeu', 'mshlyabasgukboknbqgmmmj', 'kjk', 'abkeftpnpvdkfyrxbrihyfxcfxablv']) from system.numbers limit 10;
DROP DATABASE IF EXISTS test_24wfggeo 
 INSERT INTO dictdb_01076.table_datarace VALUES 
DROP DATABASE IF EXISTS test_h2gxtdt1 
INSERT INTO regex_test_table VALUES 
CREATE DICTIONARY dict_sharded (key UInt64, v0 UInt16) PRIMARY KEY key SOURCE(CLICKHOUSE(TABLE 'dict_data')) LIFETIME(MIN 0 MAX 0) LAYOUT(HASHED(SHARDS 32));
CREATE TABLE test_7746593121264D5E776523554E3E76534B302E7B7B6C546732375535582A7A4D6F2B4550713E4F6B(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_0h7ukkv6 
SELECT * FROM (SELECT arrayMap(x -> (x, nullIf(x, 3)), range(number)) AS x FROM system.numbers LIMIT 10) WHERE length(x) % 2 = 0;
SELECT h3EdgeLengthKm(1);
select key, arrayJoin(n.x) as val from tab_00612 where (key, val) in (1, 1);
INSERT INTO mv_source VALUES 
DROP DATABASE IF EXISTS test_qgkkqzb9 
SELECT 'Running test stateless/01779_quantile_deterministic_msan.sql from pid=1724' 
SELECT isNull(b), isNotNull(b) FROM decimal WHERE a = toDecimal32(5.5, 1);
DROP TABLE IF EXISTS arrow_types6
DROP DATABASE IF EXISTS test_8yvdjyfm 
SELECT toDecimal64(number, 5) / 100 as x, roundDown(x, [4, 5, 6]) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_5_254 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_7_731 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP TABLE buffer_00763_2
CREATE DATABASE IF NOT EXISTS test_2st7oayr 
SELECT CASE WHEN (number % 2) = 0 THEN [toInt64(1), toInt64(2)] WHEN (number % 3) = 0 THEN [toInt64(2), toInt64(3)] ELSE [toInt8(3), toInt8(3)] END FROM system.numbers LIMIT 10;
INSERT INTO nullable_00457 SELECT toString(number), number % 3 = 1 ? toString(number) : NULL, arrayMap(x -> x % 2 = 1 ? x : NULL, range(number)) FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_vzofbvhr 
select tuple(number + 1) > tuple(toNullable(number)) from numbers(1);
select 1 = multiSearchAny(materialize('abcdefgh'), ['gh']);
CREATE TABLE test_01193_18429.table_1_180 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select '-- www';
INSERT INTO test_02908_r1_60 SELECT rand64() FROM numbers(5);
CREATE TABLE test_335C6545736C54285F3A6F5C776E362C672E22672732667D563E734779245C795762683D4646254B(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_7_220 VALUES 
EXPLAIN QUERY TREE SELECT b + 10, a FROM column_swap_test_test WHERE b = 0 SETTINGS allow_experimental_analyzer = 1;
CREATE TABLE test_01193_18429.table_8_412 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT addHours(materialize('2023-10-22'), materialize(1)), addHours(materialize('2023-10-22 12:34:56.123'), materialize(1));
SELECT multiIf((col1 % 2) = 0, [col2, col3], (col1 % 3) = 0, ['foo', col5], ['foo', 'bar']) FROM multi_if_check;
CREATE TABLE test_4F2922677347423164683854427D2A45686E777021225B21513F4345722921606D6C7D593067623E(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_10_738 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_f0agtxj3 
SELECT arraySort(arrayIntersect([1, 2, 3]::Array(UInt256), [2, 3, 4]::Array(Int128)));
CREATE DATABASE IF NOT EXISTS test_bk76swvp 
CREATE TABLE test_02908_r3_219 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_219', 'r3') ORDER BY tuple()
SELECT `x` FROM `test_33excl4a`.`t4` ORDER BY `x` ASC
CREATE TABLE test_01193_18429.table_9_887 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE data_02021 (`key` Int) ENGINE = MergeTree ORDER BY key SETTINGS index_granularity = 4807, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 23069, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 126309, vertical_merge_algorithm_min_columns_to_activate = 43, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 6151961, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 60087, primary_key_compress_block_size = 39909
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (11 < 23 AND 28 > 0 ? 11 : 0)), throwIf(last != (11 < 23 AND 28 > 0 ? least(23 - 1, 11 + 28 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(23) LIMIT 11, 28);
DROP DATABASE IF EXISTS test_i4xlgbe1 
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt16(1), toUInt16(2)] WHEN (number % 3) = 0 THEN [toFloat64(2), toFloat64(3)] ELSE [toFloat64(3), toFloat64(3)] END FROM system.numbers LIMIT 10;
SELECT arrayJoin(CAST(['hello', 'world'] AS Array(FixedString(5)))) LIKE 'world';
INSERT INTO dist_02482 VALUES 
SELECT s, arr, a, num FROM arrays_test ARRAY JOIN arr AS a, arrayEnumerate(arr) AS num;
SELECT has([(a, b), (c, d)], (a, b)) FROM (SELECT materialize(1) AS a, materialize(2) AS b, materialize(3) AS c, 4 AS d);
SELECT tryBase58Decode(NULL);
SELECT id AS using_id, toTypeName(using_id), t1.id AS t1_id, toTypeName(t1_id), t1.value AS t1_value, toTypeName(t1_value), t2.id AS t2_id, toTypeName(t2_id), t2.value AS t2_value, toTypeName(t2_value), t3.id AS t3_id, toTypeName(t3_id), t3.value AS t3_value, toTypeName(t3_value) FROM test_table_join_1 AS t1 RIGHT JOIN test_table_join_2 AS t2 USING (id) INNER JOIN test_table_join_3 AS t3 USING(id);
CREATE TABLE test_5E2B6F25513844394646327554774729582844576072544C7C33612768405A2C524C454374674A65(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_2_949 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_4_513 VALUES 
INSERT INTO t_limit_mutations VALUES 
DROP USER IF EXISTS u1_01292, u2_01292, u3_01292, u4_01292, u5_01292, u6_01292, u7_01292, u8_01292, u9_01292;
CREATE TABLE test_69744D2420455D2E7C263C617A32746A6554245B42693A5F66214B2A2057594B6876367351456A22(x UInt8) Engine=Memory;
SET max_joined_block_size_rows = 65505;
SELECT arrayJoin(c) FROM decimal;
CREATE TABLE test_64605561605C582F24692967635558752D62617D5A663D523E20516F275E606D5D71292F20657B38(x UInt8) Engine=Memory;
SELECT multiIf((col1 % 2) = 0, [col2, 'bar'], (col1 % 3) = 0, ['foo', col5], ['foo', 'bar']) FROM multi_if_check;
SELECT 128, 4294967296, 128 = 4294967296, 128 != 4294967296, 128 < 4294967296, 128 <= 4294967296, 128 > 4294967296, 128 >= 4294967296, 4294967296 = 128, 4294967296 != 128, 4294967296 < 128, 4294967296 <= 128, 4294967296 > 128, 4294967296 >= 128 , toUInt8(128) = toUInt64(4294967296), toUInt8(128) != toUInt64(4294967296), toUInt8(128) < toUInt64(4294967296), toUInt8(128) <= toUInt64(4294967296), toUInt8(128) > toUInt64(4294967296), toUInt8(128) >= toUInt64(4294967296), toUInt64(4294967296) = toUInt8(128), toUInt64(4294967296) != toUInt8(128), toUInt64(4294967296) < toUInt8(128), toUInt64(4294967296) <= toUInt8(128), toUInt64(4294967296) > toUInt8(128), toUInt64(4294967296) >= toUInt8(128) , toUInt8(128) = toInt64(4294967296), toUInt8(128) != toInt64(4294967296), toUInt8(128) < toInt64(4294967296), toUInt8(128) <= toInt64(4294967296), toUInt8(128) > toInt64(4294967296), toUInt8(128) >= toInt64(4294967296), toInt64(4294967296) = toUInt8(128), toInt64(4294967296) != toUInt8(128), toInt64(4294967296) < toUInt8(128), toInt64(4294967296) <= toUInt8(128), toInt64(4294967296) > toUInt8(128), toInt64(4294967296) >= toUInt8(128) , toUInt16(128) = toUInt64(4294967296), toUInt16(128) != toUInt64(4294967296), toUInt16(128) < toUInt64(4294967296), toUInt16(128) <= toUInt64(4294967296), toUInt16(128) > toUInt64(4294967296), toUInt16(128) >= toUInt64(4294967296), toUInt64(4294967296) = toUInt16(128), toUInt64(4294967296) != toUInt16(128), toUInt64(4294967296) < toUInt16(128), toUInt64(4294967296) <= toUInt16(128), toUInt64(4294967296) > toUInt16(128), toUInt64(4294967296) >= toUInt16(128) , toUInt16(128) = toInt64(4294967296), toUInt16(128) != toInt64(4294967296), toUInt16(128) < toInt64(4294967296), toUInt16(128) <= toInt64(4294967296), toUInt16(128) > toInt64(4294967296), toUInt16(128) >= toInt64(4294967296), toInt64(4294967296) = toUInt16(128), toInt64(4294967296) != toUInt16(128), toInt64(4294967296) < toUInt16(128), toInt64(4294967296) <= toUInt16(128), toInt64(4294967296) > toUInt16(128), toInt64(4294967296) >= toUInt16(128) , toInt16(128) = toUInt64(4294967296), toInt16(128) != toUInt64(4294967296), toInt16(128) < toUInt64(4294967296), toInt16(128) <= toUInt64(4294967296), toInt16(128) > toUInt64(4294967296), toInt16(128) >= toUInt64(4294967296), toUInt64(4294967296) = toInt16(128), toUInt64(4294967296) != toInt16(128), toUInt64(4294967296) < toInt16(128), toUInt64(4294967296) <= toInt16(128), toUInt64(4294967296) > toInt16(128), toUInt64(4294967296) >= toInt16(128) , toInt16(128) = toInt64(4294967296), toInt16(128) != toInt64(4294967296), toInt16(128) < toInt64(4294967296), toInt16(128) <= toInt64(4294967296), toInt16(128) > toInt64(4294967296), toInt16(128) >= toInt64(4294967296), toInt64(4294967296) = toInt16(128), toInt64(4294967296) != toInt16(128), toInt64(4294967296) < toInt16(128), toInt64(4294967296) <= toInt16(128), toInt64(4294967296) > toInt16(128), toInt64(4294967296) >= toInt16(128) , toUInt32(128) = toUInt64(4294967296), toUInt32(128) != toUInt64(4294967296), toUInt32(128) < toUInt64(4294967296), toUInt32(128) <= toUInt64(4294967296), toUInt32(128) > toUInt64(4294967296), toUInt32(128) >= toUInt64(4294967296), toUInt64(4294967296) = toUInt32(128), toUInt64(4294967296) != toUInt32(128), toUInt64(4294967296) < toUInt32(128), toUInt64(4294967296) <= toUInt32(128), toUInt64(4294967296) > toUInt32(128), toUInt64(4294967296) >= toUInt32(128) , toUInt32(128) = toInt64(4294967296), toUInt32(128) != toInt64(4294967296), toUInt32(128) < toInt64(4294967296), toUInt32(128) <= toInt64(4294967296), toUInt32(128) > toInt64(4294967296), toUInt32(128) >= toInt64(4294967296), toInt64(4294967296) = toUInt32(128), toInt64(4294967296) != toUInt32(128), toInt64(4294967296) < toUInt32(128), toInt64(4294967296) <= toUInt32(128), toInt64(4294967296) > toUInt32(128), toInt64(4294967296) >= toUInt32(128) , toInt32(128) = toUInt64(4294967296), toInt32(128) != toUInt64(4294967296), toInt32(128) < toUInt64(4294967296), toInt32(128) <= toUInt64(4294967296), toInt32(128) > toUInt64(4294967296), toInt32(128) >= toUInt64(4294967296), toUInt64(4294967296) = toInt32(128), toUInt64(4294967296) != toInt32(128), toUInt64(4294967296) < toInt32(128), toUInt64(4294967296) <= toInt32(128), toUInt64(4294967296) > toInt32(128), toUInt64(4294967296) >= toInt32(128) , toInt32(128) = toInt64(4294967296), toInt32(128) != toInt64(4294967296), toInt32(128) < toInt64(4294967296), toInt32(128) <= toInt64(4294967296), toInt32(128) > toInt64(4294967296), toInt32(128) >= toInt64(4294967296), toInt64(4294967296) = toInt32(128), toInt64(4294967296) != toInt32(128), toInt64(4294967296) < toInt32(128), toInt64(4294967296) <= toInt32(128), toInt64(4294967296) > toInt32(128), toInt64(4294967296) >= toInt32(128) , toUInt64(128) = toUInt64(4294967296), toUInt64(128) != toUInt64(4294967296), toUInt64(128) < toUInt64(4294967296), toUInt64(128) <= toUInt64(4294967296), toUInt64(128) > toUInt64(4294967296), toUInt64(128) >= toUInt64(4294967296), toUInt64(4294967296) = toUInt64(128), toUInt64(4294967296) != toUInt64(128), toUInt64(4294967296) < toUInt64(128), toUInt64(4294967296) <= toUInt64(128), toUInt64(4294967296) > toUInt64(128), toUInt64(4294967296) >= toUInt64(128) , toUInt64(128) = toInt64(4294967296), toUInt64(128) != toInt64(4294967296), toUInt64(128) < toInt64(4294967296), toUInt64(128) <= toInt64(4294967296), toUInt64(128) > toInt64(4294967296), toUInt64(128) >= toInt64(4294967296), toInt64(4294967296) = toUInt64(128), toInt64(4294967296) != toUInt64(128), toInt64(4294967296) < toUInt64(128), toInt64(4294967296) <= toUInt64(128), toInt64(4294967296) > toUInt64(128), toInt64(4294967296) >= toUInt64(128) , toInt64(128) = toUInt64(4294967296), toInt64(128) != toUInt64(4294967296), toInt64(128) < toUInt64(4294967296), toInt64(128) <= toUInt64(4294967296), toInt64(128) > toUInt64(4294967296), toInt64(128) >= toUInt64(4294967296), toUInt64(4294967296) = toInt64(128), toUInt64(4294967296) != toInt64(128), toUInt64(4294967296) < toInt64(128), toUInt64(4294967296) <= toInt64(128), toUInt64(4294967296) > toInt64(128), toUInt64(4294967296) >= toInt64(128) , toInt64(128) = toInt64(4294967296), toInt64(128) != toInt64(4294967296), toInt64(128) < toInt64(4294967296), toInt64(128) <= toInt64(4294967296), toInt64(128) > toInt64(4294967296), toInt64(128) >= toInt64(4294967296), toInt64(4294967296) = toInt64(128), toInt64(4294967296) != toInt64(128), toInt64(4294967296) < toInt64(128), toInt64(4294967296) <= toInt64(128), toInt64(4294967296) > toInt64(128), toInt64(4294967296) >= toInt64(128) 
CREATE TABLE test_436D3E70664742507B233931576E7E5541324E653260445C2B6E2A374A66336E2163715E452B312C(x UInt8) Engine=Memory;
INSERT INTO src_3 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 87
CREATE DATABASE IF NOT EXISTS test_ic1b7ovv 
INSERT INTO test_01193_18429.table_9_562 VALUES 
SELECT stddevSampOrDefaultIf(x, x > 1) FROM (SELECT 1 AS x);
INSERT INTO test_01193_18429.table_4_234 VALUES 
CREATE DATABASE IF NOT EXISTS test_mwtcsi3x 
EXPLAIN QUERY TREE (SELECT sum(if((number % 2) == 0, 1, 0)) FROM numbers(10));
SELECT toUInt32(number * -1) * number y, toInt128(y), toInt256(y), toUInt256(y) FROM numbers_mt(10) ORDER BY number;
SELECT normalizeLinf(NULL);
select 'Decimals';
SELECT JSONExtract('{"a":"-123456789"}', 'a', 'Int32') as a, toTypeName(a);
set allow_experimental_object_type=1;
CREATE DATABASE IF NOT EXISTS test_9za7bnn2 
SELECT 1 FROM (SELECT * FROM table1) T1 ALL INNER JOIN (SELECT * FROM table2) T2 ON T1.table = T2.name LIMIT 1;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (73 < 24 AND 8 > 0 ? 73 : 0)), throwIf(last != (73 < 24 AND 8 > 0 ? least(24 - 1, 73 + 8 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(24) LIMIT 73, 8);
SELECT addDate(NULL, NULL);
CREATE ROLE r1_01293@'%';
CREATE TABLE test_6B7E2B432451296823265B69473660637C2D7E2A4053623C265C5F44762E23543774237A6A2E6535(x UInt8) Engine=Memory;
CREATE QUOTA q3_01297 FOR 1 HOUR errors MAX 5;
SELECT splitByString('', 'a==b=c=d', 0) SETTINGS splitby_max_substrings_includes_remaining_string = 1;
DROP DATABASE IF EXISTS test_istyd9a7 
INSERT INTO test_dokgyhxa.simple (d) VALUES
select 'Used settings: prefer_localhost_replica=1,distributed_group_by_no_merge=1,distributed_push_down_limit=1';
DROP DATABASE IF EXISTS test_dcfzhqi0 
CREATE DATABASE IF NOT EXISTS test_jay5gy31 
create table test (x Array(Array(Map(UInt8, AggregateFunction(uniq, UInt64))))) engine=Memory;
CREATE DATABASE IF NOT EXISTS test_m8602bh2 
SELECT 'Running test stateless/02581_share_big_sets_between_mutation_tasks_long.sql from pid=1705' 
INSERT INTO test_01193_18429.table_9_736 VALUES 
SELECT k, key, toTypeName(value2), value2 FROM t2 INNER JOIN rdb ON rdb.key == t2.k ORDER BY k SETTINGS join_use_nulls = 1;
SELECT formatDateTime(NULL, NULL);
alter table many_mutations delete where y = 68 * 2 settings mutations_sync = 0;
INSERT INTO test_table_nullable_float_values SELECT number % 3, number, number, number % 3 FROM system.numbers LIMIT 120;
SELECT 'Running test stateless/00564_temporary_table_management.sql from pid=1726' 
select toDateTimeOrDefault('2023-05-30 14:38:20', 'UTC');
ALTER TABLE concurrent_alter_column ADD COLUMN c85 DOUBLE;
SELECT materialize([toNullable(1)]) AS x, x[toNullable(1)] AS y;
INSERT INTO test_01193_18429.table_5_379 VALUES 
select 'GROUP BY (Distributed-over-Distributed)';
SELECT `x` FROM `test_6sl9qpyr`.`02535_custom_key` WHERE sipHash64(`x`) < 6148914691236517205
DROP DATABASE IF EXISTS test_kmrqech7 
SELECT count() FROM test_02559 PREWHERE ignore(id1) AND (id1 <= 10 AND id2 > 0);
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt32(1), toUInt32(2)] WHEN (number % 3) = 0 THEN [toUInt8(2), toUInt8(3)] ELSE [toUInt64(3), toUInt64(3)] END FROM system.numbers LIMIT 10;
INSERT INTO r7 SELECT 9
SELECT avgOrNullIf(x, x > 1) FROM (SELECT 1 AS x);
DROP DATABASE IF EXISTS test_n57cmys7 
CREATE USER u2_01292 NOT IDENTIFIED HOST ANY SETTINGS NONE DEFAULT ROLE ALL;
SELECT coalesce(toLowCardinality(toNullable(1)), toLowCardinality(toNullable(2))) as x, toTypeName(x);
SELECT arrayFilter(x -> 1, range(number)) FROM system.numbers LIMIT 10;
SELECT * FROM system.user_directories LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
insert into tb values 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (70 < 32 AND 26 > 0 ? 70 : 0)), throwIf(last != (70 < 32 AND 26 > 0 ? least(32 - 1, 70 + 26 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(32) LIMIT 70, 26);
DROP DATABASE IF EXISTS test_ldl7pt9u 
SELECT * FROM t1 LEFT JOIN t2 ON NULL ORDER BY t1.id NULLS FIRST, t2.id SETTINGS join_use_nulls = 1;
SELECT count() FROM t_cnf_fuzz WHERE (c6 AND c3) OR ((NOT c4) AND (NOT c2) AND c1) OR (c9 AND c6 AND (NOT c7) AND c4 AND (NOT c9)) OR (c6 AND (NOT c2) AND (NOT c2) AND c8 AND c9) OR ((NOT c7) AND c7 AND c8 AND (NOT c8)) OR ((NOT c6) AND c9 AND (NOT c7) AND c6 AND (NOT c3)) OR ((NOT c2) AND c9 AND c6 AND (NOT c4) AND (NOT c3)) SETTINGS convert_query_to_cnf = 0
CREATE TABLE defaulted (v6 FixedString(16)) ENGINE=Memory;
create database rdb_test_5mr53c62_4 engine=Replicated('/test/test_5mr53c62/rdb', 's1', 'r1')
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (3 < 16 AND 57 > 0 ? 3 : 0)), throwIf(last != (3 < 16 AND 57 > 0 ? least(16 - 1, 3 + 57 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(16) LIMIT 3, 57);
INSERT INTO mt VALUES /* (-47, 2) */ 
select concat(materialize(toFixedString('a', 1)), materialize('b'), 'c') == 'abc';
CREATE TABLE test_296E3F485057792F6D2D7D37515E7C3D54454B2B6F3B256347527933522F71505358246D7E372350(x UInt8) Engine=Memory;
CREATE TABLE shard_1.num2_01232 (`number` UInt64) ENGINE = MergeTree ORDER BY number SETTINGS index_granularity = 13814, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 1905, prefer_fetch_merged_part_size_threshold = 5022673566, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 2068870113, index_granularity_bytes = 16951928, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 89131, primary_key_compress_block_size = 38608
select abs(log(exp(2)) - 2) < 1e-8;
INSERT INTO test_01193_18429.table_7_1 VALUES 
CREATE DATABASE IF NOT EXISTS test_5kwcuyfr 
CREATE DATABASE dummy_db ENGINE=Atomic;
CREATE TABLE test_222B747A5B783E652A35625840523125675C525F462C61627364673F31665B684950287432583B41(x UInt8) Engine=Memory;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c3)) OR ((NOT c8) AND c5) OR (c2 AND (NOT c6)) OR (c1 AND c3 AND (NOT c8)) OR ((NOT c7) AND c0 AND (NOT c6) AND (NOT c1)) OR (c5 AND c4 AND c2 AND (NOT c7) AND c5) OR ((NOT c7) AND c3 AND c5) SETTINGS convert_query_to_cnf = 1
INSERT INTO 02763_merge_log_1 VALUES 
SELECT cosineDistance((1, 1), (-1, -1));
INSERT INTO src_13 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 6
DROP DATABASE IF EXISTS test_7fa81sg4 
CREATE TABLE test_383B6B775F685F3430753D3274324B6E4269322B254B2E2863593F6D235C7333633675702A305829(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_sgpg3txr 
SELECT 1301146200 + 1800 * number AS ts, toString(toDateTime(ts), 'Australia/Sydney') AS time_in_sydney FROM system.numbers LIMIT 7;
DROP DATABASE IF EXISTS test_dm232syh 
SELECT * FROM merge('', '');
CREATE DATABASE IF NOT EXISTS test_no1ogjly 
SELECT toUInt128(-1);
OPTIMIZE TABLE t_modify_from_lc_1 FINAL;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 18737, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE TABLE table_with_enum_column_for_csv_insert ( Id Int32, Value Enum('ef' = 1, 'es' = 2) ) ENGINE=Memory();
SELECT 'Running test stateless/02433_default_expression_operator_in.sql from pid=1713' 
 select * from (select key, value from num_1) l inner join (select key, value from num_2 inner join (select number * 7 as key from numbers(1e5)) as nn on num_2.key = nn.key settings join_algorithm='full_sorting_merge') r on l.key = r.key order by l.key limit 10 offset 10000 SETTINGS allow_experimental_analyzer=1, parallel_replicas_prefer_local_join=0, send_logs_level='trace', allow_experimental_parallel_reading_from_replicas = 2, max_parallel_replicas = 2, parallel_replicas_for_non_replicated_merge_tree = 1, cluster_for_parallel_replicas = 'test_cluster_one_shard_three_replicas_localhost', join_algorithm='full_sorting_merge'
CREATE TABLE numbers_mt (number UInt64) ENGINE = Log;
select s.a, s.a, s.b as s_b, s.b from t left join s on s.a = t.a left join y on s.b = y.b order by t.a, s.a, s.b;
CREATE TABLE test_01193_18429.table_5_168 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP TABLE IF EXISTS 01760_db.example_complex_key_source;
select if(1, [cast(materialize(2.0),'Decimal(38,18)')], [cast(materialize(1.0),'Decimal(38,18)')]);
KILL MUTATION WHERE mutation_id='0000000080' and table like 'concurrent_kill_%' and database='test_bc61bq8k'
SELECT 'Running test stateless/01889_check_row_policy_defined_using_user_function.sh from pid=1705' 
SELECT normalizeQuery('SELECT 1, 1, 1, /* Hello */ \'abc\'');
alter table many_mutations delete where y = 935 * 2 settings mutations_sync = 0;
SELECT `data`, toTypeName(`data`) FROM `test_auas3s6x`.`t_json_local`
DROP TEMPORARY TABLE IF EXISTS test_00724;
SELECT t1.id, t1.value, t2.id, t2.value FROM test_table_join_1 AS t1 FULL JOIN test_table_join_2 AS t2 ON t1.id = t2.id AND t2.value = 'Join_2_Value_0';
INSERT INTO test_01193_18429.table_10_316 VALUES 
SELECT first_value([NULL]);
DROP TABLE IF EXISTS bloom_filter_idx2;
EXPLAIN SYNTAX INSERT INTO test FROM INFILE 'data.file' SELECT x from input('x UInt32') FORMAT TSV;
SELECT * from (SELECT * FROM a ANY LEFT OUTER JOIN id1 USING id1) js1 ANY LEFT OUTER JOIN id2 USING id2;
CREATE TABLE test_01193_18429.table_5_690 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT toInt32OrDefault('');
INSERT INTO r3 SELECT 42
CREATE DICTIONARY test_dictionary_load_factor_nullable ( key UInt64, value Nullable(UInt16) ) PRIMARY KEY key SOURCE(CLICKHOUSE(TABLE test_table_nullable)) LAYOUT(HASHED(MAX_LOAD_FACTOR 0.90)) LIFETIME(0);
INSERT INTO TABLE 02165_in_tb FROM INFILE '/tmp/clickhouse-test/0_stateless/test_meka8o97/hello.world.csv.xz' COMPRESSION 'xz' FORMAT CSV;
CREATE TABLE test_01193_18429.table_9_497 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT * FROM test ORDER BY id;
CREATE DATABASE IF NOT EXISTS test_qjn51bef 
INSERT INTO test_01193_18429.table_4_745 VALUES 
SELECT 'Running test stateless/02367_analyzer_table_alias_columns.sql from pid=1726' 
CREATE TABLE test_204D4C2244407B6C7534405B3A4D433C584B75407E71576E6C482831633D782C3532495E6C70656E(x UInt8) Engine=Memory;
ALTER TABLE alter_00061 ADD COLUMN n Nested(ui8 UInt8, s String);
SELECT toTypeName(xor(1, 10));
select arrayUniq(thread_ids) from system.query_log where current_database = currentDatabase() and type != 'QueryStart' and query like '%insert into testX %' and Settings['parallel_view_processing'] = '0' and Settings['optimize_trivial_insert_select'] = '1' and Settings['max_insert_threads'] = '0';
EXPLAIN SYNTAX (SELECT (2 * count(decimal32) - sum(decimal32)) + (3 * count(decimal32) - sum(decimal32)) From test_table);
SELECT number, 'Hello, world!' FROM numbers(6000) INTO OUTFILE '/var/lib/clickhouse/user_files/test_ppeg0s5q/bz2_9.bz2' COMPRESSION 'bz2' LEVEL 9
CREATE TABLE test_4E7C3E586728233A222A3C6C6F4C337A62463A2D366E692826452D7E666F447D584A2C517731706D(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_2_47 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT TO_BASE64('test string');
DROP DATABASE IF EXISTS test_1k01grsp 
CREATE TABLE test_6138385123405E767C3F603E44217464456354677769443372473330543A7A5B683972525A773B4B(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_3_431 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
WITH toDateTime64('2019-09-16 19:20:12.345678910', 9) AS dt64 SELECT dt64, fromUnixTimestamp64Milli(toUnixTimestamp64Milli(dt64)), fromUnixTimestamp64Micro(toUnixTimestamp64Micro(dt64)), fromUnixTimestamp64Nano(toUnixTimestamp64Nano(dt64));
INSERT INTO test_01193_18429.table_5_870 VALUES 
explain query tree select * from bug where (k =1 or k=2 or k =3) and (s=21 or s=22 or s=23) SETTINGS allow_experimental_analyzer = 1;
CREATE TABLE tbl2 (`i` int) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 23764, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 122, merge_max_block_size = 15842, prefer_fetch_merged_part_size_threshold = 984599503, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 45, min_merge_bytes_to_use_direct_io = 4451509116, index_granularity_bytes = 25486104, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 63646, primary_key_compress_block_size = 62187
INSERT INTO dst_10 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 58
DROP USER u10_01292, u11_01292, u12_01292, u13_01292, u14_01292, u15_01292, u16_01292;
CREATE TABLE test_01193_18429.table_9_665 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_554425545829272B3A363F5C5869774C3672774E2577323F35325831434067777D73544B2F433E2E(x UInt8) Engine=Memory;
SELECT number % 2 ? toFixedString(toString(number), 2) : toFixedString(toString(-number), 2) FROM system.numbers LIMIT 10;
select throwIf(A != 27) from src format Null
SELECT 'Running test stateless/02417_from_select_syntax.sql from pid=1726' 
CREATE TABLE test_775677572C3F6D3B6F51582D3D315E3332513C652A5860276C3D7229213C542D2232433E58573B2E(x UInt8) Engine=Memory;
select multiFuzzyMatchAnyIndex(materialize('123'), 0, materialize(['1']));
SELECT 'null';
SELECT ('1',2) AS t, t.1, t.2;
INSERT INTO nested_table SETTINGS input_format_orc_import_nested = 1 FORMAT ORC
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (71 < 83 AND 54 > 0 ? 71 : 0)), throwIf(last != (71 < 83 AND 54 > 0 ? least(83 - 1, 71 + 54 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(83) LIMIT 71, 54);
CREATE TABLE test_6A264D5A2E6634764F373C48353D71556B203B287264627D5B7D3D47783B4636673F75202E4B736A(x UInt8) Engine=Memory;
select concat(materialize('a'), materialize(toFixedString('b', 1)), 'c') == 'abc';
SELECT 'toStartOfYear;toDateTime64;true', toStartOfYear(toDateTime64('1920-02-02 10:20:30', 3)) SETTINGS enable_extended_results_for_datetime_functions = true;
SELECT accurateCastOrNull(-1, 'UInt8');
INSERT INTO test_01193_18429.table_2_42 VALUES 
TRUNCATE TABLE sqllt.table;
select count(ignore(*)) from data_02051 settings min_bytes_to_use_direct_io=1, local_filesystem_read_method='mmap', local_filesystem_read_prefetch=0, read_priority=0, max_read_buffer_size=65505 ;
INSERT INTO test_01193_18429.table_2_216 VALUES 
SELECT dictGetOrDefault('flat_dictionary', 'value', toUInt64(2), NULL);
CREATE TABLE test_01193_18429.table_6_88 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO r7 SELECT 5 % 10 = 7 ? 5 - 1 : 5
INSERT INTO test_01193_18429.table_8_428 VALUES 
SELECT JSONExtractKeysAndValuesRaw('{"a": "hello", "b": [-100, 200.0, 300], "c":{"d":[121,144]}}');
CREATE DATABASE test1601_detach_permanently_atomic Engine=Atomic;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt16(1), toInt16(2)] WHEN (number % 3) = 0 THEN [toUInt32(2), toUInt32(3)] ELSE [toUInt8(3), toUInt8(3)] END FROM system.numbers LIMIT 10;
create table t1_distr as t1_shard engine Distributed(test_cluster_two_shards_localhost, test_01103, t1_shard, id);
SELECT t1.*, t2.* FROM t1 RIGHT JOIN t2 ON t1.x = t2.x AND t1.y = t2.y ORDER BY x, t2.y;
select tuple(number + 1) <= tuple(toNullable(number)) from numbers(1);
INSERT INTO tztest (timeBerlin, timeLA) VALUES 
INSERT INTO test_01193_18429.table_1_79 VALUES 
CREATE TABLE transaction (`id` Int32, `value` Float64, `master_id` Int32) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 969, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 43, merge_max_block_size = 4018, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 387958, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 3887321125, index_granularity_bytes = 31448753, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 56240, primary_key_compress_block_size = 23610
INSERT INTO test_01193_18429.table_6_915 VALUES 
select toString(toIPv6('2001:db9:85a3::8a2e:370:7334'))
SHOW CREATE POLICY db1_02703 ON db1_02703.*;
CREATE TABLE test_01193_18429.table_3_891 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT CASE WHEN 1 THEN [col2, 'bar'] WHEN 1 THEN ['foo', 'bar'] ELSE [col6, col7] END FROM multi_if_check;
CREATE TABLE test_26277A615446337B583B7974415921323D5B26485F6E645254223D5D5B732155665C25262D782523(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt16(1), toInt16(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toUInt8(3), toUInt8(3)] END FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/02813_any_value.sql from pid=1722' 
alter table many_mutations delete where y = 673 * 2 settings mutations_sync = 0;
SELECT [number][0xFFFFFFFFFFFFFFFF] FROM numbers(1);
INSERT INTO t_json_analyzer VALUES 
CREATE TABLE tabl_1 (`key` String) ENGINE = MergeTree ORDER BY key SETTINGS index_granularity = 9994, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 17787, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 4316108724, index_granularity_bytes = 11789439, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 64621, primary_key_compress_block_size = 42898
CREATE TABLE test_01193_18429.table_8_991 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/01440_big_int_shift.sql from pid=1720' 
INSERT INTO src VALUES /* (11, 1) */ 
INSERT INTO test_01193_18429.table_7_616 VALUES 
SELECT count() FROM t_01411 WHERE arr[1] = str;
drop table t1_r2 sync;
SELECT 'Running test stateless/01504_rocksdb.sql from pid=1715' 
select arrayFilter(x -> NULL::Nullable(UInt8), range(number)) from numbers(3);
CREATE DATABASE IF NOT EXISTS test_puuq512m 
CREATE TABLE test_374A252B253C3844563F443A5C49314171565459797B515B4B656D794B2D4237544C553570654C57(x UInt8) Engine=Memory;
INSERT INTO test_00681 VALUES 
INSERT INTO test_01193_18429.table_5_838 VALUES 
SELECT 'Running test stateless/01359_geodistance_loop.sql from pid=1724' 
CREATE DATABASE IF NOT EXISTS test_gdj2fw4v 
select * from format(CSV, 'd Date, s String', '2020-01-2,SomeString');
INSERT INTO test_01193_18429.table_3_180 VALUES 
INSERT INTO test_01193_18429.table_3_4 VALUES 
SELECT toFixedString('!#$%&(*+,-./:<=>?@[^`{|}~', 25) AS a FORMAT Markdown;
desc format(Values, '({\'key1\' : [[\'2020-01-01 00:00:00\']], \'key2\' : [[\'2020-01-01\']]})\n({\'key1\' : [[\'2020-01-01\']], \'key2\' : [[\'Some string\']]})');
CREATE INDEX idx_tab3_2 ON tab3 (col4,col1);
INSERT INTO test_01193_18429.table_8_552 VALUES 
SELECT pointInPolygon(NULL, NULL);
alter table data_01900_1 update s = 'foo_83' where 1;
SELECT sumMap(statusMap.goal_id, statusMap.revenue) FROM sum_map_decimal;
CREATE TABLE test_2D2261533950585D5D7E6E3D766D51256B2761246A6B654E214D264E3375535269722F5E3B2F725F(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_wmmabu6r 
attach table txn_counters;
create table dist_01072 (key Int) Engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01072, key);
SELECT arrayFirstOrNull(x -> 1, emptyArrayUInt8());
CREATE DATABASE IF NOT EXISTS test_p4jc61pb 
SHOW CREATE POLICY p4_01296 ON table;
CREATE INDEX idx_tab4_1 ON tab4 (col0 DESC,col1);
INSERT INTO r2 SELECT 59 % 10 = 2 ? 59 - 1 : 59
CREATE DATABASE IF NOT EXISTS test_v3ul6psr 
SELECT HEX(10);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (4 < 22 AND 45 > 0 ? 4 : 0)), throwIf(last != (4 < 22 AND 45 > 0 ? least(22 - 1, 4 + 45 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(22) LIMIT 4, 45);
CREATE TABLE product_groups ( group_id Int64, group_name String ) Engine = Memory;
DROP TABLE collate_test2;
SELECT * FROM test5.`b.tsv` 
insert into regular_mt_table values 
SELECT 'Running test stateless/02155_read_in_order_max_rows_to_read.sql from pid=1715' 
SELECT colA, colB FROM dst
SELECT throwIf((SELECT sum(nm) FROM mv) != 29) FORMAT Null;
select max(key) from tab_00612 any left join (select key, arrayJoin(n.x) as val from tab_00612) js2 using key where (key, val) in ((1, 1), (2, 2));
DESCRIBE (SELECT count() OVER ());
CREATE TABLE test_01193_18429.table_10_585 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_6A3D4B5F2B316C263F586C323C7D425E4D3670632625315A6968602C4D414F6E4F6462706A7C2376(x UInt8) Engine=Memory;
SELECT '1', '9007199254740991.000000000', 1 = 9007199254740991.000000000, 1 != 9007199254740991.000000000, 1 < 9007199254740991.000000000, 1 <= 9007199254740991.000000000, 1 > 9007199254740991.000000000, 1 >= 9007199254740991.000000000, 9007199254740991.000000000 = 1, 9007199254740991.000000000 != 1, 9007199254740991.000000000 < 1, 9007199254740991.000000000 <= 1, 9007199254740991.000000000 > 1, 9007199254740991.000000000 >= 1 , toUInt8(1) = 9007199254740991.000000000, toUInt8(1) != 9007199254740991.000000000, toUInt8(1) < 9007199254740991.000000000, toUInt8(1) <= 9007199254740991.000000000, toUInt8(1) > 9007199254740991.000000000, toUInt8(1) >= 9007199254740991.000000000, 9007199254740991.000000000 = toUInt8(1), 9007199254740991.000000000 != toUInt8(1), 9007199254740991.000000000 < toUInt8(1), 9007199254740991.000000000 <= toUInt8(1), 9007199254740991.000000000 > toUInt8(1), 9007199254740991.000000000 >= toUInt8(1) , toInt8(1) = 9007199254740991.000000000, toInt8(1) != 9007199254740991.000000000, toInt8(1) < 9007199254740991.000000000, toInt8(1) <= 9007199254740991.000000000, toInt8(1) > 9007199254740991.000000000, toInt8(1) >= 9007199254740991.000000000, 9007199254740991.000000000 = toInt8(1), 9007199254740991.000000000 != toInt8(1), 9007199254740991.000000000 < toInt8(1), 9007199254740991.000000000 <= toInt8(1), 9007199254740991.000000000 > toInt8(1), 9007199254740991.000000000 >= toInt8(1) , toUInt16(1) = 9007199254740991.000000000, toUInt16(1) != 9007199254740991.000000000, toUInt16(1) < 9007199254740991.000000000, toUInt16(1) <= 9007199254740991.000000000, toUInt16(1) > 9007199254740991.000000000, toUInt16(1) >= 9007199254740991.000000000, 9007199254740991.000000000 = toUInt16(1), 9007199254740991.000000000 != toUInt16(1), 9007199254740991.000000000 < toUInt16(1), 9007199254740991.000000000 <= toUInt16(1), 9007199254740991.000000000 > toUInt16(1), 9007199254740991.000000000 >= toUInt16(1) , toInt16(1) = 9007199254740991.000000000, toInt16(1) != 9007199254740991.000000000, toInt16(1) < 9007199254740991.000000000, toInt16(1) <= 9007199254740991.000000000, toInt16(1) > 9007199254740991.000000000, toInt16(1) >= 9007199254740991.000000000, 9007199254740991.000000000 = toInt16(1), 9007199254740991.000000000 != toInt16(1), 9007199254740991.000000000 < toInt16(1), 9007199254740991.000000000 <= toInt16(1), 9007199254740991.000000000 > toInt16(1), 9007199254740991.000000000 >= toInt16(1) , toUInt32(1) = 9007199254740991.000000000, toUInt32(1) != 9007199254740991.000000000, toUInt32(1) < 9007199254740991.000000000, toUInt32(1) <= 9007199254740991.000000000, toUInt32(1) > 9007199254740991.000000000, toUInt32(1) >= 9007199254740991.000000000, 9007199254740991.000000000 = toUInt32(1), 9007199254740991.000000000 != toUInt32(1), 9007199254740991.000000000 < toUInt32(1), 9007199254740991.000000000 <= toUInt32(1), 9007199254740991.000000000 > toUInt32(1), 9007199254740991.000000000 >= toUInt32(1) , toInt32(1) = 9007199254740991.000000000, toInt32(1) != 9007199254740991.000000000, toInt32(1) < 9007199254740991.000000000, toInt32(1) <= 9007199254740991.000000000, toInt32(1) > 9007199254740991.000000000, toInt32(1) >= 9007199254740991.000000000, 9007199254740991.000000000 = toInt32(1), 9007199254740991.000000000 != toInt32(1), 9007199254740991.000000000 < toInt32(1), 9007199254740991.000000000 <= toInt32(1), 9007199254740991.000000000 > toInt32(1), 9007199254740991.000000000 >= toInt32(1) , toUInt64(1) = 9007199254740991.000000000, toUInt64(1) != 9007199254740991.000000000, toUInt64(1) < 9007199254740991.000000000, toUInt64(1) <= 9007199254740991.000000000, toUInt64(1) > 9007199254740991.000000000, toUInt64(1) >= 9007199254740991.000000000, 9007199254740991.000000000 = toUInt64(1), 9007199254740991.000000000 != toUInt64(1), 9007199254740991.000000000 < toUInt64(1), 9007199254740991.000000000 <= toUInt64(1), 9007199254740991.000000000 > toUInt64(1), 9007199254740991.000000000 >= toUInt64(1) , toInt64(1) = 9007199254740991.000000000, toInt64(1) != 9007199254740991.000000000, toInt64(1) < 9007199254740991.000000000, toInt64(1) <= 9007199254740991.000000000, toInt64(1) > 9007199254740991.000000000, toInt64(1) >= 9007199254740991.000000000, 9007199254740991.000000000 = toInt64(1), 9007199254740991.000000000 != toInt64(1), 9007199254740991.000000000 < toInt64(1), 9007199254740991.000000000 <= toInt64(1), 9007199254740991.000000000 > toInt64(1), 9007199254740991.000000000 >= toInt64(1) ;
SELECT NULL, id, max(id) OVER (Rows BETWEEN 10 PRECEDING AND UNBOUNDED FOLLOWING) AS aid FROM ( SELECT NULL, max(id) OVER (), materialize(toLowCardinality('')) AS id FROM numbers_mt(0, 1) ) FORMAT `Null`;
CREATE TABLE test_55275F4548732728777C7B2F632762715E3C463623727C793228757E552359267B4879313E55682C(x UInt8) Engine=Memory;
SELECT age('second', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1927-01-01 00:10:00', 3, 'UTC'));
CREATE TABLE test_01193_18429.table_9_679 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO t_tuple_element VALUES 
SELECT 'ALL tmp_table_01818', count() FROM tmp_table_01818;
DROP DATABASE IF EXISTS test_11mn9x2b 
SELECT toDecimal128OrNull ('\0\0\0\0\0', 4);
INSERT INTO r10 SELECT 99
CREATE DATABASE IF NOT EXISTS test_utlg7t28 
CREATE TABLE 01681_database_for_cache_dictionary.simple_key_hierarchy_table ( id UInt64, parent_id UInt64 ) ENGINE = TinyLog();
SELECT 'wordShingleSimHashCaseInsensitive';
select line, _file from test;
select count(ignore(*)) from data_02051 settings min_bytes_to_use_direct_io=0, local_filesystem_read_method='read', local_filesystem_read_prefetch=1, read_priority=1, max_read_buffer_size=65505 ;
SELECT dateDiff('day', materialize(toDate32('2015-08-18', 'UTC')), materialize(toDate('2015-08-19', 'UTC')), 'UTC');
CREATE TABLE test_01193_18429.table_10_467 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Map full text bloom filter ngrambf mapKeys';
SELECT 'DST boundary test for Australia/Lord_Howe. This is a special timezone with DST offset is 30mins with the timezone epoc also lays at half hour';
CREATE TABLE test_01193_18429.table_4_534 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_9_445 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP DATABASE IF EXISTS test_5bisuwmk 
CREATE TABLE test_02908_r2_289 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_289', 'r2') ORDER BY tuple()
CREATE TABLE test_5D2A33792F5D212C3043737529756B5053783434212352262333202D7D49656D5026512020206E51(x UInt8) Engine=Memory;
SELECT splitByNonAlpha('128.0.0.1', 3);
SELECT * FROM (SELECT x, toTypeName(x), count() FROM (SELECT 1 AS x UNION ALL SELECT NULL UNION ALL SELECT 1.0) GROUP BY x) ORDER BY x DESC;
DROP TABLE IF EXISTS src_7
CREATE TABLE test_01193_18429.table_5_702 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT toYearWeek(toDate('1987-01-01'), 1), toYearWeek(toDate('1987-01-01'));
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toUInt64(2), toUInt64(3)] ELSE [toUInt64(3), toUInt64(3)] END FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_d2i42l2o 
INSERT INTO test_01193_18429.table_8_668 VALUES 
CREATE DATABASE IF NOT EXISTS test_fop9zy7a 
DROP DATABASE IF EXISTS test_m3a0ae8p 
SELECT cutFragment('http://www.example.com:1234');
INSERT INTO src_3 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 63
SELECT decodeXMLComponent('&#x4e3a;');
SELECT `c` FROM `test_60hj7eta`.`source_table2`
INSERT INTO r5 SELECT 69
INSERT INTO t SELECT number FROM numbers(10);
SHOW CREATE ROLE r3_01293;
SELECT 'Running test stateless/02785_left_anti_join_bug.sql from pid=1726' 
CREATE TABLE IF NOT EXISTS test( id UInt32, track UInt8, codec String, content String, rdate Date DEFAULT '2018-02-03', track_id String DEFAULT concat(concat(concat(toString(track), '-'), codec), content) ) ENGINE=MergeTree(rdate, (id, track_id), 8192);
DROP DATABASE IF EXISTS test_6jr0q2jl 
INSERT INTO mutations_and_escaping_1648 (d, e) VALUES 
SELECT *, * APPLY toTypeName FROM ( SELECT t2.* FROM t1 FULL JOIN t2 ON t1.a = t2.key ) ORDER BY 1;
DROP TABLE IF EXISTS lc_table;
SELECT line FROM urlCluster('test_cluster_two_shards_localhost', 'http://localhost:8123/', 'LineAsString', '`line` String', headers('random_header' = 'value'))
select toUInt16(number * 2) as x from numbers(42) order by x desc;
INSERT INTO test_01193_18429.table_1_496 VALUES 
SELECT count() FROM partial_duplicates;
SELECT dictGet('hashed_array_dictionary_complex_key_complex_attributes', 'value_first', (number, concat('id_key_', toString(number)))) as value_first, dictGet('hashed_array_dictionary_complex_key_complex_attributes', 'value_second', (number, concat('id_key_', toString(number)))) as value_second FROM system.numbers LIMIT 4;
INSERT INTO test_table_join_3 VALUES 
SELECT t1.id, t1.value, t2.id, t2.value, t3.id, t3.value FROM test_table_join_1 AS t1 RIGHT JOIN test_table_join_2 AS t2 ON t1.id = t2.id AND t1.value == 'Join_1_Value_0' AND t2.value == 'Join_2_Value_0' LEFT JOIN test_table_join_3 AS t3 ON t2.id = t3.id AND t2.value == 'Join_2_Value_0' AND t3.value == 'Join_3_Value_0';
CREATE TABLE test_7B34205671792876604847304A6D516F634C29357D252D6E4B465F6E5F675421474E306558246756(x UInt8) Engine=Memory;
CREATE TABLE test_23794F2561274E2551467A7B60336236652C6660456B643A202663676D57543A2F4A243C3D207A4E(x UInt8) Engine=Memory;
SELECT toUInt64(number * -1) * number y, toInt128(y), toInt256(y), toUInt256(y) FROM numbers_mt(10) ORDER BY number;
drop table if exists geohash_test_data;
CREATE TABLE test_01193_18429.table_4_196 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_01193_18429.table_5_876 VALUES 
SYSTEM SYNC REPLICA alter_table_7 STRICT
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toInt8(-1) >= N as r FORMAT CSV;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 24397, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE INDEX idx_tab2_2 ON tab2 (col1,col3,col0);
SELECT arrayReverseSort([NULL]);
INSERT INTO test_01193_18429.table_1_50 VALUES 
SELECT id > 1, d.idd FROM (SELECT (toLowCardinality(0)) AS id, 1 AS value) AS a SEMI RIGHT JOIN (SELECT (toLowCardinality(0)) AS idd) AS d ON a.id = d.idd ;
SELECT s FROM order_by_desc ORDER BY u LIMIT 10 FORMAT Null SETTINGS max_memory_usage = '400M';
INSERT INTO dst_1 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 38
CREATE TABLE test_236525503E58346A7D683C4435424721503F402C4A33226C32522B5454526D3C5D4E27584D672A25(x UInt8) Engine=Memory;
ALTER TABLE table_rename_with_ttl RENAME COLUMN date2 TO renamed_date2;
CREATE DATABASE IF NOT EXISTS test_3ejf75ln 
INSERT INTO test_01193_18429.table_7_329 VALUES 
SELECT parseDateTime32BestEffort('2020-05-14T03:37:03.253184Z', 'UTC') AS a, toTypeName(a);
DROP TABLE IF EXISTS t_bad_constraint;
INSERT INTO test_01193_18429.table_4_590 VALUES 
CREATE TABLE test_4674213761533C587A612F7860506C3B3B533B6E2F2D5C42513E204F3F3B72486D5D40563020694D(x UInt8) Engine=Memory;
CREATE TABLE test_46342D506049313F7A5064543C2D635736432B5F65443F76376E6F4B553E7A502A2C2557247E7666(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02124_json_each_row_with_progress.sh from pid=1726' 
INSERT INTO t_json_nested FORMAT JSONEachRow
DROP DATABASE IF EXISTS test_pwybj99e 
create table orin_test (c1 Int32) engine=Memory;
drop table if exists test ;
SELECT total_bytes FROM system.tables WHERE name = 'test_buffer_table' and database = currentDatabase();
DESC TABLE numbers(1000000)
CREATE DATABASE IF NOT EXISTS test_u6vwgbhv 
INSERT INTO test_01193_18429.table_3_560 VALUES 
DROP DATABASE IF EXISTS test_mpzh2u18 
SELECT (1,'') IN (-1,'');
CREATE TABLE t_async_insert_native_1 (`id` UInt64, `s` String) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 56607, min_bytes_for_wide_part = 417309387, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 22584, prefer_fetch_merged_part_size_threshold = 2066242373, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 920014555, index_granularity_bytes = 22299745, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 45931, primary_key_compress_block_size = 42307
system sync replica rmt2 pull
select multiFuzzyMatchAny(materialize('hello some world'), 0, materialize(['^hello.*world$']));
SELECT sum(number) FROM test_parallel_replicas_automatic_count format Null
CREATE TABLE test_332C6D6B6F465B5D31655549286A6932696C292A38672A72502E494C3075703E21704F705E4A7730(x UInt8) Engine=Memory;
EXPLAIN SYNTAX (SELECT sum(decimal32) + 2 * count(decimal32) From test_table);
CREATE TABLE test_01193_18429.table_7_905 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
create view testv(a String) as select number a from numbers(10);
CREATE TABLE test_01193_18429.table_4_246 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO r3 SELECT 92 % 10 = 3 ? 92 - 1 : 92
SELECT * FROM (SELECT any(_shard_num) shard_num, count(), uniq(dummy) FROM remote('127.0.0.{2,3}', system.one)) ORDER BY shard_num LIMIT 1, 1 SETTINGS distributed_group_by_no_merge=2;
SELECT multiIf((col1 % 2) = 0, toFixedString('foo', 16), (col1 % 3) = 0, 'bar', col4) FROM multi_if_check;
CREATE TABLE test_4D6E6B5E766B606472212539384436396379505F55462E3F475667352F65333C7D294D5F5D6F405A(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_q58t5jri 
SELECT `one`.`dummy` FROM `system`.`one` WHERE `dummy` IN (0, 2)
CREATE TABLE test_01193_18429.table_10_978 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_47742B5521283D75673E552F3D66247032695E47625F4B5D5F5361424C2424707A266F5D7E4B7D3C(x UInt8) Engine=Memory;
select * from dp where i in (1);
ALTER TABLE dst_r1 DETACH PARTITION 2;
INSERT INTO test_01193_18429.table_8_808 VALUES 
SELECT s, replaceAll(s, '_', 'o') AS a, REGEXP_REPLACE(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['.', '__.__']) AS s);
SELECT count() FROM t_cnf_fuzz WHERE (c6 AND (NOT c5) AND c7 AND (NOT c9) AND (NOT c1)) OR ((NOT c3) AND (NOT c4) AND c3) OR (c5 AND c7 AND c8 AND (NOT c9)) OR ((NOT c5)) SETTINGS convert_query_to_cnf = 0
INSERT INTO test_01193_18429.table_1_693 VALUES 
CREATE TABLE ttl (`d` DateTime) ENGINE = MergeTree ORDER BY tuple() TTL d + toIntervalDay(10) SETTINGS remove_empty_parts = 0, index_granularity = 30353, min_bytes_for_wide_part = 154818506, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 80, merge_max_block_size = 730, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 27487249, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 68959, primary_key_compress_block_size = 85403
CREATE DATABASE IF NOT EXISTS test_dql7f6lx 
INSERT INTO test_01193_18429.table_6_820 VALUES 
SELECT parseDateTime64BestEffortUSOrNull('01/45/1925 16:00:00',3,'UTC');
SELECT multiIf((number % 2) = 0, toFloat32(1), (number % 3) = 0, toInt16(2), toInt8(3)) FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_c1r6zpw6 
select ts from t order by toUnixTimestamp64Nano(ts) limit 10 format Null settings max_block_size = 8192, optimize_read_in_order = 1;
SELECT 'Running test stateless/00732_quorum_insert_simple_test_1_parts_zookeeper_long.sql from pid=1720' 
CREATE TABLE test_01193_18429.table_2_455 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT count() FROM t_cnf_fuzz WHERE (c3 AND (NOT c2) AND (NOT c0) AND (NOT c6) AND (NOT c5)) OR (c5 AND c8 AND (NOT c2) AND c7 AND c6) OR ((NOT c3)) OR (c4 AND (NOT c0) AND (NOT c6) AND (NOT c5) AND (NOT c1)) OR (c6 AND (NOT c6) AND (NOT c2) AND c7) OR (c8 AND c5 AND (NOT c9) AND c0 AND c4) OR ((NOT c3)) OR (c1 AND c3 AND c4 AND (NOT c5)) SETTINGS convert_query_to_cnf = 0
CREATE DATABASE IF NOT EXISTS test_0451pvl7 
SELECT 'Running test stateless/01083_functional_index_in_mergetree.sql from pid=1715' 
EXPLAIN SYNTAX (SELECT sum(2 - decimal32) - sum(3 - decimal32) From test_table);
CREATE TABLE test_5143716734562753356F5C42445859433C5B2765656C376D7B227A6A3F57696945615568516A5D42(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_10_193 VALUES 
select [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 3, 0, 5] = multiSearchAllPositionsCaseInsensitiveUTF8(materialize('ÃÂÃÂÃÂ°ÃÂ¶ÃÂÃÂÃÂ±ÃÂÃÂÃÂÃÂÃÂ·ÃÂÃÂ°ÃÂ°ÃÂÃÂÃÂ³ÃÂ¨ÃÂÃÂÃÂ¹ÃÂÃÂ³ÃÂÃÂ'), ['ÃÂ¨ÃÂ³ÃÂ£ÃÂ¢ÃÂÃÂÃÂÃÂÃÂÃÂ¦ÃÂ¦ÃÂµÃÂÃÂÃÂ¡ÃÂÃÂ´ÃÂÃÂ¾ÃÂÃÂ¦ÃÂÃÂÃÂ¹ÃÂ»ÃÂ¢ÃÂÃÂ·ÃÂÃÂ²ÃÂÃÂ²ÃÂ°', 'ÃÂ£ÃÂÃÂÃÂÃÂ¸ÃÂÃÂÃÂÃÂºÃÂÃÂ²ÃÂ ÃÂ¡ÃÂ¹ÃÂ¸ÃÂ¤ÃÂÃÂ¹ÃÂ¢ÃÂ¤ÃÂ¢ÃÂÃÂÃÂ°ÃÂ', 'ÃÂÃÂ´ÃÂ¸ÃÂºÃÂÃÂ±ÃÂ±ÃÂÃÂÃÂ·ÃÂ¾ÃÂ¤ÃÂ¥ÃÂÃÂ¥ÃÂ¥ÃÂÃÂÃÂÃÂ¾ÃÂÃÂ¿ÃÂ ÃÂ±ÃÂÃÂºÃÂÃÂÃÂ', 'ÃÂÃÂÃÂ¹ÃÂµÃÂ¥', 'ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ¾ÃÂÃÂ½ÃÂ ÃÂÃÂÃÂºÃÂÃÂ', '', 'ÃÂ³ÃÂÃÂÃÂ±ÃÂÃÂ ÃÂÃÂ¡ÃÂÃÂÃÂÃÂÃÂÃÂ¤ÃÂ»ÃÂ½ÃÂÃÂ¨ÃÂ³', 'ÃÂÃÂ¥ÃÂ§ÃÂ³ÃÂ¼ÃÂÃÂ½ÃÂ»ÃÂÃÂ¨ÃÂ»ÃÂ©ÃÂ ', 'ÃÂ¼ÃÂºÃÂ¹ÃÂÃÂ±ÃÂÃÂ¤ÃÂÃÂÃÂ°ÃÂ ÃÂ¶ÃÂ³ÃÂÃÂ´ÃÂ²ÃÂ', 'ÃÂÃÂ¶ÃÂ°ÃÂÃÂÃÂÃÂÃÂ¨ÃÂ»ÃÂ¢', 'ÃÂ»ÃÂ¥ÃÂÃÂ¡ÃÂÃÂ»ÃÂÃÂÃÂÃÂ', '', 'ÃÂÃÂ§ÃÂÃÂÃÂÃÂÃÂÃÂÃÂ²ÃÂÃÂ¤ÃÂ£ÃÂ¤ÃÂ', 'ÃÂ°ÃÂ¶ÃÂÃÂ²ÃÂÃÂÃÂÃÂ¢ÃÂ', 'ÃÂÃÂÃÂÃÂÃÂ¨ÃÂÃÂÃÂÃÂ', 'ÃÂ']) from system.numbers limit 10;
SELECT multiIf(1, col2, 1, toFixedString(col3, 16), toFixedString('baz', 16)) FROM multi_if_check;
SELECT avgWeighted(x, w) FROM values('x UInt32, w Float32', (0, 0), (1, 0));
CREATE TABLE test_01193_18429.table_8_192 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT COUNT() FROM bloom_filter_array_lc_null_types_test WHERE has(i16, 5);
INSERT INTO test_01193_18429.table_10_633 VALUES 
SELECT toTypeName(x) FROM (SELECT toDecimal32('12.345', 7) AS x UNION ALL SELECT toInt8(0) AS x) WHERE x = 0;
SELECT 'NOT IN with non existing key and default value';
DROP TABLE IF EXISTS mv_00610;
SELECT 'Running test stateless/00652_replicated_mutations_default_database_zookeeper.sh from pid=1714' 
INSERT INTO test_01193_18429.table_4_648 VALUES 
SYSTEM START MERGES t_delay_mutations
INSERT INTO test_01193_18429.table_3_860 VALUES 
SELECT CAST(arrayJoin(['42.1', NULL]) AS Nullable(Decimal(10,2)));
select count() = sequenceCount('.*')(time, data = 0, data = 1, data = 2, data = 3) from sequence_test;
EXPLAIN QUERY TREE SELECT i FROM index_append_test_test WHERE a < 0 SETTINGS convert_query_to_cnf = 1 , optimize_using_constraints = 1 , optimize_move_to_prewhere = 1 , optimize_substitute_columns = 1 , optimize_append_index = 1, allow_experimental_analyzer = 1
INSERT INTO t_async_insert_native_3 FORMAT Values
SELECT arrayEnumerateUniqRanked(2,[[1, 2, 3, 4], [3, 4, 5, 6]]);
SELECT tupleElement(materialize(('hello', 'world')), 'xzy', [([('a')], 1)]);
SELECT CASE WHEN (number % 2) = 0 THEN toFloat64(1) WHEN (number % 3) = 0 THEN toInt32(2) ELSE toFloat64(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_4_319 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT `UserID` FROM `test_c5zukzwt`.`users` WHERE `UserID` IN ((SELECT arrayJoin([1468013291393583084, 1321770221388956068])) AS `_subquery3813`)
CREATE TABLE test_5A3F6B307E5E533B2D702B6042315F76422F713F4C2A377042425526706C5B705A73473E2A4E2C4B(x UInt8) Engine=Memory;
select 1 = isValidUTF8(toFixedString('\x00', 1)) from system.numbers limit 10;
SELECT 'uniqCombined(17)(IPv4NumToString)';
DROP TABLE IF EXISTS database_123456789abcde.tab;
SELECT 'Running test stateless/02861_join_on_nullsafe_compare.gen.sql from pid=1724' 
DROP TABLE IF EXISTS datetime_table;
SELECT ProfileEvents['ParallelReplicasUsedCount'] FROM system.query_log WHERE type = 'QueryFinish' AND query_id IN (SELECT query_id FROM system.query_log WHERE current_database = currentDatabase() AND log_comment = '02950_parallel_replicas_used_replicas_count_2' AND type = 'QueryFinish' AND initial_query_id = query_id) SETTINGS allow_experimental_parallel_reading_from_replicas=0;
SELECT minMap([number % 3, number % 4 - 1], [number :: UInt256, NULL]) FROM numbers(3) GROUP BY number WITH CUBE ORDER BY number;
INSERT INTO test_01193_18429.table_4_357 VALUES 
SELECT multiIf((number % 2) = 0, toInt64(1), (number % 3) = 0, toUInt8(2), toInt16(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_3B4C6C6E516E562D7E5D415A297B79232C2B484C522B5A483350572C5D2F296F56727353214C4541(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02690_subquery_identifiers.sql from pid=1724' 
SELECT 'Running test stateless/01457_order_by_nulls_first.sql from pid=1720' 
CREATE TABLE test2 (`year` String, `uv` Int64) ENGINE = MergeTree ORDER BY year SETTINGS index_granularity = 11331, min_bytes_for_wide_part = 784470202, ratio_of_defaults_for_sparse_serialization = 0.9537783861160278, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 3390, prefer_fetch_merged_part_size_threshold = 10583351020, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 15519957, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 98533, primary_key_compress_block_size = 92747
ALTER TABLE r_prop_table2 MODIFY COLUMN column_codec REMOVE CODEC;
DROP DATABASE IF EXISTS test_1hxp0508 
INSERT INTO test_01193_18429.table_6_951 VALUES 
CREATE TABLE test_01193_18429.table_9_473 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'Running test stateless/01669_join_or_duplicates.sql from pid=1713' 
SELECT formatDateTime(toDateTime64('1969-12-12 12:12:12', 0, 'Asia/Istanbul'), '%C');
INSERT INTO src VALUES /* (-38, 2) */ 
drop table if exists data_01295;
SELECT number % 2 ? toString(number) : toString(-number) FROM system.numbers LIMIT 10;
SELECT not 0;
DROP DATABASE IF EXISTS test_ixj7bh11 
SHOW CREATE TABLE alter_default;
INSERT INTO test_01193_18429.table_6_161 VALUES 
SELECT COLUMNS(dummy);
INSERT INTO test_01193_18429.table_4_999 VALUES 
SELECT 'Running test stateless/02841_tuple_modulo.sql from pid=1722' 
DROP TABLE IF EXISTS limited_merge_table;
select 3 = windowFunnel(86400, 'strict_deduplication')(ts, event='a', event='b', event='c', event='d') from strict_BiteTheDDDD format JSONCompactEachRow;
DROP DATABASE IF EXISTS test_6xwumk80 
CREATE TABLE rmt1 (`n` int) ENGINE = ReplicatedMergeTree('/test/02468/{database}', '2') PARTITION BY n % 2 ORDER BY tuple() SETTINGS replicated_max_ratio_of_wrong_parts = 0, max_suspicious_broken_parts = 0, max_suspicious_broken_parts_bytes = 0, index_granularity = 19747, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 3853, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 760230, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 9821957421, index_granularity_bytes = 31323332, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 60451, primary_key_compress_block_size = 64917
SELECT MINUTE(NULL, NULL, NULL);
SELECT 40,toFixedString('Hello', 10), bin(bitShiftRight(toFixedString('Hello', 10), 40));
SELECT pointInPolygon((39.840202, 21.451471), [(39.84886, 21.43817),(39.85002, 21.43712),(39.85126, 21.43554),(39.85158, 21.43529),(39.85427, 21.4341),(39.85471, 21.4338),(39.85655, 21.43378),(39.85785, 21.43364),(39.85715, 21.43444),(39.85687, 21.43452),(39.85609, 21.43509),(39.85562, 21.43524),(39.85418, 21.43543),(39.85305, 21.43578),(39.85245, 21.43611),(39.85064, 21.43763),(39.85024, 21.43783),(39.84886, 21.43817)]);
SELECT 0 = dictHas(concat('test_7kssh40k', '.dict_ipv4_trie'), tuple(IPv4StringToNum('128.127.127.127')))
SELECT toInt8(number - 10) AS x, round(x, -2), roundBankers(x, -2), floor(x, -2), ceil(x, -2), trunc(x, -2) FROM system.numbers LIMIT 20;
SELECT arrayEnumerateUniqRanked(2, [[1,2,3],[2,2,1],[3]], 2);
CREATE TABLE test_427A4D386B553D203A5C352C282834205B562D4364635A253A5C6B222C715D79673834344A7B3E4D(x UInt8) Engine=Memory;
CREATE INDEX idx_tab3_1 ON tab3 (col0 DESC,col1 DESC);
SELECT 'Running test stateless/00744_join_not_found_column.sql from pid=1714' 
INSERT INTO test_01193_18429.table_4_243 VALUES 
INSERT INTO test_01193_18429.table_1_449 VALUES 
INSERT INTO test_01193_18429.table_9_716 VALUES 
SELECT arrayJoin(CAST(['hello', 'world'] AS Array(FixedString(5)))) LIKE '%helloworld%';
CREATE TABLE test_02908_r1_279 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_279', 'r1') ORDER BY tuple()
CREATE TABLE test_62654328204B44537E2A2C4E472A2E47633931766F7C6D215D3367366B2851453E675F7C696B7879(x UInt8) Engine=Memory;
CREATE TABLE test_02908_r3_242 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_242', 'r3') ORDER BY tuple()
SELECT JSONExtract('{"a":-123456789012.345}', 'a', 'Int64') as a, toTypeName(a);
CREATE TABLE test_5E4B753E30523A5F3A66294C4F72306C752C684B353E51786F62425F522D30572C343237366C5B41(x UInt8) Engine=Memory;
SELECT c.pe, c.pe.values.a FROM (SELECT * FROM t3) ARRAY JOIN c.pe SETTINGS allow_experimental_analyzer = 1;
CREATE TABLE test_01193_18429.table_9_99 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
create table receiver_02572 as data_02572;
CREATE TABLE test_02908_r3_202 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_202', 'r3') ORDER BY tuple()
select min(i), max(i), count() from d where moduloLegacy(i, 2) = 0 group by _partition_id order by _partition_id;
SELECT written_bytes > 10 FROM system.quotas_usage WHERE quota_name = 'q02247'
ALTER POLICY p1_01295, p2_01295 ON db.table TO ALL;
EXPLAIN AST optimize=1 SELECT * FROM numbers(0);
INSERT INTO test_01193_18429.table_7_819 VALUES 
drop table if exists local_t;
CREATE TABLE test_7E63525E75364D2C7E2B5A2927284F734B2A525476346E655A7B6D317366507752437B3656575A5C(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_8_307 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_7_429 VALUES 
SELECT 12,'Hello',bin(bitShiftRight('Hello', 12));
CREATE TABLE test_01193_18429.table_5_585 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP DATABASE IF EXISTS test_kkkczhck 
INSERT INTO test_01193_18429.table_6_752 VALUES 
INSERT INTO test_01193_18429.table_1_820 VALUES 
CREATE TABLE test_01193_18429.table_3_687 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 31014, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE TABLE test_01193_18429.table_6_163 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_2_255 VALUES 
select 10 as x format TSV 
ALTER TABLE src_6 REPLACE PARTITION 9 FROM src_12
insert into function file('02884_1.csv') select 1 as x settings engine_file_truncate_on_insert=1;
drop table if exists test_in_tuple_1;
INSERT INTO test_01193_18429.table_9_97 VALUES 
SYSTEM RELOAD DICTIONARY dict_hashed_simple_String;
DROP ROW POLICY 02763_filter_2 ON 02763_merge_merge_1;
DROP TABLE IF EXISTS data
CREATE DATABASE IF NOT EXISTS test_guei4bg9 
SELECT count() from tab_02473 PREWHERE b > 0 AND b <= 70 AND c > 0 AND c <= 72 AND d > 32 AND d <= 62 WHERE a == 0;
ALTER TABLE concurrent_alter_mt_4 MODIFY COLUMN value1 UInt32 SETTINGS replication_alter_partitions_sync=0
CREATE TABLE test_01193_18429.table_8_938 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_group_by_with_rollup_order (`id` Int64, `a` Nullable(Int64), `b` Nullable(String)) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 43614, min_bytes_for_wide_part = 872787115, ratio_of_defaults_for_sparse_serialization = 0.13596580922603607, replace_long_file_name_to_hash = true, max_file_name_length = 62, merge_max_block_size = 8947, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 6345100708, index_granularity_bytes = 16142702, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 22098, primary_key_compress_block_size = 37447
INSERT INTO 02500_nested(nes) VALUES 
INSERT INTO test_01193_18429.table_9_130 VALUES 
select toYYYYMMDD(toDate32(recordTimestamp, 'Europe/Amsterdam')), toDate32(recordTimestamp, 'Europe/Amsterdam'), toFloat64(1665519765) as recordTimestamp, toTypeName(recordTimestamp);
CREATE TABLE test_4172475D606F71563D7A4F5A6663564556295C454772322D2E3B4239234B597135413E49546D7569(x UInt8) Engine=Memory;
select 1 = multiSearchAny(materialize('abcdefgh'), ['cd']) from system.numbers limit 10;
SELECT s FROM index_for_like WHERE s LIKE 'H%';
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), N + toInt64(-1) as r FORMAT CSV;
set mutations_sync = 1;
CREATE DATABASE IF NOT EXISTS test_s42arjgo 
OPTIMIZE TABLE testSummingMT FINAL;
INSERT INTO test_01193_18429.table_10_808 VALUES 
explain syntax select null is not null;
CREATE TABLE test_33237D4E2157556723593A752A3752464E7379222F5C4A6C286C4634434A5E5E44413478605A6D74(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00585_union_all_subquery_aggregation_column_removal.sql from pid=1726' 
SELECT cutIPv6(IPv6StringToNum('2001:0DB8:AC10:FE01:FEED:BABE:CAFE:F00D'), 7, 0);
INSERT INTO r3 SELECT 8
DROP TABLE IF EXISTS circles;
SELECT 1 as one FROM system.one LIMIT 1 BY one;
SELECT 'Running test stateless/01755_shard_pruning_with_literal.sql from pid=1720' 
SELECT parseDateTimeBestEffortOrNull('0100:0100:0000');
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (105 < 89 AND 73 > 0 ? 105 : 0)), throwIf(last != (105 < 89 AND 73 > 0 ? least(89 - 1, 105 + 73 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(89) LIMIT 105, 73);
SELECT uniqUpToArray(10)([0, 1, 1], [0, 1, 1], [0, 1, 0]);
CREATE TABLE test_01193_18429.table_3_781 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select 1 = position('abcdefgh', materialize('abcdefg')) from system.numbers limit 10;
CREATE DATABASE IF NOT EXISTS test_2w02jud7 
SELECT JSONExtractUInt('');
CREATE TABLE test_01193_18429.table_8_270 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select makeDateTime(1984, 1, 1, 25, 0, 0, 'UTC');
SELECT sum(e) from tab_02473 PREWHERE b > 0 AND b <= 70 AND c > 46 AND c <= 76 AND d > 5 AND d <= 79 WHERE a == 0;
CREATE TABLE test_01193_18429.table_7_206 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_00861 FORMAT CSV 
CREATE TABLE test (`c_id` String, `p_id` String, `d` String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test/test_table', '1') ORDER BY (c_id, p_id) SETTINGS index_granularity = 59774, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 18349, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1433736932, index_granularity_bytes = 5590411, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 61332, primary_key_compress_block_size = 63816
SELECT '1e-10' AS x, toDecimal32(x, 9);
CREATE INDEX idx_tab3_1 ON tab3 (col0,col1 DESC);
SELECT YYYYMMDDToDate32(23000101.1);
CREATE TABLE test_6A2575422F7B6F3A3652702435333677605C465A423D675A792948764B2C5D2D2C35352C5721685A(x UInt8) Engine=Memory;
SELECT multiIf((number % 2) = 0, [toFloat64(1), toFloat64(2)], (number % 3) = 0, [toInt16(2), toInt16(3)], [toInt32(3), toInt32(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_4_877 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_8_314 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_5A3A3E2263756953656E686F6B312C556D576D725E336670765F21727329454C68274F5D4B39364B(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_3_671 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SYSTEM STOP MERGES t_nested_offsets;
INSERT INTO test_01193_18429.table_10_645 VALUES 
insert into a values 
DROP DATABASE IF EXISTS test_lf21ytjj 
CREATE DATABASE IF NOT EXISTS test_0nhbjo9b 
INSERT INTO test_01193_18429.table_6_847 VALUES 
drop table if exists smta;
select 'GROUP BY toString(number)';
CREATE TABLE quorum2 (`x` UInt32, `y` Date) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00732/quorum_have_data', '2') PARTITION BY y ORDER BY x SETTINGS index_granularity = 41857, min_bytes_for_wide_part = 486886302, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 19193, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 119739, vertical_merge_algorithm_min_columns_to_activate = 13, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 13506487, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 26692, primary_key_compress_block_size = 36709
SELECT '*** Table without columns with fixed size ***';
SELECT multiIf((number % 2) = 0, toFloat32(1), (number % 3) = 0, toInt8(2), toFloat64(3)) FROM system.numbers LIMIT 10;
select 5 = multiSearchFirstIndexCaseInsensitive(materialize('KoLaGGWMRbPbKNChdKPGuNCDKZtWRX'), ['FBmf', 'QJxevrlVWhTDAJetlGoEBZWYz', 'tKoWKKXBOATZukMuBEaYYBPHuyncskOZYD', 'kgjgTpaHXji', '', 'xOJWVRvQoAYNVSN', 'YApQjWJCFuusXpTLfmLPinKNEuqfYAz', 'GXGfZJxhHcChCaoLwNNocnCjtIuw', 'ZLBHIwyivzQDbGsmVNBFDpVaWkIDRqsl', 'Kp', 'EyrNtIFdsoUWqLcVOpuqJBdMQ', 'AggwmRBpbknCHdKPgun', 'xNlnPtyQsdqH', 'hDk']) from system.numbers limit 10;
SELECT toInt16(toRelativeWeekNum(toDateTime64('1960-11-30 18:00:11.999', 3, 'UTC')));
INSERT INTO test_01193_18429.table_7_368 VALUES 
CREATE TABLE test_57733A48235272514C5A413543277424373A423D526858737D4A2543335A7A48726B73776828706D(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_gjcch6jb 
SELECT * FROM table_with_compact_parts WHERE key = 1 FORMAT TSVWithNames;
system flush distributed dist_01293;
DROP TABLE test_00861;
select sleepEachRow(3) as higher_probability_of_reproducing_the_issue format Null;
DESCRIBE (SELECT one.dummy);
CREATE TABLE test_01193_18429.table_8_914 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT arrayJoin([3, nan, 2]) SETTINGS extremes = 1;
INSERT INTO alter_00665 (`boolean_false`) VALUES 
SELECT -32769, 4294967295, -32769 = 4294967295, -32769 != 4294967295, -32769 < 4294967295, -32769 <= 4294967295, -32769 > 4294967295, -32769 >= 4294967295, 4294967295 = -32769, 4294967295 != -32769, 4294967295 < -32769, 4294967295 <= -32769, 4294967295 > -32769, 4294967295 >= -32769 , toInt32(-32769) = toUInt32(4294967295), toInt32(-32769) != toUInt32(4294967295), toInt32(-32769) < toUInt32(4294967295), toInt32(-32769) <= toUInt32(4294967295), toInt32(-32769) > toUInt32(4294967295), toInt32(-32769) >= toUInt32(4294967295), toUInt32(4294967295) = toInt32(-32769), toUInt32(4294967295) != toInt32(-32769), toUInt32(4294967295) < toInt32(-32769), toUInt32(4294967295) <= toInt32(-32769), toUInt32(4294967295) > toInt32(-32769), toUInt32(4294967295) >= toInt32(-32769) , toInt32(-32769) = toUInt64(4294967295), toInt32(-32769) != toUInt64(4294967295), toInt32(-32769) < toUInt64(4294967295), toInt32(-32769) <= toUInt64(4294967295), toInt32(-32769) > toUInt64(4294967295), toInt32(-32769) >= toUInt64(4294967295), toUInt64(4294967295) = toInt32(-32769), toUInt64(4294967295) != toInt32(-32769), toUInt64(4294967295) < toInt32(-32769), toUInt64(4294967295) <= toInt32(-32769), toUInt64(4294967295) > toInt32(-32769), toUInt64(4294967295) >= toInt32(-32769) , toInt32(-32769) = toInt64(4294967295), toInt32(-32769) != toInt64(4294967295), toInt32(-32769) < toInt64(4294967295), toInt32(-32769) <= toInt64(4294967295), toInt32(-32769) > toInt64(4294967295), toInt32(-32769) >= toInt64(4294967295), toInt64(4294967295) = toInt32(-32769), toInt64(4294967295) != toInt32(-32769), toInt64(4294967295) < toInt32(-32769), toInt64(4294967295) <= toInt32(-32769), toInt64(4294967295) > toInt32(-32769), toInt64(4294967295) >= toInt32(-32769) , toInt64(-32769) = toUInt32(4294967295), toInt64(-32769) != toUInt32(4294967295), toInt64(-32769) < toUInt32(4294967295), toInt64(-32769) <= toUInt32(4294967295), toInt64(-32769) > toUInt32(4294967295), toInt64(-32769) >= toUInt32(4294967295), toUInt32(4294967295) = toInt64(-32769), toUInt32(4294967295) != toInt64(-32769), toUInt32(4294967295) < toInt64(-32769), toUInt32(4294967295) <= toInt64(-32769), toUInt32(4294967295) > toInt64(-32769), toUInt32(4294967295) >= toInt64(-32769) , toInt64(-32769) = toUInt64(4294967295), toInt64(-32769) != toUInt64(4294967295), toInt64(-32769) < toUInt64(4294967295), toInt64(-32769) <= toUInt64(4294967295), toInt64(-32769) > toUInt64(4294967295), toInt64(-32769) >= toUInt64(4294967295), toUInt64(4294967295) = toInt64(-32769), toUInt64(4294967295) != toInt64(-32769), toUInt64(4294967295) < toInt64(-32769), toUInt64(4294967295) <= toInt64(-32769), toUInt64(4294967295) > toInt64(-32769), toUInt64(4294967295) >= toInt64(-32769) , toInt64(-32769) = toInt64(4294967295), toInt64(-32769) != toInt64(4294967295), toInt64(-32769) < toInt64(4294967295), toInt64(-32769) <= toInt64(4294967295), toInt64(-32769) > toInt64(4294967295), toInt64(-32769) >= toInt64(4294967295), toInt64(4294967295) = toInt64(-32769), toInt64(4294967295) != toInt64(-32769), toInt64(4294967295) < toInt64(-32769), toInt64(4294967295) <= toInt64(-32769), toInt64(4294967295) > toInt64(-32769), toInt64(4294967295) >= toInt64(-32769) 
CREATE TABLE IF NOT EXISTS decimal ( a DECIMAL(9,4) DEFAULT 0, b DECIMAL(18,4) DEFAULT a / 2, c DECIMAL(38,4) DEFAULT b / 3, d MATERIALIZED a + toDecimal32('0.2', 1), e ALIAS b * 2, f ALIAS c * 6 ) ENGINE = Memory;
SELECT arrayMap(x -> materialize(123), [1, 2, 3]);
INSERT INTO test_01193_18429.table_3_617 VALUES 
CREATE TABLE test_01193_18429.table_6_343 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select t1.b, t2.d from t1 join t2 on c = a;
CREATE TABLE test_01193_18429.table_8_608 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_4_865 VALUES 
CREATE DATABASE IF NOT EXISTS test_9hqh6qgw 
SELECT `UserID` FROM `test_c5zukzwt`.`users` WHERE `UserID` IN ((SELECT arrayJoin([1468013291393583084, 1321770221388956068])) AS `_subquery3835`)
CREATE TABLE test_6478632D327C654D532A3C6A362E5E5F7B3C77305B65327D4F3E64246F2A2A403B4862243C6C535A(x UInt8) Engine=Memory;
SELECT t1.aliascol1, t2.aliascol2 FROM t1 JOIN t2 ON t1.foo = t2.bar ORDER BY t1.time, t2.time;
WITH toDate('2021-03-14') AS date_value, toDateTime('2021-03-14 11:22:33') AS date_time_value, toDateTime64('2021-03-14 11:22:33', 3) AS date_time_64_value SELECT monthName(date_value), monthName(date_time_value), monthName(date_time_64_value);
kill query where query_id = '02450_kill_distributed_query_deadlock_test_ft363ahb-23' sync
CREATE TABLE test_7071272F30367B58384871387E427469574A58613D52246533366D356524794B4B6D6F487D373872(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_5r4han3w 
SELECT 'Running test stateless/01268_procfs_metrics.sh from pid=1714' 
DROP DATABASE IF EXISTS test_eoimdpa2 
SELECT toDecimal32('-0.8', 4) AS x, toUInt32(x);
DROP TABLE IF EXISTS test_view_filtered;
CREATE TABLE test_222E377C5E5459292F516F2B39674B6232312C3C3E3365376156595D2E753D703864236475565D34(x UInt8) Engine=Memory;
CREATE TABLE test_6E5E752F405E4C692A2D6F717B76703E46524D287B244777224B3652644440406672702B2C2B5638(x UInt8) Engine=Memory;
CREATE TABLE codecTest (`key` UInt64, `name` String, `ref_valueF64` Float64, `ref_valueF32` Float32, `valueF64` Float64 CODEC(FPC), `valueF32` Float32 CODEC(FPC)) ENGINE = MergeTree ORDER BY key SETTINGS index_granularity = 8758, min_bytes_for_wide_part = 313620912, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 24195, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 9704049, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 9076, primary_key_compress_block_size = 55366
INSERT INTO test_01193_18429.table_7_7 VALUES 
ALTER TABLE concurrent_alter_detach_3 MODIFY COLUMN value1 UInt8 SETTINGS replication_alter_partitions_sync=0
CREATE TABLE test_343F36794C494D473B50362E456C575371296A3F632D272F523D62243C36454B6F2524537537374F(x UInt8) Engine=Memory;
select format('{}{}{}', toFixedString('a', 1), materialize(toFixedString('b', 1)), materialize('c')) == 'abc';
insert into set_index_not values 
SELECT toTypeName(first_value_respect_nullsState(dummy)), toTypeName(last_value_respect_nullsState(dummy)) from system.one;
alter table many_mutations delete where y = 451 * 2 settings mutations_sync = 0;
SELECT '2023-10-23' + INTERVAL 1 WEEK, '2023-10-23 12:34:56.123' + INTERVAL 1 WEEK;
CREATE INDEX idx_tab4_2 ON tab4 (col4,col0,col1);
SELECT count() FROM system.zookeeper WHERE path = '/test_keeper_map/02704_keeper_map_zk_nodes/test_qghofjre/data'
SELECT snowflakeToDateTime(NULL);
SELECT 'Running test stateless/02830_insert_values_time_interval.sql from pid=1720' 
SELECT count(), min(k), max(k), avg(k) FROM t1 SETTINGS allow_experimental_parallel_reading_from_replicas = 1, max_parallel_replicas = 3, prefer_localhost_replica = 0, cluster_for_parallel_replicas='test_cluster_one_shard_three_replicas_localhost', parallel_replicas_single_task_marks_count_multiplier = 0.001;
create view refreshes as select * from system.view_refreshes where database = 'test_6dpvz1bo' order by view
CREATE TABLE test_5E6763276A2F307B554E44642364652C624D45675F24305C723F7D4B72212E2F7C2536612842216C(x UInt8) Engine=Memory;
SELECT t1.id, t1.value, t2.id, t2.value, t3.id, t3.value FROM test_table_join_1 AS t1 FULL JOIN test_table_join_2 AS t2 ON test_table_join_1.id = test_table_join_2.id FULL JOIN test_table_join_3 AS t3 ON test_table_join_2.id = test_table_join_3.id;
DROP TABLE IF EXISTS t_json_async_insert
with '2018-01-12 22:33:44' as s, toDateTime(s) as datetime, toDateTime64(s, 6) as datetime64, toDate(s) as date, toDate32(s) as date32 SELECT formatDateTimeInJodaSyntax(datetime, 'EEEEE'), formatDateTimeInJodaSyntax(datetime64, 'EEEEE'), formatDateTimeInJodaSyntax(date, 'EEEEE'), formatDateTimeInJodaSyntax(date32, 'EEEEE');
INSERT INTO test_01193_18429.table_6_781 VALUES 
select 0 = position(materialize(''), 'abc');
DROP DATABASE IF EXISTS test_8orsg9bp 
DROP TABLE alter_00665;
SELECT hasToken('hay hay hay hay hay hay hay hay hay needle hay hay hay hay hay hay hay hay hay', 'needle'), ' expecting ', 1;
INSERT INTO test_01193_18429.table_4_59 VALUES 
CREATE DATABASE IF NOT EXISTS test_cscgszcn 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (49 < 72 AND 61 > 0 ? 49 : 0)), throwIf(last != (49 < 72 AND 61 > 0 ? least(72 - 1, 49 + 61 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(72) LIMIT 49, 61);
insert into test select number, multiIf(number % 3 == 2, NULL, number % 3 == 1, number, arrayMap(x -> multiIf(number % 9 == 0, NULL, number % 9 == 3, 'str_' || toString(number), number), range(number % 10))) from numbers(1000000) settings min_insert_block_size_rows=100000
DROP DATABASE IF EXISTS test_lx5tb1ev 
select quantilesGK(1, 100/1000, 200/1000, 250/1000, 314/1000, 777/1000)(number + 1) from numbers(1000);
INSERT INTO test_01193_18429.table_8_916 VALUES 
SELECT argMaxIf(number, now() + number, number % 10 > 20) FROM (Select number as number from numbers(10, 10000)) settings max_threads=1, max_block_size=100;
INSERT INTO test_01193_18429.table_3_830 VALUES 
SELECT a, e FROM t_fixed_prefix WHERE c = 1 ORDER BY a, e SETTINGS optimize_read_in_order = 0
INSERT INTO test_01193_18429.table_10_33 VALUES 
SELECT cast((1, 'Value'), 'Tuple (id UInt64, value String)') AS value, value.id, value.value;
INSERT INTO test_01193_18429.table_6_967 VALUES 
CREATE DATABASE IF NOT EXISTS test_t1euh1vx 
CREATE TABLE test_01193_18429.table_8_289 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DESCRIBE TABLE s3Cluster('test_cluster_two_shards_localhost', 'http://localhost:11111/test/{a,b,c}.tsv', 'test', '[HIDDEN]', 'TSV')
CREATE DATABASE IF NOT EXISTS test_yz9uirrg 
SELECT 'Running test stateless/02915_analyzer_fuzz_5.sql from pid=1722' 
INSERT INTO unsorted VALUES 
SELECT snowflakeToDateTime(NULL, NULL, NULL);
DROP DATABASE IF EXISTS test_jfy9m090 
DROP TABLE IF EXISTS test_2;
SELECT toString(number) FROM numbers(10e6) FORMAT TSV
SELECT quantileExactHigh(1.0)(a), quantileExactHigh(1.0)(b), quantileExactHigh(1.0)(c) FROM decimal WHERE a >= 0;
INSERT INTO src VALUES /* (4, 1) */ 
SELECT toDecimal32OrZero(NULL);
CREATE TABLE right_join (x UInt32, s String) engine = Join(ALL, RIGHT, x);
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c0) AND (NOT c1)) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_01193_18429.table_3_114 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select 'mixing const and non-const-columns:';
INSERT INTO test_01193_18429.table_5_857 VALUES 
INSERT INTO test_01193_18429.table_7_192 VALUES 
DROP TABLE IF EXISTS merge_tf;
SELECT multiIf((number % 2) = 0, [toUInt16(1), toUInt16(2)], (number % 3) = 0, [toUInt32(2), toUInt32(3)], [toUInt16(3), toUInt16(3)]) FROM system.numbers LIMIT 10;
insert into t select 0, 0 from numbers(50);
CREATE DATABASE IF NOT EXISTS test_jlg199mq 
select 16 as offset, 16 as length, 'Hello' as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
select concat(materialize('a'), 'b') == 'ab';
DROP TABLE IF EXISTS arrow_nullable_arrays
SELECT * FROM (SELECT toLowCardinality(toNullable(number)) AS l FROM system.numbers LIMIT 3) s1 ANY LEFT JOIN (SELECT toLowCardinality(toNullable(number)) AS r FROM system.numbers LIMIT 3) s2 ON l + 1 = r * 1 ORDER BY l;
create table db_01517_atomic.source (key Int) engine=Null;
DROP TABLE IF EXISTS tbl;
CREATE TABLE test_01193_18429.table_6_500 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_2_126 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/01129_dict_get_join_lose_constness.sql from pid=1705' 
alter table many_mutations delete where y = 314 * 2 settings mutations_sync = 0;
SELECT uniqCombined(tuple('')) FROM numbers(1);
alter table many_mutations delete where y = 933 * 2 settings mutations_sync = 0;
CREATE DATABASE IF NOT EXISTS test_rk94adfy 
CREATE DATABASE IF NOT EXISTS test_6b8059xo 
CREATE TABLE db1_02703.02703_rqtable (x UInt8) ENGINE = MergeTree ORDER BY x;
select '-------toLastDayOfWeek---------';
INSERT INTO test_01193_18429.table_1_791 VALUES 
CREATE TABLE test_584D632F5043254424452247614D5E29532A6C2463307E2628643424472E4C497D7D4D5740242229(x UInt8) Engine=Memory;
SELECT dictGetString(concat('test_vaepqvz9', '.dict'), 'value_default', toUInt64(12))
SELECT toDecimalString(2.123456, 2);
SELECT '*** Table definition with SETTINGS ***';
SELECT '{a}' AS x, x LIKE (x AS pat), materialize(x) LIKE pat;
SELECT 'Running test stateless/01716_array_difference_overflow.sql from pid=1713' 
INSERT INTO test_01193_18429.table_2_843 VALUES 
CREATE DATABASE IF NOT EXISTS test_ikus9zxm 
DROP DATABASE IF EXISTS test_jvj46ihp 
DROP DATABASE IF EXISTS test_yeoqhv8w 
SELECT age('year', toDateTime('2015-08-18 00:00:00', 'UTC'), toDate32('2016-08-18', 'UTC'), 'UTC');
DROP DATABASE IF EXISTS test_6b8059xo 
CREATE DATABASE IF NOT EXISTS test_j8ky2wyu 
SELECT 'Running test stateless/01330_array_join_in_higher_order_function.sql from pid=1722' 
SELECT count(*) FROM remote('127.0.0.{1,2}', merge(currentDatabase(), '^remote_test'));
SELECT generateUUIDv4() = generateUUIDv4(1);
EXPLAIN SYNTAX (SELECT sum(uint64 - 1 AS i) j from test_table where i > 0 having j > 0);
INSERT INTO test_input SELECT toInt32(number % 1000) AS id FROM numbers(10);
INSERT INTO test_01193_18429.table_9_612 VALUES 
optimize table ttl_00933_1 final;
SHOW CREATE USER u16_01292;
CREATE TABLE test_01193_18429.table_9_132 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO dst VALUES /* (2, 4) */ 
SELECT 'Running test stateless/02675_sparse_columns_clear_column.sql from pid=1726' 
INSERT INTO r4 SELECT 52 % 10 = 4 ? 52 - 1 : 52
CREATE TABLE test_203B643D294C584A4C366B352927497D62256D635A7A6C5E3A3160296E6C5B583C51517E436B4D6C(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_3rynnx3w 
SELECT 'Running test stateless/01407_lambda_arrayJoin.sql from pid=1713' 
select sipHash64Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63)) == sipHash64(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63));
INSERT INTO test_01193_18429.table_1_771 VALUES 
CREATE TABLE report(id UInt32, event_date Date, priority UInt32, description String) ENGINE = MergeTree(event_date, intHash32(id), (id, event_date, intHash32(id)), 8192);
SELECT CASE WHEN 1 THEN [col2, 'bar'] WHEN (col1 % 3) = 0 THEN [col4, col5] ELSE [col6, col7] END FROM multi_if_check;
INSERT INTO test_01193_18429.table_4_823 VALUES 
SELECT array_concat_agg([NULL],[NULL]);
INSERT INTO test_01193_18429.table_3_668 VALUES 
INSERT INTO replicated_mutation_table SELECT toDate('2019-10-02'), number, '42' FROM numbers(10)
CREATE TABLE test_01193_18429.table_5_730 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP TABLE IF EXISTS 02005_test_table;
CREATE TABLE test_46342F7A5C3C78666F6943683D48246B5578715A3469686C6E58315452432A5F48675B7636776E7B(x UInt8) Engine=Memory;
INSERT INTO test_02908_r1_80 SELECT rand64() FROM numbers(5);
INSERT INTO test_01193_18429.table_6_177 VALUES 
SELECT `x`, `y` FROM `test_33excl4a`.`t3` ORDER BY `x` ASC
INSERT INTO test_01193_18429.table_8_359 VALUES 
CREATE TABLE test_01193_18429.table_8_223 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT arrayReduce('maxOrNull', [toDecimal128(-123.45, 2)]);
CREATE TABLE test_01193_18429.table_4_823 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE DATABASE IF NOT EXISTS test_kfl5lb6x 
SELECT toStartOfMonth(d) as d, count() FROM with_fill_date GROUP BY d ORDER BY d WITH FILL FROM toDate('2020-01-01') TO toDate('2021-01-01') STEP INTERVAL 3 MONTH;
CREATE TABLE test_01193_18429.table_4_794 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_8wynppmk 
select format('{}{}{}', toFixedString('a', 1), materialize('b'), 'c') == 'abc' from system.numbers limit 5;
SELECT '(forward, head, A) id = 12', sequenceNextNode('forward', 'head')(dt, action, 1, action = 'A') AS next_node FROM test_sequenceNextNode WHERE id = 12;
SYSTEM SYNC REPLICA concurrent_alter_add_drop_3 STRICT
SELECT cityHash64(groupArray(x)) FROM enum_pk WHERE ((x != toString(1)) > 0) > 0;
insert into left_table select toDate('2020-01-01'), 0, number * 2 from numbers(3);
ALTER QUOTA q3_01297 FOR INTERVAL 2 HOUR MAX errors = 10, FOR INTERVAL 1 HOUR MAX queries = 70;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c4) AND c1 AND (NOT c5) AND (NOT c0) AND (NOT c2)) OR (c3 AND (NOT c9)) OR (c5 AND (NOT c7)) OR (c5) OR (c8 AND c3 AND c3 AND c6) OR ((NOT c8) AND c9) SETTINGS convert_query_to_cnf = 1
CREATE TABLE mt (`n` Int8, `m` Int8) ENGINE = MergeTree PARTITION BY 0 < n ORDER BY n SETTINGS old_parts_lifetime = 0, index_granularity = 6001, min_bytes_for_wide_part = 636824934, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 92, merge_max_block_size = 18488, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 205379, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10687119730, index_granularity_bytes = 23301026, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 39367, primary_key_compress_block_size = 51886
insert into test with 'Variant(String, UInt64, LowCardinality(String), Tuple(a UInt32, b UInt32), Array(UInt64))' as type select number, multiIf(number % 6 == 0, CAST(NULL, type), number % 6 == 1, CAST('str_' || toString(number), type), number % 6 == 2, CAST(number, type), number % 6 == 3, CAST(('lc_str_' || toString(number))::LowCardinality(String), type), number % 6 == 4, CAST(tuple(number, number + 1)::Tuple(a UInt32, b UInt32), type), CAST(range(number % 20 + 1)::Array(UInt64), type)) as res from numbers(1200000);
select [1, 1, 2, 3, 4, 0, 0, 0, 0, 0] = groupArray(position('aaaa', materialize('a'), number)) from numbers(10);
INSERT INTO test_01193_18429.table_1_71 VALUES 
CREATE TABLE test_01193_18429.table_7_494 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT t1.id, t1.value, t2.id, t2.value, t3.id, t3.value FROM test_table_join_1 AS t1 RIGHT JOIN test_table_join_2 AS t2 ON t1.id = t2.id AND t1.value == 'Join_1_Value_0' LEFT JOIN test_table_join_3 AS t3 ON t2.id = t3.id AND t2.value == 'Join_2_Value_0';
INSERT INTO test_01193_18429.table_7_339 VALUES 
SELECT (1,'') IN ((-1,''));
CREATE DATABASE db_01038
SELECT ngrams(toFixedString('Test', 4), 1);
CREATE TABLE test_2B253F623126584C523644646461392775445C2779306C644A415D255144264D2D3855704B743B6E(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_6_691 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT '49' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ff80::')))
SELECT toInt128OrNull(NULL, NULL);
DROP DATABASE IF EXISTS test_vqd5ie4c 
INSERT INTO src_2 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 2
CREATE TABLE test_01193_18429.table_9_924 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select * from from_table;
DROP TABLE table_key;
CREATE TABLE test_3F6F602131604328533B56713A7350377C72522240677035476F7021333D30437341622E504C7473(x UInt8) Engine=Memory;
INSERT INTO r1 SELECT 8 % 10 = 1 ? 8 - 1 : 8
CREATE TABLE test_01193_18429.table_1_426 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
insert into 02681_undrop_mergetree values 
INSERT INTO video_log SELECT toUnixTimestamp('2022-07-22 01:00:00') + (rowNumberInAllBlocks() / 20000), user_id_raw % 100000000 AS user_id, 100 AS device_id, domain_raw % 100, (bytes_raw % 1024) + 128, (duration_raw % 300) + 100 FROM rng LIMIT 10;
SELECT `sleep(3)` FROM view(SELECT sleep(3) FROM `system`.`one`)
SELECT 'Hello' ILIKE '%_%';
CREATE TABLE IF NOT EXISTS test_01444.t14127 (`x` UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 49736, min_bytes_for_wide_part = 645103364, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 6, merge_max_block_size = 15200, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 21360504, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75390, primary_key_compress_block_size = 98921
INSERT INTO test_01193_18429.table_4_716 VALUES 
CREATE TABLE test_01193_18429.table_8_213 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
create table t1(x1 Date32) engine Memory;
CREATE TABLE test_6F605D76594E31216A214B27254A7439506A69614E61442859356A6423435D492D7A54483D6D6853(x UInt8) Engine=Memory;
INSERT INTO test_tab SETTINGS format_csv_delimiter='\t', input_format_csv_allow_whitespace_or_tab_as_delimiter=true FORMAT CSV
SELECT wordShingleMinHashCaseInsensitive('');
INSERT INTO test(id,a) VALUES 
set allow_deprecated_syntax_for_merge_tree=1;
SELECT `a` FROM `test_oe01xgw9`.`t` GROUP BY `a` ORDER BY `a` ASC LIMIT 100500, 5
SELECT h3IsResClassIII(h3_index) FROM h3_indexes ORDER BY h3_index;
DROP TABLE IF EXISTS order_by_desc;
CREATE TABLE IF NOT EXISTS test_01444.t12531 (`x` UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 49736, min_bytes_for_wide_part = 645103364, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 6, merge_max_block_size = 15200, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 21360504, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75390, primary_key_compress_block_size = 98921
EXPLAIN SYNTAX (SELECT 2 * count(decimal32) + sum(decimal32) From test_table);
CREATE TABLE test_01193_18429.table_2_674 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT arrayShuffle(groupArray(x),0xbad_cafe) FROM (SELECT number as x from system.numbers LIMIT 100);
CREATE TABLE test_02908_r2_190 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_190', 'r2') ORDER BY tuple()
SELECT addressToSymbol(NULL);
SELECT multiIf((number % 2) = 0, toInt32(1), (number % 3) = 0, toInt8(2), toUInt32(3)) FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_q2af70m5 
CREATE TABLE test_5975253848556474755F2436772C504B74316129633B46406D52547C76686C4C415D3A3753485B40(x UInt8) Engine=Memory;
select * from nested_smt final;
SELECT SVG([[(0., 0.), (10, 0), (10, 10), (0, 10)], [(4., 4.), (5, 4), (5, 5), (4, 5)]]);
select hex(sipHash128ReferenceKeyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51)));
SELECT 17,'Hello',bin(bitShiftRight('Hello', 17));
INSERT INTO alter_default select toDate('2020-01-05'), number from system.numbers limit 100;
SELECT constant_null ? then_non_constant_nullable : else_constant AS res FROM nullable_00431;
alter table many_mutations delete where y = 729 * 2 settings mutations_sync = 0;
insert into t3 select number, number from numbers(6000, 1000);
SELECT multiIf((number % 2) = 0, [toUInt8(1), toUInt8(2)], (number % 3) = 0, [toInt8(2), toInt8(3)], [toInt16(3), toInt16(3)]) FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_48j233zv 
CREATE DATABASE IF NOT EXISTS test_o2j4ocop 
SELECT wordShingleSimHashCaseInsensitiveUTF8(NULL, NULL);
SELECT JSONExtract('{"a":"-1234567890123456789999"}', 'a', 'Int64') as a, toTypeName(a);
SELECT * FROM subcolumns
INSERT INTO test_01193_18429.table_4_24 VALUES 
SELECT cutQueryString('http://www.example.com/a/b/c');
SELECT id FROM (SELECT arrayJoin([1, 2, 3]) AS id) WHERE id = 1;
CREATE TABLE test_02908_r1_45 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_45', 'r1') ORDER BY tuple()
SELECT toStartOfFiveMinute(NULL, NULL, NULL);
CREATE TABLE test_01193_18429.table_8_341 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO t_async_insert FORMAT JSONLines 
CREATE TABLE test_5D2D4B727B692D317C327E65462B4978417A405931515577643F3526444659216845495C20247D69(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_8_451 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT dictGetString(concat('test_g0lvg7te', '.test_dict_01080'), 'dim_id', x) FROM (SELECT tuple(toInt64(materialize(1))) AS x)
CREATE TABLE test_01193_18429.table_3_560 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DESCRIBE (WITH test_table_in_cte AS (SELECT id FROM test_table) SELECT id IN (SELECT id FROM test_table_in_cte) FROM test_table);
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c0) AND c9 AND (NOT c1) AND (NOT c6)) OR ((NOT c9)) SETTINGS convert_query_to_cnf = 0
SELECT cache_path, local_path FROM ( SELECT arrayJoin(cache_paths) AS cache_path, local_path, remote_path FROM system.remote_data_paths ) AS data_paths INNER JOIN system.filesystem_cache AS caches ON data_paths.cache_path = caches.cache_path
SELECT xxHash32([]);
CREATE TABLE test_01193_18429.table_3_84 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 92;
SELECT * FROM file('test_02103.data', 'JSONCompactEachRowWithNamesAndTypes', 'number UInt64, array Array(UInt64), string String') ORDER BY number SETTINGS input_format_parallel_parsing=1, min_chunk_bytes_for_parallel_parsing=40
optimize table simple_agf_summing_mt final;
INSERT INTO test_01193_18429.table_9_98 VALUES 
INSERT INTO r8 SELECT 96
CREATE TABLE test_01193_18429.table_7_243 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT * FROM merge('test_x160j3gt', '^test[12]$')
DESCRIBE FILESYSTEM CACHE 's3_cache_02933'
SELECT p, p.values.a FROM (SELECT * FROM t3) ARRAY JOIN c.pe as p SETTINGS allow_experimental_analyzer = 1;
SELECT count() FROM test_alter_attach_01901D;
INSERT INTO test_01193_18429.table_1_284 VALUES 
INSERT INTO test_01193_18429.table_6_893 VALUES 
INSERT INTO r4 SELECT 50
INSERT INTO test_7pb7weyz.t_mt_async_insert FORMAT Values
CREATE TABLE test_01193_18429.table_3_987 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT formatQuery(NULL);
CREATE TABLE test_01193_18429.table_8_814 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select round(1000 * ngramDistance(materialize('abcdefgh'), 'abcdefgh')) from system.numbers limit 5;
INSERT INTO test_02908_r1_161 SELECT rand64() FROM numbers(5);
INSERT INTO table_with_string_key VALUES
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (25 < 81 AND 92 > 0 ? 25 : 0)), throwIf(last != (25 < 81 AND 92 > 0 ? least(81 - 1, 25 + 92 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(81) LIMIT 25, 92);
SELECT t1.key, t1.key2 FROM t1 INNER ALL JOIN t2 ON t1.id == t2.id AND t2.key == t2.key2;
CREATE TABLE test_00818 (field String, not_field String) ENGINE = Memory;
DROP DATABASE IF EXISTS test_v4hmp4g3 
SELECT leftPad('abc', 2, '*'), leftPad('abc', 2::Int32, '*');
SELECT if((countDistinct(data) as c) == 0, 1, c) FROM ( SELECT _table, (count(), sum(a), sum(b), round(sum(c))) AS data FROM merge(currentDatabase(), 'alter_table_') GROUP BY _table )
SELECT multiIf((number % 2) = 0, [toInt32(1), toInt32(2)], (number % 3) = 0, [toFloat32(2), toFloat32(3)], [toUInt32(3), toUInt32(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_9_190 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select * from format(JSONEachRow, 'payload Array(String)', '{"payload" : []}') settings input_format_null_as_default=0;
SELECT t.t.t.t.*, t.t.t.t.* APPLY toTypeName FROM ttta FULL JOIN tttb USING (t);
DROP DICTIONARY database_for_dict.dict1;
DROP DATABASE IF EXISTS test_3pyrxbf9 
CREATE TABLE test_01193_18429.table_6_91 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT dictGet('test_01155_ordinary.dict', 'x', 'before moving tables');
select splitByString('IN', query)[-1] from system.query_log where event_date >= yesterday() and event_time > now() - interval 1 hour and not is_initial_query and query not like '%system%query_log%' and query like concat('%', currentDatabase(), '%AS%id_02%') and type = 'QueryFinish' order by query;
DROP TABLE t_json_13;
CREATE TABLE check_system_tables (`name1` UInt8, `name2` UInt8, `name3` UInt8) ENGINE = MergeTree PARTITION BY name2 ORDER BY name1 SAMPLE BY name1 SETTINGS min_bytes_for_wide_part = 0, compress_marks = 0, compress_primary_key = 0, index_granularity = 63816, ratio_of_defaults_for_sparse_serialization = 0.6026247143745422, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 23065, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 23428427, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 63814, primary_key_compress_block_size = 15748
CREATE TABLE test_2C793D74586D644A6E54474B274C4D776D2D73295266473B3D6635492025356C664F5E506F3D7D35(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_kmg2545q 
DROP DATABASE IF EXISTS test_f8ni3ppu 
CREATE TABLE test_01193_18429.table_7_221 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE abc (`f1` String, `f2` String) ENGINE = MergeTree ORDER BY f1 SETTINGS index_granularity = 55401, min_bytes_for_wide_part = 985883904, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 126, merge_max_block_size = 21836, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1319482532, index_granularity_bytes = 13349156, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 46091, primary_key_compress_block_size = 48038
CREATE DATABASE IF NOT EXISTS test_bzq7dlwf 
INSERT INTO r10 SELECT 45
SELECT CASE WHEN (number % 2) = 0 THEN [toInt16(1), toInt16(2)] WHEN (number % 3) = 0 THEN [toUInt32(2), toUInt32(3)] ELSE [toFloat64(3), toFloat64(3)] END FROM system.numbers LIMIT 10;
WITH 'Ã¦ÂÂÃ©ÂÂ' as n SELECT haystack, needle, hasToken(haystack, n) as result FROM ht WHERE func = 'hasToken' AND needle = n AND result != match;
INSERT INTO test_01193_18429.table_9_429 VALUES 
INSERT INTO test_01193_18429.table_5_375 VALUES 
INSERT INTO test_01193_18429.table_3_740 VALUES 
WITH ['2023-04-05 00:25:23.123', '2023-04-05 00:25:24.124']::Array(DateTime64(3)) AS dt SELECT arrayMax(dt), arrayMin(dt), arrayDifference(dt);
CREATE TABLE test_01193_18429.table_8_997 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/01906_partition_by_multiply_by_zero.sql from pid=1713' 
CREATE TABLE test_72335A305B362F5A452F7E7B5D4C284B27644760694D6F3D753F726F6948532D4C605A307D3E2D78(x UInt8) Engine=Memory;
EXPLAIN QUERY TREE SELECT * FROM 02702_logical_optimizer WHERE a = 1 OR 3 = a OR 2 = a OR a = NULL;
SELECT 'Running test stateless/00991_system_parts_race_condition_long.sh from pid=1718' 
CREATE TABLE test_01193_18429.table_3_126 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
alter table data_01900_1 update s = 'foo_76' where 1;
INSERT INTO test_01193_18429.table_7_122 VALUES 
SELECT 'Running test stateless/02149_issue_32487.sql from pid=1722' 
INSERT INTO test_01193_18429.table_7_942 VALUES 
SELECT 'Running test stateless/02494_query_cache_squash_partial_results.sql from pid=1705' 
INSERT INTO test_01193_18429.table_6_806 VALUES 
CREATE DATABASE IF NOT EXISTS test_u2u6dot2 
SELECT 'Control characters \x1f\x1f\x1f\x1f with zero width', 'Invalid UTF-8 which eats pending characters \xf0, and invalid by itself \x80 with zero width' FORMAT Vertical;
SELECT 'Ã¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂÃ¢ÂÂ';
SELECT toTypeName(res), sumMapMerge(s) as res FROM (SELECT sumMapState(statusMap) AS s FROM map_comb);
SELECT s, replaceAll(s, '_', 'o') AS a, REGEXP_REPLACE(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['._', '.']) AS s);
SELECT CASE col1 WHEN 0 THEN 1 WHEN 1 THEN 2 ELSE 3 END FROM multi_if_check;
/* ddl_entry=query-0000000140 */ CREATE TABLE test_rjj380a9.never_throw UUID 'f678c461-072d-46f9-b6c2-40930b7cf469' (`n` Int32) ENGINE = Memory
alter table data_01900_2 update s = 'bar_23' where 1;
CREATE TABLE test_02908_r1_86 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_86', 'r1') ORDER BY tuple()
SELECT `dummy`, `other` FROM `system`.`one` GLOBAL ALL INNER JOIN `_data_2527110282696205351_12081559765168586179` USING (`dummy`)
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c2)) OR ((NOT c2)) OR (c1 AND c6 AND (NOT c8) AND c7 AND (NOT c0)) SETTINGS convert_query_to_cnf = 0
SELECT 'Running test stateless/01606_merge_from_wide_to_compact.sql from pid=1724' 
SELECT toDate32OrDefault('');
INSERT INTO test_01193_18429.table_7_118 VALUES 
INSERT INTO test_01193_18429.table_10_751 VALUES 
SELECT 5, * FROM merge_tree ORDER BY d;
INSERT INTO src_5 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 20
SELECT 'Running test stateless/01387_clear_column_default_depends.sql from pid=1713' 
SELECT COUNT() FROM bloom_filter_null_types_test WHERE isNull(date);
INSERT INTO auto_assign_enum2 VALUES
CREATE TABLE test_496643432045452E20236E606123757D582A37775A6C677D645C485564386C40733A23232E552E5C(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_1_624 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP TABLE IF EXISTS 02176_test_complex_key_table;
CREATE TABLE test_535F206A3323392A4D307A60794E51284854507C4165465127555961377923702D70656A622F5379(x UInt8) Engine=Memory;
INSERT INTO src VALUES /* (3, 3) */ 
CREATE TABLE test_01193_18429.table_5_80 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT arrayZip(NULL, NULL);
SELECT COUNT() FROM bloom_filter_array_types_test WHERE has(fixed_string, toFixedString('10', 5));
INSERT INTO test_01193_18429.table_10_379 VALUES 
DELETE FROM t_mutations_subcolumns WHERE obj.k1.k2 = 'fee';
select * apply bitmapMin, * apply bitmapMax from (select * apply groupBitmapState from t);
CREATE TABLE test_77462F5763454A273C67572B776470206A567738612043762C5B24703D3C604D3B34313C6F6C4868(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_bkpobfc3 
select [6, 1, 15, 5, 0, 0, 0, 3, 2, 4, 0, 12, 0, 2, 0, 3, 1, 6, 0, 0] = multiSearchAllPositionsCaseInsensitiveUTF8(materialize('ÃÂÃÂÃÂ¤ÃÂµÃÂ°ÃÂÃÂÃÂ°ÃÂÃÂÃÂÃÂ¡ÃÂ¿ÃÂºÃÂÃÂºÃÂ ÃÂÃÂÃÂÃÂ³'), ['ÃÂÃÂ¼ÃÂÃÂºÃÂ§', '', 'ÃÂÃÂºÃÂ¥ÃÂ', 'ÃÂ°ÃÂÃÂÃÂ', 'ÃÂÃÂ»ÃÂÃÂ¶ÃÂ£ÃÂ»ÃÂÃÂÃÂÃÂÃÂÃÂÃÂ±ÃÂ»ÃÂ¤ÃÂ©', 'ÃÂÃÂÃÂÃÂÃÂÃÂ¶', 'ÃÂ»', 'ÃÂÃÂµ', 'ÃÂÃÂ', 'ÃÂÃÂÃÂ§ÃÂÃÂ°ÃÂº', 'ÃÂ»ÃÂÃÂÃÂ ÃÂ¢ÃÂ½ÃÂ¤ÃÂ±ÃÂ§ÃÂÃÂ¢ÃÂ¹ÃÂ¹ÃÂ²ÃÂ·ÃÂ¨ÃÂÃÂ¡ÃÂ¿ÃÂ»ÃÂÃÂ ÃÂ±ÃÂÃÂÃÂÃÂ·ÃÂÃÂ¿ÃÂ¼', 'ÃÂ¡ÃÂ¿ÃÂºÃÂÃÂ', 'ÃÂ©ÃÂ·ÃÂÃÂ¶ÃÂÃÂ', 'ÃÂ¶ÃÂ¤ÃÂµÃÂÃÂÃÂ', 'ÃÂÃÂ±ÃÂ¦ÃÂ±ÃÂ¹ÃÂÃÂ¨ÃÂ¼ÃÂÃÂÃÂ©ÃÂÃÂÃÂ´ÃÂÃÂ©ÃÂÃÂ¼ÃÂ¿ÃÂÃÂÃÂÃÂ¢ÃÂÃÂ»', 'ÃÂ¤ÃÂÃÂ°ÃÂ§ÃÂ¼ÃÂÃÂÃÂÃÂÃÂ¡ÃÂÃÂºÃÂ²ÃÂºÃÂ ÃÂÃÂ¿ÃÂ¢', 'ÃÂ³ÃÂ¶ÃÂ¤ÃÂµÃÂÃÂ§ÃÂ¼ÃÂ°ÃÂÃÂÃÂ¿ÃÂ¡ÃÂ¿', 'ÃÂ§ÃÂ¼ÃÂÃÂ', 'ÃÂ´ÃÂÃÂºÃÂÃÂÃÂÃÂÃÂÃÂÃÂ¹ÃÂÃÂ³ÃÂ°ÃÂ¹ÃÂ ÃÂÃÂ¶ÃÂÃÂÃÂ ', 'ÃÂ¢ÃÂ©ÃÂ±ÃÂ²ÃÂ¦ÃÂÃÂÃÂÃÂÃÂÃÂÃÂ¨ÃÂ¤ÃÂÃÂÃÂÃÂÃÂ¹']) from system.numbers limit 10;
insert into test select intDiv(number,100) from numbers(10000000);
CREATE TABLE ignore_auto_increment ( id int AUTO_INCREMENT, di AUTO_INCREMENT, s String AUTO_INCREMENT ) ENGINE=MergeTree() ORDER BY tuple();
DROP TABLE IF EXISTS test_dictionary_source_table;
SELECT format('The {0} to all questions is {1}.', 'answer', materialize('2023-11-14 05:50:12.123' :: DateTime64(3, 'Europe/Amsterdam')));
DROP DATABASE IF EXISTS test_i46exuap 
SELECT uniq('');
SELECT '= inner on =';
SELECT 'Running test stateless/00265_http_content_type_format_timezone.sh from pid=1726' 
SELECT substring(explain, 1, 13) FROM (EXPLAIN SYNTAX SELECT * FROM t_02809 WHERE a IN (1,2,3) ) WHERE explain LIKE '%WHERE%';
alter table many_mutations delete where y = 618 * 2 settings mutations_sync = 0;
CREATE TABLE test_01193_18429.table_3_533 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT h3CellAreaM2(NULL);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (9 < 13 AND 26 > 0 ? 9 : 0)), throwIf(last != (9 < 13 AND 26 > 0 ? least(13 - 1, 9 + 26 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 9, 26);
INSERT INTO test_01193_18429.table_4_143 VALUES 
SELECT addMinutes('2023-10-22', materialize(1)), addMinutes('2023-10-22 12:34:56.123', materialize(1));
DROP DATABASE IF EXISTS test_cde4bqsw 
WITH toDateTime64('2023-11-11 11:11:11.1231', 4, 'UTC') AS dt64_4 SELECT dt64_4, snowflakeToDateTime64(dateTime64ToSnowflake(dt64_4), 'UTC');
SELECT concat('With ', materialize(48 :: UInt8));
SELECT arrayJoin(['hello', 'world']) LIKE '%x%z%';
CREATE TABLE merge_table_standard_delete (`id` Int32, `name` String) ENGINE = MergeTree ORDER BY id SETTINGS min_bytes_for_wide_part = 10000000, index_granularity = 42440, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 16523, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 480192687, index_granularity_bytes = 17292195, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 54969, primary_key_compress_block_size = 30039
SELECT toUInt16(number) AS x, round(x, -1), roundBankers(x, -1), floor(x, -1), ceil(x, -1), trunc(x, -1) FROM system.numbers LIMIT 20;
select t.a as t_a from t left join s on s.a = t_a order by t.a format PrettyCompactNoEscapes;
CREATE DATABASE 01902_db;
CREATE TABLE test_02908_r1_58 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_58', 'r1') ORDER BY tuple()
DROP DATABASE IF EXISTS test_ddmy1zff 
create table defaulted (col1 default 0) engine=Memory;
CREATE TABLE test_01193_18429.table_9_394 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_00961 (d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = MergeTree PARTITION BY d ORDER BY (a, b) SETTINGS index_granularity = 111, min_bytes_for_wide_part = 0, compress_marks = 0, compress_primary_key = 0, index_granularity_bytes = '10Mi', ratio_of_defaults_for_sparse_serialization = 1, replace_long_file_name_to_hash = 0;
DROP TABLE IF EXISTS 01280_db.keys_table;
INSERT INTO test_01193_18429.table_3_523 VALUES 
SELECT cutToFirstSignificantSubdomainWithWWWRFC('http://www.example.com/');
SELECT offset FROM system.filesystem_cache_log WHERE query_id = '7646' ORDER BY size DESC LIMIT 1;
SELECT arrayElement([CAST( 0 AS Int8)],CAST( 0 AS Nullable(Int8)));
SELECT avgWeighted(x, w) FROM values('x UInt16, w Int64', (0, 0), (1, 0));
CREATE TABLE test_245955656C293E46482028423C75722B2522762135316F2855643D3E6C7E27672D522B45544C3E4C(x UInt8) Engine=Memory;
CREATE TABLE test_462D5F57514B2F756B2864642923382D596D34626D77753B3C342366392D587A5F684A53625A5B33(x UInt8) Engine=Memory;
SELECT count() = 8191, sum(s) = 8191 FROM replacing_00155
SELECT compression_codec FROM system.columns WHERE database = currentDatabase() AND table = 'alter_compression_codec' AND name = 'alter_column';
INSERT INTO test_01193_18429.table_9_933 VALUES 
SELECT * FROM tmp
INSERT INTO test_01193_18429.table_8_117 VALUES 
SELECT ngrams(toFixedString('Ã°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂÃ°ÂÂÂ', 16), 4);
ALTER USER test_user_01075 HOST REGEXP '.*\.anothersite\.com';
SELECT multiIf((number % 2) = 0, [toUInt32(1), toUInt32(2)], (number % 3) = 0, [toUInt8(2), toUInt8(3)], [toUInt64(3), toUInt64(3)]) FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_x0k980yx 
SELECT 'Running test stateless/02514_database_replicated_no_arguments_for_rmt.sh from pid=1718' 
SELECT 'Running test stateless/02499_read_json_objects_as_strings.sql from pid=1726' 
ALTER TABLE minmax_idx2_r DROP INDEX idx1, DROP INDEX idx2;
CREATE DICTIONARY test_7kssh40k.dict_ipv4_trie (`prefix` String, `asn` UInt32, `cca2` String) PRIMARY KEY prefix SOURCE(CLICKHOUSE(HOST 'localhost' PORT 9000 USER 'default' DB currentDatabase() TABLE 'table_ipv4_trie')) LIFETIME(MIN 10 MAX 100) LAYOUT(IP_TRIE()) SETTINGS(dictionary_use_async_executor = 1, max_threads = 8)
DROP TABLE test_table_ipv4;
SELECT count() FROM constraint_test_assumption WHERE (domainWithoutWWW(URL) = 'bigmir.net' AND URL > 'zzz');
DROP DATABASE IF EXISTS test_qblw8gwp 
CREATE TABLE test_01193_18429.table_9_209 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_9_584 VALUES 
SELECT 'Running test stateless/02101_empty_as_default_and_omitted_fields.sh from pid=1724' 
SYSTEM SYNC REPLICA concurrent_alter_mt_4 STRICT
select v, variantElement(v, 'Int16') from format(Values, 'v Variant(String, Int16, Int64)', '(NULL), (''string''), (-1), (0), (10000000000)') format Values;
INSERT INTO test_01193_18429.table_2_498 VALUES 
CREATE TABLE test_01193_18429.table_10_955 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_8_107 VALUES 
CREATE DATABASE IF NOT EXISTS test_1voyxt4u 
INSERT INTO src VALUES /* (51, 1) */ 
CREATE TABLE mutations_r2(d Date, x UInt32, s String, m MATERIALIZED x + 2) ENGINE ReplicatedMergeTree('/clickhouse/tables/00652_replicated_mutations_zookeeper_test_g2ggxcxn/mutations', 'r2', d, intDiv(x, 10), 8192)
CREATE TABLE tab3 (`a3` Int32, `b3` Int32) ENGINE = MergeTree ORDER BY a3 SETTINGS index_granularity = 40815, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.46450382471084595, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 15132, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 6397448149, index_granularity_bytes = 22252569, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 48255, primary_key_compress_block_size = 84000
select 9 as p, geohashEncode(longitude, latitude, p) as actual, if(actual = encoded, 'Ok', concat('expected: ', encoded)) from geohash_test_data WHERE length(encoded) = p;
SELECT quantileTDigestWeighted(NULL, NULL);
select sumMap(val, cnt) from ( SELECT [ CAST('a', 'Enum16(\'a\'=1)') ] as val, [1] as cnt );
INSERT INTO r9 SELECT 6 % 10 = 9 ? 6 - 1 : 6
SELECT 'Running test stateless/00217_shard_global_subquery_columns_with_same_name.sql from pid=1714' 
SHOW TABLES FROM test_5qyz18pn
SELECT dictGetDescendants('hierarchy_flat_dictionary', 0, 1);
SELECT 'Run SELECT with quota that current user may use only 1 byte in the query cache', 1 SETTINGS use_query_cache = true;
select number, number + 1, concat('string: ', toString(number)) from numbers(200000) group by number with totals order by number limit 190000 format JSONCompactStringsEachRow
SELECT 'ejemplo.xn--q9jyb4c' AS ascii, idnaDecode(ascii) AS unicode, idnaEncode(unicode) AS original, tryIdnaEncode(unicode) AS original_try;
INSERT INTO TABLE product_fp32_fp32 (x, y) values 
SELECT b FROM t_fixed_prefix WHERE a = 1 ORDER BY b SETTINGS optimize_read_in_order = 0
REPLACE DICTIONARY 01913_db.test_dictionary ( id UInt64, value_1 String ) PRIMARY KEY id LAYOUT(HASHED()) SOURCE(CLICKHOUSE(DB '01913_db' TABLE 'test_source_table_2')) LIFETIME(0);
SELECT dummy + dummy;
select next_refresh_time from refreshes where view = 'b' -- 143
CREATE TABLE test_4D386E2F4D477D402D4269502A3F6D4F24404069736D3D4047292D375C733D51465B726B52495971(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_qzgw1l2z 
SELECT arrayMap(x -> x + id, [1,2,3]) FROM test_table;
select 1 as offset, 'Hello' as s, subString(bin(s), offset), bin(bitSlice(s, offset));
INSERT INTO r4 SELECT 50 % 10 = 4 ? 50 - 1 : 50
INSERT INTO test_01193_18429.table_10_9 VALUES 
EXPLAIN QUERY TREE (SELECT sum(2.11 + uint64) From test_table);
CREATE TABLE test_01193_18429.table_1_963 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select format('{}{}{}', 'a', materialize(toFixedString('b', 1)), materialize(toFixedString('c', 1))) == 'abc' from system.numbers limit 5;
SYSTEM FLUSH DISTRIBUTED distributed;
SELECT count() == 8 FROM (SELECT 100 AS s) AS js1 ALL RIGHT JOIN ( SELECT number AS s FROM numbers(8) ) AS js2 USING (s);
INSERT INTO test_01193_18429.table_3_397 VALUES 
CREATE TABLE test_01193_18429.table_1_74 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select geohashEncode(-181.0, -91.0);
SELECT multiIf((number % 2) = 0, toUInt16(1), (number % 3) = 0, toInt32(2), toInt32(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_7_525 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_2_259 VALUES 
select arr1, no, nl, arraySlice(arr1, no, nl) from array_functions;
SELECT 'Running test stateless/02266_protobuf_format_google_wrappers.sh from pid=1726' 
INSERT INTO r5 SELECT 19 % 10 = 5 ? 19 - 1 : 19
INSERT INTO t1 SELECT number % 2, number FROM numbers(10);
INSERT INTO test_01193_18429.table_8_438 VALUES 
SELECT number, 'Hello, world!' FROM numbers(6000) INTO OUTFILE '/var/lib/clickhouse/user_files/test_ppeg0s5q/xz_1.xz' COMPRESSION 'xz' LEVEL 1
SELECT h3HexAreaKm2(3);
SELECT 35,'Hello',bin(bitShiftLeft('Hello', 35));
CREATE TABLE test_647C2E695E676229693D6F57285E3373307B6C66502D373F5834585F63274377466D5E4662784655(x UInt8) Engine=Memory;
CREATE TABLE test_2D4B36552F397E63594B663B6732756F46525E38413F40552E20355C287D572A4345347D34662A5C(x UInt8) Engine=Memory;
select count(*) from tab_00484 prewhere s = 'abc' format Null;
CREATE TABLE test_01193_18429.table_4_343 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP TABLE IF EXISTS r2;
SELECT 'Expect one entry in the query cache', count(*) FROM system.query_cache;
INSERT INTO test_01193_18429.table_4_281 VALUES 
select if(number % 2, toLowCardinality('a'), 'b') from numbers(2);
SELECT 'type;toMonday;toDateTime64;true', toTypeName(toMonday(toDateTime64('1920-02-02 10:20:30', 3))) SETTINGS enable_extended_results_for_datetime_functions = true;
INSERT INTO test_01193_18429.table_7_509 VALUES 
select parseDateTimeInJodaSyntax('6 PM', 'K a', 'UTC') = toDateTime('1970-01-01 18:00:00', 'UTC');
SELECT argMinIf(number, now() + number, number % 10 > 20) FROM (Select number as number from numbers(10, 10000)) settings max_threads=1, max_block_size=20000;
DROP TABLE IF EXISTS t_json_nested
CREATE TABLE test_01193_18429.table_4_198 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'Running test stateless/00187_like_regexp_prefix.sql from pid=1726' 
SELECT 'Running test stateless/02704_keeper_map_zk_nodes.sh from pid=1724' 
CREATE TABLE test_77605656684F676926435A26224D3D35463D4C6347317C697E6834242A7D2777387C4E3A5F295E5B(x UInt8) Engine=Memory;
INSERT INTO test_log (crypto_name, trade_date) VALUES 
CREATE DATABASE IF NOT EXISTS test_lzzbg2dl 
SELECT (toDateTime('2000-01-01 12:00:00') + INTERVAL 1234567 SECOND) x, toTypeName(x);
SELECT CASE WHEN (col1 % 2) = 0 THEN [col2, 'bar'] WHEN 1 THEN [col4, col5] ELSE ['foo', 'bar'] END FROM multi_if_check;
CREATE TABLE test_416C2A7B3B7D283F3F685928277225323F6D6A6D6F3B663249264455493E25633378444239507948(x UInt8) Engine=Memory;
INSERT INTO t SELECT * FROM system.numbers LIMIT 11;
INSERT INTO test_01193_18429.table_8_831 VALUES 
SELECT dictGetOrDefault('01682_database_for_cache_dictionary.cache_dictionary_complex_key_complex_attributes', 'value_first', (number, concat('id_key_', toString(number))), toString('default')) as value_first, dictGetOrDefault('01682_database_for_cache_dictionary.cache_dictionary_complex_key_complex_attributes', 'value_second', (number, concat('id_key_', toString(number))), toString('default')) as value_second FROM system.numbers LIMIT 3;
INSERT INTO test_01193_18429.table_10_931 VALUES 
DROP DATABASE IF EXISTS test_v31tv1gd 
SELECT arraySort(geohashesInBox(-1.0, 89.0, 0.0, 90.0, 3));
INSERT INTO dst_3 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 0
CREATE DATABASE IF NOT EXISTS test_jbueva8g 
INSERT INTO test_01193_18429.table_10_484 VALUES 
CREATE TABLE test_01193_18429.table_8_118 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_02908_r1_160 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_160', 'r1') ORDER BY tuple()
SELECT materialize(toUInt8(0)) AS x, toInt8(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
SELECT CASE WHEN (number % 2) = 0 THEN toUInt8(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toFloat32(3) END FROM system.numbers LIMIT 10;
SELECT count() == 33333 FROM null_in_subquery WHERE i in (SELECT i FROM null_in_subquery WHERE dt = 0);
CREATE TABLE test_263C513664606469644C786E542D3E342F325C3E223157374A5A436F4C736C714A73723275623164(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN toInt16(1) WHEN (number % 3) = 0 THEN toFloat32(2) ELSE toFloat64(3) END FROM system.numbers LIMIT 10;
SELECT CASE WHEN (number % 2) = 0 THEN toInt16(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
SELECT '18446744073709551615', '-9223372036854775808.000000000', 18446744073709551615 = -9223372036854775808.000000000, 18446744073709551615 != -9223372036854775808.000000000, 18446744073709551615 < -9223372036854775808.000000000, 18446744073709551615 <= -9223372036854775808.000000000, 18446744073709551615 > -9223372036854775808.000000000, 18446744073709551615 >= -9223372036854775808.000000000, -9223372036854775808.000000000 = 18446744073709551615, -9223372036854775808.000000000 != 18446744073709551615, -9223372036854775808.000000000 < 18446744073709551615, -9223372036854775808.000000000 <= 18446744073709551615, -9223372036854775808.000000000 > 18446744073709551615, -9223372036854775808.000000000 >= 18446744073709551615 , toUInt64(18446744073709551615) = -9223372036854775808.000000000, toUInt64(18446744073709551615) != -9223372036854775808.000000000, toUInt64(18446744073709551615) < -9223372036854775808.000000000, toUInt64(18446744073709551615) <= -9223372036854775808.000000000, toUInt64(18446744073709551615) > -9223372036854775808.000000000, toUInt64(18446744073709551615) >= -9223372036854775808.000000000, -9223372036854775808.000000000 = toUInt64(18446744073709551615), -9223372036854775808.000000000 != toUInt64(18446744073709551615), -9223372036854775808.000000000 < toUInt64(18446744073709551615), -9223372036854775808.000000000 <= toUInt64(18446744073709551615), -9223372036854775808.000000000 > toUInt64(18446744073709551615), -9223372036854775808.000000000 >= toUInt64(18446744073709551615) ;
SELECT initializeAggregation('uniqExactState', toNullable('foo')) = arrayReduce('uniqExactState', [toNullable('foo')]);
SELECT multiIf((col1 % 2) = 0, col2, 1, toFixedString(col3, 16), toFixedString(col4, 16)) FROM multi_if_check;
DROP TABLE IF EXISTS concurrent_alter_add_drop_2
select parseDateTimeInJodaSyntax('7 AM', 'k a', 'UTC') = toDateTime('1970-01-01 07:00:00', 'UTC');
CREATE TABLE test_01193_18429.table_10_998 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT n.x FROM table_for_rename_nested WHERE key = 7;
SELECT 'Running test stateless/00081_int_div_or_zero.sql from pid=1718' 
SELECT CASE WHEN (number % 2) = 0 THEN toUInt16(1) WHEN (number % 3) = 0 THEN toFloat64(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_5_18 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select 28, * from test where value % 3 = 0
CREATE DATABASE IF NOT EXISTS test_o5adfa8z 
ATTACH TABLE test_hjqqp1i2.t_mv_00751
CREATE DATABASE IF NOT EXISTS test_3rki2sid 
INSERT INTO test_01193_18429.table_2_88 VALUES 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (69 < 52 AND 41 > 0 ? 69 : 0)), throwIf(last != (69 < 52 AND 41 > 0 ? least(52 - 1, 69 + 41 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(52) LIMIT 69, 41);
SELECT concatWithSeparator('|', 'a', materialize('b')) == 'a|b';
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (105 < 77 AND 83 > 0 ? 105 : 0)), throwIf(last != (105 < 77 AND 83 > 0 ? least(77 - 1, 105 + 83 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(77) LIMIT 105, 83);
SELECT jaroSimilarity(NULL, NULL);
INSERT INTO test_01193_18429.table_7_566 VALUES 
SELECT toDecimal64(123456789.123456789, 9) AS x, countEqual([x+1, x, x], x), countEqual([x, x-1, x], x), countEqual([x, x], x-0);
SELECT dictGetChildren('hierachical_hashed_dictionary', number) FROM system.numbers LIMIT 6;
SELECT * FROM numbers(34550)
with '2018-01-12 22:33:44.55' as s, toDateTime64(s, 6) as datetime64 SELECT fromUnixTimestampInJodaSyntax(datetime64, 'SSSSS', 'UTC');
SELECT 'Running test stateless/01324_insert_tsv_raw.sql from pid=1724' 
SELECT 6, toFixedString('Hello', 10), bin(bitShiftLeft(toFixedString('Hello', 10), 6));
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c5) AND c0 AND c3 AND c4 AND (NOT c7)) OR (c4 AND c3) OR (c2 AND c5 AND c0 AND c0 AND (NOT c1)) OR (c1 AND c5 AND (NOT c2)) OR ((NOT c7) AND c6) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_01193_18429.table_6_25 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select * from rmt2 order by n;
SELECT 'Running test stateless/02682_quantiles_too_large_size.sql from pid=1724' 
SELECT number, neighbor(toString(number), -5, 'World') FROM numbers(10);
INSERT INTO r6 SELECT 25
KILL MUTATION WHERE mutation_id='0000000030' and table like 'concurrent_kill_%' and database='test_bc61bq8k'
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 42537, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE DATABASE IF NOT EXISTS test_5hmld4me 
INSERT INTO test_01193_18429.table_8_400 VALUES 
SHOW CREATE SETTINGS PROFILE sqllt_settings_profile FORMAT Null;
alter table simple modify setting max_concurrent_queries = 2
SELECT sum(number) FROM ( SELECT * FROM numbers(10) ORDER BY number DESC )
SELECT formatDateTime(toDateTime('2018-01-02 22:33:44'), '%a'), formatDateTime(toDate32('2018-01-02'), '%a');
INSERT INTO test_01193_18429.table_7_623 VALUES 
SELECT quantileTDigest(x) FROM (SELECT -inf AS x UNION ALL SELECT -inf UNION ALL SELECT -inf);
SELECT VAR_POP(NULL, NULL, NULL);
insert into test_02250 select * from file('data_02250.jsonl');
DROP DATABASE IF EXISTS test_vt2pfphn 
CREATE TABLE test_7574767025293D6E4A242921226E4D464A42645C2F6A63464C5D7145417E5F2A2E7D5C485632627B(x UInt8) Engine=Memory;
alter table many_mutations delete where y = 297 * 2 settings mutations_sync = 0;
INSERT INTO aggregates SELECT toDate('2016-10-31') + number AS d, uniqState(toUInt64(arrayJoin(range(100)))) AS s FROM (SELECT * FROM system.numbers LIMIT 2) GROUP BY d;
CREATE TABLE test_2B4C57602E4F442F3B5C412A6856306D3D3A233C4E3561462B3A4F3C417C75426C3C2E456F59235F(x UInt8) Engine=Memory;
set query_plan_read_in_order=1;
select count() from test_tuple array join [1,2,3] as c where toDate(p) = '2020-09-01' settings max_rows_to_read = 6;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (28 < 89 AND 63 > 0 ? 28 : 0)), throwIf(last != (28 < 89 AND 63 > 0 ? least(89 - 1, 28 + 63 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(89) LIMIT 28, 63);
select * from url(url_with_headers, url='http://127.0.0.1:8123?query=select+12', format='RawBLOB', headers('X-ClickHouse-Database'='default', 'X-ClickHouse-Format'='JSONEachRow'));
CREATE TABLE test_555F3A3D3E667C744A692B60265B382531232E38524465723D682E587672555F7773694760752D71(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_3_527 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_8_34 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Running test stateless/01926_union_all_schmak.sql from pid=1724' 
CREATE TABLE test_38612C3064653C245A5D403F2E3A52477228764F207B747447295A7C3B54662668355A4D5E4A7870(x UInt8) Engine=Memory;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (102 < 91 AND 16 > 0 ? 102 : 0)), throwIf(last != (102 < 91 AND 16 > 0 ? least(91 - 1, 102 + 16 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(91) LIMIT 102, 16);
alter table many_mutations delete where y = 455 * 2 settings mutations_sync = 0;
CREATE TABLE test_52684572762C402656465459263E43405F5348784B71707625503544307E284867354E46284B2E61(x UInt8) Engine=Memory;
select * from t order by n
with '2018-01-12 22:33:44' as s, toDateTime(s) as datetime, toDateTime64(s, 6) as datetime64, toDate(s) as date, toDate32(s) as date32 SELECT formatDateTimeInJodaSyntax(datetime, 'DDD'), formatDateTimeInJodaSyntax(datetime64, 'DDD'), formatDateTimeInJodaSyntax(date, 'DDD'), formatDateTimeInJodaSyntax(date32, 'DDD');
drop table if exists unhex_in_fix_string_table;
/* ddl_entry=query-0000000031 */ CREATE TABLE test_nuhrxf0m.local_t_l5ydey UUID '8b297046-3516-42b5-85e5-75a492079b68' (`c_qv5rv` Int32, `c_rutjs4` Int32, `c_wmj` Int32, `c_m3` String) ENGINE = ReplicatedMergeTree(concat('/clickhouse/tables/test_', 'test_nuhrxf0m', '/{shard}/local_t_l5ydey'), '{replica}') PRIMARY KEY c_qv5rv
INSERT INTO mt VALUES /* (21, 1) */ 
SELECT 'Running test stateless/02287_legacy_column_name_of_tuple_literal_over_distributed.sql from pid=1718' 
CREATE TABLE t (`key` UInt64, `value` UInt64, INDEX value_idx value TYPE bloom_filter GRANULARITY 1) ENGINE = MergeTree ORDER BY key SETTINGS index_granularity = 43180, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 5854, prefer_fetch_merged_part_size_threshold = 1214144888, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 14268723, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 20710, primary_key_compress_block_size = 75129
SELECT 'Running test stateless/01070_mutations_with_dependencies.sql from pid=1705' 
SELECT number AS id, toString(number) AS s, range(number) AS arr FROM numbers(10) FORMAT JSONCompactEachRowWithNames
SHOW INDICES FROM tbl;
CREATE TABLE test_01193_18429.table_7_575 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_3_834 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT CASE WHEN (number % 2) = 0 THEN [toInt64(1), toInt64(2)] WHEN (number % 3) = 0 THEN [toInt16(2), toInt16(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
select sum(number) over w as x, max(number) over w as y from remote('127.0.0.{1,2}', '', t_01568) window w as (partition by p) order by x, y;
select parseDateTimeInJodaSyntax('366', 'D', 'UTC') = toDateTime('2000-12-31', 'UTC');
ALTER TABLE defaults_on_defaults ADD COLUMN `Arr.C3` Array(UInt32) ALIAS arrayResize(emptyArrayUInt32(), length(Arr.C2));
CREATE TABLE test_01193_18429.table_3_284 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_5_444 VALUES 
SYSTEM SYNC REPLICA kill_mutation_r1
SELECT toUInt64(0) AS x, toDecimal128(1, 0) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), toInt8(-1) + N as r FORMAT CSV;
INSERT INTO r10 SELECT 72 % 10 = 10 ? 72 - 1 : 72
select acos(1) = 0;
SELECT 'Running test stateless/01318_map_populate_series.sql from pid=1722' 
alter table per_table_ttl_02265 modify TTL date + interval 2 month group by key set value = argMax(value, date);
SELECT '19' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:e000::')))
ALTER TABLE mutations DELETE WHERE s = 'd'
SELECT boundingRatio(1000 + number, number * 1.5 - 111) FROM numbers(10);
alter table many_mutations delete where y = 846 * 2 settings mutations_sync = 0;
CREATE TABLE test_01193_18429.table_10_961 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'xn--55qw42g.xn--55qw42g' AS ascii, idnaDecode(ascii) AS unicode, idnaEncode(unicode) AS original, tryIdnaEncode(unicode) AS original_try;
INSERT INTO minmax_compact VALUES 
INSERT INTO test_01193_18429.table_7_804 VALUES 
CREATE TABLE test_01193_18429.table_4_646 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT ULIDStringToDateTime('01GWJWKW30MFPQJRYEAF4XFZ9E', 'America/Costa_Rica');
SELECT cast(id1 as UInt16) AS cond1, (id2 % 40000) AS cond2, (cond1 AND cond2) AS cond FROM test_02559 PREWHERE cond AND id2 > 4 LIMIT 10;
SELECT CASE WHEN (number % 2) = 0 THEN toInt32(1) WHEN (number % 3) = 0 THEN toInt32(2) ELSE toUInt32(3) END FROM system.numbers LIMIT 10;
INSERT INTO TABLE product_fp64_fp64 (x, y) values 
CREATE TABLE test_582C3C754E632A7D6A59796A4D617948412B32422640266D277677562E2B6B5C6C56552A4862636C(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_8_956 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
alter table many_mutations delete where y = 303 * 2 settings mutations_sync = 0;
SELECT ['blZr"2'];
SELECT toDayOfMonth(NULL);
DROP TABLE product_int32_uint64;
show create table table_to_rename
DROP FUNCTION IF EXISTS 02148_test_function_nested;
SELECT * FROM merge(currentDatabase(), '02763_merge_merge') WHERE x>2 ORDER BY x SETTINGS optimize_move_to_prewhere= 1;
EXPLAIN QUERY TREE SELECT * FROM 02952_disjunction_optimization WHERE (a <> 1 AND a <> 2 AND a <> 4) OR b = '';
DROP TABLE IF EXISTS view_00843;
CREATE TABLE test_5D2C4E4465662C6E4334723A2843742B3E3E6D24387339487661747A6E4E752B7E753D7D3D3D6465(x UInt8) Engine=Memory;
CREATE TABLE test_65266A5728336A472B62653F60364F246D33434526303225486C265571476F3D7026322E4D7D522E(x UInt8) Engine=Memory;
EXPLAIN PIPELINE SELECT c, d, e FROM t_fixed_prefix WHERE a = 1 AND b = 1 ORDER BY c, d, e SETTINGS optimize_read_in_order = 1
CREATE TABLE test_01193_18429.table_5_526 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DATABASE IF NOT EXISTS test_90j1i59x 
system stop view e;
SELECT globalIn([''], [NULL]);
SELECT k, js1.s, t2.s FROM (SELECT number AS k, number AS s FROM system.numbers LIMIT 10) js1 ANY LEFT JOIN t2 ON js1.k == t2.k ORDER BY k;
EXPLAIN PIPELINE SELECT b, c, d FROM t_fixed_prefix WHERE a = 1 AND c = 1 ORDER BY b, c, d SETTINGS optimize_read_in_order = 1
CREATE TABLE test_6C564A282B3346567968764B3622764D762B256A5B223D382C54764B6B37247937605233684E647A(x UInt8) Engine=Memory;
select COUNT(*) from s3Cluster('test_cluster_two_shards_localhost', 'http://localhost:11111/test/{a,b,c}.tsv');
SELECT dummy, count() / 0.1 GROUP BY dummy WITH TOTALS HAVING count() > 0.1 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (86 < 12 AND 4 > 0 ? 86 : 0)), throwIf(last != (86 < 12 AND 4 > 0 ? least(12 - 1, 86 + 4 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(12) LIMIT 86, 4);
CREATE TABLE test_5954232C6E6D642F7B3134384F485E3F437B6076322A6024707478462B475D3D2E3832486749524A(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_x1pz8tbu 
DROP DATABASE IF EXISTS test_to2ruf2b 
INSERT INTO r10 SELECT 24 % 10 = 10 ? 24 - 1 : 24
CREATE TABLE test_3B726970706C496F3B5D362B517168594A55205C4244572A2C5F723A7942606C705E7A4339285C65(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_nuhrxf0m 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (74 < 50 AND 88 > 0 ? 74 : 0)), throwIf(last != (74 < 50 AND 88 > 0 ? least(50 - 1, 74 + 88 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(50) LIMIT 74, 88);
SELECT parseTimeDelta('1s - 1ms : 1ÃÂ¼s ; 1ns');
SELECT format('The answer to all questions is {0}.', NULL);
CREATE TABLE test_01193_18429.table_7_957 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT -.34e-21;
CREATE TABLE test_01193_18429.table_9_183 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP TABLE IF EXISTS codecs7;
CREATE TABLE test_7C2D6120262146214D2A33695850416621482E576F25272D52486A735D616141392A72336E565257(x UInt8) Engine=Memory;
SELECT multiIf((col1 % 2) = 0, col2, (col1 % 3) = 0, toFixedString('bar', 16), toFixedString('baz', 16)) FROM multi_if_check;
SELECT JSONExtract('{"a": "hello", "b": "world"}', 'Map(String, String)');
SELECT count(), `data_01247`.`number` FROM `test_liwee4wb`.`data_01247` GROUP BY `number` ORDER BY `number` ASC LIMIT 1
SELECT cityHash64(toDecimal32(number, 3)) from numbers(198, 2);
INSERT INTO arrow_types6 FORMAT ArrowStream
INSERT INTO test_01193_18429.table_10_690 VALUES 
SELECT fromUnixTimestampInJodaSyntax(1669804872, 'zzzz', 'UTC');
SHOW CREATE TABLE test_01048.`.inner.wv`;
select -2 as offset, -15 as length, 'Hello' as s, subString(bin(s), offset, length), bin(bitSlice(s, offset, length));
alter table many_mutations delete where y = 808 * 2 settings mutations_sync = 0;
INSERT INTO r8 SELECT 95
select sumIf(number::UInt128, number % 10) from numbers(1000);
SELECT multiIf((number % 2) = 0, toUInt8(1), (number % 3) = 0, toFloat64(2), toInt16(3)) FROM system.numbers LIMIT 10;
select concat(materialize('a'), materialize('b'), materialize('c')) == 'abc';
SELECT dictGetString('ordinary_db.dict1', 'third_column', toUInt64(rand() % 1000)) from numbers(2)
EXPLAIN QUERY TREE SELECT cityHash64(a) + 10, b + 3 FROM column_swap_test_test WHERE b = 0 SETTINGS allow_experimental_analyzer = 1;
CREATE TABLE test_01193_18429.table_5_531 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
WITH tuple(INTERVAL 1 SECOND) - INTERVAL 1 SECOND as expr SELECT expr, toTypeName(expr);
SELECT 'Running test stateless/02943_variant_element.sql from pid=1720' 
INSERT INTO test_01193_18429.table_3_710 VALUES 
CREATE TABLE circles(a Float64, b Float64) Engine=Memory();
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt16(1), toUInt16(2)] WHEN (number % 3) = 0 THEN [toUInt32(2), toUInt32(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/02832_integer_type_inference.sql from pid=1718' 
CREATE DATABASE IF NOT EXISTS test_jbd6iwqj 
INSERT INTO 02702_logical_optimizer_with_null_column VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toUInt16(2) ELSE toInt16(3) END FROM system.numbers LIMIT 10;
SELECT toIntervalDay(NULL, NULL, NULL);
select count(), sum(number) from file('02841.parquet') where indexHint(sometimes_null_lc is NULL);
INSERT INTO test_01193_18429.table_2_119 VALUES 
CREATE OR REPLACE TABLE alias10__fuzz_13 (`Id` Array(Array(UInt256)), `EventDate` Array(String), `field1` Array(Array(Nullable(Int8))), `field2` Array(Date), `field3` Array(Array(Array(UInt128)))) ENGINE = Distributed(test_shard_localhost, currentDatabase(), alias_local10);
INSERT INTO arrow_decimal FORMAT Arrow
CREATE DATABASE IF NOT EXISTS test_8phrxrkd 
SELECT 1 SETTINGS max_threads = 1
SELECT throwIf((SELECT (count(), sum(n)) FROM merge(currentDatabase(), '') WHERE type=4) != (toUInt8(11/2 + 1), (select sum(number) from numbers(1, 11) where number % 2 or number=11))) FORMAT Null;
SELECT multiIf((number % 2) = 0, toInt32(1), (number % 3) = 0, toUInt32(2), toInt16(3)) FROM system.numbers LIMIT 10;
SELECT format('The {0} to all questions is {1}.', 'answer', materialize(42.42 :: Float32));
SELECT 93;
SELECT dateDiff('day', toDate('2017-12-31'), toDate('2017-01-01'));
SELECT flattenTuple(a) AS data FROM t_json_analyzer FORMAT JSONEachRow;
INSERT INTO src_4 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 49
CREATE TABLE test_01193_18429.table_5_423 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_61527C3F4B394D5154716533202F6B305C41344C5D5C69316E3F5B406B237337566676735D3F5D6E(x UInt8) Engine=Memory;
SELECT h3GetFaces(NULL);
INSERT INTO foo_lc SELECT toString(number) AS n FROM system.numbers LIMIT 1025;
CREATE TABLE test_01193_18429.table_10_847 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_7_45 VALUES 
select arrayShiftRight([1, 2, 3, 4, 5], 3);
SELECT 'Running test stateless/01676_clickhouse_client_autocomplete.sh from pid=1720' 
CREATE TABLE test_65636B715D6B7E463B3D35336E4A247E695335643B606F636C5E2C6B247059693052362A487A566E(x UInt8) Engine=Memory;
select 8, n, _part from mt order by n
CREATE TABLE test_59466672466A60724E26513B582D2054757765292E5856606A4271516B336D5A7C685F214B244A45(x UInt8) Engine=Memory;
SELECT parseTimeDelta(NULL, NULL);
CREATE TABLE test_01193_18429.table_2_237 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_457A494656752F733D2C62444269347D6C7E23654651533A5065755445587221657728482578727B(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_9_285 VALUES 
CREATE TABLE test_01193_18429.table_3_920 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_216D746C517E222D254B755B4E3E264353714D514A53272B22443C5C63295A756778525B465C6042(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_9_737 VALUES 
SELECT YYYYMMDDToDate32(18991231);
CREATE TABLE test_6076683B405C36317D78284E743435292C3F2060597A7978435271206825797C58412E6D49484036(x UInt8) Engine=Memory;
CREATE TABLE test_3B76603D2A402A4A3E30264C6F57452A415168752844503C2C776F7E3D75642F4F782C794C64704B(x UInt8) Engine=Memory;
SELECT * FROM map_test_index_map_keys WHERE has(map, 'K0') SETTINGS force_data_skipping_indices='map_bloom_filter_keys';
SELECT (1, 2) + tupleMultiply((3, 4), materialize((5, 1))) - (6, 3);
INSERT INTO test_01193_18429.table_3_827 VALUES 
SELECT '1', '-9223372036854775808.000000000', 1 = -9223372036854775808.000000000, 1 != -9223372036854775808.000000000, 1 < -9223372036854775808.000000000, 1 <= -9223372036854775808.000000000, 1 > -9223372036854775808.000000000, 1 >= -9223372036854775808.000000000, -9223372036854775808.000000000 = 1, -9223372036854775808.000000000 != 1, -9223372036854775808.000000000 < 1, -9223372036854775808.000000000 <= 1, -9223372036854775808.000000000 > 1, -9223372036854775808.000000000 >= 1 , toUInt8(1) = -9223372036854775808.000000000, toUInt8(1) != -9223372036854775808.000000000, toUInt8(1) < -9223372036854775808.000000000, toUInt8(1) <= -9223372036854775808.000000000, toUInt8(1) > -9223372036854775808.000000000, toUInt8(1) >= -9223372036854775808.000000000, -9223372036854775808.000000000 = toUInt8(1), -9223372036854775808.000000000 != toUInt8(1), -9223372036854775808.000000000 < toUInt8(1), -9223372036854775808.000000000 <= toUInt8(1), -9223372036854775808.000000000 > toUInt8(1), -9223372036854775808.000000000 >= toUInt8(1) , toInt8(1) = -9223372036854775808.000000000, toInt8(1) != -9223372036854775808.000000000, toInt8(1) < -9223372036854775808.000000000, toInt8(1) <= -9223372036854775808.000000000, toInt8(1) > -9223372036854775808.000000000, toInt8(1) >= -9223372036854775808.000000000, -9223372036854775808.000000000 = toInt8(1), -9223372036854775808.000000000 != toInt8(1), -9223372036854775808.000000000 < toInt8(1), -9223372036854775808.000000000 <= toInt8(1), -9223372036854775808.000000000 > toInt8(1), -9223372036854775808.000000000 >= toInt8(1) , toUInt16(1) = -9223372036854775808.000000000, toUInt16(1) != -9223372036854775808.000000000, toUInt16(1) < -9223372036854775808.000000000, toUInt16(1) <= -9223372036854775808.000000000, toUInt16(1) > -9223372036854775808.000000000, toUInt16(1) >= -9223372036854775808.000000000, -9223372036854775808.000000000 = toUInt16(1), -9223372036854775808.000000000 != toUInt16(1), -9223372036854775808.000000000 < toUInt16(1), -9223372036854775808.000000000 <= toUInt16(1), -9223372036854775808.000000000 > toUInt16(1), -9223372036854775808.000000000 >= toUInt16(1) , toInt16(1) = -9223372036854775808.000000000, toInt16(1) != -9223372036854775808.000000000, toInt16(1) < -9223372036854775808.000000000, toInt16(1) <= -9223372036854775808.000000000, toInt16(1) > -9223372036854775808.000000000, toInt16(1) >= -9223372036854775808.000000000, -9223372036854775808.000000000 = toInt16(1), -9223372036854775808.000000000 != toInt16(1), -9223372036854775808.000000000 < toInt16(1), -9223372036854775808.000000000 <= toInt16(1), -9223372036854775808.000000000 > toInt16(1), -9223372036854775808.000000000 >= toInt16(1) , toUInt32(1) = -9223372036854775808.000000000, toUInt32(1) != -9223372036854775808.000000000, toUInt32(1) < -9223372036854775808.000000000, toUInt32(1) <= -9223372036854775808.000000000, toUInt32(1) > -9223372036854775808.000000000, toUInt32(1) >= -9223372036854775808.000000000, -9223372036854775808.000000000 = toUInt32(1), -9223372036854775808.000000000 != toUInt32(1), -9223372036854775808.000000000 < toUInt32(1), -9223372036854775808.000000000 <= toUInt32(1), -9223372036854775808.000000000 > toUInt32(1), -9223372036854775808.000000000 >= toUInt32(1) , toInt32(1) = -9223372036854775808.000000000, toInt32(1) != -9223372036854775808.000000000, toInt32(1) < -9223372036854775808.000000000, toInt32(1) <= -9223372036854775808.000000000, toInt32(1) > -9223372036854775808.000000000, toInt32(1) >= -9223372036854775808.000000000, -9223372036854775808.000000000 = toInt32(1), -9223372036854775808.000000000 != toInt32(1), -9223372036854775808.000000000 < toInt32(1), -9223372036854775808.000000000 <= toInt32(1), -9223372036854775808.000000000 > toInt32(1), -9223372036854775808.000000000 >= toInt32(1) , toUInt64(1) = -9223372036854775808.000000000, toUInt64(1) != -9223372036854775808.000000000, toUInt64(1) < -9223372036854775808.000000000, toUInt64(1) <= -9223372036854775808.000000000, toUInt64(1) > -9223372036854775808.000000000, toUInt64(1) >= -9223372036854775808.000000000, -9223372036854775808.000000000 = toUInt64(1), -9223372036854775808.000000000 != toUInt64(1), -9223372036854775808.000000000 < toUInt64(1), -9223372036854775808.000000000 <= toUInt64(1), -9223372036854775808.000000000 > toUInt64(1), -9223372036854775808.000000000 >= toUInt64(1) , toInt64(1) = -9223372036854775808.000000000, toInt64(1) != -9223372036854775808.000000000, toInt64(1) < -9223372036854775808.000000000, toInt64(1) <= -9223372036854775808.000000000, toInt64(1) > -9223372036854775808.000000000, toInt64(1) >= -9223372036854775808.000000000, -9223372036854775808.000000000 = toInt64(1), -9223372036854775808.000000000 != toInt64(1), -9223372036854775808.000000000 < toInt64(1), -9223372036854775808.000000000 <= toInt64(1), -9223372036854775808.000000000 > toInt64(1), -9223372036854775808.000000000 >= toInt64(1) ;
CREATE TABLE test_3A5B315F44646C6E25616A6A762477293F373C5D594C7553643A763D6B2A44636378643B324B3C6B(x UInt8) Engine=Memory;
SELECT x, isFinite(x), isInfinite(x), isNaN(x) FROM (SELECT arrayJoin([0, 1, -1, inf, -inf, nan, -nan, 0 / 0, 1 / 0, -1 / 0, 0 / -0., -0. / 0, 1 / -0., -1 / -0.]) AS x);
CREATE TABLE test_01193_18429.table_1_110 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), N == DT as r FORMAT CSV;
CREATE TABLE t_nested_with_dots (`n` Nested(id UInt64, `values.id` Array(UInt64))) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 39545, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 4, merge_max_block_size = 9044, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 12, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 26774119, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 77073, primary_key_compress_block_size = 28334
SELECT 'Running test stateless/01746_test_for_tupleElement_must_be_constant_issue.sql from pid=1726' 
CREATE TABLE test_5568312C385D43784C2061365F455E52382B51516F2470763D3B63313E2F5C7352513A5E26545052(x UInt8) Engine=Memory;
INSERT INTO decimal (d) VALUES 
SELECT * FROM /* test 01413, query 3 */ rows_events_test WHERE v = 2;
SELECT 'Running test stateless/01702_system_numbers_scientific_notation.sql from pid=1715' 
alter table many_mutations delete where y = 936 * 2 settings mutations_sync = 0;
CREATE TABLE test_01193_18429.table_4_157 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP TABLE IF EXISTS test_max_mt_projections_alter;
DETACH TABLE set2;
CREATE TABLE test_01193_18429.table_1_905 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP DATABASE IF EXISTS test_hvzisusr 
SELECT 'ANY INNER';
CREATE TABLE test_01193_18429.table_3_874 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_7_852 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT toIPv6('');
DROP DATABASE IF EXISTS test_ybgczm3n 
SELECT avgWeighted(x, w) FROM values('x Float64, w UInt64', (4, 1), (1, 0), (10, 2));
select makeDate(2283,11,11);
INSERT INTO test_00688 VALUES 
CREATE DATABASE IF NOT EXISTS test_sxu8zskm 
SELECT number FROM system.numbers LIMIT 0
ALTER TABLE concurrent_alter_add_drop_2 DROP COLUMN value5 SETTINGS replication_alter_partitions_sync=0
alter table many_mutations delete where y = 230 * 2 settings mutations_sync = 0;
DROP POLICY p1_01295, p2_01295, p3_01295, p4_01295, p5_01295, p6_01295, p7_01295 ON db.table;
CREATE DATABASE IF NOT EXISTS test_v31tv1gd 
SELECT roundToExp2(number) AS x FROM numbers(3) ORDER BY x, toFloat32(x);
CREATE DATABASE IF NOT EXISTS test_3bj2qftf 
CREATE TABLE test_01193_18429.table_2_563 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT multiIf((number % 2) = 0, [toFloat32(1), toFloat32(2)], (number % 3) = 0, [toFloat64(2), toFloat64(3)], [toFloat32(3), toFloat32(3)]) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_9_673 VALUES 
DROP DATABASE IF EXISTS test_w88mxwo3 
SELECT if(number % 2, materialize([[9223372036854775806]]), materialize([[2, 65537, -9223372036854775808]])) AS res FROM numbers(2);
SELECT multiFuzzyMatchAllIndices(NULL, NULL, NULL);
CREATE TABLE test_62637C26777E54702F7B5441612632533055595C6621444052622B507A5E507D3127632D2D783561(x UInt8) Engine=Memory;
with '2018-01-12 22:33:44' as s, toDateTime(s) as datetime, toDateTime64(s, 6) as datetime64, toDate(s) as date, toDate32(s) as date32 SELECT formatDateTimeInJodaSyntax(datetime, 'w'), formatDateTimeInJodaSyntax(datetime64, 'w'), formatDateTimeInJodaSyntax(date, 'w'), formatDateTimeInJodaSyntax(date32, 'w');
CREATE TABLE replicated_versioned_collapsing_merge_tree (d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = ReplicatedVersionedCollapsingMergeTree('/clickhouse/tables/{database}/test_00083/01/replicated_versioned_collapsing_merge_tree/', 'r1', d, (a, b), 111, y, b);
CREATE TABLE test_01193_18429.table_6_874 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_773047793F3D49243C22535B4420273967293E7752496D7D247D3A6E317C774D3C3D6D2868346622(x UInt8) Engine=Memory;
INSERT INTO null_00699 SELECT * FROM numbers(100);
INSERT INTO test_01193_18429.table_5_570 VALUES 
SELECT 'Running test stateless/01455_rank_correlation_spearman.sql from pid=1705' 
SELECT 'Running test stateless/01163_search_case_insensetive_utf8.sql from pid=1715' 
INSERT into argmaxstate_hex_small VALUES 
WITH x AS (SELECT * FROM cte1), y AS (SELECT * FROM cte2), z AS (SELECT * FROM x WHERE a % 3 = 1), w AS (SELECT * FROM y WHERE a > 333 AND a < 1000) SELECT count(a) FROM x left JOIN y USING (a) WHERE a in (SELECT * FROM z) AND a <= (SELECT max(a) FROM w);
CREATE DATABASE IF NOT EXISTS test_9bhlijbw 
SELECT parseDateTime64BestEffortOrNull('2020-05-14T03:37:03.253184Z', 3, 'UTC');
CREATE DATABASE IF NOT EXISTS test_w89al8ni 
SELECT * FROM bf_tokenbf_map_values_test WHERE map_fixed['K3'] = '';
INSERT INTO test_01193_18429.table_3_223 VALUES 
SELECT 80,toFixedString('Hello', 10), bin(bitShiftRight(toFixedString('Hello', 10), 80));
select if(0, [cast(materialize(2.0),'Decimal(18,10)')], [cast(materialize(1.0),'Decimal(18,10)')]);
SELECT nothingUInt64IfArrayArray([[1, NULL]], [[1, 0]]) AS `x` FROM numbers(3)
INSERT INTO test_01193_18429.table_9_214 VALUES 
CREATE TABLE test_613176727256776E25377C6E212A293676414A45753755517479765A4F36532D643D3A535945523E(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_2_51 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT isIPAddressInRange('127.0.0.1', 'ffff::/16');
CREATE TABLE test_49536B2152707162392948617E2F2D25664458235F7D5B2255402B295238552E3772593D37364040(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_8_404 VALUES 
select makeDate(-1980.0, 9, 32.0/2);
SELECT '-- const date, const delta';
SELECT '121' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ffff:ffff:ffff:ff80')))
CREATE TABLE test_01193_18429.table_8_574 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO src VALUES /* (30, 1) */ 
INSERT INTO test_01193_18429.table_7_551 VALUES 
CREATE DATABASE IF NOT EXISTS test_acu6y0wm 
CREATE TABLE table_02184 (x UInt8) ORDER BY x;
select toStartOfInterval(toDateTime64('1930-12-12 12:12:12.123456', 6), INTERVAL 1 MILLISECOND);
DROP DATABASE IF EXISTS test_sm1lybzx 
SELECT count() FROM constraint_test_constants_repl WHERE a - b = 10;
CREATE DATABASE IF NOT EXISTS test_536q389l 
INSERT INTO test_01193_18429.table_2_510 VALUES 
select substringIndexUTF8('Ã¥Â¯ÂÃ¥Â¼ÂºÃ¯Â¼ÂÃ¦Â°ÂÃ¤Â¸Â»Ã¯Â¼ÂÃ¦ÂÂÃ¦ÂÂ', 'Ã¯Â¼Â', materialize(-2));
CREATE TABLE test_63377D2E707223773429664B23674260332A6A6A3E343546206A317E366C3B465679432E3E7E767D(x UInt8) Engine=Memory;
SELECT toDate('2015-02-03') < '2015-02-04';
INSERT INTO test_01193_18429.table_8_797 VALUES 
DROP DATABASE IF EXISTS test_a4z7laq5 
SELECT multiIf((number % 2) = 0, [toInt16(1), toInt16(2)], (number % 3) = 0, [toUInt32(2), toUInt32(3)], [toFloat32(3), toFloat32(3)]) FROM system.numbers LIMIT 10;
SHOW CREATE USER u2_01292@'%.myhost.com';
select countSubstringsCaseInsensitive('aba', 'B');
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c6) AND (NOT c2) AND c6) OR (c8 AND (NOT c7) AND (NOT c3)) SETTINGS convert_query_to_cnf = 0
INSERT INTO test_01193_18429.table_1_813 VALUES 
SELECT splitByChar('=', 'a==b=c=d', 2);
SELECT positionCaseInsensitiveUTF8(materialize('ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ'), 'ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ');
SELECT toTypeName(initializeAggregation('uniqExact', 0));
SELECT max(n * -2 * -1), max(-2 * n * -1), max(n / -2 / -1), max(-1 / n / -1) FROM (SELECT number n FROM numbers(10));
SELECT 'Running test stateless/00983_summing_merge_tree_not_an_identifier.sql from pid=1722' 
CREATE TABLE file (x UInt64) ENGINE = File(Native, 'test_xkfi2hhi/xz.data.xz')
CREATE TABLE test_7763517E61356A3E37424B462956687179263A726E7463496523564C74442565725E505A6A5A3253(x UInt8) Engine=Memory;
SELECT uniq(number) FROM numbers_mt(1e6) GROUP BY number % 5e5 LIMIT 10 
CREATE TABLE test_01193_18429.table_1_693 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_205233472E4943692F4A48315B2D6B69782B6433522B7526784D367B467E3675556D6E5E62414C4C(x UInt8) Engine=Memory;
SELECT 'xn--zca.xn--zca' AS idna, idnaEncode(idna) AS ascii, tryIdnaEncode(idna) AS ascii_try, idnaDecode(ascii) AS original, idnaDecode(ascii_try) AS original_try;
CREATE TABLE t1_00850 (dummy UInt8) ENGINE = Distributed(test_shard_localhost, currentDatabase(), 't_local');
SELECT arrayFilter(x -> materialize(1), emptyArrayString());
CREATE USER u1_01292 IDENTIFIED WITH plaintext_password HOST LOCAL
CREATE TABLE test_01193_18429.table_2_372 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_2_115 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE t_json_files (`file` String, `data` JSON) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 7995, min_bytes_for_wide_part = 672391689, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 2309, prefer_fetch_merged_part_size_threshold = 4823336371, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 4398217, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 33546, primary_key_compress_block_size = 66757
CREATE TABLE test_01193_18429.table_9_379 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
EXPLAIN indexes = 1, description=0 SELECT id FROM test_table WHERE id <= 10 AND value IN (SELECT 5);
SELECT medianTDigestWeighted(NULL, NULL);
CREATE DATABASE IF NOT EXISTS test_2zcw16h0 
INSERT INTO test_01193_18429.table_1_773 VALUES 
SELECT `x` FROM `test_6sl9qpyr`.`02535_custom_key` WHERE positiveModulo(sipHash64(`x`), 3) = 1
INSERT INTO test_01193_18429.table_4_427 VALUES 
SELECT i, col1 FROM ( SELECT i, a AS col1, a AS col2 FROM tab ORDER BY i WITH FILL INTERPOLATE (col1 AS col1+col2, col2) );
SELECT 't1 ALL LEFT JOIN t2 | bs = 9';
DROP DATABASE IF EXISTS test_ayv10uv7 
INSERT INTO test_01193_18429.table_3_749 VALUES 
SELECT `x` FROM generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8)))))))))))))))))', 1, 1, 1) LIMIT 1
CREATE TABLE test_5B442F402E7D5162545A68362B2E6E3D732E4C372E526E5E483B5359394F374377434E6878676A41(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00497_whitespaces_in_insert.sh from pid=1724' 
DROP TABLE aggregating_00191;
CREATE TABLE test_7B453A60225C57297266447D247A4D6B5268675C55266B6B245B4F71465321584F743A5D2C5B244F(x UInt8) Engine=Memory;
with (select count() from dedup_test) as c select throwIf(c != 5000000, 'Expected 5000000 rows, got ' || toString(c)) format Null
SELECT substring(s, -2, r) FROM t;
use ordinary_test_ha4xxq99
insert into bloom_filter2 select number+3000, 'abcdefzzz' from numbers(1024);
SELECT COUNT() FROM bloom_filter_null_array WHERE has(v, '4');
GRANT session_log_test_role TO session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_sha256_password_two_profiles_two_roles;
SELECT 4294967296, 9223372036854775807, 4294967296 = 9223372036854775807, 4294967296 != 9223372036854775807, 4294967296 < 9223372036854775807, 4294967296 <= 9223372036854775807, 4294967296 > 9223372036854775807, 4294967296 >= 9223372036854775807, 9223372036854775807 = 4294967296, 9223372036854775807 != 4294967296, 9223372036854775807 < 4294967296, 9223372036854775807 <= 4294967296, 9223372036854775807 > 4294967296, 9223372036854775807 >= 4294967296 , toUInt64(4294967296) = toUInt64(9223372036854775807), toUInt64(4294967296) != toUInt64(9223372036854775807), toUInt64(4294967296) < toUInt64(9223372036854775807), toUInt64(4294967296) <= toUInt64(9223372036854775807), toUInt64(4294967296) > toUInt64(9223372036854775807), toUInt64(4294967296) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toUInt64(4294967296), toUInt64(9223372036854775807) != toUInt64(4294967296), toUInt64(9223372036854775807) < toUInt64(4294967296), toUInt64(9223372036854775807) <= toUInt64(4294967296), toUInt64(9223372036854775807) > toUInt64(4294967296), toUInt64(9223372036854775807) >= toUInt64(4294967296) , toUInt64(4294967296) = toInt64(9223372036854775807), toUInt64(4294967296) != toInt64(9223372036854775807), toUInt64(4294967296) < toInt64(9223372036854775807), toUInt64(4294967296) <= toInt64(9223372036854775807), toUInt64(4294967296) > toInt64(9223372036854775807), toUInt64(4294967296) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toUInt64(4294967296), toInt64(9223372036854775807) != toUInt64(4294967296), toInt64(9223372036854775807) < toUInt64(4294967296), toInt64(9223372036854775807) <= toUInt64(4294967296), toInt64(9223372036854775807) > toUInt64(4294967296), toInt64(9223372036854775807) >= toUInt64(4294967296) , toInt64(4294967296) = toUInt64(9223372036854775807), toInt64(4294967296) != toUInt64(9223372036854775807), toInt64(4294967296) < toUInt64(9223372036854775807), toInt64(4294967296) <= toUInt64(9223372036854775807), toInt64(4294967296) > toUInt64(9223372036854775807), toInt64(4294967296) >= toUInt64(9223372036854775807), toUInt64(9223372036854775807) = toInt64(4294967296), toUInt64(9223372036854775807) != toInt64(4294967296), toUInt64(9223372036854775807) < toInt64(4294967296), toUInt64(9223372036854775807) <= toInt64(4294967296), toUInt64(9223372036854775807) > toInt64(4294967296), toUInt64(9223372036854775807) >= toInt64(4294967296) , toInt64(4294967296) = toInt64(9223372036854775807), toInt64(4294967296) != toInt64(9223372036854775807), toInt64(4294967296) < toInt64(9223372036854775807), toInt64(4294967296) <= toInt64(9223372036854775807), toInt64(4294967296) > toInt64(9223372036854775807), toInt64(4294967296) >= toInt64(9223372036854775807), toInt64(9223372036854775807) = toInt64(4294967296), toInt64(9223372036854775807) != toInt64(4294967296), toInt64(9223372036854775807) < toInt64(4294967296), toInt64(9223372036854775807) <= toInt64(4294967296), toInt64(9223372036854775807) > toInt64(4294967296), toInt64(9223372036854775807) >= toInt64(4294967296) 
SELECT 'Running test stateless/00215_primary_key_order_zookeeper_long.sql from pid=1714' 
CREATE TABLE 01760_db.example_simple_key_source (id UInt64, value UInt64) ENGINE=TinyLog;
SELECT 'Running test stateless/00148_summing_merge_tree_nested_map_multiple_values.sql from pid=1720' 
SELECT count() = 8194, sumMerge(s) = 16387 FROM aggregating_00155
DROP TABLE IF EXISTS delta_bad_params1;
INSERT INTO test_01193_18429.table_6_584 VALUES 
INSERT INTO test_01193_18429.table_3_114 VALUES 
DROP DATABASE IF EXISTS test_7ozt608u 
SELECT x FROM a UNION ALL SELECT x FROM d;
CREATE TABLE test_01193_18429.table_2_965 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_212755573B3361335E6023482D455879642647343D7C3C6D763C36485047363C2B465B72712C2241(x UInt8) Engine=Memory;
INSERT INTO r5 SELECT 77 % 10 = 5 ? 77 - 1 : 77
SELECT multiIf((number % 2) = 0, toUInt16(1), (number % 3) = 0, toUInt32(2), toInt32(3)) FROM system.numbers LIMIT 10;
CREATE TABLE parquet_types6 (int8 Nullable(Int8), uint8 Nullable(UInt8), int16 Nullable(Int16), uint16 Nullable(UInt16), int32 Nullable(Int32), uint32 Nullable(UInt32), int64 Nullable(Int64), uint64 Nullable(UInt64), float32 Nullable(Float32), float64 Nullable(Float64), string Nullable(String), fixedstring Nullable(FixedString(15)), date Nullable(Date), datetime Nullable(DateTime), datetime64 Nullable(DateTime64(9))) ENGINE = Memory
CREATE TABLE test_02908_r1_209 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_209', 'r1') ORDER BY tuple()
SELECT sum(`amount`) IN (0, 100, 200) FROM `test_jfuf8umo`.`realtimedrep`
SELECT stringToH3(h3ToString(arrayJoin([579205133326352383,589753847883235327,594082350283882495])));
INSERT INTO test_01193_18429.table_8_677 VALUES 
select portRFC('//[2001:db8::8a2e:370:7334]:80/');
SELECT * FROM t1 INNER JOIN rdb ON rdb.key + 1 == t1.k FORMAT Null SETTINGS join_algorithm = 'direct,hash';
CREATE TABLE test_01193_18429.table_9_374 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_235D6E5F645E48264178302A385E396A653D5C2F316A5B3F3B77627A325F654E3C616B46346F5A25(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_2_205 VALUES 
CREATE TABLE test_02908_r3_122 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_122', 'r3') ORDER BY tuple()
INSERT INTO test_01193_18429.table_3_556 VALUES 
CREATE TABLE test_5D524E69796E4A52574A7855416E5234506D3E742E492C6D3D32216A62747D4640622D22677C4652(x UInt8) Engine=Memory;
CREATE TABLE test_606E3548725D4D4D673C3679744C3640526E26222A375C35736B51546B3C6B497156354C53247E27(x UInt8) Engine=Memory;
SELECT multiIf((number % 2) = 0, toInt32(1), (number % 3) = 0, toInt32(2), toFloat64(3)) FROM system.numbers LIMIT 10;
insert into buf values 
DROP TABLE Orders;
select * from simple_agg_groupArrayLastArray order by key, value;
INSERT INTO test_01193_18429.table_10_339 VALUES 
select deltaSumMerge(rows) as delta_sum from ( select * from ( select deltaSumState(arrayJoin([0, 1])) as rows union all select deltaSumState(arrayJoin([4, 5])) as rows ) order by rows ) order by delta_sum;
SELECT countIf(explain like '%COMMA%' OR explain like '%CROSS%'), countIf(explain like '%INNER%') FROM ( EXPLAIN SYNTAX SELECT t1.a FROM t1, t2, t3, t4 WHERE t1.a = t2.a AND t1.a = t3.a AND t1.a = t4.a);
INSERT INTO test_01193_18429.table_2_878 VALUES 
DROP DATABASE IF EXISTS test_1p4i2g7u 
INSERT INTO test_01193_18429.table_2_251 VALUES 
DROP DATABASE IF EXISTS test_uqvaaeq2 
insert into right_table values 
CREATE DATABASE IF NOT EXISTS test_h8mmlit8 
DROP DATABASE 01681_database_for_cache_dictionary;
select * from file(dump1.sql, MySQLDump, 'x Nullable(Int32), y Nullable(Int32)') order by x, y
SELECT * FROM lc_table INNER JOIN lc_table AS lc_table2 ON (lc_table.col = lc_table2.col) OR (lc_table.col = lc_table2.col);
select if(number % 5, Null, toFloat64OrZero(toString(number))) from numbers(20);
DROP DATABASE IF EXISTS test_sqj7ncpn 
CREATE TABLE test_556D5F6240267C6C665E543F22242B242160545C2476232A23335C265B4F7664605F6C2F372D6422(x UInt8) Engine=Memory;
insert into t1_00848 values 
DROP TABLE IF EXISTS bloom_filter_array_types_test;
CREATE DATABASE IF NOT EXISTS test_3rmqaau8 
DROP DATABASE IF EXISTS test_kl415bk2 
select arrayPushFront([1], 1);
SELECT 'Source table';
ALTER TABLE concurrent_alter_column ADD COLUMN c355 DOUBLE;
SELECT formatDateTime(toDateTime('2018-01-02 22:33:44'), '%Y'), formatDateTime(toDate32('2018-01-02'), '%Y');
SELECT CASE WHEN 1 THEN 'foo' WHEN (col1 % 3) = 0 THEN 'bar' ELSE col4 END FROM multi_if_check;
SELECT toInt16(0) AS x, toInt32(1) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
INSERT INTO r10 SELECT 68 % 10 = 10 ? 68 - 1 : 68
DROP DATABASE IF EXISTS test_gbpc4da6 
SELECT CASE WHEN (col1 % 2) = 0 THEN [col2, col3] WHEN 1 THEN [col4, 'bar'] ELSE [col6, col7] END FROM multi_if_check;
SELECT current_value - previous_value FROM ( SELECT event, value as current_value FROM system.events WHERE event like 'FailedSelectQuery' ) AS previous ALL LEFT JOIN ( SELECT event, value as previous_value FROM current_failed_query_metrics ) AS current on previous.event = current.event;
CREATE TABLE test_01193_18429.table_6_344 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT [((1, materialize('2')), [(3, [4])])] AS thing, thing[1], thing[1].1, thing[1].2, thing[1].1.1, thing[1].1.2, (thing[1].2)[1], (thing[1].2)[1].1, (thing[1].2)[1].2, ((thing[1].2)[1].2)[1];
INSERT INTO recompression_table_compact SELECT now(), 1, toString(number) from numbers(1000);
CREATE TABLE test_48297D7A5E535E776853235E4B783A4F41652F4C3A31526250376A665E2F6866324F6F565F25395A(x UInt8) Engine=Memory;
SELECT encodeURLFormComponent('');
INSERT INTO src_11 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 49
INSERT INTO test_01193_18429.table_5_998 VALUES 
DROP TABLE IF EXISTS part_info;
SELECT multiIf((number % 2) = 0, [toUInt32(1), toUInt32(2)], (number % 3) = 0, [toFloat32(2), toFloat32(3)], [toInt8(3), toInt8(3)]) FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/02026_describe_include_subcolumns.sql from pid=1726' 
SELECT toDecimal64(0, 8) AS x, multiIf(x = 0, NULL, intDivOrZero(1, x)), multiIf(x = 0, NULL, intDivOrZero(x, 0));
INSERT INTO test_01193_18429.table_2_765 VALUES 
CREATE TABLE test_xy (`x` Int32, `y` String) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 2662, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 17210, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 97, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 18588093, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 70286, primary_key_compress_block_size = 60961
CREATE TABLE test_01193_18429.table_4_681 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_2F7D3664203B7653297D344F4863554E2E5D3A537722313466307470272B7A736861413244536424(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02250_insert_select_from_file_schema_inference.sql from pid=1718' 
SELECT dictGetHierarchy('database_for_dict.dictionary_with_hierarchy', materialize(toUInt64(22)));
SELECT * FROM test LIMIT 50 OFFSET 50;
select if(null, materialize(map(3,4,5,6)), materialize(map(1,2,3,4))) from numbers(2);
DROP TABLE attach_r1;
select toTypeName(res), array([1, 2, 3], ['str_1', 'str_2', 'str_3']) as res;
SELECT multiIf(1, ['foo', 'bar'], 1, ['foo', col5], [col6, 'bar']) FROM multi_if_check;
SELECT ULIDStringToDateTime(NULL);
SELECT * FROM t0 LEFT JOIN t1 ON t1.x = t0.x;
SELECT count() FROM t_cnf_fuzz WHERE (c4 AND (NOT c1)) OR ((NOT c4)) OR (c7) OR ((NOT c8) AND (NOT c4) AND (NOT c2)) OR (c1) OR (c1 AND c5 AND (NOT c9)) OR (c6 AND (NOT c2) AND c1 AND (NOT c5) AND (NOT c2)) OR ((NOT c2) AND c7 AND (NOT c7) AND (NOT c7)) OR (c7) OR ((NOT c8) AND (NOT c7) AND (NOT c2) AND c3 AND (NOT c0)) SETTINGS convert_query_to_cnf = 0
select 0 = multiMatchAny(materialize('fdkmtqmxnegwvnjhghjq'), materialize(['vynkybvdmhgeezybbdqfrukibisj', 'knazzamgjjpavwhvdkwigykh', 'peumnifrmdhhmrqqnemw', 'lmsnyvqoisinlaqobxojlwfbi', 'oqwfzs', 'dymudxxeodwjpgbibnkvr', 'vomtfsnizkplgzktqyoiw', 'yoyfuhlpgrzds', 'cefao', 'gi', 'srpgxfjwl', 'etsjusdeiwbfe', 'ikvtzdopxo', 'ljfkavrau', 'soqdhxtenfrkmeic', 'ktprjwfcelzbup', 'pcvuoddqwsaurcqdtjfnczekwni', 'agkqkqxkfbkfgyqliahsljim'])) from system.numbers limit 10;
CREATE TABLE test_705238766259483F5777242820775D572057386F263E5C69553E3B47592B42386D2F786D765B237C(x UInt8) Engine=Memory;
SELECT multiIf((number % 2) = 0, [toUInt16(1), toUInt16(2)], (number % 3) = 0, [toUInt32(2), toUInt32(3)], [toFloat32(3), toFloat32(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_597554773E78734076312E53304E706C606C4E79783C254067323C7A77506832545B772960502C3E(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_10_941 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_6C4D567153462A365B67752023434E4F2E5A2E534938544F296F4F3A5C4F7D2E7543506157775C73(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_d1dl4ccq 
CREATE DATABASE IF NOT EXISTS test_cnbpeugc 
SELECT 'aes-128-ecb' AS mode, aes_decrypt_mysql(mode, '[HIDDEN]') = input FROM encryption_test
CREATE TABLE test_7962713E28744F552E785B3A5978714A342B3E283F39236C733D6F676720455D7E58657E4B237E45(x UInt8) Engine=Memory;
ALTER TABLE concurrent_alter_mt_5 MODIFY COLUMN value1 Float64 SETTINGS replication_alter_partitions_sync=0
DROP TABLE regression_for_in_operator_view;
CREATE TABLE test_3E674C405D653A20312747646F7B20546D3D31397334213322376D6C74215D2D686F7147575B6865(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_2icsvdno 
SELECT 'Running test stateless/00552_logical_functions_ternary.sql from pid=1726' 
DROP TABLE part_c;
SELECT quantilesExact(0.5)(x) FROM (SELECT number AS x FROM system.numbers LIMIT 1001);
insert into store_sales values 
INSERT INTO test_01193_18429.table_5_849 VALUES 
SELECT a, t1.a, t2.a FROM t1 INNER JOIN t2 USING (a) ORDER BY (t1.a, t2.a);
CREATE TABLE test_01193_18429.table_3_241 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT count() FROM t_index_non_materialized WHERE a = 1;
SELECT ['q', 'w', 'ert', 'y'];
SELECT '1', '-1152921504606846976.000000000', 1 = -1152921504606846976.000000000, 1 != -1152921504606846976.000000000, 1 < -1152921504606846976.000000000, 1 <= -1152921504606846976.000000000, 1 > -1152921504606846976.000000000, 1 >= -1152921504606846976.000000000, -1152921504606846976.000000000 = 1, -1152921504606846976.000000000 != 1, -1152921504606846976.000000000 < 1, -1152921504606846976.000000000 <= 1, -1152921504606846976.000000000 > 1, -1152921504606846976.000000000 >= 1 , toUInt8(1) = -1152921504606846976.000000000, toUInt8(1) != -1152921504606846976.000000000, toUInt8(1) < -1152921504606846976.000000000, toUInt8(1) <= -1152921504606846976.000000000, toUInt8(1) > -1152921504606846976.000000000, toUInt8(1) >= -1152921504606846976.000000000, -1152921504606846976.000000000 = toUInt8(1), -1152921504606846976.000000000 != toUInt8(1), -1152921504606846976.000000000 < toUInt8(1), -1152921504606846976.000000000 <= toUInt8(1), -1152921504606846976.000000000 > toUInt8(1), -1152921504606846976.000000000 >= toUInt8(1) , toInt8(1) = -1152921504606846976.000000000, toInt8(1) != -1152921504606846976.000000000, toInt8(1) < -1152921504606846976.000000000, toInt8(1) <= -1152921504606846976.000000000, toInt8(1) > -1152921504606846976.000000000, toInt8(1) >= -1152921504606846976.000000000, -1152921504606846976.000000000 = toInt8(1), -1152921504606846976.000000000 != toInt8(1), -1152921504606846976.000000000 < toInt8(1), -1152921504606846976.000000000 <= toInt8(1), -1152921504606846976.000000000 > toInt8(1), -1152921504606846976.000000000 >= toInt8(1) , toUInt16(1) = -1152921504606846976.000000000, toUInt16(1) != -1152921504606846976.000000000, toUInt16(1) < -1152921504606846976.000000000, toUInt16(1) <= -1152921504606846976.000000000, toUInt16(1) > -1152921504606846976.000000000, toUInt16(1) >= -1152921504606846976.000000000, -1152921504606846976.000000000 = toUInt16(1), -1152921504606846976.000000000 != toUInt16(1), -1152921504606846976.000000000 < toUInt16(1), -1152921504606846976.000000000 <= toUInt16(1), -1152921504606846976.000000000 > toUInt16(1), -1152921504606846976.000000000 >= toUInt16(1) , toInt16(1) = -1152921504606846976.000000000, toInt16(1) != -1152921504606846976.000000000, toInt16(1) < -1152921504606846976.000000000, toInt16(1) <= -1152921504606846976.000000000, toInt16(1) > -1152921504606846976.000000000, toInt16(1) >= -1152921504606846976.000000000, -1152921504606846976.000000000 = toInt16(1), -1152921504606846976.000000000 != toInt16(1), -1152921504606846976.000000000 < toInt16(1), -1152921504606846976.000000000 <= toInt16(1), -1152921504606846976.000000000 > toInt16(1), -1152921504606846976.000000000 >= toInt16(1) , toUInt32(1) = -1152921504606846976.000000000, toUInt32(1) != -1152921504606846976.000000000, toUInt32(1) < -1152921504606846976.000000000, toUInt32(1) <= -1152921504606846976.000000000, toUInt32(1) > -1152921504606846976.000000000, toUInt32(1) >= -1152921504606846976.000000000, -1152921504606846976.000000000 = toUInt32(1), -1152921504606846976.000000000 != toUInt32(1), -1152921504606846976.000000000 < toUInt32(1), -1152921504606846976.000000000 <= toUInt32(1), -1152921504606846976.000000000 > toUInt32(1), -1152921504606846976.000000000 >= toUInt32(1) , toInt32(1) = -1152921504606846976.000000000, toInt32(1) != -1152921504606846976.000000000, toInt32(1) < -1152921504606846976.000000000, toInt32(1) <= -1152921504606846976.000000000, toInt32(1) > -1152921504606846976.000000000, toInt32(1) >= -1152921504606846976.000000000, -1152921504606846976.000000000 = toInt32(1), -1152921504606846976.000000000 != toInt32(1), -1152921504606846976.000000000 < toInt32(1), -1152921504606846976.000000000 <= toInt32(1), -1152921504606846976.000000000 > toInt32(1), -1152921504606846976.000000000 >= toInt32(1) , toUInt64(1) = -1152921504606846976.000000000, toUInt64(1) != -1152921504606846976.000000000, toUInt64(1) < -1152921504606846976.000000000, toUInt64(1) <= -1152921504606846976.000000000, toUInt64(1) > -1152921504606846976.000000000, toUInt64(1) >= -1152921504606846976.000000000, -1152921504606846976.000000000 = toUInt64(1), -1152921504606846976.000000000 != toUInt64(1), -1152921504606846976.000000000 < toUInt64(1), -1152921504606846976.000000000 <= toUInt64(1), -1152921504606846976.000000000 > toUInt64(1), -1152921504606846976.000000000 >= toUInt64(1) , toInt64(1) = -1152921504606846976.000000000, toInt64(1) != -1152921504606846976.000000000, toInt64(1) < -1152921504606846976.000000000, toInt64(1) <= -1152921504606846976.000000000, toInt64(1) > -1152921504606846976.000000000, toInt64(1) >= -1152921504606846976.000000000, -1152921504606846976.000000000 = toInt64(1), -1152921504606846976.000000000 != toInt64(1), -1152921504606846976.000000000 < toInt64(1), -1152921504606846976.000000000 <= toInt64(1), -1152921504606846976.000000000 > toInt64(1), -1152921504606846976.000000000 >= toInt64(1) ;
SELECT name FROM system.zookeeper WHERE path = '/clickhouse/' || currentDatabase() || '/01700_system_zookeeper_path_in/' || getMacro('shard') AND name like 'block%' ORDER BY name;
CREATE TABLE test_01193_18429.table_4_467 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select 1 = multiSearchAny(materialize('abcdefgh'), ['bc']) from system.numbers limit 10;
DROP DATABASE test_01320
CREATE DATABASE IF NOT EXISTS test_s3t4z9e6 
CREATE DATABASE IF NOT EXISTS test_74kbzank 
SELECT JSONExtractBool(NULL);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (17 < 29 AND 100 > 0 ? 17 : 0)), throwIf(last != (17 < 29 AND 100 > 0 ? least(29 - 1, 17 + 100 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(29) LIMIT 17, 100);
CREATE TABLE test_7C337E557B304E65794C775C60512F4E38325174224A4F65514D2973356633293F2A362826434171(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt32(1), toInt32(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
select substringIndexUTF8('Ã¥Â¯ÂÃ¥Â¼ÂºÃ¯Â¼ÂÃ¦Â°ÂÃ¤Â¸Â»Ã¯Â¼ÂÃ¦ÂÂÃ¦ÂÂ', 'Ã¯Â¼Â', -1);
SELECT truncate(-1);
create table test_progress (x UInt64, y UInt64, d Date, a Array(UInt64), s String) engine=MergeTree() order by x
CREATE DATABASE IF NOT EXISTS test_xwdqdt12 
DROP DATABASE IF EXISTS test_eypeul5v 
select makeDate32(1990,1,0);
CREATE TABLE test_01193_18429.table_2_314 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
drop table if exists tbl_8parts_8granules_seq;
SELECT makeDate(NULL, NULL, NULL);
CREATE TABLE tuples (t1 Tuple(UInt32, UInt32), t2 Tuple(String, String), t3 Tuple(Tuple(UInt32, String), UInt32), t4 Tuple(Tuple(UInt32, UInt32), Tuple(String, String)), t5 Tuple(Array(UInt32), UInt32), t6 Tuple(Tuple(Array(UInt32), Array(UInt32)), Tuple(Array(Array(UInt32)), UInt32)), t7 Array(Tuple(Array(Array(UInt32)), Tuple(Array(Tuple(UInt32, UInt32)), UInt32)))) ENGINE=Memory()
CREATE DATABASE IF NOT EXISTS test_xcew7wk1 
CREATE TABLE test_01193_18429.table_3_110 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_486D2320445D28633A4D442B27495D5A394E4877695D2962697D4668492231247D4F372E5F294541(x UInt8) Engine=Memory;
EXPLAIN PIPELINE SELECT a, c FROM t_fixed_prefix WHERE bitNot(b) = 1 ORDER BY a, c SETTINGS optimize_read_in_order = 1
INSERT INTO test_01193_18429.table_3_244 VALUES 
SELECT 'Ã£ÂÂÃ£ÂÂ¡Ã£ÂÂÃ£ÂÂ·Ã£ÂÂ§Ã£ÂÂ³.biz' AS ascii, idnaDecode(ascii) AS unicode, idnaEncode(unicode) AS original, tryIdnaEncode(unicode) AS original_try;
INSERT INTO test_01193_18429.table_9_306 VALUES 
CREATE TABLE test_65664E45583476452D53694D535832284C5A204A595A4D6E2366536470372F573E7A34602C337C31(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_2_318 VALUES 
SELECT 1025 == count(n) FROM foo_lc AS t1 ALL LEFT JOIN foo_lc AS t2 ON t1.n == t2.n;
INSERT INTO test_01193_18429.table_1_597 VALUES 
SELECT arrayCumSumNonNegative(b) FROM test;
SELECT toTypeName(arraySort(arrayIntersect([1, 2, 3]::Array(UInt256), [2, 3, 4]::Array(Int128))));
select toTypeName(arrayIntersect([(1, ['a', 'b']), (Null, ['c'])], [(2, ['c', Null]), (1, ['a', 'b'])]));
select pointInPolygon((35.72308, 58.8294), [(32.947998, 59.506455), (34.222412, 59.215312), (33.343506, 58.551061), (34.859619, 58.938673), (36.463623, 58.528125), (35.397949, 59.215312), (36.804199, 59.495303), (35.2771, 59.50088), (34.892578, 60.267066), (34.343262, 59.517603), (32.947998, 59.506455)]);
SELECT endsWith([NULL],[NULL]);
drop table if exists data_01817;
CREATE DATABASE IF NOT EXISTS test_pp0r11d0 
INSERT INTO test_table SELECT number, toString(number) FROM numbers(10);
DROP TABLE IF EXISTS t_async_insert_native_4;
SELECT encodeURLComponent('');
INSERT INTO test_01193_18429.table_4_983 VALUES 
CREATE DATABASE IF NOT EXISTS test_g1odokiq 
INSERT INTO test_01193_18429.table_3_282 VALUES 
SELECT toDateTime(NULL, NULL, NULL);
SELECT 'remote_0', toUInt8(1) AS `dummy` FROM `system`.`one` AS `o` WHERE `o`.`dummy` = 0
DROP TABLE IF EXISTS merge_tree_with_sampling;
select uniqExact(_part), count() FROM tDD WHERE toYYYYMMDD(d) >= 20200923 and toDate(d) <= '2020-09-26';
DROP DATABASE IF EXISTS test_pg4hvtst 
INSERT INTO test_01193_18429.table_4_897 VALUES 
CREATE TABLE test_7D5A322A4C5539722C2E25506C4B7D707B2B67334333522D36252059457542582B63636936487547(x UInt8) Engine=Memory;
SELECT s, SUM(i*2) AS i FROM test_00562 GROUP BY s UNION ALL SELECT s, SUM(i*2) AS i FROM test_00562 GROUP BY s;
SELECT 'Running test stateless/01825_type_json_in_other_types.sh from pid=1718' 
CREATE TABLE test_01193_18429.table_8_279 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Running test stateless/02112_skip_index_set_and_or.sql from pid=1726' 
alter table many_mutations delete where y = 769 * 2 settings mutations_sync = 0;
INSERT INTO test_table_1 VALUES 
SELECT * FROM test_date_out_of_range
DROP DATABASE IF EXISTS test_31eguzej 
CREATE TABLE test_01193_18429.table_5_674 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TEMPORARY TABLE t10_02271 (x INT() SIGNED DEFAULT 1);
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 37348, 500 settings ignore_materialized_views_with_dropped_target_table=1
SELECT arrayDistinct(arraySort(arrayMap((x, y) -> (round(x, 3), round(y, 3)), arrayFlatten(polygonsSymDifferenceSpherical([[(50.,50.),(50.,-50.),(-50.,-50.),(-50.,50.),(50.,50.)],[(10.,10.),(10.,40.),(40.,40.),(40.,10.),(10.,10.)],[(-10.,-10.),(-10.,-40.),(-40.,-40.),(-40.,-10.),(-10.,-10.)]], [[[(-20.,-20.),(-20.,20.),(20.,20.),(20.,-20.),(-20.,-20.)]]])))));
DROP DATABASE IF EXISTS test_upsvb8sv 
CREATE TABLE test_01193_18429.table_9_389 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT ignore(*) FROM ( SELECT uId, user.id as `uuu` FROM order LEFT ANY JOIN user ON uId = `uuu` );
INSERT INTO local_statements FORMAT CSV 
CREATE TABLE test_01193_18429.table_4_934 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Running test stateless/02737_timezone_setting.sql from pid=1713' 
CREATE TABLE t1 (`id` UInt32, `attr` UInt32) ENGINE = MergeTree ORDER BY id SETTINGS ratio_of_defaults_for_sparse_serialization = 0.1, index_granularity = 17727, min_bytes_for_wide_part = 0, replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 18950, prefer_fetch_merged_part_size_threshold = 3651659627, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 48, min_merge_bytes_to_use_direct_io = 5410149628, index_granularity_bytes = 12898238, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 84500, primary_key_compress_block_size = 63504
SELECT 'Running test stateless/02479_analyzer_aggregation_crash.sql from pid=1722' 
select * from `table_00609` prewhere val > 2 format Null SETTINGS max_block_size=80000;
INSERT INTO test_01193_18429.table_4_961 VALUES 
ALTER TABLE non_metadata_alters MODIFY COLUMN value2 Enum8('Hello' = 1, 'World' = 2, '!' = 3);
SELECT toDateTimeOrDefault(-1);
select arrayReduce('uniqResample(2, 9, 3)', [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [-0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);
SELECT 10000000000 = i, 10000000000 = (i - g + 10000000000) FROM decimal WHERE a = 42;
DROP DATABASE IF EXISTS test_1ugsx698 
SELECT tupleElement(materialize(('hello', 'world')), 3, 'default');
INSERT INTO test_01193_18429.table_9_154 VALUES 
DROP TABLE IF EXISTS nnna;
SELECT 'Running test stateless/02495_analyzer_storage_join.sql from pid=1724' 
SELECT dictHas('01753_dictionary_db.direct_dictionary_simple_key_complex_attributes', number) FROM system.numbers LIMIT 4;
CREATE TABLE IF NOT EXISTS test_01444.t23974 (`x` UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 49736, min_bytes_for_wide_part = 645103364, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 6, merge_max_block_size = 15200, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 21360504, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75390, primary_key_compress_block_size = 98921
CREATE TABLE test_01193_18429.table_9_746 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_462459433D2B4B214C416B34733A3B7D62202F71667820767D5436287869656C612975613C4B5E3A(x UInt8) Engine=Memory;
select uniqExact(_part), count() from tMM where toStartOfDay(d) = '2020-10-01 00:00:00';
CREATE TABLE test_01193_18429.table_2_474 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP TABLE t_hardware_error NO DELAY;
CREATE TABLE tab (`machine_id` UInt64, `name` String, `timestamp` DateTime) ENGINE = MergeTree PARTITION BY toYYYYMM(timestamp) ORDER BY machine_id SETTINGS index_granularity = 13541, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 15703, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 5023813, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 65890, primary_key_compress_block_size = 22452
SELECT COUNT() FROM bloom_filter_array_types_test WHERE has(f64, 5);
select t from data_order_by_proj_incomp where t > 0 order by t settings optimize_read_in_order=0;
CREATE DATABASE IF NOT EXISTS test_2uyzaylg 
CREATE TABLE test_01193_18429.table_10_991 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_2B474F5975627A3434705A40317A43523A3B3C4D747979453D323348344850645F4F475971216F60(x UInt8) Engine=Memory;
TRUNCATE TABLE select_final;
SELECT javaHashUTF16LE('');
alter table many_mutations delete where y = 418 * 2 settings mutations_sync = 0;
SELECT 'Running test stateless/00311_array_primary_key.sql from pid=1720' 
SELECT * FROM (SELECT (NULL :: Nullable(UInt64)) AS id) AS a SEMI RIGHT JOIN (SELECT (1 :: UInt32) AS id) AS d ON a.id = d.id ;
CREATE MATERIALIZED VIEW mv2 TO t3 AS SELECT -- This includes an unnecessarily complex query to verify that the local cache is used (since it uses t1) sum(i) + sum(j) + (SELECT * FROM (SELECT min(i) + min(j) FROM (SELECT * FROM system.one _a, t1 _b))) AS z FROM t1;
INSERT INTO test_01193_18429.table_9_324 VALUES 
DROP DICTIONARY IF EXISTS test_dictionary_non_nullable;
select accurateCastOrNull('false', 'Bool');
CREATE TABLE test_table_join_2 ( id UInt64, value String ) ENGINE = TinyLog;
INSERT INTO test_01193_18429.table_1_605 VALUES 
CREATE TABLE test_01193_18429.table_7_968 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
alter table many_mutations delete where y = 708 * 2 settings mutations_sync = 0;
CREATE INDEX idx_tab2_1 ON tab2 (col3 DESC);
DROP TABLE data_01875_1;
INSERT INTO test_01193_18429.table_3_655 VALUES 
DROP TABLE IF EXISTS test_default_using_alias;
CREATE TABLE id_join (`country` String, `location` Array(Int32)) ENGINE = Join(ANY, LEFT, country);
RESTORE TABLE test FROM Disk('backups', 'test_s3_backup');
DROP DATABASE IF EXISTS test_htuy2blb 
CREATE TABLE test_64737557506F3E5D455E6C6421764F262866704D4C4F335C5B643663306774616B5B587D3A666757(x UInt8) Engine=Memory;
CREATE TABLE test_4D56632C793F265E475F7377756A353A4425585B5A353450556C4648797E552C3A5746295C35344A(x UInt8) Engine=Memory;
SELECT toDecimal256OrZero ('\'', 4);
CREATE TABLE attach_r2 (d Date) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00236/01/attach', 'r2', d, d, 8192);
insert into sensitive select number as id, toDate('2019-01-01') as date, 'abcd' as value1, rand() as valuer from numbers(10000);
CREATE DATABASE IF NOT EXISTS test_8ektj9dm 
drop table data_02230_ttl;
SYSTEM DROP QUERY CACHE;
INSERT INTO test_01193_18429.table_2_214 VALUES 
CREATE MATERIALIZED VIEW HASH_MV (`HASH_VAL` UInt64, `STR_VAL` LowCardinality(String)) ENGINE = ReplacingMergeTree ORDER BY HASH_VAL SETTINGS index_granularity = 4442, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 17481, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 144127, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 6930727016, index_granularity_bytes = 4498729, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 30470, primary_key_compress_block_size = 41765 AS SELECT xxHash64(STR_VAL) AS HASH_VAL, toLowCardinality(STR_VAL) AS STR_VAL FROM HASH_TEST_INSERT
select 'full';
SELECT * FROM test_01073_crlf_end_of_line FORMAT TSV SETTINGS output_format_tsv_crlf_end_of_line = 0;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toUInt64(2) ELSE toUInt32(3) END FROM system.numbers LIMIT 10;
SELECT number, anyIf(toNullable('Hello'), arrayJoin([1, 0]) = 0) FROM numbers(2) GROUP BY number ORDER BY number;
CREATE TABLE test_01193_18429.table_9_846 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
WITH toDate('2021-04-14') AS date_value, toDate32('2021-04-14') AS date_32_value, toDateTime('2021-04-14 11:22:33') AS date_time_value, toDateTime64('2021-04-14 11:22:33', 3) AS date_time_64_value SELECT dateName('day', date_value), dateName('day', date_32_value), dateName('day', date_time_value), dateName('day', date_time_64_value);
drop table db_01517_atomic.mv;
CREATE TABLE test_01193_18429.table_3_464 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_10_592 VALUES 
DROP TABLE IF EXISTS table_with_uint64
select * from enum_alter_issue;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (16 < 2 AND 81 > 0 ? 16 : 0)), throwIf(last != (16 < 2 AND 81 > 0 ? least(2 - 1, 16 + 81 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(2) LIMIT 16, 81);
CREATE TABLE test_784659483B67216C5B3E6E4F2C4433746A744D5161722B3E364F58375C6B2B404A307736547B3776(x UInt8) Engine=Memory;
SELECT blockSerializedSize();
INSERT INTO file SELECT * FROM numbers(100000)
alter table t_delete_projection delete where x < 8192;
DROP DATABASE IF EXISTS test_j8huthsq 
INSERT INTO test_01193_18429.table_7_923 VALUES 
CREATE TABLE test_6948612B5739297D513A4941323E5D3B703675656F3E4D255427253C7065425E633A4E3A2C423079(x UInt8) Engine=Memory;
CREATE TABLE shard_1.from_0 (`x` UInt32) ENGINE = ReplicatedMergeTree(concat('/clickhouse/tables/from_0_', currentDatabase()), '1') ORDER BY x SETTINGS old_parts_lifetime = 1, max_cleanup_delay_period = 1, cleanup_delay_period = 1, index_granularity = 55138, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 119, merge_max_block_size = 7311, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 9234099017, index_granularity_bytes = 3630046, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 28067, primary_key_compress_block_size = 22551
select 'deduplicate_blocks_in_dependent_materialized_views=1, insert_deduplication_token = yes, results consitent';
SELECT reinterpretAsUInt128(-1);
CREATE DATABASE IF NOT EXISTS test_zyunoo66 
SELECT "ta`ble".dummy, 'hello''world' AS "hel""lo" FROM system.one AS `ta``ble`;
SELECT b, c FROM t_fixed_prefix WHERE bitNot(b) = 1 ORDER BY b, c SETTINGS optimize_read_in_order = 1
SELECT count() FROM t_cnf_fuzz WHERE (c5) OR (c9 AND (NOT c3)) OR (c3 AND (NOT c9) AND c8 AND c9 AND (NOT c7)) OR (c5 AND c1 AND c4 AND (NOT c4) AND c9) OR ((NOT c1) AND c1) OR ((NOT c3) AND (NOT c0)) OR ((NOT c2)) OR (c0 AND (NOT c4) AND (NOT c2)) OR ((NOT c8) AND c0 AND c9 AND c6) SETTINGS convert_query_to_cnf = 0
SELECT CASE WHEN (number % 2) = 0 THEN [toInt16(1), toInt16(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toInt64(3), toInt64(3)] END FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_hklfjq8i 
SHOW INDEXES FROM tbl;
INSERT INTO tableFile_00968 SELECT number FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/00456_alter_nullable.sql from pid=1715' 
DROP DATABASE IF EXISTS test_e1v8d74o 
CREATE DATABASE IF NOT EXISTS test_9wbxoxvd 
CREATE INDEX idx_tab2_1 ON tab2 (col4,col3 DESC);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (62 < 50 AND 97 > 0 ? 62 : 0)), throwIf(last != (62 < 50 AND 97 > 0 ? least(50 - 1, 62 + 97 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(50) LIMIT 62, 97);
CREATE TABLE test_31626D7C417128245C223B76293E687E74222D2852384477256C625C3A503C5F28564A615436214E(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_10_893 VALUES 
CREATE INDEX idx_tab4_2 ON tab4 (col0,col4 DESC);
SELECT 'Running test stateless/00719_parallel_ddl_table.sh from pid=1718' 
SELECT t1.key, t2.key, t1.s, length(t2.s) FROM tn1 AS t1 ALL LEFT JOIN tn2 AS t2 ON t1.key == t2.key ORDER BY t1.key, t2.key, t1.s;
CREATE TABLE test_table (`id` UInt64, `value` String, `value_array` Array(UInt64)) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 8150, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 85, merge_max_block_size = 19202, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 21025437, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 15224, primary_key_compress_block_size = 34020
CREATE TABLE test_506C7C2C4D59426A762842384E4D364D5B70284B492B7A52342555605E3B2D5A335652667E4D7945(x UInt8) Engine=Memory;
EXISTS db_01048.t_01048;
CREATE TABLE test_5D756F254957342B634B685679713A2A2C5A2C562C2329623D253D3269456A6C6653282823715225(x UInt8) Engine=Memory;
SELECT id as shift_right_bit,fixedStr as arg,bin(bitShiftRight(fixedStr, id)) as fixed_string_res FROM test_bit_shift_right_string_integer WHERE (str='Hello' AND (id=23 OR id=24 OR id=25)) OR (str='Hel' AND (id=7 OR id=8 OR id=9));
CREATE TABLE test_745E774F2B776D4B795874467C5F605C5F2548576F482B49485431363121764B24745D4B27555E55(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_6_974 VALUES 
explain indexes = 1 select * from test2 where a2 > 15 settings allow_experimental_analyzer = 0;
CREATE DATABASE IF NOT EXISTS test_8b2asvai 
select * from t_l5ydey order by c_qv5rv;
DROP TABLE simple_agf_summing_mt;
SELECT nothing();
DROP DATABASE IF EXISTS test_1q56hrpl 
CREATE TABLE test_5D662771656135786D793D73214B794B62517C69414125782F3D7A3859203C6A7043583248216766(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_7_199 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_02908_r1_32 SELECT rand64() FROM numbers(5);
set group_by_overflow_mode='any';
CREATE TABLE mutations_cleaner (`x` UInt32) ENGINE = MergeTree ORDER BY x SETTINGS finished_mutations_to_keep = 2, index_granularity = 28803, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 17138, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 3878333187, index_granularity_bytes = 21379683, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 74874, primary_key_compress_block_size = 79005
SELECT materialize(1) AS k WHERE NULL OR (0 OR (k = 2) OR (k = CAST(1, 'Nullable(UInt8)') OR k = 3));
SELECT pointInPolygon((39.840202, 21.451471), [(39.88646, 21.39869),(39.89349, 21.39545),(39.8941, 21.39505),(39.89698, 21.39264),(39.89974, 21.3939),(39.89882, 21.39616),(39.89759, 21.39804),(39.8959, 21.40038),(39.89488, 21.40142),(39.89409, 21.40204),(39.89129, 21.40342),(39.88971, 21.40437),(39.88646, 21.39869)]);
CREATE TABLE test_472652492C312F32205C7534277275634735635021305078776C6D61467B585B63416520792A565D(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_2q55tjbw 
CREATE TABLE collapsing_merge_tree (`Key` UInt32, `Count` UInt16, `Sign` Int8) ENGINE = CollapsingMergeTree(Sign) ORDER BY Key SETTINGS add_implicit_sign_column_constraint_for_collapsing_engine = 1, index_granularity = 5058, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 13609, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 923398430, index_granularity_bytes = 13186832, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 44622, primary_key_compress_block_size = 42789
INSERT INTO test_01193_18429.table_3_333 VALUES 
SELECT CASE WHEN 1 THEN toFixedString('foo', 16) WHEN (col1 % 3) = 0 THEN toFixedString(col3, 16) ELSE toFixedString('baz', 16) END FROM multi_if_check;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), toUInt8(1) > N as r FORMAT CSV;
SELECT murmurHash3_64('foo');
create table data (key String) Engine=Memory();
( select * from morton_numbers_mask_02457 union distinct select * from morton_numbers_mask_2_02457 ) except ( select * from morton_numbers_mask_02457 intersect select * from morton_numbers_mask_2_02457 );
CREATE TABLE test_01193_18429.table_6_550 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_1_530 VALUES 
SELECT arrayMap((x -> concat(concat(toString(x), '_'), toString(id))) as lambda, [1,2,3]) FROM test_table;
SELECT argMin((n, n), n) t, toTypeName(t) FROM (SELECT if(number >= 100, NULL, number) AS n from numbers(5, 10));
ALTER TABLE t_delay_mutations UPDATE v = 6 WHERE 1;
SELECT normalizeQuery('[1, 2, 3, x]');
CREATE DATABASE IF NOT EXISTS test_jsci07oi 
SELECT any(number) RESPECT NULLS from (Select if(number > 8, NULL, number) as number FROM numbers(10));
SELECT CASE WHEN (number % 2) = 0 THEN toInt32(1) WHEN (number % 3) = 0 THEN toInt32(2) ELSE toInt32(3) END FROM system.numbers LIMIT 10;
CREATE MATERIALIZED VIEW without_deduplication_mv UUID '00000510-1000-4000-8000-000000000002' ENGINE = ReplicatedAggregatingMergeTree('/clickhouse/tables/{database}/test_00510/without_deduplication_mv', 'r1') ORDER BY dummy SETTINGS index_granularity = 21782, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 84, merge_max_block_size = 10797, prefer_fetch_merged_part_size_threshold = 2889815521, vertical_merge_algorithm_min_rows_to_activate = 294603, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 7707334, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 25255, primary_key_compress_block_size = 64689 AS SELECT 0 AS dummy, countState(x) AS cnt FROM without_deduplication
insert into t2 select number, number from numbers(3000, 1000);
select format('{}{}{}', materialize(toFixedString('a', 1)), toFixedString('b', 1), materialize('c')) == 'abc' from system.numbers limit 5;
INSERT INTO test_01193_18429.table_7_467 VALUES 
CREATE TABLE test_01193_18429.table_7_847 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT value.value_0_level_0 AS alias_value, alias_value.* APPLY toString FROM test_table;
/* ddl_entry=query-0000000053 */ ALTER TABLE test_990cm9di.t1 ADD COLUMN `newcol` UInt32
SELECT s, replaceOne(s, '_', 'oo') AS a, replaceRegexpOne(s, '_', 'oo') AS b, a = b FROM (SELECT arrayJoin(['_._', '._']) AS s);
INSERT INTO test_01193_18429.table_10_872 VALUES 
CREATE TABLE test_23745E572F4C2166292929362A42657546364E315C377E3B37496B44515A68216B7A6E5B46322D67(x UInt8) Engine=Memory;
RENAME TABLE table_for_renames37 TO table_for_renames38
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toUInt64(2), toUInt64(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
SELECT arrayFill(NULL, NULL, NULL);
INSERT INTO test_01193_18429.table_2_893 VALUES 
ALTER TABLE dst_10 DROP PART '7_157_157_0'
SELECT 4294967296, -9223372036854775807, 4294967296 = -9223372036854775807, 4294967296 != -9223372036854775807, 4294967296 < -9223372036854775807, 4294967296 <= -9223372036854775807, 4294967296 > -9223372036854775807, 4294967296 >= -9223372036854775807, -9223372036854775807 = 4294967296, -9223372036854775807 != 4294967296, -9223372036854775807 < 4294967296, -9223372036854775807 <= 4294967296, -9223372036854775807 > 4294967296, -9223372036854775807 >= 4294967296 , toUInt64(4294967296) = toInt64(-9223372036854775807), toUInt64(4294967296) != toInt64(-9223372036854775807), toUInt64(4294967296) < toInt64(-9223372036854775807), toUInt64(4294967296) <= toInt64(-9223372036854775807), toUInt64(4294967296) > toInt64(-9223372036854775807), toUInt64(4294967296) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toUInt64(4294967296), toInt64(-9223372036854775807) != toUInt64(4294967296), toInt64(-9223372036854775807) < toUInt64(4294967296), toInt64(-9223372036854775807) <= toUInt64(4294967296), toInt64(-9223372036854775807) > toUInt64(4294967296), toInt64(-9223372036854775807) >= toUInt64(4294967296) , toInt64(4294967296) = toInt64(-9223372036854775807), toInt64(4294967296) != toInt64(-9223372036854775807), toInt64(4294967296) < toInt64(-9223372036854775807), toInt64(4294967296) <= toInt64(-9223372036854775807), toInt64(4294967296) > toInt64(-9223372036854775807), toInt64(4294967296) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toInt64(4294967296), toInt64(-9223372036854775807) != toInt64(4294967296), toInt64(-9223372036854775807) < toInt64(4294967296), toInt64(-9223372036854775807) <= toInt64(4294967296), toInt64(-9223372036854775807) > toInt64(4294967296), toInt64(-9223372036854775807) >= toInt64(4294967296) 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (30 < 37 AND 25 > 0 ? 30 : 0)), throwIf(last != (30 < 37 AND 25 > 0 ? least(37 - 1, 30 + 25 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(37) LIMIT 30, 25);
CREATE TABLE test_01193_18429.table_3_584 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP TABLE test_01778;
SELECT accurateCastOrNull(-1, 'UInt64');
select * from file('test_02167.ndjson')
SELECT t.t.t.t.t as e, toTypeName(e) FROM ttta FULL JOIN tttb USING (t.t.t.t.t);
SELECT x FROM ttl_repl2 ORDER BY x
CREATE TABLE test_5E39373F3F263E5B5A54783B2F31784D676F4F6C4A405C6E252A574748615C717E2A68726667502D(x UInt8) Engine=Memory;
SELECT (number = 1) AND (number = 2) AS value, sum(value) OVER () FROM numbers(1) WHERE 1 SETTINGS allow_experimental_analyzer=1;
INSERT INTO concurrent_alter_add_drop_1 VALUES
DROP DATABASE IF EXISTS test_wbebge0s 
SELECT 'K=16';
select concat('a', 'b', materialize('c')) == 'abc' from system.numbers limit 5;
INSERT INTO test_01193_18429.table_2_495 VALUES 
SELECT range(10, 2, null);
select ltrim('') || rtrim('') || trim('');
SELECT d, sumMerge(Sum), avgMerge(Avg), uniqMerge(Uniq), anyMerge(Any), anyIfMerge(AnyIf), arrayMap(x -> round(x, 6), quantilesMerge(0.5, 0.9)(Quantiles)), groupArrayMerge(GroupArray) FROM stored_aggregates GROUP BY d ORDER BY d;
INSERT INTO test_table SELECT number + 1, number + 1 FROM numbers(15);
SELECT 'Running test stateless/02480_analyzer_alias_nullptr.sql from pid=1722' 
SELECT 'Running test stateless/02346_additional_filters.sql from pid=1726' 
SELECT tb.t FROM ta, tb;
SELECT '-- alias';
SELECT count() = 8192, sumMerge(s) = 16383 FROM aggregating_00155
DROP TABLE IF EXISTS tmp_mv;
CREATE TABLE test_01193_18429.table_8_499 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_6F78365E3B60395E4B3A424B426E4F2625446346536A4B3542617273256F396C582F4C612725366D(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_doigr1ix 
INSERT INTO fetches_r1 VALUES 
INSERT INTO test_01193_18429.table_3_256 VALUES 
SELECT decodeURLComponent(queryString('http://127.0.0.1/?query=hello%20world+foo%2Bbar'));
SELECT '~~~~source parts~~~~~';
SELECT toDecimal128(NULL, NULL);
SELECT 'Running test stateless/02973_backup_of_in_memory_compressed.sh from pid=1705' 
alter table many_mutations delete where y = 630 * 2 settings mutations_sync = 0;
SELECT 'Running test stateless/02233_set_enable_with_statement_cte_perf.sql from pid=1726' 
select 3 = position('abcd', materialize('cd'));
SELECT 'Running test stateless/02447_drop_database_replica.sh from pid=1718' 
CREATE TABLE test_01193_18429.table_6_639 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_h24pqi3d 
CREATE TABLE test_02908_r1_119 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_119', 'r1') ORDER BY tuple()
SELECT multiIf((number % 2) = 0, [toInt8(1), toInt8(2)], (number % 3) = 0, [toInt64(2), toInt64(3)], [toInt32(3), toInt32(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_9_347 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP DATABASE IF EXISTS test_ey3nlqup 
CREATE TABLE test_415B6F43402C5B655C5F2E244F7C645221606C5C416F6D39612431723224305D79752E6369714652(x UInt8) Engine=Memory;
SELECT arrayFilter(x -> 0, range(number)) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_4_159 VALUES 
select toBool(CAST(NULL, 'Nullable(String)'));
select parseDateTime('456789', '%f', 'UTC') = toDateTime('1970-01-01 00:00:00', 'UTC');
CREATE TABLE test_01193_18429.table_9_578 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT count() == (SELECT count() from left) AND min(key == promo.key) == 1 FROM ( SELECT key FROM left AS s ) AS data ALL LEFT JOIN ( SELECT key FROM right GROUP BY key ) AS promo ON promo.key = data.key ;
SELECT 'Running test stateless/02685_decimal256_various.sql from pid=1726' 
CREATE DATABASE IF NOT EXISTS test_62xqvppy 
SELECT 'SELECT toStartOfMinute(N, \'Asia/Istanbul\')';
drop table if exists test_01655_plan_optimizations_optimize_read_in_window_order_n
SELECT multiIf((number % 2) = 0, toInt8(1), (number % 3) = 0, toInt8(2), toFloat32(3)) FROM system.numbers LIMIT 10;
system test view a set fake time '2060-02-02 02:02:02'
DROP TABLE IF EXISTS crash_02919;
INSERT INTO where_qualified VALUES
CREATE TABLE test_2B2F644925603D267855636F374738764B7B5043287678324450535A3F7D346B255F217B75705251(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_5fg04q5f 
CREATE TABLE test_443F6C2B35635D3E7D203D357049637B3D286E2A263876243E2B7E60452F65334D605E7641214527(x UInt8) Engine=Memory;
CREATE TABLE test_6D5D5A2E564D5237274575245B33545D322F7E2E4B2B2A63222C7724685B49215F6B6A3D6F6A2941(x UInt8) Engine=Memory;
INSERT INTO src VALUES /* (-53, 1) */ 
select parseDateTimeBestEffortUS('18:31:44, 31/12/2015');
SELECT multiIf((number % 2) = 0, toInt64(1), (number % 3) = 0, toUInt8(2), toInt8(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_2_497 VALUES 
SELECT table, name, type, compression_codec, data_uncompressed_bytes u, data_compressed_bytes c, round(u/c,3) ratio FROM system.columns WHERE table = 'codecTest' AND database = currentDatabase() AND compression_codec != '' AND ratio <= 1 ORDER BY table, name, type;
CREATE TABLE test_747E6B56506E2666744A267442365C5C6A652530612049787874346A6358546D7D602A2561726432(x UInt8) Engine=Memory;
DESC TABLE test_q7uhzfh8.numbers_100k
SELECT (nullIf(number, 2), -nullIf(number, 2)) IN ((1, -1), (NULL, NULL), (3, -3)) FROM system.numbers LIMIT 5;
SET optimize_monotonous_functions_in_order_by = 0;
ALTER TABLE src_10 MOVE PARTITION 6 TO TABLE dst_6
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c0)) SETTINGS convert_query_to_cnf = 0
CREATE DATABASE IF NOT EXISTS test_ti34rl1n 
DROP DATABASE IF EXISTS test_zruwam0n 
CREATE TABLE test_436140426B395430773F503F2677245E6659372277333D47785C467E243A2A415D7E526656553542(x UInt8) Engine=Memory;
CREATE TEMPORARY TABLE table_merge_tree_02525 (`id` UInt64, `info` String) ENGINE = MergeTree PRIMARY KEY id ORDER BY id SETTINGS index_granularity = 49517, min_bytes_for_wide_part = 186858069, ratio_of_defaults_for_sparse_serialization = 0.09987490624189377, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 22593, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 5293895, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 44065, primary_key_compress_block_size = 58421
select parseDateTime('02 31 20 04', '%m %d %d %m', 'UTC') = toDateTime('2000-04-20', 'UTC');
SELECT last_value_respect_nulls([NULL]);
CREATE TABLE test_6C5C603D58753726494B71342D713158742D6F7474585C4F7B6A76262554557562326E6E243E3F3B(x UInt8) Engine=Memory;
SELECT * FROM test_collate_null ORDER BY x, s COLLATE 'ru';
SELECT 'Running test stateless/01532_having_with_totals.sql from pid=1722' 
DROP DATABASE IF EXISTS test_8su3eau4 
SELECT * FROM 01684_database_for_cache_dictionary.cache_dictionary_simple_key_complex_attributes ORDER BY id;
CREATE TABLE file (x UInt64) ENGINE = File(Native, 'test_xkfi2hhi/gz.data.gz')
insert into t2 select number, toString(number) from numbers(2000, 1000);
SELECT 'The argument is before the reference time point';
SELECT 1 + x FROM tab where plus(1::LowCardinality(UInt8), x) <= toDateTime('2022-02-02') + 2 order by x;
CREATE TABLE test_52782A68635F32273B35314F22215F3E37473D7579224057222A5E6125563B5D4F496624555B4E67(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS rdb_65555;
CREATE TABLE test_01193_18429.table_1_928 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'Running test stateless/02864_profile_event_part_lock.sql from pid=1718' 
CREATE TABLE test_784D3C246E5F624B4456607B664A457C4F675820723B217E36636C633E524D417A7A6D2826732D59(x UInt8) Engine=Memory;
select c in tuple(1) from tab_00386
SELECT '113' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ffff:ffff:ffff:8000')))
INSERT INTO test_01193_18429.table_10_709 VALUES 
SELECT * FROM unsorted_replacing;
SHOW CREATE PROFILE s10_01294;
CREATE TABLE test_01193_18429.table_3_557 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT * FROM table_merge_tree_02561
INSERT INTO test_xkt40k1i.t_async_insert_native_4 FORMAT Native
SET max_threads = 5;
SELECT k, d, i FROM (SELECT t.1 AS k, t.2 AS v, runningDifference(v) AS d, runningDifference(cityHash64(t.1)) AS i FROM (SELECT arrayJoin([(NULL, 65535), ('a', 7), ('a', 3), ('b', 11), ('b', 2), ('', -9223372036854775808)]) AS t)) WHERE i = 9223372036854775807;
select x3, x2, x1 from test order by x3;
INSERT INTO x VALUES 
SELECT count(), min(x), max(x), sum(x), uniqExact(x) FROM sample_00276 SAMPLE 1e1/1e2;
CREATE INDEX idx_tab3_5 ON tab3 (col4 DESC);
INSERT INTO test_01193_18429.table_2_323 VALUES 
desc format(CSV, '122\n1e2');
select count(), sum(number) from file('02841.parquet') where indexHint(s like 'z%');
DROP DATABASE IF EXISTS test_ofbyr80a 
SELECT toString(toUUID('3f1ed72e-f7fe-4459-9cbe-95fe9298f845'));
SELECT 'Running test stateless/01511_prewhere_with_virtuals.sql from pid=1718' 
CREATE TABLE src (`A` String, `B` String, `C` String) ENGINE = ReplicatedMergeTree('/clickhouse/{database}/test/src4', '1') ORDER BY A SETTINGS min_bytes_for_wide_part = 0, index_granularity = 58834, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 17462, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 215040, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 4784844898, index_granularity_bytes = 21241274, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 18062, primary_key_compress_block_size = 35281
CREATE DATABASE IF NOT EXISTS test_w5ewbzm2 
select tuple(toNullable(number), number, number) < tuple(number, number, number) from numbers(1);
INSERT INTO test_01193_18429.table_1_414 VALUES 
SELECT 9, 9, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (9 < 13 AND 9 > 0 ? 9 : 0)), throwIf(last != (9 < 13 AND 9 > 0 ? least(13 - 1, 9 + 9 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 9, 9);
select 1 >= any (select number from numbers(10));
DROP TABLE IF EXISTS test_datetime;
SELECT 1.34e+2_1;
SHOW CREATE ROLE r2_01293_renamed;
SELECT toDecimal128OrDefault ('54.1234567', 4);
alter table many_mutations delete where y = 9 * 2 settings mutations_sync = 0;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toUInt32(1) != N as r FORMAT CSV;
CREATE TABLE test_5C49437658352A4E505D3521764A625B762E503C67326458657A2B3341274F343A40687150783741(x UInt8) Engine=Memory;
system start pulling replication log rmt2;
SELECT 'Running test stateless/02703_row_policy_for_database.sql from pid=1705' 
system reload dictionary regexp_dict1;
CREATE TABLE tmp (`n` int) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 1, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 72, merge_max_block_size = 10436, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 11218188, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 14850, primary_key_compress_block_size = 32091
DROP TABLE IF EXISTS test_00808_push_down_with_finalizeAggregation;
DROP TABLE view_without_sample;
INSERT INTO test_01193_18429.table_4_564 VALUES 
alter table tt delete where n%2=1
INSERT INTO test_01193_18429.table_9_809 VALUES 
CREATE TABLE test_01193_18429.table_2_838 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_uhbh5m6u 
DROP FUNCTION 01856_test_function_0;
drop table if exists product_groups;
SELECT 'Running test stateless/02526_kv_engine_different_filter_type.sql from pid=1724' 
SELECT ngramDistanceUTF8(NULL, NULL);
INSERT INTO 02428_otel_traces(TraceId) VALUES 
RESTORE TABLE test_yk9180p3_02911_keeper_map.02911_backup_restore_keeper_map3 FROM Disk('backups', 'test_yk9180p3_02911_keeper_map');
SELECT 'Running test stateless/00834_hints_for_type_function_typos.sh from pid=1724' 
INSERT INTO test_01193_18429.table_8_966 VALUES 
select Y.*, s.* from Y inner join (select * from Y) as s on concat('n', Y.y_a) = s.y_b order by Y.id, Y.y_a, Y.y_b, s.id, s.y_a, s.y_b;
SELECT cityHash64(groupArray(x)) FROM enum_pk WHERE 1 = 1;
DROP DATABASE IF EXISTS test_plzlkugw 
insert into 02681_undrop_multiple values 
CREATE DATABASE IF NOT EXISTS test_bad8zz7o 
SELECT 'Running test stateless/02241_array_first_last_or_null.sql from pid=1724' 
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 20194, 500 settings ignore_materialized_views_with_dropped_target_table=1
alter table many_mutations delete where y = 224 * 2 settings mutations_sync = 0;
INSERT INTO test_01193_18429.table_5_16 VALUES 
SELECT toInt16OrDefault('');
SELECT * FROM persons_02240 ORDER BY name FORMAT ProtobufList SETTINGS format_schema = '/usr/share/clickhouse-test/queries/0_stateless/format_schemas/02240_protobuflist1_format_persons:Person'
SELECT item_id FROM (SELECT item_id FROM t GROUP BY item_id WITH TOTALS) AS l FULL OUTER JOIN (SELECT item_id FROM t GROUP BY item_id WITH TOTALS) AS r USING (item_id) SETTINGS join_use_nulls = '1';
SELECT name,value,changed FROM system.settings WHERE name IN ('readonly','max_rows_to_read') 
CREATE TABLE range_dictionary_nullable_default_source_table ( key UInt64, value Nullable(UInt64) ) ENGINE=TinyLog;
SELECT `xp`.`i`, `xp`.`j` FROM `test_6vxf60ds`.`xp` WHERE nullIn(`i`, NULL)
RENAME TABLE test_01155_ordinary.mv1 TO test_01155_atomic.mv1;
CREATE TABLE bitmap_test(pickup_date Date, city_id UInt32, uid UInt32)ENGINE = Memory;
SELECT CAST('0.123456789', 'Decimal(9,9)'), CAST('0.123456789123456789', 'Decimal(18,18)');
SELECT multiIf((number % 2) = 0, [toFloat64(1), toFloat64(2)], (number % 3) = 0, [toInt16(2), toInt16(3)], [toFloat32(3), toFloat32(3)]) FROM system.numbers LIMIT 10;
DROP TABLE IF EXISTS test_lot_of_parts;
SELECT 'Running test stateless/00907_set_index_max_rows.sh from pid=1714' 
CREATE TABLE test_01193_18429.table_6_365 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT t1.id, t1.value, t2.id, t2.value, t3.id, t3.value FROM test_table_join_1 AS t1 INNER JOIN test_table_join_2 AS t2 ON t1.id = t2.id AND t1.value == 'Join_1_Value_0' FULL JOIN test_table_join_3 AS t3 ON t2.id = t3.id AND t2.value == 'Join_2_Value_0';
INSERT INTO test_01193_18429.table_6_92 VALUES 
INSERT INTO ev SELECT number, number FROM numbers(10000000);
INSERT INTO test_01193_18429.table_9_787 VALUES 
SELECT joinGet('join_tbl', 'lcname', toLowCardinality('xxx')) == 'yyy';
CREATE TABLE test_706F2C54693B3B632A63664D4C5A75446D2965404A7C567061392E3F5F3D2B5C587761525F79605A(x UInt8) Engine=Memory;
CREATE TABLE test_2547705F6C227B527D5D64435A2E7C26373F4E417925714D5C6F486968765E792A695E275961384E(x UInt8) Engine=Memory;
SELECT f1, f3['2'], count() FROM t1 GROUP BY 1,2 order by 1,2;
SELECT number, grouping(number), GROUPING(number % 2) FROM remote('127.0.0.{2,3}', numbers(10)) GROUP BY number, number % 2 ORDER BY number SETTINGS force_grouping_standard_compatibility=0;
/* ddl_entry=query-0000000021 */ UNDROP TABLE test_0r4swpnk.`02681_undrop_no_uuid_on_cluster`
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(0)) AS id, 1 AS value) AS a SEMI LEFT JOIN (SELECT materialize(toLowCardinality(0)) AS id) AS d ON a.id = d.id ;
INSERT INTO test_01193_18429.table_8_58 VALUES 
SELECT COUNT() from default_table;
INSERT INTO test_01193_18429.table_1_861 VALUES 
CREATE TABLE test_5468626370596E2A5A2C4D2E4F5E6F3941277C2C4A7B7A317D645544726F782421417E314A666536(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_5_81 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT arrayCount(x -> materialize(1), range(number)) FROM system.numbers LIMIT 10;
SELECT Y, uniqHLL12(X) FROM (SELECT number AS X, (3*X*X - 7*X + 11) % 37 AS Y FROM system.numbers LIMIT 1000000) GROUP BY Y ORDER BY Y;
ALTER TABLE t2 ADD PROJECTION proj (SELECT id2 ORDER BY id2);
DROP DATABASE IF EXISTS test_ijsxg0kn 
CREATE DATABASE IF NOT EXISTS test_4huc27y7 
INSERT INTO test_01193_18429.table_8_692 VALUES 
CREATE TABLE m (a UInt32, s String) engine = Merge('test_p7uyv1px', 's[1,2]')
SELECT 'Running test stateless/02876_yyyymmddhhmmsstodatetime.sql from pid=1718' 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (97 < 93 AND 90 > 0 ? 97 : 0)), throwIf(last != (97 < 93 AND 90 > 0 ? least(93 - 1, 97 + 90 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(93) LIMIT 97, 90);
CREATE TABLE test_01193_18429.table_1_678 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT splitByWhitespace('Nein, nein, nein! Doch!', -1);
CREATE TABLE test_01193_18429.table_10_850 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT '----- Insert. Source and target columns have same types up to nullability. -----';
SELECT uniqUpTo(10)(a), uniqUpTo(10)(b), uniqUpTo(10)(c) FROM decimal WHERE a >= 0 AND a < 5;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt32(1), toInt32(2)] WHEN (number % 3) = 0 THEN [toInt8(2), toInt8(3)] ELSE [toFloat32(3), toFloat32(3)] END FROM system.numbers LIMIT 10;
SELECT reinterpretAsUInt16('');
select gcd(255, 515);
SELECT 0 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'asn', tuple(IPv4StringToNum('0.0.0.0')))
CREATE TABLE test_01193_18429.table_7_266 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_7662295A4A3271255347233747584D53224941267C3A653A4C32414A5934695C317B40562C27426A(x UInt8) Engine=Memory;
SELECT 'uniqCombined(12)';
CREATE DATABASE IF NOT EXISTS test_0a7pnlnu 
CREATE TABLE test_table ( id UInt64, alias_value_1 ALIAS id + alias_value_2 + 1, alias_value_2 ALIAS id + 5 ) ENGINE=TinyLog;
SELECT addDate('2022-05-07', INTERVAL 5 MINUTE);
DROP DATABASE IF EXISTS test_qv3ki5bq 
SELECT materialize(toDateTime('2000-01-01 00:00:00', 'Asia/Istanbul')) AS x, toDate('2000-01-02') AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
CREATE DATABASE IF NOT EXISTS test_bgj7k8zf 
CREATE TABLE test_01193_18429.table_7_726 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DATABASE IF NOT EXISTS test_v5v4cvvd 
CREATE DATABASE IF NOT EXISTS test_jqukhhdl 
SELECT 'Running test stateless/02242_negative_datetime64.sql from pid=1718' 
SELECT 'Running test stateless/00977_join_use_nulls_denny_crane.sql from pid=1724' 
CREATE TABLE test_6D7A427C4E5443522E304E4D347C4B7140386D5D70214F47387E23573D7E347840274B6B7A467738(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_xdgolzlx 
SELECT multiIf((number % 2) = 0, [toUInt8(1), toUInt8(2)], (number % 3) = 0, [toUInt8(2), toUInt8(3)], [toInt64(3), toInt64(3)]) FROM system.numbers LIMIT 10;
SELECT 'insert happened';
SELECT name FROM system.zookeeper WHERE path = '/clickhouse/tables/00814_replicated_minimalistic_part_header_zookeeper_test_wcue72qz/test_00814/part_header/s1/replicas/1r1/parts';
SELECT quantileGK(NULL, NULL);
SELECT multiIf((number % 2) = 0, [toInt32(1), toInt32(2)], (number % 3) = 0, [toInt16(2), toInt16(3)], [toUInt32(3), toUInt32(3)]) FROM system.numbers LIMIT 10;
INSERT INTO src VALUES /* (26, 1) */ 
SELECT s FROM (SELECT toFixedString(materialize('abc'), 3) AS s FROM system.numbers LIMIT 100) ORDER BY s DESC 
SELECT 'Running test stateless/01656_test_query_log_factories_info.sql from pid=1705' 
INSERT INTO 02416_test SELECT number % 77 AS k, SUM(number) AS value, (1, 1.2), bitmapBuild(groupArray(number)) FROM numbers(10000) group by k;
drop table enum_buf;
CREATE TABLE test_59227D4D506B7E393237365C6925513C3D412C374E6D6273692255533E3B3D78307D446175503749(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_4_786 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_713B5332595F3C636B784E233A40385C312F382A2262573C7A697C26485467317444402E21754878(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01123_parse_date_time_best_effort_even_more.sql from pid=1718' 
SELECT dumpColumnStructure(NULL);
CREATE TABLE test_01193_18429.table_2_378 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'Running test stateless/01070_modify_ttl_recalc_only.sql from pid=1705' 
INSERT INTO test_01193_18429.table_2_434 VALUES 
CREATE TABLE test_6B21276839655E227A4A5D526A557064337551294C297A2F2E5022685531465236776F387429386F(x UInt8) Engine=Memory;
DROP TABLE msgpack_lc_nullable
SELECT CASE WHEN (col1 % 2) = 0 THEN col2 WHEN 1 THEN 'bar' ELSE col4 END FROM multi_if_check;
INSERT INTO test_01193_18429.table_2_944 VALUES 
DESCRIBE (SELECT (SELECT 1 UNION DISTINCT SELECT 1), (SELECT 2 UNION DISTINCT SELECT 2), (SELECT 3 UNION DISTINCT SELECT 3) AS a, (SELECT 4 UNION DISTINCT SELECT 4));
SELECT countMerge(x) AS y FROM ( SELECT countState() * 2 AS x FROM ( SELECT 1 ));
SELECT '----- 65536, 4 -----';
DROP ROLE IF EXISTS test_role_02242;
SELECT COUNT() FROM bloom_filter_array_lc_null_types_test WHERE has(f32, 1);
insert into ttl_test_02129 select number, '', '2021-01-01' from numbers(10);
INSERT INTO test_01193_18429.table_7_6 VALUES 
select polygonsWithinCartesian([[[(0, 0),(0, 3),(1, 2.9),(2, 2.6),(2.6, 2),(2.9, 1),(3, 0),(0, 0)]]], [[[(1., 1.),(1., 4.),(4., 4.),(4., 1.),(1., 1.)]]]);
CREATE TABLE test_36202A665D6564744A5974702D3A52452A25425D207D3224444A6A50293E286145796C284B215B2A(x UInt8) Engine=Memory;
SELECT a, c FROM test_rlp PREWHERE b < 5;
SELECT k FROM (SELECT toUInt256(123) AS k FROM system.one) INNER JOIN (SELECT toUInt256(123) AS k) t USING k;
SELECT arrayJoin(CAST(['hello', 'world'] AS Array(FixedString(5)))) LIKE 'xyz';
select [0, 2, 4, 0, 6, 0, 0, 0, 0, 19, 7, 1, 0, 1, 0, 0, 2, 10, 0, 1] = multiSearchAllPositionsUTF8(materialize('ÃÂ¾ÃÂ¿ÃÂÃÂÃÂÃÂ¿ÃÂ³ÃÂ°ÃÂ±ÃÂµÃÂ°ÃÂÃÂÃÂÃÂ¸ÃÂ¾ÃÂ¹ÃÂÃÂÃÂ ÃÂ²ÃÂ±ÃÂ½ÃÂÃÂ'), ['ÃÂ¹ÃÂ¾ÃÂÃÂÃÂ¾ÃÂµÃÂÃÂ´ÃÂÃÂµÃÂ¶', 'ÃÂ¿ÃÂ', 'ÃÂÃÂÃÂ¿ÃÂ³ÃÂ°ÃÂ±ÃÂµÃÂ°ÃÂÃÂÃÂÃÂ¸ÃÂ¾ÃÂ¹', 'ÃÂ ÃÂÃÂ¸ÃÂ°ÃÂÃÂÃÂ±ÃÂ»ÃÂ°ÃÂÃÂÃÂ°ÃÂ¶ÃÂÃÂ¼ÃÂµÃÂÃÂÃÂ·ÃÂ¸', 'ÃÂ¿ÃÂ³ÃÂ°ÃÂ±ÃÂµÃÂ°ÃÂÃÂÃÂÃÂ¸ÃÂ¾ÃÂ¹ÃÂÃÂÃÂ ÃÂ²ÃÂ±', 'ÃÂÃÂÃÂ±ÃÂ´ÃÂ²ÃÂ', 'ÃÂµÃÂµÃÂÃÂÃÂ·ÃÂ·ÃÂ²ÃÂºÃÂ¾ÃÂ¶ÃÂ·ÃÂÃÂ´ÃÂÃÂÃÂ¹ÃÂÃÂÃÂ²ÃÂ¼ÃÂÃÂ¹ÃÂÃÂ¸ÃÂ ÃÂ´ÃÂ', 'ÃÂ¾ÃÂÃÂ ÃÂ°ÃÂÃÂ³ÃÂÃÂ·ÃÂ°ÃÂÃÂÃÂ·ÃÂ¾ÃÂ·ÃÂÃÂ»ÃÂ±ÃÂ°', 'ÃÂ°ÃÂ¹ÃÂ´ÃÂÃÂ¶ÃÂ´ÃÂ¶ÃÂÃÂ¶ÃÂ»ÃÂÃÂÃÂ³ÃÂ¼ÃÂ°ÃÂ±ÃÂ°ÃÂ¿ÃÂÃÂºÃÂ±ÃÂÃÂ¿ÃÂ¸ÃÂ¸ÃÂ·ÃÂ¸ÃÂ³ÃÂ´ÃÂÃÂ', 'ÃÂÃÂ ', 'ÃÂ³ÃÂ°ÃÂ±', '', 'ÃÂÃÂ½ÃÂºÃÂ´ÃÂ±ÃÂÃÂÃÂÃÂÃÂ¼ÃÂÃÂÃÂ»ÃÂ²ÃÂÃÂ±ÃÂÃÂÃÂ°ÃÂºÃÂÃÂ²ÃÂ·ÃÂ ÃÂ»ÃÂ°ÃÂ·ÃÂÃÂ°', '', 'ÃÂµÃÂºÃÂ±ÃÂÃÂÃÂ¿ÃÂÃÂ¸ÃÂ»ÃÂÃÂ°ÃÂ²ÃÂ°ÃÂ½ÃÂ ÃÂÃÂºÃÂ¼ÃÂÃÂ½ÃÂ¿ÃÂÃÂ¼ÃÂµÃÂ ÃÂ¸ÃÂ¸ÃÂÃÂ´ÃÂ¸', 'ÃÂµÃÂ¿ÃÂ²ÃÂÃÂ ÃÂ°ÃÂºÃÂ»ÃÂÃÂ¾ÃÂ¼ÃÂ²ÃÂÃÂ¶ÃÂ±ÃÂ', 'ÃÂ¿ÃÂÃÂÃÂÃÂ¿ÃÂ³ÃÂ°ÃÂ±ÃÂµ', 'ÃÂµÃÂ°ÃÂÃÂÃÂÃÂ¸ÃÂ¾ÃÂ¹ÃÂÃÂÃÂ ÃÂ²', 'ÃÂÃÂÃÂ²ÃÂÃÂ³ÃÂÃÂ·ÃÂÃÂ¸ÃÂÃÂ', 'ÃÂ¾ÃÂ¿ÃÂÃÂÃÂÃÂ¿ÃÂ³']) from system.numbers limit 10;
DROP DATABASE IF EXISTS test_721a0ev8 
SELECT accurateCastOrNull(-1, 'UInt32');
INSERT INTO test_01193_18429.table_10_144 VALUES 
select 1 from (select 1) having count() > 0 as x;
CREATE TABLE test_5F3D5C252B25505926425823664E3353245C312F487E617D2C70584455766155212A70235F2D5B61(x UInt8) Engine=Memory;
SELECT mapSort(NULL, NULL, NULL);
INSERT INTO 01053_db.table_for_dict SELECT number, 0, -1, 'a' FROM system.numbers WHERE number NOT IN (1, 2, 5, 10) LIMIT 370;
DROP TABLE tvs;
CREATE TABLE test_717D77476D346F48612B4D5F25363D376964667645325B295B2B3F7D3D27316130583948373E5B70(x UInt8) Engine=Memory;
select addMicroseconds(toDateTime64('1930-12-12 12:12:12.12345678', 8), 1);
SELECT 'Running test stateless/02884_interval_operator_support_plural_literal.sql from pid=1714' 
ALTER TABLE concurrent_alter_add_drop_2 ADD COLUMN value5 UInt32 DEFAULT 42 SETTINGS replication_alter_partitions_sync=0
INSERT INTO test_01193_18429.table_7_539 VALUES 
CREATE TABLE test_01193_18429.table_4_377 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'SELECT * FROM 02763_merge_merge_1';
DETACH TABLE concurrent_mutate_mt_2
SELECT hasToken('hay,hay,hay,hay,hay,hay,hay,hay,hay,needle,hay,hay,hay,hay,hay,hay,hay,hay,hay', 'needle'), ' expecting ', 1;
INSERT INTO test_01193_18429.table_1_815 VALUES 
CREATE TABLE test_78457C7C2836263C6D7C313F264C4278624627382F3B3A773F74486D6157513066512E5629704D69(x UInt8) Engine=Memory;
CREATE TABLE test_707468775D225966705F6C2C7C64202A4D7A707A5E63503A70497A293420282F313A32605E51383B(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_iqgnmvz6 
INSERT INTO test_01193_18429.table_6_952 VALUES 
SELECT count() FROM t_cnf_fuzz WHERE (c0 AND c1) SETTINGS convert_query_to_cnf = 1
CREATE TABLE test_3228742121652A4A302560326C5B2E5827445D3E39795F454B2D77783F34444D5C463F757E2C3649(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_zknrgonp 
select 'dictGetOrDefault', 'complex_hashed_strings' as dict_name, toUInt64(1) as k, dictGetOrDefault(dict_name, 'str', tuple(k), '*'), dictGetOrDefault(dict_name, ('str'), tuple(k), ('*'));
INSERT INTO bf_ngrambf_map_keys_test VALUES 
ALTER TABLE add_materialized_column_after ADD COLUMN y String MATERIALIZED toString(x) AFTER x;
select if(1, toLowCardinality('a'), 'b');
CREATE TABLE test (`id` UInt64, `v` Variant(UInt64, Array(Variant(String, UInt64)))) ENGINE = MergeTree ORDER BY id SETTINGS min_rows_for_wide_part = 1, min_bytes_for_wide_part = 1, index_granularity = 30609, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 2800, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 7937109, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 81448, primary_key_compress_block_size = 88740
SELECT 'Running test stateless/02661_read_from_archive_zip.sh from pid=1726' 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (82 < 65 AND 51 > 0 ? 82 : 0)), throwIf(last != (82 < 65 AND 51 > 0 ? least(65 - 1, 82 + 51 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(65) LIMIT 82, 51);
SELECT multiIf((number % 2) = 0, [toFloat32(1), toFloat32(2)], (number % 3) = 0, [toUInt32(2), toUInt32(3)], [toInt8(3), toInt8(3)]) FROM system.numbers LIMIT 10;
DROP TABLE IF EXISTS mutations_and_escaping_1648;
CREATE TABLE test_2D676E64574C523A6D74386E37627228462C7B632A703B4F7659282A322761242041233C5C30435D(x UInt8) Engine=Memory;
SELECT 'dt = dt64' FROM dt64test WHERE dt_column = materialize(toDateTime64('2020-01-13 13:37:00', 3));
SELECT multiIf((number % 2) = 0, [toInt16(1), toInt16(2)], (number % 3) = 0, [toUInt32(2), toUInt32(3)], [toInt8(3), toInt8(3)]) FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/01766_todatetime64_no_timezone_arg.sql from pid=1713' 
DROP DATABASE IF EXISTS test_4xgejhl6 
INSERT INTO test_ixtnzg7k_ordinary.data_02352 SELECT sleepEachRow(1) FROM numbers(20) GROUP BY number
DROP DATABASE IF EXISTS test_truncate;
CREATE TABLE test_01193_18429.table_9_689 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT endsWith(s, 'ow') FROM (SELECT arrayJoin(['', 'o', 'ow', 'Hellow', '3434', 'owfffffffdHe']) AS s);
select '30000000';
select v, variantElement(v, 'UInt128') from format(TSV, 'v Variant(String, UInt128, Int256)', '\\N\nstring\n-1\n0\n42d42') format TSV;
CREATE TABLE test_6434272B42502A2E774D2E4D3C636D474732557A485851264139327B373B6137685F755D78712B5F(x UInt8) Engine=Memory;
CREATE TABLE test_5E7E3D5160205A2B476046307A3D55312B4F652C4A6936694A64335A6C6660506B3D35592A794A6F(x UInt8) Engine=Memory;
INSERT INTO r10 SELECT 80 % 10 = 10 ? 80 - 1 : 80
SELECT toStartOfHour(NULL, NULL, NULL);
EXPLAIN SYNTAX (SELECT sum(float64) + 2 * count(float64) From test_table);
INSERT INTO 01053_db.table_for_dict SELECT number, 0, -1, 'c' FROM system.numbers WHERE number NOT IN (1, 2, 5, 10) LIMIT 700, 370;
INSERT INTO test_01193_18429.table_8_309 VALUES 
CREATE TABLE test_01193_18429.table_6_945 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT DATE_FORMAT(toDateTime('2018-01-02 22:33:44'), '%n'), DATE_FORMAT(toDate32('2018-01-02'), '%n');
CREATE TABLE test_216C5D27426930272D203F79614F2723204E3F7E2570214B573B672B356149495F574C5A6C3E7C3D(x UInt8) Engine=Memory;
SET keeper_map_strict_mode = false;
ALTER TABLE test_table ADD INDEX value_index value TYPE minmax GRANULARITY 1;
INSERT INTO test_01193_18429.table_6_461 VALUES 
DROP DATABASE IF EXISTS test_zr61nli2 
select toTypeName(res), if(NULL, materialize([1,2,3]), 'str_1') as res;
SELECT 1, sleep(0.018377)
SELECT medianExactLow(-1);
drop table if exists test sync;
CREATE TABLE test_31295331202A3379593B662558203C572B75434F7B7320623A425B5D533A6D2D703A4E302A2C5451(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_5_693 VALUES 
CREATE INDEX idx_tab4_1 ON tab4 (col1 DESC,col0 DESC);
CREATE TABLE test_02908_r3_295 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_295', 'r3') ORDER BY tuple()
DROP DATABASE IF EXISTS test_xwt4sy6x 
INSERT INTO test_01193_18429.table_2_693 VALUES 
CREATE TABLE test_3353227E567475523C3F4F574D6059683A3E424761424E7D68712C7C7275543F79606B257A4C5B46(x UInt8) Engine=Memory;
CREATE TABLE test_2B5362753E615C6571377A47705E36593B226177326F377660345B4C49744442333B40296C6A5260(x UInt8) Engine=Memory;
DROP TABLE agg_over_nullable;
SELECT multiplyDecimal(toDecimal32(-123.123, 3), toDecimal128(-11.4, 1), 2);
CREATE TABLE test_72516B6640574B584B685A74334F2D742E667B5B4E5B3053504F5A593F264B74265656572A473447(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_0xogsehx 
SELECT * FROM alter_test;
SELECT fromUnixTimestampInJodaSyntax(1669804872, 'w', 'UTC');
SELECT multiIf((number % 2) = 0, [toUInt8(1), toUInt8(2)], (number % 3) = 0, [toUInt32(2), toUInt32(3)], [toInt8(3), toInt8(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_10_445 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT * FROM (SELECT [[0]] AS id) AS subquery ARRAY JOIN id AS id_nested_array ARRAY JOIN id_nested_array AS id INNER JOIN test_table USING (id);
SELECT dictGet('test_dictionary_nullable', 'value', arrayJoin([toUInt64(0), NULL, 1, 2]));
INSERT INTO weird_partitions_02245(d, id) SELECT toDateTime('2022-01-01 00:30:00') AS d, number FROM numbers(1000);
SELECT val FROM tab WHERE fromUnixTimestamp64Micro(val, tz) != toDateTime64('2023-06-11 14:14:14', 6) ORDER BY val SETTINGS allow_nonconst_timezone_arguments = 1;
SELECT materialize(1) % CAST(1, 'Nullable(Float32)');
SELECT diff, traf FROM order_by_nulls_first ORDER BY diff ASC NULLS FIRST, traf DESC;
select '-------toDayOfWeek---------';
SELECT parseDateTimeBestEffortUSOrNull(NULL, NULL);
CREATE TABLE test_01193_18429.table_6_722 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DESCRIBE (SELECT [(1, 1)]);
select formatDateTime(toDateTime('2022-01-08 02:11:29', 'UTC'), '%k') settings formatdatetime_format_without_leading_zeros = 0;
DROP TABLE t_async_inserts_logs
CREATE TABLE test_6B4B5F2C745E4C4871624F7E387B546C23763A503130677E6A54305E492826564C25676131342E2E(x UInt8) Engine=Memory;
SELECT attribute['db.statement'] as query, attribute['clickhouse.read_rows'] as read_rows, attribute['clickhouse.written_rows'] as written_rows FROM system.opentelemetry_span_log WHERE finish_date >= yesterday() AND operation_name = 'query' AND attribute['clickhouse.query_id'] = 'e81fb64f-d63a-4161-be1c-0f1578c9c303' Format JSONEachRow ;
DROP DATABASE IF EXISTS test_ogeq97qj 
select 'src_to_dst', 18, 'src', type, n, _part from src order by type, n
SELECT 12, 10, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (12 < 13 AND 10 > 0 ? 12 : 0)), throwIf(last != (12 < 13 AND 10 > 0 ? least(13 - 1, 12 + 10 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 12, 10);
DROP DATABASE IF EXISTS test_z24w9muv 
ALTER TABLE src_10 MOVE PARTITION 5 TO TABLE dst_7
SELECT a FROM (SELECT * FROM columns UNION ALL SELECT * FROM columns);
CREATE TABLE IF NOT EXISTS test_01444.t25255 (`x` UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 49736, min_bytes_for_wide_part = 645103364, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 6, merge_max_block_size = 15200, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 21360504, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75390, primary_key_compress_block_size = 98921
select v.`LowCardinality(String)` from test order by id;
SHOW TABLES FROM sqllt FORMAT Null;
DROP DATABASE IF EXISTS test_u4qmmb5r 
DROP DATABASE IF EXISTS test_br4y60zm 
CREATE TABLE test_527E6D6E4F31644C583C355B2B4B6F3A77362B427A607C5059676726617E48614B34237376525C26(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_9_94 VALUES 
CREATE TABLE test_01193_18429.table_7_564 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select 1 = positionCaseInsensitiveUTF8('', '');
CREATE TABLE test_243A4E3A34283C5E472D457C525E5B4A712D5D7E384F5536683D7168776E2577445A7C6528282F6C(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_dop802wj 
CREATE TABLE 02337_db.test_table ( id UInt64, value String ) ENGINE=TinyLog;
CREATE DATABASE IF NOT EXISTS test_22s0bsq5 
ALTER TABLE wrong_metadata RENAME COLUMN a1 TO b, RENAME COLUMN b1 to a SETTINGS replication_alter_partitions_sync = 0
OPTIMIZE TABLE alter_table FINAL
SELECT * FROM (SELECT 1 AS a, 'x' AS b) right join (SELECT 1 as a, 'y' as b) using a;
SELECT * FROM (SELECT x, toTypeName(x) FROM (SELECT 1 AS x UNION ALL SELECT -1)) ORDER BY x DESC;
/* Check JSONCompactEachRowWithNames and JSONCompactEachRowWithNamesAndTypes Output */ SELECT * FROM test_table FORMAT JSONCompactEachRowWithNamesAndTypes;
SELECT k, js1.s, t2.s FROM (SELECT number AS k, number as s FROM system.numbers LIMIT 10) js1 ANY LEFT JOIN t2 USING k ORDER BY k;
CREATE DATABASE IF NOT EXISTS test_uvsbzgq9 
SELECT CASE WHEN (number % 2) = 0 THEN toUInt8(1) WHEN (number % 3) = 0 THEN toInt64(2) ELSE toUInt16(3) END FROM system.numbers LIMIT 10;
SELECT '49' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ffff:ffff:8000:0')))
SELECT multiIf(1, col2, 1, toFixedString('bar', 16), col4) FROM multi_if_check;
SELECT 'Running test stateless/02481_low_cardinality_with_short_circuit_functins_mutations.sql from pid=1722' 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (49 < 97 AND 102 > 0 ? 49 : 0)), throwIf(last != (49 < 97 AND 102 > 0 ? least(97 - 1, 49 + 102 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(97) LIMIT 49, 102);
DROP DATABASE IF EXISTS test_82su87r9 
desc format(JSONEachRow, '{"x" : ["2020-01-01", "2020-01-01 00:00:00"]}');
CREATE INDEX idx_tab2_0 ON tab2 (col0 DESC,col1 DESC);
SELECT count() > 10 FROM system.licenses;
CREATE TABLE test_01193_18429.table_1_631 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select toDateOrDefault(cast(19 as Int64));
SELECT 'Running test stateless/01670_dictionary_create_key_expression.sql from pid=1705' 
CREATE TABLE test_6B446F20683A5B7A6C5620424D3F38497D5E317744634525576C2577344F384A5A5C575A42394775(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS 02661_db1;
SELECT polygonsEqualsCartesian(NULL, NULL);
CREATE TABLE test_01193_18429.table_4_909 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT number AS id, toString(number) AS s, range(number) AS arr FROM numbers(10) FORMAT JSONColumnsWithMetadata
DROP DATABASE IF EXISTS test_h4726bf3 
CREATE TABLE testJoinTable (number UInt64, data String) ENGINE = Join(ANY, INNER, number) SETTINGS any_join_distinct_right_table_keys = 1;
SELECT 'xn--55qx5d.xn--tckwe' AS ascii, idnaDecode(ascii) AS unicode, idnaEncode(unicode) AS original, tryIdnaEncode(unicode) AS original_try;
select sipHash128ReferenceKeyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18)) == sipHash128Reference(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18));
CREATE DATABASE IF NOT EXISTS test_33excl4a 
SELECT 'Running test stateless/02183_array_tuple_literals_remote.sql from pid=1715' 
SELECT concat([NULL]);
INSERT INTO test_01193_18429.table_7_441 VALUES 
CREATE TABLE test_01193_18429.table_5_432 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_652D317875695A747B2B27517537767466796D7E75277E217453322060394277703C22677763657C(x UInt8) Engine=Memory;
SELECT byteSize([]);
SELECT dictGetOrDefault('test_dictionary', 'value', 1, 'DefaultValue');
SELECT minMap([number % 3, number % 4 - 1], [number :: UInt256, NULL]) FROM numbers(3) GROUP BY number WITH TOTALS ORDER BY number;
SELECT covarSampStable(NULL);
DROP TABLE data_01551;
INSERT INTO test_01193_18429.table_4_38 VALUES 
SELECT toDate('2018-12-25') + number AS x, toDateTime(x) AS x_t, toISOWeek(x) AS w, toISOWeek(x_t) AS wt, toISOYear(x) AS y, toISOYear(x_t) AS yt, toStartOfISOYear(x) AS ys, toStartOfISOYear(x_t) AS yst, toDayOfYear(x) AS dy, toDayOfYear(x_t) AS dyt FROM system.numbers LIMIT 10;
CREATE INDEX idx_tab4_3 ON tab4 (col3,col0);
CREATE DATABASE IF NOT EXISTS test_8rqkt6sa 
select arrayMap(x -> floor(x, 4), original_medians_array.medians_by_version[1] as l) l_rounded, arrayMap(x -> floor(x, 4), original_medians_array.medians_by_version[2] as r) r_rounded, arrayMap(x, y -> floor((y - x) / x, 3), l, r) diff_percent, arrayMap(x, y -> floor(x / y, 3), threshold, l) threshold_percent, test, query from ( select quantileExactForEach(0.999)(arrayMap(x, y -> abs(x - y), metrics_by_label[1], metrics_by_label[2]) as d) threshold from ( select virtual_run, groupArrayInsertAt(median_metrics, random_label) metrics_by_label from ( select medianExactForEach(metrics) median_metrics, virtual_run, random_label from ( select *, toUInt32(rowNumberInAllBlocks() % 2) random_label from ( select metrics, number virtual_run from (select metrics, run, version from table) no_query, numbers(1, 100000) nn order by virtual_run, rand() ) virtual_runs ) relabeled group by virtual_run, random_label ) virtual_medians group by virtual_run ) virtual_medians_array ) rd, ( select groupArrayInsertAt(median_metrics, version) medians_by_version from ( select medianExactForEach(metrics) median_metrics, version from table group by version ) original_medians ) original_medians_array, ( select any(test) test, any(query) query from table ) any_query, ( select throwIf(uniq((test, query))) from table ) check_single_query;
CREATE TABLE test_01193_18429.table_1_95 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT count() FROM (SELECT * FROM mem SETTINGS max_threads=2) FORMAT Null;
CREATE DATABASE IF NOT EXISTS test_iz88gps6 
INSERT INTO test_01193_18429.table_7_361 VALUES 
INSERT INTO test_01193_18429.table_4_903 VALUES 
select 20, * from test order by id
INSERT INTO test_01193_18429.table_9_734 VALUES 
CREATE TABLE test_01193_18429.table_8_886 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP TABLE 02581_set;
SELECT multiIf((number % 2) = 0, [toInt32(1), toInt32(2)], (number % 3) = 0, [toInt8(2), toInt8(3)], [toInt64(3), toInt64(3)]) FROM system.numbers LIMIT 10;
DROP TABLE adaptive_table;
SELECT test_table.a FROM test_table ORDER BY (test_table.a < test_table.b) + 1 AND (test_table.a < test_table.c) + 1;
CREATE TABLE test_01193_18429.table_8_592 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/02417_keeper_map_create_drop.sql from pid=1715' 
INSERT INTO test_01193_18429.table_2_377 VALUES 
CREATE TABLE tab5 (`a` UInt32, `b` UInt32, `c` UInt32, `d` UInt32) ENGINE = MergeTree ORDER BY (a + b) * c SETTINGS index_granularity = 44716, min_bytes_for_wide_part = 255117795, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 7677, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 68, min_merge_bytes_to_use_direct_io = 7161362298, index_granularity_bytes = 15649650, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 21403, primary_key_compress_block_size = 54316
DROP DATABASE IF EXISTS test_l6kdzamq 
ALTER TABLE concurrent_alter_column ADD COLUMN c437 DOUBLE;
SELECT 'type;toStartOfQuarter;toDateTime64;true', toTypeName(toStartOfQuarter(toDateTime64('1920-02-02 10:20:30', 3))) SETTINGS enable_extended_results_for_datetime_functions = true;
SELECT cityHash64(CAST( 0 AS Nullable(DateTime)));
INSERT INTO test_01193_18429.table_9_96 VALUES 
select 'char';
ATTACH TABLE codecs11;
CREATE TABLE test_01193_18429.table_3_691 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT a, b FROM t_fixed_prefix ORDER BY a, b SETTINGS optimize_read_in_order = 1
SELECT 'Running test stateless/02112_delayed_clickhouse_local_with_queries_file.expect from pid=1713' 
SELECT multiIf((number % 2) = 0, toFloat32(1), (number % 3) = 0, toInt16(2), toFloat64(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_276552213856505138633857405F6A6D204B22243C382644252D3A25567E234568422D6A3B373370(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02067_lost_part_s3.sql from pid=1724' 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), CAST(N as DateTime('Europe/Minsk')) as r FORMAT CSV;
EXPLAIN SYNTAX SELECT value1 FROM date_t WHERE (toYYYYMM(date1) >= 199203 OR toYear(date1) = 1993) AND id BETWEEN 1 AND 3;
INSERT INTO test_01193_18429.table_7_601 VALUES 
select ((1, 2), (3, 4)) in (((1, 2), (3, 4)));
SELECT '0', '-4503599627370496.000000000', 0 = -4503599627370496.000000000, 0 != -4503599627370496.000000000, 0 < -4503599627370496.000000000, 0 <= -4503599627370496.000000000, 0 > -4503599627370496.000000000, 0 >= -4503599627370496.000000000, -4503599627370496.000000000 = 0, -4503599627370496.000000000 != 0, -4503599627370496.000000000 < 0, -4503599627370496.000000000 <= 0, -4503599627370496.000000000 > 0, -4503599627370496.000000000 >= 0 , toUInt8(0) = -4503599627370496.000000000, toUInt8(0) != -4503599627370496.000000000, toUInt8(0) < -4503599627370496.000000000, toUInt8(0) <= -4503599627370496.000000000, toUInt8(0) > -4503599627370496.000000000, toUInt8(0) >= -4503599627370496.000000000, -4503599627370496.000000000 = toUInt8(0), -4503599627370496.000000000 != toUInt8(0), -4503599627370496.000000000 < toUInt8(0), -4503599627370496.000000000 <= toUInt8(0), -4503599627370496.000000000 > toUInt8(0), -4503599627370496.000000000 >= toUInt8(0) , toInt8(0) = -4503599627370496.000000000, toInt8(0) != -4503599627370496.000000000, toInt8(0) < -4503599627370496.000000000, toInt8(0) <= -4503599627370496.000000000, toInt8(0) > -4503599627370496.000000000, toInt8(0) >= -4503599627370496.000000000, -4503599627370496.000000000 = toInt8(0), -4503599627370496.000000000 != toInt8(0), -4503599627370496.000000000 < toInt8(0), -4503599627370496.000000000 <= toInt8(0), -4503599627370496.000000000 > toInt8(0), -4503599627370496.000000000 >= toInt8(0) , toUInt16(0) = -4503599627370496.000000000, toUInt16(0) != -4503599627370496.000000000, toUInt16(0) < -4503599627370496.000000000, toUInt16(0) <= -4503599627370496.000000000, toUInt16(0) > -4503599627370496.000000000, toUInt16(0) >= -4503599627370496.000000000, -4503599627370496.000000000 = toUInt16(0), -4503599627370496.000000000 != toUInt16(0), -4503599627370496.000000000 < toUInt16(0), -4503599627370496.000000000 <= toUInt16(0), -4503599627370496.000000000 > toUInt16(0), -4503599627370496.000000000 >= toUInt16(0) , toInt16(0) = -4503599627370496.000000000, toInt16(0) != -4503599627370496.000000000, toInt16(0) < -4503599627370496.000000000, toInt16(0) <= -4503599627370496.000000000, toInt16(0) > -4503599627370496.000000000, toInt16(0) >= -4503599627370496.000000000, -4503599627370496.000000000 = toInt16(0), -4503599627370496.000000000 != toInt16(0), -4503599627370496.000000000 < toInt16(0), -4503599627370496.000000000 <= toInt16(0), -4503599627370496.000000000 > toInt16(0), -4503599627370496.000000000 >= toInt16(0) , toUInt32(0) = -4503599627370496.000000000, toUInt32(0) != -4503599627370496.000000000, toUInt32(0) < -4503599627370496.000000000, toUInt32(0) <= -4503599627370496.000000000, toUInt32(0) > -4503599627370496.000000000, toUInt32(0) >= -4503599627370496.000000000, -4503599627370496.000000000 = toUInt32(0), -4503599627370496.000000000 != toUInt32(0), -4503599627370496.000000000 < toUInt32(0), -4503599627370496.000000000 <= toUInt32(0), -4503599627370496.000000000 > toUInt32(0), -4503599627370496.000000000 >= toUInt32(0) , toInt32(0) = -4503599627370496.000000000, toInt32(0) != -4503599627370496.000000000, toInt32(0) < -4503599627370496.000000000, toInt32(0) <= -4503599627370496.000000000, toInt32(0) > -4503599627370496.000000000, toInt32(0) >= -4503599627370496.000000000, -4503599627370496.000000000 = toInt32(0), -4503599627370496.000000000 != toInt32(0), -4503599627370496.000000000 < toInt32(0), -4503599627370496.000000000 <= toInt32(0), -4503599627370496.000000000 > toInt32(0), -4503599627370496.000000000 >= toInt32(0) , toUInt64(0) = -4503599627370496.000000000, toUInt64(0) != -4503599627370496.000000000, toUInt64(0) < -4503599627370496.000000000, toUInt64(0) <= -4503599627370496.000000000, toUInt64(0) > -4503599627370496.000000000, toUInt64(0) >= -4503599627370496.000000000, -4503599627370496.000000000 = toUInt64(0), -4503599627370496.000000000 != toUInt64(0), -4503599627370496.000000000 < toUInt64(0), -4503599627370496.000000000 <= toUInt64(0), -4503599627370496.000000000 > toUInt64(0), -4503599627370496.000000000 >= toUInt64(0) , toInt64(0) = -4503599627370496.000000000, toInt64(0) != -4503599627370496.000000000, toInt64(0) < -4503599627370496.000000000, toInt64(0) <= -4503599627370496.000000000, toInt64(0) > -4503599627370496.000000000, toInt64(0) >= -4503599627370496.000000000, -4503599627370496.000000000 = toInt64(0), -4503599627370496.000000000 != toInt64(0), -4503599627370496.000000000 < toInt64(0), -4503599627370496.000000000 <= toInt64(0), -4503599627370496.000000000 > toInt64(0), -4503599627370496.000000000 >= toInt64(0) ;
SELECT * FROM 02154_test_source_table
select '02005_log_formatted_queries.sql' from system.one;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (68 < 26 AND 78 > 0 ? 68 : 0)), throwIf(last != (68 < 26 AND 78 > 0 ? least(26 - 1, 68 + 78 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(26) LIMIT 68, 78);
SELECT sqidEncode(materialize(1::UInt8), materialize(2::UInt16), materialize(3::UInt32), materialize(4::UInt64)) AS sqid, sqidDecode(sqid);
SELECT 'Running test stateless/01079_parallel_alter_modify_zookeeper_long.sh from pid=1705' 
SELECT hex(sipHash128Keyed(key, val)) FROM tab;
CREATE TABLE test_533C564A225A6471345B6D5065494C515335504C30392D5853654A68377C2C775966324F4665205F(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_fgusm65s 
DROP TABLE IF EXISTS users;
INSERT INTO r1 SELECT 76
CREATE DICTIONARY test_vaepqvz9.dict (`key` Int64 DEFAULT -1, `value_default` String DEFAULT 'world', `value_expression` String DEFAULT 'xxx' EXPRESSION 'toString(127 * 172)') PRIMARY KEY key SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'dicttbl' DB currentDatabase())) LIFETIME(MIN 0 MAX 1) LAYOUT(FLAT())
SELECT count() FROM (SELECT toDayOfWeek(date) AS m, id, count() FROM merge_tree_table GROUP BY id, m ORDER BY count() DESC LIMIT 10 SETTINGS max_threads = 1)
CREATE DATABASE IF NOT EXISTS test_mwdsn0dy 
CREATE TABLE test_01193_18429.table_2_631 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT value.value_0_level_0.value_0_level_1, value.value_0_level_0.value_1_level_1 FROM test_table;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt16(1), toUInt16(2)] WHEN (number % 3) = 0 THEN [toInt64(2), toInt64(3)] ELSE [toInt8(3), toInt8(3)] END FROM system.numbers LIMIT 10;
CREATE INDEX idx_tab4_2 ON tab4 (col4,col1);
DROP TABLE t_func_to_subcolumns;
SELECT 'Running test stateless/02245_weird_partitions_pruning.sql from pid=1724' 
CREATE TABLE pk_func (`d` DateTime, `ui` UInt32) ENGINE = SummingMergeTree ORDER BY toDate(d) SETTINGS index_granularity = 54533, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 81, merge_max_block_size = 13421, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 441281, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 3849441903, index_granularity_bytes = 30587097, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 70220, primary_key_compress_block_size = 9028
select 3 = position('abcdefgh', materialize('cdef')) from system.numbers limit 10;
CREATE DATABASE test3 ENGINE = S3;
INSERT INTO dst_3 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 58
select 0 = isValidUTF8(toFixedString('\x00\x00\x00\x00\x00\xC2\xC2\x80\x00\x00\xE1\x80\x80\x00\x00\x00', 16)) from system.numbers limit 10;
CREATE TABLE test_4B70356023517574565B6736342861465532787470515947533E5B425F5F5520386B532624307527(x UInt8) Engine=Memory;
CREATE TABLE test_02908_r2_51 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_51', 'r2') ORDER BY tuple()
SELECT 'xn--42c2d9a' AS ascii, idnaDecode(ascii) AS unicode, idnaEncode(unicode) AS original, tryIdnaEncode(unicode) AS original_try;
SYSTEM SYNC REPLICA replicated_constraints2;
DROP DATABASE IF EXISTS test_jzok4tgw 
SELECT * FROM strings_00469 ORDER BY x;
SELECT kurtPop(NULL);
SELECT 'Running test stateless/01776_decrypt_aead_size_check.sql from pid=1714' 
INSERT INTO right SELECT number, toString(number) FROM numbers(263);
CREATE TABLE t (b UInt8) ENGINE = Memory;
drop table if exists test_in;
CREATE TABLE test_01193_18429.table_6_621 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO r5 SELECT 21
SELECT count(*) FROM system.session_log WHERE user = '02834_USER_25758' AND type = 'LoginSuccess' AND interface = 'MySQL'
SELECT * from db_01721.table_decimal_dict where KeyField = 42;
with arrayJoin([0, 6, 7, 9, 10]) as x select quantileGK(100, 0.5)(x);
CREATE DATABASE IF NOT EXISTS test_7pqujlea 
SELECT 'Running test stateless/02668_column_block_number_with_projections.sql from pid=1713' 
CREATE DATABASE IF NOT EXISTS test_81nfllq7 
SELECT 'Expect two entries in the query cache', count(*) FROM system.query_cache;
CREATE DICTIONARY direct_dictionary ( id UInt64, decimal_value Decimal256(5) ) PRIMARY KEY id SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dictionary_decimal_source_table')) LAYOUT(DIRECT());
SELECT round(dotProduct([-1, 2, 3.002], [2, 3.4, 4]) - dotProduct((-1, 2, 3.002), (2, 3.4, 4)), 2);
SHOW CREATE TABLE multiword_types;
SELECT * FROM remote('127.0.0.{1,2}', generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8))))))))))))))))))))))))))))))))))))))))', 1, 1, 1)) LIMIT 1 FORMAT Null
SELECT JSONExtract('{"a":3333.6333333333333333333333, "b":"test"}', 'Tuple(a Decimal(10,1), b LowCardinality(String))');
INSERT INTO test_01193_18429.table_6_478 VALUES 
SELECT * FROM aggregating_00682
SELECT 'Running test stateless/01262_low_cardinality_remove.sql from pid=1724' 
CREATE TABLE test (`id` UInt64, `v` Variant(String, UInt64, LowCardinality(String), Tuple(a UInt32, b UInt32), Array(UInt64))) ENGINE = MergeTree ORDER BY id SETTINGS min_rows_for_wide_part = 1, min_bytes_for_wide_part = 1, index_granularity = 5269, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 61, merge_max_block_size = 13447, prefer_fetch_merged_part_size_threshold = 4785123982, vertical_merge_algorithm_min_rows_to_activate = 738598, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 28804223, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 98260, primary_key_compress_block_size = 13792
DROP DATABASE IF EXISTS test_qfhuc442 
SELECT 'Running test stateless/01053_ssd_dictionary.sh from pid=1705' 
SELECT value.value_0_level_0.* FROM test_table;
ALTER TABLE alter_table_6 DELETE WHERE cityHash64(a,b,c,d,e,g) % 1048576 < 524288
SELECT multiIf((col1 % 2) = 0, ['foo', 'bar'], 1, [col4, 'bar'], ['foo', col7]) FROM multi_if_check;
CREATE DATABASE IF NOT EXISTS test_ivf65qd5 
set compatibility = '22.3';
( select n1, n2 from morton_numbers_3_02457 union distinct select n1, n2 from morton_numbers_3_02457 ) except ( select n1, n2 from morton_numbers_3_02457 intersect select n1, n2 from morton_numbers_3_02457 );
DROP DATABASE IF EXISTS test_dxw5ie49 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), toInt64(-1) <= N as r FORMAT CSV;
SYSTEM UNFREEZE WITH NAME 'test_01417_single_part_7_system'
alter table data_01900_2 update s = 'bar_11' where 1;
DROP TABLE partition_all;
SELECT ' * A UNION * B:';
CREATE TABLE test_01193_18429.table_1_173 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
RENAME DATABASE test_01192 TO test_01192_renamed
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (48 < 34 AND 39 > 0 ? 48 : 0)), throwIf(last != (48 < 34 AND 39 > 0 ? least(34 - 1, 48 + 39 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(34) LIMIT 48, 39);
CREATE TABLE minmax_idx2 (`u64` UInt64, `i32` Int32, `f64` Float64, `d` Decimal(10, 2), `s` String, `e` Enum8('a' = 1, 'b' = 2, 'c' = 3), `dt` Date, INDEX idx_all (i32, i32 + f64, d, s, e, dt) TYPE minmax GRANULARITY 1, INDEX idx_2 (u64 + toYear(dt), substring(s, 2, 4)) TYPE minmax GRANULARITY 3) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00837/minmax', 'r2') ORDER BY u64 SETTINGS index_granularity = 2, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 289540630, ratio_of_defaults_for_sparse_serialization = 0.9060608148574829, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 23736, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 4667819440, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 32072, primary_key_compress_block_size = 8365
CREATE TABLE test_table1 (`key` UInt64, `value1` UInt8, `value2` UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/02122_4letter_words_stress_zookeeper_test_0kxibqoo/test_table1', '0') ORDER BY key SETTINGS index_granularity = 17541, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.23175950348377228, replace_long_file_name_to_hash = false, max_file_name_length = 50, merge_max_block_size = 8729, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 46, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 18782046, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 70172, primary_key_compress_block_size = 58564
SELECT rows, toTimeZone(delete_ttl_info_min, 'UTC'), toTimeZone(delete_ttl_info_max, 'UTC'), move_ttl_info.expression, move_ttl_info.min, move_ttl_info.max FROM system.parts WHERE database = currentDatabase() AND table = 'ttl' AND active;
SELECT multiIf((number % 2) = 0, [toUInt32(1), toUInt32(2)], (number % 3) = 0, [toInt16(2), toInt16(3)], [toInt16(3), toInt16(3)]) FROM system.numbers LIMIT 10;
SELECT toTypeName(d2), toTypeName(d3) FROM decimal LIMIT 1;
INSERT INTO test_01193_18429.table_1_615 VALUES 
select hex(sipHash128ReferenceKeyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56)));
KILL MUTATION WHERE table='replicated_mutation_table' and database='test_a688g476' AND mutation_id='0000000001'
SELECT CASE WHEN 1 THEN [col2, 'bar'] WHEN (col1 % 3) = 0 THEN ['foo', col5] ELSE [col6, col7] END FROM multi_if_check;
SELECT [[[[],['']]]];
select variantElement(NULL::LowCardinality(Nullable(String))::Variant(LowCardinality(String), UInt64), 'LowCardinality(String)') from numbers(4);
CREATE TABLE test_4D285F553E662A39332F2B4A3F75474F355637584A7A5C7D20622B7A6E7147296B4D6D5B2F502461(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_2_733 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select multiFuzzyMatchAllIndices(materialize('halo some wrld'), 2, materialize(['^halllllo.*world$', 'some random string']));
SELECT JSONExtractRaw('{"a": "hello", "b": [-100, 200.0, 300], "c":{"d":[121,144]}}', 'c', 'd', 3);
rename table c to d;
DROP DATABASE IF EXISTS test_h7qxd540 
 explain actions = 1 select s, y from ( select sum(x) as s, y from (select number as x, number + 1 as y from numbers(10)) group by y ) where y != 0 and s != 8 and y - 4 settings enable_optimize_predicate_expression=0
SELECT COUNT() FROM bloom_filter_array_types_test WHERE has(u8, 1);
SELECT any(number) RESPECT NULLS from (Select if(number < 8, NULL, number) as number FROM numbers(10));
desc file('/var/lib/clickhouse/user_files/test-02383-9890-28377/corrupted.arrow')
CREATE TABLE test_4C23316F7C5E5D5B55626A5530744F4B614437555A232F54302C2D786A6A435A7B2A62575C565648(x UInt8) Engine=Memory;
INSERT INTO test_e1p7depc.t_async_insert_fallback FORMAT Values
CREATE DATABASE IF NOT EXISTS test_yt1e9fi5 
SELECT 'Running test stateless/00950_test_gorilla_codec.sql from pid=1722' 
SELECT c, d FROM t_fixed_prefix WHERE bitNot(a) = 1 ORDER BY c, d SETTINGS optimize_read_in_order = 1
SELECT h3HexRing(NULL, NULL);
EXPLAIN QUERY TREE (SELECT sum(uint64 - 2) + sum(uint64 - 3) From test_table);
SELECT * FROM postgresql;
CREATE TABLE bloom_filter_idx (`u64` UInt64, `i32` Int32, `f64` Float64, `d` Decimal(10, 2), `s` String, `e` Enum8('a' = 1, 'b' = 2, 'c' = 3), `dt` Date, INDEX bloom_filter_a i32 TYPE bloom_filter(1e-9) GRANULARITY 1) ENGINE = MergeTree ORDER BY u64 SETTINGS index_granularity = 8192, min_bytes_for_wide_part = 394618900, ratio_of_defaults_for_sparse_serialization = 0.7166685461997986, replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 13784, prefer_fetch_merged_part_size_threshold = 1955553081, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 276509, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 65820, primary_key_compress_block_size = 87680
select uniqStateForEachMapForEachMap(map(1, [map(1, [number, number])])) from numbers(10);
DROP DATABASE IF EXISTS test_5u8i93ke 
CREATE TEMPORARY TABLE table_gcd_codec_date32 (n Date32 CODEC(GCD, LZ4)) ENGINE = Memory;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toInt64(2) ELSE toInt64(3) END FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_1_899 VALUES 
SELECT toDateTime('2010-01-02 03:04:05') AS x, toDateTime('2011-02-03 04:05:06') AS y, least(x, y), greatest(x, y), least(x, materialize(y)), greatest(materialize(x), y), greatest(materialize(x), materialize(y)), toTypeName(least(x, y));
CREATE TABLE test_6E72533D3C455C2F256C272C2B5C785C332B774149472344444043424E2B64274844394E606B4B49(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_fnsz8f6x 
CREATE TABLE test_497D3D456235705A3E253D5724214C20423D412F6260682D25593A4B5A736727647951537E366E5C(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_6_827 VALUES 
SELECT multiIf((number % 2) = 0, [toUInt8(1), toUInt8(2)], (number % 3) = 0, [toInt16(2), toInt16(3)], [toInt64(3), toInt64(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_distributed_1 AS test_local_1 ENGINE = Distributed('test_shard_localhost', currentDatabase(), test_local_1, rand());
CREATE TABLE test_01193_18429.table_7_638 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT * FROM ( SELECT 1 FROM remote('127.0.0.{2,3}', currentDatabase(), numbers_10_00223) WITH TOTALS ) WHERE 1 GROUP BY 1;
CREATE DATABASE IF NOT EXISTS test_26lgi5lj 
CREATE TABLE test_01193_18429.table_3_311 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_02908_r1_38 SELECT rand64() FROM numbers(5);
desc file('test_02149.data', 'TSV')
SELECT 'Running test stateless/02525_analyzer_function_in_crash_fix.sql from pid=1726' 
CREATE TABLE test_02908_r2_145 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_145', 'r2') ORDER BY tuple()
select table, name, refcount from system.parts where database = 'test_2nnjpr5f' and table = 'data_02340_rep' and refcount > 1
drop table dist_01527;
SELECT '--- >= []';
SELECT value FROM system.zookeeper WHERE path = '/clickhouse/tables/01593_concurrent_alter_mutations_kill_many_replicas_long_test_bc61bq8k/s1/replicas/r11/' and name = 'metadata_version'
CREATE TABLE test_6A7E557237795F2E48675A31642A746242637846704F41574A2C477E497E78295C646F3E20352E48(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_1_694 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), subtractMinutes(N, 1, 'Asia/Istanbul') as r FORMAT CSV;
DROP TABLE IF EXISTS null_00699;
SELECT field3 FROM alias10;
SELECT wordShingleMinHashArgCaseInsensitiveUTF8('');
select sum(abs(cos(2 * pi() * x)) - 1 < 1.0e-9) / count() from system.one array join range(1000000) as x;
DROP TABLE IF EXISTS test_table__fuzz_3;
SELECT * FROM file('/var/lib/clickhouse/user_files/02661_read_from_archive_test_vdj32cgq_tar_archive{1..2}.tar :: 02661_read_from_archive_test_vdj32cgq_tar_data1.csv') ORDER BY 1, 2
CREATE DATABASE IF NOT EXISTS test_dimga3iu 
INSERT INTO test_01193_18429.table_3_440 VALUES 
rename table test_log_queries.logtable2 to test_log_queries.logtable4, test_log_queries.logtable3 to test_log_queries.logtable5
EXPLAIN SYNTAX SELECT avg(log(2) * number) AS k FROM numbers(10000000) GROUP BY (number % 2) % 3, number % 2 ORDER BY k;
SELECT 'SELECT toRelativeYearNum(N, \'Asia/Istanbul\')';
detach table mt;
SELECT * FROM alter_00147 ARRAY JOIN n ORDER BY n.x;
CREATE TABLE test_7D46634869305644365A4531276D454C67785F38696E7E603E4249523E5A6A535B366E2B6726233E(x UInt8) Engine=Memory;
SELECT emptyArrayToSingle(NULL);
SELECT count() FROM t_cnf_fuzz WHERE (c4 AND c4 AND c3 AND (NOT c8) AND c0) SETTINGS convert_query_to_cnf = 1
SELECT 'Running test stateless/02470_suspicious_low_cardinality_msan.sql from pid=1714' 
alter table dst1 replace partition id 'all' from src1;
ALTER TABLE alter_table_4 DELETE WHERE cityHash64(a,b,c,d,e,g) % 1048576 < 524288
SELECT id, ary[indexOf(ary, 'value2')] FROM test_bf_indexOf WHERE ary[indexOf(ary, 'value2')] = 'value2' ORDER BY id FORMAT TSV;
SELECT COUNT(*) FROM (SELECT auth_id, auth_type, client_version_major, client_version_minor, client_version_patch, interface FROM system.session_log WHERE user = '02834_USER_25758' AND type = 'LoginSuccess' AND interface = 'MySQL' INTERSECT SELECT auth_id, auth_type, client_version_major, client_version_minor, client_version_patch, interface FROM system.session_log WHERE user = '02834_USER_25758' AND type = 'Logout' AND interface = 'MySQL')
SELECT multiIf((number % 2) = 0, toInt32(1), (number % 3) = 0, toUInt16(2), toInt64(3)) FROM system.numbers LIMIT 10;
show create table functions format TSVRaw;
CREATE TABLE test_01193_18429.table_9_848 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT a._shard_num, key FROM dist_1 a;
SELECT COUNT() FROM single_column_bloom_filter WHERE (i32, i32) IN ((1, 2), (2, 3)) SETTINGS max_rows_to_read = 6;
SELECT medianExact(a), medianExact(b), medianExact(c) as x, toTypeName(x) FROM decimal;
DROP TABLE IF EXISTS msgpack_map
SELECT arrayPartialShuffle(['storage','tiger','imposter','terminal','uniform','sensation'], 3, 0xbad_cafe);
INSERT INTO test_01193_18429.table_2_17 VALUES 
SELECT h3HexAreaKm2(10);
DROP TABLE input_function_table_6
CREATE TABLE test_local (date Date, value UInt32) ENGINE = MergeTree(date, date, 8192);
INSERT INTO src VALUES /* (25, 2) */ 
CREATE TABLE test_01193_18429.table_2_556 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT hasColumnInTable('localhost', currentDatabase(), 'has_column_in_table', 'nest.not_existing');
select format('{}{}', 'a', materialize(toFixedString('b', 1))) == 'ab' from system.numbers limit 5;
select 10 as x format TSKV 
SELECT 'Running test stateless/02526_merge_join_int_decimal.sql from pid=1726' 
SELECT 128, 65535, 128 = 65535, 128 != 65535, 128 < 65535, 128 <= 65535, 128 > 65535, 128 >= 65535, 65535 = 128, 65535 != 128, 65535 < 128, 65535 <= 128, 65535 > 128, 65535 >= 128 , toUInt8(128) = toUInt16(65535), toUInt8(128) != toUInt16(65535), toUInt8(128) < toUInt16(65535), toUInt8(128) <= toUInt16(65535), toUInt8(128) > toUInt16(65535), toUInt8(128) >= toUInt16(65535), toUInt16(65535) = toUInt8(128), toUInt16(65535) != toUInt8(128), toUInt16(65535) < toUInt8(128), toUInt16(65535) <= toUInt8(128), toUInt16(65535) > toUInt8(128), toUInt16(65535) >= toUInt8(128) , toUInt8(128) = toUInt32(65535), toUInt8(128) != toUInt32(65535), toUInt8(128) < toUInt32(65535), toUInt8(128) <= toUInt32(65535), toUInt8(128) > toUInt32(65535), toUInt8(128) >= toUInt32(65535), toUInt32(65535) = toUInt8(128), toUInt32(65535) != toUInt8(128), toUInt32(65535) < toUInt8(128), toUInt32(65535) <= toUInt8(128), toUInt32(65535) > toUInt8(128), toUInt32(65535) >= toUInt8(128) , toUInt8(128) = toInt32(65535), toUInt8(128) != toInt32(65535), toUInt8(128) < toInt32(65535), toUInt8(128) <= toInt32(65535), toUInt8(128) > toInt32(65535), toUInt8(128) >= toInt32(65535), toInt32(65535) = toUInt8(128), toInt32(65535) != toUInt8(128), toInt32(65535) < toUInt8(128), toInt32(65535) <= toUInt8(128), toInt32(65535) > toUInt8(128), toInt32(65535) >= toUInt8(128) , toUInt8(128) = toUInt64(65535), toUInt8(128) != toUInt64(65535), toUInt8(128) < toUInt64(65535), toUInt8(128) <= toUInt64(65535), toUInt8(128) > toUInt64(65535), toUInt8(128) >= toUInt64(65535), toUInt64(65535) = toUInt8(128), toUInt64(65535) != toUInt8(128), toUInt64(65535) < toUInt8(128), toUInt64(65535) <= toUInt8(128), toUInt64(65535) > toUInt8(128), toUInt64(65535) >= toUInt8(128) , toUInt8(128) = toInt64(65535), toUInt8(128) != toInt64(65535), toUInt8(128) < toInt64(65535), toUInt8(128) <= toInt64(65535), toUInt8(128) > toInt64(65535), toUInt8(128) >= toInt64(65535), toInt64(65535) = toUInt8(128), toInt64(65535) != toUInt8(128), toInt64(65535) < toUInt8(128), toInt64(65535) <= toUInt8(128), toInt64(65535) > toUInt8(128), toInt64(65535) >= toUInt8(128) , toUInt16(128) = toUInt16(65535), toUInt16(128) != toUInt16(65535), toUInt16(128) < toUInt16(65535), toUInt16(128) <= toUInt16(65535), toUInt16(128) > toUInt16(65535), toUInt16(128) >= toUInt16(65535), toUInt16(65535) = toUInt16(128), toUInt16(65535) != toUInt16(128), toUInt16(65535) < toUInt16(128), toUInt16(65535) <= toUInt16(128), toUInt16(65535) > toUInt16(128), toUInt16(65535) >= toUInt16(128) , toUInt16(128) = toUInt32(65535), toUInt16(128) != toUInt32(65535), toUInt16(128) < toUInt32(65535), toUInt16(128) <= toUInt32(65535), toUInt16(128) > toUInt32(65535), toUInt16(128) >= toUInt32(65535), toUInt32(65535) = toUInt16(128), toUInt32(65535) != toUInt16(128), toUInt32(65535) < toUInt16(128), toUInt32(65535) <= toUInt16(128), toUInt32(65535) > toUInt16(128), toUInt32(65535) >= toUInt16(128) , toUInt16(128) = toInt32(65535), toUInt16(128) != toInt32(65535), toUInt16(128) < toInt32(65535), toUInt16(128) <= toInt32(65535), toUInt16(128) > toInt32(65535), toUInt16(128) >= toInt32(65535), toInt32(65535) = toUInt16(128), toInt32(65535) != toUInt16(128), toInt32(65535) < toUInt16(128), toInt32(65535) <= toUInt16(128), toInt32(65535) > toUInt16(128), toInt32(65535) >= toUInt16(128) , toUInt16(128) = toUInt64(65535), toUInt16(128) != toUInt64(65535), toUInt16(128) < toUInt64(65535), toUInt16(128) <= toUInt64(65535), toUInt16(128) > toUInt64(65535), toUInt16(128) >= toUInt64(65535), toUInt64(65535) = toUInt16(128), toUInt64(65535) != toUInt16(128), toUInt64(65535) < toUInt16(128), toUInt64(65535) <= toUInt16(128), toUInt64(65535) > toUInt16(128), toUInt64(65535) >= toUInt16(128) , toUInt16(128) = toInt64(65535), toUInt16(128) != toInt64(65535), toUInt16(128) < toInt64(65535), toUInt16(128) <= toInt64(65535), toUInt16(128) > toInt64(65535), toUInt16(128) >= toInt64(65535), toInt64(65535) = toUInt16(128), toInt64(65535) != toUInt16(128), toInt64(65535) < toUInt16(128), toInt64(65535) <= toUInt16(128), toInt64(65535) > toUInt16(128), toInt64(65535) >= toUInt16(128) , toInt16(128) = toUInt16(65535), toInt16(128) != toUInt16(65535), toInt16(128) < toUInt16(65535), toInt16(128) <= toUInt16(65535), toInt16(128) > toUInt16(65535), toInt16(128) >= toUInt16(65535), toUInt16(65535) = toInt16(128), toUInt16(65535) != toInt16(128), toUInt16(65535) < toInt16(128), toUInt16(65535) <= toInt16(128), toUInt16(65535) > toInt16(128), toUInt16(65535) >= toInt16(128) , toInt16(128) = toUInt32(65535), toInt16(128) != toUInt32(65535), toInt16(128) < toUInt32(65535), toInt16(128) <= toUInt32(65535), toInt16(128) > toUInt32(65535), toInt16(128) >= toUInt32(65535), toUInt32(65535) = toInt16(128), toUInt32(65535) != toInt16(128), toUInt32(65535) < toInt16(128), toUInt32(65535) <= toInt16(128), toUInt32(65535) > toInt16(128), toUInt32(65535) >= toInt16(128) , toInt16(128) = toInt32(65535), toInt16(128) != toInt32(65535), toInt16(128) < toInt32(65535), toInt16(128) <= toInt32(65535), toInt16(128) > toInt32(65535), toInt16(128) >= toInt32(65535), toInt32(65535) = toInt16(128), toInt32(65535) != toInt16(128), toInt32(65535) < toInt16(128), toInt32(65535) <= toInt16(128), toInt32(65535) > toInt16(128), toInt32(65535) >= toInt16(128) , toInt16(128) = toUInt64(65535), toInt16(128) != toUInt64(65535), toInt16(128) < toUInt64(65535), toInt16(128) <= toUInt64(65535), toInt16(128) > toUInt64(65535), toInt16(128) >= toUInt64(65535), toUInt64(65535) = toInt16(128), toUInt64(65535) != toInt16(128), toUInt64(65535) < toInt16(128), toUInt64(65535) <= toInt16(128), toUInt64(65535) > toInt16(128), toUInt64(65535) >= toInt16(128) , toInt16(128) = toInt64(65535), toInt16(128) != toInt64(65535), toInt16(128) < toInt64(65535), toInt16(128) <= toInt64(65535), toInt16(128) > toInt64(65535), toInt16(128) >= toInt64(65535), toInt64(65535) = toInt16(128), toInt64(65535) != toInt16(128), toInt64(65535) < toInt16(128), toInt64(65535) <= toInt16(128), toInt64(65535) > toInt16(128), toInt64(65535) >= toInt16(128) , toUInt32(128) = toUInt16(65535), toUInt32(128) != toUInt16(65535), toUInt32(128) < toUInt16(65535), toUInt32(128) <= toUInt16(65535), toUInt32(128) > toUInt16(65535), toUInt32(128) >= toUInt16(65535), toUInt16(65535) = toUInt32(128), toUInt16(65535) != toUInt32(128), toUInt16(65535) < toUInt32(128), toUInt16(65535) <= toUInt32(128), toUInt16(65535) > toUInt32(128), toUInt16(65535) >= toUInt32(128) , toUInt32(128) = toUInt32(65535), toUInt32(128) != toUInt32(65535), toUInt32(128) < toUInt32(65535), toUInt32(128) <= toUInt32(65535), toUInt32(128) > toUInt32(65535), toUInt32(128) >= toUInt32(65535), toUInt32(65535) = toUInt32(128), toUInt32(65535) != toUInt32(128), toUInt32(65535) < toUInt32(128), toUInt32(65535) <= toUInt32(128), toUInt32(65535) > toUInt32(128), toUInt32(65535) >= toUInt32(128) , toUInt32(128) = toInt32(65535), toUInt32(128) != toInt32(65535), toUInt32(128) < toInt32(65535), toUInt32(128) <= toInt32(65535), toUInt32(128) > toInt32(65535), toUInt32(128) >= toInt32(65535), toInt32(65535) = toUInt32(128), toInt32(65535) != toUInt32(128), toInt32(65535) < toUInt32(128), toInt32(65535) <= toUInt32(128), toInt32(65535) > toUInt32(128), toInt32(65535) >= toUInt32(128) , toUInt32(128) = toUInt64(65535), toUInt32(128) != toUInt64(65535), toUInt32(128) < toUInt64(65535), toUInt32(128) <= toUInt64(65535), toUInt32(128) > toUInt64(65535), toUInt32(128) >= toUInt64(65535), toUInt64(65535) = toUInt32(128), toUInt64(65535) != toUInt32(128), toUInt64(65535) < toUInt32(128), toUInt64(65535) <= toUInt32(128), toUInt64(65535) > toUInt32(128), toUInt64(65535) >= toUInt32(128) , toUInt32(128) = toInt64(65535), toUInt32(128) != toInt64(65535), toUInt32(128) < toInt64(65535), toUInt32(128) <= toInt64(65535), toUInt32(128) > toInt64(65535), toUInt32(128) >= toInt64(65535), toInt64(65535) = toUInt32(128), toInt64(65535) != toUInt32(128), toInt64(65535) < toUInt32(128), toInt64(65535) <= toUInt32(128), toInt64(65535) > toUInt32(128), toInt64(65535) >= toUInt32(128) , toInt32(128) = toUInt16(65535), toInt32(128) != toUInt16(65535), toInt32(128) < toUInt16(65535), toInt32(128) <= toUInt16(65535), toInt32(128) > toUInt16(65535), toInt32(128) >= toUInt16(65535), toUInt16(65535) = toInt32(128), toUInt16(65535) != toInt32(128), toUInt16(65535) < toInt32(128), toUInt16(65535) <= toInt32(128), toUInt16(65535) > toInt32(128), toUInt16(65535) >= toInt32(128) , toInt32(128) = toUInt32(65535), toInt32(128) != toUInt32(65535), toInt32(128) < toUInt32(65535), toInt32(128) <= toUInt32(65535), toInt32(128) > toUInt32(65535), toInt32(128) >= toUInt32(65535), toUInt32(65535) = toInt32(128), toUInt32(65535) != toInt32(128), toUInt32(65535) < toInt32(128), toUInt32(65535) <= toInt32(128), toUInt32(65535) > toInt32(128), toUInt32(65535) >= toInt32(128) , toInt32(128) = toInt32(65535), toInt32(128) != toInt32(65535), toInt32(128) < toInt32(65535), toInt32(128) <= toInt32(65535), toInt32(128) > toInt32(65535), toInt32(128) >= toInt32(65535), toInt32(65535) = toInt32(128), toInt32(65535) != toInt32(128), toInt32(65535) < toInt32(128), toInt32(65535) <= toInt32(128), toInt32(65535) > toInt32(128), toInt32(65535) >= toInt32(128) , toInt32(128) = toUInt64(65535), toInt32(128) != toUInt64(65535), toInt32(128) < toUInt64(65535), toInt32(128) <= toUInt64(65535), toInt32(128) > toUInt64(65535), toInt32(128) >= toUInt64(65535), toUInt64(65535) = toInt32(128), toUInt64(65535) != toInt32(128), toUInt64(65535) < toInt32(128), toUInt64(65535) <= toInt32(128), toUInt64(65535) > toInt32(128), toUInt64(65535) >= toInt32(128) , toInt32(128) = toInt64(65535), toInt32(128) != toInt64(65535), toInt32(128) < toInt64(65535), toInt32(128) <= toInt64(65535), toInt32(128) > toInt64(65535), toInt32(128) >= toInt64(65535), toInt64(65535) = toInt32(128), toInt64(65535) != toInt32(128), toInt64(65535) < toInt32(128), toInt64(65535) <= toInt32(128), toInt64(65535) > toInt32(128), toInt64(65535) >= toInt32(128) , toUInt64(128) = toUInt16(65535), toUInt64(128) != toUInt16(65535), toUInt64(128) < toUInt16(65535), toUInt64(128) <= toUInt16(65535), toUInt64(128) > toUInt16(65535), toUInt64(128) >= toUInt16(65535), toUInt16(65535) = toUInt64(128), toUInt16(65535) != toUInt64(128), toUInt16(65535) < toUInt64(128), toUInt16(65535) <= toUInt64(128), toUInt16(65535) > toUInt64(128), toUInt16(65535) >= toUInt64(128) , toUInt64(128) = toUInt32(65535), toUInt64(128) != toUInt32(65535), toUInt64(128) < toUInt32(65535), toUInt64(128) <= toUInt32(65535), toUInt64(128) > toUInt32(65535), toUInt64(128) >= toUInt32(65535), toUInt32(65535) = toUInt64(128), toUInt32(65535) != toUInt64(128), toUInt32(65535) < toUInt64(128), toUInt32(65535) <= toUInt64(128), toUInt32(65535) > toUInt64(128), toUInt32(65535) >= toUInt64(128) , toUInt64(128) = toInt32(65535), toUInt64(128) != toInt32(65535), toUInt64(128) < toInt32(65535), toUInt64(128) <= toInt32(65535), toUInt64(128) > toInt32(65535), toUInt64(128) >= toInt32(65535), toInt32(65535) = toUInt64(128), toInt32(65535) != toUInt64(128), toInt32(65535) < toUInt64(128), toInt32(65535) <= toUInt64(128), toInt32(65535) > toUInt64(128), toInt32(65535) >= toUInt64(128) , toUInt64(128) = toUInt64(65535), toUInt64(128) != toUInt64(65535), toUInt64(128) < toUInt64(65535), toUInt64(128) <= toUInt64(65535), toUInt64(128) > toUInt64(65535), toUInt64(128) >= toUInt64(65535), toUInt64(65535) = toUInt64(128), toUInt64(65535) != toUInt64(128), toUInt64(65535) < toUInt64(128), toUInt64(65535) <= toUInt64(128), toUInt64(65535) > toUInt64(128), toUInt64(65535) >= toUInt64(128) , toUInt64(128) = toInt64(65535), toUInt64(128) != toInt64(65535), toUInt64(128) < toInt64(65535), toUInt64(128) <= toInt64(65535), toUInt64(128) > toInt64(65535), toUInt64(128) >= toInt64(65535), toInt64(65535) = toUInt64(128), toInt64(65535) != toUInt64(128), toInt64(65535) < toUInt64(128), toInt64(65535) <= toUInt64(128), toInt64(65535) > toUInt64(128), toInt64(65535) >= toUInt64(128) , toInt64(128) = toUInt16(65535), toInt64(128) != toUInt16(65535), toInt64(128) < toUInt16(65535), toInt64(128) <= toUInt16(65535), toInt64(128) > toUInt16(65535), toInt64(128) >= toUInt16(65535), toUInt16(65535) = toInt64(128), toUInt16(65535) != toInt64(128), toUInt16(65535) < toInt64(128), toUInt16(65535) <= toInt64(128), toUInt16(65535) > toInt64(128), toUInt16(65535) >= toInt64(128) , toInt64(128) = toUInt32(65535), toInt64(128) != toUInt32(65535), toInt64(128) < toUInt32(65535), toInt64(128) <= toUInt32(65535), toInt64(128) > toUInt32(65535), toInt64(128) >= toUInt32(65535), toUInt32(65535) = toInt64(128), toUInt32(65535) != toInt64(128), toUInt32(65535) < toInt64(128), toUInt32(65535) <= toInt64(128), toUInt32(65535) > toInt64(128), toUInt32(65535) >= toInt64(128) , toInt64(128) = toInt32(65535), toInt64(128) != toInt32(65535), toInt64(128) < toInt32(65535), toInt64(128) <= toInt32(65535), toInt64(128) > toInt32(65535), toInt64(128) >= toInt32(65535), toInt32(65535) = toInt64(128), toInt32(65535) != toInt64(128), toInt32(65535) < toInt64(128), toInt32(65535) <= toInt64(128), toInt32(65535) > toInt64(128), toInt32(65535) >= toInt64(128) , toInt64(128) = toUInt64(65535), toInt64(128) != toUInt64(65535), toInt64(128) < toUInt64(65535), toInt64(128) <= toUInt64(65535), toInt64(128) > toUInt64(65535), toInt64(128) >= toUInt64(65535), toUInt64(65535) = toInt64(128), toUInt64(65535) != toInt64(128), toUInt64(65535) < toInt64(128), toUInt64(65535) <= toInt64(128), toUInt64(65535) > toInt64(128), toUInt64(65535) >= toInt64(128) , toInt64(128) = toInt64(65535), toInt64(128) != toInt64(65535), toInt64(128) < toInt64(65535), toInt64(128) <= toInt64(65535), toInt64(128) > toInt64(65535), toInt64(128) >= toInt64(65535), toInt64(65535) = toInt64(128), toInt64(65535) != toInt64(128), toInt64(65535) < toInt64(128), toInt64(65535) <= toInt64(128), toInt64(65535) > toInt64(128), toInt64(65535) >= toInt64(128) 
SELECT materialize('Hello') IN (SELECT 'Hello');
CREATE TABLE test_01193_18429.table_10_789 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO t_json_parallel SELECT materialize('{"k1":1, "k2": "some"}') FROM numbers_mt(500000);
SELECT 'Running test stateless/01710_projections_order_by_incomplete.sql from pid=1722' 
CREATE DATABASE IF NOT EXISTS test_l5pcr2k7 
SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l RIGHT JOIN r_lc AS r USING (x) ORDER BY x, r.lc, l.lc;
INSERT INTO src VALUES /* (-77, 2) */ 
SELECT 'Running test stateless/02355_column_type_name_lc.sql from pid=1715' 
SELECT splitByNonAlpha('128.0.0.1');
SELECT 'SELECT toRelativeMinuteNum(N, \'Asia/Istanbul\')';
INSERT INTO test_01193_18429.table_3_416 VALUES 
SELECT a, count() FROM remote('127.0.0.{1,2}', currentDatabase(), local_t) GROUP BY a WITH TOTALS HAVING a IN ( SELECT 1 );
INSERT INTO test_01193_18429.table_1_714 VALUES 
desc format(CSV, '"[[\'2020-01-01\', null, \'1234\'], [\'abcd\']]"');
ALTER TABLE tbl UPDATE xi = d WHERE 1;
INSERT INTO test_01193_18429.table_6_554 VALUES 
CREATE USER u1_01292@'%';
SELECT CAST(toNullable(toFloat32(2)), 'UInt8') as x, toTypeName(x);
SELECT 'aes-256-ofb' AS mode, hex(aes_encrypt_mysql(mode, '[HIDDEN]')) FROM encryption_test
SELECT distinct length(range(number, number + 100, 99)) == 2 FROM numbers(1000);
SELECT 'array-join';
select * from urlCluster('test_cluster_one_shard_three_replicas_localhost', 'http://localhost:11111/test/{a,b}.tsv', 'TSV', 'auto') order by c1, c2, c3;
SELECT map(11::Int128, 'v1', 22::Int128, 'v2') AS m FORMAT JSONEachRow;
SELECT date_trunc('week', toDateTime('2020-01-01 20:11:22', 'Europe/London'), 'Asia/Tokyo');
CREATE TABLE test_01193_18429.table_9_599 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_8_660 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO merge (x) VALUES 
CREATE TABLE test_2E2C6E253B404E6D714A50275074557B5B20794670282A6F3E412A5137792E483F7449416D6B4A6D(x UInt8) Engine=Memory;
CREATE TABLE test_56247C532B2E6A5E62624C4C503E772A423657267D3151674C474A75744A497C5C36393061336762(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_9_15 VALUES 
SELECT 'Running test stateless/02325_dates_schema_inference.sql from pid=1720' 
SELECT CASE WHEN 1 THEN ['foo', col3] WHEN 1 THEN [col4, 'bar'] ELSE [col6, 'bar'] END FROM multi_if_check;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c8)) OR (c1 AND c8) OR (c3 AND c6) OR ((NOT c2) AND c9 AND (NOT c7) AND c5) OR (c4 AND c3 AND (NOT c4) AND (NOT c5) AND (NOT c1)) OR (c0 AND c9 AND (NOT c7) AND (NOT c3) AND c2) OR (c8 AND c0 AND (NOT c3)) OR (c6 AND c4 AND c8 AND (NOT c6) AND (NOT c2)) OR (c7 AND c0 AND (NOT c2) AND (NOT c1)) OR (c5) SETTINGS convert_query_to_cnf = 0
INSERT INTO test_01193_18429.table_3_417 VALUES 
SELECT multiIf((number % 2) = 0, toInt8(1), (number % 3) = 0, toInt64(2), toInt32(3)) FROM system.numbers LIMIT 10;
SELECT multiIf((col1 % 2) = 0, toFixedString(col2, 16), (col1 % 3) = 0, col3, 'baz') FROM multi_if_check;
SELECT data.payload.commits.author.name AS name, count() AS c FROM ghdata ARRAY JOIN data.payload.commits.author.name GROUP BY name ORDER BY c DESC, name LIMIT 5
ALTER TABLE concurrent_alter_column ADD COLUMN c329 DOUBLE;
SELECT *, * APPLY toTypeName FROM ( SELECT * FROM (SELECT 1 :: Int32 as a) t1 RIGHT JOIN (SELECT 2 :: UInt32 as a) t2 USING (a) ) ORDER BY 1;
INSERT INTO test_01193_18429.table_4_527 VALUES 
SET alter_sync = 0;
INSERT INTO test_01193_18429.table_8_149 VALUES 
SELECT * FROM test_02428_pv9(quantity=3)
CREATE DATABASE IF NOT EXISTS test_7hx79sry 
INSERT INTO test_02908_r1_218 SELECT rand64() FROM numbers(5);
CREATE TABLE data_02052_1_wide100000000 (`key` Int, `value` String) ENGINE = MergeTree ORDER BY key SETTINGS min_bytes_for_wide_part = 100000000, index_granularity = 44642, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 95, merge_max_block_size = 14677, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 28374648, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 64490, primary_key_compress_block_size = 37601 AS SELECT number, repeat(toString(number), 5) FROM numbers(1)
INSERT INTO test_01193_18429.table_1_390 VALUES 
CREATE DATABASE IF NOT EXISTS test_nlqn662a 
INSERT INTO src_6 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 75
SELECT * FROM url('http://[2001:db8:1::242:ac11:2]:54943/','JSONAsString');
INSERT INTO test_01193_18429.table_4_365 VALUES 
DROP DATABASE IF EXISTS test_sx1eutes 
CREATE DATABASE IF NOT EXISTS test_r7y7dgx2 
SELECT t1.*, t2.* FROM t1 ANTI RIGHT JOIN t2 USING(x) ORDER BY t1.x, t2.x;
select isInfinite(materialize(1)) = 0;
SELECT multiIf((number % 2) = 0, toInt16(1), (number % 3) = 0, toInt16(2), toInt32(3)) FROM system.numbers LIMIT 10;
ATTACH TABLE bloom_filter_idx_good(`u64` UInt64, `i32` Int32, `f64` Float64, `d` Decimal(10, 2), `s` String, `e` Enum8('a' = 1, 'b' = 2, 'c' = 3), `dt` Date, INDEX bloom_filter_a i32 TYPE bloom_filter(-0.1) GRANULARITY 1) ENGINE = MergeTree() ORDER BY u64 SETTINGS index_granularity = 8192;
SELECT cutIPv6(IPv6StringToNum('2001:0DB8:AC10:FE01:FEED:BABE:CAFE:F00D'), 0, 1);
SELECT number % 2 ? toString(number) : toFixedString(toString(-number), 2) FROM system.numbers LIMIT 10;
SELECT 2 * count(float64) + sum(float64) From test_table;
CREATE TABLE test_01193_18429.table_10_50 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SHOW DICTIONARIES FROM db_01018;
CREATE TABLE test_01193_18429.table_7_589 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT toUInt128OrNull('');
CREATE TABLE mute_stylecheck (`x` UInt32) ENGINE = ReplicatedMergeTree('/clickhouse/tables/02514_database_replicated_no_arguments_for_rmt_test_x39om6em/root', '1') ORDER BY x SETTINGS index_granularity = 30245, min_bytes_for_wide_part = 800762516, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 13388, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 21232879, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 21349, primary_key_compress_block_size = 79460
SELECT * FROM (SELECT * FROM test_00597) ANY LEFT JOIN (SELECT * FROM test_00597) USING id WHERE id = 1 SETTINGS allow_experimental_analyzer=1;
SELECT toUUIDOrZero('59f0c404-5cb3-11e7-907b-a6006ad3dba0T');
SELECT domainWithoutWWW('//paul@www.example.com') AS Host;
select 4 = multiSearchFirstIndexCaseInsensitiveUTF8(materialize('ÃÂÃÂÃÂ°ÃÂÃÂ¡ÃÂÃÂÃÂÃÂÃÂ³ÃÂÃÂ´ÃÂ¨ÃÂºÃÂÃÂÃÂÃÂ¢ÃÂÃÂ»'), ['ÃÂÃÂÃÂÃÂÃÂ¥ÃÂ ÃÂÃÂ¥', 'ÃÂÃÂ²ÃÂÃÂ£ÃÂ¥ÃÂ·ÃÂÃÂÃÂÃÂ±ÃÂÃÂ ÃÂÃÂÃÂ', 'ÃÂÃÂ¼ÃÂÃÂ¶ÃÂ¤ÃÂÃÂÃÂ¶ÃÂÃÂÃÂ¢ÃÂ²', 'ÃÂ¶ÃÂ¡ÃÂÃÂ·ÃÂµÃÂÃÂ³', 'ÃÂÃÂ¤ÃÂÃÂÃÂ·ÃÂÃÂ¡ÃÂ´ÃÂ¦ÃÂ', 'ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ', 'ÃÂÃÂ´ÃÂÃÂºÃÂÃÂ', 'ÃÂÃÂÃÂ¹ÃÂÃÂÃÂÃÂÃÂÃÂÃÂÃÂ²ÃÂ½ÃÂ¤ÃÂÃÂµÃÂ´ÃÂÃÂÃÂ¥', '', 'ÃÂÃÂ¹ÃÂÃÂ¦', 'ÃÂÃÂÃÂ', 'ÃÂÃÂÃÂÃÂ¿ÃÂ´ÃÂÃÂÃÂ', 'ÃÂ·ÃÂ·ÃÂµÃÂÃÂ³ÃÂ¿', 'ÃÂ£ÃÂ³ÃÂÃÂ¹ÃÂ ÃÂ¨ÃÂ¢ÃÂÃÂÃÂÃÂ', 'ÃÂÃÂ·ÃÂÃÂÃÂ³ÃÂ', 'ÃÂÃÂÃÂ¼ÃÂ¢ÃÂ©ÃÂ ÃÂÃÂÃÂ·ÃÂÃÂ±ÃÂ©ÃÂ ÃÂ³ÃÂ¤ÃÂ±ÃÂ¸ÃÂÃÂÃÂ°ÃÂ·ÃÂ£ÃÂ½ÃÂÃÂ£ÃÂ¦']) from system.numbers limit 10;
SELECT arrayMap(x -> range(x), materialize([4,1,2,3])) AS arr, 2 AS lim, arrayResize(arrayPartialSort(lim, arr), lim), arrayResize(arrayPartialReverseSort(lim, arr), lim), arrayResize(arrayPartialSort(x -> -length(x), lim, arr), lim);
CREATE TABLE test_4653487B396D3D724D7D22755F3B435B7547293B2E6D787460795D576E63247E40373E472B6A5821(x UInt8) Engine=Memory;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (7 < 63 AND 7 > 0 ? 7 : 0)), throwIf(last != (7 < 63 AND 7 > 0 ? least(63 - 1, 7 + 7 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(63) LIMIT 7, 7);
SELECT 10, 12, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (10 < 13 AND 12 > 0 ? 10 : 0)), throwIf(last != (10 < 13 AND 12 > 0 ? least(13 - 1, 10 + 12 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 10, 12);
INSERT INTO test_02504 values 
SET custom_c = 50000;
SELECT 'Running test stateless/00527_totals_having_nullable.sql from pid=1726' 
DROP DATABASE IF EXISTS test_x2nv4quk 
DROP DATABASE IF EXISTS test_y5g7muh7 
INSERT INTO test_01193_18429.table_10_320 VALUES 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (44 < 12 AND 38 > 0 ? 44 : 0)), throwIf(last != (44 < 12 AND 38 > 0 ? least(12 - 1, 44 + 38 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(12) LIMIT 44, 38);
select polygonsWithinSpherical([[[(4.3501568, 50.8518269), (4.3444920, 50.8439961), (4.3565941, 50.8443213), (4.3501568, 50.8518269)]]], [[[(4.3679450, 50.8524550),(4.3466930, 50.8583060),(4.3380740, 50.8486770),(4.3449610, 50.8332640),(4.3662270, 50.8408090),(4.3679450, 50.8524550)]]]);
CREATE TABLE test_01193_18429.table_4_962 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/02707_clickhouse_local_implicit_file_table_function.sh from pid=1713' 
CREATE TABLE test_01193_18429.table_1_932 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_5_10 VALUES 
CREATE TABLE test_02908_r2_138 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_138', 'r2') ORDER BY tuple()
SELECT CASE WHEN (number % 2) = 0 THEN toUInt32(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toUInt8(3) END FROM system.numbers LIMIT 10;
SELECT arrayReduce('maxOrDefault', [1]);
select 1670853969::DateTime64(3, 'UTC');
CREATE DATABASE IF NOT EXISTS test_y8yci9zt 
SELECT multiIf(1, toFixedString(col2, 16), 1, col3, toFixedString(col4, 16)) FROM multi_if_check;
CREATE INDEX idx_tab4_0 ON tab4 (col0,col3,col1);
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c9) AND c9 AND (NOT c6)) OR ((NOT c2) AND c7 AND c7 AND (NOT c8) AND c0) OR (c0 AND c0 AND (NOT c6) AND c1 AND (NOT c1)) OR (c1) OR (c6 AND c9 AND (NOT c4)) OR (c4 AND (NOT c8) AND c0 AND (NOT c4) AND c2) SETTINGS convert_query_to_cnf = 0
SELECT multiIf((number % 2) = 0, [toInt8(1), toInt8(2)], (number % 3) = 0, [toInt16(2), toInt16(3)], [toFloat64(3), toFloat64(3)]) FROM system.numbers LIMIT 10;
insert into test_byte_size_array values
INSERT INTO src_5 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 5
CREATE TABLE test_01193_18429.table_2_810 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'SELECT toUInt16(1) != N';
DROP DATABASE IF EXISTS test_zwbhz902 
SELECT __getScalar(NULL);
CREATE TABLE test_02908_r1_144 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_144', 'r1') ORDER BY tuple()
CREATE TABLE dist_as_foo Engine=Distributed(test_shard_localhost, currentDatabase(), 'foo') AS foo;
SELECT * FROM system.data_type_families LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
SELECT _shard_num FROM clusterAllReplicas('test_shard_localhost', system.one);
INSERT INTO test_01193_18429.table_9_335 VALUES 
SELECT dateDiff('second', toDateTime('2015-08-18 00:00:00', 'UTC'), toDateTime64('2015-08-18 00:00:10', 3, 'UTC'));
CREATE INDEX idx_tab4_2 ON tab4 (col4,col3 DESC);
SELECT 'init';
CREATE DATABASE IF NOT EXISTS test_v133fj8e 
CREATE TABLE t (`x` Int32, `codectest` Int32) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 51454, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 118, merge_max_block_size = 13186, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 10042763, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 82469, primary_key_compress_block_size = 16590
SELECT isValidJSON('"HX-=');
INSERT INTO test_01193_18429.table_8_562 VALUES 
SELECT ten, sum(unique1) + sum(unique2) AS res, rank() OVER (ORDER BY sum(unique1) + sum(unique2) ASC) AS rank FROM test_01655_plan_optimizations_optimize_read_in_window_order_complex GROUP BY ten ORDER BY ten ASC SETTINGS optimize_read_in_order=0,optimize_read_in_window_order=0
CREATE TABLE tab (`x` UInt128) ENGINE = MergeTree ORDER BY x SETTINGS allow_nullable_key = 1, index_granularity = 2, min_bytes_for_wide_part = 967338630, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 14733, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 9238391843, index_granularity_bytes = 3818021, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 61027, primary_key_compress_block_size = 39774
CREATE TABLE test_02908_r1_28 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_28', 'r1') ORDER BY tuple()
SELECT count() FROM lc_nullable WHERE has(i64, 10);
SELECT NOT x, isZeroOrNull(x) FROM (SELECT arrayJoin([1, 2, 3, NULL]) = 3 AS x);
INSERT INTO test_01193_18429.table_1_409 VALUES 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toStartOfFiveMinutes(N, 'Asia/Istanbul') as r FORMAT CSV;
INSERT INTO test_01193_18429.table_5_263 VALUES 
SELECT 'Running test stateless/01780_column_sparse_pk.sql from pid=1714' 
SELECT accurateCastOrNull(128, 'Int8');
DROP DATABASE IF EXISTS test_s2n8bov3 
SELECT 'Hashed dictionary';
select cityHash64(hex( sumMapState(map(ip, 1::Int64)) )) AS sumMapState, cityHash64(hex( minMapState(map(ip, 1::Int64)) )) AS minMapState, cityHash64(hex( maxMapState(map(ip, 1::Int64)) )) AS maxMapState from ( SELECT toIPv6(IPv6NumToString(toFixedString(reinterpretAsFixedString(number)||reinterpretAsFixedString(number), 16))) AS ip FROM numbers(1010011101, 1) order by ip ) format Vertical;
CREATE TABLE test_01193_18429.table_10_746 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (15 < 75 AND 99 > 0 ? 15 : 0)), throwIf(last != (15 < 75 AND 99 > 0 ? least(75 - 1, 15 + 99 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(75) LIMIT 15, 99);
CREATE TABLE test_615353793E654A6D205B4B677B792748407D7276744E58537B467863465C50293A384B2A207A3A75(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_bw2zxr5c 
SHOW CREATE TABLE codecs8;
SELECT multiIf((number % 2) = 0, toUInt32(1), (number % 3) = 0, toFloat32(2), toUInt8(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_7_735 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE DATABASE IF NOT EXISTS test_s9qax32x 
DROP DATABASE IF EXISTS test_mlouecdc 
INSERT INTO test_00645 VALUES 
INSERT INTO test_01193_18429.table_4_789 VALUES 
SELECT 'Running test stateless/02705_projection_and_ast_optimizations_bug.sql from pid=1720' 
select parseDateTimeInJodaSyntax('1 AM', 'h a', 'UTC') = toDateTime('1970-01-01 01:00:00', 'UTC');
SELECT avgOrDefaultIfMerge(state) FROM (SELECT avgOrDefaultIfState(x, x > 1) AS state FROM (SELECT 1 AS x));
SELECT 'Running test stateless/00680_duplicate_columns_inside_union_all.sql from pid=1718' 
CREATE TABLE test_57367E6A603E242A5D5D583E73275B223E767A3E5D332C3377792D43237A653E4C3172556D477361(x UInt8) Engine=Memory;
SELECT partition, name FROM system.parts WHERE database = currentDatabase() AND table = 'partitioned_by_tuple_replica1_00502' AND active ORDER BY name;
DROP DATABASE IF EXISTS test_zmszqgx3 
INSERT INTO test_01193_18429.table_1_419 VALUES 
SELECT medianExactHigh(NULL);
SELECT * FROM system.zookeeper_connection LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
CREATE DATABASE IF NOT EXISTS test_aj7pbuwz 
CREATE TABLE multi_if_check(col1 UInt64, col2 String, col3 String, col4 String) ENGINE=TinyLog;
CREATE DICTIONARY ordinary_db.dict1 (`key_column` UInt64 DEFAULT 0, `second_column` UInt8 DEFAULT 1, `third_column` String DEFAULT 'qqq') PRIMARY KEY key_column SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'view_for_dict' PASSWORD '[HIDDEN]' DB 'ordinary_db')) LIFETIME(MIN 1 MAX 3) LAYOUT(CACHE(SIZE_IN_CELLS 3))
select arrayReduce('uniqResample(1, 7, 1)', [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);
CREATE TABLE test_3C4539422F703C2B324F336529512E61366A6F60557D446C7C277E4C5230614A4D5B73416D414439(x UInt8) Engine=Memory;
INSERT INTO r7 SELECT 63
INSERT INTO null_subcolumns VALUES 
CREATE INDEX idx_tab3_2 ON tab3 (col0 DESC,col4);
INSERT INTO test_local VALUES
SELECT parseDateTimeBestEffort('2020-05-14 11:37:03 PM', 3, 'UTC') AS a, toTypeName(a);
CREATE WINDOW VIEW test_kna0pcoi.wv INNER ENGINE = AggregatingMergeTree ORDER BY hop(test_kna0pcoi.mt.timestamp, toIntervalSecond('1'), toIntervalSecond('3')) ENGINE = Memory AS SELECT count(test_kna0pcoi.mt.a), count(test_kna0pcoi.mt_2.b), wid FROM test_kna0pcoi.mt INNER JOIN test_kna0pcoi.mt_2 ON test_kna0pcoi.mt.timestamp = test_kna0pcoi.mt_2.timestamp GROUP BY hop(test_kna0pcoi.mt.timestamp, toIntervalSecond('1'), toIntervalSecond('3')) AS wid
alter table data_01900_2 update s = 'bar_21' where 1;
explain query tree select * from (select * from bug where k=1 or k=2 or k=3) where (s=21 or s=22 or s=23) SETTINGS allow_experimental_analyzer = 1;
DROP TABLE without_fixed_size_columns;
CREATE DATABASE IF NOT EXISTS test_cslogx8v 
SELECT 'Running test stateless/02560_window_ntile.sql from pid=1713' 
SELECT arrayPartialShuffle(groupArray(x),20,0xbad_cafe) FROM (SELECT number as x from system.numbers LIMIT 100);
DROP DATABASE IF EXISTS test_bvojas31 
SELECT ProfileEvents['S3ReadRequestsCount'], ProfileEvents['ReadBufferFromS3Bytes'], ProfileEvents['ReadCompressedBytes'] FROM system.query_log WHERE type = 'QueryFinish' AND current_database = currentDatabase() AND query_id='81a80f12-029a-44d1-a75d-a385838bdcc0';
select toYYYYMMDD(toDate(recordTimestamp, 'Europe/Amsterdam')), toDate(recordTimestamp, 'Europe/Amsterdam'), toUInt32(1665519765) as recordTimestamp, toTypeName(recordTimestamp);
SELECT 1.5 / 1.5::Decimal32(5);
CREATE TABLE test_01193_18429.table_1_956 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_8_794 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO source_table_dictionary VALUES 
SELECT number FROM numbers(10)
BACKUP TABLE data_read TO S3('http://localhost:11111/test/s3_plain/backups/ordinary_test_jku2kyfv', 'test', '[HIDDEN]')
SELECT CASE WHEN (number % 2) = 0 THEN [toInt32(1), toInt32(2)] WHEN (number % 3) = 0 THEN [toUInt32(2), toUInt32(3)] ELSE [toUInt16(3), toUInt16(3)] END FROM system.numbers LIMIT 10;
SELECT intDivOrZero(4.2, toDecimal64(2.2, 2));
RENAME TABLE table_for_renames27 TO table_for_renames28
SELECT '*** queue unfreeze';
INSERT INTO defaults (x, y) SELECT x, y FROM defaults LIMIT 1;
CREATE INDEX idx_tab4_1 ON tab4 (col3 DESC);
INSERT INTO test_01193_18429.table_6_128 VALUES 
DROP TABLE IF EXISTS concurrent_mutate_kill SYNC
SELECT '--- and or ---';
SELECT `a`, `b`, `c`, sum(`a`) AS `s` FROM `test_xtzme6yk`.`t_2354_dist_with_external_aggr` GROUP BY `a`, `b`, `c`
drop table if exists tbl_8parts_5granules_seq;
DROP DATABASE IF EXISTS test_ddyypyur 
SELECT dictGet('database_for_range_dict.range_dictionary_nullable', 'Tax', toUInt64(1), toDate('2019-05-15'));
INSERT INTO test_01193_18429.table_10_527 VALUES 
INSERT INTO test_01193_18429.table_9_367 VALUES 
SELECT appendTrailingCharIfAbsent(NULL, NULL);
SELECT count(), min(x), max(x), sum(x), uniqExact(x) FROM sample_00276 SAMPLE 1/1e1;
SELECT YYYYMMDDToDate(toDecimal64(19691231.1, 5));
SELECT dictGet('test_dictionary', 'insert_time', toUInt64(1), 10);
INSERT INTO signed_table(k, v, s) VALUES 
CREATE TABLE test_01193_18429.table_1_752 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT joinGetOrNull('join_test', 'num', 500);
SELECT '*** Test updating according to a predicate ***'
SELECT intDiv(b, c) FROM test_filter PREWHERE c != 0 WHERE b%2 != 0;
SELECT 'ANY INNER | join_use_nulls = 1';
CREATE TABLE test_734C6B6E5760213F252A362053352524666324265670745F7E5C6445695A385D543F24424A67323F(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_1_511 VALUES 
SELECT concatWithSeparator('|', 'a', materialize(44 :: Int32)) == 'a|44';
select a1 from tab1 any left join tab2 on b1 + 1 = a2 + 1;
SELECT 'Running test stateless/00804_test_alter_compression_codecs.sql from pid=1724' 
CREATE TABLE test_633762323A2A2D3C6034595975637E7E553F4B6B7444757B227A4D4D3F242B5E7E787226222A6062(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_rvmb8uxy 
CREATE TABLE distributed_tf as cluster('test' || '_' || 'shard_localhost', '', 'buf' || 'fer');
SELECT value FROM system.merge_tree_settings WHERE name = 'min_bytes_for_wide_part' 
drop table squashed_numbers
SELECT toRelativeYearNum(toDateTime(1412106600), 'Pacific/Pitcairn') - toRelativeYearNum(toDateTime(0), 'Pacific/Pitcairn');
INSERT INTO test_01193_18429.table_2_672 VALUES 
CREATE DATABASE IF NOT EXISTS test_zhxogtvw 
CREATE DATABASE IF NOT EXISTS test_7crbft12 
INSERT INTO 02181_test_table VALUES 
select * from (select untuple((1,2)));
CREATE DATABASE IF NOT EXISTS test_6yrcv28k 
SELECT 'Running test stateless/02737_arrayJaccardIndex.sql from pid=1726' 
CREATE TABLE t (`i` int, `j` int) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 64982, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 6887, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 6986397265, index_granularity_bytes = 14912881, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 56002, primary_key_compress_block_size = 79054
CREATE DATABASE IF NOT EXISTS test_n9y51k4l 
INSERT INTO test_01193_18429.table_10_185 VALUES 
SELECT toStartOfDay(toDateTime(1412106600), 'Asia/Tokyo');
INSERT INTO t_delay_mutations VALUES 
DROP DATABASE IF EXISTS test_0u79lbot 
SELECT 25,'Hello',bin(bitShiftRight('Hello', 25));
alter table many_mutations delete where y = 53 * 2 settings mutations_sync = 0;
CREATE TABLE test_7A6E4A296136486D44245C6678453D4D5E6F20254256322378294D67667A796F446E7C5D682E7056(x UInt8) Engine=Memory;
CREATE TABLE test_4A285D517121717C4F2961755D57283F55573B33265E772545476F5C3E753334572B7C7A5370215D(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_9_680 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'Running test stateless/02668_ulid_decoding.sql from pid=1713' 
EXPLAIN SYNTAX SYSTEM DROP FORMAT SCHEMA CACHE FOR Protobuf;
SELECT hex(SHA224('test'));
INSERT INTO t_sparse_mutations_2 SELECT 1, number, toString(number) FROM numbers (10000);
DROP DATABASE IF EXISTS test_vqpo0197 
SELECT toDateTime('2015-02-03 04:05:06') = '2015-02-03 05:06:07';
select [1] = multiSearchAllPositions(materialize('abcdefgh'), ['abc']) from system.numbers limit 10;
SELECT 'Running test stateless/00341_squashing_insert_select2.sql from pid=1718' 
/* toStartOfMinute */ SELECT 'toStartOfMinute';
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (46 < 47 AND 90 > 0 ? 46 : 0)), throwIf(last != (46 < 47 AND 90 > 0 ? least(47 - 1, 46 + 90 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(47) LIMIT 46, 90);
CREATE TABLE test_3F2A5C46584C217657277A60473B40537E6F50796B713C3665566A3A7B69604179403E315423503F(x UInt8) Engine=Memory;
DROP TABLE mt_compact
DROP DATABASE IF EXISTS test_byfzbi0j 
CREATE TABLE test_406573462B4E71427966643C2E4E79267D58413A73362E2A5E6A6066663365637766694F40606227(x UInt8) Engine=Memory;
CREATE TABLE test_5B42684C356057376C63357E3969594C4C6F3B282F3B7359397D6D76384354232D392E7437456D36(x UInt8) Engine=Memory;
select maxMap(val, cnt) from values ('val Array(UInt64), cnt Array(UInt64)', ([1], [1]), ([1], [2]));
INSERT INTO t_async_insert FORMAT TSVRawWithNamesAndTypes 
DROP DATABASE IF EXISTS test_7po6rd8v 
select 5 = position('abcdefgh', materialize('efgh'));
CREATE TABLE test_01193_18429.table_7_530 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP TABLE alt_persons_00825;
INSERT INTO test_01193_18429.table_3_68 VALUES 
SELECT CASE WHEN 1 THEN toFixedString('foo', 16) WHEN 1 THEN col3 ELSE toFixedString(col4, 16) END FROM multi_if_check;
alter table many_mutations delete where y = 603 * 2 settings mutations_sync = 0;
CREATE TABLE t_json_field (`id` UInt32, `data` JSON) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 57192, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 3953, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 85, min_merge_bytes_to_use_direct_io = 5966860425, index_granularity_bytes = 23920141, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 24607, primary_key_compress_block_size = 84285
INSERT INTO test_nhc2r4ib.async_inserts FORMAT CSV
SELECT * FROM system.numbers LIMIT 1000 FORMAT Arrow
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c9) AND (NOT c9) AND (NOT c3) AND c8 AND c1) OR (c7 AND (NOT c9) AND (NOT c2) AND c7) OR (c8) OR (c0 AND c8 AND c0 AND c2 AND (NOT c9)) SETTINGS convert_query_to_cnf = 1
CREATE TABLE test_4E67367D7E756769235B6156287B4E223A4B2540466F47582345617149343B533064787C373C755D(x UInt8) Engine=Memory;
INSERT INTO src_13 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 22
SELECT regionToTopContinent(NULL, NULL, NULL);
CREATE TABLE test_01193_18429.table_3_170 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
set input_format_arrow_import_nested=1;
CREATE TABLE test_4E2C215F244963353D565E49293F373E2F2D4E6365334066467B707A54602C5B29553F4626402F6F(x UInt8) Engine=Memory;
SELECT a, t1.a, t2.a FROM t1 RIGHT JOIN t2 USING (a) ORDER BY (t1.a, t2.a) SETTINGS allow_experimental_analyzer = 1;
CREATE INDEX idx_tab4_0 ON tab4 (col3,col4,col1);
select 11111;
SELECT BIT_AND(NULL);
SET use_index_for_in_with_subqueries = 1;
SELECT regionToDistrict(NULL);
INSERT INTO test_01193_18429.table_1_612 VALUES 
CREATE TABLE test_01193_18429.table_5_578 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE DATABASE IF NOT EXISTS test_iqjqu4qs 
set group_by_two_level_threshold=100;
CREATE TABLE test_02908_r3_44 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_44', 'r3') ORDER BY tuple()
SELECT k, y FROM (SELECT arrayJoin([1, 2, 3]) AS k, 'Hello' AS x) ANY RIGHT JOIN (SELECT range(k) AS y, arrayJoin([3, 4, 5]) AS k) USING k WHERE k < 10 ORDER BY k;
CREATE TABLE test_3A703B686961474C2E2B463A27266B452F515F3F384B3267546D6B5461547D69715C253640602D4B(x UInt8) Engine=Memory;
SELECT startsWithUTF8('123', '123');
CREATE DATABASE IF NOT EXISTS test_n9car43s 
SELECT multiIf((number % 2) = 0, toUInt8(1), (number % 3) = 0, toUInt64(2), toUInt64(3)) FROM system.numbers LIMIT 10;
drop table largestTriangleThreeBucketsTestDateTime64Float64;
SELECT toString(NULL, NULL, NULL);
INSERT INTO test_02908_r1_181 SELECT rand64() FROM numbers(5);
select JSONExtractString('{"abc":"\\u263"}', 'abc');
DETACH TABLE columns_with_multiple_streams;
INSERT INTO test_01193_18429.table_9_465 VALUES 
SELECT dictGet('ssd_cache_dictionary', 'array_value', toUInt64(0));
DROP DATABASE IF EXISTS test_djjes0q3 
INSERT INTO test_01193_18429.table_6_456 VALUES 
INSERT INTO test_01193_18429.table_10_243 VALUES 
CREATE TABLE test_2676363926753558382E712E736C7042683176637937252E3F2072466D3239543D6A4D347E755C6B(x UInt8) Engine=Memory;
SELECT k FROM t2 LEFT ANTI JOIN rdb ON rdb.key == t2.k ORDER BY k;
select c2, count(*) from group_by_null_key group by ROLLUP(c2);
SELECT tuple([NULL],[NULL]);
DROP DATABASE IF EXISTS test_9ulamhzs 
drop table tsv;
CREATE DATABASE IF NOT EXISTS test_2cdqw5dw 
CREATE TABLE test_01193_18429.table_3_421 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP DATABASE IF EXISTS test_qre9kwn4 
CREATE TABLE foo_local (`bar` UInt64) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 5400, min_bytes_for_wide_part = 906584028, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 10439, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 62686519, index_granularity_bytes = 23688280, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 30641, primary_key_compress_block_size = 49375
SELECT CASE WHEN (col1 % 2) = 0 THEN 'foo' WHEN 1 THEN toFixedString(col3, 16) ELSE toFixedString(col4, 16) END FROM multi_if_check;
CREATE TABLE x AS system.numbers ENGINE = MergeTree ORDER BY number SETTINGS index_granularity = 53750, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 13321, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 852744, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 7871776591, index_granularity_bytes = 7323882, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 70946, primary_key_compress_block_size = 86416
select finalizeAggregation( anyState(ip) ) AS any, finalizeAggregation( anyHeavyState(ip) ) AS anyHeavy, finalizeAggregation( anyLastState(ip) ) AS anyLast from ( select number::UInt32::IPv4 ip from numbers(999999999,1) order by ip ) format Vertical;
CREATE DATABASE IF NOT EXISTS test_jubxws22 
select [5] = multiSearchAllPositions(materialize('abcdefgh'), ['efgh']) from system.numbers limit 10;
CREATE TABLE test_01193_18429.table_5_247 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP DATABASE IF EXISTS test_70y7fn9u 
CREATE TABLE test_02908_r3_246 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_246', 'r3') ORDER BY tuple()
CREATE TABLE test_01193_18429.table_7_594 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
set allow_experimental_analyzer = true;
SELECT age('day', toDateTime64('2015-01-01 20:30:36.200101', 6, 'UTC'), toDateTime64('2015-01-04 20:30:36.200100', 6, 'UTC'));
DROP TABLE compression_codec_multiple_more_types;
DROP DATABASE IF EXISTS test_j1zphlnt 
CREATE TABLE async_inserts (id UInt32, s String) ENGINE = Memory
CREATE TABLE test_01193_18429.table_8_972 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_1_661 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP TABLE IF EXISTS uuid;
SELECT t.x, l.s, r.s, toTypeName(l.s), toTypeName(r.s) FROM t AS l LEFT JOIN nr AS r USING (x) ORDER BY t.x;
CREATE INDEX idx_tab3_1 ON tab3 (col4 DESC,col1 DESC,col3 DESC);
DROP TABLE IF EXISTS array_jaccard_index;
DROP ROW POLICY IF EXISTS 02763_filter_4 ON 02763_merge_merge_1;
CREATE ROW POLICY filter ON t USING (x % 2 = 1) TO ALL;
SELECT -0.1::Decimal(38, 38);
DROP DATABASE IF EXISTS test_tq1skqhl 
SELECT count() FROM (SELECT * FROM 02919_test_table_valid_args LIMIT 100);
GRANT SELECT(col1) ON db3.table TO test_user_01073;
INSERT INTO r8 SELECT 11 % 10 = 8 ? 11 - 1 : 11
CREATE TABLE test_765B67407220544763253F745E79527E5E7E59747451647346623834605B56426A7A353176473E6D(x UInt8) Engine=Memory;
SELECT quantileTDigest(NULL, NULL, NULL);
DROP TABLE summing_00155
select num_columns, num_rows, num_row_groups from file(big_column_chunk_02735.parquet, ParquetMetadata);
drop table if exists in_02232;
set allow_experimental_window_view = 1;
ALTER TABLE test_move_partition_throttling MOVE PARTITION tuple() TO VOLUME 'remote' SETTINGS max_remote_write_network_bandwidth=1600000;
CREATE TABLE bloom_filter_array_offsets_i (`order_key` int, `i` Array(int), INDEX idx i TYPE bloom_filter(1.) GRANULARITY 1024) ENGINE = MergeTree ORDER BY order_key SETTINGS index_granularity = 1024, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 9045, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 74651, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 3414402093, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 36268, primary_key_compress_block_size = 59407
SELECT 39,toFixedString('Hello', 10), bin(bitShiftRight(toFixedString('Hello', 10), 39));
CREATE TABLE test_4870672364495C2C3B592F2D48283C4B6B27653B2A726C7B22203B57314C43317B643A5C26664932(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_1_191 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'Running test stateless/02962_join_using_bug_57894.sql from pid=1715' 
CREATE DATABASE IF NOT EXISTS test_9dlbvxky 
CREATE TABLE test_lot_of_parts (`a` String, `b` LowCardinality(String), `c` DateTime64(3), `val` String) ENGINE = MergeTree ORDER BY (a, b, c) SETTINGS parts_to_delay_insert = 0, index_granularity = 47871, min_bytes_for_wide_part = 453881460, ratio_of_defaults_for_sparse_serialization = 0.8508987426757812, replace_long_file_name_to_hash = false, max_file_name_length = 97, merge_max_block_size = 1396, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 30738613, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 54559, primary_key_compress_block_size = 83493
SELECT '1', '-4503599627370496.000000000', 1 = -4503599627370496.000000000, 1 != -4503599627370496.000000000, 1 < -4503599627370496.000000000, 1 <= -4503599627370496.000000000, 1 > -4503599627370496.000000000, 1 >= -4503599627370496.000000000, -4503599627370496.000000000 = 1, -4503599627370496.000000000 != 1, -4503599627370496.000000000 < 1, -4503599627370496.000000000 <= 1, -4503599627370496.000000000 > 1, -4503599627370496.000000000 >= 1 , toUInt8(1) = -4503599627370496.000000000, toUInt8(1) != -4503599627370496.000000000, toUInt8(1) < -4503599627370496.000000000, toUInt8(1) <= -4503599627370496.000000000, toUInt8(1) > -4503599627370496.000000000, toUInt8(1) >= -4503599627370496.000000000, -4503599627370496.000000000 = toUInt8(1), -4503599627370496.000000000 != toUInt8(1), -4503599627370496.000000000 < toUInt8(1), -4503599627370496.000000000 <= toUInt8(1), -4503599627370496.000000000 > toUInt8(1), -4503599627370496.000000000 >= toUInt8(1) , toInt8(1) = -4503599627370496.000000000, toInt8(1) != -4503599627370496.000000000, toInt8(1) < -4503599627370496.000000000, toInt8(1) <= -4503599627370496.000000000, toInt8(1) > -4503599627370496.000000000, toInt8(1) >= -4503599627370496.000000000, -4503599627370496.000000000 = toInt8(1), -4503599627370496.000000000 != toInt8(1), -4503599627370496.000000000 < toInt8(1), -4503599627370496.000000000 <= toInt8(1), -4503599627370496.000000000 > toInt8(1), -4503599627370496.000000000 >= toInt8(1) , toUInt16(1) = -4503599627370496.000000000, toUInt16(1) != -4503599627370496.000000000, toUInt16(1) < -4503599627370496.000000000, toUInt16(1) <= -4503599627370496.000000000, toUInt16(1) > -4503599627370496.000000000, toUInt16(1) >= -4503599627370496.000000000, -4503599627370496.000000000 = toUInt16(1), -4503599627370496.000000000 != toUInt16(1), -4503599627370496.000000000 < toUInt16(1), -4503599627370496.000000000 <= toUInt16(1), -4503599627370496.000000000 > toUInt16(1), -4503599627370496.000000000 >= toUInt16(1) , toInt16(1) = -4503599627370496.000000000, toInt16(1) != -4503599627370496.000000000, toInt16(1) < -4503599627370496.000000000, toInt16(1) <= -4503599627370496.000000000, toInt16(1) > -4503599627370496.000000000, toInt16(1) >= -4503599627370496.000000000, -4503599627370496.000000000 = toInt16(1), -4503599627370496.000000000 != toInt16(1), -4503599627370496.000000000 < toInt16(1), -4503599627370496.000000000 <= toInt16(1), -4503599627370496.000000000 > toInt16(1), -4503599627370496.000000000 >= toInt16(1) , toUInt32(1) = -4503599627370496.000000000, toUInt32(1) != -4503599627370496.000000000, toUInt32(1) < -4503599627370496.000000000, toUInt32(1) <= -4503599627370496.000000000, toUInt32(1) > -4503599627370496.000000000, toUInt32(1) >= -4503599627370496.000000000, -4503599627370496.000000000 = toUInt32(1), -4503599627370496.000000000 != toUInt32(1), -4503599627370496.000000000 < toUInt32(1), -4503599627370496.000000000 <= toUInt32(1), -4503599627370496.000000000 > toUInt32(1), -4503599627370496.000000000 >= toUInt32(1) , toInt32(1) = -4503599627370496.000000000, toInt32(1) != -4503599627370496.000000000, toInt32(1) < -4503599627370496.000000000, toInt32(1) <= -4503599627370496.000000000, toInt32(1) > -4503599627370496.000000000, toInt32(1) >= -4503599627370496.000000000, -4503599627370496.000000000 = toInt32(1), -4503599627370496.000000000 != toInt32(1), -4503599627370496.000000000 < toInt32(1), -4503599627370496.000000000 <= toInt32(1), -4503599627370496.000000000 > toInt32(1), -4503599627370496.000000000 >= toInt32(1) , toUInt64(1) = -4503599627370496.000000000, toUInt64(1) != -4503599627370496.000000000, toUInt64(1) < -4503599627370496.000000000, toUInt64(1) <= -4503599627370496.000000000, toUInt64(1) > -4503599627370496.000000000, toUInt64(1) >= -4503599627370496.000000000, -4503599627370496.000000000 = toUInt64(1), -4503599627370496.000000000 != toUInt64(1), -4503599627370496.000000000 < toUInt64(1), -4503599627370496.000000000 <= toUInt64(1), -4503599627370496.000000000 > toUInt64(1), -4503599627370496.000000000 >= toUInt64(1) , toInt64(1) = -4503599627370496.000000000, toInt64(1) != -4503599627370496.000000000, toInt64(1) < -4503599627370496.000000000, toInt64(1) <= -4503599627370496.000000000, toInt64(1) > -4503599627370496.000000000, toInt64(1) >= -4503599627370496.000000000, -4503599627370496.000000000 = toInt64(1), -4503599627370496.000000000 != toInt64(1), -4503599627370496.000000000 < toInt64(1), -4503599627370496.000000000 <= toInt64(1), -4503599627370496.000000000 > toInt64(1), -4503599627370496.000000000 >= toInt64(1) ;
SELECT groupArray(name) FROM system.columns WHERE database = currentDatabase() AND table = 'test';
SELECT 'Running test stateless/00300_csv.sql from pid=1720' 
DROP DATABASE IF EXISTS test_nhvi619e 
INSERT INTO test_01193_18429.table_10_921 VALUES 
DROP TABLE deduplication;
DROP TABLE 02702_logical_optimizer;
DROP DATABASE IF EXISTS test_kmhacd9z 
SELECT 'Running test stateless/01447_json_strings.sql from pid=1722' 
EXPLAIN SYNTAX SELECT 1 UNION ALL ( SELECT 1 UNION DISTINCT ( SELECT 1 UNION ALL SELECT 1 ) UNION ALL SELECT 1 );
INSERT INTO table_for_mutations select number, number from numbers(100000)
DROP DATABASE IF EXISTS test_5fwk4q6g 
INSERT INTO test_01193_18429.table_9_168 VALUES 
select concat(materialize(toFixedString('a', 1)), toFixedString('b', 1)) == 'ab';
select tuple(number) >= tuple(toNullable(number)) from numbers(1);
SELECT nan AS lhs, cast(nan, 'Float32') AS rhs, lhs != rhs, lhs != materialize(rhs), materialize(lhs) != rhs, materialize(lhs) != materialize(rhs);
INSERT INTO test_01193_18429.table_7_60 VALUES 
system drop schema cache for file
CREATE TABLE defaults ( n Int32, s String )ENGINE = Memory();
SELECT one.* FROM one;
SET max_rows_to_read = 1;
select '# byteSize';
CREATE DATABASE IF NOT EXISTS test_gldgifmo 
CREATE TABLE test_01193_18429.table_5_299 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Running test stateless/02185_arraySlice_negative_offset_size.sql from pid=1724' 
select count() from partslost_0;
SELECT COUNT() FROM bloom_filter_array_types_test WHERE has(u8, 10);
SELECT intDiv(NULL, NULL);
alter table many_mutations delete where y = 660 * 2 settings mutations_sync = 0;
CREATE TABLE test2 (`x` UInt8) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 17659, min_bytes_for_wide_part = 516794630, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 776, prefer_fetch_merged_part_size_threshold = 5611430954, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 2737200345, index_granularity_bytes = 26859131, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 11580, primary_key_compress_block_size = 62611
CREATE TABLE test_01193_18429.table_9_259 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE csv (s1 String, s2 String) ENGINE = Memory
select arrayAUC([0.1, 0.4, 0.35, 0.8], [0, 0, 1, 1]);
SELECT dateDiff('week', toDate32('1927-01-01', 'UTC'), toDateTime64('1927-01-08 00:00:00', 3, 'UTC'), 'UTC');
SELECT 'Running test stateless/00119_storage_join.sql from pid=1715' 
INSERT INTO minmax_idx2_r VALUES 
INSERT INTO test_01193_18429.table_3_250 VALUES 
SELECT t1.a, t2.b, t3.b, t4.b FROM t1, t2, t3, t4 WHERE t1.b = t2.b AND t1.b = t3.b AND t1.b = t4.b;
insert into t_00712_2 values 
SELECT `number` FROM `system`.`numbers` WHERE (`number` % 2) = 1 LIMIT 10
alter table many_mutations delete where y = 402 * 2 settings mutations_sync = 0;
SELECT toUInt8OrDefault(NULL);
SELECT a FROM m ORDER BY a LIMIT 5
CREATE TABLE test_527B535F7B58623B4A784D424B3F6454397776753A774D387C3D505641244D55727B6D4076356B73(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS prewhere_move;
SELECT bitShiftRight(CAST(1 AS Int8),CAST( 0 AS Nullable(Int8)));
select '-- create table with not only primary key columns';
ALTER TABLE minmax_compact ADD INDEX idx (i64, u64 * i64) TYPE minmax GRANULARITY 1;
DROP TABLE IF EXISTS replicated_table_detach_all1;
CREATE TABLE test_01193_18429.table_4_309 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT count() FROM test_alias;
SELECT diff, traf FROM order_by_nulls_first ORDER BY diff ASC NULLS FIRST, traf ASC;
CREATE TABLE test_58412940675C6E314E3C297757317D6A3047384A6D5221595F7A314322485A202952297B7248595A(x UInt8) Engine=Memory;
INSERT INTO test_02559 VALUES 
SELECT t.t FROM (SELECT (1, 's') :: Tuple(t Int32, s String) as t ) as na, (SELECT 1 as t ) as t;
desc file(dump9.sql, MySQLDump) settings input_format_mysql_dump_table_name='test'
SELECT * FROM ( SELECT number, number, number, number, number, number + 1 as k, k, k FROM numbers(5) ) as t1 FULL JOIN ( SELECT number, number, number, number + 1 as k, k, k, k, k FROM numbers(3, 8) ) as t2 USING (k) ORDER BY k ;
SELECT '--JSONKey--';
SELECT uniq(user_id) a, min(_sample_factor) x, a*x FROM sessions SAMPLE 10000000;
DETACH TABLE large_alter_table_00804;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), N + toInt32(-1) as r FORMAT CSV;
attach table data (key Int) engine=MergeTree() order by key settings max_suspicious_broken_parts=0, disk=disk(type=s3_plain, endpoint='http://localhost:11111/test/s3_plain/backups/ordinary_test_ay2rtedd', access_key_id='test', secret_access_key='testtest');
CREATE TABLE test_4D2774262A73775D763B3C643A5727213C4A273E414E256B6C704B70396C4E7452494B39755A3A58(x UInt8) Engine=Memory;
EXPLAIN SYNTAX SELECT '2010-10-10'::Date AS c;
INSERT INTO test_table_7 VALUES 
SELECT * FROM map_test_index_map_keys WHERE map['K0'] != 'V0' SETTINGS force_data_skipping_indices='map_bloom_filter_keys';
CREATE TABLE test_01193_18429.table_8_41 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT 'ALL LEFT | join_use_nulls = 1';
SELECT CASE WHEN (number % 2) = 0 THEN toInt8(1) WHEN (number % 3) = 0 THEN toFloat32(2) ELSE toUInt16(3) END FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_rp502aa5 
SELECT arrayEnumerateDense([], []);
SELECT 128, -32769, 128 = -32769, 128 != -32769, 128 < -32769, 128 <= -32769, 128 > -32769, 128 >= -32769, -32769 = 128, -32769 != 128, -32769 < 128, -32769 <= 128, -32769 > 128, -32769 >= 128 , toUInt8(128) = toInt32(-32769), toUInt8(128) != toInt32(-32769), toUInt8(128) < toInt32(-32769), toUInt8(128) <= toInt32(-32769), toUInt8(128) > toInt32(-32769), toUInt8(128) >= toInt32(-32769), toInt32(-32769) = toUInt8(128), toInt32(-32769) != toUInt8(128), toInt32(-32769) < toUInt8(128), toInt32(-32769) <= toUInt8(128), toInt32(-32769) > toUInt8(128), toInt32(-32769) >= toUInt8(128) , toUInt8(128) = toInt64(-32769), toUInt8(128) != toInt64(-32769), toUInt8(128) < toInt64(-32769), toUInt8(128) <= toInt64(-32769), toUInt8(128) > toInt64(-32769), toUInt8(128) >= toInt64(-32769), toInt64(-32769) = toUInt8(128), toInt64(-32769) != toUInt8(128), toInt64(-32769) < toUInt8(128), toInt64(-32769) <= toUInt8(128), toInt64(-32769) > toUInt8(128), toInt64(-32769) >= toUInt8(128) , toUInt16(128) = toInt32(-32769), toUInt16(128) != toInt32(-32769), toUInt16(128) < toInt32(-32769), toUInt16(128) <= toInt32(-32769), toUInt16(128) > toInt32(-32769), toUInt16(128) >= toInt32(-32769), toInt32(-32769) = toUInt16(128), toInt32(-32769) != toUInt16(128), toInt32(-32769) < toUInt16(128), toInt32(-32769) <= toUInt16(128), toInt32(-32769) > toUInt16(128), toInt32(-32769) >= toUInt16(128) , toUInt16(128) = toInt64(-32769), toUInt16(128) != toInt64(-32769), toUInt16(128) < toInt64(-32769), toUInt16(128) <= toInt64(-32769), toUInt16(128) > toInt64(-32769), toUInt16(128) >= toInt64(-32769), toInt64(-32769) = toUInt16(128), toInt64(-32769) != toUInt16(128), toInt64(-32769) < toUInt16(128), toInt64(-32769) <= toUInt16(128), toInt64(-32769) > toUInt16(128), toInt64(-32769) >= toUInt16(128) , toInt16(128) = toInt32(-32769), toInt16(128) != toInt32(-32769), toInt16(128) < toInt32(-32769), toInt16(128) <= toInt32(-32769), toInt16(128) > toInt32(-32769), toInt16(128) >= toInt32(-32769), toInt32(-32769) = toInt16(128), toInt32(-32769) != toInt16(128), toInt32(-32769) < toInt16(128), toInt32(-32769) <= toInt16(128), toInt32(-32769) > toInt16(128), toInt32(-32769) >= toInt16(128) , toInt16(128) = toInt64(-32769), toInt16(128) != toInt64(-32769), toInt16(128) < toInt64(-32769), toInt16(128) <= toInt64(-32769), toInt16(128) > toInt64(-32769), toInt16(128) >= toInt64(-32769), toInt64(-32769) = toInt16(128), toInt64(-32769) != toInt16(128), toInt64(-32769) < toInt16(128), toInt64(-32769) <= toInt16(128), toInt64(-32769) > toInt16(128), toInt64(-32769) >= toInt16(128) , toUInt32(128) = toInt32(-32769), toUInt32(128) != toInt32(-32769), toUInt32(128) < toInt32(-32769), toUInt32(128) <= toInt32(-32769), toUInt32(128) > toInt32(-32769), toUInt32(128) >= toInt32(-32769), toInt32(-32769) = toUInt32(128), toInt32(-32769) != toUInt32(128), toInt32(-32769) < toUInt32(128), toInt32(-32769) <= toUInt32(128), toInt32(-32769) > toUInt32(128), toInt32(-32769) >= toUInt32(128) , toUInt32(128) = toInt64(-32769), toUInt32(128) != toInt64(-32769), toUInt32(128) < toInt64(-32769), toUInt32(128) <= toInt64(-32769), toUInt32(128) > toInt64(-32769), toUInt32(128) >= toInt64(-32769), toInt64(-32769) = toUInt32(128), toInt64(-32769) != toUInt32(128), toInt64(-32769) < toUInt32(128), toInt64(-32769) <= toUInt32(128), toInt64(-32769) > toUInt32(128), toInt64(-32769) >= toUInt32(128) , toInt32(128) = toInt32(-32769), toInt32(128) != toInt32(-32769), toInt32(128) < toInt32(-32769), toInt32(128) <= toInt32(-32769), toInt32(128) > toInt32(-32769), toInt32(128) >= toInt32(-32769), toInt32(-32769) = toInt32(128), toInt32(-32769) != toInt32(128), toInt32(-32769) < toInt32(128), toInt32(-32769) <= toInt32(128), toInt32(-32769) > toInt32(128), toInt32(-32769) >= toInt32(128) , toInt32(128) = toInt64(-32769), toInt32(128) != toInt64(-32769), toInt32(128) < toInt64(-32769), toInt32(128) <= toInt64(-32769), toInt32(128) > toInt64(-32769), toInt32(128) >= toInt64(-32769), toInt64(-32769) = toInt32(128), toInt64(-32769) != toInt32(128), toInt64(-32769) < toInt32(128), toInt64(-32769) <= toInt32(128), toInt64(-32769) > toInt32(128), toInt64(-32769) >= toInt32(128) , toUInt64(128) = toInt32(-32769), toUInt64(128) != toInt32(-32769), toUInt64(128) < toInt32(-32769), toUInt64(128) <= toInt32(-32769), toUInt64(128) > toInt32(-32769), toUInt64(128) >= toInt32(-32769), toInt32(-32769) = toUInt64(128), toInt32(-32769) != toUInt64(128), toInt32(-32769) < toUInt64(128), toInt32(-32769) <= toUInt64(128), toInt32(-32769) > toUInt64(128), toInt32(-32769) >= toUInt64(128) , toUInt64(128) = toInt64(-32769), toUInt64(128) != toInt64(-32769), toUInt64(128) < toInt64(-32769), toUInt64(128) <= toInt64(-32769), toUInt64(128) > toInt64(-32769), toUInt64(128) >= toInt64(-32769), toInt64(-32769) = toUInt64(128), toInt64(-32769) != toUInt64(128), toInt64(-32769) < toUInt64(128), toInt64(-32769) <= toUInt64(128), toInt64(-32769) > toUInt64(128), toInt64(-32769) >= toUInt64(128) , toInt64(128) = toInt32(-32769), toInt64(128) != toInt32(-32769), toInt64(128) < toInt32(-32769), toInt64(128) <= toInt32(-32769), toInt64(128) > toInt32(-32769), toInt64(128) >= toInt32(-32769), toInt32(-32769) = toInt64(128), toInt32(-32769) != toInt64(128), toInt32(-32769) < toInt64(128), toInt32(-32769) <= toInt64(128), toInt32(-32769) > toInt64(128), toInt32(-32769) >= toInt64(128) , toInt64(128) = toInt64(-32769), toInt64(128) != toInt64(-32769), toInt64(128) < toInt64(-32769), toInt64(128) <= toInt64(-32769), toInt64(128) > toInt64(-32769), toInt64(128) >= toInt64(-32769), toInt64(-32769) = toInt64(128), toInt64(-32769) != toInt64(128), toInt64(-32769) < toInt64(128), toInt64(-32769) <= toInt64(128), toInt64(-32769) > toInt64(128), toInt64(-32769) >= toInt64(128) 
SELECT '-----';
select number, number + 1, concat('string: ', toString(number)) from numbers(200000) group by number with totals order by number limit 190000 format TSVWithNames
select '--- ASC NULLS FIRST, DESC';
CREATE DATABASE IF NOT EXISTS test_12t3qkm8 
CREATE DATABASE IF NOT EXISTS test_96kvetsm 
SELECT 'Pacific/Kiritimati', rand() as r, toHour(toDateTime(r, 'Pacific/Kiritimati') AS t) AS h, t, toTypeName(t) FROM numbers(1000000) WHERE h < 0 OR h > 23 ORDER BY h LIMIT 1 BY h;
SELECT multiIf((number % 2) = 0, toInt8(1), (number % 3) = 0, toUInt16(2), toInt16(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_5_391 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DATABASE IF NOT EXISTS test_jtc8lwzx 
CREATE TABLE test_01193_18429.table_8_188 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT multiIf((number % 2) = 0, [toFloat32(1), toFloat32(2)], (number % 3) = 0, [toUInt16(2), toUInt16(3)], [toInt16(3), toInt16(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_9_248 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'The results of query: SELECT id, mapExtractKeyLike(map, \'P1%\') FROM map_extractKeyLike_test ORDER BY id;';
INSERT INTO test_01193_18429.table_6_520 VALUES 
show create table data_type_families format TSVRaw;
CREATE DATABASE IF NOT EXISTS test_edz7g5lk 
CREATE TABLE test_01193_18429.table_8_813 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_5_992 VALUES 
INSERT INTO test_01193_18429.table_8_502 VALUES 
CREATE TABLE test_2E2D5F6F3A33272123497A3F2B2063533975673C687C57405C523E5357307079233A3A5D21697469(x UInt8) Engine=Memory;
system stop merges order;
CREATE TABLE test_01193_18429.table_1_309 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE table3 (`id` Int64, `v` UInt64) ENGINE = MergeTree PARTITION BY (id % 200, (id % 200) % 10, toInt32(round((id % 200) / 2, 0))) ORDER BY id SETTINGS index_granularity = 32958, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 3687, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 11033009, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 72330, primary_key_compress_block_size = 46222
DROP TABLE IF EXISTS bad_arrays;
CREATE TABLE test_645A70406A5B7B293D6A583D737D7249652933643E543D2B3460403D75415161335C4B462153552E(x UInt8) Engine=Memory;
INSERT INTO r1 SELECT 67 % 10 = 1 ? 67 - 1 : 67
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (63 < 41 AND 56 > 0 ? 63 : 0)), throwIf(last != (63 < 41 AND 56 > 0 ? least(41 - 1, 63 + 56 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(41) LIMIT 63, 56);
SELECT countEqual([NULL],[NULL]);
SELECT `data_01756_str`.`key` FROM `test_pqmm0fjx`.`data_01756_str` WHERE `key` IN tuple('2')
SELECT 'Running test stateless/02247_names_order_in_json_and_tskv.sh from pid=1705' 
DROP DATABASE IF EXISTS test_rqje6e4r 
INSERT INTO test_01193_18429.table_7_292 VALUES 
SELECT * FROM minmax_idx WHERE i32 = 5 AND i32 + f64 < 12 AND 3 < d AND d < 7 AND (s = 'bac' OR s = 'cba') ORDER BY dt
CREATE TABLE test_42336E4C745F3477237A326C5F41567A6B586A746C275E325E3359535C7B5B5C2B6465255C562847(x UInt8) Engine=Memory;
SELECT toDate(toDateTime64('2149-06-07 00:00:00.123', 3));
INSERT INTO r10 SELECT 73
select sumIf(number::Decimal128(3), number % 10 == 0) from numbers(1000);
ALTER TABLE test_alter_decimal MODIFY COLUMN d Decimal(18, 8);
SELECT 'Running test stateless/01413_if_array_uuid.sql from pid=1718' 
SELECT hasToken('hay(hay(hay(hay(hay(hay(hay(hay(hay(needle(hay(hay(hay(hay(hay(hay(hay(hay(hay', 'needle'), ' expecting ', 1;
INSERT INTO test_01193_18429.table_10_439 VALUES 
INSERT INTO test_01193_18429.table_7_732 VALUES 
SELECT 'Running test stateless/00637_sessions_in_http_interface_and_settings.sh from pid=1724' 
INSERT INTO test_01193_18429.table_7_652 VALUES 
USE test_hdfs_4
SELECT count(*) FROM distributed_00754 PREWHERE a IN (0, 1) WHERE b IN (0, 1) AND c LIKE '%l%';
INSERT INTO tab_00625 SELECT today(), number + 8190, [toUInt16(number)], [number + 8190] FROM system.numbers LIMIT 10;
select 1 = sequenceMatch('(?2)')(time, data = 0, data = 1, data = 2, data = 3) from sequence_test;
select * from format('CSV', '100000000000000000000');
CREATE TABLE test_54496776724C2D447E34494A5E765C614B253B292C2B735277592D4D54415737753E312E2A613A55(x UInt8) Engine=Memory;
SELECT cutToFirstSignificantSubdomainWithWWWRFC('http://www.example.com');
CREATE TABLE test_673E5952782C37282275593F4A2A653B357973792A2A5B644B235971596D267E4624613146553C23(x UInt8) Engine=Memory;
SELECT `data_01223`.`key` FROM `test_4zufzi3e`.`data_01223` GROUP BY `key` ORDER BY `key` ASC LIMIT 1
select concat('a', materialize('b')) == 'ab';
alter table rmt2 modify column k Nullable(String);
select 0 = position('abc' in '');
SELECT arrayStringConcat(arr, ';') FROM (SELECT [Null, 1, Null, 23, Null, 456, Null] AS arr);
SELECT '- join_use_nulls -';
SELECT *, _file FROM file('/var/lib/clickhouse/user_files/02771_multidirectory_globs_storage_file_test_1re3m9pf/dir{?/subdir?1/da,2/subdir2?/da}ta2.csv', CSV);
ALTER TABLE concurrent_alter_add_drop_3 ADD COLUMN value3 UInt32 DEFAULT 42 SETTINGS replication_alter_partitions_sync=0
with NULL as pid select a.col1, sum(a.col2) as summ from table1 a prewhere (pid is null or a.col2 = pid) group by a.col1;
CREATE TABLE test_01193_18429.table_6_465 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_7_607 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP TABLE IF EXISTS database_for_dict.table_for_dict
CREATE TABLE test_7D6A564648773664654E262D7C3D352F46464D7A725C26795962253A37362E22664E21735C242E66(x UInt8) Engine=Memory;
SELECT s2CellsIntersect(NULL, NULL);
select 'CountSubstringsImpl::constantConstant';
DROP TABLE IF EXISTS d_src;
ALTER ROLE r1_01293, r2_01293 SETTINGS readonly=1;
INSERT INTO test_01193_18429.table_9_459 VALUES 
select sipHash64Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32)) == sipHash64(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32));
drop table if EXISTS test_bm;
SELECT 'Running test stateless/00712_prewhere_with_sampling_and_alias.sql from pid=1726' 
CREATE TABLE binary_op_mono3 (`i` int, `j` int) ENGINE = MergeTree PARTITION BY i + 1000 ORDER BY j SETTINGS index_granularity = 46991, min_bytes_for_wide_part = 725132692, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 3124, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 9499606997, index_granularity_bytes = 30185806, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 57037, primary_key_compress_block_size = 90360
SELECT * FROM 02702_logical_optimizer WHERE a = 1 OR 3 = a OR 2 = a OR a = NULL;
DROP TABLE IF EXISTS t_reverse_order_virt_col;
DROP DATABASE IF EXISTS test_1vhpuaqv 
CREATE TABLE IF NOT EXISTS test (`id` Int32, `data` Tuple(Int32, Int32)) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 54697, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 15005, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 96964, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 660585633, index_granularity_bytes = 7425561, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 42277, primary_key_compress_block_size = 52954
CREATE TABLE test_01193_18429.table_9_223 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT * FROM numbers(10) ORDER BY number FORMAT PrettyNoEscapes;
SELECT count() == 50000 and countIf(value != '') == (SELECT count() FROM rdb_100000 WHERE key < 50000) FROM (SELECT number as k FROM numbers_mt(50000)) as t1 LEFT JOIN rdb_100000 as rdb ON rdb.key == t1.k;
INSERT INTO test_01193_18429.table_7_674 VALUES 
select * from enum where enum = 1;
insert into x values 
CREATE TABLE test_01193_18429.table_8_965 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT arrayFilter(x -> materialize(1), arrayMap(x -> toString(x), range(number))) FROM system.numbers LIMIT 10;
SELECT `number` IN ((SELECT toUInt64(arrayJoin([1, 8]))) AS `_subquery3050`) FROM numbers(10)
SELECT COUNT() FROM bloom_filter_null_types_test WHERE date = '1970-01-02' SETTINGS max_rows_to_read = 6;
SELECT sum(e) from tab_02473 PREWHERE b > 0 AND b <= 70 AND c > 23 AND c <= 74 WHERE a == 0;
select position(materialize('ÃÂ°ÃÂ±ÃÂ²') as h, lower('ÃÂ' as n)) = positionCaseInsensitive(h, n) from system.numbers limit 10;
CREATE DICTIONARY cache_dictionary ( id UInt64, value Nullable(Int64) DEFAULT NULL ) PRIMARY KEY id SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dictionary_nullable_source_table')) LIFETIME(MIN 1 MAX 1000) LAYOUT(CACHE(SIZE_IN_CELLS 10));
WITH 'NEEDLE' as n SELECT haystack, needle, hasTokenCaseInsensitive(haystack, n) as result FROM ht WHERE func = 'hasTokenCaseInsensitive' AND needle = n AND result != match;
INSERT INTO big_array SELECT groupArray(number % 255) AS x FROM (SELECT * FROM system.numbers LIMIT 1000000);
SELECT 'Running test stateless/02725_start_stop_fetches.sh from pid=1705' 
DROP TABLE `01746_local`;
select 1 = multiSearchAnyUTF8(materialize('ÃÂÃÂ¶ÃÂ´ÃÂ¹ÃÂÃÂÃÂ¹ÃÂ°ÃÂ²ÃÂÃÂ±ÃÂ¹ÃÂÃÂ²ÃÂ¼ÃÂ½ÃÂ¶ÃÂ¾ÃÂÃÂ¶ÃÂ¼ÃÂ²ÃÂ´ÃÂÃÂ¶ÃÂ '), ['ÃÂ¾ÃÂ', '', 'ÃÂ¹ÃÂÃÂÃÂ¹ÃÂ°ÃÂ²ÃÂÃÂ±ÃÂ¹ÃÂÃÂ²ÃÂ¼ÃÂ½ÃÂ¶ÃÂ¾', 'ÃÂ²ÃÂÃÂ±ÃÂ¹ÃÂÃÂ²ÃÂ¼ÃÂ½ÃÂ¶ÃÂ¾ÃÂÃÂ¶', 'ÃÂ¶ÃÂ´ÃÂ¹ÃÂÃÂÃÂ¹ÃÂ°ÃÂ²ÃÂÃÂ±ÃÂ¹ÃÂÃÂ²ÃÂ¼ÃÂ½ÃÂ¶ÃÂ¾ÃÂÃÂ¶', 'ÃÂ¹ÃÂ°ÃÂ²ÃÂÃÂ±ÃÂ¹ÃÂ', 'ÃÂ´ÃÂ', 'ÃÂ²ÃÂÃÂ±ÃÂ¹ÃÂ', 'ÃÂ±ÃÂ¹ÃÂÃÂ²ÃÂ¼ÃÂ½ÃÂ¶ÃÂ¾ÃÂÃÂ¶', 'ÃÂ¼ÃÂ½ÃÂ¶']) from system.numbers limit 10;
CREATE TABLE rmt (`a` UInt8, `b` Int16, `c` Float32, `d` String, `e` Array(UInt8), `f` Nullable(UUID), `g` Tuple(UInt8, UInt16)) ENGINE = ReplicatedMergeTree('/test/02253/02253_empty_part_checksums_test_x9jcpf2l/rmt', '1') PARTITION BY b % 10 ORDER BY a SETTINGS old_parts_lifetime = 1, cleanup_delay_period = 0, cleanup_delay_period_random_add = 0, cleanup_thread_preferred_points_per_iteration = 0, min_bytes_for_wide_part = 0, remove_empty_parts = 0, replace_long_file_name_to_hash = 0, index_granularity = 57671, ratio_of_defaults_for_sparse_serialization = 0.3085744380950928, max_file_name_length = 128, merge_max_block_size = 6384, prefer_fetch_merged_part_size_threshold = 1964399112, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 3232456250, index_granularity_bytes = 9883630, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 79716, primary_key_compress_block_size = 26032
DROP DATABASE IF EXISTS test_5sohucdw 
SELECT materialize(toInt64(0)) AS x, toDecimal32(1, 0) AS y, ((x > y) ? x : y) AS z, toTypeName(x), toTypeName(y), toTypeName(z);
INSERT INTO input_function_table_1 (a, b, c) SELECT a, b, c*c FROM input('a String, b Int32, c Int32') FORMAT CSV
DESC TABLE test_2any45c2.big_array
CREATE TABLE test_62753E234444674D4479757C4E5F6C68487D4A44447D58592C2F255E476D6E7C7E2E3F3A7B283266(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_pjtv7z72 
select count() from (select number from numbers(100) intersect select number from numbers(20, 60) except select number from numbers(30, 20) except select number from numbers(60, 20));
SELECT 15 = dictGetUInt32(concat('test_7kssh40k', '.dict_ipv4_trie'), 'val', tuple(IPv6StringToNum('::ffff:7fff:7f7f')))
CREATE DATABASE IF NOT EXISTS test_g7bdgh60 
DROP DATABASE IF EXISTS test_q6jij6t7 
SELECT multiIf((number % 2) = 0, [toInt16(1), toInt16(2)], (number % 3) = 0, [toInt8(2), toInt8(3)], [toInt64(3), toInt64(3)]) FROM system.numbers LIMIT 10;
USE test_01355
CREATE DATABASE IF NOT EXISTS test_0eumdurs 
 SELECT sipHash64(9, groupArray((name, type))) FROM (SELECT name, type FROM system.columns WHERE database = 'system' AND table = 'asynchronous_insert_log' ORDER BY position) 
SELECT pointInPolygon((39.840202, 21.451471), [(39.88137, 21.4133),(39.88234, 21.41345),(39.88299, 21.41336),(39.88369, 21.41308),(39.88421, 21.41275),(39.88498, 21.41196),(39.88634, 21.40971),(39.88889, 21.40731),(39.89212, 21.41262),(39.89182, 21.41282),(39.89033, 21.41422),(39.88928, 21.41434),(39.88824, 21.41479),(39.88626, 21.41669),(39.88579, 21.41696),(39.88471, 21.41737),(39.88379, 21.4176),(39.88287, 21.41579),(39.88137, 21.4133)]);
INSERT INTO test_01193_18429.table_10_387 VALUES 
select format('{}{}{}', toFixedString('a', 1), materialize(toFixedString('b', 1)), 'c') == 'abc';
select intDiv(materialize(toInt32(1)), 0x100000000);
SELECT count() FROM `test_fm9ee56o`.`mergetree_00754` WHERE (`a` = 0) AND (`b` <= 1)
CREATE TABLE test_24232E7E4A2367617C6A4035757B4246417E56404C2A59452C672D4A5839704B3B60684D47512530(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_e2pag32o 
SELECT * FROM ( EXPLAIN PLAN indexes = 1 SELECT * FROM ngrambf_tab WHERE match(str, 'OLAP (.*?)*') ORDER BY id ) WHERE explain LIKE '%Granules: %' SETTINGS allow_experimental_analyzer = 0;
CREATE TABLE t2 (id Int) ENGINE = Memory;
SELECT 'Running test stateless/01896_jit_aggregation_function_if_long.sql from pid=1714' 
select round(1000 * ngramSearchUTF8('', materialize('ÃÂ°ÃÂ±ÃÂ²')))=round(1000 * ngramSearchUTF8(materialize(''), 'ÃÂ°ÃÂ±ÃÂ²')) from system.numbers limit 5;
EXPLAIN SELECT DISTINCT c FROM ( SELECT a, sum(b) AS c FROM ( SELECT x.number AS a, y.number AS b FROM numbers(3) AS x, numbers(3, 3) AS y ) GROUP BY a WITH ROLLUP ORDER BY a )
DROP DATABASE IF EXISTS test_dy0sms4z 
CREATE DATABASE IF NOT EXISTS test_un4xw4hx 
CREATE TABLE test_02908_r2_114 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_114', 'r2') ORDER BY tuple()
INSERT INTO test_01193_18429.table_5_388 VALUES 
insert into test select * from s3Cluster('test_cluster_one_shard_three_replicas_localhost', 'http://localhost:11111/test/a.tsv');
SELECT sipHash128Keyed(NULL, NULL);
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c0) AND (NOT c8)) OR ((NOT c5) AND c8 AND c0 AND (NOT c8) AND (NOT c4)) OR (c1) OR ((NOT c9) AND (NOT c0) AND c9 AND (NOT c7)) SETTINGS convert_query_to_cnf = 0
DROP DATABASE IF EXISTS test_gwrtaoz4 
INSERT INTO test_01193_18429.table_2_830 VALUES 
CREATE INDEX idx_tab2_1 ON tab2 (col3,col1 DESC);
SELECT YYYYMMDDhhmmssToDateTime64(35001113111111);
drop table if exists test_protobuf
CREATE TABLE test_01193_18429.table_5_40 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select s.a + 1 as a, s.a + 1 as b from (select 10 as a) s;
CREATE TABLE test_5F2E725C7865552F56476032514A3D6D603B3158436F575C38414B7A54364865492A342077594547(x UInt8) Engine=Memory;
SELECT now64(NULL, NULL);
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c8)) OR ((NOT c0) AND c3 AND (NOT c8)) OR ((NOT c4) AND (NOT c6) AND (NOT c1)) OR (c6 AND (NOT c8) AND c5 AND (NOT c2) AND (NOT c3)) OR ((NOT c3) AND (NOT c7) AND c8 AND (NOT c0) AND (NOT c1)) OR ((NOT c1)) OR ((NOT c5) AND (NOT c9) AND (NOT c7)) OR (c0 AND (NOT c4) AND c0) SETTINGS convert_query_to_cnf = 0
DROP DATABASE IF EXISTS test_gn6oc0kl 
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (75 < 52 AND 20 > 0 ? 75 : 0)), throwIf(last != (75 < 52 AND 20 > 0 ? least(52 - 1, 75 + 20 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(52) LIMIT 75, 20);
SELECT multiIf(1, toFixedString(col2, 16), (col1 % 3) = 0, toFixedString('bar', 16), toFixedString('baz', 16)) FROM multi_if_check;
SELECT toDecimal64(12345.6789, 4) AS x, trunc(x, -1), trunc(x, -2), trunc(x, -3), trunc(x, -4), trunc(x, -5);
EXPLAIN PLAN actions = 1 SELECT * FROM t_order_by_monotonic AS test ORDER BY -a, b DESC
CREATE TABLE test_01193_18429.table_3_752 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select toUInt64OrDefault('1xx', cast(2 as UInt64));
CREATE TABLE test_2D4F7D6867456C265858794F724E397A275553235668345F7C39557E7B756464275A313759696E4F(x UInt8) Engine=Memory;
select makeDate(1969,12,31);
CREATE TABLE test_722448734065723724665C7666445E38262F2B2D22242444412D2F594D4268792C5C31764B696D67(x UInt8) Engine=Memory;
INSERT INTO mt VALUES /* (-42, 1) */ 
select parseDateTimeInJodaSyntax('1999 7 ', 'yyyy DD ', 'UTC') = toDateTime('1999-01-07', 'UTC');
DROP TABLE IF EXISTS partitioned_by_string_replica1 SYNC;
SELECT firstLine(NULL);
CREATE TABLE test_01193_18429.table_7_690 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select count(a) from replacing_m3;
SELECT sqid(NULL);
INSERT INTO test_01193_18429.table_1_822 VALUES 
SELECT -32767, -9223372036854775808, -32767 = -9223372036854775808, -32767 != -9223372036854775808, -32767 < -9223372036854775808, -32767 <= -9223372036854775808, -32767 > -9223372036854775808, -32767 >= -9223372036854775808, -9223372036854775808 = -32767, -9223372036854775808 != -32767, -9223372036854775808 < -32767, -9223372036854775808 <= -32767, -9223372036854775808 > -32767, -9223372036854775808 >= -32767 , toInt16(-32767) = toInt64(-9223372036854775808), toInt16(-32767) != toInt64(-9223372036854775808), toInt16(-32767) < toInt64(-9223372036854775808), toInt16(-32767) <= toInt64(-9223372036854775808), toInt16(-32767) > toInt64(-9223372036854775808), toInt16(-32767) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toInt16(-32767), toInt64(-9223372036854775808) != toInt16(-32767), toInt64(-9223372036854775808) < toInt16(-32767), toInt64(-9223372036854775808) <= toInt16(-32767), toInt64(-9223372036854775808) > toInt16(-32767), toInt64(-9223372036854775808) >= toInt16(-32767) , toInt32(-32767) = toInt64(-9223372036854775808), toInt32(-32767) != toInt64(-9223372036854775808), toInt32(-32767) < toInt64(-9223372036854775808), toInt32(-32767) <= toInt64(-9223372036854775808), toInt32(-32767) > toInt64(-9223372036854775808), toInt32(-32767) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toInt32(-32767), toInt64(-9223372036854775808) != toInt32(-32767), toInt64(-9223372036854775808) < toInt32(-32767), toInt64(-9223372036854775808) <= toInt32(-32767), toInt64(-9223372036854775808) > toInt32(-32767), toInt64(-9223372036854775808) >= toInt32(-32767) , toInt64(-32767) = toInt64(-9223372036854775808), toInt64(-32767) != toInt64(-9223372036854775808), toInt64(-32767) < toInt64(-9223372036854775808), toInt64(-32767) <= toInt64(-9223372036854775808), toInt64(-32767) > toInt64(-9223372036854775808), toInt64(-32767) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toInt64(-32767), toInt64(-9223372036854775808) != toInt64(-32767), toInt64(-9223372036854775808) < toInt64(-32767), toInt64(-9223372036854775808) <= toInt64(-32767), toInt64(-9223372036854775808) > toInt64(-32767), toInt64(-9223372036854775808) >= toInt64(-32767) 
SELECT arrayLastOrNull(x -> 0, emptyArrayUInt8());
CREATE TABLE test (a Array(String)) ENGINE = Memory;
CREATE DATABASE IF NOT EXISTS test_9eubt43k 
CREATE TABLE test_34484F306775477B623B31763A6A74747E3E56604E784F6D2470526147782F304E3E462F68285575(x UInt8) Engine=Memory;
select X.*, Y.* from X inner join Y on (X.id + 1) = (Y.id + 1) order by X.id, X.x_a, X.x_b, Y.id, Y.y_a, Y.y_b;
select 5 = position('abcdefgh', materialize('efg')) from system.numbers limit 10;
CREATE TABLE table_to_store_data (`id` Int64) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 44438, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 67, merge_max_block_size = 19160, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 18195977, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 65050, primary_key_compress_block_size = 30673
CREATE TABLE test_01193_18429.table_5_362 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_6A6E7D28487A74713561787D7A425B3E7E5D464336275A38356B263B6B4C3E3B6B723A76375E386C(x UInt8) Engine=Memory;
SELECT toString([]);
SELECT addWeeks('2023-10-22', 1), addWeeks('2023-10-22 12:34:56.123', 1);
CREATE TABLE test_01193_18429.table_7_634 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT uniqTheta(number) FROM numbers(1e7);
SELECT a + a, a - a, a * a, a / a, intDiv(a, a), intDivOrZero(a, a) FROM decimal WHERE a = 42;
select distinct k1, k2 from remote('127.{1,2}', view(select 1 k1, 2 k2, 3 v), cityHash64(k1, k2));
INSERT INTO test_01193_18429.table_3_304 VALUES 
CREATE TABLE test_27646B592E4C55333C662A523C595E603F65204C253C41214C3E6D75793C7C366D683A5847516655(x UInt8) Engine=Memory;
SELECT * FROM parquet_arrays FORMAT Parquet
INSERT INTO input_function_table_5 (a, b, c) SELECT a, b, c*c FROM input('a String, b Int32, c Int32') FORMAT CSV
CREATE TABLE test_01193_18429.table_10_959 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_8_381 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select 1 > any (select number from numbers(10));
CREATE TABLE test_70604921622D3F425134232452472E4D4175693135324E33712F7E7C42772828656B5F2139494537(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_5_626 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
ALTER TABLE concurrent_alter_column ADD COLUMN c279 DOUBLE;
select [0, 12, 8, 0, 12, 0, 0, 10, 0, 8, 4, 6] = multiSearchAllPositionsCaseInsensitiveUTF8(materialize('ÃÂ°ÃÂ¹ÃÂ ÃÂÃÂ±ÃÂ§ÃÂÃÂ¶ÃÂÃÂÃÂÃÂ ÃÂÃÂºÃÂÃÂ¤ÃÂÃÂÃÂÃÂÃÂ½ÃÂ¿ÃÂ¤ÃÂ¹ÃÂ¤ÃÂÃÂÃÂÃÂ'), ['ÃÂÃÂÃÂ¦ÃÂÃÂÃÂ£ÃÂÃÂÃÂ', 'ÃÂ ÃÂÃÂºÃÂÃÂÃÂÃÂ¶ÃÂÃÂ²ÃÂ½ÃÂ¿ÃÂÃÂ¹ÃÂÃÂÃÂ´ÃÂ¤', 'ÃÂ¶ÃÂÃÂÃÂÃÂ¥ÃÂÃÂºÃÂÃÂ¤ÃÂÃÂ¶ÃÂÃÂ²ÃÂ½ÃÂÃÂ', 'ÃÂºÃÂÃÂÃÂ²ÃÂ£ÃÂÃÂÃÂ¡ÃÂÃÂÃÂÃÂ¢ÃÂÃÂÃÂ±ÃÂ¡ÃÂ¶ÃÂ¢ÃÂÃÂ´ÃÂ ÃÂºÃÂÃÂ³ÃÂ·ÃÂ¥ÃÂ²ÃÂ', 'ÃÂ ÃÂ±ÃÂº', 'ÃÂÃÂÃÂÃÂµÃÂ·ÃÂ¹ÃÂÃÂÃÂ£ÃÂÃÂÃÂ½ÃÂÃÂ¾ÃÂÃÂÃÂ¸ÃÂÃÂÃÂÃÂ¾', 'ÃÂ½ÃÂ»ÃÂ½ÃÂ¨ÃÂ§ÃÂÃÂÃÂ ÃÂÃÂÃÂµÃÂ¶ÃÂºÃÂÃÂµÃÂ²ÃÂÃÂ»ÃÂÃÂÃÂ°ÃÂ¹ÃÂ´ÃÂ¥ÃÂÃÂÃÂÃÂ±', 'ÃÂ²ÃÂÃÂ¥ÃÂ±ÃÂºÃÂÃÂÃÂ¶ÃÂ¶ÃÂÃÂÃÂ', 'ÃÂ©ÃÂ´ÃÂ·ÃÂ¦ÃÂ¢ÃÂÃÂ¾ÃÂÃÂÃÂ¡ÃÂµÃÂ¨ÃÂÃÂÃÂ¦', 'ÃÂÃÂÃÂÃÂ¸ÃÂ ÃÂ±ÃÂÃÂ§ÃÂÃÂ¶ÃÂ', 'ÃÂ²ÃÂ±ÃÂ§ÃÂ±ÃÂÃÂºÃÂÃÂ¸ÃÂ ÃÂÃÂºÃÂ§ÃÂÃÂÃÂ¶ÃÂÃÂ', 'ÃÂ§ÃÂ±']) from system.numbers limit 10;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt32(1), toUInt32(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toInt64(3), toInt64(3)] END FROM system.numbers LIMIT 10;
DROP TABLE alias10;
CREATE TABLE test_01193_18429.table_7_906 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO r7 SELECT 0
CREATE TABLE t_01889 (`a` Int64, `user_id` String) ENGINE = MergeTree ORDER BY a SETTINGS index_granularity = 20154, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 21218, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 62, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 3446564, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 84237, primary_key_compress_block_size = 74555
INSERT INTO r6 SELECT 12 % 10 = 6 ? 12 - 1 : 12
DROP DATABASE IF EXISTS test_b6afwqc5 
CREATE TABLE test_01193_18429.table_2_401 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
ALTER TABLE concurrent_alter_detach_3 MODIFY COLUMN value1 String SETTINGS replication_alter_partitions_sync=0
SELECT pt AS pt, exposure_uv AS exposure_uv FROM ( SELECT pt FROM test1 ) AS m0 FULL OUTER JOIN ( SELECT pt, exposure_uv FROM test1 ) AS m1 ON m0.pt = m1.pt;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (103 < 8 AND 64 > 0 ? 103 : 0)), throwIf(last != (103 < 8 AND 64 > 0 ? least(8 - 1, 103 + 64 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(8) LIMIT 103, 64);
SELECT anyHeavy('1') FROM (SELECT anyHeavy(1));
SELECT multiIf((number % 2) = 0, toUInt8(1), (number % 3) = 0, toUInt16(2), toUInt32(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_5_560 VALUES 
INSERT INTO test_01193_18429.table_7_398 VALUES 
INSERT INTO test_alter_on_mutation select toDate('2020-01-07'), number, toString(number) from system.numbers limit 100, 100;
SELECT a, b, c FROM pk_order ORDER BY a, b, c;
SELECT age('minute', toDateTime64('1927-01-01 00:00:00', 3, 'UTC'), toDate32('1927-01-02', 'UTC'), 'UTC');
DROP DATABASE IF EXISTS test_0mwnkmyz 
INSERT INTO test_01193_18429.table_10_798 VALUES 
select * from file('test_02149_schema_inference_test_2lktp9cn.data', 'CustomSeparated') SETTINGS format_custom_row_before_delimiter='<row_before_delimiter>', format_custom_row_after_delimiter='<row_after_delimiter>\n', format_custom_row_between_delimiter='<row_between_delimiter>\n', format_custom_result_before_delimiter='<result_before_delimiter>\n', format_custom_result_after_delimiter='<result_after_delimiter>\n', format_custom_field_delimiter='<field_delimiter>', format_custom_escaping_rule='JSON'
INSERT INTO right SELECT number, toString(number) FROM numbers(131017);
CREATE TABLE installation_stats (message String, info String, message_type String) ENGINE = Log;
SELECT NOT NOT NOT NOT 1 = 1;
SELECT name, comment FROM system.dictionaries WHERE name == '02155_test_dictionary' AND database == currentDatabase();
CREATE TABLE test_01193_18429.table_8_54 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT roundAge(25);
SELECT IPv6StringToNumOrNull('test');
CREATE TABLE set_index_not (`name` String, `status` Enum8('alive' = 0, 'rip' = 1), INDEX idx_status status TYPE set(2) GRANULARITY 1) ENGINE = MergeTree ORDER BY name SETTINGS index_granularity = 8192, min_bytes_for_wide_part = 659635865, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 65, merge_max_block_size = 16171, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 4547432459, index_granularity_bytes = 8178110, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 92445, primary_key_compress_block_size = 20258
SELECT 'Running test stateless/02785_text_with_whitespace_tab_field_delimiter.sh from pid=1720' 
set optimize_rewrite_sum_if_to_count_if=0;
CREATE TABLE test_01193_18429.table_6_448 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SET allow_unrestricted_reads_from_keeper = 'true';
CREATE TABLE test_01193_18429.table_2_467 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT * FROM t1 FULL JOIN t0 USING (x) ORDER BY x;
SELECT last_valueIf (number, isNull(number)) RESPECT NULLS from (SELECT if(number > 8, NULL, number) as number FROM numbers(10));
SELECT [toNullable(NULL)];
CREATE TABLE test_01193_18429.table_3_175 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SYSTEM FLUSH DISTRIBUTED test_gmo80lov.dist_opentelemetry
INSERT INTO 01766_db.complex_key_simple_attributes_source_table VALUES
SELECT multiIf((number % 2) = 0, toUInt8(1), (number % 3) = 0, toInt32(2), toFloat64(3)) FROM system.numbers LIMIT 10;
SELECT * FROM file('data.capnp', 'CapnProto', 'value Enum(\'one\' = 0, \'two\' = 1, \'tHrEe\' = 2, \'four\' = 3)') SETTINGS format_schema='test_02030/02030_capnp_enum:Message', format_capn_proto_enum_comparising_mode='by_names'
GRANT SELECT ON db1.* TO test_role_01073;
CREATE DATABASE IF NOT EXISTS test_m460j0ls 
DROP DATABASE IF EXISTS test_gjzau07b 
ALTER TABLE concurrent_alter_column ADD COLUMN c93 DOUBLE;
SELECT multiIf((number % 2) = 0, [toInt16(1), toInt16(2)], (number % 3) = 0, [toFloat64(2), toFloat64(3)], [toInt8(3), toInt8(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_9_915 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 15, 15, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (15 < 13 AND 15 > 0 ? 15 : 0)), throwIf(last != (15 < 13 AND 15 > 0 ? least(13 - 1, 15 + 15 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 15, 15);
SELECT [] = multiMatchAllIndices(materialize('aaaa'), ['.*aa.*aaa.*', 'aaaaaa{2}', '\(aa\){3}']);
CREATE INDEX idx_tab4_0 ON tab4 (col3,col0 DESC);
SELECT 'SELECT N <= N';
EXPLAIN PIPELINE SELECT a, b, c, e FROM t_fixed_prefix WHERE a = 1 AND b = 1 ORDER BY a, b, c, e SETTINGS optimize_read_in_order = 1
SELECT quantileTiming(0.2)(d) FROM datetime;
CREATE DICTIONARY 01780_db.dict3 ( id UInt64, value String ) PRIMARY KEY id SOURCE(CLICKHOUSE(HOST 'localhost' PORT 9000 TABLE 'dict3_source' DATABASE '01780_db')) LAYOUT(DIRECT());
SELECT intDiv(toDecimal256(4.4, 2), toDecimal128(2.2, 2));
select [1] = multiSearchAllPositions(materialize('abc'), ['a']);
INSERT INTO test_01193_18429.table_4_842 VALUES 
show create table table_engines format TSVRaw;
CREATE TABLE test_02908_r2_253 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_253', 'r2') ORDER BY tuple()
SELECT '*** AFTER SECOND OPTIMIZE ***';
CREATE TABLE test_485B2A3A65795236286659742F6B516A347B5A3F3F7A424E4E3E643D24575E7A7961274A5B405660(x UInt8) Engine=Memory;
select groupArray(a) as b, b[1] from (select (1, 2) as a);
SELECT 'Running test stateless/02469_interval_msan.sql from pid=1713' 
SELECT randChiSquared(NULL);
CREATE TABLE test_01193_18429.table_3_677 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT transform(toString(number), ['2', '4', '6'], [29, 20, 21], materialize(22)) as x FROM numbers(10) GROUP BY x ORDER BY x;
CREATE DATABASE IF NOT EXISTS test_p7pbt626 
CREATE TABLE t_01906 (`id` UInt64, `update_ts` DateTime, `value` UInt32) ENGINE = ReplacingMergeTree(update_ts) PARTITION BY 0 * id ORDER BY (update_ts, id) SETTINGS index_granularity = 51695, min_bytes_for_wide_part = 1017020842, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 11353, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1219410557, index_granularity_bytes = 9850207, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 23989, primary_key_compress_block_size = 30424
DROP DATABASE IF EXISTS test_gbjdybs4 
INSERT INTO test_01193_18429.table_5_223 VALUES 
DROP DATABASE IF EXISTS test_7hx79sry 
CREATE DATABASE non_post_request_test
CREATE TABLE test_01193_18429.table_9_38 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_4865727A227353612B30213262235E72705F595E5976245C5B706A442D4C20227E213476443F4B63(x UInt8) Engine=Memory;
CREATE TABLE table1 (`number` UInt64) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 23273, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 23571, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 7196473910, index_granularity_bytes = 12725198, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 96630, primary_key_compress_block_size = 21915
SELECT 'SELECT CAST(N as DateTime64(6, \'Europe/Minsk\'))';
SELECT * FROM replace_partition_dest2;
CREATE TABLE test_506A6C6F6074752A484D607667303D2E33794148346B4764696640696B402C3F37553F26613E343C(x UInt8) Engine=Memory;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), toMonth(N, 'Asia/Istanbul') as r FORMAT CSV;
SELECT count() FROM t_cnf_fuzz WHERE (c4 AND (NOT c4) AND c6) OR (c1 AND (NOT c4)) OR (c5 AND (NOT c3) AND c7 AND (NOT c9)) OR ((NOT c6) AND (NOT c4) AND (NOT c4)) OR (c1 AND c9 AND c5 AND c5) OR ((NOT c1)) SETTINGS convert_query_to_cnf = 0
SELECT count() FROM t_cnf_fuzz WHERE (c7 AND c0 AND (NOT c6) AND (NOT c4) AND (NOT c9)) OR ((NOT c4)) OR (c5 AND (NOT c1) AND (NOT c4)) OR ((NOT c7) AND c7 AND c2) OR ((NOT c2) AND c2 AND c7) OR (c9 AND (NOT c4)) OR (c7 AND c2 AND (NOT c9) AND (NOT c3) AND c3) OR (c5 AND c9) OR (c0) OR (c1 AND c9 AND c0 AND (NOT c2)) SETTINGS convert_query_to_cnf = 1
INSERT INTO constraint_test_transitivity (a, b, c, d) VALUES 
CREATE INDEX idx_tab3_0 ON tab3 (col0 DESC,col4 DESC);
CREATE DATABASE IF NOT EXISTS test_5ijg4tuq 
SELECT age('hour', toDateTime64('1927-01-01 00:00:00', 6, 'UTC'), toDateTime64('1927-01-01 10:00:00', 3, 'UTC'));
SELECT 'Columns with aliases';
SELECT count() FROM t_cnf_fuzz WHERE (c2 AND (NOT c3)) OR (c5 AND c7 AND (NOT c3) AND c2) OR ((NOT c6) AND (NOT c3) AND c5) OR (c3) OR (c1 AND (NOT c5) AND (NOT c7) AND c9) SETTINGS convert_query_to_cnf = 1
select t1.a as t1_a, t2.a as t2_a, t2.b as t2_b, t3.b as t3_b from table1 as t1 join table2 as t2 on table1.a = table2.a join table3 as t3 on table2.b = table3.b ORDER BY t1.a;
DROP USER IF EXISTS user_02916_dictionary_access_test_29xg5dlt;
INSERT INTO test_01193_18429.table_10_87 VALUES 
select hypot(0, 1) = 1;
DROP TABLE IF EXISTS hypothesis_test_test;
SELECT t1.id, test_table_join_1.id, t1.value, test_table_join_1.value, t2.id, test_table_join_2.id, t2.value, test_table_join_2.value, t3.id, test_table_join_3.id, t3.value, test_table_join_3.value FROM test_table_join_1 AS t1 LEFT JOIN test_table_join_2 AS t2 ON test_table_join_1.id = test_table_join_2.id INNER JOIN test_table_join_3 AS t3 ON test_table_join_2.id = test_table_join_3.id;
SELECT 2147483648, -2147483648, 2147483648 = -2147483648, 2147483648 != -2147483648, 2147483648 < -2147483648, 2147483648 <= -2147483648, 2147483648 > -2147483648, 2147483648 >= -2147483648, -2147483648 = 2147483648, -2147483648 != 2147483648, -2147483648 < 2147483648, -2147483648 <= 2147483648, -2147483648 > 2147483648, -2147483648 >= 2147483648 , toUInt32(2147483648) = toInt32(-2147483648), toUInt32(2147483648) != toInt32(-2147483648), toUInt32(2147483648) < toInt32(-2147483648), toUInt32(2147483648) <= toInt32(-2147483648), toUInt32(2147483648) > toInt32(-2147483648), toUInt32(2147483648) >= toInt32(-2147483648), toInt32(-2147483648) = toUInt32(2147483648), toInt32(-2147483648) != toUInt32(2147483648), toInt32(-2147483648) < toUInt32(2147483648), toInt32(-2147483648) <= toUInt32(2147483648), toInt32(-2147483648) > toUInt32(2147483648), toInt32(-2147483648) >= toUInt32(2147483648) , toUInt32(2147483648) = toInt64(-2147483648), toUInt32(2147483648) != toInt64(-2147483648), toUInt32(2147483648) < toInt64(-2147483648), toUInt32(2147483648) <= toInt64(-2147483648), toUInt32(2147483648) > toInt64(-2147483648), toUInt32(2147483648) >= toInt64(-2147483648), toInt64(-2147483648) = toUInt32(2147483648), toInt64(-2147483648) != toUInt32(2147483648), toInt64(-2147483648) < toUInt32(2147483648), toInt64(-2147483648) <= toUInt32(2147483648), toInt64(-2147483648) > toUInt32(2147483648), toInt64(-2147483648) >= toUInt32(2147483648) , toUInt64(2147483648) = toInt32(-2147483648), toUInt64(2147483648) != toInt32(-2147483648), toUInt64(2147483648) < toInt32(-2147483648), toUInt64(2147483648) <= toInt32(-2147483648), toUInt64(2147483648) > toInt32(-2147483648), toUInt64(2147483648) >= toInt32(-2147483648), toInt32(-2147483648) = toUInt64(2147483648), toInt32(-2147483648) != toUInt64(2147483648), toInt32(-2147483648) < toUInt64(2147483648), toInt32(-2147483648) <= toUInt64(2147483648), toInt32(-2147483648) > toUInt64(2147483648), toInt32(-2147483648) >= toUInt64(2147483648) , toUInt64(2147483648) = toInt64(-2147483648), toUInt64(2147483648) != toInt64(-2147483648), toUInt64(2147483648) < toInt64(-2147483648), toUInt64(2147483648) <= toInt64(-2147483648), toUInt64(2147483648) > toInt64(-2147483648), toUInt64(2147483648) >= toInt64(-2147483648), toInt64(-2147483648) = toUInt64(2147483648), toInt64(-2147483648) != toUInt64(2147483648), toInt64(-2147483648) < toUInt64(2147483648), toInt64(-2147483648) <= toUInt64(2147483648), toInt64(-2147483648) > toUInt64(2147483648), toInt64(-2147483648) >= toUInt64(2147483648) , toInt64(2147483648) = toInt32(-2147483648), toInt64(2147483648) != toInt32(-2147483648), toInt64(2147483648) < toInt32(-2147483648), toInt64(2147483648) <= toInt32(-2147483648), toInt64(2147483648) > toInt32(-2147483648), toInt64(2147483648) >= toInt32(-2147483648), toInt32(-2147483648) = toInt64(2147483648), toInt32(-2147483648) != toInt64(2147483648), toInt32(-2147483648) < toInt64(2147483648), toInt32(-2147483648) <= toInt64(2147483648), toInt32(-2147483648) > toInt64(2147483648), toInt32(-2147483648) >= toInt64(2147483648) , toInt64(2147483648) = toInt64(-2147483648), toInt64(2147483648) != toInt64(-2147483648), toInt64(2147483648) < toInt64(-2147483648), toInt64(2147483648) <= toInt64(-2147483648), toInt64(2147483648) > toInt64(-2147483648), toInt64(2147483648) >= toInt64(-2147483648), toInt64(-2147483648) = toInt64(2147483648), toInt64(-2147483648) != toInt64(2147483648), toInt64(-2147483648) < toInt64(2147483648), toInt64(-2147483648) <= toInt64(2147483648), toInt64(-2147483648) > toInt64(2147483648), toInt64(-2147483648) >= toInt64(2147483648) 
SELECT jumpConsistentHash(intHash64(number), 787) FROM system.numbers LIMIT 1000000, 2;
INSERT INTO summing_merge_tree_with_sampling_with_list_of_columns_to_sum VALUES 
CREATE TABLE test_4E4B2B5A2564557923727E6828212D726C6234586E3E224E5B695A44666E264770757C564B5B6928(x UInt8) Engine=Memory;
select '-- distinct with primary key prefix and order by the same columns -> pre-distinct and final distinct optimization'
select * from (SELECT number as a FROM numbers(11)) t1 PASTE JOIN (select * from test limit 2) t2 SETTINGs max_threads=1;
DROP DATABASE IF EXISTS test_v0qtm42r 
CREATE TABLE test_6C6639362122534B2320284B754A642D2D597B3F7A66586F2E253D4E615B3D56722D6B20302C3E3E(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_7_357 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP TABLE matview_b_to_c;
SELECT 'Running test stateless/00063_check_query.sql from pid=1718' 
INSERT INTO TABLE arrow_decimal VALUES 
select 'fuzzer issue';
SELECT multiIf(cond1,then1,cond2,then2,then3) FROM test1_00395;
SELECT 1 FROM system.one WHERE (1, 1) IN (SELECT 1 AS x, x);
CREATE TABLE test_01193_18429.table_2_169 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT multiIf((number % 2) = 0, toInt64(1), (number % 3) = 0, toInt8(2), toUInt8(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_2_727 VALUES 
alter table many_mutations delete where y = 312 * 2 settings mutations_sync = 0;
CREATE TABLE test_01193_18429.table_8_926 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_4C6A60632D7E7C7D46355C252979653B7E35656C41763F56545D5D76392A346153725E6E6122743F(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_5_116 VALUES 
CREATE TABLE test_01193_18429.table_8_312 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT toFloat32(number) y, toDecimal32(y, 1), toDecimal64(y, 5), toDecimal128(y, 6), toDecimal256(y, 7) FROM numbers(7, 1);
CREATE TABLE test_02908_r3_213 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_213', 'r3') ORDER BY tuple()
DROP DATABASE IF EXISTS test_j3ejyms6 
select 2 = multiSearchFirstIndexUTF8(materialize('Hello World ÃÂ£'), materialize(['WORLD', 'ÃÂ£']));
INSERT INTO test_01193_18429.table_8_460 VALUES 
DROP DATABASE IF EXISTS test_oo6mr7i2 
DROP DATABASE IF EXISTS test_1wgc2g70 
SELECT 'Running test stateless/02518_delete_on_materialized_view.sql from pid=1713' 
CREATE TABLE t AS url
SELECT arrayCumSumNonNegative([1.2::Decimal(60, 30), 3.45::Decimal(61, 29)]);
INSERT INTO test_01193_18429.table_6_682 VALUES 
SELECT 'Running test stateless/02122_parallel_formatting_JSONCompactEachRowWithNames.sh from pid=1726' 
select '-- distinct with full key, order by sorted column desc';
CREATE TABLE test_617734406B4230283766682D64755D336C2B2B4B2B4D427348713334394F665A7D5F61406E3E4235(x UInt8) Engine=Memory;
SELECT toStartOfMinute(`dt`) AS `dt_m`, sum(`cost`) FROM `test_h5ttzow4`.`projection_test` GROUP BY `dt_m`
SELECT number AS id, toString(number) AS s, range(number) AS arr FROM numbers(10) FORMAT Arrow
system sync replica ttl_02265;
SELECT substr(id, 1 + 49) as short_id, ProfileEvents['BackupsOpenedForRead'], ProfileEvents['BackupsOpenedForWrite'] FROM system.backups WHERE id IN ['02915_lazy_loading_of_base_backups_test_tsnnbsbz_a', '02915_lazy_loading_of_base_backups_test_tsnnbsbz_b', '02915_lazy_loading_of_base_backups_test_tsnnbsbz_c', '02915_lazy_loading_of_base_backups_test_tsnnbsbz_r1', '02915_lazy_loading_of_base_backups_test_tsnnbsbz_r2', '02915_lazy_loading_of_base_backups_test_tsnnbsbz_r3'] ORDER BY short_id 
CREATE TABLE bftest__fuzz_21 (`k` Int64, `x` Array(Int64), INDEX ix1 x TYPE bloom_filter GRANULARITY 3) ENGINE = MergeTree ORDER BY k SETTINGS index_granularity = 47297, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 11787, prefer_fetch_merged_part_size_threshold = 5016794925, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 21850501, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 74068, primary_key_compress_block_size = 68536
INSERT INTO post_metrics SELECT repeat('a', (number % 10) + 1), toString(number), now() - toIntervalMinute(number), number * 100, number * 10, now() FROM numbers(100000);
SELECT round(h3HexAreaM2(arrayJoin([1,2])), 2);
CREATE TABLE arrow_types4 (int8 Int64, uint8 Int64, int16 Int64, uint16 Int64, int32 Int64, uint32 Int64, int64 Int64, uint64 Int64, float32 Int64, float64 Int64, string String, fixedstring String, date DateTime, datetime DateTime) ENGINE = Memory
SELECT '1' FROM numbers(10) INTERSECT SELECT '1' FROM numbers(10);
CREATE TABLE test_3A573B796638506669694A57266329673D3A5F682A294E6D383F6B42333F33765F7D6D2557405857(x UInt8) Engine=Memory;
ALTER TABLE dst_14 DROP PART '7_186_186_0'
SELECT 'Running test stateless/00261_storage_aliases_and_array_join.sql from pid=1720' 
SELECT mapKeys(NULL);
select arrayAUC([0, 3, 5, 6, 7.5, 8], [1, 0, 1, 0, 0, 0]);
alter table many_mutations delete where y = 139 * 2 settings mutations_sync = 0;
SELECT count(), `number` FROM `test_tc1uzesn`.`dist_01247` GROUP BY `number`
SELECT xxHash32(NULL);
SELECT '-- Test const timezone arguments --';
SELECT toDecimal32OrNull('1.1', 0);
SELECT detectLanguageMixed('Ã¬ÂÂ´Ã«ÂÂÃ«ÂÂ ÃªÂ°ÂÃ¬Â¹ÂÃªÂ°Â Ã¬ÂÂÃ«ÂÂ ÃªÂ³Â³Ã¬ÂÂ¼Ã«Â¡Â ÃªÂ°ÂÃ«Â Â¤Ã«Â©Â´ Ã¬Â§ÂÃ«Â¦ÂÃªÂ¸Â¸Ã¬ÂÂ Ã¬ÂÂÃ«ÂÂ¤');
CREATE TABLE test_01193_18429.table_6_591 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select * from file('test_02167.ORC', 'ORC')
CREATE TABLE test_01193_18429.table_7_168 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE t2 (`3c` Nullable(Int64), `4d` Nullable(String)) engine = Memory;
CREATE TABLE test_01193_18429.table_9_968 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_6_258 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP TABLE IF EXISTS nullable_prewhere
INSERT INTO test_01193_18429.table_3_674 VALUES 
SELECT 'Running test stateless/02876_json_incomplete_types_as_strings_inference.sql from pid=1713' 
CHECK TABLE t_source_part_is_intact SETTINGS max_threads = 1;
select concat(materialize(toFixedString('a', 1)), materialize(toFixedString('b', 1)), materialize('c')) == 'abc';
SELECT 'Checking s2 index generation.';
INSERT INTO test_02908_r1_174 SELECT rand64() FROM numbers(5);
SELECT sparkbar(11,3,7)(event_date,cnt) FROM spark_bar_test;
CREATE TABLE test_6D7E62562C3B7A51735B517A44584A232E2A305C472F7752427D2C233A2E6C3A7C3F2F34316F497C(x UInt8) Engine=Memory;
INSERT INTO r5 SELECT 35 % 10 = 5 ? 35 - 1 : 35
SELECT parseDateTimeBestEffortOrNull(materialize('2020-05-14T03:37:03.253184Z'), 3, 'UTC') AS a, toTypeName(a);
INSERT INTO test_01193_18429.table_7_453 VALUES 
INSERT INTO r10 SELECT 2 % 10 = 10 ? 2 - 1 : 2
select tuple(number) >= tuple(materialize(toUInt64OrNull(''))) from numbers(1);
SELECT arrayFirstIndex(x -> 0, [1, 2, 3]);
INSERT INTO r10 SELECT 10 % 10 = 10 ? 10 - 1 : 10
SELECT COUNT() FROM bloom_filter_array_types_test WHERE has(u64, 10);
SELECT has([111, NULL, 222], 333);
SELECT keycol, enum_col FROM table_key RIGHT JOIN table_with_enum USING (keycol) ORDER BY keycol;
DROP DATABASE IF EXISTS test_w8cbljtc 
CREATE TABLE dest_a (`count` UInt32, `min` Int32, `max` Int32, `count_subquery` Int32, `min_subquery` Int32, `max_subquery` Int32) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 61698, min_bytes_for_wide_part = 371217875, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 28, merge_max_block_size = 19184, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 83, min_merge_bytes_to_use_direct_io = 2607424751, index_granularity_bytes = 8286466, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 90757, primary_key_compress_block_size = 31220
select if(number % 5 == 0, toDecimal32OrZero(toString(number), 5), toDecimal32OrZero(toString(number + 1), 5)) from numbers(20);
CREATE TABLE test_01193_18429.table_5_420 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT count() FROM ( SELECT x, count() AS c FROM ( SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) UNION ALL SELECT * FROM ( SELECT * FROM sample_00632 WHERE x > 0 ) ) GROUP BY x --HAVING c = 1 ORDER BY x ASC );
CREATE TABLE t (`item_id` UInt64, `price_sold` Float32, `date` Date) ENGINE = MergeTree ORDER BY item_id SETTINGS index_granularity = 20681, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 17343, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 4695213, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 59069, primary_key_compress_block_size = 66836
SELECT toDate(toString(toDateTime('2000-01-01 00:00:00') + number)) FROM system.numbers LIMIT 3;
drop database if exists test_3eb2h3zx_repl_01111_2
select 'create table, column +type +NOT NULL +DEFAULT';
SELECT toStartOfWeek(d32) as d32, count() FROM with_fill_date GROUP BY d32 ORDER BY d32 WITH FILL STEP INTERVAL 1 WEEK LIMIT 5;
SELECT -128, -9223372036854775807, -128 = -9223372036854775807, -128 != -9223372036854775807, -128 < -9223372036854775807, -128 <= -9223372036854775807, -128 > -9223372036854775807, -128 >= -9223372036854775807, -9223372036854775807 = -128, -9223372036854775807 != -128, -9223372036854775807 < -128, -9223372036854775807 <= -128, -9223372036854775807 > -128, -9223372036854775807 >= -128 , toInt8(-128) = toInt64(-9223372036854775807), toInt8(-128) != toInt64(-9223372036854775807), toInt8(-128) < toInt64(-9223372036854775807), toInt8(-128) <= toInt64(-9223372036854775807), toInt8(-128) > toInt64(-9223372036854775807), toInt8(-128) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toInt8(-128), toInt64(-9223372036854775807) != toInt8(-128), toInt64(-9223372036854775807) < toInt8(-128), toInt64(-9223372036854775807) <= toInt8(-128), toInt64(-9223372036854775807) > toInt8(-128), toInt64(-9223372036854775807) >= toInt8(-128) , toInt16(-128) = toInt64(-9223372036854775807), toInt16(-128) != toInt64(-9223372036854775807), toInt16(-128) < toInt64(-9223372036854775807), toInt16(-128) <= toInt64(-9223372036854775807), toInt16(-128) > toInt64(-9223372036854775807), toInt16(-128) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toInt16(-128), toInt64(-9223372036854775807) != toInt16(-128), toInt64(-9223372036854775807) < toInt16(-128), toInt64(-9223372036854775807) <= toInt16(-128), toInt64(-9223372036854775807) > toInt16(-128), toInt64(-9223372036854775807) >= toInt16(-128) , toInt32(-128) = toInt64(-9223372036854775807), toInt32(-128) != toInt64(-9223372036854775807), toInt32(-128) < toInt64(-9223372036854775807), toInt32(-128) <= toInt64(-9223372036854775807), toInt32(-128) > toInt64(-9223372036854775807), toInt32(-128) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toInt32(-128), toInt64(-9223372036854775807) != toInt32(-128), toInt64(-9223372036854775807) < toInt32(-128), toInt64(-9223372036854775807) <= toInt32(-128), toInt64(-9223372036854775807) > toInt32(-128), toInt64(-9223372036854775807) >= toInt32(-128) , toInt64(-128) = toInt64(-9223372036854775807), toInt64(-128) != toInt64(-9223372036854775807), toInt64(-128) < toInt64(-9223372036854775807), toInt64(-128) <= toInt64(-9223372036854775807), toInt64(-128) > toInt64(-9223372036854775807), toInt64(-128) >= toInt64(-9223372036854775807), toInt64(-9223372036854775807) = toInt64(-128), toInt64(-9223372036854775807) != toInt64(-128), toInt64(-9223372036854775807) < toInt64(-128), toInt64(-9223372036854775807) <= toInt64(-128), toInt64(-9223372036854775807) > toInt64(-128), toInt64(-9223372036854775807) >= toInt64(-128) 
DROP TABLE test_00974;
SELECT dictGetHierarchy('01753_dictionary_db.direct_dictionary_simple_key_hierarchy', toUInt64(1));
SELECT t.val FROM t ALL RIGHT JOIN tj USING (key1, key2) ORDER BY key1 FORMAT TSVWithNames;
CREATE DATABASE IF NOT EXISTS test_1n4g8qni 
ALTER TABLE b MODIFY COLUMN x UInt8
CREATE TABLE rep_fsync_r2 (`key` Int) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/rep_fsync', 'r2') ORDER BY key SETTINGS min_bytes_for_wide_part = 0, fsync_after_insert = 1, fsync_part_directory = 1, index_granularity = 25801, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 79, merge_max_block_size = 9385, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 853151, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 5985280, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 59185, primary_key_compress_block_size = 77080
CREATE TABLE test_5C7158653025252526327D30724D7E516545417B79587B447E30377220694249316A52714E2C4376(x UInt8) Engine=Memory;
SELECT h3EdgeLengthKm(3);
select 'self full nullable vs not nullable';
SELECT toFloat32OrNull(NULL, NULL, NULL);
INSERT INTO src_2 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 21
INSERT INTO test01603(f64) SELECT 1 / (number + 1) FROM system.numbers LIMIT 1000;
SELECT 'Running test stateless/00431_if_nulls.sql from pid=1722' 
SELECT quantilesExactWeighted(0, 0.001, 0.01, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 0.99, 0.999, 1)(`number`, `number`) FROM `test_95gzsaf2`.`numbers_1001`
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, D as N SELECT toTypeName(r), DT != N as r FORMAT CSV;
SELECT 'Running test stateless/00900_orc_nullable_arrays_load.sh from pid=1720' 
select x + y + 1, argMax(x, y) * sum(x - y) as s from test_agg_proj group by x + y + 1 order by s desc limit 5 settings optimize_use_projections=1 format JSON
insert into test_float64 values 
INSERT INTO test_01193_18429.table_7_525 VALUES 
SELECT 255, 127, 255 = 127, 255 != 127, 255 < 127, 255 <= 127, 255 > 127, 255 >= 127, 127 = 255, 127 != 255, 127 < 255, 127 <= 255, 127 > 255, 127 >= 255 , toUInt8(255) = toUInt8(127), toUInt8(255) != toUInt8(127), toUInt8(255) < toUInt8(127), toUInt8(255) <= toUInt8(127), toUInt8(255) > toUInt8(127), toUInt8(255) >= toUInt8(127), toUInt8(127) = toUInt8(255), toUInt8(127) != toUInt8(255), toUInt8(127) < toUInt8(255), toUInt8(127) <= toUInt8(255), toUInt8(127) > toUInt8(255), toUInt8(127) >= toUInt8(255) , toUInt8(255) = toInt8(127), toUInt8(255) != toInt8(127), toUInt8(255) < toInt8(127), toUInt8(255) <= toInt8(127), toUInt8(255) > toInt8(127), toUInt8(255) >= toInt8(127), toInt8(127) = toUInt8(255), toInt8(127) != toUInt8(255), toInt8(127) < toUInt8(255), toInt8(127) <= toUInt8(255), toInt8(127) > toUInt8(255), toInt8(127) >= toUInt8(255) , toUInt8(255) = toUInt16(127), toUInt8(255) != toUInt16(127), toUInt8(255) < toUInt16(127), toUInt8(255) <= toUInt16(127), toUInt8(255) > toUInt16(127), toUInt8(255) >= toUInt16(127), toUInt16(127) = toUInt8(255), toUInt16(127) != toUInt8(255), toUInt16(127) < toUInt8(255), toUInt16(127) <= toUInt8(255), toUInt16(127) > toUInt8(255), toUInt16(127) >= toUInt8(255) , toUInt8(255) = toInt16(127), toUInt8(255) != toInt16(127), toUInt8(255) < toInt16(127), toUInt8(255) <= toInt16(127), toUInt8(255) > toInt16(127), toUInt8(255) >= toInt16(127), toInt16(127) = toUInt8(255), toInt16(127) != toUInt8(255), toInt16(127) < toUInt8(255), toInt16(127) <= toUInt8(255), toInt16(127) > toUInt8(255), toInt16(127) >= toUInt8(255) , toUInt8(255) = toUInt32(127), toUInt8(255) != toUInt32(127), toUInt8(255) < toUInt32(127), toUInt8(255) <= toUInt32(127), toUInt8(255) > toUInt32(127), toUInt8(255) >= toUInt32(127), toUInt32(127) = toUInt8(255), toUInt32(127) != toUInt8(255), toUInt32(127) < toUInt8(255), toUInt32(127) <= toUInt8(255), toUInt32(127) > toUInt8(255), toUInt32(127) >= toUInt8(255) , toUInt8(255) = toInt32(127), toUInt8(255) != toInt32(127), toUInt8(255) < toInt32(127), toUInt8(255) <= toInt32(127), toUInt8(255) > toInt32(127), toUInt8(255) >= toInt32(127), toInt32(127) = toUInt8(255), toInt32(127) != toUInt8(255), toInt32(127) < toUInt8(255), toInt32(127) <= toUInt8(255), toInt32(127) > toUInt8(255), toInt32(127) >= toUInt8(255) , toUInt8(255) = toUInt64(127), toUInt8(255) != toUInt64(127), toUInt8(255) < toUInt64(127), toUInt8(255) <= toUInt64(127), toUInt8(255) > toUInt64(127), toUInt8(255) >= toUInt64(127), toUInt64(127) = toUInt8(255), toUInt64(127) != toUInt8(255), toUInt64(127) < toUInt8(255), toUInt64(127) <= toUInt8(255), toUInt64(127) > toUInt8(255), toUInt64(127) >= toUInt8(255) , toUInt8(255) = toInt64(127), toUInt8(255) != toInt64(127), toUInt8(255) < toInt64(127), toUInt8(255) <= toInt64(127), toUInt8(255) > toInt64(127), toUInt8(255) >= toInt64(127), toInt64(127) = toUInt8(255), toInt64(127) != toUInt8(255), toInt64(127) < toUInt8(255), toInt64(127) <= toUInt8(255), toInt64(127) > toUInt8(255), toInt64(127) >= toUInt8(255) , toUInt16(255) = toUInt8(127), toUInt16(255) != toUInt8(127), toUInt16(255) < toUInt8(127), toUInt16(255) <= toUInt8(127), toUInt16(255) > toUInt8(127), toUInt16(255) >= toUInt8(127), toUInt8(127) = toUInt16(255), toUInt8(127) != toUInt16(255), toUInt8(127) < toUInt16(255), toUInt8(127) <= toUInt16(255), toUInt8(127) > toUInt16(255), toUInt8(127) >= toUInt16(255) , toUInt16(255) = toInt8(127), toUInt16(255) != toInt8(127), toUInt16(255) < toInt8(127), toUInt16(255) <= toInt8(127), toUInt16(255) > toInt8(127), toUInt16(255) >= toInt8(127), toInt8(127) = toUInt16(255), toInt8(127) != toUInt16(255), toInt8(127) < toUInt16(255), toInt8(127) <= toUInt16(255), toInt8(127) > toUInt16(255), toInt8(127) >= toUInt16(255) , toUInt16(255) = toUInt16(127), toUInt16(255) != toUInt16(127), toUInt16(255) < toUInt16(127), toUInt16(255) <= toUInt16(127), toUInt16(255) > toUInt16(127), toUInt16(255) >= toUInt16(127), toUInt16(127) = toUInt16(255), toUInt16(127) != toUInt16(255), toUInt16(127) < toUInt16(255), toUInt16(127) <= toUInt16(255), toUInt16(127) > toUInt16(255), toUInt16(127) >= toUInt16(255) , toUInt16(255) = toInt16(127), toUInt16(255) != toInt16(127), toUInt16(255) < toInt16(127), toUInt16(255) <= toInt16(127), toUInt16(255) > toInt16(127), toUInt16(255) >= toInt16(127), toInt16(127) = toUInt16(255), toInt16(127) != toUInt16(255), toInt16(127) < toUInt16(255), toInt16(127) <= toUInt16(255), toInt16(127) > toUInt16(255), toInt16(127) >= toUInt16(255) , toUInt16(255) = toUInt32(127), toUInt16(255) != toUInt32(127), toUInt16(255) < toUInt32(127), toUInt16(255) <= toUInt32(127), toUInt16(255) > toUInt32(127), toUInt16(255) >= toUInt32(127), toUInt32(127) = toUInt16(255), toUInt32(127) != toUInt16(255), toUInt32(127) < toUInt16(255), toUInt32(127) <= toUInt16(255), toUInt32(127) > toUInt16(255), toUInt32(127) >= toUInt16(255) , toUInt16(255) = toInt32(127), toUInt16(255) != toInt32(127), toUInt16(255) < toInt32(127), toUInt16(255) <= toInt32(127), toUInt16(255) > toInt32(127), toUInt16(255) >= toInt32(127), toInt32(127) = toUInt16(255), toInt32(127) != toUInt16(255), toInt32(127) < toUInt16(255), toInt32(127) <= toUInt16(255), toInt32(127) > toUInt16(255), toInt32(127) >= toUInt16(255) , toUInt16(255) = toUInt64(127), toUInt16(255) != toUInt64(127), toUInt16(255) < toUInt64(127), toUInt16(255) <= toUInt64(127), toUInt16(255) > toUInt64(127), toUInt16(255) >= toUInt64(127), toUInt64(127) = toUInt16(255), toUInt64(127) != toUInt16(255), toUInt64(127) < toUInt16(255), toUInt64(127) <= toUInt16(255), toUInt64(127) > toUInt16(255), toUInt64(127) >= toUInt16(255) , toUInt16(255) = toInt64(127), toUInt16(255) != toInt64(127), toUInt16(255) < toInt64(127), toUInt16(255) <= toInt64(127), toUInt16(255) > toInt64(127), toUInt16(255) >= toInt64(127), toInt64(127) = toUInt16(255), toInt64(127) != toUInt16(255), toInt64(127) < toUInt16(255), toInt64(127) <= toUInt16(255), toInt64(127) > toUInt16(255), toInt64(127) >= toUInt16(255) , toInt16(255) = toUInt8(127), toInt16(255) != toUInt8(127), toInt16(255) < toUInt8(127), toInt16(255) <= toUInt8(127), toInt16(255) > toUInt8(127), toInt16(255) >= toUInt8(127), toUInt8(127) = toInt16(255), toUInt8(127) != toInt16(255), toUInt8(127) < toInt16(255), toUInt8(127) <= toInt16(255), toUInt8(127) > toInt16(255), toUInt8(127) >= toInt16(255) , toInt16(255) = toInt8(127), toInt16(255) != toInt8(127), toInt16(255) < toInt8(127), toInt16(255) <= toInt8(127), toInt16(255) > toInt8(127), toInt16(255) >= toInt8(127), toInt8(127) = toInt16(255), toInt8(127) != toInt16(255), toInt8(127) < toInt16(255), toInt8(127) <= toInt16(255), toInt8(127) > toInt16(255), toInt8(127) >= toInt16(255) , toInt16(255) = toUInt16(127), toInt16(255) != toUInt16(127), toInt16(255) < toUInt16(127), toInt16(255) <= toUInt16(127), toInt16(255) > toUInt16(127), toInt16(255) >= toUInt16(127), toUInt16(127) = toInt16(255), toUInt16(127) != toInt16(255), toUInt16(127) < toInt16(255), toUInt16(127) <= toInt16(255), toUInt16(127) > toInt16(255), toUInt16(127) >= toInt16(255) , toInt16(255) = toInt16(127), toInt16(255) != toInt16(127), toInt16(255) < toInt16(127), toInt16(255) <= toInt16(127), toInt16(255) > toInt16(127), toInt16(255) >= toInt16(127), toInt16(127) = toInt16(255), toInt16(127) != toInt16(255), toInt16(127) < toInt16(255), toInt16(127) <= toInt16(255), toInt16(127) > toInt16(255), toInt16(127) >= toInt16(255) , toInt16(255) = toUInt32(127), toInt16(255) != toUInt32(127), toInt16(255) < toUInt32(127), toInt16(255) <= toUInt32(127), toInt16(255) > toUInt32(127), toInt16(255) >= toUInt32(127), toUInt32(127) = toInt16(255), toUInt32(127) != toInt16(255), toUInt32(127) < toInt16(255), toUInt32(127) <= toInt16(255), toUInt32(127) > toInt16(255), toUInt32(127) >= toInt16(255) , toInt16(255) = toInt32(127), toInt16(255) != toInt32(127), toInt16(255) < toInt32(127), toInt16(255) <= toInt32(127), toInt16(255) > toInt32(127), toInt16(255) >= toInt32(127), toInt32(127) = toInt16(255), toInt32(127) != toInt16(255), toInt32(127) < toInt16(255), toInt32(127) <= toInt16(255), toInt32(127) > toInt16(255), toInt32(127) >= toInt16(255) , toInt16(255) = toUInt64(127), toInt16(255) != toUInt64(127), toInt16(255) < toUInt64(127), toInt16(255) <= toUInt64(127), toInt16(255) > toUInt64(127), toInt16(255) >= toUInt64(127), toUInt64(127) = toInt16(255), toUInt64(127) != toInt16(255), toUInt64(127) < toInt16(255), toUInt64(127) <= toInt16(255), toUInt64(127) > toInt16(255), toUInt64(127) >= toInt16(255) , toInt16(255) = toInt64(127), toInt16(255) != toInt64(127), toInt16(255) < toInt64(127), toInt16(255) <= toInt64(127), toInt16(255) > toInt64(127), toInt16(255) >= toInt64(127), toInt64(127) = toInt16(255), toInt64(127) != toInt16(255), toInt64(127) < toInt16(255), toInt64(127) <= toInt16(255), toInt64(127) > toInt16(255), toInt64(127) >= toInt16(255) , toUInt32(255) = toUInt8(127), toUInt32(255) != toUInt8(127), toUInt32(255) < toUInt8(127), toUInt32(255) <= toUInt8(127), toUInt32(255) > toUInt8(127), toUInt32(255) >= toUInt8(127), toUInt8(127) = toUInt32(255), toUInt8(127) != toUInt32(255), toUInt8(127) < toUInt32(255), toUInt8(127) <= toUInt32(255), toUInt8(127) > toUInt32(255), toUInt8(127) >= toUInt32(255) , toUInt32(255) = toInt8(127), toUInt32(255) != toInt8(127), toUInt32(255) < toInt8(127), toUInt32(255) <= toInt8(127), toUInt32(255) > toInt8(127), toUInt32(255) >= toInt8(127), toInt8(127) = toUInt32(255), toInt8(127) != toUInt32(255), toInt8(127) < toUInt32(255), toInt8(127) <= toUInt32(255), toInt8(127) > toUInt32(255), toInt8(127) >= toUInt32(255) , toUInt32(255) = toUInt16(127), toUInt32(255) != toUInt16(127), toUInt32(255) < toUInt16(127), toUInt32(255) <= toUInt16(127), toUInt32(255) > toUInt16(127), toUInt32(255) >= toUInt16(127), toUInt16(127) = toUInt32(255), toUInt16(127) != toUInt32(255), toUInt16(127) < toUInt32(255), toUInt16(127) <= toUInt32(255), toUInt16(127) > toUInt32(255), toUInt16(127) >= toUInt32(255) , toUInt32(255) = toInt16(127), toUInt32(255) != toInt16(127), toUInt32(255) < toInt16(127), toUInt32(255) <= toInt16(127), toUInt32(255) > toInt16(127), toUInt32(255) >= toInt16(127), toInt16(127) = toUInt32(255), toInt16(127) != toUInt32(255), toInt16(127) < toUInt32(255), toInt16(127) <= toUInt32(255), toInt16(127) > toUInt32(255), toInt16(127) >= toUInt32(255) , toUInt32(255) = toUInt32(127), toUInt32(255) != toUInt32(127), toUInt32(255) < toUInt32(127), toUInt32(255) <= toUInt32(127), toUInt32(255) > toUInt32(127), toUInt32(255) >= toUInt32(127), toUInt32(127) = toUInt32(255), toUInt32(127) != toUInt32(255), toUInt32(127) < toUInt32(255), toUInt32(127) <= toUInt32(255), toUInt32(127) > toUInt32(255), toUInt32(127) >= toUInt32(255) , toUInt32(255) = toInt32(127), toUInt32(255) != toInt32(127), toUInt32(255) < toInt32(127), toUInt32(255) <= toInt32(127), toUInt32(255) > toInt32(127), toUInt32(255) >= toInt32(127), toInt32(127) = toUInt32(255), toInt32(127) != toUInt32(255), toInt32(127) < toUInt32(255), toInt32(127) <= toUInt32(255), toInt32(127) > toUInt32(255), toInt32(127) >= toUInt32(255) , toUInt32(255) = toUInt64(127), toUInt32(255) != toUInt64(127), toUInt32(255) < toUInt64(127), toUInt32(255) <= toUInt64(127), toUInt32(255) > toUInt64(127), toUInt32(255) >= toUInt64(127), toUInt64(127) = toUInt32(255), toUInt64(127) != toUInt32(255), toUInt64(127) < toUInt32(255), toUInt64(127) <= toUInt32(255), toUInt64(127) > toUInt32(255), toUInt64(127) >= toUInt32(255) , toUInt32(255) = toInt64(127), toUInt32(255) != toInt64(127), toUInt32(255) < toInt64(127), toUInt32(255) <= toInt64(127), toUInt32(255) > toInt64(127), toUInt32(255) >= toInt64(127), toInt64(127) = toUInt32(255), toInt64(127) != toUInt32(255), toInt64(127) < toUInt32(255), toInt64(127) <= toUInt32(255), toInt64(127) > toUInt32(255), toInt64(127) >= toUInt32(255) , toInt32(255) = toUInt8(127), toInt32(255) != toUInt8(127), toInt32(255) < toUInt8(127), toInt32(255) <= toUInt8(127), toInt32(255) > toUInt8(127), toInt32(255) >= toUInt8(127), toUInt8(127) = toInt32(255), toUInt8(127) != toInt32(255), toUInt8(127) < toInt32(255), toUInt8(127) <= toInt32(255), toUInt8(127) > toInt32(255), toUInt8(127) >= toInt32(255) , toInt32(255) = toInt8(127), toInt32(255) != toInt8(127), toInt32(255) < toInt8(127), toInt32(255) <= toInt8(127), toInt32(255) > toInt8(127), toInt32(255) >= toInt8(127), toInt8(127) = toInt32(255), toInt8(127) != toInt32(255), toInt8(127) < toInt32(255), toInt8(127) <= toInt32(255), toInt8(127) > toInt32(255), toInt8(127) >= toInt32(255) , toInt32(255) = toUInt16(127), toInt32(255) != toUInt16(127), toInt32(255) < toUInt16(127), toInt32(255) <= toUInt16(127), toInt32(255) > toUInt16(127), toInt32(255) >= toUInt16(127), toUInt16(127) = toInt32(255), toUInt16(127) != toInt32(255), toUInt16(127) < toInt32(255), toUInt16(127) <= toInt32(255), toUInt16(127) > toInt32(255), toUInt16(127) >= toInt32(255) , toInt32(255) = toInt16(127), toInt32(255) != toInt16(127), toInt32(255) < toInt16(127), toInt32(255) <= toInt16(127), toInt32(255) > toInt16(127), toInt32(255) >= toInt16(127), toInt16(127) = toInt32(255), toInt16(127) != toInt32(255), toInt16(127) < toInt32(255), toInt16(127) <= toInt32(255), toInt16(127) > toInt32(255), toInt16(127) >= toInt32(255) , toInt32(255) = toUInt32(127), toInt32(255) != toUInt32(127), toInt32(255) < toUInt32(127), toInt32(255) <= toUInt32(127), toInt32(255) > toUInt32(127), toInt32(255) >= toUInt32(127), toUInt32(127) = toInt32(255), toUInt32(127) != toInt32(255), toUInt32(127) < toInt32(255), toUInt32(127) <= toInt32(255), toUInt32(127) > toInt32(255), toUInt32(127) >= toInt32(255) , toInt32(255) = toInt32(127), toInt32(255) != toInt32(127), toInt32(255) < toInt32(127), toInt32(255) <= toInt32(127), toInt32(255) > toInt32(127), toInt32(255) >= toInt32(127), toInt32(127) = toInt32(255), toInt32(127) != toInt32(255), toInt32(127) < toInt32(255), toInt32(127) <= toInt32(255), toInt32(127) > toInt32(255), toInt32(127) >= toInt32(255) , toInt32(255) = toUInt64(127), toInt32(255) != toUInt64(127), toInt32(255) < toUInt64(127), toInt32(255) <= toUInt64(127), toInt32(255) > toUInt64(127), toInt32(255) >= toUInt64(127), toUInt64(127) = toInt32(255), toUInt64(127) != toInt32(255), toUInt64(127) < toInt32(255), toUInt64(127) <= toInt32(255), toUInt64(127) > toInt32(255), toUInt64(127) >= toInt32(255) , toInt32(255) = toInt64(127), toInt32(255) != toInt64(127), toInt32(255) < toInt64(127), toInt32(255) <= toInt64(127), toInt32(255) > toInt64(127), toInt32(255) >= toInt64(127), toInt64(127) = toInt32(255), toInt64(127) != toInt32(255), toInt64(127) < toInt32(255), toInt64(127) <= toInt32(255), toInt64(127) > toInt32(255), toInt64(127) >= toInt32(255) , toUInt64(255) = toUInt8(127), toUInt64(255) != toUInt8(127), toUInt64(255) < toUInt8(127), toUInt64(255) <= toUInt8(127), toUInt64(255) > toUInt8(127), toUInt64(255) >= toUInt8(127), toUInt8(127) = toUInt64(255), toUInt8(127) != toUInt64(255), toUInt8(127) < toUInt64(255), toUInt8(127) <= toUInt64(255), toUInt8(127) > toUInt64(255), toUInt8(127) >= toUInt64(255) , toUInt64(255) = toInt8(127), toUInt64(255) != toInt8(127), toUInt64(255) < toInt8(127), toUInt64(255) <= toInt8(127), toUInt64(255) > toInt8(127), toUInt64(255) >= toInt8(127), toInt8(127) = toUInt64(255), toInt8(127) != toUInt64(255), toInt8(127) < toUInt64(255), toInt8(127) <= toUInt64(255), toInt8(127) > toUInt64(255), toInt8(127) >= toUInt64(255) , toUInt64(255) = toUInt16(127), toUInt64(255) != toUInt16(127), toUInt64(255) < toUInt16(127), toUInt64(255) <= toUInt16(127), toUInt64(255) > toUInt16(127), toUInt64(255) >= toUInt16(127), toUInt16(127) = toUInt64(255), toUInt16(127) != toUInt64(255), toUInt16(127) < toUInt64(255), toUInt16(127) <= toUInt64(255), toUInt16(127) > toUInt64(255), toUInt16(127) >= toUInt64(255) , toUInt64(255) = toInt16(127), toUInt64(255) != toInt16(127), toUInt64(255) < toInt16(127), toUInt64(255) <= toInt16(127), toUInt64(255) > toInt16(127), toUInt64(255) >= toInt16(127), toInt16(127) = toUInt64(255), toInt16(127) != toUInt64(255), toInt16(127) < toUInt64(255), toInt16(127) <= toUInt64(255), toInt16(127) > toUInt64(255), toInt16(127) >= toUInt64(255) , toUInt64(255) = toUInt32(127), toUInt64(255) != toUInt32(127), toUInt64(255) < toUInt32(127), toUInt64(255) <= toUInt32(127), toUInt64(255) > toUInt32(127), toUInt64(255) >= toUInt32(127), toUInt32(127) = toUInt64(255), toUInt32(127) != toUInt64(255), toUInt32(127) < toUInt64(255), toUInt32(127) <= toUInt64(255), toUInt32(127) > toUInt64(255), toUInt32(127) >= toUInt64(255) , toUInt64(255) = toInt32(127), toUInt64(255) != toInt32(127), toUInt64(255) < toInt32(127), toUInt64(255) <= toInt32(127), toUInt64(255) > toInt32(127), toUInt64(255) >= toInt32(127), toInt32(127) = toUInt64(255), toInt32(127) != toUInt64(255), toInt32(127) < toUInt64(255), toInt32(127) <= toUInt64(255), toInt32(127) > toUInt64(255), toInt32(127) >= toUInt64(255) , toUInt64(255) = toUInt64(127), toUInt64(255) != toUInt64(127), toUInt64(255) < toUInt64(127), toUInt64(255) <= toUInt64(127), toUInt64(255) > toUInt64(127), toUInt64(255) >= toUInt64(127), toUInt64(127) = toUInt64(255), toUInt64(127) != toUInt64(255), toUInt64(127) < toUInt64(255), toUInt64(127) <= toUInt64(255), toUInt64(127) > toUInt64(255), toUInt64(127) >= toUInt64(255) , toUInt64(255) = toInt64(127), toUInt64(255) != toInt64(127), toUInt64(255) < toInt64(127), toUInt64(255) <= toInt64(127), toUInt64(255) > toInt64(127), toUInt64(255) >= toInt64(127), toInt64(127) = toUInt64(255), toInt64(127) != toUInt64(255), toInt64(127) < toUInt64(255), toInt64(127) <= toUInt64(255), toInt64(127) > toUInt64(255), toInt64(127) >= toUInt64(255) , toInt64(255) = toUInt8(127), toInt64(255) != toUInt8(127), toInt64(255) < toUInt8(127), toInt64(255) <= toUInt8(127), toInt64(255) > toUInt8(127), toInt64(255) >= toUInt8(127), toUInt8(127) = toInt64(255), toUInt8(127) != toInt64(255), toUInt8(127) < toInt64(255), toUInt8(127) <= toInt64(255), toUInt8(127) > toInt64(255), toUInt8(127) >= toInt64(255) , toInt64(255) = toInt8(127), toInt64(255) != toInt8(127), toInt64(255) < toInt8(127), toInt64(255) <= toInt8(127), toInt64(255) > toInt8(127), toInt64(255) >= toInt8(127), toInt8(127) = toInt64(255), toInt8(127) != toInt64(255), toInt8(127) < toInt64(255), toInt8(127) <= toInt64(255), toInt8(127) > toInt64(255), toInt8(127) >= toInt64(255) , toInt64(255) = toUInt16(127), toInt64(255) != toUInt16(127), toInt64(255) < toUInt16(127), toInt64(255) <= toUInt16(127), toInt64(255) > toUInt16(127), toInt64(255) >= toUInt16(127), toUInt16(127) = toInt64(255), toUInt16(127) != toInt64(255), toUInt16(127) < toInt64(255), toUInt16(127) <= toInt64(255), toUInt16(127) > toInt64(255), toUInt16(127) >= toInt64(255) , toInt64(255) = toInt16(127), toInt64(255) != toInt16(127), toInt64(255) < toInt16(127), toInt64(255) <= toInt16(127), toInt64(255) > toInt16(127), toInt64(255) >= toInt16(127), toInt16(127) = toInt64(255), toInt16(127) != toInt64(255), toInt16(127) < toInt64(255), toInt16(127) <= toInt64(255), toInt16(127) > toInt64(255), toInt16(127) >= toInt64(255) , toInt64(255) = toUInt32(127), toInt64(255) != toUInt32(127), toInt64(255) < toUInt32(127), toInt64(255) <= toUInt32(127), toInt64(255) > toUInt32(127), toInt64(255) >= toUInt32(127), toUInt32(127) = toInt64(255), toUInt32(127) != toInt64(255), toUInt32(127) < toInt64(255), toUInt32(127) <= toInt64(255), toUInt32(127) > toInt64(255), toUInt32(127) >= toInt64(255) , toInt64(255) = toInt32(127), toInt64(255) != toInt32(127), toInt64(255) < toInt32(127), toInt64(255) <= toInt32(127), toInt64(255) > toInt32(127), toInt64(255) >= toInt32(127), toInt32(127) = toInt64(255), toInt32(127) != toInt64(255), toInt32(127) < toInt64(255), toInt32(127) <= toInt64(255), toInt32(127) > toInt64(255), toInt32(127) >= toInt64(255) , toInt64(255) = toUInt64(127), toInt64(255) != toUInt64(127), toInt64(255) < toUInt64(127), toInt64(255) <= toUInt64(127), toInt64(255) > toUInt64(127), toInt64(255) >= toUInt64(127), toUInt64(127) = toInt64(255), toUInt64(127) != toInt64(255), toUInt64(127) < toInt64(255), toUInt64(127) <= toInt64(255), toUInt64(127) > toInt64(255), toUInt64(127) >= toInt64(255) , toInt64(255) = toInt64(127), toInt64(255) != toInt64(127), toInt64(255) < toInt64(127), toInt64(255) <= toInt64(127), toInt64(255) > toInt64(127), toInt64(255) >= toInt64(127), toInt64(127) = toInt64(255), toInt64(127) != toInt64(255), toInt64(127) < toInt64(255), toInt64(127) <= toInt64(255), toInt64(127) > toInt64(255), toInt64(127) >= toInt64(255) 
SELECT [number][arrayJoin([0xFFFFFFFFFFFFFFFF, 10000000000, 0, 1])] FROM numbers(2);
DROP DATABASE IF EXISTS test_wf168i7x 
CREATE USER IF NOT EXISTS `02833_TCP_USER_25955_2` IDENTIFIED WITH plaintext_password
CREATE TABLE test_01193_18429.table_3_827 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP TABLE 01765_db.simple_key_hierarchy_table;
INSERT INTO test_01193_18429.table_5_222 VALUES 
SELECT count() FROM t_cnf_fuzz WHERE (c4) OR ((NOT c1)) OR (c3) OR (c5 AND c8 AND c8 AND c3 AND (NOT c4)) OR (c7 AND (NOT c5) AND (NOT c8)) OR ((NOT c1)) OR (c7 AND (NOT c2) AND c7 AND c5) SETTINGS convert_query_to_cnf = 1
CREATE TABLE test_01193_18429.table_4_515 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_3864303C6D5733763C337E7568623E636727303E743B26625A3136705E3B4C3757377A705B704E67(x UInt8) Engine=Memory;
SELECT 'tn1 ANY LEFT JOIN t2 | bs = 9';
select * from file(dump4.sql, MySQLDump) settings max_threads=1
desc file('test_02149_schema_inference_test_2lktp9cn.data', 'MsgPack') settings input_format_msgpack_number_of_columns=6
CREATE TABLE test_7538593F6F37492F3074585836744A31754173334E5B4746293332527438372E6869394C28285F52(x UInt8) Engine=Memory;
SELECT * FROM test_collation ORDER BY v ASC COLLATE 'en';
SELECT nan = toUInt16(0), nan != toUInt16(0), nan < toUInt16(0), nan > toUInt16(0), nan <= toUInt16(0), nan >= toUInt16(0);
select hasSubsequence('ClickHouse - ÃÂÃÂÃÂ¾ÃÂ»ÃÂ±ÃÂÃÂ¾ÃÂ²ÃÂ°ÃÂ ÃÂÃÂ¸ÃÂÃÂÃÂµÃÂ¼ÃÂ° ÃÂÃÂ¿ÃÂÃÂ°ÃÂ²ÃÂ»ÃÂµÃÂ½ÃÂ¸ÃÂ ÃÂ±ÃÂ°ÃÂ·ÃÂ°ÃÂ¼ÃÂ¸ ÃÂ´ÃÂ°ÃÂ½ÃÂ½ÃÂÃÂ ', 'C');
SELECT toString(toStartOfFifteenMinutes(toDateTime(1549483055), 'Europe/Paris'), 'Europe/Paris');
SELECT CASE WHEN (number % 2) = 0 THEN toUInt16(1) WHEN (number % 3) = 0 THEN toInt32(2) ELSE toFloat32(3) END FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/01641_memory_tracking_insert_optimize.sql from pid=1718' 
SELECT count() FROM system.opentelemetry_span_log WHERE finish_date >= yesterday() AND lower(hex(trace_id)) = 'd1955790d2304804bd7384c54179083d' AND kind = 'SERVER' ;
ALTER TABLE partitioned_by_week DROP PARTITION '1999-12-27';
INSERT INTO with_lonely SELECT number+60000, '2022-11-01', number*10, 2 FROM numbers(10);
CREATE TABLE test_6D6957675A265A24313A662F49722C6647695A3D4740253A79213F7A755C3051785855606B506E53(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN toFloat32(1) WHEN (number % 3) = 0 THEN toInt16(2) ELSE toUInt8(3) END FROM system.numbers LIMIT 10;
EXPLAIN QUERY TREE SELECT cityHash64(a) + 10, b + 3 FROM column_swap_test_test WHERE cityHash64(a) = 1 SETTINGS allow_experimental_analyzer = 1;
DROP TABLE mutations_cleaner_r1 SYNC
SELECT d, a FROM pk_order ORDER BY d DESC, a DESC LIMIT 5;
select dummy from (select dummy + dummy + 0 as l, dummy from remote('127.{1,1}', system.one) where dummy + dummy >= 0 limit 1 by l) settings prefer_localhost_replica=0,distributed_group_by_no_merge=2,distributed_push_down_limit=0;
CREATE TABLE test_01193_18429.table_3_128 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
EXPLAIN SYNTAX SELECT * FROM t1_00826 cross join t2_00826 where t1_00826.b = t2_00826.a AND (t2_00826.b IS NULL OR t2_00826.b > t2_00826.a);
SELECT '119' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ffff:ffff:ffff:fe00')))
SELECT vectorDifference(tuplePlus((1, 2), (3, 4)), (5, 6));
CREATE TABLE test_01193_18429.table_5_747 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP DATABASE IF EXISTS test_c4dkybke 
INSERT INTO test_01193_18429.table_10_214 VALUES 
EXPLAIN SYNTAX SELECT * FROM prewhere_move_select_final FINAL WHERE x > 100;
CREATE INDEX idx_tab4_0 ON tab4 (col3 DESC);
alter table many_mutations delete where y = 481 * 2 settings mutations_sync = 0;
SELECT 'toStartOfDay;toDate32;true', toStartOfDay(toDate32('1920-02-02', 'UTC'), 'UTC') SETTINGS enable_extended_results_for_datetime_functions = true;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toUInt64(1) >= N as r FORMAT CSV;
CREATE TABLE dst (`count` UInt64, `market` Int32, `w_end` DateTime) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 32413, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 19560, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 91, min_merge_bytes_to_use_direct_io = 2446834805, index_granularity_bytes = 29045876, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 23956, primary_key_compress_block_size = 74236
select makeDate32(0, 1);
CREATE PROFILE s4_01294 TO u1_01294;
SELECT parseDateTimeBestEffort('Dec 15, 2021', 3, 'UTC') AS a, toTypeName(a);
SELECT toInt16(number - 10) AS x, round(x, -2), roundBankers(x, -2), floor(x, -2), ceil(x, -2), trunc(x, -2) FROM system.numbers LIMIT 20;
INSERT INTO src VALUES /* (14, 1) */ 
SELECT 'Running test stateless/00625_query_in_form_data.sh from pid=1714' 
SELECT CASE WHEN (number % 2) = 0 THEN [toInt8(1), toInt8(2)] WHEN (number % 3) = 0 THEN [toInt16(2), toInt16(3)] ELSE [toFloat64(3), toFloat64(3)] END FROM system.numbers LIMIT 10;
insert into j select number, number from numbers(10);
SELECT count(), min(x), max(x), sum(x) FROM r3;
CREATE DATABASE IF NOT EXISTS test_wz28ldst 
INSERT INTO ip_trie_dictionary_decimal_source_table VALUES 
SELECT count() FROM test_01778 WHERE toString(key) = 'xxx';
CREATE TABLE bf_ngrambf_map_values_test (`row_id` UInt32, `map` Map(String, String), `map_fixed` Map(FixedString(2), String), INDEX map_values_ngrambf mapKeys(map) TYPE ngrambf_v1(4, 256, 2, 0) GRANULARITY 1, INDEX map_fixed_values_ngrambf mapKeys(map_fixed) TYPE ngrambf_v1(4, 256, 2, 0) GRANULARITY 1) ENGINE = MergeTree ORDER BY row_id SETTINGS index_granularity = 1, min_bytes_for_wide_part = 252982954, ratio_of_defaults_for_sparse_serialization = 0.4468041658401489, replace_long_file_name_to_hash = false, max_file_name_length = 34, merge_max_block_size = 18471, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10198843246, index_granularity_bytes = 26276717, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 91427, primary_key_compress_block_size = 35458
SELECT FROM_UNIXTIME(1232456, '%Y-%m-%d', 'UTC');
CREATE DATABASE IF NOT EXISTS test_par7b7k4 
SELECT 'Running test stateless/00098_e_union_all.sql from pid=1713' 
explain description=0 with sub1 as (select x, y from tab1 where x != 2), sub2 as (select y, z from tab2 where y != 4), sub3 as (select l.x, l.y, r.y, r.z as z from sub2 r any right join sub1 l on l.y = r.y), sub4 as (select z, a from tab3 where z != 8), sub5 as (select x, l.y, y, z, rr.z, a from sub3 ll any left join sub4 rr on ll.z = rr.z) select * from sub5 SETTINGS allow_experimental_parallel_reading_from_replicas = 2, max_parallel_replicas = 2, parallel_replicas_for_non_replicated_merge_tree = 1, prefer_localhost_replica = 1, cluster_for_parallel_replicas = 'test_cluster_one_shard_three_replicas_localhost', allow_experimental_analyzer=1;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (28 < 62 AND 30 > 0 ? 28 : 0)), throwIf(last != (28 < 62 AND 30 > 0 ? least(62 - 1, 28 + 30 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(62) LIMIT 28, 30);
SELECT toNullable(toInt256(321)) IN (NULL);
SELECT multiIf((number % 2) = 0, toInt64(1), (number % 3) = 0, toInt32(2), toUInt8(3)) FROM system.numbers LIMIT 10;
select hex(sipHash128ReferenceKeyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46)));
DROP DATABASE IF EXISTS test_iybvh79d 
SELECT count() == 15 FROM (SELECT 100 AS s) AS js1 ALL FULL JOIN ( SELECT number AS s FROM numbers(14) ) AS js2 USING (s);
SELECT JSON_QUERY('{"1key":1}', '$.1key');
CREATE TABLE test_01193_18429.table_7_56 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP DATABASE IF EXISTS test_h8jv2d80 
DROP DATABASE IF EXISTS test_o5s728y1 
CREATE TABLE products ( product_id Int64, product_name String, price DECIMAL(11, 2), group_id Int64 ) Engine = Memory;
select round(1000 * ngramDistance(materialize(''), '')) from system.numbers limit 5;
INSERT INTO test_01193_18429.table_10_939 VALUES 
select makeDate32(1969,12,31);
drop table if exists null_01293;
SELECT arrayJoin(CAST(['hello', 'world'] AS Array(FixedString(5)))) LIKE 'orld%';
INSERT INTO polygons_test_table VALUES 
INSERT INTO test_01193_18429.table_6_398 VALUES 
DROP DATABASE IF EXISTS test_tmos600x 
CREATE DATABASE IF NOT EXISTS test_hcvwi65m 
SELECT count() > 0 FROM (SELECT * FROM system.columns LIMIT 7);
CREATE TABLE test_01193_18429.table_4_910 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_2_905 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO table_gcd_codec_int16 SELECT number FROM system.numbers LIMIT 50;
CREATE TABLE test_01193_18429.table_1_572 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_6_439 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_3_890 VALUES 
insert into kv values 
ALTER TABLE test_generic_events_all ADD COLUMN OperatingSystem UInt64 DEFAULT 42;
SELECT * FROM 02188_test_dictionary_simple_primary_key;
ALTER TABLE tab MODIFY COLUMN mtrl Int64 MATERIALIZED 65432;
INSERT INTO test_01193_18429.table_5_77 VALUES 
SELECT multiIf((number % 2) = 0, toInt64(1), (number % 3) = 0, toUInt16(2), toInt32(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_2350516B68697A534E466F2C2A506E45733A606F777320306349487C386F7C75315E3D50613C4D69(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_10_343 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_10_556 VALUES 
SELECT count(distinct concat(value, '_')) FROM alter_mt WHERE not sleepEachRow(2)
INSERT INTO test_01193_18429.table_7_206 VALUES 
DROP TABLE IF EXISTS t_v;
SELECT version();
SELECT number > 5 ? 'censor.net' : 'google' as value, value FROM system.numbers LIMIT 10;
drop table if exists projection_test_d;
SET max_joined_block_size_rows = 2000;
CREATE TABLE test_01193_18429.table_4_375 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_3F522D7D4F3F4160722E44594E502C796351313A67767C432B492E5D5B3D43255B6D734E34574645(x UInt8) Engine=Memory;
CREATE TABLE test_495F37255A67546E6557293035396A5B574C41406B3F732E5D213D482C23415238394859635F4521(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS samples;
SELECT TOP 2 * FROM test_00687 ORDER BY val;
INSERT INTO r7 SELECT 86
SELECT _CAST(42, 'UInt64'), 'hello', _CAST(1659659453, 'DateTime'), _CAST([('2b95a497-3a5d-49af-bf85-15763318cde7', [1.2000000476837158, 3.4000000953674316])], 'Map(UUID, Array(Float32))')
CREATE TABLE low_card ( `lc` LowCardinality(String) ) ENGINE = Join(ANY, LEFT, lc);
CREATE TABLE test_01193_18429.table_1_427 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT toDateTime('9223372036854775806', 8, 'Asia/Istanbul');
SELECT * FROM t1 FULL JOIN t4 ON t1.a <=> t4.a AND t1.b <=> t4.b ORDER BY t1.val NULLS FIRST, t4.val NULLS FIRST ;
SELECT CASE WHEN (number % 2) = 0 THEN toInt32(1) WHEN (number % 3) = 0 THEN toInt16(2) ELSE toUInt32(3) END FROM system.numbers LIMIT 10;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (69 < 16 AND 110 > 0 ? 69 : 0)), throwIf(last != (69 < 16 AND 110 > 0 ? least(16 - 1, 69 + 110 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(16) LIMIT 69, 110);
OPTIMIZE TABLE sites FINAL;
CREATE TABLE test_01193_18429.table_6_887 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT throwIf((SELECT sum(nm) FROM mv) != 192) FORMAT Null;
OPTIMIZE TABLE collapsing_00682 PARTITION tuple() FINAL
with '2018-01-12 22:33:44' as s, toDateTime(s, 'UTC') as datetime, toDateTime64(s, 6, 'UTC') as datetime64, toDate(s) as date, toDate32(s) as date32 select formatDateTimeInJodaSyntax(datetime, 'zzzz'), formatDateTimeInJodaSyntax(datetime64, 'zzzz');
alter table many_mutations delete where y = 78 * 2 settings mutations_sync = 0;
SELECT visibleWidth('ClickHouseÃ¦ÂÂ¯Ã¤Â¸ÂÃ¤Â¸ÂªÃ¥Â¾ÂÃ¥Â¥Â½Ã§ÂÂÃ¦ÂÂ°Ã¦ÂÂ®Ã¥ÂºÂ');
CREATE TABLE data_00184 Engine=Memory() AS SELECT * FROM numbers(2);
select * from system.text_log where event_date >= yesterday() and message like '%[hidden]%';
INSERT INTO array_of_arrays_protobuf_00825 SETTINGS format_schema='/usr/share/clickhouse-test/queries/0_stateless/format_schemas/00825_protobuf_format_array_of_arrays:AA' FORMAT Protobuf
DROP DATABASE IF EXISTS 01069_window_view_proc_tumble_watch
SELECT * FROM bloom_filter_idx WHERE s = 'aÃÂ±ÃÂ²ÃÂ³ÃÂ´ÃÂµÃÂÃÂ¶' ORDER BY k
SELECT 'tn1 ANY RIGHT JOIN t2 | bs = 1';
SELECT da FROM ps WHERE dt = _CAST((10, ('dt', 10)), 'Tuple(UInt8, Tuple(String, UInt8))')
insert into rmt1 values
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (66 < 50 AND 57 > 0 ? 66 : 0)), throwIf(last != (66 < 50 AND 57 > 0 ? least(50 - 1, 66 + 57 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(50) LIMIT 66, 57);
CREATE TABLE const_in_const (id UInt64, date Date, uid UInt32, name String, Sign Int8) ENGINE = CollapsingMergeTree(date, intHash32(uid), (id, date, intHash32(uid)), 8192, Sign);
SELECT 1, 4294967296, 1 = 4294967296, 1 != 4294967296, 1 < 4294967296, 1 <= 4294967296, 1 > 4294967296, 1 >= 4294967296, 4294967296 = 1, 4294967296 != 1, 4294967296 < 1, 4294967296 <= 1, 4294967296 > 1, 4294967296 >= 1 , toUInt8(1) = toUInt64(4294967296), toUInt8(1) != toUInt64(4294967296), toUInt8(1) < toUInt64(4294967296), toUInt8(1) <= toUInt64(4294967296), toUInt8(1) > toUInt64(4294967296), toUInt8(1) >= toUInt64(4294967296), toUInt64(4294967296) = toUInt8(1), toUInt64(4294967296) != toUInt8(1), toUInt64(4294967296) < toUInt8(1), toUInt64(4294967296) <= toUInt8(1), toUInt64(4294967296) > toUInt8(1), toUInt64(4294967296) >= toUInt8(1) , toUInt8(1) = toInt64(4294967296), toUInt8(1) != toInt64(4294967296), toUInt8(1) < toInt64(4294967296), toUInt8(1) <= toInt64(4294967296), toUInt8(1) > toInt64(4294967296), toUInt8(1) >= toInt64(4294967296), toInt64(4294967296) = toUInt8(1), toInt64(4294967296) != toUInt8(1), toInt64(4294967296) < toUInt8(1), toInt64(4294967296) <= toUInt8(1), toInt64(4294967296) > toUInt8(1), toInt64(4294967296) >= toUInt8(1) , toInt8(1) = toUInt64(4294967296), toInt8(1) != toUInt64(4294967296), toInt8(1) < toUInt64(4294967296), toInt8(1) <= toUInt64(4294967296), toInt8(1) > toUInt64(4294967296), toInt8(1) >= toUInt64(4294967296), toUInt64(4294967296) = toInt8(1), toUInt64(4294967296) != toInt8(1), toUInt64(4294967296) < toInt8(1), toUInt64(4294967296) <= toInt8(1), toUInt64(4294967296) > toInt8(1), toUInt64(4294967296) >= toInt8(1) , toInt8(1) = toInt64(4294967296), toInt8(1) != toInt64(4294967296), toInt8(1) < toInt64(4294967296), toInt8(1) <= toInt64(4294967296), toInt8(1) > toInt64(4294967296), toInt8(1) >= toInt64(4294967296), toInt64(4294967296) = toInt8(1), toInt64(4294967296) != toInt8(1), toInt64(4294967296) < toInt8(1), toInt64(4294967296) <= toInt8(1), toInt64(4294967296) > toInt8(1), toInt64(4294967296) >= toInt8(1) , toUInt16(1) = toUInt64(4294967296), toUInt16(1) != toUInt64(4294967296), toUInt16(1) < toUInt64(4294967296), toUInt16(1) <= toUInt64(4294967296), toUInt16(1) > toUInt64(4294967296), toUInt16(1) >= toUInt64(4294967296), toUInt64(4294967296) = toUInt16(1), toUInt64(4294967296) != toUInt16(1), toUInt64(4294967296) < toUInt16(1), toUInt64(4294967296) <= toUInt16(1), toUInt64(4294967296) > toUInt16(1), toUInt64(4294967296) >= toUInt16(1) , toUInt16(1) = toInt64(4294967296), toUInt16(1) != toInt64(4294967296), toUInt16(1) < toInt64(4294967296), toUInt16(1) <= toInt64(4294967296), toUInt16(1) > toInt64(4294967296), toUInt16(1) >= toInt64(4294967296), toInt64(4294967296) = toUInt16(1), toInt64(4294967296) != toUInt16(1), toInt64(4294967296) < toUInt16(1), toInt64(4294967296) <= toUInt16(1), toInt64(4294967296) > toUInt16(1), toInt64(4294967296) >= toUInt16(1) , toInt16(1) = toUInt64(4294967296), toInt16(1) != toUInt64(4294967296), toInt16(1) < toUInt64(4294967296), toInt16(1) <= toUInt64(4294967296), toInt16(1) > toUInt64(4294967296), toInt16(1) >= toUInt64(4294967296), toUInt64(4294967296) = toInt16(1), toUInt64(4294967296) != toInt16(1), toUInt64(4294967296) < toInt16(1), toUInt64(4294967296) <= toInt16(1), toUInt64(4294967296) > toInt16(1), toUInt64(4294967296) >= toInt16(1) , toInt16(1) = toInt64(4294967296), toInt16(1) != toInt64(4294967296), toInt16(1) < toInt64(4294967296), toInt16(1) <= toInt64(4294967296), toInt16(1) > toInt64(4294967296), toInt16(1) >= toInt64(4294967296), toInt64(4294967296) = toInt16(1), toInt64(4294967296) != toInt16(1), toInt64(4294967296) < toInt16(1), toInt64(4294967296) <= toInt16(1), toInt64(4294967296) > toInt16(1), toInt64(4294967296) >= toInt16(1) , toUInt32(1) = toUInt64(4294967296), toUInt32(1) != toUInt64(4294967296), toUInt32(1) < toUInt64(4294967296), toUInt32(1) <= toUInt64(4294967296), toUInt32(1) > toUInt64(4294967296), toUInt32(1) >= toUInt64(4294967296), toUInt64(4294967296) = toUInt32(1), toUInt64(4294967296) != toUInt32(1), toUInt64(4294967296) < toUInt32(1), toUInt64(4294967296) <= toUInt32(1), toUInt64(4294967296) > toUInt32(1), toUInt64(4294967296) >= toUInt32(1) , toUInt32(1) = toInt64(4294967296), toUInt32(1) != toInt64(4294967296), toUInt32(1) < toInt64(4294967296), toUInt32(1) <= toInt64(4294967296), toUInt32(1) > toInt64(4294967296), toUInt32(1) >= toInt64(4294967296), toInt64(4294967296) = toUInt32(1), toInt64(4294967296) != toUInt32(1), toInt64(4294967296) < toUInt32(1), toInt64(4294967296) <= toUInt32(1), toInt64(4294967296) > toUInt32(1), toInt64(4294967296) >= toUInt32(1) , toInt32(1) = toUInt64(4294967296), toInt32(1) != toUInt64(4294967296), toInt32(1) < toUInt64(4294967296), toInt32(1) <= toUInt64(4294967296), toInt32(1) > toUInt64(4294967296), toInt32(1) >= toUInt64(4294967296), toUInt64(4294967296) = toInt32(1), toUInt64(4294967296) != toInt32(1), toUInt64(4294967296) < toInt32(1), toUInt64(4294967296) <= toInt32(1), toUInt64(4294967296) > toInt32(1), toUInt64(4294967296) >= toInt32(1) , toInt32(1) = toInt64(4294967296), toInt32(1) != toInt64(4294967296), toInt32(1) < toInt64(4294967296), toInt32(1) <= toInt64(4294967296), toInt32(1) > toInt64(4294967296), toInt32(1) >= toInt64(4294967296), toInt64(4294967296) = toInt32(1), toInt64(4294967296) != toInt32(1), toInt64(4294967296) < toInt32(1), toInt64(4294967296) <= toInt32(1), toInt64(4294967296) > toInt32(1), toInt64(4294967296) >= toInt32(1) , toUInt64(1) = toUInt64(4294967296), toUInt64(1) != toUInt64(4294967296), toUInt64(1) < toUInt64(4294967296), toUInt64(1) <= toUInt64(4294967296), toUInt64(1) > toUInt64(4294967296), toUInt64(1) >= toUInt64(4294967296), toUInt64(4294967296) = toUInt64(1), toUInt64(4294967296) != toUInt64(1), toUInt64(4294967296) < toUInt64(1), toUInt64(4294967296) <= toUInt64(1), toUInt64(4294967296) > toUInt64(1), toUInt64(4294967296) >= toUInt64(1) , toUInt64(1) = toInt64(4294967296), toUInt64(1) != toInt64(4294967296), toUInt64(1) < toInt64(4294967296), toUInt64(1) <= toInt64(4294967296), toUInt64(1) > toInt64(4294967296), toUInt64(1) >= toInt64(4294967296), toInt64(4294967296) = toUInt64(1), toInt64(4294967296) != toUInt64(1), toInt64(4294967296) < toUInt64(1), toInt64(4294967296) <= toUInt64(1), toInt64(4294967296) > toUInt64(1), toInt64(4294967296) >= toUInt64(1) , toInt64(1) = toUInt64(4294967296), toInt64(1) != toUInt64(4294967296), toInt64(1) < toUInt64(4294967296), toInt64(1) <= toUInt64(4294967296), toInt64(1) > toUInt64(4294967296), toInt64(1) >= toUInt64(4294967296), toUInt64(4294967296) = toInt64(1), toUInt64(4294967296) != toInt64(1), toUInt64(4294967296) < toInt64(1), toUInt64(4294967296) <= toInt64(1), toUInt64(4294967296) > toInt64(1), toUInt64(4294967296) >= toInt64(1) , toInt64(1) = toInt64(4294967296), toInt64(1) != toInt64(4294967296), toInt64(1) < toInt64(4294967296), toInt64(1) <= toInt64(4294967296), toInt64(1) > toInt64(4294967296), toInt64(1) >= toInt64(4294967296), toInt64(4294967296) = toInt64(1), toInt64(4294967296) != toInt64(1), toInt64(4294967296) < toInt64(1), toInt64(4294967296) <= toInt64(1), toInt64(4294967296) > toInt64(1), toInt64(4294967296) >= toInt64(1) 
DROP DATABASE IF EXISTS test_dsb3g3rc 
INSERT INTO test_01193_18429.table_3_474 VALUES 
CREATE INDEX idx_tab4_1 ON tab4 (col4,col3 DESC,col0,col1 DESC);
select abs(cosh(1) - 0.5 * (e() + exp(-1))) < 1e-6;
DROP TABLE IF EXISTS alias10;
CREATE TABLE test_01193_18429.table_10_20 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_7_455 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT multiIf((number % 2) = 0, toUInt16(1), (number % 3) = 0, toInt32(2), toFloat64(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_4625607E6D5D74273B4D4B4B5D6828596926252870626A21533B493734624C693824314620703454(x UInt8) Engine=Memory;
SHOW CREATE DICTIONARY test_01192_atomic.dict
INSERT INTO test_01193_18429.table_3_122 VALUES 
select key, Path, Value, Version, col from test_graphite final order by key, Path, Time desc;
SELECT length(topKArray(_CAST(2, 'UInt32'))([1, 1, 2, 3, 4, 5, 6, 7, 7, 7]))
DROP TABLE a
INSERT INTO data (str) SELECT 'ca' FROM numbers(100000);
SELECT 'Running test stateless/02921_fuzzbits_with_array_join.sql from pid=1718' 
INSERT INTO test_01193_18429.table_5_812 VALUES 
select (toUInt8(255)) in (-1);
SYSTEM SYNC REPLICA concurrent_alter_add_drop_2 STRICT
SELECT avgWeighted(x, w) FROM values('x Int16, w UInt32', (4, 1), (1, 0), (10, 2));
SELECT 'Running test stateless/00067_replicate_segfault.sql from pid=1724' 
DROP TABLE roundtrip_persons_02240;
SELECT name, rows, active FROM system.parts WHERE table = 'table_with_gap' AND database = currentDatabase();
CREATE TABLE test_64376B323C407621207D65424A50447C436221647828775D7C202C53512122462857506D71372F79(x UInt8) Engine=Memory;
SELECT 1 = dictHas(concat('test_7kssh40k', '.dict_ipv4_trie'), tuple(IPv4StringToNum('127.255.128.9')))
DROP DATABASE IF EXISTS test_bnj9gw95 
SELECT parseTimeDelta('1s1ms1ÃÂ¼s1ns');
INSERT INTO test_01193_18429.table_9_923 VALUES 
SELECT `UserID` FROM `test_c5zukzwt`.`users` WHERE `UserID` IN ((SELECT arrayJoin([1468013291393583084, 1321770221388956068])) AS `_subquery3680`)
SELECT CASE WHEN (number % 2) = 0 THEN toFloat64(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toUInt8(3) END FROM system.numbers LIMIT 10;
SELECT materialize(finalizeAggregation((SELECT sumState(number) FROM numbers(10)) + (SELECT sumState(number) FROM numbers(10))));
SELECT toDecimal32('0.0', 2) AS x, round(sin(x), 8), round(cos(x), 8), round(tan(x), 8);
CREATE TABLE test_312A5C296A5076643F615B402D2C4C3F3D7D2F42636B277368467D6A4A5E333B796563565F792243(x UInt8) Engine=Memory;
select count(), sum(number) from file('02841.parquet') where indexHint(u8 < 0);
select count() from many_mutations;
INSERT INTO test_01193_18429.table_9_138 VALUES 
SELECT number, number % 2, sum(number) AS val FROM numbers(10) GROUP BY ROLLUP(number, number % 2) WITH TOTALS ORDER BY (number, number % 2, val) SETTINGS group_by_use_nulls=1;
SELECT tupleDivideByNumber(tuple(1), materialize(1));
SELECT 'Running test stateless/02715_or_null.sql from pid=1720' 
CREATE DATABASE IF NOT EXISTS test_p3e8u2nr 
SELECT t.t.t as e, toTypeName(e) FROM nnna FULL JOIN nnnb USING (t.t.t.t.t);
CREATE TABLE test_452F4447614C655B682F4E49493D2B55615139603628485F226E396B754C4122687A6A45446D6065(x UInt8) Engine=Memory;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 32352, 500 settings ignore_materialized_views_with_dropped_target_table=1
select 'sep3';
ATTACH TABLE reserved_word_table;
CREATE DATABASE IF NOT EXISTS test_7unf6d4g 
SELECT multiIf((col1 % 2) = 0, [col2, 'bar'], 1, [col4, col5], ['foo', 'bar']) FROM multi_if_check;
INSERT INTO 02185_range_dictionary_source_table VALUES 
DROP TABLE IF EXISTS dist_test_01040;
CREATE DATABASE IF NOT EXISTS test_bbo148z8 
select concat(materialize(toFixedString('a', 1)), 'b', materialize('c')) == 'abc';
select CAST(1.0, 'Decimal(15,2)') = CAST(-1, 'Float32');
SELECT order_0, _part_offset, computed FROM t_1 ORDER BY order_0 DESC, _part_offset DESC, computed DESC LIMIT 3;
ALTER TABLE alter_update UPDATE value2 = (value2 + 1) / 2 WHERE 1, UPDATE value2 = value2 + 1 WHERE 1
ALTER TABLE concurrent_alter_column ADD COLUMN c342 DOUBLE;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt16(1), toUInt16(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toFloat64(3), toFloat64(3)] END FROM system.numbers LIMIT 10;
CHECK TABLE concurrent_mutate_mt_2
INSERT INTO test_01193_18429.table_5_863 VALUES 
CREATE TABLE test_01193_18429.table_4_168 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE DATABASE IF NOT EXISTS test_ag6t54tk 
SELECT BLAKE3(NULL);
select count(), sum(number) from file('02841.parquet') where indexHint(s like '99%' or u64 == 2000);
CREATE TABLE test_01193_18429.table_7_774 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT '1', '2251799813685248.000000000', 1 = 2251799813685248.000000000, 1 != 2251799813685248.000000000, 1 < 2251799813685248.000000000, 1 <= 2251799813685248.000000000, 1 > 2251799813685248.000000000, 1 >= 2251799813685248.000000000, 2251799813685248.000000000 = 1, 2251799813685248.000000000 != 1, 2251799813685248.000000000 < 1, 2251799813685248.000000000 <= 1, 2251799813685248.000000000 > 1, 2251799813685248.000000000 >= 1 , toUInt8(1) = 2251799813685248.000000000, toUInt8(1) != 2251799813685248.000000000, toUInt8(1) < 2251799813685248.000000000, toUInt8(1) <= 2251799813685248.000000000, toUInt8(1) > 2251799813685248.000000000, toUInt8(1) >= 2251799813685248.000000000, 2251799813685248.000000000 = toUInt8(1), 2251799813685248.000000000 != toUInt8(1), 2251799813685248.000000000 < toUInt8(1), 2251799813685248.000000000 <= toUInt8(1), 2251799813685248.000000000 > toUInt8(1), 2251799813685248.000000000 >= toUInt8(1) , toInt8(1) = 2251799813685248.000000000, toInt8(1) != 2251799813685248.000000000, toInt8(1) < 2251799813685248.000000000, toInt8(1) <= 2251799813685248.000000000, toInt8(1) > 2251799813685248.000000000, toInt8(1) >= 2251799813685248.000000000, 2251799813685248.000000000 = toInt8(1), 2251799813685248.000000000 != toInt8(1), 2251799813685248.000000000 < toInt8(1), 2251799813685248.000000000 <= toInt8(1), 2251799813685248.000000000 > toInt8(1), 2251799813685248.000000000 >= toInt8(1) , toUInt16(1) = 2251799813685248.000000000, toUInt16(1) != 2251799813685248.000000000, toUInt16(1) < 2251799813685248.000000000, toUInt16(1) <= 2251799813685248.000000000, toUInt16(1) > 2251799813685248.000000000, toUInt16(1) >= 2251799813685248.000000000, 2251799813685248.000000000 = toUInt16(1), 2251799813685248.000000000 != toUInt16(1), 2251799813685248.000000000 < toUInt16(1), 2251799813685248.000000000 <= toUInt16(1), 2251799813685248.000000000 > toUInt16(1), 2251799813685248.000000000 >= toUInt16(1) , toInt16(1) = 2251799813685248.000000000, toInt16(1) != 2251799813685248.000000000, toInt16(1) < 2251799813685248.000000000, toInt16(1) <= 2251799813685248.000000000, toInt16(1) > 2251799813685248.000000000, toInt16(1) >= 2251799813685248.000000000, 2251799813685248.000000000 = toInt16(1), 2251799813685248.000000000 != toInt16(1), 2251799813685248.000000000 < toInt16(1), 2251799813685248.000000000 <= toInt16(1), 2251799813685248.000000000 > toInt16(1), 2251799813685248.000000000 >= toInt16(1) , toUInt32(1) = 2251799813685248.000000000, toUInt32(1) != 2251799813685248.000000000, toUInt32(1) < 2251799813685248.000000000, toUInt32(1) <= 2251799813685248.000000000, toUInt32(1) > 2251799813685248.000000000, toUInt32(1) >= 2251799813685248.000000000, 2251799813685248.000000000 = toUInt32(1), 2251799813685248.000000000 != toUInt32(1), 2251799813685248.000000000 < toUInt32(1), 2251799813685248.000000000 <= toUInt32(1), 2251799813685248.000000000 > toUInt32(1), 2251799813685248.000000000 >= toUInt32(1) , toInt32(1) = 2251799813685248.000000000, toInt32(1) != 2251799813685248.000000000, toInt32(1) < 2251799813685248.000000000, toInt32(1) <= 2251799813685248.000000000, toInt32(1) > 2251799813685248.000000000, toInt32(1) >= 2251799813685248.000000000, 2251799813685248.000000000 = toInt32(1), 2251799813685248.000000000 != toInt32(1), 2251799813685248.000000000 < toInt32(1), 2251799813685248.000000000 <= toInt32(1), 2251799813685248.000000000 > toInt32(1), 2251799813685248.000000000 >= toInt32(1) , toUInt64(1) = 2251799813685248.000000000, toUInt64(1) != 2251799813685248.000000000, toUInt64(1) < 2251799813685248.000000000, toUInt64(1) <= 2251799813685248.000000000, toUInt64(1) > 2251799813685248.000000000, toUInt64(1) >= 2251799813685248.000000000, 2251799813685248.000000000 = toUInt64(1), 2251799813685248.000000000 != toUInt64(1), 2251799813685248.000000000 < toUInt64(1), 2251799813685248.000000000 <= toUInt64(1), 2251799813685248.000000000 > toUInt64(1), 2251799813685248.000000000 >= toUInt64(1) , toInt64(1) = 2251799813685248.000000000, toInt64(1) != 2251799813685248.000000000, toInt64(1) < 2251799813685248.000000000, toInt64(1) <= 2251799813685248.000000000, toInt64(1) > 2251799813685248.000000000, toInt64(1) >= 2251799813685248.000000000, 2251799813685248.000000000 = toInt64(1), 2251799813685248.000000000 != toInt64(1), 2251799813685248.000000000 < toInt64(1), 2251799813685248.000000000 <= toInt64(1), 2251799813685248.000000000 > toInt64(1), 2251799813685248.000000000 >= toInt64(1) ;
CREATE TABLE test_6862224930622C512A2D616671223E675764442C293B2A4E666743734D417B603B7A614A6E68202D(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_1_146 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP DATABASE IF EXISTS test_75tzr2gr 
INSERT INTO test_01193_18429.table_3_502 VALUES 
SELECT operation_name, attribute['clickhouse.cluster'] AS cluster, attribute['clickhouse.shard_num'] AS shard, attribute['clickhouse.rows'] AS rows, attribute['clickhouse.bytes'] AS bytes FROM system.opentelemetry_span_log WHERE finish_date >= yesterday() AND lower(hex(trace_id)) = 'd1955790d2304804bd7384c54179083d' AND attribute['clickhouse.distributed'] = 'test_gmo80lov.dist_opentelemetry' AND attribute['clickhouse.remote'] = 'test_gmo80lov.local_opentelemetry' ORDER BY attribute['clickhouse.shard_num'] Format JSONEachRow ;
optimize table mt_compact final;
CREATE TABLE test_01193_18429.table_10_427 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_6_220 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT arraySort(x -> (x.1, x.2), groupArray(t)) == [(1, '1'), (NULL, NULL)] FROM null_in_tuple WHERE t in ((1, '1'), (NULL, NULL));
CREATE TABLE tab1 (`a1` Int32, `b1` Int32, `val` UInt64) ENGINE = MergeTree ORDER BY a1 SETTINGS index_granularity = 55209, min_bytes_for_wide_part = 728378816, ratio_of_defaults_for_sparse_serialization = 0.008632875978946686, replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 7384, prefer_fetch_merged_part_size_threshold = 6771108300, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 9750929, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 62330, primary_key_compress_block_size = 79374
CREATE TABLE test_21246040793D696D2C70587063773655516A3367562358756C297B264476652F7C75436644544A75(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02797_aggregator_huge_mem_usage_bug.sql from pid=1715' 
SELECT stem('ru', 'ÃÂÃÂÃÂ¾ÃÂ¸ÃÂ¼ÃÂ¾ÃÂÃÂÃÂÃÂ');
SELECT now() + INTERVAL 1::UInt256 SECOND - now();
SELECT 'Running test stateless/02458_use_structure_from_insertion_table.sql from pid=1705' 
CREATE TABLE test_79487C5F4A214236576C586E654477613A23705539256A375834665F3B4D692260604B67663D2C72(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_9_145 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_5_535 VALUES 
SELECT cutQueryStringAndFragment('http://www.example.com/a/b/c?a=b#d=f');
CREATE TABLE test_397948274B554B466C7C42555E51246D653E303B3C3B6E6E2A6A6F7D4825663B76524B515354253B(x UInt8) Engine=Memory;
INSERT INTO src_14 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 46
INSERT INTO test_01193_18429.table_10_918 VALUES 
SELECT id > 1, d.id FROM (SELECT (toLowCardinality(toNullable(0))) AS id, 1 AS value) AS a ANTI RIGHT JOIN (SELECT (toLowCardinality(toNullable(0))) AS id) AS d USING (id) ;
CREATE DATABASE IF NOT EXISTS test_2nwrlpzs 
SELECT array_agg([]);
SELECT parseDateTimeBestEffort('1596752940', 'Asia/Istanbul');
INSERT INTO r4 SELECT 21
DROP DATABASE test_01148_ordinary;
SELECT X FROM (SELECT * FROM (SELECT 1 AS X, 2 AS Y) UNION ALL SELECT 3, 4) ORDER BY X;
SELECT length(topK(3)(A)) FROM topXtest;
CREATE DATABASE IF NOT EXISTS test_ikxsuotp 
SELECT 'Dictionary';
TRUNCATE full_duplicates;
CREATE TABLE test_423D236B5D735A447D4C344C3D5666742F775B5939515A39617E56383A425B433B50442B652D5379(x UInt8) Engine=Memory;
select 1 = multiMatchAny(materialize('abc'), ['']) from system.numbers limit 10;
SELECT format('The {0} to all questions is {1}.', 'answer', materialize(43 :: Int16));
CREATE TABLE visits_dist AS visits ENGINE Distributed(test_cluster_two_shards_localhost, currentDatabase(), 'visits', rand());
SELECT x, y FROM 02763_a_merge ORDER BY x SETTINGS optimize_move_to_prewhere= 0;
select [0, 15, 0, 1, 5, 0, 0, 5, 0, 0, 0, 1, 0, 0] = multiSearchAllPositionsUTF8(materialize('ÃÂÃÂ½ÃÂ»ÃÂµÃÂ¾ÃÂ´ÃÂ»ÃÂ¼ÃÂ´ÃÂÃÂ´ÃÂ¹ÃÂÃÂ½ÃÂ¸ÃÂÃÂ²ÃÂ´ÃÂÃÂÃÂ ÃÂ¶ÃÂ¸ÃÂ·ÃÂ²'), ['ÃÂ¸ÃÂ²ÃÂºÃÂÃÂÃÂ·ÃÂÃÂÃÂ³ÃÂ¾ÃÂÃÂ¶ÃÂÃÂ¾ÃÂ ÃÂÃÂÃÂ°ÃÂ±ÃÂ»', 'ÃÂ¸ÃÂÃÂ²ÃÂ´ÃÂÃÂ', 'ÃÂºÃÂ½ÃÂ ', '', 'ÃÂ¾ÃÂ´ÃÂ»ÃÂ¼', 'ÃÂºÃÂÃÂÃÂÃÂ·ÃÂ±ÃÂÃÂ·ÃÂÃÂÃÂ¹ÃÂ¼ÃÂ°ÃÂ³ÃÂÃÂ¾ÃÂÃÂºÃÂÃÂÃÂÃÂ´ÃÂ²ÃÂÃÂÃÂ¾', 'ÃÂ ÃÂ ÃÂµÃÂ°ÃÂµÃÂÃÂÃÂ´ÃÂ³ÃÂÃÂ ÃÂ', 'ÃÂ¾ÃÂ´ÃÂ»ÃÂ¼ÃÂ´ÃÂÃÂ´ÃÂ¹ÃÂÃÂ½ÃÂ¸ÃÂÃÂ²ÃÂ´ÃÂÃÂ', 'ÃÂÃÂ¼ÃÂÃÂ»ÃÂ¿ÃÂºÃÂ²', 'ÃÂ·ÃÂÃÂÃÂ¾ÃÂºÃÂ¹ÃÂÃÂÃÂ·ÃÂ°ÃÂÃÂÃÂ°ÃÂÃÂ²ÃÂ±ÃÂ¿ÃÂ¾ÃÂ²ÃÂ¶ÃÂ³ÃÂ½ÃÂ»ÃÂ°ÃÂ²ÃÂÃÂ³ÃÂ¹ÃÂ³', 'ÃÂ±ÃÂºÃÂ¸ÃÂ±ÃÂ¼', '', 'ÃÂ¾ÃÂ ÃÂÃÂ¾ÃÂ¸ÃÂ ÃÂ½ÃÂÃÂÃÂÃÂÃÂµÃÂ²ÃÂÃÂµÃÂµÃÂ»ÃÂµÃÂ¶ÃÂÃÂÃÂºÃÂ°', 'ÃÂÃÂ°ÃÂ¸ÃÂ¹ÃÂ ÃÂ³ÃÂ¶ÃÂ½ÃÂÃÂ³ÃÂ¸ÃÂÃÂ³ÃÂÃÂ']) from system.numbers limit 10;
ATTACH TABLE primary_key_test(v1 Int32, v2 Int32) ENGINE=ReplacingMergeTree ORDER BY (v1, v2) PRIMARY KEY(v1, v2);
SET max_joined_block_size_rows = 2;
DROP DATABASE IF EXISTS test_w5677s9y 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), toInt16(-1) > N as r FORMAT CSV;
INSERT INTO test_01193_18429.table_4_461 VALUES 
create table enums ( d Date default '2015-12-29', k default 0, e Enum8('world' = 2, 'hello' = 1), sign Enum8('minus' = -1, 'plus' = 1), letter Enum16('a' = 0, 'b' = 1, 'c' = 2, '*' = -256) ) engine = MergeTree(d, k, 1);
select mapPopulateSeries(map(toInt256(1), toInt256(1), 2, 1)) as res, toTypeName(res);
INSERT INTO test_01193_18429.table_6_572 VALUES 
SELECT tupleToNameValuePairs(NULL);
CREATE TABLE test_01193_18429.table_6_622 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT toUnixTimestamp(toString(toDateTime(1426415400), 'Asia/Istanbul'), 'Europe/Paris');
SELECT 'SELECT subtractMinutes(N, 1, \'Asia/Istanbul\')';
ALTER TABLE table_for_rename_replicated RENAME COLUMN value1 to renamed_value1
CREATE TABLE A (`k` UInt32, `t` Decimal32(5), `a` Float64) ENGINE = MergeTree ORDER BY (k, t) SETTINGS index_granularity = 57643, min_bytes_for_wide_part = 636221231, ratio_of_defaults_for_sparse_serialization = 0.34237709641456604, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 6784, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 2424484770, index_granularity_bytes = 8067457, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 32242, primary_key_compress_block_size = 12095
select format('{}{}', materialize(toFixedString('a', 1)), 'b') == 'ab';
select x from partial_sort_opt_bug order by x limit 2000 settings max_block_size = 4000;
SELECT * FROM truncate_test_log;
SELECT 'Running test stateless/02345_create_table_allow_trailing_comma.sql from pid=1720' 
SELECT toNullable('');
CREATE TABLE test_67393A75767B4B29282C4C623F782D767B7C497571363A477C7864234B204F302B4A337C26475A4D(x UInt8) Engine=Memory;
DROP TABLE test2 SYNC;
CREATE DATABASE IF NOT EXISTS test_g99ijydj 
SELECT CASE WHEN 1 THEN toFixedString(col2, 16) WHEN (col1 % 3) = 0 THEN col3 ELSE toFixedString('baz', 16) END FROM multi_if_check;
CREATE DATABASE IF NOT EXISTS test_9al6cy0i 
CREATE TABLE test_01193_18429.table_8_244 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT multiIf((number % 2) = 0, toInt8(1), (number % 3) = 0, toFloat32(2), toInt8(3)) FROM system.numbers LIMIT 10;
SELECT * FROM t1 ALL INNER JOIN tj ON t1.key3 = tj.key3 AND t1.key1 = tj.key1 AND t1.key2 = tj.key2 ORDER BY t1.key1;
CREATE TABLE `01154_test` (`x` UInt256, INDEX ix_x x TYPE bloom_filter(0.01) GRANULARITY 1) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 8192, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 3181, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 9157763, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 98012, primary_key_compress_block_size = 56157
INSERT INTO test_01193_18429.table_8_689 VALUES 
select hiveHash('abc');
INSERT INTO test_01193_18429.table_5_377 VALUES 
SELECT avgWeighted(x, w) FROM values('x Int64, w UInt16', (4, 1), (1, 0), (10, 2));
DROP DATABASE IF EXISTS test_9v3fp0r4 
DROP TABLE kill_mutation_r2
CREATE TABLE rename1 (`p` Int64, `i` Int64, `v` UInt64) ENGINE = ReplicatedReplacingMergeTree('/clickhouse/tables/{database}/rename', '1', v) PARTITION BY p ORDER BY i SETTINGS index_granularity = 51548, min_bytes_for_wide_part = 556344814, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 101, merge_max_block_size = 3292, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 721329, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 8886847961, index_granularity_bytes = 23788441, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 37537, primary_key_compress_block_size = 66902
INSERT INTO dictionary_array_source_table VALUES 
INSERT INTO test_01193_18429.table_9_373 VALUES 
SELECT YYYYMMDDToDate(21490606.1);
CREATE TABLE test_01193_18429.table_4_797 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 418, 500 settings ignore_materialized_views_with_dropped_target_table=1
CREATE TABLE test_01193_18429.table_3_873 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE DATABASE IF NOT EXISTS test_849c4ikw 
DROP DATABASE IF EXISTS test_g8jmnr88 
SELECT 14, 5, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (14 < 13 AND 5 > 0 ? 14 : 0)), throwIf(last != (14 < 13 AND 5 > 0 ? least(13 - 1, 14 + 5 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 14, 5);
select 1 = multiSearchAny(materialize('abcdefgh'), ['de']) from system.numbers limit 10;
CREATE USER u1_01297;
desc file(test_02245.parquet) settings input_format_parquet_skip_columns_with_unsupported_types_in_schema_inference=1
INSERT INTO test_01193_18429.table_6_559 VALUES 
CREATE TABLE test_6E3D2B5949407326634F6A336F3B2C712B73477D38407348234938752B40605C5632755951312361(x UInt8) Engine=Memory;
SELECT isIPAddressInRange('127.0.0.1', '127.0.0.0/8');
SELECT JSONExtract('{"a": "-2000.22"}', 'a', 'Int8') as a, toTypeName(a);
DROP TABLE 02481_merge;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c4) AND c3 AND (NOT c5) AND c3 AND c6) OR (c0 AND c0 AND c1 AND (NOT c2) AND c8) OR ((NOT c6) AND c7) OR (c6 AND c8 AND (NOT c1)) SETTINGS convert_query_to_cnf = 0
SELECT toUInt256(NULL, NULL, NULL);
INSERT INTO src VALUES /* (-37, 1) */ 
SELECT 'Running test stateless/01010_pm_join_all_join_bug.sql from pid=1720' 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), N == toInt16(-1) as r FORMAT CSV;
SET optimize_min_equality_disjunction_chain_length = 3;
CREATE TABLE test_01193_18429.table_4_859 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toInt64(2), toInt64(3)] ELSE [toInt32(3), toInt32(3)] END FROM system.numbers LIMIT 10;
INSERT INTO table_for_rename SELECT toDate('2019-10-01') + number % 3, number, toString(number), toString(number), toString(number) from numbers(9);
select formatDateTime(toDateTime64('2010-01-04 12:34:56.123456', 6), '%f') SETTINGS formatdatetime_f_prints_single_zero = 0;
INSERT INTO test_01193_18429.table_7_896 VALUES 
SELECT count() FROM remote('127.0.0.{2,3}', system.one);
INSERT INTO test_01193_18429.table_7_327 VALUES 
CREATE TABLE test_28616A5B2F7A7955272E2E7E382961496944503B717643752E712D2829247D457B712A534F726D34(x UInt8) Engine=Memory;
SELECT [1, 2] = arraySort(multiMatchAllIndices(materialize('gogleuedeuniangoogle'), ['.*goo.*', '.*yan.*'])) from system.numbers limit 5;
DROP TABLE IF EXISTS bloom_filter_idx_na;
CREATE TABLE test_315D336D3A7C564D355E5F79403C643E565E72544E2439256E703776627C33263E59657A6F777355(x UInt8) Engine=Memory;
SELECT * FROM ( EXPLAIN PLAN indexes=1 SELECT * FROM ngrambf_tab WHERE match(str, 'Hello (ClickHouse|World)') ORDER BY id ) WHERE explain LIKE '%Granules: %' SETTINGS allow_experimental_analyzer = 0;
DROP DATABASE IF EXISTS test_2j4sloxh 
SELECT tupleHammingDistance(('abc', (1, 2)), ('def', (1, 3)));
SELECT age('second', materialize(toDateTime('2015-08-18 00:00:00', 'UTC')), materialize(toDateTime64('2015-08-18 00:00:10', 3, 'UTC')));
alter table many_mutations delete where y = 855 * 2 settings mutations_sync = 0;
INSERT INTO alter_table0 SELECT 7651, 4
SELECT COUNT(1) == 1 FROM 02416_test;
SELECT CASE WHEN (number % 2) = 0 THEN toUInt8(1) WHEN (number % 3) = 0 THEN toInt32(2) ELSE toFloat32(3) END FROM system.numbers LIMIT 10;
select sipHash128ReferenceKeyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)) == sipHash128Reference(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15));
INSERT INTO test_01193_18429.table_10_147 VALUES 
CREATE TABLE test_5C5C69447D215B7C445828675F6357554A565147694562242B745D567C3C5B3F634F5A6140616474(x UInt8) Engine=Memory;
SELECT _shard_num s FROM remote('127.0.0.{1,2}', system.one) ORDER BY _shard_num;
SELECT count() FROM lc_nullable WHERE has(date, toDate('1970-01-02'));
SET input_format_tsv_enum_as_number = 0;
CREATE TABLE test_55244C61584026542520405E2E5C66256C68366471724B654A3B7B662F30217D71586C483B51522C(x UInt8) Engine=Memory;
insert into summing_merge_tree_aggregate_function select 1, avgState(0.25);
SELECT arrayMap(a -> round(a, 2), (quantilesDDMerge(0.001, 0.9)(sketch))) FROM `02919_ddsketch_quantile`;
CREATE TABLE test_01193_18429.table_10_158 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT kql_array_sort_desc([], []);
SELECT table, lost_part_count FROM system.replicas WHERE database=currentDatabase() AND lost_part_count!=0
SELECT uniqCombined(NULL, NULL, NULL);
CREATE DATABASE IF NOT EXISTS test_q3v4vrji 
SELECT count() from test_startsWith where startsWith(a, 'abc') settings force_primary_key=1;
SELECT cutToFirstSignificantSubdomain('com');
CREATE TABLE test_02908_r1_186 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_186', 'r1') ORDER BY tuple()
EXPLAIN QUERY TREE (Select sum(number + 1) from numbers(10));
CREATE TABLE test_7E30504B3D33366B7C516A3A3F514959707B78433E2C5F40614247307E4C6C74604579584642235F(x UInt8) Engine=Memory;
SELECT 0, 5, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (0 < 13 AND 5 > 0 ? 0 : 0)), throwIf(last != (0 < 13 AND 5 > 0 ? least(13 - 1, 0 + 5 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 0, 5);
CREATE DATABASE IF NOT EXISTS test_g36lviqh 
INSERT INTO test_01193_18429.table_6_719 VALUES 
CREATE TABLE test_01193_18429.table_4_450 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select alias1 from (select id1, id1 as alias1 from j) as l all inner join (select id2, id2 as alias1 from j where id2 in (1, 2, 3)) as t using (alias1) where id2 in (2, 3, 4) order by id1 settings optimize_use_projections = 1;
DROP TABLE t_01906;
SELECT * FROM url('http://localhost:8123/', LineAsString, headers('random_header' = '[HIDDEN]')) FORMAT `Null`
INSERT INTO test_01193_18429.table_6_610 VALUES 
CREATE DATABASE IF NOT EXISTS test_6l8n8xrk 
SELECT hex(rightPadUTF8(toFixedString('Ã°ÂÂÂªÃ°ÂÂÂ¸' as s, 8), number, 'ÃÂ')) as result, hex(rightPadUTF8(s, number, 'ÃÂ')) = result FROM numbers(20);
SELECT i FROM generateRandom('i Array(Nullable(Int32))', 1, 10, 10) LIMIT 10;
INSERT INTO test_01193_18429.table_9_771 VALUES 
INSERT INTO src_2 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 53
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c3) AND c0 AND c6 AND (NOT c2) AND c6) OR (c8 AND c0 AND c6 AND (NOT c6)) OR ((NOT c1)) OR (c0 AND c8 AND (NOT c1) AND (NOT c3) AND c9) OR ((NOT c2) AND (NOT c9) AND (NOT c8)) OR (c9 AND c9 AND c3) OR ((NOT c9) AND c9 AND c7) OR ((NOT c5) AND c8 AND (NOT c8) AND c0 AND c1) SETTINGS convert_query_to_cnf = 0
CREATE TABLE test_4469772636227E51713B555328236B2A383E28623E2660613F5045417E5B3E2D5B5673636637574A(x UInt8) Engine=Memory;
select 1 = isValidUTF8(toValidUTF8('123456789012345\xf1')) from system.numbers limit 10;
CREATE DATABASE IF NOT EXISTS test_1e073gq2 
CREATE TABLE test_543B513627752A516D6775616B577B56617376724A756B295E7B2655502D5B6756643D56655D544D(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01375_storage_file_tsv_csv_with_names_write_prefix.sh from pid=1705' 
CREATE DATABASE IF NOT EXISTS test_ygl8z5b4 
SELECT * FROM capnp_tuples FORMAT CapnProto SETTINGS format_schema='/usr/share/clickhouse-test/queries/0_stateless/format_schemas/02030_capnp_tuples:Message'
INSERT INTO test SELECT randomString(100);
SELECT arrayConcat(NULL);
/* ddl_entry=query-0000000051 */ ALTER TABLE test_990cm9di.t1 ADD COLUMN `newcol` UInt32
CREATE DATABASE IF NOT EXISTS test_e4xidt1o 
CREATE TABLE test_01193_18429.table_1_869 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT Price FROM `02428_parameterized_view_test_0zmj5798.pv1`(price=20) SETTINGS allow_experimental_analyzer = 1
DROP TABLE nullable_00457;
select 1 = position('', '', 0);
SELECT randomString(NULL, NULL, NULL);
CREATE TABLE test_56245E58473265753A6F3B492B28405D5D5A764D312D583232535C734730552F5F576F426D7B5E38(x UInt8) Engine=Memory;
SELECT median(a), median(b), median(c) as x, toTypeName(x) FROM decimal;
with '2018-01-12 22:33:44' as s, toDateTime(s) as datetime, toDateTime64(s, 6) as datetime64, toDate(s) as date, toDate32(s) as date32 SELECT formatDateTimeInJodaSyntax(datetime, 'GG'), formatDateTimeInJodaSyntax(datetime64, 'GG'), formatDateTimeInJodaSyntax(date, 'GG'), formatDateTimeInJodaSyntax(date32, 'GG');
DROP TABLE IF EXISTS mt_00763_2
CREATE TABLE test_4629246A4D6428392B75393E2B3D256C63243978273C2920242F454D6D7B76416C222A215E6E6C39(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_3_402 VALUES 
SELECT c1.key, c1.name, c1.ref_valueF64, c1.valueF64, c1.ref_valueF64 - c1.valueF64 AS dF64, '', c2.key, c2.ref_valueF64 FROM codecTest AS c1 , codecTest AS c2 WHERE (dF64 != 3) AND c1.valueF64 != 0 AND (c2.key = (c1.key - 1048576)) LIMIT 0;
CREATE TABLE test_01193_18429.table_9_792 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_216C7B3C793F63513D2D64317B217A4A5F42504A263E2C497E726C285B555C3D706B263F7B61487E(x UInt8) Engine=Memory;
SELECT toInt8OrZero(NULL);
INSERT INTO test_00210 SELECT 1 AS x
insert into alias_2 (dt, col, col2, col3) values 
select replace(engine_full, 'test_piw8e8fv', 'db_test_piw8e8fv') from system.databases where name='test_piw8e8fv' format TSVRaw
CREATE TABLE test_7447425B7E6E22547E543B446E46243C6C393853597D4E33222F582B2C7926625054655D3F3D6143(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02267_empty_arrays_read_reverse.sql from pid=1726' 
SELECT arraySum(x -> materialize(0), range(number)) FROM system.numbers LIMIT 10;
INSERT INTO t_async_insert FORMAT Native 
CREATE INDEX idx_tab2_5 ON tab2 (col3 DESC,col0 DESC);
DROP TABLE IF EXISTS sample_00579_1;
SELECT roundDuration(7200);
select startsWith([1], emptyArrayUInt8());
CREATE TABLE test_435D627525283B5D4F5479652E615C507B673A755A663C6D303D3F236E624236617653253C5B3954(x UInt8) Engine=Memory;
SELECT t1.id, t1.value, t2.id, t2.value FROM test_table_join_1 AS t1 LEFT JOIN test_table_join_2 AS t2 ON t1.id = t2.id OR t1.id = t2.id;
CREATE TABLE test_01193_18429.table_4_6 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT id, any(value1), any(value2), any(value3), any(value4) FROM test_table_unsigned_values GROUP BY id ORDER BY id;
SELECT id > 1, d.id FROM (SELECT materialize(toLowCardinality(1)) AS id, 1 AS value) AS a SEMI RIGHT JOIN (SELECT materialize(toLowCardinality(2)) AS id) AS d USING (id) ;
SELECT * FROM test_collate ORDER BY s, x;
SELECT 'Running test stateless/00306_insert_values_and_expressions.sql from pid=1713' 
SELECT hasTokenCaseInsensitive('NEEDLE,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,hay,', 'needle'), ' expecting ', 1;
CREATE TABLE kill_mutation_r1 (`d` Date, `x` UInt32, `s` String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/00834_kill_mutation_replicated_zookeeper_test_kzou0211/kill_mutation', '1') PARTITION BY d ORDER BY x SETTINGS index_granularity = 15291, min_bytes_for_wide_part = 973703705, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 1619, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 123826, vertical_merge_algorithm_min_columns_to_activate = 94, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 4141753, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 94204, primary_key_compress_block_size = 18186
SELECT 'Running test stateless/02483_password_reset.sh from pid=1726' 
INSERT INTO test_01193_18429.table_2_543 VALUES 
SELECT splitByRegexp('\\d+', 'a12bc23de345f', 5);
SELECT -1, -32769, -1 = -32769, -1 != -32769, -1 < -32769, -1 <= -32769, -1 > -32769, -1 >= -32769, -32769 = -1, -32769 != -1, -32769 < -1, -32769 <= -1, -32769 > -1, -32769 >= -1 , toInt8(-1) = toInt32(-32769), toInt8(-1) != toInt32(-32769), toInt8(-1) < toInt32(-32769), toInt8(-1) <= toInt32(-32769), toInt8(-1) > toInt32(-32769), toInt8(-1) >= toInt32(-32769), toInt32(-32769) = toInt8(-1), toInt32(-32769) != toInt8(-1), toInt32(-32769) < toInt8(-1), toInt32(-32769) <= toInt8(-1), toInt32(-32769) > toInt8(-1), toInt32(-32769) >= toInt8(-1) , toInt8(-1) = toInt64(-32769), toInt8(-1) != toInt64(-32769), toInt8(-1) < toInt64(-32769), toInt8(-1) <= toInt64(-32769), toInt8(-1) > toInt64(-32769), toInt8(-1) >= toInt64(-32769), toInt64(-32769) = toInt8(-1), toInt64(-32769) != toInt8(-1), toInt64(-32769) < toInt8(-1), toInt64(-32769) <= toInt8(-1), toInt64(-32769) > toInt8(-1), toInt64(-32769) >= toInt8(-1) , toInt16(-1) = toInt32(-32769), toInt16(-1) != toInt32(-32769), toInt16(-1) < toInt32(-32769), toInt16(-1) <= toInt32(-32769), toInt16(-1) > toInt32(-32769), toInt16(-1) >= toInt32(-32769), toInt32(-32769) = toInt16(-1), toInt32(-32769) != toInt16(-1), toInt32(-32769) < toInt16(-1), toInt32(-32769) <= toInt16(-1), toInt32(-32769) > toInt16(-1), toInt32(-32769) >= toInt16(-1) , toInt16(-1) = toInt64(-32769), toInt16(-1) != toInt64(-32769), toInt16(-1) < toInt64(-32769), toInt16(-1) <= toInt64(-32769), toInt16(-1) > toInt64(-32769), toInt16(-1) >= toInt64(-32769), toInt64(-32769) = toInt16(-1), toInt64(-32769) != toInt16(-1), toInt64(-32769) < toInt16(-1), toInt64(-32769) <= toInt16(-1), toInt64(-32769) > toInt16(-1), toInt64(-32769) >= toInt16(-1) , toInt32(-1) = toInt32(-32769), toInt32(-1) != toInt32(-32769), toInt32(-1) < toInt32(-32769), toInt32(-1) <= toInt32(-32769), toInt32(-1) > toInt32(-32769), toInt32(-1) >= toInt32(-32769), toInt32(-32769) = toInt32(-1), toInt32(-32769) != toInt32(-1), toInt32(-32769) < toInt32(-1), toInt32(-32769) <= toInt32(-1), toInt32(-32769) > toInt32(-1), toInt32(-32769) >= toInt32(-1) , toInt32(-1) = toInt64(-32769), toInt32(-1) != toInt64(-32769), toInt32(-1) < toInt64(-32769), toInt32(-1) <= toInt64(-32769), toInt32(-1) > toInt64(-32769), toInt32(-1) >= toInt64(-32769), toInt64(-32769) = toInt32(-1), toInt64(-32769) != toInt32(-1), toInt64(-32769) < toInt32(-1), toInt64(-32769) <= toInt32(-1), toInt64(-32769) > toInt32(-1), toInt64(-32769) >= toInt32(-1) , toInt64(-1) = toInt32(-32769), toInt64(-1) != toInt32(-32769), toInt64(-1) < toInt32(-32769), toInt64(-1) <= toInt32(-32769), toInt64(-1) > toInt32(-32769), toInt64(-1) >= toInt32(-32769), toInt32(-32769) = toInt64(-1), toInt32(-32769) != toInt64(-1), toInt32(-32769) < toInt64(-1), toInt32(-32769) <= toInt64(-1), toInt32(-32769) > toInt64(-1), toInt32(-32769) >= toInt64(-1) , toInt64(-1) = toInt64(-32769), toInt64(-1) != toInt64(-32769), toInt64(-1) < toInt64(-32769), toInt64(-1) <= toInt64(-32769), toInt64(-1) > toInt64(-32769), toInt64(-1) >= toInt64(-32769), toInt64(-32769) = toInt64(-1), toInt64(-32769) != toInt64(-1), toInt64(-32769) < toInt64(-1), toInt64(-32769) <= toInt64(-1), toInt64(-32769) > toInt64(-1), toInt64(-32769) >= toInt64(-1) 
SELECT _part_offset, foo FROM t_1 PREWHERE order_0 % 10000 == 42 ORDER BY order_0 LIMIT 3;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt16(1), toUInt16(2)] WHEN (number % 3) = 0 THEN [toInt16(2), toInt16(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_72617339475265526E367B4E40654954575B392D6528716C5E2633522B262F3B4C66216B75416343(x UInt8) Engine=Memory;
drop table if exists test_02381_compact;
SELECT formatDateTime(toDateTime('2018-01-02 22:33:44'), '%m'), formatDateTime(toDate32('2018-01-02'), '%m');
CREATE TABLE test_517069687B47386C3E766F5B236976234D354463426830764645743C2D6141233123392C2B3A6F57(x UInt8) Engine=Memory;
CREATE TABLE empty (value Int8) ENGINE = TinyLog;
insert into test_log_queries.logtable2 select * from test_log_queries.logtable
CREATE TABLE test_01193_18429.table_10_209 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT normalizeQuery('SELECT 1, 1, 1, /* Hello */ \'abc\' WHERE 1');
DROP TABLE IF EXISTS dictionary_decimal_polygons_source_table;
SELECT accurateCastOrNull(-1, 'Date');
WITH arrayJoin(range(2)) AS delta SELECT toDate(time) + toIntervalDay(delta) AS dt FROM ( SELECT toDateTime('2020.11.12 19:02:04') AS time ) ORDER BY dt ASC;
SELECT 1, -1, 1 = -1, 1 != -1, 1 < -1, 1 <= -1, 1 > -1, 1 >= -1, -1 = 1, -1 != 1, -1 < 1, -1 <= 1, -1 > 1, -1 >= 1 , toUInt8(1) = toInt8(-1), toUInt8(1) != toInt8(-1), toUInt8(1) < toInt8(-1), toUInt8(1) <= toInt8(-1), toUInt8(1) > toInt8(-1), toUInt8(1) >= toInt8(-1), toInt8(-1) = toUInt8(1), toInt8(-1) != toUInt8(1), toInt8(-1) < toUInt8(1), toInt8(-1) <= toUInt8(1), toInt8(-1) > toUInt8(1), toInt8(-1) >= toUInt8(1) , toUInt8(1) = toInt16(-1), toUInt8(1) != toInt16(-1), toUInt8(1) < toInt16(-1), toUInt8(1) <= toInt16(-1), toUInt8(1) > toInt16(-1), toUInt8(1) >= toInt16(-1), toInt16(-1) = toUInt8(1), toInt16(-1) != toUInt8(1), toInt16(-1) < toUInt8(1), toInt16(-1) <= toUInt8(1), toInt16(-1) > toUInt8(1), toInt16(-1) >= toUInt8(1) , toUInt8(1) = toInt32(-1), toUInt8(1) != toInt32(-1), toUInt8(1) < toInt32(-1), toUInt8(1) <= toInt32(-1), toUInt8(1) > toInt32(-1), toUInt8(1) >= toInt32(-1), toInt32(-1) = toUInt8(1), toInt32(-1) != toUInt8(1), toInt32(-1) < toUInt8(1), toInt32(-1) <= toUInt8(1), toInt32(-1) > toUInt8(1), toInt32(-1) >= toUInt8(1) , toUInt8(1) = toInt64(-1), toUInt8(1) != toInt64(-1), toUInt8(1) < toInt64(-1), toUInt8(1) <= toInt64(-1), toUInt8(1) > toInt64(-1), toUInt8(1) >= toInt64(-1), toInt64(-1) = toUInt8(1), toInt64(-1) != toUInt8(1), toInt64(-1) < toUInt8(1), toInt64(-1) <= toUInt8(1), toInt64(-1) > toUInt8(1), toInt64(-1) >= toUInt8(1) , toInt8(1) = toInt8(-1), toInt8(1) != toInt8(-1), toInt8(1) < toInt8(-1), toInt8(1) <= toInt8(-1), toInt8(1) > toInt8(-1), toInt8(1) >= toInt8(-1), toInt8(-1) = toInt8(1), toInt8(-1) != toInt8(1), toInt8(-1) < toInt8(1), toInt8(-1) <= toInt8(1), toInt8(-1) > toInt8(1), toInt8(-1) >= toInt8(1) , toInt8(1) = toInt16(-1), toInt8(1) != toInt16(-1), toInt8(1) < toInt16(-1), toInt8(1) <= toInt16(-1), toInt8(1) > toInt16(-1), toInt8(1) >= toInt16(-1), toInt16(-1) = toInt8(1), toInt16(-1) != toInt8(1), toInt16(-1) < toInt8(1), toInt16(-1) <= toInt8(1), toInt16(-1) > toInt8(1), toInt16(-1) >= toInt8(1) , toInt8(1) = toInt32(-1), toInt8(1) != toInt32(-1), toInt8(1) < toInt32(-1), toInt8(1) <= toInt32(-1), toInt8(1) > toInt32(-1), toInt8(1) >= toInt32(-1), toInt32(-1) = toInt8(1), toInt32(-1) != toInt8(1), toInt32(-1) < toInt8(1), toInt32(-1) <= toInt8(1), toInt32(-1) > toInt8(1), toInt32(-1) >= toInt8(1) , toInt8(1) = toInt64(-1), toInt8(1) != toInt64(-1), toInt8(1) < toInt64(-1), toInt8(1) <= toInt64(-1), toInt8(1) > toInt64(-1), toInt8(1) >= toInt64(-1), toInt64(-1) = toInt8(1), toInt64(-1) != toInt8(1), toInt64(-1) < toInt8(1), toInt64(-1) <= toInt8(1), toInt64(-1) > toInt8(1), toInt64(-1) >= toInt8(1) , toUInt16(1) = toInt8(-1), toUInt16(1) != toInt8(-1), toUInt16(1) < toInt8(-1), toUInt16(1) <= toInt8(-1), toUInt16(1) > toInt8(-1), toUInt16(1) >= toInt8(-1), toInt8(-1) = toUInt16(1), toInt8(-1) != toUInt16(1), toInt8(-1) < toUInt16(1), toInt8(-1) <= toUInt16(1), toInt8(-1) > toUInt16(1), toInt8(-1) >= toUInt16(1) , toUInt16(1) = toInt16(-1), toUInt16(1) != toInt16(-1), toUInt16(1) < toInt16(-1), toUInt16(1) <= toInt16(-1), toUInt16(1) > toInt16(-1), toUInt16(1) >= toInt16(-1), toInt16(-1) = toUInt16(1), toInt16(-1) != toUInt16(1), toInt16(-1) < toUInt16(1), toInt16(-1) <= toUInt16(1), toInt16(-1) > toUInt16(1), toInt16(-1) >= toUInt16(1) , toUInt16(1) = toInt32(-1), toUInt16(1) != toInt32(-1), toUInt16(1) < toInt32(-1), toUInt16(1) <= toInt32(-1), toUInt16(1) > toInt32(-1), toUInt16(1) >= toInt32(-1), toInt32(-1) = toUInt16(1), toInt32(-1) != toUInt16(1), toInt32(-1) < toUInt16(1), toInt32(-1) <= toUInt16(1), toInt32(-1) > toUInt16(1), toInt32(-1) >= toUInt16(1) , toUInt16(1) = toInt64(-1), toUInt16(1) != toInt64(-1), toUInt16(1) < toInt64(-1), toUInt16(1) <= toInt64(-1), toUInt16(1) > toInt64(-1), toUInt16(1) >= toInt64(-1), toInt64(-1) = toUInt16(1), toInt64(-1) != toUInt16(1), toInt64(-1) < toUInt16(1), toInt64(-1) <= toUInt16(1), toInt64(-1) > toUInt16(1), toInt64(-1) >= toUInt16(1) , toInt16(1) = toInt8(-1), toInt16(1) != toInt8(-1), toInt16(1) < toInt8(-1), toInt16(1) <= toInt8(-1), toInt16(1) > toInt8(-1), toInt16(1) >= toInt8(-1), toInt8(-1) = toInt16(1), toInt8(-1) != toInt16(1), toInt8(-1) < toInt16(1), toInt8(-1) <= toInt16(1), toInt8(-1) > toInt16(1), toInt8(-1) >= toInt16(1) , toInt16(1) = toInt16(-1), toInt16(1) != toInt16(-1), toInt16(1) < toInt16(-1), toInt16(1) <= toInt16(-1), toInt16(1) > toInt16(-1), toInt16(1) >= toInt16(-1), toInt16(-1) = toInt16(1), toInt16(-1) != toInt16(1), toInt16(-1) < toInt16(1), toInt16(-1) <= toInt16(1), toInt16(-1) > toInt16(1), toInt16(-1) >= toInt16(1) , toInt16(1) = toInt32(-1), toInt16(1) != toInt32(-1), toInt16(1) < toInt32(-1), toInt16(1) <= toInt32(-1), toInt16(1) > toInt32(-1), toInt16(1) >= toInt32(-1), toInt32(-1) = toInt16(1), toInt32(-1) != toInt16(1), toInt32(-1) < toInt16(1), toInt32(-1) <= toInt16(1), toInt32(-1) > toInt16(1), toInt32(-1) >= toInt16(1) , toInt16(1) = toInt64(-1), toInt16(1) != toInt64(-1), toInt16(1) < toInt64(-1), toInt16(1) <= toInt64(-1), toInt16(1) > toInt64(-1), toInt16(1) >= toInt64(-1), toInt64(-1) = toInt16(1), toInt64(-1) != toInt16(1), toInt64(-1) < toInt16(1), toInt64(-1) <= toInt16(1), toInt64(-1) > toInt16(1), toInt64(-1) >= toInt16(1) , toUInt32(1) = toInt8(-1), toUInt32(1) != toInt8(-1), toUInt32(1) < toInt8(-1), toUInt32(1) <= toInt8(-1), toUInt32(1) > toInt8(-1), toUInt32(1) >= toInt8(-1), toInt8(-1) = toUInt32(1), toInt8(-1) != toUInt32(1), toInt8(-1) < toUInt32(1), toInt8(-1) <= toUInt32(1), toInt8(-1) > toUInt32(1), toInt8(-1) >= toUInt32(1) , toUInt32(1) = toInt16(-1), toUInt32(1) != toInt16(-1), toUInt32(1) < toInt16(-1), toUInt32(1) <= toInt16(-1), toUInt32(1) > toInt16(-1), toUInt32(1) >= toInt16(-1), toInt16(-1) = toUInt32(1), toInt16(-1) != toUInt32(1), toInt16(-1) < toUInt32(1), toInt16(-1) <= toUInt32(1), toInt16(-1) > toUInt32(1), toInt16(-1) >= toUInt32(1) , toUInt32(1) = toInt32(-1), toUInt32(1) != toInt32(-1), toUInt32(1) < toInt32(-1), toUInt32(1) <= toInt32(-1), toUInt32(1) > toInt32(-1), toUInt32(1) >= toInt32(-1), toInt32(-1) = toUInt32(1), toInt32(-1) != toUInt32(1), toInt32(-1) < toUInt32(1), toInt32(-1) <= toUInt32(1), toInt32(-1) > toUInt32(1), toInt32(-1) >= toUInt32(1) , toUInt32(1) = toInt64(-1), toUInt32(1) != toInt64(-1), toUInt32(1) < toInt64(-1), toUInt32(1) <= toInt64(-1), toUInt32(1) > toInt64(-1), toUInt32(1) >= toInt64(-1), toInt64(-1) = toUInt32(1), toInt64(-1) != toUInt32(1), toInt64(-1) < toUInt32(1), toInt64(-1) <= toUInt32(1), toInt64(-1) > toUInt32(1), toInt64(-1) >= toUInt32(1) , toInt32(1) = toInt8(-1), toInt32(1) != toInt8(-1), toInt32(1) < toInt8(-1), toInt32(1) <= toInt8(-1), toInt32(1) > toInt8(-1), toInt32(1) >= toInt8(-1), toInt8(-1) = toInt32(1), toInt8(-1) != toInt32(1), toInt8(-1) < toInt32(1), toInt8(-1) <= toInt32(1), toInt8(-1) > toInt32(1), toInt8(-1) >= toInt32(1) , toInt32(1) = toInt16(-1), toInt32(1) != toInt16(-1), toInt32(1) < toInt16(-1), toInt32(1) <= toInt16(-1), toInt32(1) > toInt16(-1), toInt32(1) >= toInt16(-1), toInt16(-1) = toInt32(1), toInt16(-1) != toInt32(1), toInt16(-1) < toInt32(1), toInt16(-1) <= toInt32(1), toInt16(-1) > toInt32(1), toInt16(-1) >= toInt32(1) , toInt32(1) = toInt32(-1), toInt32(1) != toInt32(-1), toInt32(1) < toInt32(-1), toInt32(1) <= toInt32(-1), toInt32(1) > toInt32(-1), toInt32(1) >= toInt32(-1), toInt32(-1) = toInt32(1), toInt32(-1) != toInt32(1), toInt32(-1) < toInt32(1), toInt32(-1) <= toInt32(1), toInt32(-1) > toInt32(1), toInt32(-1) >= toInt32(1) , toInt32(1) = toInt64(-1), toInt32(1) != toInt64(-1), toInt32(1) < toInt64(-1), toInt32(1) <= toInt64(-1), toInt32(1) > toInt64(-1), toInt32(1) >= toInt64(-1), toInt64(-1) = toInt32(1), toInt64(-1) != toInt32(1), toInt64(-1) < toInt32(1), toInt64(-1) <= toInt32(1), toInt64(-1) > toInt32(1), toInt64(-1) >= toInt32(1) , toUInt64(1) = toInt8(-1), toUInt64(1) != toInt8(-1), toUInt64(1) < toInt8(-1), toUInt64(1) <= toInt8(-1), toUInt64(1) > toInt8(-1), toUInt64(1) >= toInt8(-1), toInt8(-1) = toUInt64(1), toInt8(-1) != toUInt64(1), toInt8(-1) < toUInt64(1), toInt8(-1) <= toUInt64(1), toInt8(-1) > toUInt64(1), toInt8(-1) >= toUInt64(1) , toUInt64(1) = toInt16(-1), toUInt64(1) != toInt16(-1), toUInt64(1) < toInt16(-1), toUInt64(1) <= toInt16(-1), toUInt64(1) > toInt16(-1), toUInt64(1) >= toInt16(-1), toInt16(-1) = toUInt64(1), toInt16(-1) != toUInt64(1), toInt16(-1) < toUInt64(1), toInt16(-1) <= toUInt64(1), toInt16(-1) > toUInt64(1), toInt16(-1) >= toUInt64(1) , toUInt64(1) = toInt32(-1), toUInt64(1) != toInt32(-1), toUInt64(1) < toInt32(-1), toUInt64(1) <= toInt32(-1), toUInt64(1) > toInt32(-1), toUInt64(1) >= toInt32(-1), toInt32(-1) = toUInt64(1), toInt32(-1) != toUInt64(1), toInt32(-1) < toUInt64(1), toInt32(-1) <= toUInt64(1), toInt32(-1) > toUInt64(1), toInt32(-1) >= toUInt64(1) , toUInt64(1) = toInt64(-1), toUInt64(1) != toInt64(-1), toUInt64(1) < toInt64(-1), toUInt64(1) <= toInt64(-1), toUInt64(1) > toInt64(-1), toUInt64(1) >= toInt64(-1), toInt64(-1) = toUInt64(1), toInt64(-1) != toUInt64(1), toInt64(-1) < toUInt64(1), toInt64(-1) <= toUInt64(1), toInt64(-1) > toUInt64(1), toInt64(-1) >= toUInt64(1) , toInt64(1) = toInt8(-1), toInt64(1) != toInt8(-1), toInt64(1) < toInt8(-1), toInt64(1) <= toInt8(-1), toInt64(1) > toInt8(-1), toInt64(1) >= toInt8(-1), toInt8(-1) = toInt64(1), toInt8(-1) != toInt64(1), toInt8(-1) < toInt64(1), toInt8(-1) <= toInt64(1), toInt8(-1) > toInt64(1), toInt8(-1) >= toInt64(1) , toInt64(1) = toInt16(-1), toInt64(1) != toInt16(-1), toInt64(1) < toInt16(-1), toInt64(1) <= toInt16(-1), toInt64(1) > toInt16(-1), toInt64(1) >= toInt16(-1), toInt16(-1) = toInt64(1), toInt16(-1) != toInt64(1), toInt16(-1) < toInt64(1), toInt16(-1) <= toInt64(1), toInt16(-1) > toInt64(1), toInt16(-1) >= toInt64(1) , toInt64(1) = toInt32(-1), toInt64(1) != toInt32(-1), toInt64(1) < toInt32(-1), toInt64(1) <= toInt32(-1), toInt64(1) > toInt32(-1), toInt64(1) >= toInt32(-1), toInt32(-1) = toInt64(1), toInt32(-1) != toInt64(1), toInt32(-1) < toInt64(1), toInt32(-1) <= toInt64(1), toInt32(-1) > toInt64(1), toInt32(-1) >= toInt64(1) , toInt64(1) = toInt64(-1), toInt64(1) != toInt64(-1), toInt64(1) < toInt64(-1), toInt64(1) <= toInt64(-1), toInt64(1) > toInt64(-1), toInt64(1) >= toInt64(-1), toInt64(-1) = toInt64(1), toInt64(-1) != toInt64(1), toInt64(-1) < toInt64(1), toInt64(-1) <= toInt64(1), toInt64(-1) > toInt64(1), toInt64(-1) >= toInt64(1) 
CREATE TABLE test_2E3C4B443471594C6974647360326B756C6428337372274374367325414B286F572B4E535C442F22(x UInt8) Engine=Memory;
INSERT INTO r9 SELECT 60
KILL MUTATION WHERE mutation_id='0000000000' and table='concurrent_mutate_kill' and database='test_ivy0esel'
SELECT t.x, l.s, r.s, toTypeName(l.s), toTypeName(r.s) FROM nr AS l RIGHT JOIN t AS r USING (x) ORDER BY t.x;
SELECT parseDateTimeBestEffort('2020-05-14T03:37:03.253184Z', 3, 'UTC') AS a, toTypeName(a);
insert into test select * from file(02458_data.jsonl);
SELECT CAST('2001:0db8:0000:85a3:0000:0000:ac1f:8001' as IPv6) as v, toTypeName(v);
set max_threads=3;
DROP TABLE IF EXISTS t2_all;
SELECT columns_transformers.* REPLACE(j + 2 AS j, i + 1 AS i) APPLY(avg) from columns_transformers;
DROP DATABASE IF EXISTS test_nfm5r5re 
insert into s_00725_2 values
CREATE TABLE ipv4_range(ip IPv4, cidr UInt8) ENGINE = Memory;
CREATE TABLE test_3B60744E3747293B2E592B5D422A4448604E3B4C6065532D3B5A71787C43794F5B42655032627569(x UInt8) Engine=Memory;
SELECT sleep(1)
SELECT t1.*, t2.* FROM t2 ANY INNER JOIN t1 USING(x) ORDER BY t1.x, t2.x;
SELECT substringUTF8(materialize('hello, ÃÂ¿ÃÂÃÂ¸ÃÂ²ÃÂµÃÂ'), -1 - number, 5) FROM numbers(16);
SELECT name, found_rate FROM system.dictionaries WHERE database = currentDatabase() AND name = 'simple_key_sparse_hashed_dictionary_01862';
SELECT 'Running test stateless/01511_alter_version_versioned_collapsing_merge_tree_zookeeper.sql from pid=1715' 
SELECT `x` FROM generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8))))))))))))))))))))))))))))))))', 1, 1, 1) LIMIT 1
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), N == toUInt64(1) as r FORMAT CSV;
SELECT countDigits(-123.45678::Decimal32(5));
CREATE TABLE test_6863565074492E657D5C7E443F7C733441777C3A704A7C33766A56522B305C75616141683B324465(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_2_176 VALUES 
SELECT any('x') FROM e JOIN ( SELECT 1 joinKey) AS da ON joinKey = a PREWHERE toString(a) = 'x';
SELECT 'Running test stateless/02681_group_array_too_large_size.sql from pid=1724' 
SELECT a, b, c, d, e FROM t_fixed_prefix WHERE bitNot(a) = 1 AND bitNot(b) = 1 ORDER BY a, b, c, d, e SETTINGS optimize_read_in_order = 0
select 'dst_to_src', 17, 'src', type, n, _part from src order by type, n
CREATE TABLE test_01193_18429.table_1_57 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/00910_decimal_group_array_crash_3783.sql from pid=1726' 
INSERT INTO test_02908_r1_148 SELECT rand64() FROM numbers(5);
SELECT count() FROM lc_nullable WHERE has(f64, -1);
SELECT 'Running test stateless/02468_has_any_tuple.sql from pid=1713' 
CREATE TABLE test_02908_r3_77 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_77', 'r3') ORDER BY tuple()
select concat(materialize('a'), 'b', toFixedString('c', 1)) == 'abc';
SELECT cityHash64(CAST(NULL AS Nullable(Int8)));
CREATE TABLE test_4B304A49475F46786749364B32794E603F6C6766645E447A3E6A6C794F4B7840206B4C6C24227432(x UInt8) Engine=Memory;
SELECT CASE WHEN (col1 % 2) = 0 THEN toFixedString(col2, 16) WHEN (col1 % 3) = 0 THEN toFixedString(col3, 16) ELSE toFixedString(col4, 16) END FROM multi_if_check;
INSERT INTO mt VALUES /* (13, 2) */ 
DROP DATABASE IF EXISTS test_rrcad6q0 
DROP TABLE map_formats_input
CREATE DATABASE db_for_dict;
CREATE TABLE test_2F3E5D5E4E77454033644B4F30463328626D43202A7663224D7D255E4A2E6A5A3335612B4A5A495E(x UInt8) Engine=Memory;
CREATE FUNCTION 02483_plusthree AS (a) -> a + 3;
SELECT 'Running test stateless/01825_type_json_nullable.sql from pid=1714' 
drop table test_table_url;
CREATE TABLE test_01193_18429.table_9_538 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
select toDateTimeOrDefault(cast(19 as UInt16), 'UTC');
INSERT INTO test_01193_18429.table_8_284 VALUES 
SELECT generateUUIDv4([NULL]);
SELECT 'Running test stateless/00048_b_stored_aggregates_merge.sql from pid=1718' 
SELECT name FROM system.tables WHERE database=currentDatabase() AND name like 'dst_%' AND engine like '%Replicated%'
select -7 as offset, 'Hello' as s, subString(bin(s), offset), bin(bitSlice(s, offset));
SELECT COUNT(*) FROM ( SELECT table_lz4.id, table_lz4.ui AS ui1, table_gcd.id, table_gcd.ui AS ui2 FROM table_lz4 JOIN table_gcd ON table_lz4.id = table_gcd.id ) WHERE ui1 != ui2;
CREATE WINDOW VIEW wv TO dst WATERMARK=ASCENDING AS SELECT count(a) AS count, hopEnd(wid) AS w_end FROM mt GROUP BY hop(timestamp, INTERVAL '2' SECOND, INTERVAL '3' SECOND, 'US/Samoa') AS wid;
DROP TABLE IF EXISTS source;
SELECT 'SELECT * FROM merge(currentDatabase(), 02763_merge)';
SELECT a, b, t2.b FROM t1 FULL JOIN t2 USING (a) ORDER BY (a);
CREATE DATABASE IF NOT EXISTS test_p5k2dbw0 
INSERT INTO TABLE test1(year, uv) select '2021',uniqThetaState(toInt64(4));
CREATE TABLE test_01193_18429.table_4_378 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE `test_log` ( date Date, datetime DateTime, path String, gtid String, query_serial UInt32, row_serial UInt32, reqid Int64, method String, service String, db String, type String, operation Enum8('INSERT'=1, 'UPDATE'=2, 'DELETE'=3), old_fields Nested(name String, value String, is_null Enum8('true'=1, 'false'=0)), new_fields Nested(name String, value String, is_null Enum8('true'=1, 'false'=0)), record_source_type Int8, record_source_timestamp DateTime, deleted Enum8('true'=1, 'false'=0) ) ENGINE = MergeTree( date, (date, path, gtid, query_serial, row_serial), 1024 ) 
DROP DATABASE IF EXISTS test_rk94adfy 
CREATE TABLE test_01193_18429.table_1_573 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_7pqujlea 
drop table if exists test1_00863;
INSERT INTO test_02908_r1_152 SELECT rand64() FROM numbers(5);
insert into t_buf values 
INSERT INTO replacing_00155 (x, v) SELECT number AS x, toUInt64(number % 3 == 1) FROM system.numbers LIMIT 8193
DROP DATABASE IF EXISTS test_kko7gbum 
SELECT CASE WHEN (number % 2) = 0 THEN toInt16(1) WHEN (number % 3) = 0 THEN toUInt8(2) ELSE toFloat32(3) END FROM system.numbers LIMIT 10;
CREATE TABLE users (UserID UInt64) ENGINE = Log;
DROP TABLE test_local;
SELECT anyIf('Hello', arrayJoin([1, NULL]) = 0);
select b as a, d as c from t1 join t2 on a = c;
SELECT sleep(1) FORMAT Null;
drop table orc_load
CREATE TABLE IF NOT EXISTS functional_index_mergetree (`x` Float64) ENGINE = MergeTree ORDER BY round(x) SETTINGS index_granularity = 52674, min_bytes_for_wide_part = 208142596, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 886, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 66, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 10130385, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 65412, primary_key_compress_block_size = 56581
DROP DATABASE IF EXISTS test_rfg4ifpa 
CREATE DATABASE IF NOT EXISTS test_w0fy1w23 
SELECT count() FROM (SELECT dummy, sum(dummy) GROUP BY dummy WITH TOTALS);
SELECT 'Running test stateless/00907_set_index_with_nullable_and_low_cardinality_bug.sql from pid=1722' 
SELECT multiIf((number % 2) = 0, [toInt8(1), toInt8(2)], (number % 3) = 0, [toInt64(2), toInt64(3)], [toInt16(3), toInt16(3)]) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_5_630 VALUES 
SELECT s, y FROM test_02559 PREWHERE y AND x ORDER BY s;
SELECT toIPv6OrNull(NULL, NULL);
SELECT count() FROM mt_match_pk WHERE match(v, '^ac?');
SELECT 'Running test stateless/00808_array_enumerate_segfault.sql from pid=1724' 
SELECT 'Running test stateless/02497_trace_events_stress_long.sh from pid=1705' 
DROP DATABASE IF EXISTS test_zoczfe66 
select count() from remote('127.0.0.1,127.0.0.2', currentDatabase(), test_local) where * global in (select * from numbers(10));
select formatDateTime(toDateTime64('2022-12-08 18:11:29.1234', 0, 'UTC'), '%F %T.%f');
SELECT dictGet('01685_database_for_cache_dictionary.cache_dictionary_complex_key_complex_attributes', 'value_first', (number, concat('id_key_', toString(number)))) as value_first, dictGet('01685_database_for_cache_dictionary.cache_dictionary_complex_key_complex_attributes', 'value_second', (number, concat('id_key_', toString(number)))) as value_second FROM system.numbers LIMIT 4;
insert into test_ins_null select toDate('2017-10-02'), if(number % 2, number, Null) from system.numbers limit 10000;
CREATE TABLE test_01193_18429.table_9_6 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_01193_18429.table_5_742 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_2_458 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_01193_18429.table_4_419 VALUES 
SELECT parseDateTime32BestEffortOrNull('Dec 15, 2021', 'UTC') AS a, toTypeName(a);
CREATE DATABASE IF NOT EXISTS test_etpebc8e 
SELECT '2023-10-23' + INTERVAL 1 MINUTE, '2023-10-23 12:34:56.123' + INTERVAL 1 MINUTE;
select uuid from test union distinct select uuid from test union all select uuid from test where name = '1';
INSERT INTO r7 SELECT 48 % 10 = 7 ? 48 - 1 : 48
CREATE TABLE test_6F674345416D513A253E59276162782D6865554344484075787668287C604A436727484928636368(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_b72zid71 
SELECT 'dt64 = const dt' FROM dt64test WHERE dt64_column = toDateTime('2020-01-13 13:37:00');
CREATE TABLE test_2D74706D485966722B3C364A424C7878294D6D6C446B5F5035484C263F6E644F3B584D6D3C384563(x UInt8) Engine=Memory;
SELECT CAST('1234567891234.12345111' AS Decimal(10, 5));
INSERT INTO dist SETTINGS prefer_localhost_replica=0, max_threads=1 VALUES 
INSERT INTO test_01193_18429.table_3_833 VALUES 
/* ddl_entry=query-0000000165 */ SYSTEM START DISTRIBUTED SENDS db_01294.dist_01294
CREATE DATABASE IF NOT EXISTS test_cxzk7pca 
DROP DATABASE IF EXISTS test_uxcs1qbo 
SELECT '--JSONExtractArrayRaw--';
INSERT INTO r3 SELECT 36 % 10 = 3 ? 36 - 1 : 36
CREATE TABLE test_4435777223453F704C7135397679433F263244412D716B636A57573527502B214E4655453262674D(x UInt8) Engine=Memory;
SELECT [(1, 1)];
SELECT '25' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ff80::')))
CREATE TABLE test_7236467E72333773517B4D794D573A745C5F6F7D7D312A3032543D6C343452363B2F69733F495448(x UInt8) Engine=Memory;
SELECT quantiles(0.5)(now()::DateTime('UTC')) WHERE 0 WITH TOTALS;
select * from file('test_02149.data', 'CSV') settings input_format_csv_use_best_effort_in_schema_inference=false
select makeDate(year, month, day) from (select NULL as year, 2 as month, 3 as day union all select NULL as year, 2 as month, 3 as day) order by year, month, day;
SELECT 'Running test stateless/02377_fix_file_virtual_column.sql from pid=1722' 
SELECT 'Running test stateless/02158_proportions_ztest_cmp.sh from pid=1715' 
CREATE TABLE test_01193_18429.table_10_466 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
DROP TABLE IF EXISTS 02952_disjunction_optimization;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (9 < 17 AND 49 > 0 ? 9 : 0)), throwIf(last != (9 < 17 AND 49 > 0 ? least(17 - 1, 9 + 49 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(17) LIMIT 9, 49);
DROP DATABASE IF EXISTS test_woy96rde 
select * from v_numbers settings additional_table_filters={'system.numbers' : 'number != 3', 'v_numbers' : 'x != 3'};
SELECT s, narr FROM nullable_00457 ORDER BY s;
SELECT count() FROM t_cnf_fuzz WHERE (c9 AND (NOT c3) AND (NOT c3) AND (NOT c3)) OR ((NOT c1) AND (NOT c0) AND c5 AND (NOT c3)) OR ((NOT c9) AND (NOT c5)) SETTINGS convert_query_to_cnf = 1
SELECT * FROM collate_test1 ORDER BY x, s COLLATE 'ru';
CREATE TABLE test_01193_18429.table_5_582 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_7_588 VALUES 
SELECT 'UInt8';
SELECT toUInt64(number) AS x, round(x), roundBankers(x), floor(x), ceil(x), trunc(x) FROM system.numbers LIMIT 20;
DROP DATABASE IF EXISTS test_wa6kims1 
select makeDateTime64(1983, 2, 30, 2, 3, 4, 5, 9, 'UTC');
DROP TABLE dep2;
DROP TABLE IF EXISTS non_ascii;
DROP TABLE IF EXISTS Beta;
CREATE DATABASE IF NOT EXISTS test_a3rqxwxx 
INSERT INTO r1 SELECT 85
INSERT INTO checkouts SELECT number as id, '2000-01-01 10:00:00' from numbers(50000);
insert into table function file('test_02167.ORC', 'auto', 'x UInt64') select * from numbers(2)
CREATE TABLE decimal_sum ( date Date, sum32 Decimal32(4), sum64 Decimal64(8), sum128 Decimal128(10) ) Engine = SummingMergeTree(date, (date), 8192);
DROP DATABASE IF EXISTS test_5u9xpf2p 
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c1) AND c6 AND (NOT c7)) OR ((NOT c1)) OR ((NOT c3) AND c2 AND (NOT c0)) OR ((NOT c5) AND c5 AND (NOT c7) AND (NOT c7) AND (NOT c8)) SETTINGS convert_query_to_cnf = 0
ALTER TABLE src_2 MOVE PARTITION 8 TO TABLE dst_10
SELECT number % 3 + 1 AS n, min(n), max(n) FROM numbers(100) GROUP BY n WITH ROLLUP;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (23 < 78 AND 106 > 0 ? 23 : 0)), throwIf(last != (23 < 78 AND 106 > 0 ? least(78 - 1, 23 + 106 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(78) LIMIT 23, 106);
SELECT 'Running test stateless/00844_join_lightee2.sql from pid=1718' 
DROP TABLE IF EXISTS parquet_numbers
DROP DATABASE IF EXISTS test_sxj3s85i 
CREATE TABLE test_01193_18429.table_10_799 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_aevrgero 
DETACH table test1601_detach_permanently_ordinary.test_name_reuse;
CREATE INDEX idx_tab4_0 ON tab4 (col3,col1 DESC,col4);
CREATE TABLE test_01193_18429.table_2_164 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_6_512 VALUES 
INSERT INTO test_01193_18429.table_9_151 VALUES 
SELECT ngramMinHashArg(NULL);
CREATE TABLE test_01193_18429.table_6_422 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE DICTIONARY hashed_array_dictionary_simple_key_hierarchy ( id UInt64, parent_id UInt64 HIERARCHICAL ) PRIMARY KEY id SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_hierarchy_table')) LAYOUT(HASHED_ARRAY()) LIFETIME(MIN 1 MAX 1000);
SELECT largestTriangleThreeBuckets(NULL, NULL, NULL);
CREATE TABLE test_01193_18429.table_4_830 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_5C532A45447C6C6D3029657744627E6660376B51566D226B596E253C40634C742A5F20256E606432(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS agg_func_col;
INSERT INTO t_json_files SELECT _file, data FROM file('01825_file_*.json', 'JSONAsObject', 'data JSON') WHERE _file IN ('01825_file_1.json', '01825_file_3.json')
SELECT 'Hello' LIKE '%%%';
CREATE TABLE test_01193_18429.table_3_711 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DICTIONARY 01681_database_for_cache_dictionary.cache_dictionary_simple_key_complex_attributes ( id UInt64, value_first String DEFAULT 'value_first_default', value_second Nullable(String) DEFAULT 'value_second_default' ) PRIMARY KEY id SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_complex_attributes_source_table')) LIFETIME(MIN 1 MAX 1000) LAYOUT(CACHE(SIZE_IN_CELLS 10));
select toDateTime(0, 'America/Los_Angeles');
CREATE TABLE test_01193_18429.table_4_500 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT * FROM test WHERE d >= '2019-07-08';
INSERT INTO test_01193_18429.table_8_659 VALUES 
DROP DATABASE IF EXISTS test_gkfy6atu 
CREATE TABLE one_00458 (x String) ENGINE = Memory;
CREATE TABLE test_4929764E7A62675523425B4660242B7A2B736C3654515A383824464E4D4650285F393B7D5F4B682E(x UInt8) Engine=Memory;
CREATE TABLE t (`x` UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_comment_table2/t', '1') ORDER BY tuple() SETTINGS index_granularity = 56772, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.7789211869239807, replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 10438, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 68, min_merge_bytes_to_use_direct_io = 1057156198, index_granularity_bytes = 29302538, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 67661, primary_key_compress_block_size = 85716 COMMENT 'Hello'
INSERT INTO test_01193_18429.table_4_906 VALUES 
SELECT 'flat: left';
DROP VIEW mv_1_2;
DESCRIBE (SELECT arrayMap(x -> x + 1, [1,2,3]));
ALTER TABLE concurrent_alter_column ADD COLUMN c491 DOUBLE;
SELECT `x` FROM generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8))))))))))))))))))))))))))))))))))', 1, 1, 1) LIMIT 1
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (65 < 28 AND 41 > 0 ? 65 : 0)), throwIf(last != (65 < 28 AND 41 > 0 ? least(28 - 1, 65 + 41 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(28) LIMIT 65, 41);
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 50850, 500 settings ignore_materialized_views_with_dropped_target_table=1
DROP TABLE source;
CREATE TABLE testVersionedCMT (`uid` String, `version` UInt32, `is_deleted` UInt8, `sign` Int8) ENGINE = VersionedCollapsingMergeTree(sign, version) ORDER BY uid SETTINGS clean_deleted_rows = 'Always', allow_experimental_replacing_merge_with_cleanup = 1, index_granularity = 35498, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 20819, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 6356984295, index_granularity_bytes = 7722704, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 61487, primary_key_compress_block_size = 15770
INSERT INTO ordinary_db.table_for_dict_real SELECT number, number, toString(number) from numbers(2);
ALTER TABLE src_14 MOVE PARTITION 5 TO TABLE dst_12
select s.a, s.a, s.b as s_b, s.b from t left join s on s.a = t.a left join y on s.b = y.b order by t.a format PrettyCompactNoEscapes;
select 2 = position('abc', 'bc');
SELECT id FROM (SELECT id FROM test_table EXCEPT SELECT id FROM test_table);
SELECT multiIf((number % 2) = 0, toInt16(1), (number % 3) = 0, toInt8(2), toFloat64(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_5065433B79643152726950404C65525D3632752D473A276F5174382A276B7C30257335314B474D3A(x UInt8) Engine=Memory;
SELECT toDecimal32(1.555,3) IN (1.5551,1.555);
CREATE FUNCTION 02484_plusone AS (a) -> a + 1;
CREATE TABLE test_2E623F763E4F2C51242F26323F5C492420487B624F36525A3626327E2F70586D68416737484B3053(x UInt8) Engine=Memory;
alter table many_mutations delete where y = 387 * 2 settings mutations_sync = 0;
CREATE DATABASE IF NOT EXISTS test_e3ga3t74 
EXPLAIN SYNTAX SELECT (0 + 1 + 2 + 3 + 4)::Date AS c;
SELECT arrayUniq([NULL], [NULL], [NULL]);
SELECT multiIf((number % 2) = 0, [toInt16(1), toInt16(2)], (number % 3) = 0, [toInt64(2), toInt64(3)], [toInt64(3), toInt64(3)]) FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/00477_parsing_data_types.sql from pid=1713' 
SELECT 'Running test stateless/01867_fix_storage_memory_mutation.sql from pid=1718' 
SELECT * FROM m INNER JOIN b USING(key) WHERE ID = 1 HAVING ID = 1 ORDER BY ID;
select [3] = multiSearchAllPositions(materialize('abcd'), ['c']);
CREATE DATABASE IF NOT EXISTS test_35gyem7l 
SELECT 'abc\n\ndef' LIKE '%abc%def%';
DROP DATABASE IF EXISTS test_ve2ojauo 
SELECT DAYOFWEEK(NULL, NULL);
DROP DATABASE IF EXISTS test_xt4hduws 
DROP TABLE IF EXISTS local_01099_a;
SELECT 'wordShingleMinHash';
CREATE TABLE test_60212547446242717D356B616F7039734C5D414D59612658566C7E23262E507A3C51577D3A4D213E(x UInt8) Engine=Memory;
SELECT * FROM (SELECT 'Hello, World! From client.') INTO OUTFILE '/tmp/clickhouse-test/0_stateless/test_cnrzwo8n/test_comp_for_input_and_output.gz' FORMAT TabSeparated;
INSERT INTO test_01193_18429.table_8_983 VALUES 
CREATE INDEX idx_tab3_4 ON tab3 (col4,col3);
select 0 = multiSearchFirstIndex(materialize('ccbgxzoivbqtmyzqyooyepnmwufizz'), ['lcclseplkhxbrrzlnani', 'xggxivwqlpxmpypzovprdkmhrcgjkro', 'dbbmiegotfxjxybs', 'hqtcowpupsyqfx', 'znatfzjbeevbaqbmpofhywbyfxn', 'mnditiygex', 'lazqapwjswhkuimwmjoyseyucllnrfxrwnzj', 'jg', 'dmqwnuvsufgffuubhqeugwcanvflseorrydyyxvr', 'wpjfcfwfgjiybncrw', 'joucnvxxcyjyqlwhrzwnstyj', 'babtxkzasyaffxzd', 'wgcfdyhwxjoytbxffdxbdfinolbltnhqkvyzybc', 'yhrgwbdwopznltjtyidxawqg', 'bvrrt', 'bcwmsys', 'ijdjojhhzaiyjyai', 'eevxwppogogdbmqpbeqtembiqxeiwf']) from system.numbers limit 10;
INSERT INTO test_01193_18429.table_5_56 VALUES 
SELECT uniqMerge(x + y) FROM (SELECT uniqState(a) as x, uniqState(b) as y FROM add_aggregate);
SELECT dictGetChildren('hierarchy_flat_dictionary', 3);
DROP TABLE IF EXISTS foo2_dist;
CREATE DATABASE IF NOT EXISTS test_ef6qivhu 
INSERT INTO merge_item_14 VALUES 
SELECT (CAST(('\0') AS String));
INSERT INTO test_01193_18429.table_6_58 VALUES 
CREATE TABLE test_636B4D586D38246A773E50773531707E49546A5F395D6537212A48732B3F747031574423264D7666(x UInt8) Engine=Memory;
ALTER TABLE check_query_comment_column MODIFY COLUMN first_column COMMENT 'comment 1_2', MODIFY COLUMN second_column COMMENT 'comment 2_2', MODIFY COLUMN third_column COMMENT 'comment 3_2', MODIFY COLUMN fourth_column COMMENT 'comment 4_2', MODIFY COLUMN fifth_column COMMENT 'comment 5_2';
INSERT INTO r5 SELECT 7 % 10 = 5 ? 7 - 1 : 7
INSERT INTO r8 SELECT 74
SELECT sum(s) FROM (SELECT y AS s FROM remote('127.0.0.{2,3}', currentDatabase(), big_array) ARRAY JOIN x AS y);
CREATE TABLE test_01193_18429.table_10_878 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'Running test stateless/01556_explain_select_with_union_query.sql from pid=1715' 
INSERT INTO test_01193_18429.table_5_764 VALUES 
SELECT 'Running test stateless/02322_sql_insert_format.sql from pid=1705' 
SHOW CREATE POLICY p3_01296 ON db_01296.table2;
INSERT INTO test_01193_18429.table_3_704 VALUES 
CREATE TEMPORARY TABLE table_to_drop(x Int8);
select count(*) from dat where eventTimestamp >= (select eventTimestamp from datDictionary);
SELECT 'Running test stateless/02320_mapped_array_witn_const_nullable.sql from pid=1718' 
INSERT INTO replaceall VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN toUInt16(1) WHEN (number % 3) = 0 THEN toInt8(2) ELSE toFloat32(3) END FROM system.numbers LIMIT 10;
CREATE TABLE test_77715D307A3A6B6267207B207C6C33772A3C3A70464D3A443028264D533F6E25446C506A3B362662(x UInt8) Engine=Memory;
SELECT k, t, a, b FROM A ASOF LEFT JOIN B USING(k,t) ORDER BY (k,t);
CREATE TABLE test_335A466233692D32666E3C7E305A552F3D355E5E5E6C784A6D5F713F742240336D597878653A4646(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_c9xk9yry 
CREATE TABLE a (k UInt64, a1 UInt64, a2 String) ENGINE = Memory;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c1) AND c1 AND (NOT c1)) SETTINGS convert_query_to_cnf = 1
CREATE TABLE test_465360762A492F6373294A5D5E4A6F305D43517D75652F3F3E4228666054335D6D4A496337602277(x UInt8) Engine=Memory;
SELECT transform((number, toString(number)), [(3, '3'), (5, '5'), (7, '7')], ['hello', 'world', 'abc!'], 'def') FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_6_542 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP DICTIONARY test_01037.dict_array;
CREATE DATABASE IF NOT EXISTS test_kormx5kq 
INSERT INTO test_01193_18429.table_2_139 VALUES 
CREATE INDEX idx_tab3_0 ON tab3 (col1,col0);
CREATE TABLE test (`id` UInt64, `v` Variant(String, UInt64, LowCardinality(String), Tuple(a UInt32, b UInt32), Array(UInt64))) ENGINE = MergeTree ORDER BY id SETTINGS min_rows_for_wide_part = 100000000, min_bytes_for_wide_part = 1000000000, index_granularity = 5269, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 61, merge_max_block_size = 13447, prefer_fetch_merged_part_size_threshold = 4785123982, vertical_merge_algorithm_min_rows_to_activate = 738598, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 28804223, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 98260, primary_key_compress_block_size = 13792
DROP DATABASE IF EXISTS test_ohuayr9m 
select (toInt128(-1) / toInt64(-1)) x, (toInt256(-1) / toInt64(-1)) y, toTypeName(x), toTypeName(y);
CREATE TABLE test_01193_18429.table_2_225 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO t SELECT toDate('2023-09-10', 'UTC') AS d, NULL AS f1, ['x', 'y', 'z'][number % 3] AS f2, number AS c FROM numbers(1000);
SELECT * FROM 01686_test WHERE key = 123;
CREATE TABLE test_01193_18429.table_7_504 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toInt32(3), toInt32(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_4_632 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
EXPLAIN SYNTAX SELECT groupArray(x) from (SELECT number as x FROM numbers(3) ORDER BY x, exp(exp(x)));
CREATE TABLE test_2B56405D3A4E337565333026742F5C36742A517E3D55327B38252B5B513C477924285E23784D357B(x UInt8) Engine=Memory;
INSERT INTO t_read_in_order SELECT toDateTime('2020-10-10 00:00:00') + number, 1 / (number % 100 + 1), number FROM numbers(1000);
INSERT INTO test_01193_18429.table_5_185 VALUES 
CREATE DATABASE IF NOT EXISTS test_8fsino0k 
CREATE TABLE roundtrip_persons_00825 AS persons_00825
SELECT multiIf((number % 2) = 0, [toInt16(1), toInt16(2)], (number % 3) = 0, [toInt8(2), toInt8(3)], [toUInt16(3), toUInt16(3)]) FROM system.numbers LIMIT 10;
SELECT 11,'Hello',bin(bitShiftRight('Hello', 11));
INSERT INTO codecTest (key, ref_valueU64, valueU64, ref_valueU32, valueU32, ref_valueU16, valueU16, ref_valueU8, valueU8, ref_valueI64, valueI64, ref_valueI32, valueI32, ref_valueI16, valueI16, ref_valueI8, valueI8, ref_valueDT, valueDT, ref_valueD, valueD) SELECT number as n, n + (rand64() - 9223372036854775807)/1000 as v, v, v, v, v, v, v, v, v, v, v, v, v, v, v, v, toDateTime(v), toDateTime(v), toDate(v), toDate(v) FROM system.numbers LIMIT 3001, 1000;
SELECT toTypeName(x) FROM (SELECT toDecimal32('1234.5', 5) AS x UNION ALL SELECT toUInt8(0) AS x) WHERE x = 0;
CREATE TABLE test_01193_18429.table_6_932 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TEMPORARY TABLE test (d Date);
SELECT roundDuration(30);
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), CAST(N as DateTime64(9, 'Europe/Minsk')) as r FORMAT CSV;
select parseDateTimeInJodaSyntax('59', 'mm', 'UTC') = toDateTime('1970-01-01 00:59:00', 'UTC');
select sumArgMin(number, number % 20), sumArgMax(number, number % 20) from numbers(100);
select 'arrayPushFront([a, b, c], val)';
SELECT multiIf((number % 2) = 0, [toInt32(1), toInt32(2)], (number % 3) = 0, [toInt16(2), toInt16(3)], [toInt8(3), toInt8(3)]) FROM system.numbers LIMIT 10;
SELECT * FROM multi_google_wrappers_02266
SELECT sum(id = 3 OR id = 1 OR id = 2) AS x, sum(id = 3 OR id = 1 OR id = 2) AS x FROM foo_00234;
CREATE TABLE test_564472586662253921745D55407C5F417253263F6F7B5D432670564A527B217C37275D546D3F4452(x UInt8) Engine=Memory;
select arrayPushBack(emptyArrayUInt8(), -1);
EXPLAIN SYNTAX select uniq(x + y), uniqExact(x + y), uniqHLL12(x + y), uniqCombined(x + y), uniqCombined64(x + y) from (select number % 2 as x, number % 3 y from numbers(10));
DROP TABLE IF EXISTS data_01875_1;
SELECT multiIf((number % 2) = 0, [toUInt64(1), toUInt64(2)], (number % 3) = 0, [toUInt64(2), toUInt64(3)], [toUInt16(3), toUInt16(3)]) FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_ma4k3vhl 
CREATE TABLE test_23203D727034323570357656712B293B713F4B5D30525D5C2F767D704130573D7939487379227A3F(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_etins0is 
CREATE TABLE test_2377527855767436312D3439306E3320767822535D5A253C4446287E556F316D71493D3371395174(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_lsboyeo3 
CREATE TABLE test_01193_18429.table_1_909 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
ALTER TABLE defaults ADD COLUMN m Int8;
select l_shipmode, sum(case when o_orderpriority = '1-URGENT' or o_orderpriority = '2-HIGH' then 1 else 0 end) as high_line_count, sum(case when o_orderpriority <> '1-URGENT' and o_orderpriority <> '2-HIGH' then 1 else 0 end) as low_line_count from orders, lineitem where o_orderkey = l_orderkey and l_shipmode in ('MAIL', 'SHIP') and l_commitdate < l_receiptdate and l_shipdate < l_commitdate and l_receiptdate >= date '1994-01-01' and l_receiptdate < date '1994-01-01' + interval '1' year group by l_shipmode order by l_shipmode;
CREATE TEMPORARY TABLE decimal ( f dec(38, 38) );
select [14, 16, 10, 2, 6, 1, 0, 8, 0, 0, 12, 1, 0, 1, 0, 0] = multiSearchAllPositionsCaseInsensitive(materialize('tejdZOLhjpFLkGBWTGPfmk'), ['GBWtgPF', 'Wt', 'PflkgBWTgpFmK', 'ejdZOLhJPFlKgb', 'o', 'TejDZ', 'HlQfCP', 'hJP', 'ydiyWEfPGyRwcKGfGVdYxAXmkY', 'QsOyrgkTGMpVUAmLjtnWEIW', 'LKGBw', 'tejDzolHJpFLKgbWT', 'IK', '', 'WrzLpcmudcIJEBapkToDbYSazKTwilW', 'DmEWOxoieDsQHYsLNelMc']) from system.numbers limit 10;
CREATE DATABASE IF NOT EXISTS test_fgfyp2an 
SELECT toDate32OrNull(NULL, NULL);
DROP DATABASE IF EXISTS test_38o7024g 
TRUNCATE TABLE t_json_17;
CREATE DATABASE IF NOT EXISTS test_eu66afmg 
INSERT INTO t SELECT number+2 FROM numbers(2);
CREATE TABLE test_01193_18429.table_5_345 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT date_trunc('year', toDateTime('2020-01-01 12:11:22', 'Europe/London'), 'Europe/London');
 select * from (select key, value from num_1) l inner join (select key, value from num_2 inner join (select number * 7 as key from numbers(1e5)) as nn on num_2.key = nn.key settings parallel_replicas_prefer_local_join=1) r on l.key = r.key order by l.key limit 10 offset 10000 SETTINGS allow_experimental_analyzer=1
CREATE TABLE test_01193_18429.table_6_327 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT 'Running test stateless/00312_position_case_insensitive_utf8.sql from pid=1724' 
CREATE TABLE t_ab1 (id Nullable(Int32), a UInt16, b UInt8) ENGINE = TinyLog;
SELECT arrayAll(x -> 1, emptyArrayUInt8());
CREATE TABLE t (`c` String) ENGINE = MergeTree ORDER BY c SETTINGS index_granularity = 45387, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.33760103583335876, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 18875, prefer_fetch_merged_part_size_threshold = 4128396046, vertical_merge_algorithm_min_rows_to_activate = 52525, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 5128564824, index_granularity_bytes = 29579412, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 58416, primary_key_compress_block_size = 26965
SELECT dictGet('01684_database_for_cache_dictionary.cache_dictionary_simple_key_complex_attributes', 'value_first', number) as value_first, dictGet('01684_database_for_cache_dictionary.cache_dictionary_simple_key_complex_attributes', 'value_second', number) as value_second FROM system.numbers LIMIT 4;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (40 < 94 AND 35 > 0 ? 40 : 0)), throwIf(last != (40 < 94 AND 35 > 0 ? least(94 - 1, 40 + 35 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(94) LIMIT 40, 35);
CREATE TABLE test_01193_18429.table_6_512 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
alter table simple modify setting max_concurrent_queries = 1
select abs(greatCircleDistance(83.089598, 54.842461, 37.617780, 55.755830) - 2837839.72863) / 2837839.72863 < 0.004;
SELECT NULL, (CAST((-5903) AS Date)), '';
CREATE TABLE `02538_bf_ngrambf_map_values_test` (`row_id` Int128, `map` Map(String, String), `map_fixed` Map(FixedString(2), String), INDEX map_values_ngrambf mapKeys(map) TYPE ngrambf_v1(4, 256, 2, 0) GRANULARITY 1, INDEX map_fixed_values_ngrambf mapKeys(map_fixed) TYPE ngrambf_v1(4, 256, 2, 0) GRANULARITY 1) ENGINE = MergeTree ORDER BY row_id SETTINGS index_granularity = 1, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.8346551060676575, replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 4550, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 81, min_merge_bytes_to_use_direct_io = 7300028923, index_granularity_bytes = 4661204, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 52690, primary_key_compress_block_size = 76897
SELECT k, sumMerge(d), avgMerge(af_avg1), groupUniqArrayMerge(af_gua) FROM agg_func_col GROUP BY k ORDER BY k;
CREATE TABLE test_01193_18429.table_6_182 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_4_766 VALUES 
DROP TABLE multi_google_wrappers_02266;
SELECT * FROM numbers(10) FORMAT PrettySpace;
INSERT INTO bloom_filter_array_lc_null_types_test SELECT groupArray(number) AS order_key, groupArray(toInt8(number)) AS i8, groupArray(toInt16(number)) AS i16, groupArray(toInt32(number)) AS i32, groupArray(toInt64(number)) AS i64, groupArray(toUInt8(number)) AS u8, groupArray(toUInt16(number)) AS u16, groupArray(toUInt32(number)) AS u32, groupArray(toUInt64(number)) AS u64, groupArray(toFloat32(number)) AS f32, groupArray(toFloat64(number)) AS f64, groupArray(toDate(number, 'Asia/Istanbul')) AS date, groupArray(toDateTime(number, 'Asia/Istanbul')) AS date_time, groupArray(toString(number)) AS str, groupArray(toFixedString(toString(number), 5)) AS fixed_string FROM (SELECT number FROM system.numbers WHERE number >= 5 LIMIT 15);
CREATE TABLE test_01193_18429.table_2_911 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_314B265E2B5B48633B59767B2D2242472E3E7D2A7A7E2B7B5B365D4B77495575663C55343640402A(x UInt8) Engine=Memory;
SELECT xxHash64() = toUInt64(16324913028386710556);
 CREATE TABLE 02154_test_source_table ( id UInt64, value String ) ENGINE=TinyLog; 
OPTIMIZE TABLE t_modify_from_lc_2 FINAL;
alter table many_mutations delete where y = 123 * 2 settings mutations_sync = 0;
SELECT hasToken('hay+hay+hay+hay+hay+hay+hay+hay+hay+needle+hay+hay+hay+hay+hay+hay+hay+hay+hay', 'needle'), ' expecting ', 1;
CREATE TABLE test_01193_18429.table_10_280 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select 1 = multiSearchAny(materialize('abcdefgh'), ['cd']);
SELECT 'Running test stateless/00825_protobuf_format_nested_optional.sh from pid=1726' 
alter table many_mutations delete where y = 219 * 2 settings mutations_sync = 0;
INSERT INTO test_01193_18429.table_4_231 VALUES 
CREATE DATABASE IF NOT EXISTS test_vqpo0197 
SELECT 'Running test stateless/01600_log_queries_with_extensive_info.sh from pid=1705' 
SELECT quantileInterpolatedWeighted(0.6)(a, 1), quantileInterpolatedWeighted(0.6)(b, 2), quantileInterpolatedWeighted(0.6)(c, 3) FROM decimal WHERE a >= 0;
SELECT polygonsSymDifferenceCartesian([[[(1., 1.)]] AS x], [x]) GROUP BY x WITH ROLLUP;
CREATE TABLE test_7571353750564C25203A67744B2B7345386335216A2A27262C6B275655764F35416167392C2B5432(x UInt8) Engine=Memory;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c6) AND (NOT c7)) OR (c7 AND c8 AND c9) SETTINGS convert_query_to_cnf = 1
DROP DATABASE IF EXISTS test_dl0vg80b 
CREATE TABLE test_01193_18429.table_10_474 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_6_417 VALUES 
SELECT 'Running test stateless/01012_reset_running_accumulate.sql from pid=1724' 
CREATE TABLE test_02908_r2_295 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_295', 'r2') ORDER BY tuple()
select number % 2 ? NULL : number as x, x as y, CAST(number % 2 ? NULL : toString(number), 'LowCardinality(Nullable(String))') as z from numbers(2) format ORC settings output_format_arrow_low_cardinality_as_dictionary=1
SELECT last_value([]);
SELECT toDateTime64(-2300000000.0, 9, 'UTC');
DROP DATABASE IF EXISTS test_z7wgfkq8 
SELECT toInt16OrNull(NULL, NULL, NULL);
DROP TABLE IF EXISTS four_rows_per_granule1;
CREATE TABLE test_61656A5D413069793D544043683A626967616449393E5228233D4F464E2D4D694A3D755450494E7E(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS h3_geo;
SELECT has(['a', 'b'], materialize('c'));
INSERT INTO test_01193_18429.table_1_427 VALUES 
select position(materialize('') as h, lower('' as n)) = positionCaseInsensitive(h, n);
INSERT INTO r10 SELECT 47 % 10 = 10 ? 47 - 1 : 47
INSERT INTO t_async_insert FORMAT Values 
CREATE TABLE test_01193_18429.table_7_174 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
ALTER TABLE wikistat1 DELETE where time = toDateTime('2022-12-20 00:00:00') SETTINGS mutations_sync = 1;
CREATE TABLE test_3D702458517D5958496B52796376516364736E7E5427646974736C325B345E58715155782C24693B(x UInt8) Engine=Memory;
select 0 = multiMatchAnyIndex(materialize('gogleuedeuniangoogle'), materialize([]::Array(String))) from system.numbers limit 5;
CREATE TABLE dst(time DateTime, colA String, colB String) Engine=MergeTree ORDER BY tuple();
SHOW CREATE PROFILE s5_01294;
SELECT domainRFC('user:password@example.com:8080') AS Host;
CREATE TABLE test_01193_18429.table_8_85 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT dateDiff('quarter', toDate32('2015-08-18', 'UTC'), toDate('2015-11-18', 'UTC'), 'UTC');
WITH maxIntersections( toUnixTimestamp64Micro(query_start_time_microseconds), toUnixTimestamp64Micro(event_time_microseconds) ) as peak_threads SELECT if(peak_threads >= 77, 'ok', 'too few threads: ' || toString(peak_threads) ) AS result FROM system.query_thread_log WHERE event_time > now() - 60 AND query_id = ( SELECT query_id FROM system.query_log WHERE type = 'QueryFinish' AND event_time > now() - 60 AND log_comment = 'check_concurrency_in_remote_queries3' AND current_database = currentDatabase() ORDER BY event_time DESC LIMIT 1 );
CREATE TABLE test_01193_18429.table_2_308 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT sumIf(number, arrayExists(x -> (x IN (SELECT 1)), [1])) FROM remote('127.0.0.{1,2}', numbers(10));
INSERT INTO test_01193_18429.table_7_392 VALUES 
CREATE DATABASE IF NOT EXISTS test_4c8k73qp 
SELECT 'xn--3bs854c' AS ascii, idnaDecode(ascii) AS unicode, idnaEncode(unicode) AS original, tryIdnaEncode(unicode) AS original_try;
SELECT COUNT() FROM replicated_table_r1;
INSERT INTO test_01193_18429.table_1_306 VALUES 
DROP DATABASE IF EXISTS test_27vooyed 
CREATE TABLE binary_op_mono2 (`i` int, `j` int) ENGINE = MergeTree PARTITION BY 1000 / i ORDER BY j SETTINGS allow_floating_point_partition_key = 1, index_granularity = 46991, min_bytes_for_wide_part = 725132692, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 3124, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 9499606997, index_granularity_bytes = 30185806, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 57037, primary_key_compress_block_size = 90360
CREATE database test_query_log_factories_info1 ENGINE=Atomic;
SELECT multiIf((number % 2) = 0, toUInt32(1), (number % 3) = 0, toFloat64(2), toInt16(3)) FROM system.numbers LIMIT 10;
SELECT * FROM remote('127.0.0.{1,2}', generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8)))))))))))))))))))))))))))))))))))))))))))))))', 1, 1, 1)) LIMIT 1 FORMAT Null
CREATE DICTIONARY 01778_db.hierarchy_hashed_dictionary ( id UInt64, parent_id UInt64 HIERARCHICAL ) PRIMARY KEY id SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'hierarchy_source_table' DB '01778_db')) LAYOUT(HASHED()) LIFETIME(MIN 1 MAX 1000);
insert into shard2 (id) values 
select '----- hash / State / ip6 -----';
CREATE MATERIALIZED VIEW `01746_dist_mv` ENGINE = Memory AS SELECT n1, n2 FROM `01746_dist`;
SELECT windowID(NULL);
INSERT INTO 01685_database_for_cache_dictionary.complex_key_complex_attributes_source_table VALUES
INSERT INTO r3 SELECT 1 % 10 = 3 ? 1 - 1 : 1
CREATE TABLE test_2557234E2E5E7672627E4B715B664A714171603C5D5666482C2D44643C46534E366527373D51766D(x UInt8) Engine=Memory;
SELECT -128, -2147483647, -128 = -2147483647, -128 != -2147483647, -128 < -2147483647, -128 <= -2147483647, -128 > -2147483647, -128 >= -2147483647, -2147483647 = -128, -2147483647 != -128, -2147483647 < -128, -2147483647 <= -128, -2147483647 > -128, -2147483647 >= -128 , toInt8(-128) = toInt32(-2147483647), toInt8(-128) != toInt32(-2147483647), toInt8(-128) < toInt32(-2147483647), toInt8(-128) <= toInt32(-2147483647), toInt8(-128) > toInt32(-2147483647), toInt8(-128) >= toInt32(-2147483647), toInt32(-2147483647) = toInt8(-128), toInt32(-2147483647) != toInt8(-128), toInt32(-2147483647) < toInt8(-128), toInt32(-2147483647) <= toInt8(-128), toInt32(-2147483647) > toInt8(-128), toInt32(-2147483647) >= toInt8(-128) , toInt8(-128) = toInt64(-2147483647), toInt8(-128) != toInt64(-2147483647), toInt8(-128) < toInt64(-2147483647), toInt8(-128) <= toInt64(-2147483647), toInt8(-128) > toInt64(-2147483647), toInt8(-128) >= toInt64(-2147483647), toInt64(-2147483647) = toInt8(-128), toInt64(-2147483647) != toInt8(-128), toInt64(-2147483647) < toInt8(-128), toInt64(-2147483647) <= toInt8(-128), toInt64(-2147483647) > toInt8(-128), toInt64(-2147483647) >= toInt8(-128) , toInt16(-128) = toInt32(-2147483647), toInt16(-128) != toInt32(-2147483647), toInt16(-128) < toInt32(-2147483647), toInt16(-128) <= toInt32(-2147483647), toInt16(-128) > toInt32(-2147483647), toInt16(-128) >= toInt32(-2147483647), toInt32(-2147483647) = toInt16(-128), toInt32(-2147483647) != toInt16(-128), toInt32(-2147483647) < toInt16(-128), toInt32(-2147483647) <= toInt16(-128), toInt32(-2147483647) > toInt16(-128), toInt32(-2147483647) >= toInt16(-128) , toInt16(-128) = toInt64(-2147483647), toInt16(-128) != toInt64(-2147483647), toInt16(-128) < toInt64(-2147483647), toInt16(-128) <= toInt64(-2147483647), toInt16(-128) > toInt64(-2147483647), toInt16(-128) >= toInt64(-2147483647), toInt64(-2147483647) = toInt16(-128), toInt64(-2147483647) != toInt16(-128), toInt64(-2147483647) < toInt16(-128), toInt64(-2147483647) <= toInt16(-128), toInt64(-2147483647) > toInt16(-128), toInt64(-2147483647) >= toInt16(-128) , toInt32(-128) = toInt32(-2147483647), toInt32(-128) != toInt32(-2147483647), toInt32(-128) < toInt32(-2147483647), toInt32(-128) <= toInt32(-2147483647), toInt32(-128) > toInt32(-2147483647), toInt32(-128) >= toInt32(-2147483647), toInt32(-2147483647) = toInt32(-128), toInt32(-2147483647) != toInt32(-128), toInt32(-2147483647) < toInt32(-128), toInt32(-2147483647) <= toInt32(-128), toInt32(-2147483647) > toInt32(-128), toInt32(-2147483647) >= toInt32(-128) , toInt32(-128) = toInt64(-2147483647), toInt32(-128) != toInt64(-2147483647), toInt32(-128) < toInt64(-2147483647), toInt32(-128) <= toInt64(-2147483647), toInt32(-128) > toInt64(-2147483647), toInt32(-128) >= toInt64(-2147483647), toInt64(-2147483647) = toInt32(-128), toInt64(-2147483647) != toInt32(-128), toInt64(-2147483647) < toInt32(-128), toInt64(-2147483647) <= toInt32(-128), toInt64(-2147483647) > toInt32(-128), toInt64(-2147483647) >= toInt32(-128) , toInt64(-128) = toInt32(-2147483647), toInt64(-128) != toInt32(-2147483647), toInt64(-128) < toInt32(-2147483647), toInt64(-128) <= toInt32(-2147483647), toInt64(-128) > toInt32(-2147483647), toInt64(-128) >= toInt32(-2147483647), toInt32(-2147483647) = toInt64(-128), toInt32(-2147483647) != toInt64(-128), toInt32(-2147483647) < toInt64(-128), toInt32(-2147483647) <= toInt64(-128), toInt32(-2147483647) > toInt64(-128), toInt32(-2147483647) >= toInt64(-128) , toInt64(-128) = toInt64(-2147483647), toInt64(-128) != toInt64(-2147483647), toInt64(-128) < toInt64(-2147483647), toInt64(-128) <= toInt64(-2147483647), toInt64(-128) > toInt64(-2147483647), toInt64(-128) >= toInt64(-2147483647), toInt64(-2147483647) = toInt64(-128), toInt64(-2147483647) != toInt64(-128), toInt64(-2147483647) < toInt64(-128), toInt64(-2147483647) <= toInt64(-128), toInt64(-2147483647) > toInt64(-128), toInt64(-2147483647) >= toInt64(-128) 
SELECT -1, 128, -1 = 128, -1 != 128, -1 < 128, -1 <= 128, -1 > 128, -1 >= 128, 128 = -1, 128 != -1, 128 < -1, 128 <= -1, 128 > -1, 128 >= -1 , toInt8(-1) = toUInt8(128), toInt8(-1) != toUInt8(128), toInt8(-1) < toUInt8(128), toInt8(-1) <= toUInt8(128), toInt8(-1) > toUInt8(128), toInt8(-1) >= toUInt8(128), toUInt8(128) = toInt8(-1), toUInt8(128) != toInt8(-1), toUInt8(128) < toInt8(-1), toUInt8(128) <= toInt8(-1), toUInt8(128) > toInt8(-1), toUInt8(128) >= toInt8(-1) , toInt8(-1) = toUInt16(128), toInt8(-1) != toUInt16(128), toInt8(-1) < toUInt16(128), toInt8(-1) <= toUInt16(128), toInt8(-1) > toUInt16(128), toInt8(-1) >= toUInt16(128), toUInt16(128) = toInt8(-1), toUInt16(128) != toInt8(-1), toUInt16(128) < toInt8(-1), toUInt16(128) <= toInt8(-1), toUInt16(128) > toInt8(-1), toUInt16(128) >= toInt8(-1) , toInt8(-1) = toInt16(128), toInt8(-1) != toInt16(128), toInt8(-1) < toInt16(128), toInt8(-1) <= toInt16(128), toInt8(-1) > toInt16(128), toInt8(-1) >= toInt16(128), toInt16(128) = toInt8(-1), toInt16(128) != toInt8(-1), toInt16(128) < toInt8(-1), toInt16(128) <= toInt8(-1), toInt16(128) > toInt8(-1), toInt16(128) >= toInt8(-1) , toInt8(-1) = toUInt32(128), toInt8(-1) != toUInt32(128), toInt8(-1) < toUInt32(128), toInt8(-1) <= toUInt32(128), toInt8(-1) > toUInt32(128), toInt8(-1) >= toUInt32(128), toUInt32(128) = toInt8(-1), toUInt32(128) != toInt8(-1), toUInt32(128) < toInt8(-1), toUInt32(128) <= toInt8(-1), toUInt32(128) > toInt8(-1), toUInt32(128) >= toInt8(-1) , toInt8(-1) = toInt32(128), toInt8(-1) != toInt32(128), toInt8(-1) < toInt32(128), toInt8(-1) <= toInt32(128), toInt8(-1) > toInt32(128), toInt8(-1) >= toInt32(128), toInt32(128) = toInt8(-1), toInt32(128) != toInt8(-1), toInt32(128) < toInt8(-1), toInt32(128) <= toInt8(-1), toInt32(128) > toInt8(-1), toInt32(128) >= toInt8(-1) , toInt8(-1) = toUInt64(128), toInt8(-1) != toUInt64(128), toInt8(-1) < toUInt64(128), toInt8(-1) <= toUInt64(128), toInt8(-1) > toUInt64(128), toInt8(-1) >= toUInt64(128), toUInt64(128) = toInt8(-1), toUInt64(128) != toInt8(-1), toUInt64(128) < toInt8(-1), toUInt64(128) <= toInt8(-1), toUInt64(128) > toInt8(-1), toUInt64(128) >= toInt8(-1) , toInt8(-1) = toInt64(128), toInt8(-1) != toInt64(128), toInt8(-1) < toInt64(128), toInt8(-1) <= toInt64(128), toInt8(-1) > toInt64(128), toInt8(-1) >= toInt64(128), toInt64(128) = toInt8(-1), toInt64(128) != toInt8(-1), toInt64(128) < toInt8(-1), toInt64(128) <= toInt8(-1), toInt64(128) > toInt8(-1), toInt64(128) >= toInt8(-1) , toInt16(-1) = toUInt8(128), toInt16(-1) != toUInt8(128), toInt16(-1) < toUInt8(128), toInt16(-1) <= toUInt8(128), toInt16(-1) > toUInt8(128), toInt16(-1) >= toUInt8(128), toUInt8(128) = toInt16(-1), toUInt8(128) != toInt16(-1), toUInt8(128) < toInt16(-1), toUInt8(128) <= toInt16(-1), toUInt8(128) > toInt16(-1), toUInt8(128) >= toInt16(-1) , toInt16(-1) = toUInt16(128), toInt16(-1) != toUInt16(128), toInt16(-1) < toUInt16(128), toInt16(-1) <= toUInt16(128), toInt16(-1) > toUInt16(128), toInt16(-1) >= toUInt16(128), toUInt16(128) = toInt16(-1), toUInt16(128) != toInt16(-1), toUInt16(128) < toInt16(-1), toUInt16(128) <= toInt16(-1), toUInt16(128) > toInt16(-1), toUInt16(128) >= toInt16(-1) , toInt16(-1) = toInt16(128), toInt16(-1) != toInt16(128), toInt16(-1) < toInt16(128), toInt16(-1) <= toInt16(128), toInt16(-1) > toInt16(128), toInt16(-1) >= toInt16(128), toInt16(128) = toInt16(-1), toInt16(128) != toInt16(-1), toInt16(128) < toInt16(-1), toInt16(128) <= toInt16(-1), toInt16(128) > toInt16(-1), toInt16(128) >= toInt16(-1) , toInt16(-1) = toUInt32(128), toInt16(-1) != toUInt32(128), toInt16(-1) < toUInt32(128), toInt16(-1) <= toUInt32(128), toInt16(-1) > toUInt32(128), toInt16(-1) >= toUInt32(128), toUInt32(128) = toInt16(-1), toUInt32(128) != toInt16(-1), toUInt32(128) < toInt16(-1), toUInt32(128) <= toInt16(-1), toUInt32(128) > toInt16(-1), toUInt32(128) >= toInt16(-1) , toInt16(-1) = toInt32(128), toInt16(-1) != toInt32(128), toInt16(-1) < toInt32(128), toInt16(-1) <= toInt32(128), toInt16(-1) > toInt32(128), toInt16(-1) >= toInt32(128), toInt32(128) = toInt16(-1), toInt32(128) != toInt16(-1), toInt32(128) < toInt16(-1), toInt32(128) <= toInt16(-1), toInt32(128) > toInt16(-1), toInt32(128) >= toInt16(-1) , toInt16(-1) = toUInt64(128), toInt16(-1) != toUInt64(128), toInt16(-1) < toUInt64(128), toInt16(-1) <= toUInt64(128), toInt16(-1) > toUInt64(128), toInt16(-1) >= toUInt64(128), toUInt64(128) = toInt16(-1), toUInt64(128) != toInt16(-1), toUInt64(128) < toInt16(-1), toUInt64(128) <= toInt16(-1), toUInt64(128) > toInt16(-1), toUInt64(128) >= toInt16(-1) , toInt16(-1) = toInt64(128), toInt16(-1) != toInt64(128), toInt16(-1) < toInt64(128), toInt16(-1) <= toInt64(128), toInt16(-1) > toInt64(128), toInt16(-1) >= toInt64(128), toInt64(128) = toInt16(-1), toInt64(128) != toInt16(-1), toInt64(128) < toInt16(-1), toInt64(128) <= toInt16(-1), toInt64(128) > toInt16(-1), toInt64(128) >= toInt16(-1) , toInt32(-1) = toUInt8(128), toInt32(-1) != toUInt8(128), toInt32(-1) < toUInt8(128), toInt32(-1) <= toUInt8(128), toInt32(-1) > toUInt8(128), toInt32(-1) >= toUInt8(128), toUInt8(128) = toInt32(-1), toUInt8(128) != toInt32(-1), toUInt8(128) < toInt32(-1), toUInt8(128) <= toInt32(-1), toUInt8(128) > toInt32(-1), toUInt8(128) >= toInt32(-1) , toInt32(-1) = toUInt16(128), toInt32(-1) != toUInt16(128), toInt32(-1) < toUInt16(128), toInt32(-1) <= toUInt16(128), toInt32(-1) > toUInt16(128), toInt32(-1) >= toUInt16(128), toUInt16(128) = toInt32(-1), toUInt16(128) != toInt32(-1), toUInt16(128) < toInt32(-1), toUInt16(128) <= toInt32(-1), toUInt16(128) > toInt32(-1), toUInt16(128) >= toInt32(-1) , toInt32(-1) = toInt16(128), toInt32(-1) != toInt16(128), toInt32(-1) < toInt16(128), toInt32(-1) <= toInt16(128), toInt32(-1) > toInt16(128), toInt32(-1) >= toInt16(128), toInt16(128) = toInt32(-1), toInt16(128) != toInt32(-1), toInt16(128) < toInt32(-1), toInt16(128) <= toInt32(-1), toInt16(128) > toInt32(-1), toInt16(128) >= toInt32(-1) , toInt32(-1) = toUInt32(128), toInt32(-1) != toUInt32(128), toInt32(-1) < toUInt32(128), toInt32(-1) <= toUInt32(128), toInt32(-1) > toUInt32(128), toInt32(-1) >= toUInt32(128), toUInt32(128) = toInt32(-1), toUInt32(128) != toInt32(-1), toUInt32(128) < toInt32(-1), toUInt32(128) <= toInt32(-1), toUInt32(128) > toInt32(-1), toUInt32(128) >= toInt32(-1) , toInt32(-1) = toInt32(128), toInt32(-1) != toInt32(128), toInt32(-1) < toInt32(128), toInt32(-1) <= toInt32(128), toInt32(-1) > toInt32(128), toInt32(-1) >= toInt32(128), toInt32(128) = toInt32(-1), toInt32(128) != toInt32(-1), toInt32(128) < toInt32(-1), toInt32(128) <= toInt32(-1), toInt32(128) > toInt32(-1), toInt32(128) >= toInt32(-1) , toInt32(-1) = toUInt64(128), toInt32(-1) != toUInt64(128), toInt32(-1) < toUInt64(128), toInt32(-1) <= toUInt64(128), toInt32(-1) > toUInt64(128), toInt32(-1) >= toUInt64(128), toUInt64(128) = toInt32(-1), toUInt64(128) != toInt32(-1), toUInt64(128) < toInt32(-1), toUInt64(128) <= toInt32(-1), toUInt64(128) > toInt32(-1), toUInt64(128) >= toInt32(-1) , toInt32(-1) = toInt64(128), toInt32(-1) != toInt64(128), toInt32(-1) < toInt64(128), toInt32(-1) <= toInt64(128), toInt32(-1) > toInt64(128), toInt32(-1) >= toInt64(128), toInt64(128) = toInt32(-1), toInt64(128) != toInt32(-1), toInt64(128) < toInt32(-1), toInt64(128) <= toInt32(-1), toInt64(128) > toInt32(-1), toInt64(128) >= toInt32(-1) , toInt64(-1) = toUInt8(128), toInt64(-1) != toUInt8(128), toInt64(-1) < toUInt8(128), toInt64(-1) <= toUInt8(128), toInt64(-1) > toUInt8(128), toInt64(-1) >= toUInt8(128), toUInt8(128) = toInt64(-1), toUInt8(128) != toInt64(-1), toUInt8(128) < toInt64(-1), toUInt8(128) <= toInt64(-1), toUInt8(128) > toInt64(-1), toUInt8(128) >= toInt64(-1) , toInt64(-1) = toUInt16(128), toInt64(-1) != toUInt16(128), toInt64(-1) < toUInt16(128), toInt64(-1) <= toUInt16(128), toInt64(-1) > toUInt16(128), toInt64(-1) >= toUInt16(128), toUInt16(128) = toInt64(-1), toUInt16(128) != toInt64(-1), toUInt16(128) < toInt64(-1), toUInt16(128) <= toInt64(-1), toUInt16(128) > toInt64(-1), toUInt16(128) >= toInt64(-1) , toInt64(-1) = toInt16(128), toInt64(-1) != toInt16(128), toInt64(-1) < toInt16(128), toInt64(-1) <= toInt16(128), toInt64(-1) > toInt16(128), toInt64(-1) >= toInt16(128), toInt16(128) = toInt64(-1), toInt16(128) != toInt64(-1), toInt16(128) < toInt64(-1), toInt16(128) <= toInt64(-1), toInt16(128) > toInt64(-1), toInt16(128) >= toInt64(-1) , toInt64(-1) = toUInt32(128), toInt64(-1) != toUInt32(128), toInt64(-1) < toUInt32(128), toInt64(-1) <= toUInt32(128), toInt64(-1) > toUInt32(128), toInt64(-1) >= toUInt32(128), toUInt32(128) = toInt64(-1), toUInt32(128) != toInt64(-1), toUInt32(128) < toInt64(-1), toUInt32(128) <= toInt64(-1), toUInt32(128) > toInt64(-1), toUInt32(128) >= toInt64(-1) , toInt64(-1) = toInt32(128), toInt64(-1) != toInt32(128), toInt64(-1) < toInt32(128), toInt64(-1) <= toInt32(128), toInt64(-1) > toInt32(128), toInt64(-1) >= toInt32(128), toInt32(128) = toInt64(-1), toInt32(128) != toInt64(-1), toInt32(128) < toInt64(-1), toInt32(128) <= toInt64(-1), toInt32(128) > toInt64(-1), toInt32(128) >= toInt64(-1) , toInt64(-1) = toUInt64(128), toInt64(-1) != toUInt64(128), toInt64(-1) < toUInt64(128), toInt64(-1) <= toUInt64(128), toInt64(-1) > toUInt64(128), toInt64(-1) >= toUInt64(128), toUInt64(128) = toInt64(-1), toUInt64(128) != toInt64(-1), toUInt64(128) < toInt64(-1), toUInt64(128) <= toInt64(-1), toUInt64(128) > toInt64(-1), toUInt64(128) >= toInt64(-1) , toInt64(-1) = toInt64(128), toInt64(-1) != toInt64(128), toInt64(-1) < toInt64(128), toInt64(-1) <= toInt64(128), toInt64(-1) > toInt64(128), toInt64(-1) >= toInt64(128), toInt64(128) = toInt64(-1), toInt64(128) != toInt64(-1), toInt64(128) < toInt64(-1), toInt64(128) <= toInt64(-1), toInt64(128) > toInt64(-1), toInt64(128) >= toInt64(-1) 
SELECT age('day', materialize(toDate('2015-08-18', 'UTC')), materialize(toDateTime64('2015-08-19 00:00:00', 3, 'UTC')));
SELECT 'Running test stateless/01710_projection_group_by_order_by.sql from pid=1713' 
SELECT toDateTime(toDate32('1900-01-01'));
SELECT multiIf((number % 2) = 0, toInt16(1), (number % 3) = 0, toInt32(2), toFloat32(3)) FROM system.numbers LIMIT 10;
insert into function file('/var/lib/clickhouse/user_files/02026_storage_filelog_largefile_test_mlouecdc/test3.csv', 'CSV', 'k UInt32, v UInt32') select number, number from numbers(10000);
select 'GROUP BY ORDER BY LIMIT';
explain pipeline select distinct 1, b, a from distinct_in_order_explain
CREATE TABLE test_752222506347232E5B2C657E2F383B282E614B5070216F65604C4E5336304141466F3B382C785255(x UInt8) Engine=Memory;
select last_value(b) ignore nulls from test;
DROP DATABASE IF EXISTS test_dqaljzg2 
select hasAll([Null], [Null, 1]);
SELECT 0, 2, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (0 < 13 AND 2 > 0 ? 0 : 0)), throwIf(last != (0 < 13 AND 2 > 0 ? least(13 - 1, 0 + 2 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 0, 2);
select runningDifference(x) from (select arrayJoin([0, 1, 5, 10, 170141183460469231731687303715884105728]::Array(Int256)) as x);
CREATE DATABASE IF NOT EXISTS test_7s50g9e9 
BACKUP TABLE data TO S3(s3_conn, 'backups/test_s5wpyi15/data_native_copy') SETTINGS allow_s3_native_copy=true
system test view b set fake time '2062-03-03 03:03:03'
drop table if exists ttl_00933_2;
SELECT count(nullIn(NULL, tuple(NULL)));
select count() from merge_dist_01223 settings distributed_group_by_no_merge=1;
CREATE DATABASE IF NOT EXISTS test_qji0dv4s 
DROP TABLE IF EXISTS tutorial;
CREATE TABLE test_buffer.mt (`uid` UInt64, `ts` DateTime, `val` Float64) ENGINE = MergeTree PARTITION BY toDate(ts) ORDER BY (uid, ts) SETTINGS index_granularity = 42852, min_bytes_for_wide_part = 381943423, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 19058, prefer_fetch_merged_part_size_threshold = 10666035914, vertical_merge_algorithm_min_rows_to_activate = 667548, vertical_merge_algorithm_min_columns_to_activate = 64, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 617886, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 98396, primary_key_compress_block_size = 41504
CREATE TABLE test_01193_18429.table_7_489 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_x9rp2e80 
SELECT globalNotNullInIgnoreSet([NULL],[NULL]);
CREATE TABLE test_01193_18429.table_7_76 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT toDate('2017-01-01') - INTERVAL -1 YEAR AS x;
SELECT count(), sum(n), sum(m=1), sum(m=2), sum(m=3) FROM src
CREATE TABLE test_26777A412157613927612C3E6622757A54753A21354A525F6B4E4D442D542A434E375355382E387A(x UInt8) Engine=Memory;
INSERT INTO test_m3a0ae8p.dst_02224 (key) VALUES
CREATE TABLE test_5B44593E5E552743502847604F767E276E6340713529693B4A4B2D5F30584C7B3F776F332B606953(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01936_quantiles_cannot_return_null.sql from pid=1720' 
SELECT * FROM system.rocksdb LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
CREATE TABLE test_01193_18429.table_8_901 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE supplier (`s_suppkey` Int32, `s_name` FixedString(25), `s_address` String, `s_nationkey` Int32, `s_phone` FixedString(15), `s_acctbal` Decimal(18, 2), `s_comment` String, CONSTRAINT pk CHECK s_suppkey >= 0) ENGINE = MergeTree ORDER BY s_suppkey SETTINGS index_granularity = 1495, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 120, merge_max_block_size = 2901, prefer_fetch_merged_part_size_threshold = 6417235238, vertical_merge_algorithm_min_rows_to_activate = 999436, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 31432715, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 31577, primary_key_compress_block_size = 51950
INSERT INTO test_01193_18429.table_7_303 VALUES 
SELECT toUInt16(number) AS x, round(x, -2), roundBankers(x, -2), floor(x, -2), ceil(x, -2), trunc(x, -2) FROM system.numbers LIMIT 20;
SELECT na.t.t FROM (SELECT [(1, 'a')] :: Nested(t UInt32, s String) AS t) AS na, (SELECT [(1, 'a')] :: Nested(t Int32, s String) AS t) AS t;
SELECT 'Running test stateless/02417_load_marks_async.sh from pid=1726' 
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt16(1), toUInt16(2)] WHEN (number % 3) = 0 THEN [toUInt8(2), toUInt8(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
SELECT YYYYMMDDhhmmssToDateTime(toDecimal64(21060207062815.1, 5));
SELECT cast(tuple(1), 'Tuple(value UInt64)') AS value, number FROM numbers(value.*);
select 1 = multiSearchAny(materialize('abcdefgh'), ['abcd']);
CREATE TABLE test_01193_18429.table_8_256 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_3E41292C6448246868643F7544406856273C30446A473E3A3B4F2E675F6E6D4B2E532B3361664645(x UInt8) Engine=Memory;
SELECT arrayFirst(x -> materialize(1), emptyArrayUInt8());
CREATE ROLE r7_01293 SETTINGS max_memory_usage WRITABLE;
CREATE TABLE test_01193_18429.table_1_910 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
 SELECT 'id_' || splitByChar('_', query_id)[1] AS id FROM system.text_log WHERE query_id LIKE '%test_e1p7depc_18463' AND message LIKE '%INSERT query will be executed synchronously because it has too much data%' ORDER BY id 
SELECT * FROM (SELECT x FROM (SELECT 2 AS x, arrayJoin([1,2,3]))) ORDER BY x;
INSERT INTO test_01193_18429.table_7_717 VALUES 
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toInt16(2), toInt16(3)] ELSE [toInt16(3), toInt16(3)] END FROM system.numbers LIMIT 10;
INSERT INTO t SELECT number, if(number < (8129 * 1024), arrayStringConcat(arrayMap(x -> toString(x), range(number % 128)), ' '), '') FROM numbers_mt((8129 * 1024) * 3) settings max_insert_threads=8;
SELECT fragment(NULL);
SELECT t.t FROM ta FULL JOIN tb USING (t.t);
CREATE DATABASE IF NOT EXISTS test_hy5cjmh3 
DROP TABLE IF EXISTS lc_nullable;
INSERT INTO test_01193_18429.table_2_422 VALUES 
INSERT INTO test_01193_18429.table_6_202 VALUES 
DROP TABLE IF EXISTS partition_id;
CREATE DATABASE IF NOT EXISTS test_s1b8lzaw 
CREATE DATABASE IF NOT EXISTS test_poxc6475 
WITH [1, 2, NULL] AS arr SELECT arr.null;
SELECT YYYYMMDDhhmmssToDateTime(-1);
CREATE TABLE test_712F643439765B6C2A227B4A3A342A3475604D7B7E526D2F6C4A647D5A3F49684B384D23605C2F78(x UInt8) Engine=Memory;
SELECT [1, 1.1, 2.2] AS arr1, [2.2, 3.3, 444] AS arr2, round(arrayJaccardIndex(arr1, arr2), 2);
alter table many_mutations delete where y = 416 * 2 settings mutations_sync = 0;
INSERT INTO insert_dedup_token2 VALUES
SELECT [NULL][toNullable(1)];
SELECT quantilesInterpolatedWeighted(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)(b, 2) FROM decimal;
CREATE TABLE test_01193_18429.table_7_901 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT hex(sipHash128Reference()) = hex(reverse(unhex('1CE422FEE7BD8DE20000000000000000'))) or hex(sipHash128()) = '1CE422FEE7BD8DE20000000000000000';
desc format(JSONEachRow, '{"x" : [123, 123]}\n{"x" : [321.321, 312]}');
INSERT INTO test_01193_18429.table_5_840 VALUES 
insert into r1 values
SELECT 'Running test stateless/02148_sql_user_defined_function_subquery.sql from pid=1705' 
select port('//[2001:db8::8a2e:370:7334]:80/');
CREATE TABLE test_3E542533216773516345714C247D7B283D232A75624F422D4A2D284B2A4F2E3D7948626C545F4C7C(x UInt8) Engine=Memory;
select (toDate32('2001-09-29') + interval 12345 second) x, toTypeName(x);
SELECT multiIf((number % 2) = 0, [toFloat32(1), toFloat32(2)], (number % 3) = 0, [toFloat64(2), toFloat64(3)], [toUInt32(3), toUInt32(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_02908_r2_245 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_245', 'r2') ORDER BY tuple()
INSERT INTO test_01193_18429.table_10_588 VALUES 
CREATE DATABASE IF NOT EXISTS test_qahfd4p6 
alter table tp_1 materialize projection pp;
SELECT '84' = dictGetString(concat('test_7kssh40k', '.dict_ip_trie'), 'val', tuple(IPv6StringToNum('ffff:ffff:ffff:ffff:ffff:f000::')))
select n from drop_part_after_table order by n
SELECT multiSearchFirstPositionCaseInsensitiveUTF8(NULL, NULL);
DROP DATABASE IF EXISTS test_ilpidgux 
CREATE TABLE test_01193_18429.table_7_152 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP DATABASE IF EXISTS test_hrlups4c 
SELECT 'Running test stateless/01481_join_with_materialized.sql from pid=1713' 
select * from test_null_array_orc
alter table many_mutations delete where y = 601 * 2 settings mutations_sync = 0;
CREATE TABLE inner_distributed AS inner ENGINE = Distributed('test_cluster_two_shards', currentDatabase(), 'inner', intHash64(organization_id));
alter user u_01939 default database NONE
INSERT INTO 01765_db.simple_key_simple_attributes_source_table VALUES
CREATE TABLE test_3648242E346D6E51433C4D4F26306345202E4334295E3B54493E6D597C21393D23304E3271293A6F(x UInt8) Engine=Memory;
SELECT dictIsIn(concat('test_6ztqwvhd', '.dictionary_with_hierarchy'), toUInt64(1), toUInt64(5))
select array, struct.d1, struct.a1, struct.a2, struct.a3, struct.a4, struct.a5, struct.a6 from aliases_test array join struct.a3;
SELECT multiIf((number % 2) = 0, toFloat64(1), (number % 3) = 0, toFloat32(2), toFloat64(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_3F4A79717835617D634653413A326A7927446A467A2D3A516C4E57375147206C79594C4D3977406B(x UInt8) Engine=Memory;
SELECT name FROM system.parts where table='alter_table' and active and database='test_jzok4tgw' ORDER BY name
drop table if exists mutation_delete_null_rows;
SELECT count() FROM t_cnf_fuzz WHERE (c7 AND (NOT c7) AND c9) OR ((NOT c1) AND c8) OR ((NOT c5)) OR (c2 AND (NOT c6) AND (NOT c8) AND (NOT c9) AND c5) OR (c5) OR (c7 AND c2 AND (NOT c1) AND (NOT c4)) OR ((NOT c7) AND c6 AND (NOT c4) AND c5) OR ((NOT c1) AND c5 AND c3 AND (NOT c2) AND c6) OR ((NOT c0) AND (NOT c3)) SETTINGS convert_query_to_cnf = 1
CREATE DATABASE IF NOT EXISTS test_61kvkm88 
INSERT INTO test_01193_18429.table_9_201 VALUES 
SELECT arrayAll(x -> number % 2, arrayMap(x -> toString(x), range(number))) FROM system.numbers LIMIT 10;
CREATE TABLE test_4D356B217C573B6C472D5E692459382239227E532B2D575271227A344F2742565D7B677C77416C77(x UInt8) Engine=Memory;
SELECT a, b, c FROM t_fixed_prefix WHERE a = 1 AND b = 1 ORDER BY a, b, c SETTINGS optimize_read_in_order = 1
select accurateCastOrDefault('192.0.2.1x', 'IPv4');
SET enable_multiple_prewhere_read_steps = 1;
INSERT INTO test_table SELECT 0, '0';
CREATE TABLE test_00687 (x String) ENGINE = Null;
SELECT str FROM tab WHERE str LIKE '%inverted%' SETTINGS force_data_skipping_indices = 'idx';
SELECT 'Running test stateless/00863_comma_join_in.sql from pid=1724' 
CREATE TABLE test_02908_r2_29 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_29', 'r2') ORDER BY tuple()
CREATE TABLE test_01193_18429.table_6_965 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TEMPORARY TABLE table_url_02561(name String) ENGINE = URL('http://127.0.0.1:8123?query=select+12', 'RawBLOB')
alter table test_1164_memory.r1 add column m int;
SELECT uniq([], [], []);
SELECT decodeURLComponent(queryString('http://paul@127.0.0.1:443/?query=hello%20world+foo%2Bbar'));
CREATE TABLE test_01193_18429.table_4_120 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE window_funtion_threading ENGINE = MergeTree ORDER BY (ac, nw) SETTINGS index_granularity = 775, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 9678, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 70383, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 3913558535, index_granularity_bytes = 19721189, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 47430, primary_key_compress_block_size = 36827 AS SELECT toUInt64(toFloat32(number % 2) % 20000000) AS ac, toFloat32(1) AS wg, toUInt16(toFloat32(number % 3) % 400) AS nw FROM numbers_mt(10000000)
select 5 = position(materialize('ÃÂ°ÃÂ±ÃÂ²'), 'ÃÂ²') from system.numbers limit 10;
SELECT toTypeName(x) FROM (SELECT toDecimal64('12345.00', 4) AS x UNION ALL SELECT toInt16(0) AS x) WHERE x = 0;
SELECT sipHash128Keyed(NULL, '');
SELECT 'aes-192-ofb' AS mode, hex(aes_encrypt_mysql(mode, '[HIDDEN]')) FROM encryption_test
CREATE TABLE test_4A613B73573B59482C21366A2C6F4A202C7C5F256F7A7B246064507C33482C223D75432551615A5F(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_23nmdcw2 
alter table t add projection x (select * order by j);
SELECT * FROM test_01344 WHERE x = 'Hello, world';
SELECT * FROM test_table AS test_table_alias SETTINGS asterisk_include_alias_columns = 1;
SELECT -32769, -9223372036854775808, -32769 = -9223372036854775808, -32769 != -9223372036854775808, -32769 < -9223372036854775808, -32769 <= -9223372036854775808, -32769 > -9223372036854775808, -32769 >= -9223372036854775808, -9223372036854775808 = -32769, -9223372036854775808 != -32769, -9223372036854775808 < -32769, -9223372036854775808 <= -32769, -9223372036854775808 > -32769, -9223372036854775808 >= -32769 , toInt32(-32769) = toInt64(-9223372036854775808), toInt32(-32769) != toInt64(-9223372036854775808), toInt32(-32769) < toInt64(-9223372036854775808), toInt32(-32769) <= toInt64(-9223372036854775808), toInt32(-32769) > toInt64(-9223372036854775808), toInt32(-32769) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toInt32(-32769), toInt64(-9223372036854775808) != toInt32(-32769), toInt64(-9223372036854775808) < toInt32(-32769), toInt64(-9223372036854775808) <= toInt32(-32769), toInt64(-9223372036854775808) > toInt32(-32769), toInt64(-9223372036854775808) >= toInt32(-32769) , toInt64(-32769) = toInt64(-9223372036854775808), toInt64(-32769) != toInt64(-9223372036854775808), toInt64(-32769) < toInt64(-9223372036854775808), toInt64(-32769) <= toInt64(-9223372036854775808), toInt64(-32769) > toInt64(-9223372036854775808), toInt64(-32769) >= toInt64(-9223372036854775808), toInt64(-9223372036854775808) = toInt64(-32769), toInt64(-9223372036854775808) != toInt64(-32769), toInt64(-9223372036854775808) < toInt64(-32769), toInt64(-9223372036854775808) <= toInt64(-32769), toInt64(-9223372036854775808) > toInt64(-32769), toInt64(-9223372036854775808) >= toInt64(-32769) 
CREATE TABLE test_3F786E5F6F246D204B3F723E345F30284B44355F27586364225E2C5C724057216D3B317E617B2941(x UInt8) Engine=Memory;
alter table many_mutations delete where y = 286 * 2 settings mutations_sync = 0;
CREATE TABLE tab (`k` UInt64, `s` String, INDEX af s TYPE inverted(2) GRANULARITY 1) ENGINE = MergeTree ORDER BY k SETTINGS index_granularity = 2, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 15518, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 2202159932, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 8613, primary_key_compress_block_size = 54302
SELECT bitSlice(NULL, NULL);
INSERT INTO alter_table1 SELECT 8037, 5
CREATE TABLE test_7B456A735A316D607D636A3E7739783B625952794F4A553647643250716B65256E785F6D512E7C3C(x UInt8) Engine=Memory;
SELECT JSON_VALUE('{"hello":1.2}', '$.hello');
INSERT INTO r9 SELECT 18 % 10 = 9 ? 18 - 1 : 18
WITH CAST(1234567891011 AS Int64) AS i64, 'UTC' AS tz SELECT i64, fromUnixTimestamp64Milli(i64, tz), fromUnixTimestamp64Micro(i64, tz), fromUnixTimestamp64Nano(i64, tz) as dt64;
INSERT INTO test_01193_18429.table_7_133 VALUES 
SELECT age('minute', toDateTime('2014-10-26 00:00:00', 'UTC'), toDateTime('2014-10-27 00:00:00', 'UTC'));
SELECT 'Running test stateless/02916_date_text_parsing.sql from pid=1722' 
SELECT isConstant([NULL]);
SELECT `xp`.`i`, `xp`.`j` FROM `test_6vxf60ds`.`xp` WHERE `i` GLOBAL IN (`_subquery843`)
SELECT name FROM system.tables WHERE database=currentDatabase() AND name like 'concurrent_alter_mt_%' AND engine like '%Replicated%'
SELECT hostname() = hostName();
INSERT INTO test_01193_18429.table_1_122 VALUES 
SELECT s, arr, a, num, arrayEnumerate(arr) FROM arrays_test ARRAY JOIN arr AS a, arrayEnumerate(arr) AS num;
CREATE TABLE check_system_tables_null (key UInt16) ENGINE = Null();
SELECT singleValueOrNull(toNullable(123));
INSERT INTO test_01193_18429.table_7_341 VALUES 
select 'right subs';
INSERT INTO test_01193_18429.table_10_540 VALUES 
DROP DATABASE IF EXISTS test_w0tzpk6i 
alter table many_mutations delete where y = 341 * 2 settings mutations_sync = 0;
SELECT max(x) - min(x) FROM t;
CREATE TABLE test_6C6C75645C2E26716272647D696031566A766E5E4B2E6C564E6E5A42233D796B2B56346758584F68(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_4ub5n0o6 
SELECT CASE WHEN 1 THEN [col2, col3] WHEN 1 THEN ['foo', col5] ELSE ['foo', 'bar'] END FROM multi_if_check;
INSERT INTO test_01193_18429.table_8_308 VALUES 
CREATE TABLE test_constraints (`a` UInt32, `b` UInt32, CONSTRAINT b_constraint CHECK b > 0) ENGINE = MergeTree ORDER BY a SETTINGS index_granularity = 38493, min_bytes_for_wide_part = 331337202, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 3714, prefer_fetch_merged_part_size_threshold = 2363943872, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 7562781323, index_granularity_bytes = 15068073, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 85852, primary_key_compress_block_size = 96962
CREATE TABLE test_01193_18429.table_1_645 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT * FROM 02483_substitute_udf ORDER BY id;
CREATE DATABASE IF NOT EXISTS test_hxap1efl 
SELECT multiIf(1, col2, 1, toFixedString('bar', 16), 'baz') FROM multi_if_check;
ROLLBACK
SELECT CASE WHEN 1 THEN 'foo' WHEN 1 THEN toFixedString(col3, 16) ELSE col4 END FROM multi_if_check;
SELECT materialize([13, 14])[0::Int8];
ALTER TABLE concurrent_alter_column ADD COLUMN c335 DOUBLE;
CREATE TABLE test_01193_18429.table_6_486 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT trim(LEADING 'a' AS arg_1 FROM 'abca'), arg_1;
SELECT 'Running test stateless/01061_window_view_event_hop_to_asc.sh from pid=1714' 
SELECT j + j, j - j, j * j, j / j, intDiv(j, j), intDivOrZero(j, j) FROM decimal WHERE j > 0;
CREATE TABLE test_5762262E3833436232667133435D395B4945686F7837492B5327342D3D5F743140235D462E243F28(x UInt8) Engine=Memory;
SELECT 0 FROM hits_layer AS hl PREWHERE WatchID IN ( SELECT 0 FROM visits_layer AS vl ) WHERE 0;
CREATE DATABASE IF NOT EXISTS test_yxqdja86 
select 1 = isValidUTF8(toFixedString('\xF2\x81\xBE\x99', 4)) from system.numbers limit 10;
SELECT YYYYMMDDhhmmssToDateTime(True);
create table array_functions (arr1 Array(Nullable(Int8)), arr2 Array(Nullable(Float32)), o Int8, no Nullable(Int8), l Int8, nl Nullable(Int8)) engine = TinyLog;
SELECT 'Running test stateless/01082_bit_test_out_of_bound.sql from pid=1714' 
SELECT count(), sum(d) FROM src;
CREATE TABLE test_01193_18429.table_2_33 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_5867733E6A7C777E754A4054293C5858294B3F414540575E766A4F622F292725456164536A627358(x UInt8) Engine=Memory;
SELECT multiIf((col1 % 2) = 0, ['foo', 'bar'], (col1 % 3) = 0, ['foo', 'bar'], ['foo', 'bar']) FROM multi_if_check;
SELECT `x` FROM `test_sf575aoy`.`t`
SELECT CASE WHEN (col1 % 2) = 0 THEN col2 WHEN 1 THEN toFixedString(col3, 16) ELSE toFixedString(col4, 16) END FROM multi_if_check;
CREATE DATABASE IF NOT EXISTS test_5tk41ls1 
CREATE TABLE t (`i` int, `j` int, `k` int, PROJECTION p (SELECT * ORDER BY j)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 1, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 8205, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 586161, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 16723894, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 92647, primary_key_compress_block_size = 49836
create table t (n UInt8, a1 AggregateFunction(groupArraySample(1), UInt8)) engine=Log
INSERT INTO compression_codec_multiple_tiny_log VALUES 
SELECT countArrayIf([NULL], 1) AS `x` FROM numbers(3)
CREATE TABLE test_01193_18429.table_6_768 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT count() = 16384, sum(s) = 16384 FROM replacing_00155
CREATE TABLE data_00612 (`key` UInt64, `val` UInt64) ENGINE = MergeTree ORDER BY key SETTINGS index_granularity = 13293, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.8009682893753052, replace_long_file_name_to_hash = false, max_file_name_length = 40, merge_max_block_size = 778, prefer_fetch_merged_part_size_threshold = 8775683359, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 18, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 16411251, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 60559, primary_key_compress_block_size = 66232
INSERT INTO test_01193_18429.table_9_217 VALUES 
CREATE TABLE test_363672617262326A5C222A6C5220613A725A684B2264343A692827772C5E27773850682C3937664E(x UInt8) Engine=Memory;
SELECT 1001
CREATE TABLE test_01193_18429.table_6_73 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT sum(e) from tab_02473 PREWHERE b > 10 AND b <= 70 AND c > 23 AND c <= 53 WHERE a == 0;
CREATE DATABASE IF NOT EXISTS test_fs3krezf 
CREATE TABLE test_78437E74376E5A78452C5D346165222F6D357D6A47294554696E583C336B604E5D48555C294A4432(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_6_992 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
OPTIMIZE TABLE rename2 FINAL;
CREATE INDEX idx_tab2_2 ON tab2 (col4,col3 DESC);
SELECT max(length(x)) FROM parallel_replicas_plain FORMAT Null;
CREATE TABLE test_472E4C4930672474314C663C266D3F443F3F296F437722696C2E245B656B6429712C595747595B40(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_moahl4wj 
drop table test_tbl
SELECT throwIf((SELECT sum(nm) FROM mv) != 172) FORMAT Null;
EXPLAIN QUERY TREE (SELECT sum(float64) + 2 * count(float64) From test_table);
CREATE ROW POLICY 02703_filter_1 ON 02703_db.02703_rptable USING x=1 AS permissive TO ALL;
SELECT 'type;toStartOfQuarter;toDate32;true', toTypeName(toStartOfQuarter(toDate32('1920-02-02'))) SETTINGS enable_extended_results_for_datetime_functions = true;
SELECT sum(marks) FROM system.parts WHERE table = 'mt_with_pk' AND database = currentDatabase() AND active=1 AND database = currentDatabase();
CREATE TABLE t (`i` int, `j` int, PROJECTION p (SELECT i ORDER BY i)) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 45224, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 28, merge_max_block_size = 12605, prefer_fetch_merged_part_size_threshold = 3129493843, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 3114029044, index_granularity_bytes = 27876683, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 92240, primary_key_compress_block_size = 9563
SELECT accurateCastOrDefault(inf, 'Int128'), accurateCastOrDefault(inf, 'Int128', toInt128(5));
INSERT INTO test_01193_18429.table_7_399 VALUES 
CREATE TABLE test_01193_18429.table_3_670 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_2_687 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_2B596446632F4A333924362662665B6954733079657463522D5D53635B463D266B5C645724515953(x UInt8) Engine=Memory;
CREATE TABLE ColumnsClauseTest (product_price Int64, product_weight Int16, amount Int64) Engine=TinyLog;
CREATE TABLE test_71634168385B7B39757339285C4F7829267B7D3B3342427B5F65232449595426544732392F71534B(x UInt8) Engine=Memory;
SELECT topKWeighted(NULL, NULL, NULL);
SELECT gccMurmurHash([]);
CREATE TABLE test_6D656C62763C52547337442C76613F7C2E566B393F683C583A2B6D6128214D47783A6A4C5835367A(x UInt8) Engine=Memory;
CREATE TABLE test_5A796B412E723B7D31334F7A307A2A666A7D21234B6454534A5057674E454C62725D412C4C3E7835(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS ordinary_00682
DROP TABLE IF EXISTS aggregating_00682
INSERT INTO group_uniq_str SELECT 5 as id, toString(number % 100) as v FROM system.numbers LIMIT 10000000;
SELECT '-Ã¢ÂÂ ' AS idna, idnaEncode(idna) AS ascii, tryIdnaEncode(idna) AS ascii_try, idnaDecode(ascii) AS original, idnaDecode(ascii_try) AS original_try;
CREATE TABLE test_743A7642516833502132492C263F4B3F4064677579722E2C3270454474714C52443445722B7E586E(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS s2
select position('aaaaa\0x', pattern) from tab where id = 2;
alter table many_mutations delete where y = 859 * 2 settings mutations_sync = 0;
SELECT 4 as nelems, arrayResize(arrayPartialSort((x) -> -x, nelems, [1, nan, 2, NULL, 3, nan, -4, NULL, inf, -inf]), nelems);
DETACH TABLE test_02428_pv1
SELECT tj.y FROM t ALL RIGHT JOIN tj ON t.key1 == tj.key1 AND t.key2 == tj.key2 ORDER BY t.key1 FORMAT TSVWithNames;
SELECT `x` FROM generateRandom('x Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(Array(UInt8)))))))))))))))))))))))))))))))))))))))))))))))', 1, 1, 1) LIMIT 1
SELECT t1.id AS t1_id, t1.value, t2.id AS t2_id, t2.value, t3.id AS t3_id, t3.value FROM test_table_join_1 AS t1 FULL JOIN test_table_join_2 AS t2 ON t1_id = t2_id FULL JOIN test_table_join_3 AS t3 ON t2_id = t3_id;
INSERT INTO r1 SELECT 5
explain plan actions=1, description=1 select n, sum(x) OVER (ORDER BY n, x ROWS BETWEEN 100 PRECEDING AND CURRENT ROW) from test_01655_plan_optimizations_optimize_read_in_window_order_n_x SETTINGS optimize_read_in_order=0,optimize_read_in_window_order=0,allow_experimental_analyzer=0
RENAME TABLE test1_00843 TO test2_00843;
select 7 = multiSearchFirstIndex(materialize('wcrqaoecjwkhnskrbahqxfqgf'), ['qegldkdmyaznlmlhzvxfgoukngzbatnuq', 'khgcvgrifwtc', 'hkwcpogbbdqulizrycmneqmqynvj', 'zkqjf', 'xfduxyy', 'ructdekcoywfxsvpumfefoglljptsuwd', 'wkhnskrbahq', 'crqaoecjwkh', 'ikmpbunpguleinptzfelysiqc', 'lhldcci', 'nooepfypkoxxbriztycqam', 'uxeroptbiqrjartlnxzhhnlvjp']) from system.numbers limit 10;
INSERT INTO left SELECT number, toString(number) FROM numbers(21);
DROP TABLE test_02327;
CREATE TABLE test_3F5523495E40525B5E242B506A2D465E752B79336447646D61263C6972416D63705B7B73694F7334(x UInt8) Engine=Memory;
INSERT INTO src_3 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 5
CREATE TABLE test_534A59557B542D567E31494E5A405A56662E2637305129284A735D7243235D655351496D43622C2B(x UInt8) Engine=Memory;
SELECT toTypeName(now());
INSERT INTO test_01193_18429.table_4_869 VALUES 
DROP DATABASE IF EXISTS test_edfcte4k 
SELECT accurateCastOrNull(nan, 'Int256');
CREATE TABLE test_01193_18429.table_7_895 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_00707 FORMAT CSV 
alter table many_mutations delete where y = 605 * 2 settings mutations_sync = 0;
SELECT mapReverseSort(NULL, NULL);
select getServerPort('tcp_port');
CREATE INDEX idx_tab4_0 ON tab4 (col4);
DROP DATABASE IF EXISTS test_8ou38e1h 
SELECT '*** CollapsingMergeTree ***';
SELECT JSONExtract('{"v":-1e300}', 'v', 'UInt8');
with '2018-01-12 22:33:44' as s, toDateTime(s) as datetime, toDateTime64(s, 6) as datetime64, toDate(s) as date, toDate32(s) as date32 SELECT formatDateTimeInJodaSyntax(datetime, 'GGG'), formatDateTimeInJodaSyntax(datetime64, 'GGG'), formatDateTimeInJodaSyntax(date, 'GGG'), formatDateTimeInJodaSyntax(date32, 'GGG');
CREATE TABLE test_01193_18429.table_1_275 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_9_600 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_6_669 VALUES 
CREATE TABLE json_each_row (d DateTime('Asia/Istanbul')) ENGINE = Memory
SELECT count() FROM t_cnf_fuzz WHERE (c8 AND c9 AND c3 AND (NOT c4) AND c2) OR (c5 AND (NOT c4) AND (NOT c4) AND (NOT c9) AND (NOT c4)) OR (c8) OR (c2 AND (NOT c6) AND c6 AND c8) OR (c8 AND c1) OR (c7 AND c8) SETTINGS convert_query_to_cnf = 0
INSERT INTO test_01193_18429.table_6_103 VALUES 
INSERT INTO test_01193_18429.table_3_848 VALUES 
CREATE TABLE date_table (`CountryID` UInt64, `CountryKey` String, `StartDate` Date, `EndDate` Date, `Tax` Float64) ENGINE = MergeTree ORDER BY CountryID SETTINGS index_granularity = 33931, min_bytes_for_wide_part = 213925641, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 17793, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 56, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 13626359, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 47628, primary_key_compress_block_size = 61037
CREATE TABLE test_01193_18429.table_3_861 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO r2 SELECT 64
alter table many_mutations delete where y = 672 * 2 settings mutations_sync = 0;
INSERT INTO test_01193_18429.table_10_813 VALUES 
SELECT toString(toDateTime('9922337203.6854775808', 1, 'Asia/Istanbul'));
INSERT INTO test_kcb7tmp4.data_01643 (key) VALUES
CREATE TABLE test_24416142614B344D54245879225F365626387034222A2C285B6D764479385C313464774247734346(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS dict_db_01224_dictionary;
select makeDateTime64(2299, 12, 31, 23, 59, 59, 99999999, 8, 'UTC');
SELECT 'Running test stateless/00449_filter_array_nullable_tuple.sql from pid=1714' 
SELECT count() FROM test_02559 PREWHERE ignore(id1) AND id2 > 0;
DROP DICTIONARY IF EXISTS hierachical_hashed_dictionary;
ALTER TABLE concurrent_alter_column ADD COLUMN c30 DOUBLE;
CREATE TABLE test_01193_18429.table_10_128 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP DATABASE IF EXISTS test_8buprtt8 
CREATE TABLE test_4E5878644C677B3D7B456A3B4E5836623C4A5A37605A48587E412458742E295825403E4F71687065(x UInt8) Engine=Memory;
ALTER QUOTA 2884_quota_215526 FOR INTERVAL 100 YEAR MAX FAILED SEQUENTIAL AUTHENTICATIONS = 4 TO 2884_user_215526
DROP DATABASE IF EXISTS test_wyq9a50b 
SELECT 'Running test stateless/01681_bloom_filter_nullable_column.sql from pid=1718' 
ALTER TABLE alter_test MODIFY COLUMN `b` DateTime DEFAULT now();
CREATE TABLE test_234B7B5A526C456E6F6B5E3C365E5375752470703F4D32332D3440446942242D277A59732C233D79(x UInt8) Engine=Memory;
SELECT DATE_ADD(toDateTime(1234567890, 'UTC'), INTERVAL '2 day');
SELECT toInt16(number - 10) AS x, round(x), roundBankers(x), floor(x), ceil(x), trunc(x) FROM system.numbers LIMIT 20;
CREATE INDEX idx_tab4_2 ON tab4 (col3,col1 DESC);
DROP DATABASE IF EXISTS test_phi5v2og 
CREATE TABLE test_01193_18429.table_2_273 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
set insert_deduplication_token = '2';
INSERT INTO test_01193_18429.table_8_154 VALUES 
DROP DATABASE IF EXISTS test_9gj8nxlv 
CREATE TABLE test_01193_18429.table_8_29 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_753669726446685171483C29643225523A417D5D7C24564D70265452454E2F5A4663215C795B3629(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_skpijkhw 
CREATE TABLE test_01193_18429.table_2_765 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT dictGet('polygon_dictionary', 'value', tuple(0.5, 0.5));
SELECT fromUnixTimestamp(NULL, NULL, NULL);
CREATE DATABASE IF NOT EXISTS test_xml3ltz4 
select accurateCast('2001:db8::1', 'IPv6');
CREATE TABLE test_01193_18429.table_9_570 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP QUOTA IF EXISTS quota_by_forwarded_ip;
select 1 = multiMatchAny(materialize('abc'), materialize(['']));
DROP DATABASE IF EXISTS test_k23cb5jy 
EXPLAIN SYNTAX (SELECT sum(decimal32 - 2) From test_table);
SELECT arrayEnumerateDenseRanked([NULL],[NULL]);
SELECT * FROM system.table_engines LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
INSERT INTO test_01193_18429.table_6_152 VALUES 
DROP DICTIONARY IF EXISTS dict;
SELECT - -1 IN (2 - 1, 3);
DROP TABLE IF EXISTS polygon_dictionary_array_source_table;
INSERT INTO test_01193_18429.table_2_321 VALUES 
CREATE TABLE test_783A25744A312A7B542C594062252560452C7C37692360353E2968355361712C744A306E79277C7A(x UInt8) Engine=Memory;
DROP DICTIONARY IF EXISTS hierachical_hashed_array_dictionary;
CREATE TABLE test_01193_18429.table_3_657 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE test_01193_18429.table_6_981 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
drop table XXXX;
SELECT count(*) FROM source WHERE toYear(ts) > 2023 SETTINGS allow_experimental_analyzer=1;
SELECT 0, 7, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (0 < 13 AND 7 > 0 ? 0 : 0)), throwIf(last != (0 < 13 AND 7 > 0 ? least(13 - 1, 0 + 7 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 0, 7);
SELECT reinterpretAsUUID(NULL);
INSERT INTO test_01193_18429.table_10_297 VALUES 
INSERT INTO r3 SELECT 29
INSERT INTO test_01193_18429.table_10_766 VALUES 
SELECT 'ArrayLast non constant predicate';
select toLastDayOfWeek(x1) from t1;
SELECT multiIf((col1 % 2) = 0, col2, (col1 % 3) = 0, toFixedString('bar', 16), 'baz') FROM multi_if_check;
SELECT COUNT() FROM bloom_filter_types_test WHERE str = '1' SETTINGS max_rows_to_read = 12;
select 1 = multiSearchAnyCaseInsensitive(materialize('HCPOPUUEVVsuZDbyRnbowGuOMhQ'), ['UzDbYrNBoWgUo', '', 'pUUEVVsUzdByrNB', 'nBO', 'SUZdbYrNbOWgUoMH', 'pOpuUevVSUZDbYRnb', 'bowGUoMh', 'VsUZDbyrNbo', 'suzdBYrN', 'uueVvsUZDBYRnBoW', 'gUom', 'eVvsuzDBYRNBoWgUOM']) from system.numbers limit 10;
INSERT INTO test_01193_18429.table_4_666 VALUES 
CREATE TABLE test_01193_18429.table_3_194 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
with '2018-01-12 22:33:44' as s, toDateTime(s) as datetime, toDateTime64(s, 6) as datetime64, toDate(s) as date, toDate32(s) as date32 SELECT formatDateTimeInJodaSyntax(datetime, 'sss'), formatDateTimeInJodaSyntax(datetime64, 'sss'), formatDateTimeInJodaSyntax(date, 'sss'), formatDateTimeInJodaSyntax(date32, 'sss');
CREATE TABLE test_01193_18429.table_9_467 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
SELECT -32769, 2147483648, -32769 = 2147483648, -32769 != 2147483648, -32769 < 2147483648, -32769 <= 2147483648, -32769 > 2147483648, -32769 >= 2147483648, 2147483648 = -32769, 2147483648 != -32769, 2147483648 < -32769, 2147483648 <= -32769, 2147483648 > -32769, 2147483648 >= -32769 , toInt32(-32769) = toUInt32(2147483648), toInt32(-32769) != toUInt32(2147483648), toInt32(-32769) < toUInt32(2147483648), toInt32(-32769) <= toUInt32(2147483648), toInt32(-32769) > toUInt32(2147483648), toInt32(-32769) >= toUInt32(2147483648), toUInt32(2147483648) = toInt32(-32769), toUInt32(2147483648) != toInt32(-32769), toUInt32(2147483648) < toInt32(-32769), toUInt32(2147483648) <= toInt32(-32769), toUInt32(2147483648) > toInt32(-32769), toUInt32(2147483648) >= toInt32(-32769) , toInt32(-32769) = toUInt64(2147483648), toInt32(-32769) != toUInt64(2147483648), toInt32(-32769) < toUInt64(2147483648), toInt32(-32769) <= toUInt64(2147483648), toInt32(-32769) > toUInt64(2147483648), toInt32(-32769) >= toUInt64(2147483648), toUInt64(2147483648) = toInt32(-32769), toUInt64(2147483648) != toInt32(-32769), toUInt64(2147483648) < toInt32(-32769), toUInt64(2147483648) <= toInt32(-32769), toUInt64(2147483648) > toInt32(-32769), toUInt64(2147483648) >= toInt32(-32769) , toInt32(-32769) = toInt64(2147483648), toInt32(-32769) != toInt64(2147483648), toInt32(-32769) < toInt64(2147483648), toInt32(-32769) <= toInt64(2147483648), toInt32(-32769) > toInt64(2147483648), toInt32(-32769) >= toInt64(2147483648), toInt64(2147483648) = toInt32(-32769), toInt64(2147483648) != toInt32(-32769), toInt64(2147483648) < toInt32(-32769), toInt64(2147483648) <= toInt32(-32769), toInt64(2147483648) > toInt32(-32769), toInt64(2147483648) >= toInt32(-32769) , toInt64(-32769) = toUInt32(2147483648), toInt64(-32769) != toUInt32(2147483648), toInt64(-32769) < toUInt32(2147483648), toInt64(-32769) <= toUInt32(2147483648), toInt64(-32769) > toUInt32(2147483648), toInt64(-32769) >= toUInt32(2147483648), toUInt32(2147483648) = toInt64(-32769), toUInt32(2147483648) != toInt64(-32769), toUInt32(2147483648) < toInt64(-32769), toUInt32(2147483648) <= toInt64(-32769), toUInt32(2147483648) > toInt64(-32769), toUInt32(2147483648) >= toInt64(-32769) , toInt64(-32769) = toUInt64(2147483648), toInt64(-32769) != toUInt64(2147483648), toInt64(-32769) < toUInt64(2147483648), toInt64(-32769) <= toUInt64(2147483648), toInt64(-32769) > toUInt64(2147483648), toInt64(-32769) >= toUInt64(2147483648), toUInt64(2147483648) = toInt64(-32769), toUInt64(2147483648) != toInt64(-32769), toUInt64(2147483648) < toInt64(-32769), toUInt64(2147483648) <= toInt64(-32769), toUInt64(2147483648) > toInt64(-32769), toUInt64(2147483648) >= toInt64(-32769) , toInt64(-32769) = toInt64(2147483648), toInt64(-32769) != toInt64(2147483648), toInt64(-32769) < toInt64(2147483648), toInt64(-32769) <= toInt64(2147483648), toInt64(-32769) > toInt64(2147483648), toInt64(-32769) >= toInt64(2147483648), toInt64(2147483648) = toInt64(-32769), toInt64(2147483648) != toInt64(-32769), toInt64(2147483648) < toInt64(-32769), toInt64(2147483648) <= toInt64(-32769), toInt64(2147483648) > toInt64(-32769), toInt64(2147483648) >= toInt64(-32769) 
CREATE TABLE test_01193_18429.table_5_510 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT 'abc\ntdef' ILIKE '%abc%def%';
CREATE TABLE test_01193_18429.table_6_681 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_02908_r1_93 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_93', 'r1') ORDER BY tuple()
INSERT INTO test_01193_18429.table_9_549 VALUES 
CREATE TABLE merge_b (x UInt8) ENGINE = StripeLog;
select count(*) over (rows between current row and current row), count(*) over (range between current row and current row) from numbers(3);
SELECT 'Running test stateless/02512_array_join_name_resolution.sql from pid=1724' 
CREATE TABLE test_492527415D486E725B476129497A5A522F40554537465232432B4B7C534554535B4F50227D377E20(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02922_respect_nulls_states.sql from pid=1715' 
SELECT * FROM 01760_db.example_simple_key_dictionary;
SELECT 42 % 13;
TRUNCATE TABLE test_02155_csv
CREATE TABLE test_01193_18429.table_1_648 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'Running test stateless/01128_generate_random_nested.sql from pid=1718' 
SELECT s, replaceOne(s, '_', 'oo') AS a, replaceRegexpOne(s, '_', 'oo') AS b, a = b FROM (SELECT arrayJoin(['.', '_._']) AS s);
select * from distr_table order by x settings additional_table_filters={'distr_table' : 'length(y) > 3'};
SELECT dateTrunc('DAY', toDateTime('2022-03-01 12:55:55'));
CREATE INDEX idx_tab4_2 ON tab4 (col4 DESC,col3,col0 DESC);
SELECT extractTextFromHTML('Hello, world');
CREATE SETTINGS PROFILE sqllt_settings_profile SETTINGS interactive_delay = 200000;
INSERT INTO src_15 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 43
INSERT INTO src_15 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 3
SELECT a, c FROM t_fixed_prefix WHERE a = 1 AND b = 1 ORDER BY a, c SETTINGS optimize_read_in_order = 1
select 'Tuple';
select a from t21 group by a limit 10 format Null;
SELECT s, replaceAll(s, '_', 'oo') AS a, replaceRegexpAll(s, '_', 'oo') AS b, a = b FROM (SELECT arrayJoin(['_._', '._']) AS s);
SELECT id, d FROM t_mutations_nondeterministic ORDER BY id;
show create table merge_tree_settings format TSVRaw;
SELECT 'aes-256-ecb' AS mode, aes_decrypt_mysql(mode, '[HIDDEN]') = input FROM encryption_test
SELECT a, b FROM t_fixed_prefix WHERE bitNot(c) = 1 ORDER BY a, b SETTINGS optimize_read_in_order = 1
INSERT INTO src VALUES /* (17, 2) */ 
SELECT toYear(NULL);
CREATE TABLE t (`x` String) ENGINE = MergeTree ORDER BY cityHash64(x) SAMPLE BY cityHash64(x) SETTINGS index_granularity = 50092, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 11355, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 9448991367, index_granularity_bytes = 28606820, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 98232, primary_key_compress_block_size = 40904
SELECT -129, 2147483648, -129 = 2147483648, -129 != 2147483648, -129 < 2147483648, -129 <= 2147483648, -129 > 2147483648, -129 >= 2147483648, 2147483648 = -129, 2147483648 != -129, 2147483648 < -129, 2147483648 <= -129, 2147483648 > -129, 2147483648 >= -129 , toInt16(-129) = toUInt32(2147483648), toInt16(-129) != toUInt32(2147483648), toInt16(-129) < toUInt32(2147483648), toInt16(-129) <= toUInt32(2147483648), toInt16(-129) > toUInt32(2147483648), toInt16(-129) >= toUInt32(2147483648), toUInt32(2147483648) = toInt16(-129), toUInt32(2147483648) != toInt16(-129), toUInt32(2147483648) < toInt16(-129), toUInt32(2147483648) <= toInt16(-129), toUInt32(2147483648) > toInt16(-129), toUInt32(2147483648) >= toInt16(-129) , toInt16(-129) = toUInt64(2147483648), toInt16(-129) != toUInt64(2147483648), toInt16(-129) < toUInt64(2147483648), toInt16(-129) <= toUInt64(2147483648), toInt16(-129) > toUInt64(2147483648), toInt16(-129) >= toUInt64(2147483648), toUInt64(2147483648) = toInt16(-129), toUInt64(2147483648) != toInt16(-129), toUInt64(2147483648) < toInt16(-129), toUInt64(2147483648) <= toInt16(-129), toUInt64(2147483648) > toInt16(-129), toUInt64(2147483648) >= toInt16(-129) , toInt16(-129) = toInt64(2147483648), toInt16(-129) != toInt64(2147483648), toInt16(-129) < toInt64(2147483648), toInt16(-129) <= toInt64(2147483648), toInt16(-129) > toInt64(2147483648), toInt16(-129) >= toInt64(2147483648), toInt64(2147483648) = toInt16(-129), toInt64(2147483648) != toInt16(-129), toInt64(2147483648) < toInt16(-129), toInt64(2147483648) <= toInt16(-129), toInt64(2147483648) > toInt16(-129), toInt64(2147483648) >= toInt16(-129) , toInt32(-129) = toUInt32(2147483648), toInt32(-129) != toUInt32(2147483648), toInt32(-129) < toUInt32(2147483648), toInt32(-129) <= toUInt32(2147483648), toInt32(-129) > toUInt32(2147483648), toInt32(-129) >= toUInt32(2147483648), toUInt32(2147483648) = toInt32(-129), toUInt32(2147483648) != toInt32(-129), toUInt32(2147483648) < toInt32(-129), toUInt32(2147483648) <= toInt32(-129), toUInt32(2147483648) > toInt32(-129), toUInt32(2147483648) >= toInt32(-129) , toInt32(-129) = toUInt64(2147483648), toInt32(-129) != toUInt64(2147483648), toInt32(-129) < toUInt64(2147483648), toInt32(-129) <= toUInt64(2147483648), toInt32(-129) > toUInt64(2147483648), toInt32(-129) >= toUInt64(2147483648), toUInt64(2147483648) = toInt32(-129), toUInt64(2147483648) != toInt32(-129), toUInt64(2147483648) < toInt32(-129), toUInt64(2147483648) <= toInt32(-129), toUInt64(2147483648) > toInt32(-129), toUInt64(2147483648) >= toInt32(-129) , toInt32(-129) = toInt64(2147483648), toInt32(-129) != toInt64(2147483648), toInt32(-129) < toInt64(2147483648), toInt32(-129) <= toInt64(2147483648), toInt32(-129) > toInt64(2147483648), toInt32(-129) >= toInt64(2147483648), toInt64(2147483648) = toInt32(-129), toInt64(2147483648) != toInt32(-129), toInt64(2147483648) < toInt32(-129), toInt64(2147483648) <= toInt32(-129), toInt64(2147483648) > toInt32(-129), toInt64(2147483648) >= toInt32(-129) , toInt64(-129) = toUInt32(2147483648), toInt64(-129) != toUInt32(2147483648), toInt64(-129) < toUInt32(2147483648), toInt64(-129) <= toUInt32(2147483648), toInt64(-129) > toUInt32(2147483648), toInt64(-129) >= toUInt32(2147483648), toUInt32(2147483648) = toInt64(-129), toUInt32(2147483648) != toInt64(-129), toUInt32(2147483648) < toInt64(-129), toUInt32(2147483648) <= toInt64(-129), toUInt32(2147483648) > toInt64(-129), toUInt32(2147483648) >= toInt64(-129) , toInt64(-129) = toUInt64(2147483648), toInt64(-129) != toUInt64(2147483648), toInt64(-129) < toUInt64(2147483648), toInt64(-129) <= toUInt64(2147483648), toInt64(-129) > toUInt64(2147483648), toInt64(-129) >= toUInt64(2147483648), toUInt64(2147483648) = toInt64(-129), toUInt64(2147483648) != toInt64(-129), toUInt64(2147483648) < toInt64(-129), toUInt64(2147483648) <= toInt64(-129), toUInt64(2147483648) > toInt64(-129), toUInt64(2147483648) >= toInt64(-129) , toInt64(-129) = toInt64(2147483648), toInt64(-129) != toInt64(2147483648), toInt64(-129) < toInt64(2147483648), toInt64(-129) <= toInt64(2147483648), toInt64(-129) > toInt64(2147483648), toInt64(-129) >= toInt64(2147483648), toInt64(2147483648) = toInt64(-129), toInt64(2147483648) != toInt64(-129), toInt64(2147483648) < toInt64(-129), toInt64(2147483648) <= toInt64(-129), toInt64(2147483648) > toInt64(-129), toInt64(2147483648) >= toInt64(-129) 
SELECT 'Running test stateless/01655_plan_optimizations_optimize_read_in_window_order_long.sh from pid=1714' 
set prefer_localhost_replica=0;
SYSTEM SYNC REPLICA ttl_repl2
SELECT parseDateTimeBestEffortOrZero(NULL);
CREATE TABLE test_01193_18429.table_5_512 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
select 2, n from mt order by n
SELECT multiIf((number % 2) = 0, toInt32(1), (number % 3) = 0, toInt16(2), toFloat32(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_01193_18429.table_9_466 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE rocksdb_with_filter (key String, value String) ENGINE=EmbeddedRocksDB PRIMARY KEY key;
select _path, _file from test_02377 format Null;
DROP TABLE IF EXISTS codec_multiple_direct_specification_1;
SELECT multiIf((number % 2) = 0, [toInt8(1), toInt8(2)], (number % 3) = 0, [toInt8(2), toInt8(3)], [toFloat64(3), toFloat64(3)]) FROM system.numbers LIMIT 10;
DROP DATABASE IF EXISTS test_3molx1b5 
select 'week', date_diff('week', toDateTime64('1969-12-25 10:00:00.000', 3), toDateTime64('1970-01-05 10:00:00.000', 3));
INSERT INTO test_01193_18429.table_1_648 VALUES 
CREATE TABLE test_01193_18429.table_7_270 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE DATABASE IF NOT EXISTS test_khsk3a1f 
SELECT 'Running test stateless/01070_alter_with_ttl.sql from pid=1715' 
SELECT 'const, int, negative';
SELECT COUNT(*) FROM mt_with_pk WHERE z + w > 5000;
INSERT INTO test_01193_18429.table_3_514 VALUES 
CREATE TABLE proportions_ztest (sx UInt64, sy UInt64, tx UInt64, ty UInt64) Engine = Memory();
ALTER TABLE dst_2 DROP PARTITION 8
DROP TABLE test_02047
SELECT CASE WHEN (col1 % 2) = 0 THEN toFixedString('foo', 16) WHEN (col1 % 3) = 0 THEN col3 ELSE 'baz' END FROM multi_if_check;
INSERT INTO test_01193_18429.table_6_146 VALUES 
select (select count() from test where test='case3'), (select sum(c) from test_mv_a where test='case3'), (select sum(c) from test_mv_b where test='case3'), (select sum(c) from test_mv_c where test='case3');
SELECT materialize('a\xFFb') LIKE materialize('%a\xFF\xFEb');
SELECT groupArray(dt) from date_datetime_key_condition WHERE dt < toDate('2019-01-02') OR dt > toDate('2021-01-02');
SELECT 'Running test stateless/02421_record_errors_row_by_input_format.sh from pid=1705' 
CREATE TABLE test_00861 (key UInt64, d32 Decimal32(2), d64 Decimal64(2), d128 Decimal128(2)) ENGINE = Memory;
SELECT pointInPolygon((39.840202, 21.451471), [(39.83035, 21.42986),(39.8304, 21.42866),(39.83018, 21.42818),(39.83125, 21.42753),(39.83199, 21.42688),(39.83261, 21.42604),(39.83342, 21.42459),(39.83365, 21.42395),(39.83444, 21.42391),(39.83496, 21.4238),(39.83479, 21.42429),(39.83281, 21.42802),(39.83184, 21.42901),(39.83126, 21.4294),(39.83035, 21.42986)]);
CREATE TABLE test_797A4A23376E304D47695D325D336743575E74467B50585F7E646C5F42343D417E6E327D2525503C(x UInt8) Engine=Memory;
SELECT '----00607----';
select position(materialize('abc') as h, lower('aBc' as n)) = positionCaseInsensitive(h, n) from system.numbers limit 10;
SELECT space(30::UInt32) FROM defaults;
CREATE INDEX idx_tab4_5 ON tab4 (col4 DESC);
CREATE TABLE test_3B603F3276385C697630367C3F615F6D775B3E3E775736455672583B713F38655325762B413C562D(x UInt8) Engine=Memory;
SELECT 'SELECT avg(number - 2) FROM numbers(10)';
alter table many_mutations delete where y = 154 * 2 settings mutations_sync = 0;
select x3, x2, x1 from test order by -1 desc;
select round(1000 * ngramDistanceCaseInsensitiveUTF8('ÃÂ°ÃÂ±ÃÂ²ÃÂ³ÃÂ´ÃÂµÃÂÃÂ¶ÃÂ·', 'ÃÂ³ÃÂ´ÃÂµÃÂÃÂÃÂ'));
CREATE TABLE test_01193_18429.table_6_541 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO test_02908_r1_212 SELECT rand64() FROM numbers(5);
select 1 = multiSearchAny(materialize('abcdefgh'), ['cdefg']) from system.numbers limit 129;
SELECT CASE WHEN (col1 % 2) = 0 THEN 'foo' WHEN (col1 % 3) = 0 THEN col3 ELSE toFixedString(col4, 16) END FROM multi_if_check;
CREATE TABLE test_lot_of_parts_distributed ( `a` String, `b` LowCardinality(String), `c` DateTime64(3), `val` String, ) ENGINE = Distributed(test_shard_localhost, currentDatabase(), 'test_lot_of_parts', rand());
CREATE TABLE test_02908_r1_266 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_266', 'r1') ORDER BY tuple()
SELECT 'Running test stateless/01016_uniqCombined64.sql from pid=1715' 
ALTER TABLE sqllt.table ADD COLUMN new_col UInt32 DEFAULT 123456789;
DROP DATABASE IF EXISTS test_n5h58xs3 
CREATE INDEX idx_tab4_3 ON tab4 (col0 DESC,col1 DESC);
INSERT INTO test_01193_18429.table_3_992 VALUES 
select 5 = position('abcabc', 'b', 3);
DROP TABLE IF EXISTS restore_01640;
SELECT uniqExact([NULL],[NULL]);
CREATE TABLE cannot_be_nullable (n Int8, a Array(UInt8) NOT NULL) ENGINE=Memory;
ALTER TABLE not_partitioned DETACH PARTITION ID 'all';
CREATE TABLE test_01193_18429.table_5_376 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_227E513E5B5960724C774D7641557D2036363B654B6B4068303F3D6457754E6B5966274A505E4D34(x UInt8) Engine=Memory;
SELECT soundex('Faredale');
select 'asc nulls last, desc';
attach table lc_small_dict;
SELECT 'Running test stateless/02481_fix_parameters_parsing.sql from pid=1722' 
select [8, 1, 2, 8, 1, 0, 5, 0, 0, 4, 0, 1, 14, 0, 0, 7, 0, 1] = multiSearchAllPositionsCaseInsensitive(materialize('uyWhVSwxUFitYoVQqUaCVlsZN'), ['XufitYOVqqUACVlszn', '', 'ywH', 'XUFIT', 'uywHvSWXuFIt', 'dGhpjGRnQlrZhzGeInmOj', 'vswXuFitYovqQuA', 'dHCfJRAAQJUZeMJNXLqrqYCygdozjAC', 'rojpIwYfNLECl', 'hVswxufiTYov', 'bgJdgRoye', '', 'ovQ', 'AdVrJlq', 'krJFOKilvBTGZ', 'WxuFITYOV', 'AsskQjNPViwyTF', 'u']) from system.numbers limit 10;
SELECT 1.23::Decimal256(70) AS test;
DROP TABLE IF EXISTS test_table6
CREATE TABLE test_01193_18429.table_10_967 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
set optimize_read_in_order = 1;
DROP TABLE IF EXISTS 02703_keeper_map_concurrent_8
WITH cte_subquery AS (SELECT * FROM test_table UNION DISTINCT SELECT * FROM test_table) SELECT * FROM cte_subquery;
SELECT 'Running test stateless/00106_totals_after_having.sql from pid=1713' 
ALTER TABLE alter_default MODIFY COLUMN value UInt16 DEFAULT 100;
CREATE TABLE test_01193_18429.table_2_832 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test1 (`pt`, `brand_name`, `total_indirect_order_cnt`, `total_indirect_gmv`) VALUES 
SELECT has([1,NULL,2,3], col1) FROM test1_00395;
INSERT INTO test_01193_18429.table_6_890 VALUES 
DROP DATABASE IF EXISTS test_l0jcx5bf 
SELECT multiIf((number % 2) = 0, toInt32(1), (number % 3) = 0, toInt32(2), toFloat32(3)) FROM system.numbers LIMIT 10;
CREATE TABLE persons_00825 (`uuid` UUID, `name` String, `surname` String, `gender` Enum8('male' = 1, 'female' = 0), `birthDate` Date, `photo` Nullable(String), `phoneNumber` Nullable(FixedString(13)), `isOnline` UInt8, `visitTime` Nullable(DateTime('Asia/Istanbul')), `age` UInt8, `zodiacSign` Enum16('aries' = 321, 'taurus' = 420, 'gemini' = 521, 'cancer' = 621, 'leo' = 723, 'virgo' = 823, 'libra' = 923, 'scorpius' = 1023, 'sagittarius' = 1122, 'capricorn' = 1222, 'aquarius' = 120, 'pisces' = 219), `songs` Array(String), `color` Array(UInt8), `hometown` LowCardinality(String), `location` Array(Decimal32(6)), `pi` Nullable(Float64), `lotteryWin` Nullable(Decimal64(2)), `someRatio` Float32, `temperature` Decimal32(1), `randomBigNumber` Int64, `measureUnits` Nested(unit String, coef Float32), `nestiness_a_b_c_d` Nullable(UInt32), `nestiness_a_B.c_E` Array(UInt32)) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 41569, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 23333, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 6968649021, index_granularity_bytes = 14602871, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 45944, primary_key_compress_block_size = 33747
ALTER TABLE prewhere_defaults ADD COLUMN y UInt16 DEFAULT x;
CREATE TABLE test_01193_18429.table_5_334 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_2_439 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Running test stateless/02789_set_index_nullable_condition_bug.sql from pid=1720' 
SELECT cutURLParameter(materialize('http://bigmir.net/?a=b&c=d'), []), cutURLParameter(materialize('http://bigmir.net/?a=b&c=d'), ['a']), cutURLParameter(materialize('http://bigmir.net/?a=b&c=d'), ['a', 'c']), cutURLParameter(materialize('http://bigmir.net/?a=b&c=d'), ['c']), cutURLParameter(materialize('http://bigmir.net/?a=b&c=d#e=f'), ['a', 'e']), cutURLParameter(materialize('http://bigmir.net/?a&c=d#e=f'), ['c', 'e']), cutURLParameter(materialize('http://bigmir.net/?a&c=d#e=f'), ['e']), cutURLParameter(materialize('http://bigmir.net/?a=b&c=d#e=f&g=h'), ['b', 'g']), cutURLParameter(materialize('http://bigmir.net/?a=b&c=d#e'), ['a', 'e']), cutURLParameter(materialize('http://bigmir.net/?a=b&c=d#e&g=h'), ['c', 'g']), cutURLParameter(materialize('http://bigmir.net/?a=b&c=d#e&g=h'), ['e', 'g']), cutURLParameter(materialize('http://bigmir.net/?a=b&c=d#test?e=f&g=h'), ['test', 'e']), cutURLParameter(materialize('http://bigmir.net/?a=b&c=d#test?e=f&g=h'), ['test', 'g']), cutURLParameter(materialize('//bigmir.net/?a=b&c=d'), []), cutURLParameter(materialize('//bigmir.net/?a=b&c=d'), ['a']), cutURLParameter(materialize('//bigmir.net/?a=b&c=d'), ['a', 'c']), cutURLParameter(materialize('//bigmir.net/?a=b&c=d#e=f'), ['a', 'e']), cutURLParameter(materialize('//bigmir.net/?a&c=d#e=f'), ['a']), cutURLParameter(materialize('//bigmir.net/?a&c=d#e=f'), ['a', 'c']), cutURLParameter(materialize('//bigmir.net/?a&c=d#e=f'), ['a', 'e']), cutURLParameter(materialize('//bigmir.net/?a=b&c=d#e=f&g=h'), ['c', 'g']), cutURLParameter(materialize('//bigmir.net/?a=b&c=d#e'), ['a', 'c']), cutURLParameter(materialize('//bigmir.net/?a=b&c=d#e'), ['a', 'e']), cutURLParameter(materialize('//bigmir.net/?a=b&c=d#e&g=h'), ['c', 'e']), cutURLParameter(materialize('//bigmir.net/?a=b&c=d#e&g=h'), ['e', 'g']), cutURLParameter(materialize('//bigmir.net/?a=b&c=d#test?e=f&g=h'), ['test', 'e']), cutURLParameter(materialize('//bigmir.net/?a=b&c=d#test?e=f&g=h'), ['test', 'g']) FORMAT Vertical;
SELECT subtractMilliseconds(materialize('2023-10-22'), 1), subtractMilliseconds(materialize('2023-10-22 12:34:56.123'), 1);
INSERT INTO arrow_types2 FORMAT Arrow
INSERT INTO table_gcd_codec_uint128 SELECT number FROM system.numbers LIMIT 50;
CREATE TABLE test_7C4571272738665F4F265322284259514577613647384D412F7146704720397D6165364752557175(x UInt8) Engine=Memory;
SELECT dictGet('polygon_dictionary', 'array_value', tuple(0.5, 0.5));
SELECT transform(number, [2, 4, 6], ['google', 'censor.net', 'yahoo'], 'other') as value, value FROM system.numbers LIMIT 10;
SELECT multiIf((col1 % 2) = 0, [col2, col3], (col1 % 3) = 0, [col4, col5], ['foo', col7]) FROM multi_if_check;
select * from t format TSV
select 0 = positionCaseInsensitive('ÃÂ°ÃÂ±ÃÂ²', 'ÃÂ');
SELECT 'DT';
ALTER TABLE video_log ADD PROJECTION p_norm ( SELECT datetime, device_id, bytes, duration ORDER BY device_id );
SET distributed_group_by_no_merge = 1, extremes = 0;
CREATE DATABASE IF NOT EXISTS test_9ilt0i1u 
CREATE DATABASE IF NOT EXISTS test_v49j4lvq 
INSERT INTO src_15 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 27
EXPLAIN SYNTAX SELECT * FROM prewhere_move_select_final WHERE y > 100;
SELECT -129, 9223372036854775809, -129 = 9223372036854775809, -129 != 9223372036854775809, -129 < 9223372036854775809, -129 <= 9223372036854775809, -129 > 9223372036854775809, -129 >= 9223372036854775809, 9223372036854775809 = -129, 9223372036854775809 != -129, 9223372036854775809 < -129, 9223372036854775809 <= -129, 9223372036854775809 > -129, 9223372036854775809 >= -129 , toInt16(-129) = toUInt64(9223372036854775809), toInt16(-129) != toUInt64(9223372036854775809), toInt16(-129) < toUInt64(9223372036854775809), toInt16(-129) <= toUInt64(9223372036854775809), toInt16(-129) > toUInt64(9223372036854775809), toInt16(-129) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toInt16(-129), toUInt64(9223372036854775809) != toInt16(-129), toUInt64(9223372036854775809) < toInt16(-129), toUInt64(9223372036854775809) <= toInt16(-129), toUInt64(9223372036854775809) > toInt16(-129), toUInt64(9223372036854775809) >= toInt16(-129) , toInt32(-129) = toUInt64(9223372036854775809), toInt32(-129) != toUInt64(9223372036854775809), toInt32(-129) < toUInt64(9223372036854775809), toInt32(-129) <= toUInt64(9223372036854775809), toInt32(-129) > toUInt64(9223372036854775809), toInt32(-129) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toInt32(-129), toUInt64(9223372036854775809) != toInt32(-129), toUInt64(9223372036854775809) < toInt32(-129), toUInt64(9223372036854775809) <= toInt32(-129), toUInt64(9223372036854775809) > toInt32(-129), toUInt64(9223372036854775809) >= toInt32(-129) , toInt64(-129) = toUInt64(9223372036854775809), toInt64(-129) != toUInt64(9223372036854775809), toInt64(-129) < toUInt64(9223372036854775809), toInt64(-129) <= toUInt64(9223372036854775809), toInt64(-129) > toUInt64(9223372036854775809), toInt64(-129) >= toUInt64(9223372036854775809), toUInt64(9223372036854775809) = toInt64(-129), toUInt64(9223372036854775809) != toInt64(-129), toUInt64(9223372036854775809) < toInt64(-129), toUInt64(9223372036854775809) <= toInt64(-129), toUInt64(9223372036854775809) > toInt64(-129), toUInt64(9223372036854775809) >= toInt64(-129) 
SELECT toColumnTypeName(NULL);
SELECT 'Running test stateless/01033_quota_dcl.sql from pid=1714' 
DROP TABLE IF EXISTS 02186_range_dictionary_source_table;
INSERT INTO test1_00395(col1,col2,col3,col4) VALUES
INSERT INTO test_01193_18429.table_2_147 VALUES 
SELECT * FROM test_apply_deleted_mask WHERE _row_exists SETTINGS apply_deleted_mask = 0;
SELECT * FROM test_01676.table ORDER BY x;
CREATE TABLE test_6D7E63612E4F3A555D272C345F4735403F5C354B7D5D5B687B2A35542C5D5954524455762A695240(x UInt8) Engine=Memory;
select * from (select 0 as k, toUInt64(1) as v) t1 asof join (select 0 as k, toUInt64(0) as v) t2 using(k, v);
DROP DATABASE IF EXISTS test_fmgppksa 
SHOW MERGES
CREATE TABLE test_01193_18429.table_1_203 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT concat(materialize('Non-const'), materialize(' strings'));
DROP TABLE t_sparse_mutations_3;
select g, s from (select g, sum(number) as s from numbers(4) group by bitAnd(number, 1) as g with totals order by g) array join [1, 2] as a format JSON;
SELECT count() FROM t_cnf_fuzz WHERE (c2 AND (NOT c8) AND c4) OR ((NOT c3) AND c9 AND (NOT c8) AND (NOT c4) AND (NOT c6)) OR ((NOT c6)) OR ((NOT c7) AND c1) OR (c7 AND c1) OR (c3 AND c6 AND (NOT c0) AND c2 AND (NOT c1)) OR (c8 AND (NOT c5) AND (NOT c4) AND (NOT c6)) SETTINGS convert_query_to_cnf = 1
INSERT INTO r6 SELECT 31
SELECT 'Running test stateless/02661_quantile_approx.sql from pid=1724' 
SELECT CASE WHEN (number % 2) = 0 THEN toInt32(1) WHEN (number % 3) = 0 THEN toInt8(2) ELSE toUInt8(3) END FROM system.numbers LIMIT 10;
ALTER TABLE test_generic_events_all ADD COLUMN OperatingSystem UInt64 DEFAULT SessionType+1;
SELECT read_rows==2 from system.query_log WHERE query_kind ='Select' AND current_database = currentDatabase() AND endsWith(trimRight(query), 'SELECT * FROM tab WHERE has(s, \'Click a03\') ORDER BY k;') AND type='QueryFinish' AND result_rows==1 LIMIT 1;
SELECT SUM(value) == 1 + 99 + 900 FROM 02416_test WHERE key IN ('1_1', '99_1', '900_1');
SELECT anyIf(toNullable('Hello'), arrayJoin([1, 0]) = 0) FROM remote('127.0.0.{1,2}', system.one);
CREATE TABLE test_786E2B3F3D66316A5F456F312A705C29583A4D4D5354246E652A4D57787E5E227C2C6B6E225B4473(x UInt8) Engine=Memory;
SELECT 'Running test stateless/02956_fix_to_start_of_milli_microsecond.sql from pid=1718' 
CREATE TABLE test_01193_18429.table_8_286 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT xxHash32([], [], []);
CREATE TABLE test_783545703B3D2B2E6E48233E6C68513B5A67645C41674A79475940435A317D264B2555346C29487D(x UInt8) Engine=Memory;
SELECT multiIf((number % 2) = 0, toInt8(1), (number % 3) = 0, toInt64(2), toInt16(3)) FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_dia1lxcv 
SELECT 'Running test stateless/02316_cast_to_ip_address_default_column.sql from pid=1720' 
INSERT INTO test_01193_18429.table_6_700 VALUES 
DROP DATABASE IF EXISTS test_z88cf9ui 
SELECT toInt128OrNull(NULL, NULL, NULL);
EXPLAIN SYNTAX SELECT number = 1 ? 'hello' : (number = 2 ? 'world' : 'xyz') FROM numbers(10);
DROP TABLE IF EXISTS 02703_keeper_map_concurrent_9
SELECT toDateTime64('2011-11-11 11:11:11.11111111111111111111', 0);
SELECT multiIf((number % 2) = 0, toInt64(1), (number % 3) = 0, toUInt8(2), toUInt8(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_3_117 VALUES 
CREATE TABLE test_01193_18429.table_3_672 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
INSERT INTO test_01193_18429.table_6_156 VALUES 
SELECT toInt256(-1);
SELECT * FROM arrow_types4 ORDER BY int8 FORMAT Arrow
select round(1000 * ngramDistance(materialize('abc'), '')) from system.numbers limit 5;
SELECT any(acctstatustype = 'Stop') FROM radacct WHERE (acctstatustype = 'Stop') AND ((acctinputoctets + acctoutputoctets) > 0);
CREATE DICTIONARY default.dict01747 (some_name String, field1 String, field2 UInt8) PRIMARY KEY some_name SOURCE(CLICKHOUSE(HOST 'localhost' PORT 9000 TABLE dictst01747 DB currentDatabase() USER 'default')) LIFETIME(MIN 0 MAX 0) LAYOUT(COMPLEX_KEY_HASHED());
INSERT INTO test_01193_18429.table_6_511 VALUES 
SELECT multiIf(1, 'foo', 1, toFixedString(col3, 16), 'baz') FROM multi_if_check;
CREATE DATABASE IF NOT EXISTS test_eqc4a8e9 
INSERT INTO type_json_dst SELECT * FROM type_json_src;
SELECT * FROM alter_00121 ORDER BY d;
CREATE TABLE test_01193_18429.table_4_884 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_9_967 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE t_json_race (`data` JSON) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 8342, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 70, merge_max_block_size = 19163, prefer_fetch_merged_part_size_threshold = 789519807, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 10143407, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 64295, primary_key_compress_block_size = 32569
INSERT INTO test_01193_18429.table_2_853 VALUES 
select has(materialize([toString(0) as x]), materialize(x));
select value from system.settings where name='async_socket_for_remote'
INSERT INTO test_01193_18429.table_2_625 VALUES 
DROP DATABASE IF EXISTS test_xqncd12c 
SELECT 'INSERT';
INSERT INTO test_01193_18429.table_3_895 VALUES 
DROP TABLE semi_right_join;
DROP DATABASE IF EXISTS test_t7gxkgzb 
CREATE TABLE test_297066317D753D2B593E763B6B4E3B37292F21322120675C41672E72262E2D79567A37417B53277C(x UInt8) Engine=Memory;
ALTER TABLE concurrent_alter_column ADD COLUMN c231 DOUBLE;
EXPLAIN SYNTAX SELECT sum(n * 2) + sum(2 * n) + sum(n / 2) + sum(1 / n) FROM (SELECT number n FROM numbers(10));
drop table tab;
CREATE DATABASE IF NOT EXISTS test_rqje6e4r 
INSERT INTO test_01193_18429.table_10_529 VALUES 
DROP DATABASE IF EXISTS test_b9g3nw0w 
CREATE TABLE test_01193_18429.table_2_441 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE INDEX idx_tab2_3 ON tab2 (col4,col3 DESC);
SELECT 'Running test stateless/00907_set_index_with_nullable_and_low_cardinality.sql from pid=1722' 
CREATE TABLE test_4E58492E47536E337D4C7D5E6A3F6F5D6F2B68623D5C4775557654567A7D473D364E7D575F222C7C(x UInt8) Engine=Memory;
SELECT max(1), count() FROM t0 AS t0 LEFT JOIN t1 ON true WHERE 1;
INSERT INTO unsorted_collapsing VALUES 
select argMax(untuple(x)) from (select (number, number + 1) as x from numbers(10));
CREATE TABLE test_46545241736D646E46542C31242C5B314E43207B757D50472D533072366E2A4E76615325445E2E49(x UInt8) Engine=Memory;
INSERT INTO globalin VALUES 
DROP TABLE dictionary_source_table;
CREATE TABLE test_01193_18429.table_9_58 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO test_trig3v1o.local (x) VALUES
SELECT tupleElement(arrayJoin([(1, 1)]), 1) FROM A_M PREWHERE tupleElement((1, 1), 1) =1;
SELECT toJSONString(-1);
SELECT domain('http://user:pass@example@.com') AS Host;
CREATE TABLE test_hllqnldx.B (`A` UInt8) ENGINE = TinyLog
SELECT [1, 2, 3]::Array(UInt32) AS c;
select count(ignore(*)) from data_02051 settings min_bytes_to_use_direct_io=1, local_filesystem_read_method='io_uring', local_filesystem_read_prefetch=0, read_priority=0, max_read_buffer_size=65505 ;
SELECT positionCaseInsensitiveUTF8(materialize(concat(' test a1ÃÂAa test', arrayStringConcat(arrayMap(x -> ' ', range(20000))))), 'a1Ã¡ÂºÂaa') AS res;
DROP DATABASE IF EXISTS test_7i8y8stm 
SELECT dateDiff('second', toDate('2014-10-26'), toDate('2014-10-27'), 'UTC');
DROP DATABASE IF EXISTS test_93sxfc8t 
SELECT sign(-1);
DROP TABLE IF EXISTS unsigned_types;
CREATE TABLE test_01193_18429.table_6_200 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT dictGetHierarchy(concat('test_6ztqwvhd', '.dictionary_with_hierarchy'), toUInt64(3))
SELECT 'SELECT toUInt32(1) >= N';
SYSTEM STOP MERGES checkouts;
SELECT age('year', toDateTime64('2015-02-02 20:30:36.200', 3, 'UTC'), toDateTime64('2023-02-02 20:30:36.200', 3, 'UTC'));
SELECT * FROM numbers(2, 2) INTO OUTFILE '/var/lib/clickhouse/user_files/test_lanqc98b/file_2.bz2'
CREATE DATABASE IF NOT EXISTS test_w3khth6i 
SYSTEM STOP MERGES mt_01451;
CREATE TABLE test_7534423F692C42486541213A7960516E232E603B226C304E266A2A553B68662B405673707D3F644E(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_6_990 VALUES 
SELECT IPv4StringToNum('127.0.0.1');
SELECT range(null);
CREATE TABLE test_01193_18429.table_10_365 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select arraySlice(materialize([1, 2, 3, 4, 5, 6, 7, 8]), -2, -1);
DROP TABLE IF EXISTS v1;
CREATE TABLE test_01193_18429.table_8_406 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE INDEX idx_tab3_5 ON tab3 (col4,col0);
INSERT INTO test_01193_18429.table_6_642 VALUES 
SELECT * FROM alter_update ORDER BY key
SYSTEM START MOVES sqllt.table
INSERT INTO 01070_window_view_watch_events.mt VALUES 
select mapContains(a, 'name') from table_map;
INSERT INTO test_01193_18429.table_2_750 VALUES 
CREATE TABLE test_5F576A2142783D417265544E24644062652A7C46723D2D7150207521287D464D4A2A5C424F784E6B(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_2_143 VALUES 
SET optimize_sorting_by_input_stream_properties = 1;
SELECT max(sketch) FROM data;
SELECT 'Running test stateless/02227_test_create_empty_sqlite_db.sh from pid=1724' 
SELECT a, e FROM t_fixed_prefix WHERE bitNot(a) = 1 AND bitNot(b) = 1 ORDER BY a, e SETTINGS optimize_read_in_order = 0
with '2018-01-12 22:33:44' as s, toDateTime(s) as datetime, toDateTime64(s, 6) as datetime64, toDate(s) as date, toDate32(s) as date32 SELECT formatDateTimeInJodaSyntax(datetime, 'yyyyy'), formatDateTimeInJodaSyntax(datetime64, 'yyyyy'), formatDateTimeInJodaSyntax(date, 'yyyyy'), formatDateTimeInJodaSyntax(date32, 'yyyyy');
SELECT '--- undefined setting ---';
SELECT round(quantileArrayMerge(0.10)((*,).1)) FROM t0;
SELECT normalizedQueryHash('[1, 2, 3]') = normalizedQueryHash('[1, ''x'']');
SELECT dictGet(concat('test_gwrtaoz4', '.test_dict_01051_d'), 'value', toUInt64(4))
GRANT SELECT ON INFORMATION_SCHEMA.* TO session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_plaintext_password_no_profiles_no_roles;
SELECT countSubstrings(NULL);
SELECT * FROM system.merge_tree_settings LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
INSERT INTO test_01193_18429.table_4_330 VALUES 
CREATE TABLE test_24433F515F4930724D7E2E7B652A602557453B79325E313A755A5473395D59523B4559445C695E3E(x UInt8) Engine=Memory;
SELECT CASE WHEN (number % 2) = 0 THEN [toInt32(1), toInt32(2)] WHEN (number % 3) = 0 THEN [toInt8(2), toInt8(3)] ELSE [toInt64(3), toInt64(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE data_01643 (`key` Int) ENGINE = MergeTree ORDER BY key SETTINGS min_rows_for_wide_part = 2, fsync_after_insert = 1, index_granularity = 18011, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 12446, prefer_fetch_merged_part_size_threshold = 3959504098, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 7098949839, index_granularity_bytes = 15395254, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 53892, primary_key_compress_block_size = 72027
INSERT INTO simple_agf_aggregating_mt SELECT number % 11151 AS a, minState(number), min(number), maxState(number), max(number), sumState(number), sum(number), sumWithOverflowState(number), sumWithOverflow(number), groupBitAndState((number % 3) + 111111110), groupBitAnd((number % 3) + 111111110), groupBitOrState(number + 111111111), groupBitOr(number + 111111111), groupBitXorState(number + 111111111), groupBitXor(number + 111111111), groupArrayArrayState([toUInt64(number % 100)]), groupArrayArray([toUInt64(number % 100)]), groupUniqArrayArrayState([toUInt64(number % 50)]), groupUniqArrayArray([toUInt64(number % 50)]), sumMapState((arrayMap(i -> toString(i), range(13)), arrayMap(i -> (number + i), range(13)))), sumMap((arrayMap(i -> toString(i), range(13)), arrayMap(i -> (number + i), range(13)))), minMapState((arrayMap(i -> toString(i), range(13)), arrayMap(i -> (number + i), range(13)))), minMap((arrayMap(i -> toString(i), range(13)), arrayMap(i -> (number + i), range(13)))), maxMapState((arrayMap(i -> toString(i), range(13)), arrayMap(i -> (number + i), range(13)))), maxMap((arrayMap(i -> toString(i), range(13)), arrayMap(i -> (number + i), range(13)))) FROM numbers(10000) GROUP BY a;
SELECT dateDiff(DAY, toDate('2019-05-05') arg_1, toDate('2019-05-06') arg_2), arg_1, arg_2;
SELECT 'Running test stateless/01077_yet_another_prewhere_test.sql from pid=1715' 
CREATE TABLE mt (`a` Int32, `timestamp` DateTime) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 4417, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 8312, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 40, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 17379706, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 60366, primary_key_compress_block_size = 72719
INSERT INTO r7 SELECT 23
SELECT quantileExactWeighted(0.5)(number, 1) FROM (SELECT number FROM system.numbers LIMIT 1001);
CREATE DATABASE IF NOT EXISTS test_wm2a00fk 
SELECT materialize([13, 14])[2::Int8];
SELECT ngramMinHashArgCaseInsensitive('');
CREATE TABLE test_5C307E416D642D4169667A5F297E536B5357273B712E3C52694C22362C69552630604C7C3E414673(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_10_338 VALUES 
SELECT 'Running test stateless/02790_optimize_skip_unused_shards_join.sql from pid=1715' 
create table merge_tree ( CounterID UInt32, StartDate Date, Sign Int8, VisitID UInt64, UserID UInt64, StartTime DateTime, ClickLogID UInt64) ENGINE = CollapsingMergeTree(StartDate, intHash32(UserID), tuple(CounterID, StartDate, intHash32(UserID), VisitID, ClickLogID), 8192, Sign);
drop table if exists rmt sync;
CREATE TABLE test_01193_18429.table_5_694 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE DATABASE IF NOT EXISTS test_75co7x1q 
CREATE TABLE test_5D3542593A4050677D387C503567264B206C493B4B6F7548302147332F227D4B30324C2932624374(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_2_783 VALUES 
SELECT murmurHash2_64([(1, 'a'), (2, 'b'), (3, 'c')]);
CREATE TABLE test_557D6D20574C2D48506C4E5A75732F4D53485E616468494870235A253B49345D3F6A5134766D5175(x UInt8) Engine=Memory;
CREATE DICTIONARY test_k0sd0f6m.restricted_dict (`key` UInt64, `value` String) PRIMARY KEY key SOURCE(EXECUTABLE(COMMAND 'echo -E "1\thello"' FORMAT TabSeparated)) LIFETIME(MIN 0 MAX 1) LAYOUT(CACHE(SIZE_IN_CELLS 10))
CREATE INDEX idx_tab2_2 ON tab2 (col3 DESC);
SELECT CASE WHEN (number % 2) = 0 THEN [toInt32(1), toInt32(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toUInt16(3), toUInt16(3)] END FROM system.numbers LIMIT 10;
SELECT dictGetHierarchy('hierachical_cache_dictionary', number) FROM system.numbers LIMIT 6;
optimize table ttl final;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (109 < 47 AND 58 > 0 ? 109 : 0)), throwIf(last != (109 < 47 AND 58 > 0 ? least(47 - 1, 109 + 58 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(47) LIMIT 109, 58);
CREATE TABLE join (k UInt64, s String) ENGINE = Join(ANY, LEFT, k) SETTINGS persistent=1;
SELECT quantileIf(toFloat32(number) , number > 100) FROM numbers(90);
SELECT count(1) FROM test_table WHERE 7 / (n % 5) > 2;
SELECT timeSlots(toDateTime('2000-01-02 03:04:05', 'UTC'), toUInt32(600), 30);
CREATE DATABASE IF NOT EXISTS test_m50dmo1i 
SELECT splitByString('=', 'a==b=c=d') SETTINGS splitby_max_substrings_includes_remaining_string = 1;
SELECT groupArrayMovingSum(257)(-9223372036854775808), groupArrayMovingSum(1048575)(18446744073709551615), groupArrayMovingSum(9223372036854775807)(`number` * 9223372036854775807) FROM numbers(3)
select 254 = multiSearchFirstIndex(materialize('string'), ['o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'str']);
SELECT * FROM map_test_index_map_keys WHERE map['K0'] IN 'V0' SETTINGS force_data_skipping_indices='map_bloom_filter_keys';
INSERT INTO test_01193_18429.table_4_257 VALUES 
SELECT arrayReduce('sum', [NULL]::Array(Nullable(UInt8))) as a, toTypeName(a);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (100 < 64 AND 12 > 0 ? 100 : 0)), throwIf(last != (100 < 64 AND 12 > 0 ? least(64 - 1, 100 + 12 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(64) LIMIT 100, 12);
select x from tab_str
SELECT toIntervalMillisecond(NULL);
drop table if exists mt_compact;
INSERT INTO test_y9d6pdpj.t_async_insert FORMAT LineAsString
DESCRIBE (SELECT COLUMNS(id) FROM test_table);
SELECT hex(toString(initializeAggregation('uniqExactState', initializeAggregation('uniqState', 0))));
INSERT INTO `table` VALUES 
CREATE TABLE prewhere_move (`x1` Int, `x2` Int, `x3` Int, `x4` Int) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 36575, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 11438, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 29439925, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 50698, primary_key_compress_block_size = 47579
CREATE TABLE test_7655417C2F3C59386B23492E4C2C56255F6D5650427653557062605C4751665A21682722207D7341(x UInt8) Engine=Memory;
SELECT any(NULL, NULL, NULL);
DROP DATABASE IF EXISTS test_ecu4ls0s 
INSERT INTO arrow_nullable_arrays VALUES 
INSERT INTO test_01193_18429.table_5_973 VALUES 
CREATE DATABASE IF NOT EXISTS test_t0sei65h 
SELECT right('ÃÂÃÂÃÂ¸ÃÂ²ÃÂµÃÂ', -4);
CREATE TABLE test_25725B675F3C54565F252F442C7C4076552572242F445246236236445E36703C5C7A673E2964687E(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_s8kh3vuo 
SELECT * FROM t1_00841;
select CAST(1.0, 'Decimal(15,2)') > CAST(-1, 'Float64');
CREATE TABLE nested_table (table Nested(eLeM1 Int32, elEm2 String, ELEM3 Float32)) engine=Memory
SELECT has(col1, 2) FROM test1_00395;
SELECT arrayJoin(CAST(['hello', 'world'] AS Array(FixedString(5)))) LIKE '%xyz';
SELECT avgWeighted(x, w) FROM values('x Float64, w UInt8', (0, 0), (1, 0));
SELECT pointInPolygon(NULL, NULL, NULL);
CREATE TABLE test_01193_18429.table_4_927 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE DATABASE IF NOT EXISTS test_6vw1oyrh 
SELECT isConstant(x) FROM (SELECT 1 x UNION ALL SELECT 2);
SELECT multiIf((number % 2) = 0, toFloat32(1), (number % 3) = 0, toFloat64(2), toFloat64(3)) FROM system.numbers LIMIT 10;
ALTER TABLE concurrent_alter_column ADD COLUMN c300 DOUBLE;
select a1, a2, b1, b2 from tab1 first any left join tab2 second_ on tab1.b1 = tab2.a2;
CREATE TABLE written_bytes_02247(s String) ENGINE = Memory
SELECT toDate(toDateTime(1412106600), 'Pacific/Pitcairn');
CREATE TABLE tbl(x Array(Array(Int32)), y Nested(z String, w Float32)) ENGINE=TinyLog
select has(materialize([toString(0)]), toString(number % 3)) from system.numbers limit 10;
SELECT 'Running test stateless/01113_local_dictionary_type_conversion.sql from pid=1705' 
with '2018-01-12 22:33:44' as s, toDateTime(s) as datetime, toDateTime64(s, 6) as datetime64, toDate(s) as date, toDate32(s) as date32 SELECT formatDateTimeInJodaSyntax(datetime, 'yyyy'), formatDateTimeInJodaSyntax(datetime64, 'yyyy'), formatDateTimeInJodaSyntax(date, 'yyyy'), formatDateTimeInJodaSyntax(date32, 'yyyy');
INSERT INTO test_01193_18429.table_3_856 VALUES 
DROP DATABASE IF EXISTS test_okbi0btt 
select makeDateTime64(1991, 8, 24, 21, 4, 0, 1234, 1, 'CET');
INSERT INTO test_02908_r1_153 SELECT rand64() FROM numbers(5);
CREATE DATABASE IF NOT EXISTS test_5cqld6s2 
SELECT multiIf((number % 2) = 0, toInt32(1), (number % 3) = 0, toInt32(2), toInt16(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_5_416 VALUES 
DROP TABLE 02703_keeper_map_concurrent_1
SELECT create_table_query FROM system.tables WHERE name = 'test_table_default' AND database = '02097_db';
INSERT INTO test_01193_18429.table_10_890 VALUES 
select interface, is_secure from system.query_log where query_id = '2246_test_anjocs24_client_nonsecure' and type = 'QueryFinish' and current_database = currentDatabase()
show create f;
TRUNCATE TABLE t_json_race
select sqrt(0) = 0;
INSERT INTO test_01193_18429.table_10_834 VALUES 
CREATE TABLE 01523_test(value Int32) ENGINE=Log;
select concat(toFixedString('a', 1), 'b', 'c') == 'abc' from system.numbers limit 5;
SELECT 'SELECT CAST(N as DateTime64(9, \'Europe/Minsk\'))';
CREATE DATABASE IF NOT EXISTS test_9f6tufa6 
DROP TABLE IF EXISTS replacing;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), CAST(N as DateTime64(6, 'Europe/Minsk')) as r FORMAT CSV;
SELECT count(), min(length(c.d)) AS minExpr, min(dcount) AS minAlias, max(length(c.d)) AS maxExpr, max(dcount) AS maxAlias, b FROM max_length_alias_14053__fuzz_45 GROUP BY b;
SELECT multiIf((number % 2) = 0, [toUInt32(1), toUInt32(2)], (number % 3) = 0, [toUInt32(2), toUInt32(3)], [toUInt64(3), toUInt64(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_30695A59266E272941797C4670385361302A7A7937716B4B2B6026636C202D2724483C5B7D453B37(x UInt8) Engine=Memory;
SELECT multiIf(1, toFixedString(col2, 16), 1, 'bar', toFixedString('baz', 16)) FROM multi_if_check;
SELECT 1, 5, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (1 < 13 AND 5 > 0 ? 1 : 0)), throwIf(last != (1 < 13 AND 5 > 0 ? least(13 - 1, 1 + 5 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 1, 5);
DROP TABLE dict_db_02179.dict_data;
INSERT INTO test_01193_18429.table_6_319 VALUES 
SELECT ProfileEvents['SelectedMarks'] FROM system.query_log WHERE event_date >= yesterday() AND current_database = currentDatabase() AND (query_id = 'test_q0xvhh1q_merge_engine_set_index_2695518563') AND (type = 'QueryFinish');
SELECT 'Running test stateless/01030_limit_by_with_ties_error.sh from pid=1714' 
SELECT groupArray(groupArray(`number`)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS `x` FROM `test_9l2822ul`.`t_01568` GROUP BY `number` % 3 ORDER BY `x` ASC
DROP DATABASE IF EXISTS test_772pxdl2 
CREATE TABLE test_3A75742B3B566C45573B765970677C2340746A2E7E56662D3F6E24334A48256936624E5D7652434B(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_7_70 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_8_97 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP DATABASE IF EXISTS test_vdx3clqc 
INSERT INTO test_01193_18429.table_4_958 VALUES 
SELECT 'Running test stateless/01720_country_perimeter_and_area.sh from pid=1722' 
SELECT * FROM data_01515 WHERE assumeNotNull(d1_null) = 0 SETTINGS force_data_skipping_indices='d1_null_idx';
CREATE TABLE test_54756B2C38364F564152692760417B3E6E4C5F404A6A57234C6F3E3B2A4E4728736F302645314E26(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_1_298 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO recompression_table_compact SELECT now() - INTERVAL 2 MONTH, 2, toString(number) from numbers(1000, 1000);
drop table many_mutations;
DROP DATABASE IF EXISTS test_vkgowmnq 
INSERT INTO test_01193_18429.table_6_722 VALUES 
SELECT 'ALL INNER | bs = 13 | copmosite key';
select format('{}{}{}', 'a', materialize(toFixedString('b', 1)), materialize(toFixedString('c', 1))) == 'abc';
INSERT INTO r4 SELECT 71
set optimize_aggregators_of_group_by_keys = 1;
CREATE TABLE test_01193_18429.table_1_708 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_7D3B73756D734B667E4357372A7D37632B3B2C703236745E56272A5A7C5E37387767542B40495D6B(x UInt8) Engine=Memory;
INSERT INTO test_race_condition_landing SELECT number, toString(number), toString(number) from system.numbers limit 40160, 500 settings ignore_materialized_views_with_dropped_target_table=1
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toTime(N, 'Asia/Istanbul') as r FORMAT CSV;
INSERT INTO nested_test (x, `nest.col1`, `nest.col2`) values 
ALTER TABLE table_for_concurrent_alter MODIFY SETTING parts_to_throw_insert = 116, parts_to_delay_insert = 116, min_merge_bytes_to_use_direct_io = 116
DROP TABLE 01684_database_for_cache_dictionary.simple_key_hierarchy_table;
SELECT t as e, toTypeName(e) FROM ttta FULL JOIN tttb USING (t.t.t.t.t);
DROP TABLE test2
CREATE TABLE local (x UInt8) ENGINE = Memory;
SELECT toTypeName(r.lc), toTypeName(materialize(r.lc)), r.lc, materialize(r.lc), toTypeName(l.lc), toTypeName(materialize(l.lc)), l.lc, materialize(l.lc) FROM l_lc AS l FULL JOIN r USING (x) ORDER BY x, r.lc, l.lc;
DROP DATABASE IF EXISTS test_d9ius9wj 
create table m (dummy UInt8) ENGINE = Distributed('test_cluster_two_shards', 'system', 'one')
SYSTEM SYNC REPLICA wrong_metadata;
DETACH TABLE distributed_02184;
DROP DATABASE IF EXISTS test_m7rkx7gu 
select hex(sipHash64Keyed((toUInt64(506097522914230528), toUInt64(1084818905618843912)), char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)));
DELETE FROM t_materialize_delete WHERE id % 7 = 4;
CREATE TABLE test_2E556B662D5F3B23624E4A647C545F3B5576324B75666E265479405D386F7C72264E68706578553B(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_6cfjspak 
SELECT arrayCompact([1.2::Decimal(60, 30) AS x, x, x, x, 3.45::Decimal(3, 2) AS y, y, x, x]);
alter table many_mutations delete where y = 564 * 2 settings mutations_sync = 0;
SELECT rightPad('abc', 3), rightPad('abc', 3::Int32);
SELECT * FROM system.licenses LIMIT 10000 SETTINGS allow_introspection_functions = 1 FORMAT Null
SELECT CASE WHEN (number % 2) = 0 THEN toFloat32(1) WHEN (number % 3) = 0 THEN toInt32(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
SELECT s, replaceOne(s, '_', 'o') AS a, replaceRegexpOne(s, '_', 'o') AS b, a = b FROM (SELECT arrayJoin(['.__', '.']) AS s);
SELECT 'toStartOfWeek;toDate32;false', toStartOfWeek(toDate32('1920-02-02')) SETTINGS enable_extended_results_for_datetime_functions = false;
CREATE MATERIALIZED VIEW mv TO output AS SELECT key, dictGetUInt64('dict_in_01023.dict', 'val', key) val FROM dist_out;
INSERT INTO dst_2 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 59
SELECT has([111, NULL, 222], materialize(111));
CREATE DATABASE IF NOT EXISTS test_36ytsqum 
INSERT INTO test_01193_18429.table_5_240 VALUES 
CREATE TABLE test_01193_18429.table_2_914 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_max_size_drop ENGINE = MergeTree ORDER BY number SETTINGS index_granularity = 20052, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 24059, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 10956498, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 21188, primary_key_compress_block_size = 90447 AS SELECT number FROM numbers(1000)
DROP DATABASE IF EXISTS test_jts8tut2 
CREATE DATABASE IF NOT EXISTS test_ykm8prxq 
INSERT INTO r9 SELECT 44 % 10 = 9 ? 44 - 1 : 44
GRANT SELECT ON system.one TO session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_plaintext_password_two_profiles_no_roles;
DROP DATABASE IF EXISTS test_l0vwrepi 
SELECT 1 FROM numbers(1000000) FORMAT RowBinary
CREATE TABLE test_01193_18429.table_7_343 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE INDEX idx_tab3_0 ON tab3 (col1,col4 DESC);
SELECT CASE WHEN (number % 2) = 0 THEN [toInt16(1), toInt16(2)] WHEN (number % 3) = 0 THEN [toUInt16(2), toUInt16(3)] ELSE [toUInt8(3), toUInt8(3)] END FROM system.numbers LIMIT 10;
DROP ROW POLICY IF EXISTS test_filter_policy_2 ON test_table;
DROP TABLE t_sparse_alter;
INSERT INTO test_01193_18429.table_3_17 VALUES 
TRUNCATE TABLE join_test;
CREATE TABLE test_01193_18429.table_5_655 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT timestamp('2013-12-31 12:00:00', '12:01:02.1');
SELECT 'Running test stateless/00111_shard_external_sort_distributed.sql from pid=1720' 
select v, variantElement(v, 'Int32') from format(CSV, 'v Variant(String, Int32, Int64)', '\\N\n"string"\n-1\n0\n10000000000\n42d42') format CSV;
INSERT INTO src_0 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 17
INSERT INTO src VALUES /* (19, 3) */ 
CREATE TABLE test_2E3A7E63372A79552E686E7C254B272D72744559386D26767E59735D6726277575447A4F312C4250(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_pj9o67g7 
SELECT '::ffff:127.0.0.1 is ipv6 string: ', isIPv6String('::ffff:127.0.0.1');
CREATE TABLE t2 AS remote('127.0.0.1', system.numbers);
CREATE TABLE test_table_3 (`key` UInt64, `value` UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/02962_system_sync_replica_lightweight_from_modifier_test_87x3igkp/test_table', '3') ORDER BY key SETTINGS index_granularity = 41789, min_bytes_for_wide_part = 23797492, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 26, prefer_fetch_merged_part_size_threshold = 8232197432, vertical_merge_algorithm_min_rows_to_activate = 563505, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 7613754576, index_granularity_bytes = 30142180, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 58102, primary_key_compress_block_size = 92486
INSERT INTO arrow_types1 values 
SELECT 'SELECT toYYYYMM(N, \'Asia/Istanbul\')';
CREATE DATABASE IF NOT EXISTS test_ja67d44n 
select v, variantElement(v, 'Float64') from format(CSV, 'v Variant(String, Float64)', '\\N\n"string"\n42.42\n42.d42') format CSV;
INSERT INTO test_01193_18429.table_5_718 VALUES 
CREATE DATABASE IF NOT EXISTS test_cb70b1eq 
SELECT 'dt64 != const dt' FROM dt64test WHERE dt64_column != toDateTime('2020-01-13 13:37:00');
CREATE DATABASE IF NOT EXISTS test_3d3uig77 
INSERT INTO r2 SELECT 22 % 10 = 2 ? 22 - 1 : 22
SELECT toDecimal128('18446744073709551615', 8) AS x, toUInt64(x);
SELECT * FROM dst ORDER BY x;
INSERT INTO test_01114_1.mt SELECT 's' || toString(number) FROM numbers(5);
INSERT INTO test_01193_18429.table_6_194 VALUES 
drop table if exists tbl_8parts_2granules_rnd;
SELECT count() FROM t_cnf_fuzz WHERE (c2 AND c6) OR (c5) OR ((NOT c3) AND c3 AND c6 AND (NOT c9)) OR (c8 AND (NOT c8)) OR ((NOT c9) AND (NOT c8) AND c5 AND c4) OR (c1 AND c6 AND (NOT c1)) OR (c9 AND c0 AND (NOT c3) AND c1) SETTINGS convert_query_to_cnf = 1
select number % 2 ? materialize(1)::Decimal(18, 10) : 2 FROM numbers(3);
CREATE TABLE test_01193_18429.table_1_193 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP TABLE IF EXISTS test_xy;
SELECT v FROM ary_lc_null WHERE v IN (SELECT v FROM ary_lc_null);
SELECT 'Check total_bytes/total_rows for Memory';
SELECT 'a1,a2 n', arrayEnumerateUniqRanked(a1,a2) FROM arrays_test ORDER BY a1, a2;
select round(1000 * ngramDistanceCaseInsensitive('ABCdefgH', 'aaaaaaaa'));
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), toYear(N, 'Asia/Istanbul') as r FORMAT CSV;
INSERT INTO mt VALUES /* (2, 2) */ 
select arrayPopFront(Null);
CREATE DATABASE IF NOT EXISTS test_c48p4bi4 
SELECT 0 = dictHas(concat('test_7kssh40k', '.dict_ipv4_trie'), tuple(IPv4StringToNum('0.0.0.0')))
SELECT (SELECT Null WHERE 1);
SELECT fact_3_id FROM grouping_sets GROUP BY GROUPING SETS ((fact_3_id, fact_4_id)) ORDER BY fact_3_id ASC;
SELECT if(x = 0, 'ok', 'fail') FROM (SELECT if(toUInt8(0), NULL, toNullable(toUInt8(0))) AS x);
CREATE TABLE test_01193_18429.table_9_168 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT CASE WHEN (number % 2) = 0 THEN toFloat64(1) WHEN (number % 3) = 0 THEN toFloat64(2) ELSE toFloat64(3) END FROM system.numbers LIMIT 10;
SELECT 'Running test stateless/00833_sleep_overflow.sql from pid=1726' 
SELECT CASE WHEN (number % 2) = 0 THEN toUInt8(1) WHEN (number % 3) = 0 THEN toUInt16(2) ELSE toUInt8(3) END FROM system.numbers LIMIT 10;
select '-------toStartOfFifteenMinutes---------';
DROP DATABASE IF EXISTS test_6ko6ujx9 
SELECT 'SELECT N - N';
CREATE TABLE test_522B682D7276345955286A35542F21702C295E757A473E5976504E2A3A2A582B794F7E353A353570(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_6_273 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (110 < 83 AND 24 > 0 ? 110 : 0)), throwIf(last != (110 < 83 AND 24 > 0 ? least(83 - 1, 110 + 24 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(83) LIMIT 110, 24);
INSERT INTO src VALUES /* (-38, 1) */ 
CREATE DATABASE IF NOT EXISTS test_2nyiix39 
select IPv6NumToString(IPv6StringToNum(materialize('::ffff:127.0.0.1') as p) as n) == p;
SELECT wordShingleMinHashArgUTF8(NULL, NULL, NULL);
SELECT 127, -129, 127 = -129, 127 != -129, 127 < -129, 127 <= -129, 127 > -129, 127 >= -129, -129 = 127, -129 != 127, -129 < 127, -129 <= 127, -129 > 127, -129 >= 127 , toUInt8(127) = toInt16(-129), toUInt8(127) != toInt16(-129), toUInt8(127) < toInt16(-129), toUInt8(127) <= toInt16(-129), toUInt8(127) > toInt16(-129), toUInt8(127) >= toInt16(-129), toInt16(-129) = toUInt8(127), toInt16(-129) != toUInt8(127), toInt16(-129) < toUInt8(127), toInt16(-129) <= toUInt8(127), toInt16(-129) > toUInt8(127), toInt16(-129) >= toUInt8(127) , toUInt8(127) = toInt32(-129), toUInt8(127) != toInt32(-129), toUInt8(127) < toInt32(-129), toUInt8(127) <= toInt32(-129), toUInt8(127) > toInt32(-129), toUInt8(127) >= toInt32(-129), toInt32(-129) = toUInt8(127), toInt32(-129) != toUInt8(127), toInt32(-129) < toUInt8(127), toInt32(-129) <= toUInt8(127), toInt32(-129) > toUInt8(127), toInt32(-129) >= toUInt8(127) , toUInt8(127) = toInt64(-129), toUInt8(127) != toInt64(-129), toUInt8(127) < toInt64(-129), toUInt8(127) <= toInt64(-129), toUInt8(127) > toInt64(-129), toUInt8(127) >= toInt64(-129), toInt64(-129) = toUInt8(127), toInt64(-129) != toUInt8(127), toInt64(-129) < toUInt8(127), toInt64(-129) <= toUInt8(127), toInt64(-129) > toUInt8(127), toInt64(-129) >= toUInt8(127) , toInt8(127) = toInt16(-129), toInt8(127) != toInt16(-129), toInt8(127) < toInt16(-129), toInt8(127) <= toInt16(-129), toInt8(127) > toInt16(-129), toInt8(127) >= toInt16(-129), toInt16(-129) = toInt8(127), toInt16(-129) != toInt8(127), toInt16(-129) < toInt8(127), toInt16(-129) <= toInt8(127), toInt16(-129) > toInt8(127), toInt16(-129) >= toInt8(127) , toInt8(127) = toInt32(-129), toInt8(127) != toInt32(-129), toInt8(127) < toInt32(-129), toInt8(127) <= toInt32(-129), toInt8(127) > toInt32(-129), toInt8(127) >= toInt32(-129), toInt32(-129) = toInt8(127), toInt32(-129) != toInt8(127), toInt32(-129) < toInt8(127), toInt32(-129) <= toInt8(127), toInt32(-129) > toInt8(127), toInt32(-129) >= toInt8(127) , toInt8(127) = toInt64(-129), toInt8(127) != toInt64(-129), toInt8(127) < toInt64(-129), toInt8(127) <= toInt64(-129), toInt8(127) > toInt64(-129), toInt8(127) >= toInt64(-129), toInt64(-129) = toInt8(127), toInt64(-129) != toInt8(127), toInt64(-129) < toInt8(127), toInt64(-129) <= toInt8(127), toInt64(-129) > toInt8(127), toInt64(-129) >= toInt8(127) , toUInt16(127) = toInt16(-129), toUInt16(127) != toInt16(-129), toUInt16(127) < toInt16(-129), toUInt16(127) <= toInt16(-129), toUInt16(127) > toInt16(-129), toUInt16(127) >= toInt16(-129), toInt16(-129) = toUInt16(127), toInt16(-129) != toUInt16(127), toInt16(-129) < toUInt16(127), toInt16(-129) <= toUInt16(127), toInt16(-129) > toUInt16(127), toInt16(-129) >= toUInt16(127) , toUInt16(127) = toInt32(-129), toUInt16(127) != toInt32(-129), toUInt16(127) < toInt32(-129), toUInt16(127) <= toInt32(-129), toUInt16(127) > toInt32(-129), toUInt16(127) >= toInt32(-129), toInt32(-129) = toUInt16(127), toInt32(-129) != toUInt16(127), toInt32(-129) < toUInt16(127), toInt32(-129) <= toUInt16(127), toInt32(-129) > toUInt16(127), toInt32(-129) >= toUInt16(127) , toUInt16(127) = toInt64(-129), toUInt16(127) != toInt64(-129), toUInt16(127) < toInt64(-129), toUInt16(127) <= toInt64(-129), toUInt16(127) > toInt64(-129), toUInt16(127) >= toInt64(-129), toInt64(-129) = toUInt16(127), toInt64(-129) != toUInt16(127), toInt64(-129) < toUInt16(127), toInt64(-129) <= toUInt16(127), toInt64(-129) > toUInt16(127), toInt64(-129) >= toUInt16(127) , toInt16(127) = toInt16(-129), toInt16(127) != toInt16(-129), toInt16(127) < toInt16(-129), toInt16(127) <= toInt16(-129), toInt16(127) > toInt16(-129), toInt16(127) >= toInt16(-129), toInt16(-129) = toInt16(127), toInt16(-129) != toInt16(127), toInt16(-129) < toInt16(127), toInt16(-129) <= toInt16(127), toInt16(-129) > toInt16(127), toInt16(-129) >= toInt16(127) , toInt16(127) = toInt32(-129), toInt16(127) != toInt32(-129), toInt16(127) < toInt32(-129), toInt16(127) <= toInt32(-129), toInt16(127) > toInt32(-129), toInt16(127) >= toInt32(-129), toInt32(-129) = toInt16(127), toInt32(-129) != toInt16(127), toInt32(-129) < toInt16(127), toInt32(-129) <= toInt16(127), toInt32(-129) > toInt16(127), toInt32(-129) >= toInt16(127) , toInt16(127) = toInt64(-129), toInt16(127) != toInt64(-129), toInt16(127) < toInt64(-129), toInt16(127) <= toInt64(-129), toInt16(127) > toInt64(-129), toInt16(127) >= toInt64(-129), toInt64(-129) = toInt16(127), toInt64(-129) != toInt16(127), toInt64(-129) < toInt16(127), toInt64(-129) <= toInt16(127), toInt64(-129) > toInt16(127), toInt64(-129) >= toInt16(127) , toUInt32(127) = toInt16(-129), toUInt32(127) != toInt16(-129), toUInt32(127) < toInt16(-129), toUInt32(127) <= toInt16(-129), toUInt32(127) > toInt16(-129), toUInt32(127) >= toInt16(-129), toInt16(-129) = toUInt32(127), toInt16(-129) != toUInt32(127), toInt16(-129) < toUInt32(127), toInt16(-129) <= toUInt32(127), toInt16(-129) > toUInt32(127), toInt16(-129) >= toUInt32(127) , toUInt32(127) = toInt32(-129), toUInt32(127) != toInt32(-129), toUInt32(127) < toInt32(-129), toUInt32(127) <= toInt32(-129), toUInt32(127) > toInt32(-129), toUInt32(127) >= toInt32(-129), toInt32(-129) = toUInt32(127), toInt32(-129) != toUInt32(127), toInt32(-129) < toUInt32(127), toInt32(-129) <= toUInt32(127), toInt32(-129) > toUInt32(127), toInt32(-129) >= toUInt32(127) , toUInt32(127) = toInt64(-129), toUInt32(127) != toInt64(-129), toUInt32(127) < toInt64(-129), toUInt32(127) <= toInt64(-129), toUInt32(127) > toInt64(-129), toUInt32(127) >= toInt64(-129), toInt64(-129) = toUInt32(127), toInt64(-129) != toUInt32(127), toInt64(-129) < toUInt32(127), toInt64(-129) <= toUInt32(127), toInt64(-129) > toUInt32(127), toInt64(-129) >= toUInt32(127) , toInt32(127) = toInt16(-129), toInt32(127) != toInt16(-129), toInt32(127) < toInt16(-129), toInt32(127) <= toInt16(-129), toInt32(127) > toInt16(-129), toInt32(127) >= toInt16(-129), toInt16(-129) = toInt32(127), toInt16(-129) != toInt32(127), toInt16(-129) < toInt32(127), toInt16(-129) <= toInt32(127), toInt16(-129) > toInt32(127), toInt16(-129) >= toInt32(127) , toInt32(127) = toInt32(-129), toInt32(127) != toInt32(-129), toInt32(127) < toInt32(-129), toInt32(127) <= toInt32(-129), toInt32(127) > toInt32(-129), toInt32(127) >= toInt32(-129), toInt32(-129) = toInt32(127), toInt32(-129) != toInt32(127), toInt32(-129) < toInt32(127), toInt32(-129) <= toInt32(127), toInt32(-129) > toInt32(127), toInt32(-129) >= toInt32(127) , toInt32(127) = toInt64(-129), toInt32(127) != toInt64(-129), toInt32(127) < toInt64(-129), toInt32(127) <= toInt64(-129), toInt32(127) > toInt64(-129), toInt32(127) >= toInt64(-129), toInt64(-129) = toInt32(127), toInt64(-129) != toInt32(127), toInt64(-129) < toInt32(127), toInt64(-129) <= toInt32(127), toInt64(-129) > toInt32(127), toInt64(-129) >= toInt32(127) , toUInt64(127) = toInt16(-129), toUInt64(127) != toInt16(-129), toUInt64(127) < toInt16(-129), toUInt64(127) <= toInt16(-129), toUInt64(127) > toInt16(-129), toUInt64(127) >= toInt16(-129), toInt16(-129) = toUInt64(127), toInt16(-129) != toUInt64(127), toInt16(-129) < toUInt64(127), toInt16(-129) <= toUInt64(127), toInt16(-129) > toUInt64(127), toInt16(-129) >= toUInt64(127) , toUInt64(127) = toInt32(-129), toUInt64(127) != toInt32(-129), toUInt64(127) < toInt32(-129), toUInt64(127) <= toInt32(-129), toUInt64(127) > toInt32(-129), toUInt64(127) >= toInt32(-129), toInt32(-129) = toUInt64(127), toInt32(-129) != toUInt64(127), toInt32(-129) < toUInt64(127), toInt32(-129) <= toUInt64(127), toInt32(-129) > toUInt64(127), toInt32(-129) >= toUInt64(127) , toUInt64(127) = toInt64(-129), toUInt64(127) != toInt64(-129), toUInt64(127) < toInt64(-129), toUInt64(127) <= toInt64(-129), toUInt64(127) > toInt64(-129), toUInt64(127) >= toInt64(-129), toInt64(-129) = toUInt64(127), toInt64(-129) != toUInt64(127), toInt64(-129) < toUInt64(127), toInt64(-129) <= toUInt64(127), toInt64(-129) > toUInt64(127), toInt64(-129) >= toUInt64(127) , toInt64(127) = toInt16(-129), toInt64(127) != toInt16(-129), toInt64(127) < toInt16(-129), toInt64(127) <= toInt16(-129), toInt64(127) > toInt16(-129), toInt64(127) >= toInt16(-129), toInt16(-129) = toInt64(127), toInt16(-129) != toInt64(127), toInt16(-129) < toInt64(127), toInt16(-129) <= toInt64(127), toInt16(-129) > toInt64(127), toInt16(-129) >= toInt64(127) , toInt64(127) = toInt32(-129), toInt64(127) != toInt32(-129), toInt64(127) < toInt32(-129), toInt64(127) <= toInt32(-129), toInt64(127) > toInt32(-129), toInt64(127) >= toInt32(-129), toInt32(-129) = toInt64(127), toInt32(-129) != toInt64(127), toInt32(-129) < toInt64(127), toInt32(-129) <= toInt64(127), toInt32(-129) > toInt64(127), toInt32(-129) >= toInt64(127) , toInt64(127) = toInt64(-129), toInt64(127) != toInt64(-129), toInt64(127) < toInt64(-129), toInt64(127) <= toInt64(-129), toInt64(127) > toInt64(-129), toInt64(127) >= toInt64(-129), toInt64(-129) = toInt64(127), toInt64(-129) != toInt64(127), toInt64(-129) < toInt64(127), toInt64(-129) <= toInt64(127), toInt64(-129) > toInt64(127), toInt64(-129) >= toInt64(127) 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), toStartOfISOYear(N, 'Asia/Istanbul') as r FORMAT CSV;
CREATE TABLE orc_lc (lc LowCardinality(String), array_lc Array(LowCardinality(String)), tuple_lc Tuple(LowCardinality(String))) ENGINE = Memory()
DROP DATABASE IF EXISTS test_ulnz6giq 
SELECT sum(decimal32 - 2) From test_table;
INSERT INTO test_01193_18429.table_7_797 VALUES 
alter table test update value = value + 10 where 1
SELECT 3, sleep(0.0125752)
CREATE TABLE test_01193_18429.table_1_751 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT toTypeName(arrayAvg([toInt128(0)])), toTypeName(arrayAvg([toInt256(0)])), toTypeName(arrayAvg([toUInt256(0)]));
GRANT SELECT ON INFORMATION_SCHEMA.* TO session_log_test_user_ad5a4170e3caf8c9a933fc20c66e38da_sha256_password_two_profiles_no_roles;
CREATE TABLE test_01193_18429.table_7_239 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE rmt (`n` int, `m` int, `s` String) ENGINE = ReplicatedMergeTree('/test/01155_old_mutation_parts_to_do_test_ddhukjfn/rmt', '1') ORDER BY n SETTINGS max_replicated_mutations_in_queue = 0, index_granularity = 62694, min_bytes_for_wide_part = 760822180, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 40, merge_max_block_size = 8819, prefer_fetch_merged_part_size_threshold = 8454792208, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 83, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 22260307, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 70897, primary_key_compress_block_size = 13118
CREATE INDEX idx_tab4_3 ON tab4 (col0,col1 DESC);
SET allow_experimental_alter_materialized_view_structure = 1;
INSERT INTO preferred_block_size_bytes (s) SELECT '16_bytes_-_-_-_' AS s FROM system.numbers LIMIT 10, 90
INSERT INTO test_01193_18429.table_2_399 VALUES 
select count(), sum(number) from file('02841.parquet') where indexHint(mostly_null_lc is not NULL);
CREATE INDEX idx_tab2_1 ON tab2 (col1,col3);
CREATE TABLE test_02908_r3_228 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_228', 'r3') ORDER BY tuple()
INSERT INTO mt VALUES /* (15, 2) */ 
SELECT CASE WHEN (col1 % 2) = 0 THEN toFixedString(col2, 16) WHEN (col1 % 3) = 0 THEN toFixedString('bar', 16) ELSE toFixedString(col4, 16) END FROM multi_if_check;
drop table join;
CREATE DATABASE IF NOT EXISTS test_xuj2ixrr 
CREATE DATABASE IF NOT EXISTS test_ehe28xc4 
INSERT INTO test_01193_18429.table_4_210 VALUES 
INSERT INTO test_01193_18429.table_4_757 VALUES 
CREATE TABLE test_3A5C574D2C435E67384559525E7D387C777E2A7333246175707E765D7076453978422A214C723C41(x UInt8) Engine=Memory;
select (1, (2, 'foo')) in tuple((1, (3, 'b')), (1, (2, 'foo')));
SELECT 'type;toStartOfFifteenMinutes;toDateTime64;true', toTypeName(toStartOfFifteenMinutes(toDateTime64('1920-02-02 10:20:30', 3, 'UTC'), 'UTC')) SETTINGS enable_extended_results_for_datetime_functions = true;
select 2 = sequenceCount('(?1)(?1)(?1)(?1)')(time, data = 0, data = 1, data = 2, data = 3) from sequence_test;
DROP DATABASE IF EXISTS test_i4dnijno 
alter table lc_empty_part_bug delete where id < 100;
CREATE TABLE test_5F365724615E292221396E693E3E7459733E64797540544F5073626A69795F312020634857362024(x UInt8) Engine=Memory;
SELECT '--- Memory ---';
create table test engine=File(JSONEachRow, 'data.jsonl')
SELECT 'Dates';
select v, variantElement(v, 'UInt64') from format(CSV, 'v Variant(String, UInt64, Int128)', '\\N\n"string"\n-1\n0\n10000000000000000000000\n42d42') format CSV;
DROP TABLE test_parallel_parsing_02099
CREATE DATABASE IF NOT EXISTS test_celo4k1d 
SELECT k1, k2, k3, sum(value) v FROM t_proj_external GROUP BY k1, k2, k3 ORDER BY k1, k2, k3 SETTINGS optimize_use_projections = 0;
with it as ( select * from numbers(1) ) select it.number, i.number from it as i;
SELECT count() FROM binary_op_mono5 WHERE i - 1000 = 1234;
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT as N SELECT toTypeName(r), N - toUInt16(1) as r FORMAT CSV;
SELECT leftUTF8('ÃÂÃÂÃÂ¸ÃÂ²ÃÂµÃÂ', 13);
SELECT 'Running test stateless/01785_pmj_lc_bug.sql from pid=1726' 
CREATE DICTIONARY 01681_database_for_cache_dictionary.cache_dictionary_simple_key_hierarchy ( id UInt64, parent_id UInt64 HIERARCHICAL ) PRIMARY KEY id SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_hierarchy_table')) LIFETIME(MIN 1 MAX 1000) LAYOUT(CACHE(SIZE_IN_CELLS 10));
INSERT INTO test_01193_18429.table_2_138 VALUES 
alter table many_mutations delete where y = 621 * 2 settings mutations_sync = 0;
INSERT INTO test_01193_18429.table_4_850 VALUES 
DROP DATABASE IF EXISTS test_hmlxpk76 
select 1 intersect select 1 except select 2 intersect select 1 except select 3 intersect select 1;
DROP TABLE IF EXISTS xp;
CREATE DATABASE IF NOT EXISTS test_65f13ccp 
DROP TABLE IF EXISTS table1;
INSERT INTO test_01193_18429.table_1_722 VALUES 
CREATE TABLE test_01193_18429.table_8_485 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
select a, b, ntile(100) over (partition by a order by b) from(select intDiv(number,10) as a, number%10 as b from numbers(20));
DROP DATABASE IF EXISTS test_1n4g8qni 
INSERT INTO table_function_dictionary_source_table VALUES 
insert into t12 select number, number from numbers_mt(100);
INSERT INTO test_01193_18429.table_10_797 VALUES 
INSERT INTO test_01193_18429.table_3_965 VALUES 
SELECT range(number)[2] FROM system.numbers LIMIT 10;
select mapSubtract(map(toUInt8(1), 1, 2, 1), map(toUInt8(1), 2, 2, 2)) as res, toTypeName(res);
SELECT multiIf((col1 % 2) = 0, col2, 1, toFixedString(col3, 16), 'baz') FROM multi_if_check;
drop table if exists id_val;
SELECT 'Running test stateless/00973_create_table_as_table_function.sql from pid=1724' 
SELECT count() FROM unsigned_integer_test_table WHERE toInt32(val) == 0;
INSERT INTO test_01193_18429.table_9_989 VALUES 
INSERT INTO test_01193_18429.table_1_309 VALUES 
INSERT INTO test_01193_18429.table_7_875 VALUES 
CREATE DICTIONARY 01753_dictionary_db.direct_dictionary_simple_key_hierarchy ( id UInt64, parent_id UInt64 HIERARCHICAL ) PRIMARY KEY id SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_hierarchy_table')) LAYOUT(DIRECT());
SELECT * FROM ( SELECT 2 AS x ) as t1 RIGHT JOIN ( SELECT count('x'), count('y'), 0 AS x ) AS t2 ON t1.x = t2.x;
INSERT INTO test_01193_18429.table_3_593 VALUES 
SELECT multiIf((number % 2) = 0, toUInt64(1), (number % 3) = 0, toUInt32(2), toUInt16(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_426F6228212858257D7A7B4559597C752177284F213F4C3C373B40255A6A57326422596D2658687E(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS ipv4_t64;
SELECT (*,).1 AS c, toTypeName(c) FROM test_01457.tf_numbers;
CREATE TABLE test_01193_18429.table_2_744 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
EXPLAIN SYNTAX (SELECT sum(uint64 - 2) - sum(uint64 - 3) From test_table);
SELECT toDecimal64OrZero ('\'', 4);
CREATE TEMPORARY TABLE t1_02271 (x INT(11));
SELECT toRelativeMonthNum(NULL, NULL, NULL);
SELECT 3, 10, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (3 < 13 AND 10 > 0 ? 3 : 0)), throwIf(last != (3 < 13 AND 10 > 0 ? least(13 - 1, 3 + 10 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 3, 10);
DROP TABLE IF EXISTS 02183_range_dictionary_source_table;
CREATE TABLE test_5A2E626C4C5B245B41373435574D252B2561785F3E2F51542B24684B465274363775474D6D505D58(x UInt8) Engine=Memory;
SELECT * FROM nullable_00571;
SELECT id, value FROM test_table WHERE 0 IN (SELECT 1);
SELECT y, count() FROM cluster(test_cluster_one_shard_three_replicas_localhost, currentDatabase(), 02535_custom_key) GROUP BY y ORDER BY y SETTINGS max_parallel_replicas=2 , parallel_replicas_custom_key='cityHash64(y) + 1' , parallel_replicas_custom_key_filter_type='default' , prefer_localhost_replica=0
OPTIMIZE TABLE full_duplicates FINAL DEDUPLICATE;
CREATE TABLE test_01193_18429.table_8_922 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP TABLE IF EXISTS t2_00844;
select 1 = isValidUTF8(toValidUTF8('\xf0\x28\x8c\xbc')) from system.numbers limit 10;
INSERT INTO test_01193_18429.table_10_228 VALUES 
INSERT INTO test SELECT 'case2', number%3, 2 FROM numbers(9);
CREATE TABLE test_01193_18429.table_6_770 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_4_169 VALUES 
CREATE TABLE test_01193_18429.table_8_856 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO id1 VALUES 
select bin(1);
SELECT 'Running test stateless/01490_nullable_string_to_enum.sql from pid=1722' 
DROP TABLE IF EXISTS arrow_types1
CREATE TABLE test_01193_18429.table_2_20 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
INSERT INTO test_01193_18429.table_4_392 VALUES 
INSERT INTO test_01193_18429.table_10_91 VALUES 
alter table many_mutations delete where y = 193 * 2 settings mutations_sync = 0;
select hasSubsequence('garbage', 'arg');
SELECT multiIf((col1 % 2) = 0, col2, (col1 % 3) = 0, toFixedString(col3, 16), toFixedString(col4, 16)) FROM multi_if_check;
select toDate32('1925-02-01') = '1925-02-01';
CREATE TABLE test_01193_18429.table_6_28 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_2_979 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_01193_18429.table_9_809 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT toYYYYMMDDhhmmss(toDateTime('2017-07-21T11:22:33'));
CREATE TABLE test_02908_r1_136 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_136', 'r1') ORDER BY tuple()
SELECT 'Running test stateless/01825_type_json_wide_parts_merge.sql from pid=1714' 
INSERT INTO test_01193_18429.table_2_10 VALUES 
SELECT COUNT(*) FROM system.session_log WHERE user = '02835_USER_25518' AND type = 'LoginFailure'
DROP DATABASE IF EXISTS test_xzmi24uc 
drop table if exists lc_00800_1;
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat32(1), toFloat32(2)] WHEN (number % 3) = 0 THEN [toInt16(2), toInt16(3)] ELSE [toUInt8(3), toUInt8(3)] END FROM system.numbers LIMIT 10;
SELECT toUUID('61f0c404-5cb3-11e7-907b-a6006ad3dba0') < '61f0c404-5cb3-11e7-907b-a6006ad3dba0';
select arrayCompact([1,2]);
CREATE DATABASE IF NOT EXISTS test_1e3igbn6 
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), toUInt16(1) != N as r FORMAT CSV;
CREATE TABLE parquet_load (iD String, scOre Int32) ENGINE = Memory
SELECT val FROM tab WHERE now(tz) != toDateTime('2000-01-01 00:00:00') ORDER BY val SETTINGS allow_nonconst_timezone_arguments = 1;
CREATE TABLE IF NOT EXISTS test_01444.t19875 (`x` UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 49736, min_bytes_for_wide_part = 645103364, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = true, max_file_name_length = 6, merge_max_block_size = 15200, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10737418240, index_granularity_bytes = 21360504, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 75390, primary_key_compress_block_size = 98921
CREATE TABLE test_nested_default (`id` String, `with_dot.str` String, `with_dot.array` Array(String)) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 55516, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 5688, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 6104852401, index_granularity_bytes = 29130215, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 23732, primary_key_compress_block_size = 51083
SELECT 'Running test stateless/01710_projection_with_mixed_pipeline.sql from pid=1726' 
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt16(1), toUInt16(2)] WHEN (number % 3) = 0 THEN [toInt8(2), toInt8(3)] ELSE [toInt32(3), toInt32(3)] END FROM system.numbers LIMIT 10;
select sipHash64Keyed((toUInt64(0),toUInt64(0)),char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14)) == sipHash64(char(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14));
INSERT INTO test_01193_18429.table_9_705 VALUES 
SELECT * FROM bloom_filter_idx WHERE s = 'aÃÂ±ÃÂ²ÃÂ³ÃÂ´ÃÂµÃÂÃÂ¶' ORDER BY k FORMAT JSON
select runningDifference(x) from (select arrayJoin([0, 1, 5, 10, 170141183460469231731687303715884105727]::Array(UInt128)) as x);
CREATE TABLE test_5954623D287B6071335A4F3B52385E465C477D586A5F4D75303B5D58505B623046557663383A214C(x UInt8) Engine=Memory;
CREATE TABLE test_7D3D5E503E3442233F7743566C6A6F3458622F7742662D2F594A28495120735248346F364D534F60(x UInt8) Engine=Memory;
SELECT meanZTest(NULL, NULL, NULL);
CREATE TABLE underlying (key Int) ENGINE=Memory();
SELECT * FROM table_gcd_codec_decimal32;
INSERT INTO r1 SELECT 38
DROP DATABASE IF EXISTS test_24e0ipxa 
CREATE DATABASE IF NOT EXISTS test_nitprbk4 
select [1, 0, 2, 18, 1, 3, 15, 8, 0, 0, 1, 3, 0, 23, 2, 0, 8, 0] = multiSearchAllPositionsCaseInsensitive(materialize('TzczIDSFtrkjCmDQyHxSlvYTNVKjMT'), ['', 'AmIFsYdYFaIYObkyiXtxgvnwMVZxLNlmytkSqAyb', 'ZcZI', 'HXsLVYTnvKjm', '', 'CZiDsFtRKJ', 'DQYhxSl', 'fTRKjCmdqYHxsLvYtNvk', 'hxVpKFQojYDnGjPaTNPhGkRFzkNhnMUeDLKnd', 'RBVNIxIvzjGYmQBNFhubBMOMvInMQMqXQnjnzyw', '', 'c', 'vcvyskDmNYOobeNSfmlWcpfpXHfdAdgZNXzNm', 'ytnvKJM', 'ZcZidsFtRKjcmdqy', 'IRNETsfz', 'fTR', 'POwVxuBifnvZmtBICqOWhbOmrcU']) from system.numbers limit 10;
DROP DATABASE IF EXISTS test_96kvetsm 
SELECT CASE WHEN (number % 2) = 0 THEN toInt32(1) WHEN (number % 3) = 0 THEN toUInt16(2) ELSE toInt8(3) END FROM system.numbers LIMIT 10;
SELECT EventDate FROM ( SELECT EventDate FROM tracking_events_tmp AS t1 WHERE (EventDate >= toDate('2020-07-09')) AND (EventDate <= toDate('2020-07-11')) AND (APIKey = 2) GROUP BY EventDate ) FULL OUTER JOIN ( SELECT EventDate FROM remote('127.0.0.{1,3}', currentDatabase(), open_events_tmp) AS t2 WHERE (EventDate <= toDate('2020-07-12')) AND (APIKey = 2) GROUP BY EventDate WITH TOTALS ) USING (EventDate) ORDER BY EventDate ASC SETTINGS totals_mode = 'after_having_auto', group_by_overflow_mode = 'any', max_rows_to_group_by = 10000000, joined_subquery_requires_alias = 0;
CREATE TABLE test_01193_18429.table_4_979 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
CREATE TABLE test_2E4456433252483476527A3A4055455D51642B362A5553693B772921306A56676046757C7A373A6A(x UInt8) Engine=Memory;
SELECT toUInt32(-1);
CREATE TABLE test_61655D2E364352373B283923504E3775774921742326772169424B6E434B2442547E6E616672504D(x UInt8) Engine=Memory;
INSERT INTO src_9 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 10
SELECT dictGetHierarchy('hierachical_hashed_array_dictionary', number) FROM system.numbers LIMIT 6;
DROP DATABASE IF EXISTS test_snnbrsgk 
select '-';
DROP TABLE IF EXISTS test_race_condition_mv_3
SELECT 'Running test stateless/02346_inverted_index_bug59039.sql from pid=1722' 
INSERT INTO constraint_test_transitivity3 (a, b, c) VALUES 
SELECT '# Invocation with constants';
SELECT 70 = 10 * sum(t1.id) + sum(t2.id) AND count() == 4 FROM t1 JOIN t2 ON 2 = 2 AND 3 = 3;
SELECT 'Running test stateless/01353_nullable_tuple.sql from pid=1713' 
INSERT INTO test_01193_18429.table_9_450 VALUES 
DROP TABLE IF EXISTS test_table_nullable_unsigned_values;
OPTIMIZE TABLE replica1 FINAL;
OPTIMIZE TABLE adaptive_granularity_alter FINAL;
DROP DATABASE IF EXISTS test_m2wmqxh1 
SELECT formatQuery('ALTER TABLE tab MODIFY COLUMN long_string RESET SETTING min_compress_block_size;');
INSERT INTO test_set VALUES 
SELECT dictGetString(concat('test_g0lvg7te', '.test_dict_01080'), 'dim_id', x) FROM (SELECT tuple(toInt64(number)) AS x FROM numbers(5))
CREATE TABLE test_614F476555404B5A6A612468542743347948632A4F525370723B456F41332948212A5D2D492D4A7B(x UInt8) Engine=Memory;
SELECT nothingUInt64ArrayIf([NULL], 1) AS x FROM remote('127.0.0.{1,2}', numbers(3));
EXPLAIN SYNTAX (SELECT (sum(decimal32) - 2 * count(decimal32)) + (sum(decimal32) - 3 * count(decimal32)) From test_table);
SELECT 'Running test stateless/02426_orc_bug.sh from pid=1724' 
CREATE DATABASE IF NOT EXISTS test_ma4k3vhl 
SELECT multiIf((number % 2) = 0, toInt16(1), (number % 3) = 0, toUInt16(2), toInt16(3)) FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_iaxtf1uo 
INSERT INTO r3 SELECT 83 % 10 = 3 ? 83 - 1 : 83
SELECT t1.value FROM (SELECT number > 5 ? 'censor.net' : 'google' as value FROM system.numbers LIMIT 10) as t1;
CREATE TABLE test_01193_18429.table_10_880 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT column, serialization_kind FROM system.parts_columns WHERE table = 't_sparse_detach' AND database = currentDatabase() AND active ORDER BY column;
CREATE TABLE test_7C732B7B6057795056542878787843486D6B774B737E2F2A41486F4B55757449743B7E7B75637876(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_pb0rlrl8 
CREATE TABLE test_38235C605C232C22502275705F5C4D6F49363D692648542F253B324F22723A796D3F423E6868297B(x UInt8) Engine=Memory;
select * from url_delim;
SELECT count() FROM t_cnf_fuzz WHERE ((NOT c1) AND c6 AND (NOT c7)) OR ((NOT c1)) OR ((NOT c3) AND c2 AND (NOT c0)) OR ((NOT c5) AND c5 AND (NOT c7) AND (NOT c7) AND (NOT c8)) SETTINGS convert_query_to_cnf = 1
CREATE TABLE async_inserts_race (id UInt32, s String) ENGINE = MergeTree ORDER BY id
CREATE TABLE test_7E7C4A6E533653555572566B48273346655F66325972534C772F264368275E492A4C582D7B76467E(x UInt8) Engine=Memory;
SELECT multiIf((col1 % 2) = 0, [col2, col3], 1, [col4, 'bar'], ['foo', col7]) FROM multi_if_check;
CREATE TABLE test_01193_18429.table_8_126 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select countSubstringsCaseInsensitiveUTF8(concat(char(number), 'ÃÂ'), 'ÃÂ¯') from numbers(100) where number = 0x41;
INSERT INTO test_01193_18429.table_8_239 VALUES 
INSERT INTO test_01193_18429.table_2_467 VALUES 
INSERT INTO test_01193_18429.table_8_192 VALUES 
CREATE TABLE test_01193_18429.table_8_138 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
INSERT INTO log SELECT number, number, number FROM numbers(1000000)
DROP DATABASE IF EXISTS test_50ar4go2 
SELECT dictGetHierarchy('database_for_dict.dictionary_with_hierarchy', materialize(toUInt64(11)));
desc file('test_02149_external_schema_inference_test_r6b0wy2t.data', 'CapnProto') settings format_schema='test_02149/02030_capnp_nested_table:Message'
INSERT INTO src_7 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 31
SELECT rightPad('abc', 5, '*.'), rightPad('abc', 5::Int32, '*.');
CREATE DATABASE IF NOT EXISTS test_m8v7focf 
SELECT multiIf((number % 2) = 0, toInt16(1), (number % 3) = 0, toUInt32(2), toInt8(3)) FROM system.numbers LIMIT 10;
CREATE TABLE test_6C5F4431417A4574297E43793F6230563266726E6754283653333F283D44534B3B353A45425D3E33(x UInt8) Engine=Memory;
SELECT toDecimal32 ('54.1234567', 4);
DROP TABLE tab_02473;
SELECT * FROM numbers(34620)
CREATE TABLE parsed_eph (`name` String, `num_ephemeral` UInt32 EPHEMERAL, `num` UInt32 MATERIALIZED num_ephemeral) ENGINE = MergeTree ORDER BY name SETTINGS index_granularity = 17919, min_bytes_for_wide_part = 104757764, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 76, merge_max_block_size = 24245, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 9833400709, index_granularity_bytes = 617135, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 76110, primary_key_compress_block_size = 16064
INSERT INTO check_table_with_indices VALUES 
ALTER TABLE mt_with_pk UPDATE y = ['q', 'q', 'q'] WHERE 1 SETTINGS mutations_sync = 2;
select toTypeName(res), if(0, range(number + 1), ('str_' || toString(number))::Nullable(String)) as res from numbers(4);
CREATE DATABASE IF NOT EXISTS test_ts8b90ld 
INSERT INTO test_01193_18429.table_7_301 VALUES 
CREATE WINDOW VIEW test_01048.wv ENGINE Memory AS SELECT count(test_01048.mt.a), count(test_01048.mt_2.b), wid FROM test_01048.mt JOIN test_01048.mt_2 ON test_01048.mt.timestamp = test_01048.mt_2.timestamp GROUP BY tumble(test_01048.mt.timestamp, INTERVAL '1' SECOND) AS wid;
SELECT SVG([[[(0., 0.), (10, 0), (10, 10), (0, 10)], [(4., 4.), (5, 4), (5, 5), (4, 5)]], [[(-10., -10.), (-10, -9), (-9, 10)]]], 'b');
select x, min(x) over w, max(x) over w, count(x) over w from ( select toUInt8(number) x from numbers(11)) t window w as (order by x desc range between unbounded preceding and 2 preceding) order by x settings max_block_size = 4;
SELECT 'Running test stateless/02800_clickhouse_local_default_settings.sh from pid=1713' 
select tab2.*, tab3.* from tab2 any join tab3 on a2 = a3 or b2 = b3;
SELECT toUInt16OrZero(NULL, NULL);
SELECT extractTextFromHTML(stringColumn) FROM defaults;
SELECT * FROM numbers(10);
SELECT 'SELECT toUInt32(1) + N';
CREATE TABLE test_01193_18429.table_2_750 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_01193_18429.table_8_505 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP DATABASE IF EXISTS test_yk5kafy0 
INSERT INTO test_01193_18429.table_1_751 VALUES 
SELECT arrayFilter(x -> materialize(0), emptyArrayString());
drop table test_local;
SELECT 'Running test stateless/01630_simple_aggregate_all_functions_in_summing_merge_tree.sql from pid=1713' 
CREATE TABLE summing_merge_tree (d Date, a String, x UInt32, y UInt64, z Float64) ENGINE = SummingMergeTree(d, a, 8192);
CREATE TABLE test_01193_18429.table_4_32 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP DATABASE IF EXISTS test_4rnrxl6j 
CREATE TABLE test_01193_18429.table_8_887 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE DATABASE IF NOT EXISTS test_tflh32rh 
CREATE TABLE test_01193_18429.table_2_234 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 42,toFixedString('Hello', 10), bin(bitShiftLeft(toFixedString('Hello', 10), 42));
INSERT INTO test_01193_18429.table_9_491 VALUES 
INSERT INTO test_01193_18429.table_7_241 VALUES 
drop table h;
CREATE TABLE test_02908_r2_30 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_30', 'r2') ORDER BY tuple()
EXPLAIN SYNTAX (SELECT sum(uint64 + 1 AS i) j from test_table where i > 0 having j > 0);
create table src (x Int64) engine Memory as select 1;
CREATE DATABASE IF NOT EXISTS test_jnkq7fyi 
 WITH (data.2)['aa'] AS aa, (data.2)['bb'] AS bb SELECT tupleElement(aa, 'k1') AS k1, tupleElement(aa, 'k4') AS k4 FROM t_json_nested ORDER BY id FORMAT JSONEachRow
DROP DATABASE IF EXISTS test_0tzlc6x4 
SELECT x, txt FROM 02540_date WHERE txt == 'toInt32(0)';
CREATE TABLE test_662B4D5662465A462D624F432977535261773342532822516D76764954643C265C43327C47455375(x UInt8) Engine=Memory;
SELECT 'tn1 ALL RIGHT JOIN t2 | bs = 1';
CREATE TABLE test_54476D31757D7847775E632C5246405A7C7E4E496143737D4B356531412643322222565B48477E73(x UInt8) Engine=Memory;
SELECT varPop(0.1) FROM numbers(1000000);
SELECT subtractMinutes(NULL, NULL, NULL);
INSERT INTO test_01193_18429.table_5_639 VALUES 
DROP TABLE IF EXISTS t_json_array;
select 'many arguments';
select count(), * from dist_01247 group by number limit 1;
DROP DATABASE IF EXISTS test_e1yc5z9h 
INSERT INTO test_01193_18429.table_10_94 VALUES 
DROP TABLE IF EXISTS partitioned_by_tuple;
CREATE TABLE test_01193_18429.table_3_706 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE TABLE test_35763B7E4B444F3567624C2C7622393149354D7E2A4469787D7B6E513A5F316322763D5E355C382C(x UInt8) Engine=Memory;
INSERT INTO mt VALUES /* (-33, 2) */ 
SELECT toDateTime('2016-02-29 01:02:03') - INTERVAL 1 QUARTER;
SELECT concat('With ', materialize(43 :: Int16));
CREATE TABLE test_01193_18429.table_3_890 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT (SELECT (SELECT (SELECT (SELECT (SELECT count() FROM (SELECT * FROM system.numbers LIMIT 10)))))) = (SELECT 10), ((SELECT 1, 'Hello', [1, 2]).3)[1];
INSERT INTO test_01193_18429.table_10_230 VALUES 
INSERT INTO test_01193_18429.table_1_575 VALUES 
SELECT x, txt FROM 02540_date WHERE txt == '65535';
system sync replica t1;
INSERT INTO src_8 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 63
insert into xyz values 
SELECT count() FROM lc_nullable WHERE has(f32, 10);
CREATE TABLE test_01193_18429.table_10_45 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE TABLE test_4E55536F612D433E707D3A29246A4D794535762F255A60477C38416426727A3145584E41607E7222(x UInt8) Engine=Memory;
SELECT 'test_01194',14752,1 
INSERT INTO test_01193_18429.table_5_967 VALUES 
ALTER TABLE lwd_test UPDATE value = 'v' WHERE id % 2 == 0 SETTINGS mutations_sync = 2;
SELECT nothingArray([NULL, NULL]) AS `x` FROM numbers(3)
SELECT any(toTypeName(a)) == 'UInt16' AND any(toTypeName(t2.a)) == 'Int16' FROM t1 INNER JOIN t2 ON (t1.a == t2.a);
SELECT space(i32), length(space(i32)) from defaults;
SELECT number, number % 2, sum(number) AS val FROM numbers(10) GROUP BY GROUPING SETS ( (number), (number % 2) ) ORDER BY 1, tuple(val) SETTINGS group_by_use_nulls = 1, max_bytes_before_external_sort=10;
SELECT COUNT() = 0 FROM (SELECT toDate('2019-01-01') AS day, day AS t FROM test_table PREWHERE t = '2020-01-03' WHERE t = '2020-01-03' GROUP BY t );
CREATE TABLE test_01193_18429.table_8_943 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'Running test stateless/02294_decimal_second_errors.sql from pid=1718' 
create table dist_monitor_split_batch_on_failure as system.one engine=Distributed(default, system, one) settings monitor_split_batch_on_failure=1;
SELECT multiIf((number % 2) = 0, [toInt8(1), toInt8(2)], (number % 3) = 0, [toUInt16(2), toUInt16(3)], [toInt64(3), toInt64(3)]) FROM system.numbers LIMIT 10;
CREATE DATABASE IF NOT EXISTS test_w2qcilxc 
SELECT getSetting('custom_f') as v, toTypeName(v) SETTINGS custom_f = 'word';
SELECT age('hour', toDateTime('2015-08-18 00:00:00', 'UTC'), toDate32('2015-08-19', 'UTC'), 'UTC');
DROP TABLE unsorted_replacing;
CREATE TABLE test_2D2D3144407522417B596B20234575422B3A67592F4D2627215F2E25633631482738333E4B25404D(x UInt8) Engine=Memory;
SELECT multiIf((number % 2) = 0, toInt8(1), (number % 3) = 0, toFloat64(2), toUInt16(3)) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_6_458 VALUES 
CREATE TABLE test_313F33246C4F263A7266265B232059243C7B355E6A2A5373512F456261345D3F3A325F59474F7C25(x UInt8) Engine=Memory;
SELECT extractAllGroupsVertical(materialize(CAST('hello world' AS FixedString(12))), CAST('(\\w+)' as FixedString(5)));
DROP DATABASE IF EXISTS test_60ajruco 
SELECT CASE WHEN 1 THEN [col2, 'bar'] WHEN (col1 % 3) = 0 THEN ['foo', 'bar'] ELSE ['foo', col7] END FROM multi_if_check;
SHOW INDEX FROM NULL;
select dictGet('02186_range_dictionary', 'value', toUInt64(1), toDate('2020-01-02'));
select * from test_00670;
SELECT 'issue 23002';
CREATE DATABASE IF NOT EXISTS test_4s9exx46 
CREATE TABLE test_01193_18429.table_6_374 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 65535, 9223372036854775808, 65535 = 9223372036854775808, 65535 != 9223372036854775808, 65535 < 9223372036854775808, 65535 <= 9223372036854775808, 65535 > 9223372036854775808, 65535 >= 9223372036854775808, 9223372036854775808 = 65535, 9223372036854775808 != 65535, 9223372036854775808 < 65535, 9223372036854775808 <= 65535, 9223372036854775808 > 65535, 9223372036854775808 >= 65535 , toUInt16(65535) = toUInt64(9223372036854775808), toUInt16(65535) != toUInt64(9223372036854775808), toUInt16(65535) < toUInt64(9223372036854775808), toUInt16(65535) <= toUInt64(9223372036854775808), toUInt16(65535) > toUInt64(9223372036854775808), toUInt16(65535) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toUInt16(65535), toUInt64(9223372036854775808) != toUInt16(65535), toUInt64(9223372036854775808) < toUInt16(65535), toUInt64(9223372036854775808) <= toUInt16(65535), toUInt64(9223372036854775808) > toUInt16(65535), toUInt64(9223372036854775808) >= toUInt16(65535) , toUInt32(65535) = toUInt64(9223372036854775808), toUInt32(65535) != toUInt64(9223372036854775808), toUInt32(65535) < toUInt64(9223372036854775808), toUInt32(65535) <= toUInt64(9223372036854775808), toUInt32(65535) > toUInt64(9223372036854775808), toUInt32(65535) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toUInt32(65535), toUInt64(9223372036854775808) != toUInt32(65535), toUInt64(9223372036854775808) < toUInt32(65535), toUInt64(9223372036854775808) <= toUInt32(65535), toUInt64(9223372036854775808) > toUInt32(65535), toUInt64(9223372036854775808) >= toUInt32(65535) , toInt32(65535) = toUInt64(9223372036854775808), toInt32(65535) != toUInt64(9223372036854775808), toInt32(65535) < toUInt64(9223372036854775808), toInt32(65535) <= toUInt64(9223372036854775808), toInt32(65535) > toUInt64(9223372036854775808), toInt32(65535) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toInt32(65535), toUInt64(9223372036854775808) != toInt32(65535), toUInt64(9223372036854775808) < toInt32(65535), toUInt64(9223372036854775808) <= toInt32(65535), toUInt64(9223372036854775808) > toInt32(65535), toUInt64(9223372036854775808) >= toInt32(65535) , toUInt64(65535) = toUInt64(9223372036854775808), toUInt64(65535) != toUInt64(9223372036854775808), toUInt64(65535) < toUInt64(9223372036854775808), toUInt64(65535) <= toUInt64(9223372036854775808), toUInt64(65535) > toUInt64(9223372036854775808), toUInt64(65535) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toUInt64(65535), toUInt64(9223372036854775808) != toUInt64(65535), toUInt64(9223372036854775808) < toUInt64(65535), toUInt64(9223372036854775808) <= toUInt64(65535), toUInt64(9223372036854775808) > toUInt64(65535), toUInt64(9223372036854775808) >= toUInt64(65535) , toInt64(65535) = toUInt64(9223372036854775808), toInt64(65535) != toUInt64(9223372036854775808), toInt64(65535) < toUInt64(9223372036854775808), toInt64(65535) <= toUInt64(9223372036854775808), toInt64(65535) > toUInt64(9223372036854775808), toInt64(65535) >= toUInt64(9223372036854775808), toUInt64(9223372036854775808) = toInt64(65535), toUInt64(9223372036854775808) != toInt64(65535), toUInt64(9223372036854775808) < toInt64(65535), toUInt64(9223372036854775808) <= toInt64(65535), toUInt64(9223372036854775808) > toInt64(65535), toUInt64(9223372036854775808) >= toInt64(65535) 
INSERT INTO r5 SELECT 33 % 10 = 5 ? 33 - 1 : 33
SELECT b, c FROM t_fixed_prefix WHERE bitNot(c) = 1 ORDER BY b, c SETTINGS optimize_read_in_order = 1
SELECT 'Running test stateless/00916_add_materialized_column_after.sql from pid=1713' 
INSERT INTO temp (id, field1, field2, field3, field4, field5, field6, field7, field8, event_at, order_id, identity) VALUES 
CREATE TABLE test_2825414B2E685042777D3A5229654E6F75716A322D41495239707867257A6763646121255E523664(x UInt8) Engine=Memory;
DROP DATABASE IF EXISTS test_1na9nl25 
select arrayAUC([0.1, 0.35, 0.4, 0.8], [1, 0, 1, 0]);
INSERT INTO r7 SELECT 35 % 10 = 7 ? 35 - 1 : 35
CREATE TABLE test_664F4629337C74582261364A64406D713E38223A2773372B6427346F6D4F312E3D282F683D2D3B34(x UInt8) Engine=Memory;
select -41 as offset, 'Hello' as s, subString(bin(s), offset), bin(bitSlice(s, offset));
CREATE TABLE mt (`a` Int32) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 26975, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 19059, prefer_fetch_merged_part_size_threshold = 5868270002, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 15569440, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 18735, primary_key_compress_block_size = 99090
CREATE TABLE test_5820733A564A696D45533620412959706F7B293D4E402D284E7A4C552B4F494B305D397735685325(x UInt8) Engine=Memory;
SELECT id, alias_value_1, alias_value_2 FROM test_table;
CREATE DATABASE IF NOT EXISTS test_glj0hcde 
SELECT replaceRegexpAll(materialize('aaq'), 'z*', '') == 'aaq';
SELECT sleep(22835 / 32000) format Null;
CREATE TABLE anti_left_join (x UInt32, s String) engine = Join(ANTI, LEFT, x);
CREATE DATABASE IF NOT EXISTS test_2s8o6e2z 
CREATE TABLE test_5B4F7777243C222F2175556931395C3A2622635A422A73564F4D7958597C57332C2572235C722A4D(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_5_0 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
DROP DATABASE IF EXISTS test_t8vwht33 
DROP DATABASE IF EXISTS test_c1ctpvw1 
DROP DATABASE IF EXISTS test_ydppqdfm 
DROP DATABASE IF EXISTS test_66wpv89a 
SELECT d4, f1, d4 + f1 FROM t ORDER BY f1;
INSERT INTO test_02908_r1_114 SELECT rand64() FROM numbers(5);
select arr1, arrayPopFront(arr1) from array_functions;
explain plan sorting=1 select distinct b, a from distinct_in_order_explain order by a DESC
SELECT CASE WHEN (number % 2) = 0 THEN toUInt16(1) WHEN (number % 3) = 0 THEN toUInt32(2) ELSE toUInt32(3) END FROM system.numbers LIMIT 10;
insert into trend values 
INSERT INTO test_01193_18429.table_2_743 VALUES 
SELECT splitByAlpha('ab.cd.ef.gh');
DESCRIBE (SELECT 02339_db.test_table.* FROM 02339_db.test_table);
CREATE TABLE test_7C4635704F5C662356664F2D687D5B6248435B7C3941543C5E4063436E4B3947247B48752860402D(x UInt8) Engine=Memory;
CREATE TABLE test_3C4F612B79432D3277705636752978737478775478526C3862305D6927452A6B6F293D56347B6479(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01931_storage_merge_no_columns.sql from pid=1724' 
SELECT toTypeName(tuple(toLowCardinality('1'), materialize(toLowCardinality(1))));
CREATE TABLE kcu2 (`i` UInt32, `d` Date, `u` UUID) ENGINE = MergeTree ORDER BY (u, d) SETTINGS index_granularity = 35698, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 0.9553862810134888, replace_long_file_name_to_hash = true, max_file_name_length = 128, merge_max_block_size = 21087, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 975157, vertical_merge_algorithm_min_columns_to_activate = 31, min_merge_bytes_to_use_direct_io = 8093480535, index_granularity_bytes = 20798893, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 17820, primary_key_compress_block_size = 51432
DROP DATABASE IF EXISTS test_vlfd03u4 
SELECT arrayCompact([1, 1, NULL, NULL, nan, nan, 2, 2, 2]);
SELECT cityHash64(groupArray(d)) FROM enum_pk WHERE d != '0';
CREATE TABLE t_sparse_alter (`id` UInt64, `u` UInt64, `s` String) ENGINE = MergeTree ORDER BY id SETTINGS ratio_of_defaults_for_sparse_serialization = 0.5, index_granularity = 62205, min_bytes_for_wide_part = 0, replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 687, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 3599431, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 30766, primary_key_compress_block_size = 53434
SYSTEM START MERGES summing_00155
SELECT toUInt16(toFixedString(toString(number), 3)) FROM system.numbers LIMIT 111 
SELECT k, groupArrayForEach(arr) FROM (SELECT number % 3 AS k, arrayMap(x -> toString(x), range(number)) AS arr FROM system.numbers LIMIT 10) GROUP BY k ORDER BY k;
SELECT multiIf((number % 2) = 0, [toInt8(1), toInt8(2)], (number % 3) = 0, [toInt16(2), toInt16(3)], [toUInt32(3), toUInt32(3)]) FROM system.numbers LIMIT 10;
ALTER TABLE src_1 REPLACE PARTITION 4 FROM src_0
INSERT INTO r3 SELECT 92
SELECT * FROM 02131_rptable PREWHERE x >= 2 SETTINGS additional_result_filter = 'x > 1' ;
CREATE TABLE versioned_collapsing_merge_tree (`key` UInt32, `sign` Int8, `version` Int32, `date` Datetime) ENGINE = VersionedCollapsingMergeTree(sign, version) PARTITION BY date ORDER BY (key, version) SETTINGS index_granularity = 30300, min_bytes_for_wide_part = 281321780, ratio_of_defaults_for_sparse_serialization = 0., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 15968, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 788243, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 878983389, index_granularity_bytes = 24243420, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 63220, primary_key_compress_block_size = 81933
SELECT 'Running test stateless/01455_shard_leaf_max_rows_bytes_to_read.sql from pid=1722' 
INSERT INTO test_01193_18429.table_4_349 VALUES 
INSERT INTO test_01193_18429.table_2_731 VALUES 
SELECT * FROM bloom_filter_idx WHERE multiSearchAny(s, ['abra', 'cadabra', 'cab', 'extra'])
SELECT groupArrayMovingSum(257)(-9223372036854775808), groupArrayMovingSum(1)(10.000100135803223, [NULL, NULL], NULL), groupArrayMovingSum(NULL)(NULL) FROM numbers(1023) FORMAT Null;
CREATE TABLE test_78714E63775B47583E7420546F453062262C7C65355B3B6B226142452345474F74734F41234B7455(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_1_805 VALUES 
INSERT INTO left SELECT number, toString(number) FROM numbers(259);
INSERT INTO test_01193_18429.table_7_111 VALUES 
CREATE TABLE test_67753A7343296A75573123217C5075396978345746402D4374294651463E313B284E54666C615F5F(x UInt8) Engine=Memory;
insert into lc_null_fix_str_0 select 'ab';
INSERT INTO test_02908_r1_263 SELECT rand64() FROM numbers(5);
OPTIMIZE TABLE table_with_empty_part FINAL
CREATE TABLE test_01193_18429.table_7_346 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
SELECT toTypeName(i) FROM generateRandom('i Array(String)') LIMIT 1;
CREATE TABLE test_435A2B592C632F23202E6C567552613E496C453325455F6962573339664945726F7C614326757D7E(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_2_935 VALUES 
CREATE TABLE test_01193_18429.table_3_778 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT hex(sipHash128ReferenceKeyed((key0, key1), 4::UInt64)) FROM sipHashKeyed_keys ORDER by key0;
CREATE TABLE test_01193_18429.table_7_99 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
DROP DATABASE IF EXISTS test_oig8q5h3 
SELECT count() FROM indices_mutaions2 WHERE i64 = 2 FORMAT JSON;
create table named_tuples engine File(JSONEachRow) settings output_format_json_named_tuples_as_objects = 1 as select cast(tuple(number, number * 2), 'Tuple(a int, b int)') c from numbers(3);
WITH - INTERVAL 1 SECOND - INTERVAL 1 SECOND - INTERVAL 1 SECOND as expr SELECT expr, toTypeName(expr);
SELECT 'Running test stateless/01825_type_json_6.sh from pid=1713' 
SELECT * FROM merge(currentDatabase(), 'alter_table_') FORMAT Null
INSERT INTO r6 SELECT 64 % 10 = 6 ? 64 - 1 : 64
CREATE TABLE test_777A42435135476F545F6B534173507D78476D762C4226632D69225C2A397E32404B545233754037(x UInt8) Engine=Memory;
CREATE INDEX idx_tab3_4 ON tab3 (col0 DESC,col4);
CREATE INDEX idx_tab2_1 ON tab2 (col3);
SELECT 'Running test stateless/00141_parse_timestamp_as_datetime.sql from pid=1720' 
SELECT 'Running test stateless/02971_analyzer_remote_id.sh from pid=1705' 
INSERT INTO test_01193_18429.table_8_793 VALUES 
SELECT * FROM file('/var/lib/clickhouse/user_files/02661_read_from_archive_test_4dk9rw9v_tarbz2_archive3.tar.bz2 :: 02661_read_from_archive_test_4dk9rw9v_tarbz2_data*.csv') ORDER BY 1, 2
CREATE DATABASE IF NOT EXISTS test_8q3y30mc 
SELECT * FROM (SELECT 'Hello, World! From client.') INTO OUTFILE '/tmp/clickhouse-test/0_stateless/test_w42wdpfb/test_append_to_output_file'
SELECT CASE WHEN (number % 2) = 0 THEN [toFloat64(1), toFloat64(2)] WHEN (number % 3) = 0 THEN [toUInt8(2), toUInt8(3)] ELSE [toFloat32(3), toFloat32(3)] END FROM system.numbers LIMIT 10;
CREATE TABLE test_2F4053324F593371453B2F4F2D287156583D726136635277753C515E73503D50682172333B4D5A6A(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_2_290 VALUES 
CREATE DATABASE IF NOT EXISTS test_13vbsfk9 
INSERT INTO mt VALUES /* (25, 2) */ 
SELECT count() FROM t_cnf_fuzz WHERE (c6) OR (c0 AND (NOT c7) AND c1 AND c3) OR ((NOT c9) AND (NOT c9)) OR (c8) SETTINGS convert_query_to_cnf = 0
insert into funnel_test values 
CREATE TABLE test_01193_18429.table_2_340 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
SELECT dictGet('01753_dictionary_db.direct_dictionary_simple_key_complex_attributes', 'value_first', number) as value_first, dictGet('01753_dictionary_db.direct_dictionary_simple_key_complex_attributes', 'value_second', number) as value_second FROM system.numbers LIMIT 4;
DROP VIEW IF EXISTS test_view_different_db;
INSERT INTO dst VALUES /* (13, 4) */ 
SELECT multiIf((number % 2) = 0, [toUInt16(1), toUInt16(2)], (number % 3) = 0, [toUInt64(2), toUInt64(3)], [toUInt16(3), toUInt16(3)]) FROM system.numbers LIMIT 10;
CREATE TABLE test_226B4B385E6D3340507B365942655870377E7E36393C43512E2B245B6D455E593022507E797B2C2F(x UInt8) Engine=Memory;
drop database if exists test_3eb2h3zx_repl_01111_8
INSERT INTO test_01193_18429.table_2_627 VALUES 
INSERT INTO tab_x VALUES 
SELECT 'Running test stateless/01825_type_json_schema_race_long.sh from pid=1720' 
SELECT pointInPolygon((39.840202, 21.451471), [(39.90553, 21.38668),(39.91034, 21.38608),(39.91834, 21.38048),(39.93078, 21.3627),(39.94141, 21.36278),(39.94753, 21.36075),(39.94986, 21.35894),(39.95349, 21.3533),(39.97833, 21.3815),(39.98132, 21.38231),(39.98851, 21.38151),(39.99076, 21.37747),(39.98987, 21.36908),(39.98791, 21.36332),(39.99543, 21.35687),(39.99827, 21.34722),(39.99784, 21.34271),(39.99632, 21.33955),(39.99322, 21.3366),(39.98908, 21.33496),(39.9692, 21.3331),(39.95841, 21.3388),(39.95109, 21.34412),(39.95026, 21.34825),(39.95203, 21.35168),(39.94753, 21.35845),(39.94165, 21.36077),(39.93272, 21.36009),(39.92969, 21.36103),(39.91928, 21.37669),(39.91374, 21.3816),(39.91056, 21.38296),(39.90839, 21.38361),(39.90059, 21.38257),(39.8978, 21.37712),(39.90051, 21.37335),(39.90033, 21.37195),(39.89559, 21.37533),(39.89099, 21.36937),(39.89101, 21.3661),(39.89465, 21.364),(39.92418, 21.35725),(39.92838, 21.35433),(39.94394, 21.33915),(39.96711, 21.32785),(39.97437, 21.32734),(39.99523, 21.33055),(40.01271, 21.3293),(40.01345, 21.3276),(40.00731, 21.32689),(39.99189, 21.32817),(39.97264, 21.3251),(39.96216, 21.32725),(39.95825, 21.32598),(39.95783, 21.32734),(39.96017, 21.32834),(39.94652, 21.33514),(39.94578, 21.33237),(39.94438, 21.33259),(39.94454, 21.33563),(39.92448, 21.3545),(39.92007, 21.3563),(39.89586, 21.3615),(39.86239, 21.35659),(39.85241, 21.35319),(39.85183, 21.35189),(39.84187, 21.3498),(39.83475, 21.35001),(39.82272, 21.35322),(39.80957, 21.34986),(39.80645, 21.34645),(39.80654, 21.34104),(39.82207, 21.29116),(39.82732, 21.26685),(39.82657, 21.22894),(39.82468, 21.22761),(39.82364, 21.22857),(39.82459, 21.22961),(39.82535, 21.26649),(39.82016, 21.29057),(39.81723, 21.29965),(39.81585, 21.30012),(39.81652, 21.30158),(39.81475, 21.30815),(39.80378, 21.34492),(39.8023, 21.34648),(39.79042, 21.34584),(39.78385, 21.34687),(39.77227, 21.34595),(39.7601, 21.34279),(39.73947, 21.34141),(39.71051, 21.34288),(39.70233, 21.34041),(39.68839, 21.33943),(39.65964, 21.33189),(39.64627, 21.3344),(39.64733, 21.33592),(39.65598, 21.33404),(39.66095, 21.33402),(39.68789, 21.34136),(39.70198, 21.34238),(39.71031, 21.34487),(39.74208, 21.34353),(39.76109, 21.34495),(39.77363, 21.34845),(39.77446, 21.35039),(39.76342, 21.37977),(39.75978, 21.39951),(39.75655, 21.40491),(39.73768, 21.39607),(39.72646, 21.38795),(39.71285, 21.3969),(39.69867, 21.37979),(39.66651, 21.36156),(39.6662, 21.36338),(39.69742, 21.38135),(39.7112, 21.39803),(39.70333, 21.40335),(39.70227, 21.40556),(39.70273, 21.40892),(39.71038, 21.41608),(39.71004, 21.42139),(39.68758, 21.414),(39.68099, 21.41398),(39.63179, 21.4366),(39.62927917729339, 21.43855995858338),(39.629299942421596, 21.44105336136311),(39.63273, 21.43836),(39.65768, 21.42753),(39.67404, 21.419),(39.6815, 21.41592),(39.68534, 21.41555),(39.7182, 21.42582),(39.72915, 21.4318),(39.72926, 21.43473),(39.72198, 21.45071),(39.72058, 21.46018),(39.72262, 21.46776),(39.72871, 21.47851),(39.73639, 21.48854),(39.73607, 21.50077),(39.73921, 21.50608),(39.74358, 21.50869),(39.77204, 21.51334),(39.78965, 21.51773),(39.78925, 21.52186),(39.77895, 21.53768),(39.77335, 21.55878),(39.77409, 21.55998),(39.77529, 21.55924),(39.78151, 21.53691),(39.79101, 21.52282),(39.79216, 21.51796),(39.79392, 21.51725),(39.793, 21.51609),(39.79416, 21.49641),(39.79816, 21.47216),(39.8004, 21.46856),(39.80363, 21.4669),(39.80549, 21.46717),(39.80785, 21.46483),(39.8079, 21.45844),(39.80961, 21.45125),(39.81407, 21.45956),(39.8189, 21.46404),(39.82568, 21.4678),(39.82961, 21.47351),(39.83079, 21.47799),(39.84122, 21.47849),(39.84401, 21.47583),(39.84423, 21.47113),(39.84321, 21.46813),(39.84421, 21.46059),(39.85356, 21.44251),(39.85688, 21.44231),(39.86433, 21.45155),(39.86762, 21.45385),(39.87655, 21.45623),(39.88419, 21.46034),(39.89153, 21.46165),(39.8939, 21.46349),(39.89668, 21.46326),(39.9075, 21.47496),(39.91921, 21.48088),(39.9355, 21.48404),(39.94435, 21.48781),(39.96608, 21.48881),(39.96569, 21.49663),(39.95135, 21.53005),(39.94352, 21.56004),(39.94384, 21.56417),(39.94803, 21.56766),(39.95376, 21.56964),(39.95497, 21.56891),(39.9538, 21.56747),(39.94686, 21.56478),(39.94534, 21.56123),(39.95324, 21.53069),(39.96782, 21.49652),(39.96808, 21.48868),(39.98958, 21.49423),(40.00615, 21.4944),(40.01566, 21.50406),(40.03305, 21.5127),(40.0475, 21.52172),(40.05278, 21.52274),(40.06051, 21.52124),(40.05971, 21.51952),(40.05217, 21.52052),(40.04866, 21.51978),(40.03052, 21.50875),(40.01631, 21.50181),(40.01014, 21.49459),(40.00619, 21.49215),(39.98995, 21.49206),(39.96952, 21.48658),(39.94485, 21.48571),(39.93748, 21.48246),(39.95107, 21.45666),(39.97348, 21.46578),(39.97479, 21.46523),(39.97424, 21.46392),(39.95217, 21.45495),(39.95444, 21.45202),(39.97071, 21.44272),(39.97127, 21.44141),(39.97007, 21.44065),(39.95381, 21.44976),(39.95007, 21.45407),(39.94121, 21.45146),(39.93089, 21.45021),(39.92173, 21.4449),(39.9164, 21.44366),(39.91152, 21.44104),(39.90446, 21.44019),(39.90416, 21.43717),(39.9067, 21.43268),(39.90657, 21.42875),(39.91121, 21.40898),(39.91566, 21.40698),(39.91675, 21.40517),(39.91627, 21.40045),(39.91407, 21.39734),(39.91949, 21.39132),(39.92673, 21.38963),(39.93267, 21.39089),(39.93373, 21.38995),(39.93279, 21.38889),(39.92676, 21.38762),(39.91905, 21.38931),(39.91251, 21.39595),(39.91173, 21.40041),(39.90949, 21.39663),(39.91172, 21.3928),(39.91031, 21.39269),(39.90798, 21.39493),(39.90668, 21.39219),(39.90882, 21.38887),(39.90768, 21.38803),(39.90505, 21.39084),(39.90417, 21.38841),(39.90553, 21.38668)]);
CREATE TABLE test_01193_18429.table_3_338 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
DROP TABLE words;
SELECT count() FROM t_cnf_fuzz WHERE (c7) OR (c6 AND c8 AND c7 AND c9 AND c1) OR (c2 AND c6 AND (NOT c3) AND (NOT c4) AND c9) OR ((NOT c0) AND (NOT c8) AND (NOT c0)) OR (c1 AND c7) OR (c1) OR (c3 AND (NOT c1) AND (NOT c7)) SETTINGS convert_query_to_cnf = 0
CREATE DATABASE IF NOT EXISTS test_uch9bc0g 
INSERT INTO test_01193_18429.table_2_7 VALUES 
SELECT 'Running test stateless/00909_kill_not_initialized_query.sh from pid=1726' 
CREATE TABLE test_7D3C364B423C512A565A4A4874326B42246E313D5B7625394C3576276B2A7167643549456540576B(x UInt8) Engine=Memory;
INSERT INTO test_01193_18429.table_8_619 VALUES 
CREATE INDEX idx_tab2_3 ON tab2 (col1 DESC,col0,col3);
CREATE DATABASE IF NOT EXISTS test_4l89h2sv 
SELECT formatDateTime(toDate('2010-01-03'), '%G');
ATTACH TABLE ipv4_test;
CREATE DATABASE IF NOT EXISTS test_gpx8xoha 
CREATE DATABASE IF NOT EXISTS test_6bi7fbsz 
CREATE TABLE mem AS log1 ENGINE=Memory;
SELECT 'Running test stateless/01038_array_of_unnamed_tuples.sql from pid=1713' 
SELECT hasToken('hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay NEEDLE hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay hay ', 'NEEDLE'), ' expecting ', 1;
SELECT toInt32OrZero(NULL, NULL, NULL);
SELECT 'Running test stateless/02493_analyzer_uniq_injective_functions_elimination.sql from pid=1714' 
CREATE TABLE test_70473B37336E6C335B7E4C674B4F715527232E7A76786864385C2A4B4D45263931616A7C5D766F55(x UInt8) Engine=Memory;
SELECT parseDateTimeBestEffortOrZero('Dec 15, 2021', 'UTC') AS a, toTypeName(a);
SELECT 'Running test stateless/01825_type_json_9.sql from pid=1713' 
CREATE TABLE test_47726E507848592F6561262C4F336A4B54352E722A3B75234659394E4B4D20466150725774294F40(x UInt8) Engine=Memory;
CREATE DATABASE IF NOT EXISTS test_xcbl266t 
DROP DICTIONARY database_for_range_dict.range_dictionary_nullable;
SELECT 4294967295, 2147483648, 4294967295 = 2147483648, 4294967295 != 2147483648, 4294967295 < 2147483648, 4294967295 <= 2147483648, 4294967295 > 2147483648, 4294967295 >= 2147483648, 2147483648 = 4294967295, 2147483648 != 4294967295, 2147483648 < 4294967295, 2147483648 <= 4294967295, 2147483648 > 4294967295, 2147483648 >= 4294967295 , toUInt32(4294967295) = toUInt32(2147483648), toUInt32(4294967295) != toUInt32(2147483648), toUInt32(4294967295) < toUInt32(2147483648), toUInt32(4294967295) <= toUInt32(2147483648), toUInt32(4294967295) > toUInt32(2147483648), toUInt32(4294967295) >= toUInt32(2147483648), toUInt32(2147483648) = toUInt32(4294967295), toUInt32(2147483648) != toUInt32(4294967295), toUInt32(2147483648) < toUInt32(4294967295), toUInt32(2147483648) <= toUInt32(4294967295), toUInt32(2147483648) > toUInt32(4294967295), toUInt32(2147483648) >= toUInt32(4294967295) , toUInt32(4294967295) = toUInt64(2147483648), toUInt32(4294967295) != toUInt64(2147483648), toUInt32(4294967295) < toUInt64(2147483648), toUInt32(4294967295) <= toUInt64(2147483648), toUInt32(4294967295) > toUInt64(2147483648), toUInt32(4294967295) >= toUInt64(2147483648), toUInt64(2147483648) = toUInt32(4294967295), toUInt64(2147483648) != toUInt32(4294967295), toUInt64(2147483648) < toUInt32(4294967295), toUInt64(2147483648) <= toUInt32(4294967295), toUInt64(2147483648) > toUInt32(4294967295), toUInt64(2147483648) >= toUInt32(4294967295) , toUInt32(4294967295) = toInt64(2147483648), toUInt32(4294967295) != toInt64(2147483648), toUInt32(4294967295) < toInt64(2147483648), toUInt32(4294967295) <= toInt64(2147483648), toUInt32(4294967295) > toInt64(2147483648), toUInt32(4294967295) >= toInt64(2147483648), toInt64(2147483648) = toUInt32(4294967295), toInt64(2147483648) != toUInt32(4294967295), toInt64(2147483648) < toUInt32(4294967295), toInt64(2147483648) <= toUInt32(4294967295), toInt64(2147483648) > toUInt32(4294967295), toInt64(2147483648) >= toUInt32(4294967295) , toUInt64(4294967295) = toUInt32(2147483648), toUInt64(4294967295) != toUInt32(2147483648), toUInt64(4294967295) < toUInt32(2147483648), toUInt64(4294967295) <= toUInt32(2147483648), toUInt64(4294967295) > toUInt32(2147483648), toUInt64(4294967295) >= toUInt32(2147483648), toUInt32(2147483648) = toUInt64(4294967295), toUInt32(2147483648) != toUInt64(4294967295), toUInt32(2147483648) < toUInt64(4294967295), toUInt32(2147483648) <= toUInt64(4294967295), toUInt32(2147483648) > toUInt64(4294967295), toUInt32(2147483648) >= toUInt64(4294967295) , toUInt64(4294967295) = toUInt64(2147483648), toUInt64(4294967295) != toUInt64(2147483648), toUInt64(4294967295) < toUInt64(2147483648), toUInt64(4294967295) <= toUInt64(2147483648), toUInt64(4294967295) > toUInt64(2147483648), toUInt64(4294967295) >= toUInt64(2147483648), toUInt64(2147483648) = toUInt64(4294967295), toUInt64(2147483648) != toUInt64(4294967295), toUInt64(2147483648) < toUInt64(4294967295), toUInt64(2147483648) <= toUInt64(4294967295), toUInt64(2147483648) > toUInt64(4294967295), toUInt64(2147483648) >= toUInt64(4294967295) , toUInt64(4294967295) = toInt64(2147483648), toUInt64(4294967295) != toInt64(2147483648), toUInt64(4294967295) < toInt64(2147483648), toUInt64(4294967295) <= toInt64(2147483648), toUInt64(4294967295) > toInt64(2147483648), toUInt64(4294967295) >= toInt64(2147483648), toInt64(2147483648) = toUInt64(4294967295), toInt64(2147483648) != toUInt64(4294967295), toInt64(2147483648) < toUInt64(4294967295), toInt64(2147483648) <= toUInt64(4294967295), toInt64(2147483648) > toUInt64(4294967295), toInt64(2147483648) >= toUInt64(4294967295) , toInt64(4294967295) = toUInt32(2147483648), toInt64(4294967295) != toUInt32(2147483648), toInt64(4294967295) < toUInt32(2147483648), toInt64(4294967295) <= toUInt32(2147483648), toInt64(4294967295) > toUInt32(2147483648), toInt64(4294967295) >= toUInt32(2147483648), toUInt32(2147483648) = toInt64(4294967295), toUInt32(2147483648) != toInt64(4294967295), toUInt32(2147483648) < toInt64(4294967295), toUInt32(2147483648) <= toInt64(4294967295), toUInt32(2147483648) > toInt64(4294967295), toUInt32(2147483648) >= toInt64(4294967295) , toInt64(4294967295) = toUInt64(2147483648), toInt64(4294967295) != toUInt64(2147483648), toInt64(4294967295) < toUInt64(2147483648), toInt64(4294967295) <= toUInt64(2147483648), toInt64(4294967295) > toUInt64(2147483648), toInt64(4294967295) >= toUInt64(2147483648), toUInt64(2147483648) = toInt64(4294967295), toUInt64(2147483648) != toInt64(4294967295), toUInt64(2147483648) < toInt64(4294967295), toUInt64(2147483648) <= toInt64(4294967295), toUInt64(2147483648) > toInt64(4294967295), toUInt64(2147483648) >= toInt64(4294967295) , toInt64(4294967295) = toInt64(2147483648), toInt64(4294967295) != toInt64(2147483648), toInt64(4294967295) < toInt64(2147483648), toInt64(4294967295) <= toInt64(2147483648), toInt64(4294967295) > toInt64(2147483648), toInt64(4294967295) >= toInt64(2147483648), toInt64(2147483648) = toInt64(4294967295), toInt64(2147483648) != toInt64(4294967295), toInt64(2147483648) < toInt64(4294967295), toInt64(2147483648) <= toInt64(4294967295), toInt64(2147483648) > toInt64(4294967295), toInt64(2147483648) >= toInt64(4294967295) 
CREATE TABLE raw (`name` String, `num` String) ENGINE = MergeTree ORDER BY name SETTINGS index_granularity = 17919, min_bytes_for_wide_part = 104757764, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 76, merge_max_block_size = 24245, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 9833400709, index_granularity_bytes = 617135, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 76110, primary_key_compress_block_size = 16064
SELECT distinct(value) FROM mutation_table ORDER BY value;
INSERT INTO r6 SELECT 70 % 10 = 6 ? 70 - 1 : 70
CREATE TABLE test_01193_18429.table_3_564 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
SELECT 'Running test stateless/00199_ternary_operator_type_check.sql from pid=1726' 
SET min_bytes_to_use_direct_io='1Gi';
SELECT 'Running test stateless/01214_test_storage_merge_aliases_with_where.sql from pid=1722' 
SELECT 'dt != dt64' FROM dt64test WHERE dt_column != materialize(toDateTime64('2020-01-13 13:37:00', 3));
SELECT range(1), arrayMap(x -> arrayMap(x -> x, range(x)), [1]) SETTINGS allow_experimental_analyzer = 1;
select 'max';
CREATE ROW POLICY 02131_filter_2 ON 02131_rptable USING x=2 AS permissive TO ALL;
SELECT 'Running test stateless/02479_analyzer_aggregation_totals_rollup_crash_fix.sql from pid=1722' 
insert into rhs values 
DROP DATABASE IF EXISTS test_e80mfx3h 
SELECT 29,toFixedString('Hello', 10), bin(bitShiftRight(toFixedString('Hello', 10), 29));
SELECT t1.id, t1.value, t2.id, t2.value, t3.id, t3.value FROM test_table_join_1 AS t1 LEFT JOIN test_table_join_2 AS t2 ON t1.id = t2.id AND t1.value == 'Join_1_Value_0' AND t2.value == 'Join_2_Value_0' RIGHT JOIN test_table_join_3 AS t3 ON t2.id = t3.id AND t2.value == 'Join_2_Value_0' AND t3.value == 'Join_3_Value_0';
CREATE TABLE test_40796352354C38383B2C74723A206C46525B6F3A695E7767597C7C56773F583A2078284A2E63333A(x UInt8) Engine=Memory;
CREATE TABLE t_sparse_mutations_2 (`key` UInt8, `id` UInt64, `s` String) ENGINE = MergeTree PARTITION BY key ORDER BY id SETTINGS ratio_of_defaults_for_sparse_serialization = 0.9, index_granularity = 34670, min_bytes_for_wide_part = 1073741824, replace_long_file_name_to_hash = false, max_file_name_length = 56, merge_max_block_size = 10379, prefer_fetch_merged_part_size_threshold = 9640982666, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 27684264, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 20438, primary_key_compress_block_size = 88476
SELECT greatest('hello', 'world');
CREATE DATABASE IF NOT EXISTS test_99z4evmb 
CREATE TABLE test_02908_r3_262 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_262', 'r3') ORDER BY tuple()
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (36 < 64 AND 43 > 0 ? 36 : 0)), throwIf(last != (36 < 64 AND 43 > 0 ? least(64 - 1, 36 + 43 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(64) LIMIT 36, 43);
SELECT mapSort(col) FROM table_map ORDER BY id;
SELECT count() FROM `test_3d0p8mvp`.`count`
RENAME TABLE test_01155_atomic.mv2 TO test_01155_ordinary.mv2;
CREATE TABLE test_01193_18429.table_6_218 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE DATABASE IF NOT EXISTS test_ulvnrem1 
select mapAdd(map(1, toFloat64(1.1), 2, 1), map(1, 2.2, 2, 1)) as res, toTypeName(res);
WITH toDateTime64('2019-09-16 19:20:11.234', 3, 'Europe/Minsk') as DT64, toDateTime('2019-09-16 19:20:11', 'Europe/Minsk') as DT, toDate('2019-09-16') as D, DT64 as N SELECT toTypeName(r), N != toUInt32(1) as r FORMAT CSV;
SELECT * FROM template GROUP BY question, answer, likes, date WITH TOTALS ORDER BY date LIMIT 3 FORMAT Template SETTINGS format_template_resultset = '/usr/share/clickhouse-test/queries/0_stateless/00937_format_schema_rows_template_test_sbp1mdkp_template_output_format_resultset.tmp', format_template_resultset_format = '===== Resultset ===== \n ${data} \n ===============', format_template_row_format = 'Question: ${question:Quoted}, Answer: ${answer:Quoted}, Number of Likes: ${likes:Raw}, Date: ${date:Raw}', format_template_rows_between_delimiter = ';\n';
SELECT quantilesExact(0, 0.001, 0.01, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 0.99, 0.999, 1)(x) FROM (SELECT number AS x FROM system.numbers LIMIT 1001);
CREATE TABLE test_3861433248755F2846582E5F73756E704C3057403B6B2E675D50296A672B4A51272D2229367E2A33(x UInt8) Engine=Memory;
CREATE TABLE test_74503B4E616B72785571286873695974443A78524D266D336D336A674D784651292B38243F762C3A(x UInt8) Engine=Memory;
SELECT 'Running test stateless/01076_window_view_alter_query_to.sh from pid=1715' 
CREATE TABLE test_01193_18429.table_5_286 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
CREATE DATABASE IF NOT EXISTS test_8gtceu3q 
OPTIMIZE TABLE test_table_1 FINAL
INSERT INTO dst_1 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 48
 explain actions = 1 select * from ( select y, sum(x) from (select number as x, number % 4 as y from numbers(10)) group by y with totals ) where y != 2 settings enable_optimize_predicate_expression=0
INSERT INTO test_01193_18429.table_6_539 VALUES 
SELECT '6 HOUR';
DROP DATABASE IF EXISTS test_7xjv1wtt 
CREATE TABLE test (`id` UInt64, `v` Variant(UInt64, String, Array(UInt64))) ENGINE = MergeTree ORDER BY id SETTINGS min_rows_for_wide_part = 100000000, min_bytes_for_wide_part = 1000000000, index_granularity = 8192, index_granularity_bytes = '10Mi', ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = true, max_file_name_length = 0, merge_max_block_size = 15872, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 373007, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10254476207, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 31976, primary_key_compress_block_size = 61316
WITH number AS k SELECT k FROM system.numbers LIMIT 10;
SELECT toDate('2015-06-12') IN (toDate('2015-06-12'));
DROP DATABASE IF EXISTS 01759_db;
CREATE DATABASE IF NOT EXISTS test_h20y7clb 
INSERT INTO fh(a_value, b_value, c_value, d_value) VALUES 
CREATE DATABASE IF NOT EXISTS test_2wcexh3b 
CREATE TABLE data_order_by_proj_incomp (`t` UInt64) ENGINE = MergeTree ORDER BY t SETTINGS index_granularity = 55683, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 6335, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1000000, vertical_merge_algorithm_min_columns_to_activate = 100, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 23642040, allow_vertical_merges_from_compact_to_wide_parts = true, marks_compress_block_size = 34979, primary_key_compress_block_size = 88440
CREATE TABLE test_02240_storage_policy (key UInt32, value String) Engine=MergeTree() ORDER BY key SETTINGS storage_policy='s3_cache', min_bytes_for_wide_part = 1000000, compress_marks=false, compress_primary_key=false
create table child2 (id int, pid int, primary key(id), foreign key(pid) references parent(pid) on delete cascade) engine MergeTree;
select toTypeName(res), if(NULL, materialize([1,2,3]), 'str_1'::Nullable(String)) as res;
select arrayAUC(cast([-0.1, -0.4, -0.35, -0.8] as Array(Float32)) , [0, 0, 1, 1]);
desc format(Values, '([123, 123])');
SELECT col1, col2, isNull(col1), isNotNull(col2) FROM test1_00395 ORDER BY col1,col2 ASC;
SELECT 'type;toLastDayOfMonth;toDate32;false', toTypeName(toLastDayOfMonth(toDate32('1920-02-02'))) SETTINGS enable_extended_results_for_datetime_functions = false;
SELECT 'Running test stateless/02959_system_database_engines.sql from pid=1718' 
SELECT isConstant((SELECT 1));
SELECT 1 FORMAT Null;
CREATE TABLE test_723C662F6C6B31494E3C3A5A4F6B2A76572D384D36744C2977486C307E233E5F2C6B2F612C473B37(x UInt8) Engine=Memory;
SELECT 'Running test stateless/00651_default_database_on_client_reconnect.sh from pid=1714' 
CREATE TABLE test_01193_18429.table_10_228 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
insert into summing_merge_tree_aggregate_function select 1, avgState(0.875);
CREATE TABLE test_01193_18429.table_4_957 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
optimize table simple final;
select endsWith([], [NULL]);
INSERT INTO test_01193_18429.table_10_207 VALUES 
CREATE TABLE test_01193_18429.table_1_353 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
CREATE TABLE test_01193_18429.table_8_155 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Memory;
CREATE DATABASE IF NOT EXISTS test_hywo8dn0 
DROP TABLE a;
CREATE TABLE test_5A793F3962484C5535652A72705E716C4F2B5922765B466640394B3D64323954272C614E3572542F(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS `01851_merge_tree`;
SELECT arrayEnumerateDense(NULL, NULL);
INSERT INTO test_01193_18429.table_2_911 VALUES 
INSERT INTO mt VALUES /* (-12, 1) */ 
INSERT INTO dst_9 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 94
DROP DICTIONARY polygon_dictionary_01862;
CREATE TABLE enum (x Enum8('a' = 1, 'bcdefghijklmno' = 0)) ENGINE = Memory
SELECT `x`, `s` FROM `test_gvzh45jq`.`mergetree_00588` PREWHERE `x` = 1 WHERE (`x` = 1) AND (`s` LIKE '%l%') ORDER BY `x` ASC, `s` ASC
CREATE TABLE test_627A526176326E7E4B7B263A232E3F322D62325B212F40233339796B76454A2539243132662B262A(x UInt8) Engine=Memory;
SELECT round(quantileDD(0.003, 0.42)(number), 2) FROM numbers(200);
EXPLAIN SYNTAX SELECT transform(number, [2, 4, 6], ['google', 'censor.net', 'yahoo'], 'other') as value, value FROM system.numbers LIMIT 10;
SELECT Y, uniqTheta(X) FROM (SELECT number AS X, round(1/(1 + (3*X*X - 7*X + 11) % 37), 3) AS Y FROM system.numbers LIMIT 1000000) GROUP BY Y ORDER BY Y;
DROP DATABASE IF EXISTS test_ro0m0jt4 
SELECT * FROM ( SELECT m0.pt ,m0.exposure_uv AS exposure_uv ,round(m2.exposure_uv,4) FROM ( SELECT pt ,exposure_uv FROM test1 ) m0 LEFT JOIN ( SELECT pt ,exposure_uv FROM test1 ) m1 ON m0.pt = m1.pt LEFT JOIN ( SELECT pt ,exposure_uv FROM test1 ) m2 ON m0.pt = m2.pt ) c0 ORDER BY exposure_uv settings join_use_nulls = 1;
CREATE TABLE test_01193_18429.table_6_37 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
CREATE TABLE template (question String, answer String, likes UInt64, date Date) ENGINE = Memory
INSERT INTO test_01193_18429.table_3_326 VALUES 
INSERT INTO test_01193_18429.table_6_932 VALUES 
SELECT 3_4e+2_1;
ALTER TABLE fetches_r1 DELETE WHERE x = 0
DROP TABLE test_low_cardinality_int;
SELECT CASE WHEN (number % 2) = 0 THEN [toUInt8(1), toUInt8(2)] WHEN (number % 3) = 0 THEN [toInt32(2), toInt32(3)] ELSE [toUInt32(3), toUInt32(3)] END FROM system.numbers LIMIT 10;
SELECT CASE WHEN 1 THEN [col2, 'bar'] WHEN 1 THEN [col4, 'bar'] ELSE ['foo', col7] END FROM multi_if_check;
CREATE INDEX idx_tab2_0 ON tab2 (col0,col4,col3 DESC);
WITH map(1, 2, 3, 4) AS m SELECT m[3];
CREATE INDEX idx_tab4_2 ON tab4 (col1,col3 DESC);
INSERT INTO r3 SELECT 62 % 10 = 3 ? 62 - 1 : 62
CREATE TABLE test_01193_18429.table_10_484 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
select count(ignore(*)) from data_02051 settings min_bytes_to_use_direct_io=0, local_filesystem_read_method='pread_threadpool', local_filesystem_read_prefetch=1, read_priority=1, max_read_buffer_size=65505 ;
SELECT tupleMultiplyByNumber(tuple(1), 1);
DROP DATABASE IF EXISTS test_3gmag1g8 
SELECT toDate('2015-02-05') IN ('2015-02-04', '2015-02-05');
SELECT 6, 10, count() AS c, min(number) AS first, max(number) AS last, throwIf(first != (6 < 13 AND 10 > 0 ? 6 : 0)), throwIf(last != (6 < 13 AND 10 > 0 ? least(13 - 1, 6 + 10 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(13) LIMIT 6, 10);
SELECT `dist2_layer_01071`.`key`, `dist2_layer_01071`.`sub_key` FROM `test_zrr71z40`.`dist2_layer_01071` WHERE `key` = 1
SELECT y FROM enums WHERE x IN (0, -1);
INSERT INTO test_01193_18429.table_2_392 VALUES 
CREATE TABLE geo (s String, id Int) engine=Memory();
SELECT toTypeName(x), x, isNull(x), if(x = 0, 'fail', 'ok'), if(x = 1, 'fail', 'ok'), if(x >= 0, 'fail', 'ok') FROM (SELECT if(1 = 0, toNullable(toUInt8(0)), NULL) AS x);
select array, struct.d1, struct.a1, struct.a2, struct.a3, struct.a4, struct.a5, struct.a6 from aliases_test array join struct as struct;
CREATE TABLE dist (s String, x String DEFAULT 'asdf') ENGINE=Distributed(test_shard_localhost, test_01155_ordinary, src);
CREATE TABLE table_gcd_codec_one_hundred_ones (`a` Nullable(Int64) CODEC(GCD, LZ4)) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 35290, min_bytes_for_wide_part = 1073741824, ratio_of_defaults_for_sparse_serialization = 1., replace_long_file_name_to_hash = false, max_file_name_length = 128, merge_max_block_size = 17883, prefer_fetch_merged_part_size_threshold = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 1, index_granularity_bytes = 19751206, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 73341, primary_key_compress_block_size = 61572
CREATE TABLE test_yk9180p3_02911_keeper_map.02911_backup_restore_keeper_map1 (key UInt64, value String) Engine=KeeperMap('/' || currentDatabase() || '/test02911') PRIMARY KEY key;
DROP DATABASE IF EXISTS test_xcfircyg 
SELECT nowInBlock(NULL) IS NULL;
set allow_experimental_parallel_reading_from_replicas = 0;
alter table mt update n=n+1 where 1
INSERT INTO test_01193_18429.table_4_287 VALUES 
select toTypeName(generateRandomStructure(5, 42));
CREATE TABLE test_4E492756766D4E486053437E2A2D3470305521266665464B7D723D5E3E7A3933325E303C725E4726(x UInt8) Engine=Memory;
INSERT INTO test_02908_r1_137 SELECT rand64() FROM numbers(5);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (9 < 35 AND 72 > 0 ? 9 : 0)), throwIf(last != (9 < 35 AND 72 > 0 ? least(35 - 1, 9 + 72 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(35) LIMIT 9, 72);
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (18 < 59 AND 98 > 0 ? 18 : 0)), throwIf(last != (18 < 59 AND 98 > 0 ? least(59 - 1, 18 + 98 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(59) LIMIT 18, 98);
CREATE TABLE test_73584F2F672E6E4B4534784665573D524A2F7C49655A386E75362B57523C2B27225F352A5F487353(x UInt8) Engine=Memory;
DROP TABLE IF EXISTS data_01875_2;
SELECT groupBitOr(NULL);
ALTER TABLE replicated_mutations_empty_partitions DROP PARTITION '4';
select toStartOfMonth(toDateTime(0, 'America/Los_Angeles'));
INSERT INTO test_01193_18429.table_10_464 VALUES 
SELECT * FROM replicated_truncate1 ORDER BY k;
INSERT INTO t_async_insert_bad_data VALUES 
CREATE TABLE test_02908_r3_178 (a UInt64) ENGINE=ReplicatedMergeTree('/02908/{database}/test_178', 'r3') ORDER BY tuple()
INSERT INTO test_nv8cel1i.t_async_insert_native_3 FORMAT Native
CREATE DATABASE IF NOT EXISTS test_0kayy4wn 
SELECT sum(e) from tab_02473 PREWHERE b > 0 AND b <= 70 AND c > 0 AND c <= 51 AND d > 5 AND d <= 35 WHERE a == 0;
CREATE DATABASE IF NOT EXISTS test_eh9t6oxw 
CREATE TABLE test_01193_18429.table_2_884 (`i` UInt64, `d` Date, `s` String, `n` Nested(i UInt8, f Float32)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 7110, min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.2034488022327423, replace_long_file_name_to_hash = false, max_file_name_length = 0, merge_max_block_size = 8986, prefer_fetch_merged_part_size_threshold = 10737418240, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1, min_merge_bytes_to_use_direct_io = 10732654831, index_granularity_bytes = 21532701, allow_vertical_merges_from_compact_to_wide_parts = false, marks_compress_block_size = 25212, primary_key_compress_block_size = 52950
INSERT INTO test_01193_18429.table_8_172 VALUES 
SELECT sum(e) from tab_02473 PREWHERE b > 0 AND b <= 70 AND c > 46 AND c <= 76 AND d > 32 AND d <= 62 WHERE a == 0;
SELECT CASE WHEN (col1 % 2) = 0 THEN ['foo', 'bar'] WHEN 1 THEN ['foo', col5] ELSE ['foo', 'bar'] END FROM multi_if_check;
SELECT multiIf((number % 2) = 0, [toInt32(1), toInt32(2)], (number % 3) = 0, [toInt8(2), toInt8(3)], [toUInt8(3), toUInt8(3)]) FROM system.numbers LIMIT 10;
INSERT INTO test_01193_18429.table_2_342 VALUES 
CREATE TABLE source_table_tiny_log (x UInt16) ENGINE = TinyLog;
create table data_fsync_pe (key Int) engine=MergeTree() order by key settings min_rows_for_wide_part = 2, fsync_after_insert = 1, fsync_part_directory = 1, ratio_of_defaults_for_sparse_serialization = 1;
WITH count() AS c, min(number) AS first, max(number) AS last SELECT throwIf(first != (106 < 76 AND 94 > 0 ? 106 : 0)), throwIf(last != (106 < 76 AND 94 > 0 ? least(76 - 1, 106 + 94 - 1) : 0)), throwIf((c != 0 OR first != 0 OR last != 0) AND (c != last - first + 1)) FROM (SELECT * FROM numbers(76) LIMIT 106, 94);
CREATE TABLE test_246C215C47654C4D29683B6C5F67753D623F3473694B7579322A39415F394E736A48762651702147(x UInt8) Engine=Memory;
CREATE TABLE test_01193_18429.table_3_398 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=StripeLog;
SELECT 'SELECT t1.a, t2.b, t3.b FROM t1, t2, t3 WHERE t1.b = t2.b AND t1.b = t3.b';
DROP ROLE r1_01293, r2_01293, r3_01293, r4_01293, r5_01293;
CREATE DATABASE IF NOT EXISTS test_aveqenpl 
alter table data_01900_1 update s = 'foo_17' where 1;
SELECT 'Running test stateless/01710_minmax_count_projection_modify_partition_key.sql from pid=1715' 
CREATE DICTIONARY example_simple_key_dictionary ( id UInt64, value UInt64 ) PRIMARY KEY id SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE '' DATABASE currentDatabase())) LAYOUT(DIRECT());
INSERT INTO src_7 SELECT * FROM generateRandom('p UInt64, k UInt64, v UInt64') LIMIT 92
CREATE DATABASE IF NOT EXISTS test_f5q3dzao 
DROP DATABASE IF EXISTS test_kormx5kq 
select count() from tsv;
INSERT INTO test_01193_18429.table_3_684 VALUES 
SELECT 'With merge partition only';
SELECT JSONExtractKeysAndValuesRaw('{"a": "hello", "b": [-100, 200.0, 300]}', 'b');
INSERT INTO test_01193_18429.table_3_19 VALUES 
DROP DATABASE IF EXISTS test_tc1uzesn 
SELECT number % 2 ? toDecimal128('128.1', 5) : toDecimal64('64.2', 5) FROM system.numbers LIMIT 2;
SELECT CASE WHEN 1 THEN [col2, col3] WHEN (col1 % 3) = 0 THEN [col4, col5] ELSE ['foo', 'bar'] END FROM multi_if_check;
CREATE TABLE test_01193_18429.table_3_406 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
select mortonEncode((1,1), 65534, 65533);
select parseDateTimeInJodaSyntax('0 pm', 'H a', 'UTC') = toDateTime('1970-01-01 00:00:00', 'UTC');
SELECT * FROM system.database_engines WHERE name IN ('Atomic', 'Lazy', 'Ordinary') ORDER BY name;
CREATE TABLE test_665D312C4E4B79733925693178253F58794167467C672D353B464C765C3D655D2920292754684653(x UInt8) Engine=Memory;
SELECT throwIf((SELECT (count(), sum(n)) FROM merge(currentDatabase(), '') WHERE type=4) != (toUInt8(4/2 + 1), (select sum(number) from numbers(1, 4) where number % 2 or number=4))) FORMAT Null;
CREATE TABLE test_397C715E6850585C75215B413636254D6A2935605D235561716740545F5F792F637122682F2A355C(x UInt8) Engine=Memory;
DROP TABLE 02680_datetime64_monotonic_check;
INSERT INTO test_01193_18429.table_3_293 VALUES 
CREATE TABLE test_54273E6B5729744B2C657E6C417824635D413D7E4C2438422878352962725E324D2C5B315E3C4B37(x UInt8) Engine=Memory;
select '{ key: fn, value: concat }' == format('{}{}{}{}{}', '{ key: ', toFixedString('fn', 2), ', value: ', 'concat', ' }');
INSERT INTO async_inserts FORMAT JSONEachRow 
SELECT 'ARRAY JOIN with column';
CREATE TABLE test_01193_18429.table_4_977 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=Log;
DROP DATABASE IF EXISTS test_t7l6o8nn 
RENAME TABLE 02265_ordinary_db.join_table TO 02265_atomic_db.join_table;
SELECT toString(accurateCastOrNull('2023-05-30 14:38:20', 'DateTime'), timezone());
SELECT * FROM test_01109_ordinary.t4;
CREATE TABLE test_79692D785C2F2D7A5423432C79476133603E50245C7D63333E2E76652E33443844213E4B577D7369(x UInt8) Engine=Memory;
DROP TABLE src2dst_false;
SELECT uniqCombined(dummy) FROM remote('127.0.0.{2,3}', system.one);
SELECT 1 FROM database_for_range_dict.range_dictionary_nullable ORDER BY CountryID, StartDate, EndDate;
select subtractMilliseconds(toDateTime64('2023-01-01 00:00:00.0', 1, 'UTC'), 100);
SELECT concatWithSeparator('|', 'a', materialize(43 :: Int16)) == 'a|43';
SELECT toUInt64(NULL) AS x FROM (SELECT 1) HAVING x IN (SELECT NULL FROM (SELECT x IN (SELECT x IN (SELECT 1), x IN (SELECT 1) FROM (SELECT 1 WHERE x IN (SELECT NULL FROM (SELECT NULL))))));
CREATE TABLE test_01193_18429.table_4_896 (i UInt64, d Date, s String, n Nested(i UInt8, f Float32)) ENGINE=File(CSV);
INSERT INTO r10 SELECT 81
INSERT INTO test_01193_18429.table_3_731 VALUES 
select format('{}{}{}', toFixedString('a', 1), materialize('b'), toFixedString('c', 1)) == 'abc';
