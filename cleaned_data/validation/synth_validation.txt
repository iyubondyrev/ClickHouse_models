SELECT * FROM transactions WHERE transaction_date IN (DATE('2022-01-01'), DATE('2022-01-17'), DATE('2022-02-21'), DATE('2022-05-30'), DATE('2022-07-04'), DATE('2022-12-25'));
SELECT C.Country, SUM(D.Amount) as TotalDonated FROM Donors C INNER JOIN Donations D ON C.DonorID = D.DonorID GROUP BY C.Country ORDER BY TotalDonated DESC LIMIT 3;
SELECT Policy_Type, AVG(Claim_Amount) FROM Claims WHERE Policyholder_Age >= 60 GROUP BY Policy_Type;
SELECT chemical, cost FROM chemical_costs ORDER BY cost DESC;
SELECT AVG(donation_amount) FROM donors WHERE state = 'California';
SELECT condition, approach, MAX(improvement) as max_improvement FROM improvements WHERE region = 'Oceania' GROUP BY condition, approach;
SELECT COUNT(*) FROM Members JOIN ClubMembership ON Members.MemberID = ClubMembership.MemberID WHERE Members.MembershipType = 'Premium' AND ClubMembership.Club = 'Running';
SELECT c.name, program_name FROM countries c JOIN urban_agriculture_programs p ON c.id = p.country_id WHERE c.name != 'Canada';
SELECT ct.name, ct.capacity FROM center_types ct ORDER BY ct.capacity DESC;
SELECT system_name FROM public_transportation;
SELECT location, production FROM wells WHERE location = 'California';
SELECT SUM(sale_value) FROM military_sales WHERE supplier = 'Airbus' AND country = 'France' AND sale_year = 2022;
SELECT zone_name, (LEAD(num_libraries) OVER (PARTITION BY zone_name ORDER BY year) - num_libraries) as change_in_num_libraries FROM zones;
SELECT risk, probability FROM ai_risks ORDER BY probability DESC FETCH FIRST 2 ROWS ONLY;
SELECT c.country_name, SUM(tp.volume) as total_volume FROM timber_production tp INNER JOIN country c ON tp.country_code = c.country_code WHERE tp.year = 2022 GROUP BY c.country_name;
SELECT COUNT(*) FROM IoTDevices;
SELECT Name FROM HeritageSites WHERE Category = 'Natural' AND Status = 'Vulnerable' AND Region = 'Africa';
SELECT program, COUNT(volunteer_name) as num_volunteers FROM volunteers WHERE signup_date >= '2021-01-01' AND signup_date < '2021-04-01' GROUP BY program;
SELECT AVG(weight) FROM astronaut_medical INNER JOIN first_medical_records ON astronaut_medical.astronaut_id = first_medical_records.astronaut_id AND astronaut_medical.medical_record_date = first_medical_records.first_date;
SELECT AVG(length) FROM tunnels;
SELECT 100.0 * SUM(success) / COUNT(*) FROM restorative_justice_outcomes WHERE state = 'TX';
SELECT COUNT(*) FROM licenses WHERE type = 'cultivation' AND applicant = 'social equity' AND county = 'Los Angeles' AND issue_date < '2020-01-01';
SELECT school_district, AVG(COUNT(*)) FROM schools GROUP BY school_district;
SELECT AVG(vessel_speed) FROM (SELECT v.vessel_id, (vessel_distance / TIMESTAMPDIFF(HOUR, v.movement_timestamp, l.movement_timestamp)) AS vessel_speed FROM vessel_movements v JOIN vessel_movements l ON v.vessel_id = l.vessel_id JOIN vessel_info vi ON v.vessel_id = vi.vessel_id WHERE v.movement_timestamp BETWEEN DATE_SUB(NOW(), INTERVAL 1 YEAR) AND NOW() AND vi.flag_state = 'Singapore' AND l.port_id IN (SELECT port_id FROM ports WHERE country IN ('Jamaica', 'Curacao'))) AS speed_calculation;
SELECT a.city, (a.consumption - b.consumption) AS consumption_change FROM city_water_usage a INNER JOIN city_water_usage b ON a.city = b.city AND a.year = 2020 AND b.year = 2019;
SELECT campaign_name, region, launch_year, reach FROM climate_communication WHERE region = 'Africa' AND launch_year BETWEEN 2016 AND 2018;
SELECT AVG(budget) FROM city_budgets WHERE (city = 'Atlanta' OR city = 'Boston' OR city = 'Denver') AND service = 'Public Safety' AND (year = 2022 OR year = 2023);
SELECT material, AVG(price) as avg_price FROM material_prices GROUP BY material ORDER BY avg_price DESC LIMIT 1;
SELECT technology, capacity FROM EnergyStorage ORDER BY capacity DESC LIMIT 1;
SELECT destination, continent, visitors, RANK() OVER (PARTITION BY continent ORDER BY visitors DESC) as popularity_rank FROM north_american_tourism WHERE continent = 'North America' AND popularity_rank <= 5;
SELECT AVG(age) FROM patients WHERE treatment_type = 'medication';
SELECT * FROM workforce_programs ORDER BY budget DESC;
 WITH cte AS (    UPDATE public_works_projects    SET name = 'Project G', state = 'Texas'    WHERE id = 7    RETURNING *    ) SELECT * FROM cte; 
SELECT SUM(streams) AS total_streams, SUM(sales) AS total_sales FROM music_streams JOIN ticket_sales ON music_streams.artist_id = ticket_sales.artist_id WHERE region = 'Latin America';
SELECT COUNT(*) FROM Hiring WHERE HireDate BETWEEN '2021-01-01' AND '2021-12-31';
SELECT city, COUNT(*) AS count FROM NewsArticles GROUP BY city;
SELECT state, job_openings FROM veteran_employment ORDER BY job_openings DESC LIMIT 3;
SELECT i.item, SUM(m.price * m.daily_sales) as revenue FROM menu m JOIN restaurant r ON m.restaurant_id = r.id WHERE r.name = 'fine_dining' GROUP BY i.item ORDER BY revenue DESC LIMIT 3;
SELECT name FROM financial_institutions WHERE id IN (SELECT institution_id FROM loans WHERE type = 'Islamic') AND id IN (SELECT institution_id FROM loans WHERE type = 'Conventional');
SELECT product_category, (SUM(sales.revenue) / (SELECT SUM(total_revenue) FROM sales_by_category)) * 100 as percentage_of_sales FROM sales JOIN sales_by_category ON sales.product_category = sales_by_category.product_category WHERE sales.sale_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY product_category;
SELECT MAX(O.weight) FROM Observations O JOIN Species S ON O.species_id = S.id WHERE S.type = 'Invertebrate' AND O.location = 'Indian Ocean';
SELECT SUM(donation_amount) FROM donations WHERE donor_city LIKE 'S%';
SELECT sensor_id, development_stage FROM biosensor_development WHERE gene_id IN (SELECT gene_id FROM gene_expression WHERE expression > 4.0);
SELECT DATE(transaction_date) AS transaction_date, SUM(fare_amount) AS daily_fare_collection FROM fares WHERE route_id = 3 AND transaction_date >= DATE_SUB(CURRENT_DATE, INTERVAL 7 DAY) GROUP BY transaction_date;
SELECT county, SUM(budget) FROM Government.School WHERE county IN (SELECT name FROM Government.County WHERE (population / area) > 1000) GROUP BY county;
SELECT org_name, SUM(supply_cost) FROM Supplies WHERE supply_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY org_name;
INSERT INTO rural_development (project, country, year, budget) VALUES ('AGRI-INNOVATE 3.0', 'Rwanda', 2023, 5000000);
SELECT * FROM total_premium_by_gender;
SELECT SUM(Cost) FROM DamMaintenance WHERE Year = 2021;
SELECT Name FROM Missions WHERE CrewGender = 'Male' AND CrewGender = 'Female';
SELECT Work_Type.type, AVG(Permit.cost) AS avg_cost FROM Work_Type INNER JOIN Permit ON Work_Type.id = Permit.work_type_id GROUP BY Work_Type.type;
INSERT INTO designer_garments (designer_id, garment_id) SELECT designer.id, garment.id FROM designer INNER JOIN garment ON designer.country_origin = 'India' AND garment.garment_name = 'Rayon';
SELECT MIN(viewership) FROM Canadian_TV;
SELECT AVG(l.productivity) AS avg_productivity FROM labor l WHERE l.department = 'silver';
SELECT SUM(visitors) FROM tourism_stats WHERE country = 'Japan' AND year IN (2020, 2021);
SELECT department, SUM(violation_count) as total_violations FROM policy_violations WHERE department LIKE '%Government%' GROUP BY department;
SELECT name, AVG(score) as avg_score FROM innovation_metrics WHERE region IN ('Central America', 'Caribbean') GROUP BY name ORDER BY avg_score LIMIT 1;
SELECT COUNT(DISTINCT year) FROM public_participation_events WHERE sector = 'justice' AND year BETWEEN (SELECT MAX(year) - 2 FROM public_participation_events) AND MAX(year);
SELECT COUNT(*) FROM Students WHERE NumberOfPublications = 0;
SELECT state, COUNT(*) as parity_law_count FROM mental_health_parity WHERE parity_law = 'yes' GROUP BY state HAVING COUNT(*) > 3;
SELECT state, COUNT(*) as general_hospitals_count FROM Hospitals WHERE type = 'General' GROUP BY state;
SELECT COUNT(*) FROM research_projects WHERE region = 'Indian Ocean' AND focus_area = 'Deep-sea Coral';
SELECT initiative FROM circular_economy WHERE city = 'Tokyo' AND year = 2022;
SELECT AVG(v.CO2_emission_level) AS avg_CO2_emission, YEAR(h.handling_date) AS handling_year, MONTH(h.handling_date) AS handling_month FROM vessels v JOIN handling h ON v.vessel_id = h.vessel_id WHERE v.fleet = 'Atlantic' GROUP BY YEAR(h.handling_date), MONTH(h.handling_date);
SELECT courier, AVG(on_time) * 100 as on_time_percentage FROM eu_deliveries WHERE delivery_country LIKE 'EU%' AND delivery_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 90 DAY) AND CURDATE() GROUP BY courier HAVING COUNT(*) FILTER (WHERE on_time = true) > 0 ORDER BY on_time_percentage DESC;
SELECT MONTH(publish_date), COUNT(*) FROM article WHERE YEAR(publish_date) = 2023 GROUP BY MONTH(publish_date);
DELETE FROM green_buildings WHERE state = 'California' AND certification_level = 'Gold';
SELECT COUNT(DISTINCT member_name) AS long_term_members FROM gym_memberships WHERE DATEDIFF(CURDATE(), start_date) > 365;
SELECT source, SUM(capacity) as total_capacity FROM energy_sources GROUP BY source ORDER BY total_capacity DESC;
SELECT V.VehicleType, M.MaintenanceType, COUNT(VM.VehicleID) as AccessibleVehicleCount FROM Vehicles V INNER JOIN VehicleMaintenance VM ON V.VehicleID = VM.VehicleID INNER JOIN MaintenanceTypes M ON VM.MaintenanceTypeID = M.MaintenanceTypeID WHERE V.Accessibility = 1 GROUP BY V.VehicleType, M.MaintenanceType;
UPDATE donors SET amount_donated = 4000 WHERE country = 'India';
SELECT COUNT(*) FROM exports WHERE element = 'Dysprosium' AND destination = 'US' AND location IN (SELECT name FROM countries WHERE region = 'European Union');
SELECT COUNT(*) as num_active_rigs FROM rig_history rh JOIN rigs r ON rh.rig_id = r.id WHERE r.location = 'Gulf of Mexico' AND rh.year = 2020 AND r.status = 'Active';
SELECT country, SUM(gas_production) as total_gas_production FROM gas_production WHERE YEAR(timestamp) = 2018 GROUP BY country;
SELECT COUNT(albums.id)   FROM albums   JOIN artists ON albums.artist_id = artists.id   WHERE artists.gender = 'Male' AND artists.genre = 'Hip-Hop' AND albums.release_year BETWEEN 2000 AND 2009;
SELECT Forests.Name FROM Forests INNER JOIN Management ON Forests.ForestID = Management.ForestID INNER JOIN LeastSustainable ON Management.ManagementID = LeastSustainable.ForestID;
SELECT model_type, AVG(score) as avg_explainability_score, STDDEV(score) as stddev_explainability_score FROM explainability_scores GROUP BY model_type;
SELECT SUM(budget) FROM Programs WHERE category = 'Theater' AND budget <= 50000;
INSERT INTO creative_apps (id, name, type) VALUES (3, 'Music Generation', 'Audio Processing');
SELECT SUM(id) OVER (ORDER BY issue_date) as total_assets_issued, name, issuer_country, issue_date FROM digital_assets WHERE issuer_country = 'Canada' ORDER BY issue_date;
SELECT city, AVG(revenue) FROM centers GROUP BY city;
SELECT V.name as volunteer_name, T.name as trainer_name, T.organization as trainer_organization FROM Volunteers V INNER JOIN Training_Programs TP ON V.id = TP.volunteer_id INNER JOIN Trainers T ON TP.trainer_id = T.id WHERE TP.program = 'Disaster Response';
SELECT gender, AVG(score) FROM financial_wellbeing WHERE country = 'USA' GROUP BY gender;
SELECT COUNT(*) FROM VRGames WHERE category = 'Simulation' AND satisfaction > 4.5;
SELECT * FROM clinical_trials WHERE drug_id = 'D002' AND trial_status = 'COMPLETED';
UPDATE EmployeeData SET Salary = Salary * 1.03 WHERE Department = 'IT';
SELECT SUM(amount) FROM company_waste WHERE waste_type = 'CompanyA' AND year = 2020;
SELECT DISTINCT Type FROM Providers;
SELECT AVG(distance) FROM facilities WHERE location LIKE 'Rural%';
INSERT INTO landfill_capacity (location, capacity, date) VALUES ('Florida', 600000, '2021-01-01');
SELECT AVG(depth) FROM marine_protected_areas WHERE location = 'Arctic';
SELECT location, MAX(annual_production) as max_annual_production FROM mine_sites WHERE location = 'Zambia';
SELECT * FROM MilitaryOperations.Operations WHERE location = 'Middle East';
INSERT INTO Programs (ProgramID, ProgramName, StartDate, EndDate) VALUES (3, 'Cultural Arts', '2023-09-01', '2024-08-31');
SELECT r.region_name, COUNT(a.id) as animal_count FROM regions r INNER JOIN animal_location al ON r.id = al.region_id INNER JOIN animals a ON al.animal_id = a.id WHERE r.region_name IN ('Africa', 'North America') GROUP BY r.region_name;
SELECT certification_name FROM green_buildings.certifications WHERE year_established >= 2000 AND year_established <= 2010 ORDER BY certification_name;
SELECT SUM(visitor_count) FROM Exhibitions WHERE exhibition_name IN ('Art of the Renaissance', 'Modern Art');
SELECT COUNT(*) AS companies_founded_by_women FROM companies c JOIN founders f ON c.founder_id = f.id WHERE f.gender = 'Female' AND c.founding_date >= DATE_SUB(CURRENT_DATE, INTERVAL 10 YEAR);
SELECT restaurant_location, violation_count FROM food_safety_inspections ORDER BY violation_count DESC;
SELECT COUNT(*) FROM satellites WHERE YEAR(launch_date) = 2010;
SELECT healthcare_facilities.state_code, SUM(healthcare_facilities.budget) as total_budget, COUNT(DISTINCT healthcare_facilities.healthcare_id) as total_facilities FROM healthcare_facilities WHERE healthcare_facilities.rural = TRUE GROUP BY healthcare_facilities.state_code;
SELECT AutonomousVehicles.Program, COUNT(SafetyTests.Id) FROM AutonomousVehicles INNER JOIN SafetyTests ON AutonomousVehicles.Id = SafetyTests.VehicleId WHERE Program LIKE '%Germany%' GROUP BY AutonomousVehicles.Program;
SELECT u.name, SUM(sv.violation_count) as total_violations FROM unions u JOIN safety_violations sv ON u.id = sv.union_id WHERE u.state = 'Texas' GROUP BY u.name;
SELECT AVG(sessions.success) FROM sessions WHERE sessions.name = 'Art Therapy';
SELECT COUNT(*) FROM TrainSchedules TS INNER JOIN Stations S ON TS.station = S.id WHERE S.city = 'NYC' AND HOUR(schedule_time) BETWEEN 6 AND 10 AND delay > 0 AND QUARTER(schedule_time) = 1 AND YEAR(schedule_time) = 2022;
SELECT EXTRACT(MONTH FROM hire_date) AS month, COUNT(*) AS total_hired FROM Employees WHERE hire_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY month;
 SELECT dataset_region, AVG(fairness_score) as avg_fairness_score FROM model_fairness GROUP BY dataset_region;
SELECT year, SUM(funding) FROM exploration_funding GROUP BY year;
SELECT AVG(amount) FROM traffic_violations WHERE city = 'San Francisco';
SELECT country, (SUM(CASE WHEN quarter = 2 THEN num_visitors ELSE 0 END) - SUM(CASE WHEN quarter = 1 THEN num_visitors ELSE 0 END)) AS change_in_visitors FROM quarterly_visitors WHERE country = 'India' AND year = 2023 GROUP BY country;
UPDATE menu_items mi JOIN menu_categories mc ON mi.category = mc.category_name SET mi.category = 'Plant-based' WHERE mi.item_name = 'Impossible Burger' AND mc.category_name = 'New';
SELECT country, (renewable_energy_production + energy_storage_capacity + carbon_price) AS total_energy_efficiency FROM energy_efficiency GROUP BY country ORDER BY total_energy_efficiency DESC LIMIT 3;
SELECT SUM(CASE WHEN DigitalAssets.company_country = 'US' THEN 1 ELSE 0 END) AS total_us_assets, SUM(CASE WHEN DigitalAssets.company_country = 'US' AND DigitalAssets.is_smart_contract = true THEN 1 ELSE 0 END) AS us_smart_contracts FROM DigitalAssets INNER JOIN Companies ON DigitalAssets.company_id = Companies.company_id;
SELECT SUM(donation_amount) FROM donors WHERE country = 'USA' AND donation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR);
SELECT COUNT(*) FROM tours WHERE country = 'Japan' AND duration > 30;
SELECT SUM(quantity) FROM sales WHERE product = 'productA' AND region = 'regionB';
SELECT SUM(Revenue) FROM EsportsEvents WHERE EventDate >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH);
SELECT SUM(company_impact_investments.investment_amount) FROM company_impact_investments INNER JOIN companies ON company_impact_investments.company_id = companies.id WHERE companies.sector = 'technology';
SELECT SUM(balance) FROM accounts WHERE account_type = 'Checking' AND branch = 'Denver';
INSERT INTO matches (match_id, sport, location, tickets_sold) VALUES (4, 'Baseball', 'Japan', 2000);
SELECT hospitals.state, AVG(primary_care_physicians.physician_id) AS avg_physicians FROM primary_care_physicians JOIN hospitals ON primary_care_physicians.hospital_id = hospitals.hospital_id WHERE primary_care_physicians.specialty IN ('Family Medicine', 'General Practice') GROUP BY hospitals.state ORDER BY hospitals.state;
CREATE TABLE Artists (ArtistID INT, Name VARCHAR(50), BirthDate DATE, DeathDate DATE, Movement VARCHAR(50)); INSERT INTO Artists (ArtistID, Name, BirthDate, DeathDate, Movement) VALUES (1, 'Andy Warhol', '1928-08-06', '1987-02-22', 'Pop Art'), (2, 'Jasper Johns', '1930-05-15', '', 'Pop Art');
SELECT SUM(courses_completed) FROM teachers WHERE school = 'Parkside' AND year = 2020;
SELECT * FROM startups;
SELECT f.name FROM Farmers f INNER JOIN Plots p ON f.id = p.farmer_id INNER JOIN Currencies c ON f.location = c.country WHERE f.age < 40 AND p.size < 0.5;
SELECT Nationality, COUNT(*) FROM Astronauts GROUP BY Nationality;
SELECT location, supplies, SUM(quantity) as total_quantity, total_quantity * 100.0 / SUM(SUM(quantity)) OVER (PARTITION BY supplies) as percentage FROM disaster_preparedness GROUP BY location, supplies;
SELECT f.department, AVG(w.salary) FROM workers w JOIN factories f ON w.factory_id = f.factory_id WHERE f.factory_id = 2 GROUP BY f.department;
SELECT issue, project_count FROM issues ORDER BY project_count DESC LIMIT 5;
SELECT p.project_name, MAX(m.depth) FROM ocean_floor_mapping_projects p JOIN marine_life_research_stations m ON p.station_id = m.station_id GROUP BY p.project_id;
SELECT incident_type, COUNT(*) as count FROM security_incidents WHERE date_reported >= '2022-01-01' AND date_reported < '2022-07-01' GROUP BY incident_type;
UPDATE citizen_feedback SET status = 'resolved' WHERE feedback_id = 34;
SELECT AVG(donation_amount) as avg_donation_amount FROM (SELECT donation_amount, donor_country, ROW_NUMBER() OVER (PARTITION BY donor_country ORDER BY donation_amount DESC) as rank FROM donations WHERE donor_country IN ('Brazil', 'Argentina', 'Colombia', 'Mexico', 'Chile')) as donor_ranks WHERE rank = 1;
SELECT crop, MIN(planting_date) AS earliest_planting FROM farm_activities GROUP BY crop;
SELECT AVG(Donations.donation_amount) FROM Donations INNER JOIN (SELECT id, total_volunteers FROM Programs WHERE program_name = 'Helping Hands') AS ProgramVolunteers ON 1=1 WHERE Donations.donor_program = ProgramVolunteers.id;
SELECT DonorRegion, SUM(DonationAmount) as 'Total Donation Amount' FROM Donations WHERE DonationDate BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY DonorRegion;
SELECT habitat_type, COUNT(*) as animal_count FROM AnimalPopulation GROUP BY habitat_type;
WITH cte AS (DELETE FROM community_development WHERE end_date IS NULL) SELECT * FROM cte;
DELETE FROM network_investments WHERE investment_id = 67890;
SELECT DISTINCT Medical_Condition FROM Astronaut_Medical WHERE Mission_Duration > 30;
SELECT COUNT(DISTINCT brand_id) FROM products WHERE product_type = 'Makeup' AND is_vegan = false GROUP BY brand_id HAVING COUNT(DISTINCT product_id) > 10;
SELECT AVG(launch_date) FROM digital_assets WHERE developer IN ('Alice Johnson', 'Bruno Alvarez');
SELECT court_type, SUM(num_cases) as total_cases FROM court_cases_2 WHERE year = 2021 GROUP BY court_type;
SELECT AVG(DATEDIFF(CURDATE(), union_joined_date)) FROM collective_bargaining;
SELECT COUNT(*) FROM community_education WHERE workshop_location = 'Asia';
SELECT AVG(price) FROM Concerts WHERE city = 'Chicago';
SELECT (COUNT(CASE WHEN visitor_location = 'Outside' THEN 1 ELSE NULL END) / COUNT(*)) * 100.0 AS percentage FROM museum_visitors WHERE museum_location = 'New York';
SELECT region, capacity FROM landfill_capacity WHERE date = '2020-01-01';
SELECT COUNT(*) FROM GH_Well WHERE Production_Rate > 500;
SELECT COUNT(*) FROM crops WHERE farming_system = 'indigenous';
SELECT project_type, MAX(installed_capacity) FROM renewable_energy;
SELECT drug_name, SUM(sales_quantity) as total_sales_quantity, SUM(sales_amount) as total_sales_amount FROM SalesData GROUP BY drug_name;
SELECT E.FirstName, E.LastName, E.Salary FROM Employees E INNER JOIN Departments D ON E.Department = D.DepartmentName WHERE D.DepartmentName IN ('Manufacturing') AND E.Salary > (SELECT AVG(E.Salary) FROM Employees E INNER JOIN Departments D ON E.Department = D.DepartmentName WHERE D.DepartmentName IN ('Manufacturing'));
SELECT SUM(investment_amount) FROM climate_communication_projects WHERE location LIKE 'Central America' AND investment_year IN (2019, 2020);
SELECT store_id FROM REGIONAL_STORES WHERE region IN ('East', 'West') AND sales < (SELECT AVG(sales) FROM REGIONAL_STORES);
SELECT COUNT(*) FROM company_founding WHERE founder_race IN ('Black', 'Hispanic', 'Indigenous', 'Pacific Islander');
UPDATE skills SET art_type = 'Printmaking' WHERE artist_id = 1
SELECT SUM(investment_amount) FROM investments WHERE fund_type = 'Equity' AND customer_id IN (SELECT id FROM customers WHERE region = 'Europe');
SELECT Avg(AvgSchoolBudget) FROM Districts WHERE DistrictName = 'District1';
SELECT sale_date, SUM(quantity * price) as total_revenue FROM sales GROUP BY sale_date ORDER BY sale_date;
SELECT COUNT(*) FROM factories WHERE location LIKE '%Spain%' OR location LIKE '%UK%';
SELECT Volunteers.Name, SUM(VolunteerPrograms.Hours) as TotalHours FROM Volunteers INNER JOIN VolunteerPrograms ON Volunteers.VolunteerID = VolunteerPrograms.VolunteerID GROUP BY Volunteers.Name;
SELECT player_id, SUM(kills) as total_kills, SUM(deaths) as total_deaths FROM games GROUP BY player_id;
SELECT c.name, COUNT(ci.id) FROM city c JOIN crime_incidents ci ON c.id = ci.city_id WHERE EXTRACT(MONTH FROM ci.incident_time) = 3 GROUP BY c.id;
SELECT country, SUM(total_workers) FROM factories GROUP BY country;
SELECT MAX(timeline) FROM Sustainable_Projects_UT WHERE state = 'UT' AND is_sustainable = true;
SELECT SUM(total_funding) FROM startups WHERE sector = 'Genetics';
SELECT EXTRACT(MONTH FROM sale_date) AS month, region, SUM(quantity) AS total_sales FROM sales WHERE YEAR(sale_date) = 2021 GROUP BY month, region;
SELECT COUNT(*) FROM claims WHERE MONTH(claim_date) = 1;
SELECT r.country, r.renewable_energy_production FROM renewable_energy r WHERE r.year = 2019 ORDER BY r.renewable_energy_production DESC LIMIT 3;
SELECT disease, DATEDIFF(resolution_date, onset_date) as days_to_resolution FROM cases;
SELECT D.DispensaryID, D.DispensaryName FROM Dispensaries D JOIN Sales S ON D.DispensaryID = S.DispensaryID JOIN Strains ST ON S.StrainID = ST.StrainID WHERE StrainName = 'Blue Dream' AND S.SaleDate >= DATEADD(month, -1, GETDATE()) GROUP BY D.DispensaryID, D.DispensaryName HAVING SUM(QuantitySold) > 100;
SELECT MIN(duration) FROM SpaceMissions INNER JOIN Astronauts ON SpaceMissions.leader_id = Astronauts.id WHERE Astronauts.nationality = 'India';
SELECT COUNT(*) FROM genetic_research WHERE completion_year = 2018 AND region = 'Africa';
SELECT genre, AVG(rating) FROM movies WHERE release_year BETWEEN 2015 AND 2020 AND country = 'USA' GROUP BY genre;
SELECT farm_type, SUM(num_sensors) FROM IoT_Sensors WHERE country = 'Japan' AND farm_type IN ('Coffee Plantation', 'Tea Garden') GROUP BY farm_type;
INSERT INTO volunteers (volunteer_id, signup_date) VALUES (6, '2022-07-15');
SELECT es.name, COUNT(a.id) as artifact_count FROM excavation_sites es JOIN artifacts a ON es.id = a.excavation_site_id WHERE a.year = 2020 GROUP BY es.name;
SELECT COUNT(DISTINCT patient_id) AS total_patients FROM therapist_patients JOIN therapists ON therapist_patients.therapist_id = therapists.therapist_id WHERE therapists.first_name IN ('Alex', 'Zoe');
SELECT MAX(amount) FROM transactions GROUP BY client_id;
SELECT s.species, s.median_length - f.median_length FROM whale_species s JOIN whale_species f ON s.species = f.species WHERE s.gender = 'Male' AND f.gender = 'Female'
SELECT AVG(rating) FROM activities WHERE country = 'Australia' AND sustainability_rating = 5;
SELECT AVG(ArtPieces.AverageRating) AS AverageImpressionistArtworksRating FROM ArtPieces INNER JOIN ArtMovements ON ArtPieces.MovementID = ArtMovements.MovementID WHERE ArtMovements.Name = 'Impressionism';
SELECT initiative, funding FROM pollution_control_initiatives WHERE region = 'North Atlantic';
SELECT court_location, COUNT(*) FILTER (WHERE dismissed) AS dismissed_cases FROM cases WHERE dismissal_date >= NOW() - INTERVAL '3 years' GROUP BY court_location;
SELECT SUM(animal_count) FROM Habitat WHERE name IN ('Habitat_A', 'Habitat_B');
SELECT AVG(sales_value) FROM sales_figures WHERE drug_name = 'Vaxo' AND region = 'United States';
SELECT campaign_id, name, budget FROM public_awareness_campaigns;
SELECT COUNT(species_name), species_name FROM ocean_acidification_impact GROUP BY species_name;
UPDATE Music SET genre = 'Pop' WHERE title = 'SongE';
SELECT region, COUNT(DISTINCT consumer_id) FROM ethical_fashion.purchases WHERE material IN ('cotton', 'polyester', 'wool') GROUP BY region;
CREATE TABLE no_strategy_customers AS SELECT c.id, c.name, c.age, c.country FROM customers c LEFT JOIN investment_portfolios i ON c.id = i.customer_id WHERE i.strategy_name IS NULL;
SELECT clinic_location, AVG(healthcare_provider_age) OVER (PARTITION BY clinic_location) FROM rural_clinics;
SELECT AVG(age) FROM artists;
SELECT COUNT(*) as total_art_pieces FROM art_pieces_identity WHERE year >= 2012 AND underrepresented_community IS NOT NULL;
SELECT COUNT(*) FROM community_development WHERE country = 'India' AND year = 2020 AND completed = TRUE;
SELECT * FROM maritime_laws WHERE region = 'Mediterranean Sea' AND year >= 2010;
SELECT price FROM markets WHERE crop = 'Quinoa';
SELECT game_name, region, COUNT(DISTINCT users.id) as num_users FROM game_sessions JOIN users ON game_sessions.user_id = users.id WHERE start_time >= DATE_SUB(CURRENT_DATE, INTERVAL 1 WEEK) GROUP BY game_name, region;
UPDATE concert_revenue SET total_revenue = (SELECT SUM(ticket_price) FROM tickets JOIN concerts ON tickets.concert_id = concerts.concert_id WHERE concerts.artist_id IN (SELECT artist_id FROM artists WHERE artist_country = 'Asia') AND YEAR(concerts.concert_date) = 2021) WHERE concert_id IN (1, 2, 3); SELECT SUM(total_revenue) FROM concert_revenue;
SELECT artist_name, SUM(tickets_sold) as total_tickets_sold FROM tickets GROUP BY artist_name ORDER BY total_tickets_sold DESC LIMIT 1 OFFSET 1;
SELECT AVG(generation_rate) FROM waste_generation;
DELETE FROM WildlifeSightings WHERE year < 2015;
SELECT ArtName, MAX(Popularity) - MIN(Popularity) AS PopularityIncrease FROM Arts WHERE Country = 'Southeast Asia' AND Year BETWEEN 2015 AND 2020 GROUP BY ArtName ORDER BY PopularityIncrease DESC LIMIT 1;
UPDATE shark_encounters SET encounter_date = '2022-09-12' WHERE encounter_date = '2021-09-12';
SELECT project_name FROM rural_infrastructure WHERE start_date < '2018-01-01';
SELECT MAX(round_number) FROM investments JOIN startups ON investments.startup_id = startups.id WHERE startups.founder_identity = 'LGBTQ+';
UPDATE revenue SET total_revenue = 5000.00 WHERE restaurant_id = 789 AND revenue_date = '2022-02-15';
SELECT PaymentMethod, AVG(OrderValue) AS AvgOrderValue FROM Orders GROUP BY PaymentMethod;
SELECT MIN(date_found) FROM artifacts WHERE site_id = (SELECT site_id FROM excavation_sites WHERE site_name = 'site_f');
SELECT SUM(num_workers) FROM factory_workers WHERE location = 'North America';
SELECT year, COUNT(*), SUM(budget) FROM defense_diplomacy WHERE year >= 2016 GROUP BY year;
SELECT line_name, stations AS highest_stations FROM train_lines ORDER BY stations DESC LIMIT 1; SELECT line_name, stations AS lowest_stations FROM train_lines ORDER BY stations ASC LIMIT 1;
SELECT location FROM Concerts WHERE viewers = 0 GROUP BY location HAVING COUNT(*) = (SELECT COUNT(*) FROM Concerts WHERE Concerts.viewers = 0);
SELECT WorkerName, COUNT(*) as NumProviders FROM MentalHealthProvider GROUP BY WorkerName ORDER BY NumProviders DESC LIMIT 1;
SELECT date, mental_health_score, ROW_NUMBER() OVER (ORDER BY date) as rank FROM mental_health_trend WHERE date >= DATEADD(month, -6, CURRENT_TIMESTAMP) ORDER BY date;
INSERT INTO Customers (CustomerID, Name, City, State, ZipCode) VALUES ('C1003', 'Melissa', 'Detroit', 'MI', '48221');
SELECT name FROM startup_funding WHERE funding_date BETWEEN '2022-07-01' AND '2022-09-30';
SELECT MIN(count) FROM Schools WHERE year = 2022 AND region = 'North';
SELECT EXTRACT(MONTH FROM ExtractionDate) AS Month, EXTRACT(YEAR FROM ExtractionDate) AS Year, ResourceType, SUM(Quantity) FROM Resources WHERE Country = 'South Africa' GROUP BY EXTRACT(MONTH FROM ExtractionDate), EXTRACT(YEAR FROM ExtractionDate), ResourceType;
SELECT project_type, AVG(co2_emissions_reduction) FROM carbon_offset_projects GROUP BY project_type;
SELECT resource_id, MAX(rating) as highest_rating FROM open_pedagogy GROUP BY resource_id ORDER BY highest_rating DESC LIMIT 1;
SELECT artist_name, RANK() OVER (ORDER BY revenue DESC) as artist_rank FROM artists WHERE year = 2020;
SELECT supplier_id, name, ethical_score FROM (SELECT supplier_id, name, ethical_score, NTILE(4) OVER (ORDER BY ethical_score) AS quartile FROM supplier) AS supplier_quartiles WHERE quartile = 4;
SELECT SUM(revenue) FROM orders o JOIN products p ON o.product_id = p.product_id JOIN users u ON o.user_id = u.user_id WHERE u.user_country IN ('Mexico', 'South Korea') AND p.category = 'fashion' AND o.order_date BETWEEN '2022-07-01' AND '2022-09-30';
SELECT AVG(Violations) FROM SafetyViolations WHERE CompanyType != 'Union' AND Industry = 'Transportation' GROUP BY Industry, Year;
SELECT violation_type, SUM(violations) FROM mental_health_parity GROUP BY violation_type;
SELECT E.Equipment_Name, SUM(S.Quantity) AS 'Total Quantity Sold' FROM Sales S JOIN Equipment E ON S.Equipment_ID = E.Equipment_ID WHERE YEAR(S.Sale_Date) = 2020 GROUP BY E.Equipment_Name ORDER BY SUM(S.Quantity) DESC LIMIT 1;
DELETE FROM Students WHERE StudentID NOT IN (SELECT StudentID FROM Publications);
SELECT AVG(budget) FROM rural_infrastructure_projects WHERE start_date > '2017-12-31' AND country = 'Colombia';
SELECT amount FROM br_schema.transportation_budget WHERE year = 2019 AND service = 'Transportation';
SELECT COUNT(*) FROM sustainable_building_projects WHERE completion_year > 2019;
SELECT c.CountryName, SUM(g.SalePrice * s.Quantity) AS TotalRevenue FROM Countries c JOIN Garments g ON c.CountryID = g.CountryID JOIN Sales s ON g.GarmentID = s.GarmentID GROUP BY c.CountryName ORDER BY TotalRevenue DESC;
SELECT COUNT(*) FROM crimes WHERE type = 'theft' AND location = 'parkside' AND report_date BETWEEN '2020-10-25' AND '2020-10-31';
SELECT AVG(sustainability_rating) FROM BRAND_SUSTAINABILITY JOIN SUSTAINABILITY_RATINGS ON BRAND_SUSTAINABILITY.brand_id = SUSTAINABILITY_RATINGS.brand_id WHERE uses_organic_cotton = TRUE;
SELECT MAX(pa.likes) FROM post_activity pa WHERE pa.hashtags LIKE '%#food%';
SELECT position, AVG(age) as avg_age FROM athlete_data GROUP BY position;
SELECT AVG(altitude) FROM Satellites WHERE constellation = 'Earth Observation' AND country = 'France';
SELECT organization_id, SUM(amount) + SUM(hours) as total FROM (SELECT organization_id, amount FROM donations WHERE donation_date BETWEEN '2022-01-01' AND '2022-01-31' UNION ALL SELECT organization_id, hours FROM volunteer_hours WHERE volunteer_date BETWEEN '2022-01-01' AND '2022-01-31') AS total_data GROUP BY organization_id;
SELECT city, COUNT(*) as num_games FROM game_results GROUP BY city;
SELECT COUNT(v.VisitorID) FROM Visitors v JOIN Countries c ON v.Country = c.CountryName WHERE c.Population > 100000000;
SELECT Region, COUNT(*) FROM Organization WHERE EthicalAI = true GROUP BY Region ORDER BY COUNT(*) DESC LIMIT 2;
SELECT attorney_last_name, COUNT(*) as case_count FROM bankruptcy_cases GROUP BY attorney_last_name HAVING COUNT(*) > 30;
SELECT customer_id, score FROM CaringFinance WHERE YEAR(score_date) = 2022 ORDER BY score DESC LIMIT 5;
SELECT SUM(funding) FROM biotech.startups WHERE location IN ('Kenya', 'Egypt', 'South Africa');
SELECT region, COUNT(*) FROM security_incidents WHERE date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY region;
INSERT INTO incident_types (id, name, description) VALUES (1, 'Phishing Attack', 'Attempt to obtain sensitive information by disguising as a trustworthy entity');
SELECT country, SUM(donation_amount) as total_donations FROM donations GROUP BY country;
SELECT projectID, SUM(sustainableMaterialCost) FROM GreenBuildings GROUP BY projectID;
SELECT COUNT(*), SUM(BillingAmount) FROM CaseResolutions WHERE Resolution IN ('Settlement', 'Alternative Dispute Resolution');
SELECT COUNT(*) FROM patents WHERE is_women_led = true AND is_accessible = true;
SELECT SUM(rd_expenditures.amount) FROM rd_expenditures JOIN drugs ON rd_expenditures.drug_id = drugs.id WHERE drugs.name = 'DrugA' AND rd_expenditures.year = 2020;
INSERT INTO Crew_Member (name, age, position, VesselId) SELECT 'Maria Garcia', 35, 'Captain', Vessel.id FROM Vessel WHERE Vessel.type = 'Tanker';
SELECT client_id FROM client_loans WHERE loan_type IN ('Shariah-compliant personal loan', 'Socially responsible auto loan');
SELECT name FROM Festivals WHERE attendance > (SELECT attendance FROM Festivals WHERE name = 'Coachella' AND year = 2010) AND year >= 2010;
SELECT SUM(budget) FROM RuralInfrastructure WHERE country = 'Nigeria' AND year = 2020;
SELECT department, COUNT(grant_id) FROM grants JOIN faculty ON grants.faculty_id = faculty.faculty_id WHERE grant_date >= DATEADD(year, -1, GETDATE()) GROUP BY department;
SELECT COUNT(*) FROM biosensor_projects WHERE completion_year = 2019 AND region = 'Africa';
SELECT country, score FROM technology_scores WHERE region = 'Africa' ORDER BY score DESC LIMIT 3;
SELECT AVG(budget) FROM mars_rovers WHERE agency IN (SELECT agency FROM mars_rovers WHERE launch_date BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY agency) AND mission_name LIKE '%Mars Rover%';
SELECT name, total_funding FROM (SELECT name, total_funding, ROW_NUMBER() OVER (ORDER BY total_funding DESC) as rank FROM indigenous_food_systems) as ranked_systems WHERE rank = 1 OR rank = (SELECT COUNT(*) FROM indigenous_food_systems) ORDER BY total_funding;
SELECT investment_id, amount FROM network_investments WHERE region = 'Africa';
SELECT 'Total emergency calls' AS metric, COUNT(ec.id) AS count FROM emergency_calls ec JOIN disasters d ON ec.disaster_id = d.disaster_id UNION ALL SELECT 'Total crimes' AS metric, COUNT(c.id) AS count FROM crimes c JOIN disasters d ON c.disaster_id = d.disaster_id;
SELECT COUNT(*), SUM(billing_amount) FROM Cases WHERE case_outcome IN ('Settled', 'Dismissed') AND region = 'North';
SELECT f.name, AVG(s.price) FROM seeds s JOIN farmers f ON s.farm_id = f.id GROUP BY f.id HAVING COUNT(DISTINCT s.crop) > 2;
SELECT Project_Name, SUM(Labor_Cost) FROM Green_Buildings WHERE State = 'California' GROUP BY Project_Name;
UPDATE Water_Consumption_Records SET Water_Consumption = 22000 WHERE Mine_Name = 'Jade Jamboree' AND Year = 2019;
SELECT * FROM climate_mitigation_projects WHERE funding = (SELECT MAX(funding) FROM climate_mitigation_projects WHERE location = 'South America');
SELECT SUM(price) FROM HaircareProducts WHERE isSustainable = true AND saleYear = 2020 AND country = 'Canada';
SELECT f.factory_id, MIN(w.salary) as min_salary FROM factories f JOIN workers w ON f.factory_id = w.factory_id WHERE f.department = 'Testing' GROUP BY f.factory_id;
SELECT MAX(quantity) FROM mining WHERE element = 'Neodymium' AND region = 'Asia' AND year = 2019 GROUP BY day, year, element, region
SELECT p.PlayerID, p.Age, p.Gender FROM Players p INNER JOIN ESportsEventsView ev ON p.PlayerID = ev.PlayerID GROUP BY p.PlayerID HAVING COUNT(DISTINCT ev.Platform) = 1;
DELETE FROM music_genres WHERE genre = 'Samba' AND YEAR(event_date) = 2020 AND country = 'Brazil';
SELECT launch_country FROM satellites WHERE launch_year = 2020;
SELECT region, COUNT(DISTINCT crop) AS num_crops FROM farm_activities GROUP BY region;
SELECT AVG(labor_cost) FROM construction_labor_stats WHERE province = 'Quebec';
SELECT underwriter.name FROM underwriter LEFT JOIN (SELECT underwriter_id, COUNT(*) as policy_count FROM policy WHERE processing_date >= DATEADD(MONTH, -1, GETDATE()) GROUP BY underwriter_id) AS policy_count ON underwriter.underwriter_id = policy_count.underwriter_id WHERE policy_count.policy_count IS NULL OR policy_count.policy_count < 100;
SELECT type, SUM(quantity) FROM MilitaryInventory GROUP BY type;
SELECT game_mode, SUM(playtime) AS total_playtime FROM user_games JOIN users ON user_games.user_id = users.user_id JOIN vr_games ON user_games.game_id = vr_games.game_id WHERE users.age > 30 AND users.gender = 'Female' GROUP BY game_mode ORDER BY total_playtime DESC LIMIT 5;
SELECT SpeciesName, SUM(Quantity) FROM FishSpecies GROUP BY SpeciesName;
SELECT country, MAX(severity) FROM vulnerabilities WHERE timestamp >= NOW() - INTERVAL 1 YEAR GROUP BY country;
SELECT SUM(revenue) FROM revenue_virtual_world WHERE region IN ('Africa', 'South America');
SELECT AVG(donation_amount) FROM donors WHERE country = 'USA';
SELECT AVG(followers) FROM users WHERE country = 'Indonesia';
SELECT SUM(package_weight) FROM package_destinations WHERE shipped_to = 'Australia' AND shipped_from LIKE 'Oceania%' AND shipped_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH);
SELECT s.name, d.name, SUM(css.quantity) as total_sales FROM concentrate_strain_sales css JOIN strains s ON css.strain_id = s.id JOIN dispensaries d ON css.dispensary_id = d.id WHERE css.sale_date BETWEEN '2022-04-01' AND '2022-06-30' GROUP BY s.name, d.name;
SELECT mining_sites.name, role, COUNT(*) FROM mining_sites INNER JOIN employees ON mining_sites.id = employees.site_id GROUP BY mining_sites.name, role;
SELECT service_type, requests FROM (SELECT service_type, requests, ROW_NUMBER() OVER (ORDER BY requests DESC) AS rank FROM PublicServiceRequests WHERE state = 'California' AND year = 2021) AS subquery WHERE rank <= 3;
SELECT AVG(rating) FROM product WHERE cruelty_free = TRUE AND launch_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);
UPDATE environmental_impact_table SET environmental_impact_float = 3.0 WHERE chemical_id = (SELECT chemical_id FROM chemical_table WHERE chemical_name = 'Isopropyl Alcohol');
SELECT incident_type, COUNT(*) as frequency FROM IncidentReports GROUP BY incident_type ORDER BY frequency DESC LIMIT 3;
SELECT COUNT(DISTINCT provider) FROM treatment WHERE date BETWEEN '2022-01-01' AND '2022-01-31';
DELETE FROM EmployeeData WHERE (EmployeeID, Salary) IN (SELECT EmployeeID, MAX(Salary) FROM EmployeeData WHERE Department = 'Finance' GROUP BY EmployeeID);
SELECT COUNT(*) FROM concert_events ce JOIN artist_demographics ad ON ce.artist_id = ad.artist_id WHERE ad.gender = 'female' AND ad.ethnicity = 'African' AND ce.event_date BETWEEN '2025-01-01' AND '2025-12-31';
SELECT SUM(amount) FROM renewable_energy WHERE country IN ('South America', 'North America') AND source IN ('Wind', 'Solar');
SELECT Country, MAX(SafetyRating) FROM Vehicles WHERE Type = 'Hybrid' GROUP BY Country;
SELECT COUNT(*) FROM rural_healthcare WHERE type = 'Clinic' AND location = 'Forest Region';
SELECT COUNT(*) FROM Renewable_Energy_Projects WHERE state IN ('New South Wales', 'Victoria') AND completion_year >= 2015;
SELECT country, AVG(amount) as avg_donation FROM Donations GROUP BY country ORDER BY avg_donation DESC LIMIT 1;
SELECT AVG(budget) FROM biotech_startups WHERE location = 'New York';
SELECT AVG(price) FROM clothing_info WHERE is_sustainable = TRUE;
UPDATE warehouses SET country = 'Mexico' WHERE country = 'USA' AND capacity > 4000;
SELECT COUNT(DISTINCT show_name) FROM Auto_Shows JOIN Manufacturers ON Auto_Shows.manufacturer = Manufacturers.name WHERE Manufacturers.name = 'Tesla';
SELECT COUNT(*) as count FROM incidents_by_region WHERE region = 'EMEA' AND date_mitigated < '2021-04-01' AND incident_status = 'mitigated';
SELECT a.Country, (a.Visitors::FLOAT / SUM(a.Visitors) OVER (PARTITION BY a.City) * 100) AS Percentage FROM VisitorsByCity a WHERE a.City = 'New York City';
SELECT COUNT(*) FROM manufacturing_machines WHERE category IN ('machine_3', 'machine_4');
DELETE FROM risk_assessment_table WHERE policy_holder LIKE '%Lee%';
SELECT PlayerName, Goals FROM Players ORDER BY Goals DESC LIMIT 5
SELECT country FROM targets WHERE year = 2020 AND emissions_target < (SELECT emissions FROM emissions WHERE country = targets.country AND year = 2020);
SELECT Country, ROW_NUMBER() OVER (ORDER BY Tournaments DESC) AS Rank FROM EsportsPlayers WHERE Tournaments > 0;
SELECT country, COUNT(*) as num_advisories FROM travel_advisory GROUP BY country;
SELECT SUM(donation_amount) FROM (SELECT donation_amount FROM donors WHERE first_time = TRUE AND donation_date >= '2021-01-01' AND donation_date < '2021-04-01') AS first_time_q1_donations;
SELECT DISTINCT AttorneyLastName, COUNT(*) AS CaseCount FROM ImmigrationCases WHERE CaseType = 'Immigration' GROUP BY AttorneyLastName ORDER BY CaseCount DESC;
SELECT AVG(resilience_score) FROM Dam WHERE region = 'Midwest';
SELECT h.vehicle_type FROM highly_rated_drivers h WHERE h.rating > 4.5 GROUP BY h.vehicle_type;
SELECT States.StateAbbreviation, AVG(Hospitals.NumberOfBeds * 1.0 / StatesPopulation.StatePopulation) as AvgBedsPerCapita FROM Hospitals INNER JOIN States ON Hospitals.StateAbbreviation = States.StateAbbreviation INNER JOIN StatesPopulation ON Hospitals.StateAbbreviation = StatesPopulation.StateAbbreviation GROUP BY States.StateAbbreviation ORDER BY AvgBedsPerCapita DESC;
SELECT sector, COUNT(*) as count FROM ethical_ai WHERE sector = 'Technology' GROUP BY sector;
SELECT department, COUNT(*) FROM students GROUP BY department;
UPDATE hotel_rooms SET room_rate = room_rate * 1.1 WHERE city = 'Barcelona' AND hotel_id > 3;
SELECT MAX(funding) FROM biotech.startups WHERE country = 'Canada';
SELECT continent, SUM(price) AS total_revenue FROM events GROUP BY continent;
SELECT p.name, SUM(CASE WHEN production.element = 'Neodymium' THEN production.quantity ELSE 0 END) AS Neodymium, SUM(CASE WHEN production.element = 'Europium' THEN production.quantity ELSE 0 END) AS Europium FROM production JOIN producers p ON production.producer_id = p.id GROUP BY p.name;
SELECT c.name, MAX(cs.number_of_satellites) FROM countries c JOIN country_satellite_launches cs ON c.id = cs.country_id GROUP BY c.name;
SELECT country, SUM(num_sessions) as total_sessions FROM virtual_tourism WHERE session_date BETWEEN '2023-10-01' AND '2023-12-31' AND region != 'Asia' GROUP BY country ORDER BY total_sessions DESC LIMIT 2;
SELECT vh.volunteer_country, COUNT(DISTINCT vh.volunteer_id) AS total_volunteers, SUM(vh.hours_spent) AS total_hours FROM volunteer_hours vh WHERE EXTRACT(MONTH FROM vh.hour_date) BETWEEN 7 AND 9 GROUP BY vh.volunteer_country;
SELECT project_name, funding_amount FROM genetic_research WHERE location = 'Germany';
SELECT SUM(rainfall) FROM Weather WHERE location = 'Oregon' AND timestamp > NOW() - INTERVAL '1 week';
SELECT ExcavationSites.SiteName, ExcavationSites.Location FROM ExcavationSites INNER JOIN Artifacts ON ExcavationSites.SiteID = Artifacts.SiteID WHERE Artifacts.Age = 'Bronze Age';
SELECT region, game_name, COUNT(*) as play_count FROM Games GROUP BY region, game_name ORDER BY region, play_count DESC LIMIT 5;
SELECT COUNT(*) FROM ExhibitionDetails WHERE city = 'New York';
SELECT menu_category, revenue FROM menu_category_revenue ORDER BY revenue DESC LIMIT 3;
SELECT WEEK(du.usage_date) as week, c.age, c.gender, c.income, SUM(du.usage_bytes) as total_usage FROM customer_data_usage du INNER JOIN customer_demographics c ON du.customer_id = c.customer_id WHERE c.postal_code = '12345' GROUP BY week, c.age, c.gender, c.income;
INSERT INTO Brands(id, name) VALUES (3, 'Green Vogue');
SELECT os, COUNT(*) as user_count FROM mobile_users GROUP BY os;
SELECT category, COUNT(*) as artwork_count FROM Artworks GROUP BY category;
SELECT brand_id, brand_name FROM brands b JOIN products p ON b.brand_id = p.brand_id WHERE material = 'vegan leather';
SELECT DISTINCT Country FROM Wells;
SELECT a.attorney_name, c.case_type, AVG(b.amount) as avg_billing FROM cases c INNER JOIN attorneys a ON c.attorney_id = a.attorney_id INNER JOIN billing b ON c.case_id = b.case_id AND a.attorney_id = b.attorney_id GROUP BY a.attorney_name, c.case_type;
SELECT DATE_FORMAT(date, '%Y-%m') AS month, SUM(streams), SUM(revenue) FROM Streams WHERE artist = 'Taylor Swift' AND country = 'United States' GROUP BY month;
SELECT department, DATE_TRUNC('quarter', hire_date) AS hire_quarter, COUNT(*) AS num_hires FROM employees GROUP BY department, hire_quarter;
INSERT INTO incidents(id, incident_date, location, incident_type) VALUES (NULL, '2023-03-15', 'Brazil', 'Water Pollution');
SELECT projects.name, SUM(funding.amount) FROM funding JOIN projects ON funding.project_id = projects.id WHERE projects.location = 'Haiti' AND funding.funding_date BETWEEN '2019-01-01' AND '2019-12-31' GROUP BY projects.id;
SELECT l.name, l.type, l.location FROM local_business l WHERE l.location = 'Paris' AND l.seats > 10;
SELECT AVG(vulnerability_index.index) as avg_vulnerability_index FROM projects JOIN countries ON projects.country = countries.country JOIN vulnerability_index ON projects.country = vulnerability_index.country WHERE countries.region = 'Asia-Pacific' AND countries.population > 50000000 AND EXISTS (SELECT 1 FROM mitigation_activities WHERE projects.id = mitigation_activities.project_id AND mitigation_activities.activity = 'Climate Change Adaptation');
SELECT m.name, SUM(mp.volume) as total_volume FROM mines m JOIN mine_production mp ON m.id = mp.mine_id GROUP BY m.name;
SELECT DISTINCT FirstName FROM Instructors i WHERE i.InstructorID IN (SELECT c.InstructorID FROM Classes c GROUP BY c.InstructorID HAVING COUNT(DISTINCT c.ClassType) > 5);
SELECT AVG(Horsepower) FROM SportsCar WHERE Year BETWEEN 2015 AND 2020 AND Name LIKE 'Sports Car'
SELECT country, SUM(grant_amount) as total_grants FROM country_grants_2018 GROUP BY country;
SELECT age_group, COUNT(*) as num_vaccinations FROM flu_vaccinations_2 WHERE region = 'Quebec' AND vaccine_date >= '2021-04-01' AND vaccine_date < '2021-07-01' GROUP BY age_group;
SELECT Game, Platform, ReleaseDate, (SELECT COUNT(*) FROM Players WHERE Players.Country = 'Canada') AS PotentialPlayers FROM VirtualReality WHERE ReleaseDate < '2023-01-01' AND Players > 20000;
SELECT AVG(age) as avg_age FROM user_article_engagement WHERE engagement = 'politics';
SELECT * FROM Bridges;
SELECT brands.name, AVG(products.sustainability_score) as avg_score FROM products JOIN brands ON products.brand_id = brands.brand_id GROUP BY brands.name ORDER BY avg_score DESC;
SELECT player_name, SUM(three_point_field_goals) AS total_three_point_field_goals FROM nba_3_point_field_goals JOIN nba_players ON nba_3_point_field_goals.player_id = nba_players.player_id WHERE game_id >= (SELECT MIN(game_id) FROM nba_games WHERE game_date >= '2021-01-01' AND game_date < '2022-01-01') GROUP BY player_name ORDER BY total_three_point_field_goals DESC LIMIT 3;
SELECT EXTRACT(DOW FROM count_date) AS day_of_week, route_id, passenger_count FROM public_transport.passenger_count;
SELECT state, SUM(capacity) as total_capacity FROM landfill_capacity WHERE year = 2019 GROUP BY state;
SELECT author_name, SUM(word_count) FROM reputable_news GROUP BY author_name;SELECT author_name, SUM(word_count) FROM investigative_reports GROUP BY author_name;
SELECT (SELECT SUM(amount) FROM Donations WHERE campaign = 'Habitats for Tigers') - (SELECT SUM(amount) FROM Donations WHERE campaign = 'Habitats for Lions');
SELECT d.department_name, e.gender, COUNT(e.employee_id) AS num_employees FROM Departments d INNER JOIN Employees e ON d.department_id = e.department_id GROUP BY d.department_name, e.gender;
INSERT INTO games (id, name) VALUES (1, 'Dota 2'), (2, 'CS:GO'); UPDATE esports_games SET game_id = CASE WHEN id = 1 THEN 1 WHEN id = 2 THEN 2 ELSE NULL END WHERE game_id IS NULL;
SELECT type, COUNT(initiative) as num_initiatives FROM Tech_Social_Good_Types GROUP BY type;
UPDATE Carbon_Sequestration_2 SET Area = 55.6 WHERE Region = 'Region2';
SELECT campaign_name, AVG(amount_raised) FROM campaigns GROUP BY campaign_name;
SELECT EXTRACT(YEAR FROM exit_date) AS exit_year, COUNT(*) FROM exit INNER JOIN company ON exit.company_id = company.id WHERE company.founding_date < '2010-01-01' AND company.founder_gender = 'BIPOC' AND exit_type = 'Acquisition' GROUP BY exit_year;
SELECT well_name FROM wells WHERE location = 'Gulf of Mexico' AND status = 'Idle';
SELECT district, LAG(water_consumption) OVER (PARTITION BY district ORDER BY date) - water_consumption FROM sydney_water_consumption;
SELECT species, MAX(population) FROM animal_population GROUP BY species;
SELECT COUNT(*) FROM service_providers WHERE service_type = 'sign_language_interpreters';
SELECT COUNT(*) FROM suburban.trains WHERE maintenance_cost < 4000;
SELECT MIN(capacity) FROM landfill_capacity WHERE state = 'California' AND year = 2020;
SELECT name FROM astronauts WHERE country = 'India' AND id = (SELECT MIN(id) FROM astronauts WHERE country = 'India' AND gender = 'Female');
SELECT (SUM(participants) / (SELECT SUM(participants) FROM employee_training WHERE region = 'Southeast')) * 100 FROM employee_training WHERE region = 'Southeast' AND training = 'Disability Awareness';
SELECT Researchers.name FROM Researchers  INNER JOIN Projects ON Researchers.id = Projects.researchers_id WHERE Projects.name IN ('Deep-Sea Exploration', 'Marine Conservation') GROUP BY Researchers.name HAVING COUNT(DISTINCT Projects.name) = 2;
UPDATE ticket_sales SET total_sales = total_sales * 1.10 WHERE event_date BETWEEN '2022-01-01' AND '2022-12-31' AND team = 'Giants';
SELECT s.name, s.certified_date, s.certification_expiration_date FROM suppliers s JOIN products p ON s.id = p.id WHERE p.name = 'free-range eggs';
SELECT SUM(volume) FROM production WHERE location = 'South America';
SELECT AVG(units_produced/hours_worked) FROM productivity WHERE industry = 'Mining';
SELECT SUM(revenue) FROM brands WHERE product_type = 'Clothing' AND brand_name IN ('Ethical Apparel', 'Fair Fashion');
SELECT player_id, SUM(playtime) FROM player_daily_playtime WHERE play_date BETWEEN '2021-01-01' AND '2021-01-31' GROUP BY player_id;
SELECT AVG(Weight / POWER(Height / 100, 2)) FROM Adults_Health WHERE State = 'California' AND Year = 2019;
SELECT AVG(permit_cost) - LAG(AVG(permit_cost)) OVER (PARTITION BY state ORDER BY EXTRACT(YEAR FROM issue_date)) FROM permit_cost_comparison WHERE state = 'California' AND building_type IN ('Commercial', 'Residential') AND issue_date BETWEEN '2021-01-01' AND '2021-12-31';
SELECT AVG(billing_rate) FROM Attorneys WHERE cases > 5;
SELECT AVG(Revenue) FROM Concerts WHERE Year = 2021;
SELECT gender, EXTRACT(MONTH FROM signup_date) AS month, AVG(hours_volunteered) FROM volunteers WHERE signup_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY gender, month;
INSERT INTO CommunityPrograms (ProgramName, StartDate) VALUES ('NeighborhoodWatch', '2023-03-14');
SELECT study_name FROM genetic_research WHERE location = 'Brazil' AND method = 'Machine Learning';
SELECT p.service, p.budget, pf.rating FROM public_services p LEFT JOIN public_feedback pf ON p.service = pf.service;
SELECT SUM(Budget) FROM Programs WHERE FocusArea = 'Disaster Relief' AND StartDate <= GETDATE() AND EndDate >= DATEADD(year, -2, GETDATE());
SELECT post_date, SUM(activity) as total_activity FROM (SELECT post_date, activity FROM user_behavior WHERE post_type = 'post' AND user_id IN (SELECT user_id FROM user_info WHERE country IN ('USA', 'Canada')) UNION ALL SELECT post_date, activity FROM user_behavior WHERE post_type = 'comment' AND user_id IN (SELECT user_id FROM user_info WHERE country IN ('USA', 'Canada')) UNION ALL SELECT post_date, activity FROM user_behavior WHERE post_type = 'like' AND user_id IN (SELECT user_id FROM user_info WHERE country IN ('USA', 'Canada'))) as total_activity_grouped_by_date GROUP BY post_date ORDER BY post_date;
SELECT product_id, preference_score FROM consumer_preferences WHERE consumer_gender = 'male' ORDER BY preference_score DESC LIMIT 5;
SELECT SUM(Price) FROM Vendors v JOIN (SELECT Country FROM Countries WHERE Population > 50000000) c ON v.Country = c.Country;
SELECT SUM(calories) FROM food_items WHERE organic = true;
SELECT MAX(num_investments) FROM investments WHERE account_risk_level = 'high' AND region = 'Latin America';
DELETE FROM FireDepartments WHERE DepartmentName = 'Westside Fire Department';
SELECT MIN(size_ha) FROM plots WHERE type = 'Agroforestry';
SELECT MAX(amount) FROM Donations WHERE region = 'California' AND donation_year = 2021;
UPDATE suppliers SET sustainability_score = 4.5 WHERE supplier_id = 2;
SELECT SUM(Innovations_Adopted) FROM Farmers WHERE Year = 2019 AND Location = 'Nepal';
SELECT diabetes_cases/population FROM diabetes_prevalence WHERE location LIKE '%Michigan Rural Area%';
SELECT AVG(e.count) as avg_endangered_languages FROM (SELECT COUNT(*) as count FROM EndangeredLanguages WHERE country_id = Countries.id GROUP BY country_id) e JOIN Countries ON e.country_id = Countries.id WHERE Countries.region = 'Southeast Asia';
SELECT (COUNT(*) FILTER (WHERE vegan_brand_customer))::float / COUNT(*) as percentage FROM customer_demographics;
SELECT metric, value FROM community_policing WHERE district_id = 3;
SELECT SUM(num_vehicles) FROM vehicle_maintenance_by_day WHERE facility_location = 'East Bay' AND day_of_year <= 182;
SELECT AVG(DonationAmount) AS AvgDonation, DonationRegion FROM Donations GROUP BY DonationRegion ORDER BY AvgDonation DESC;
SELECT c.billing_amount FROM clients c JOIN cases cs ON c.client_id = cs.client_id WHERE cs.state = 'CA';
SELECT MAX(volume) FROM production WHERE location = 'Africa';
INSERT INTO weather (city, temperature, date) VALUES ('New York', 32, '2022-12-25');
SELECT HotelName FROM Hotels WHERE VirtualTourURL IS NULL AND Country = 'Mexico'
SELECT materials.material_name, SUM(materials.quantity) as total_quantity FROM bridge_materials JOIN materials ON bridge_materials.material_id = materials.material_id JOIN bridges ON bridge_materials.bridge_id = bridges.bridge_id WHERE bridges.state = 'California' GROUP BY materials.material_name ORDER BY total_quantity DESC LIMIT 3;
SELECT f.field_id, f.field_name, fp.production_rate FROM fields f LEFT JOIN fields_production fp ON f.field_id = fp.field_id;
SELECT country, SUM(focused_on_social_good) as focused_on_social_good, MAX(initiatives) as initiatives FROM ai_stats.ethical_initiatives GROUP BY country ORDER BY initiatives DESC;
SELECT country, SUM(number_of_visits) AS total_visits FROM Visits WHERE year = 2019 GROUP BY country ORDER BY total_visits DESC LIMIT 3;
SELECT t.TeamName, f.AgeGroup, COUNT(*) as Total_Attendance FROM (SELECT FanID, CASE WHEN Age < 18 THEN 'Under 18' WHEN Age < 30 THEN '18-30' WHEN Age < 50 THEN '31-50' ELSE '50+' END as AgeGroup FROM FansByAge) f JOIN GameAttendanceByAge ga ON f.FanID = ga.FanID JOIN Teams t ON f.TeamID = t.TeamID GROUP BY t.TeamName, f.AgeGroup;
SELECT EXTRACT(MONTH FROM publication_date) AS month, COUNT(*) AS articles_per_month FROM articles WHERE category = 'breaking' GROUP BY month ORDER BY month;
SELECT MIN(date) FROM ocean_temperature_data;
SELECT ingredients.ingredient_name FROM ingredients JOIN product_ingredients ON ingredients.ingredient_name = product_ingredients.ingredient WHERE product_ingredients.ingredient_source IN (SELECT ingredient_source FROM product_ingredients WHERE product_ingredients.product_name IN (SELECT products.product_name FROM products WHERE products.is_cruelty_free = true)) AND ingredients.ingredient_name IN (SELECT ingredient FROM product_ingredients WHERE product_ingredients.product_name NOT IN (SELECT products.product_name FROM products WHERE products.is_cruelty_free = true)) GROUP BY ingredients.ingredient_name HAVING COUNT(DISTINCT product_ingredients.ingredient_source) > 1;
SELECT COUNT(*) FROM Employees WHERE HireYear = 2020 AND GenderIdentity IN ('Female', 'Non-binary');
SELECT f.name, COUNT(w.id) FROM factories f INNER JOIN workers w ON f.id = w.factory_id GROUP BY f.name;
SELECT certification_name, COUNT(*) AS num_projects FROM green_buildings GROUP BY certification_id ORDER BY num_projects DESC LIMIT 3;
SELECT vessel_type, COUNT(*) as safety_incidents_count FROM safety_incidents WHERE region = 'Arctic' AND incident_date BETWEEN '2021-01-01' AND '2022-01-01' GROUP BY vessel_type;
SELECT DATE_FORMAT(date, '%Y-%m') AS month, SUM(transaction_volume) FROM DApps WHERE category = 'DeFi' GROUP BY month;
SELECT I.product_id, I.product_name, COUNT(C.customer_id) AS sales_count FROM Inventory I INNER JOIN CustomerSize C ON I.available_sizes LIKE CONCAT('%', C.preferred_size, '%') INNER JOIN Geography G ON C.customer_id = G.customer_id WHERE G.region = 'Europe' GROUP BY I.product_id, I.product_name ORDER BY sales_count DESC LIMIT 5;
SELECT COUNT(*) FROM students s1 WHERE s1.mental_health_score < (SELECT AVG(s2.mental_health_score) FROM students s2 WHERE s2.participated_in_open_pedagogy = TRUE);
SELECT CHWId, COUNT(*) AS TrainingCount FROM CulturalCompetencyTrainings GROUP BY CHWId;
SELECT Product_Name, Sales FROM Skincare_Sales_USA WHERE Country = 'USA' ORDER BY Sales DESC LIMIT 5;
SELECT energy_type, country, SUM(capacity) FROM project GROUP BY energy_type, country;
SELECT cuisine, SUM(revenue) as total_revenue FROM restaurant_revenue GROUP BY cuisine;
SELECT location, AVG(num_employees) FROM mining_operations WHERE location LIKE 'Australia-%' GROUP BY location;
SELECT InfrastructureProjects.Name, DesignStandards.Description FROM InfrastructureProjects LEFT JOIN DesignStandards ON InfrastructureProjects.ProjectID = DesignStandards.ProjectID;
SELECT SUM(wins) FROM mlb_teams_mascots WHERE mascot LIKE 'C%';
UPDATE labor_practices SET workers_treated_fairly = 450, child_labor_free = true WHERE company = 'ABC Fashion';
SELECT SUM(biomass) FROM Indian_Aquaculture_Farms WHERE year = 2020 AND species IN ('Catla', 'Rohu');
SELECT home_team_id, MAX(home_team_score) AS high_score FROM games GROUP BY home_team_id; SELECT away_team_id, MAX(away_team_score) AS high_score FROM games GROUP BY away_team_id;
SELECT City, CulturalCompetencyScore FROM Hospitals;
SELECT genre, SUM(player_count) as total_players, SUM(revenue) as total_revenue FROM games GROUP BY genre;
SELECT SUM(funding) FROM climate_mitigation WHERE region = 'Asia' AND initiative_type = 'climate communication';
UPDATE patients SET age = 35 WHERE patient_id = 1;
SELECT initiative, location, budget FROM community_development WHERE location = 'Bolivia' AND budget < 250000;
SELECT AVG(mission_duration) FROM Space_Missions WHERE spacecraft = 'Falcon Heavy';
SELECT AVG(budget) FROM Community_Education;
SELECT MAX(grant_amount) FROM agricultural_innovation_projects WHERE country = 'Rwanda' AND gender = 'Women';
SELECT g.game_name, COUNT(DISTINCT gs.player_id) as active_players FROM game_sessions gs JOIN games g ON gs.game_id = g.id WHERE gs.session_date >= (CURRENT_DATE - INTERVAL '1 month') GROUP BY g.game_name;
SELECT SUM(donation_amount) FROM donations WHERE YEAR(donation_date) = 2020;
SELECT AVG(listing_price) FROM properties WHERE city = 'Austin' AND (accessible = true OR co_owned = true);
SELECT Country, AVG(Budget) as Avg_Budget FROM Assistive_Technology GROUP BY Country ORDER BY Avg_Budget DESC;
SELECT country, COUNT(*) as successful_trials FROM clinical_trials3 WHERE success = TRUE AND country IN ('Kenya', 'Nigeria', 'South Africa') GROUP BY country;
SELECT MIN(Age) FROM Patients WHERE Disease = 'Yellow Fever' AND Country = 'Kenya';
SELECT location, COUNT(*) as provider_count FROM healthcare_specialties_south_africa WHERE location LIKE 'Rural%' AND specialty LIKE '%Pediatric%' GROUP BY location;
SELECT AVG(distance) FROM distances d INNER JOIN healthcare_facilities hf ON d.facility_id = hf.id INNER JOIN hospitals h ON d.hospital_id = h.id WHERE hf.is_rural = true AND h.is_rural = true;
DROP TABLE rural_farmers;
INSERT INTO animals (name, population) VALUES ('Koala', 500);
SELECT COUNT(*) FROM hiring WHERE hire_date BETWEEN '2021-04-01' AND '2021-06-30';
SELECT COUNT(DISTINCT player) FROM EventParticipants WHERE category = 'Shooter';
UPDATE technology_for_social_good SET funding_status = 'Approved' WHERE region = 'Europe' AND funding_amount > 50000;
SELECT SUM(revenue) FROM OrganicCottonSales WHERE sale_date BETWEEN '2021-01-01' AND '2021-12-31' AND product_name LIKE '%Organic Cotton%' AND country = 'USA';
SELECT regions.name AS region, AVG(weather.rainfall) AS avg_rainfall, AVG(weather.temperature) AS avg_temperature FROM regions INNER JOIN weather ON regions.id = weather.region_id GROUP BY regions.name;
DELETE FROM satellite_data WHERE launch_date < '2000-01-01';
SELECT city, SUM(consumption) AS total_consumption FROM green_buildings.building_energy_consumption WHERE consumption > 2000 GROUP BY city;
SELECT topic, COUNT(DISTINCT teacher_id) AS num_teachers FROM course_topics JOIN teacher_development_history ON course_topics.course_id = teacher_development_history.course_id GROUP BY topic;
SELECT Companies.name FROM Companies JOIN Materials ON Companies.id = Materials.company_id JOIN Labor ON Companies.id = Labor.company_id WHERE region = 'Europe' AND recycled = TRUE AND fair = TRUE;
SELECT NeighborhoodName, COUNT(*) AS InclusivePropertiesCount FROM Properties JOIN Neighborhoods ON Properties.NeighborhoodID = Neighborhoods.NeighborhoodID WHERE InclusiveHousing = 1 GROUP BY NeighborhoodName ORDER BY InclusivePropertiesCount DESC;
SELECT ev.Country, AVG(p.Age) as AvgAge FROM Players p INNER JOIN ESportsEvents e ON p.PlayerID = e.PlayerID WHERE p.GamePlatform = 'PC' GROUP BY ev.Country ORDER BY AvgAge DESC LIMIT 3;
SELECT f.name FROM forests f ORDER BY f.avg_carbon_sequestration DESC LIMIT 1;
SELECT MONTH(date) AS month, species, COUNT(*) FROM polar_bear_sightings WHERE MONTH(date) IN (6, 7, 8) AND sighted = TRUE AND YEAR(date) = 2019 GROUP BY month, species;
SELECT AVG(word_count) FROM articles WHERE publish_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH);
DROP TABLE IF EXISTS athlete_demographics;
SELECT country, location, COUNT(*) AS provider_count FROM healthcare_providers WHERE country IN ('Australia', 'Brazil', 'South Africa') AND location LIKE 'Rural%' GROUP BY country, location ORDER BY provider_count DESC LIMIT 3
SELECT AVG(cost) FROM military_equipment_maintenance WHERE country IN ('Philippines', 'Indonesia') GROUP BY country;
SELECT name, AVG(monthly_production) OVER (PARTITION BY name) AS avg_monthly_production FROM wind_farms;
SELECT COUNT(*) FROM cases INNER JOIN attorneys ON cases.attorney_id = attorneys.attorney_id WHERE attorneys.passed_bar_exam_ca = TRUE;
SELECT SUM(budget), COUNT(initiative_id) FROM community_development_initiatives;
UPDATE Programs SET Budget = 16000 WHERE Name = 'Healthcare';
SELECT country, COUNT(*) as article_count, 100.0 * COUNT(CASE WHEN category = 'politics' THEN 1 END) / COUNT(*) as politics_percentage FROM articles GROUP BY country;
SELECT COUNT(*) FROM threat_intelligence WHERE region = 'Middle East' AND YEAR(date) = 2021;
SELECT STDDEV(financial_wellbeing_score) FROM ProgressiveBank WHERE customer_age BETWEEN 20 AND 30;
SELECT SUM(value) FROM Defense_Project_Timelines WHERE region = 'Asia' AND start_year <= 2018 AND end_year >= 2020 AND delayed = true;
SELECT JobTitle, AVG(Salary) as AvgSalary FROM Employees WHERE Gender = 'Male' AND YEAR(HireDate) = 2020 GROUP BY JobTitle;
SELECT MAX(level) FROM ocean_acidification WHERE region = 'Atlantic Ocean';
SELECT f.name, SUM(fi.biomass) as total_biomass FROM fish_inventory fi JOIN fish_farms f ON fi.farm_id = f.id GROUP BY f.name ORDER BY SUM(fi.biomass) DESC;
SELECT sales.product_id, products.product_name, SUM(sales.quantity) FROM sales JOIN products ON sales.product_id = products.product_id WHERE sales.store_location = 'Paris' AND sale_date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL DAY(CURRENT_DATE)-1 DAY) AND CURRENT_DATE GROUP BY sales.product_id;
SELECT MIN(temperature), MAX(temperature) FROM Temperature_Data WHERE location LIKE '%Arctic%';
SELECT digital_asset, AVG(transaction_value) OVER (PARTITION BY digital_asset) as avg_transaction_value FROM transactions;
SELECT AVG(num_injuries) FROM accidents WHERE aircraft_model = 'Airbus A320';
SELECT MAX(height) as max_height FROM dams WHERE reservoir = 'LakeB';
SELECT MAX(funding_round_size) FROM rounds JOIN company ON rounds.company_id = company.id WHERE company.founder_origin = 'Asia';
SELECT system_name, SUM(rainfall) as total_rainfall FROM irrigation_systems WHERE system_id IN (SELECT system_id FROM irrigation_systems_data WHERE data_date >= CURDATE() - INTERVAL 1 MONTH) GROUP BY system_name;
SELECT DISTINCT mission_name FROM space_missions ORDER BY mission_name;
SELECT * FROM regulatory_frameworks WHERE network = 'polygon' AND last_updated >= '2020-01-01';
SELECT * FROM building_permits WHERE project_type = 'Sustainable' AND state = 'Oregon';
SELECT MAX(budget) - MIN(budget) FROM campaigns;
SELECT community_development.initiative_name FROM community_development WHERE community_development.population_density > 500;
SELECT patients.ethnicity, patients.language, COUNT(patients.patient_id) FROM patients INNER JOIN treatments ON patients.patient_id = treatments.patient_id WHERE treatments.language = 'Spanish' GROUP BY patients.ethnicity, patients.language;
SELECT state, COUNT(initiative) as num_initiatives FROM carbon_offsets WHERE state IN (SELECT state FROM states) GROUP BY state ORDER BY num_initiatives DESC;
SELECT context.race, context.mineral, SUM(context.score) as total_score FROM context WHERE context.year = 2020 GROUP BY context.race, context.mineral;
SELECT AVG(Donation) as AverageDonationPerDonor FROM Donors;
SELECT AVG(total_sales) FROM sales_by_month WHERE sales_year = 2023 AND category = 'Fast Fashion' GROUP BY sales_month;
SELECT COUNT(DISTINCT severity) FROM schema1.vulnerabilities;
SELECT SUM(quantity) FROM mining_operations WHERE material = 'coal' AND location = 'United States' AND date = '2019-01-01';
SELECT MAX(VoyageDuration) FROM Voyages V WHERE V.EndPort = 'Singapore';
SELECT (SUM(CASE WHEN safety_compliance = 1 THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS compliance_percentage, (SUM(CASE WHEN safety_compliance = 0 THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS non_compliance_percentage FROM vessels WHERE compliance_date >= DATEADD(year, -1, GETDATE()) AND compliance_location = 'Caribbean Sea';
SELECT transfer FROM OrangeTransfers WHERE route = 'Orange Line';
SELECT state, SUM(total_funding) as total_mental_health_funding FROM school_districts GROUP BY state;
SELECT company, SUM(quantity) FROM eco_friendly_suppliers GROUP BY company;
SELECT AVG(Dishes.calorie_content) FROM Dishes INNER JOIN Ingredients ON Dishes.did = Ingredients.dish_id INNER JOIN Suppliers ON Ingredients.supplier_id = Suppliers.sid WHERE Suppliers.location = 'South';
SELECT program, COUNT(*) FROM enrollment GROUP BY program HAVING semester = 'Spring';
SELECT cities.name, COUNT(properties.id) FROM cities INNER JOIN properties ON cities.name = properties.city WHERE properties.year_built < 2000 GROUP BY cities.name;
SELECT AVG(age) FROM Members m JOIN Workouts w ON m.id = w.member_id WHERE w.workout = 'Cycling';
SELECT MAX(revenue) FROM FairTradeProducts WHERE country = 'Sweden';
SELECT MIN(Budget) AS MinBudget FROM ResilienceProjects WHERE Sector = 'Energy';
SELECT suppliers.supplier_name, COUNT(products.product_id) FROM suppliers LEFT JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY suppliers.supplier_name;
UPDATE Exhibitions SET exhibition_name = 'Monet’s Garden' WHERE gallery_name = 'Impressionism Museum' AND artist_id = 3;
SELECT name FROM factories WHERE region = 'Europe' AND industry_4_0 = FALSE;
INSERT INTO artists (name, birth_year, death_year) SELECT * FROM csv_file('artists.csv') AS t(name VARCHAR(255), birth_year INT, death_year INT);
SELECT AVG(engagements) FROM virtual_tours v JOIN hotels h ON v.hotel_id = h.id WHERE h.region = 'Middle East';
SELECT SUM(number_of_trainees) FROM Training WHERE trainer = 'UK' AND start_date >= '2021-04-01' AND end_date <= '2022-03-31';
SELECT player_id, MAX(saves) FROM saves WHERE position = 'Goalkeeper';
SELECT year, MAX(quantity) FROM production WHERE element = 'Europium' AND region = 'Africa' GROUP BY year;
SELECT customer_id, account_type, balance FROM (SELECT customer_id, account_type, balance, transaction_date, LAG(balance, 2) OVER (PARTITION BY customer_id ORDER BY transaction_date) AS lag_balance_2 FROM accounts) AS lagged_accounts WHERE balance > lag_balance_2;
SELECT app_name, user_interactions FROM creative_ai_applications WHERE user_interactions > 100;
SELECT COUNT(*) FROM impact_investments WHERE sector = 'Healthcare' AND ESG_score > 80;
SELECT MAX(daily_transaction_volume) FROM emerging_markets.digital_assets;
SELECT waste_generation FROM state_waste WHERE state='New York' AND year=2021;
SELECT city, AVG(response_time) as avg_response_time FROM emergency_calls GROUP BY city ORDER BY avg_response_time DESC LIMIT 3;
SELECT title, year FROM ArtPieces WHERE style = 'Pop Art' ORDER BY year DESC LIMIT 1;
SELECT MIN(fare) FROM subway_fares WHERE region = 'north';
SELECT m.name, SUM(r.amount) as total_revenue FROM mobile_plans m INNER JOIN revenue r ON m.id = r.plan_id WHERE r.timestamp >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY m.name;
SELECT COUNT(*) FROM biosensors WHERE target = 'Glucose';
SELECT SUM(budget) FROM Programs WHERE category IN ('Arts', 'Culture') AND budget <= 100000;
SELECT plan_name, AVG(data_usage) as avg_data_usage FROM mobile_plans JOIN subscriptions ON mobile_plans.plan_id = subscriptions.plan_id WHERE subscriptions.subscription_date >= DATE_SUB(CURDATE(), INTERVAL 1 WEEK) GROUP BY plan_name;
SELECT fw.date, fw.weight FROM fish_weights fw WHERE fw.fish_species_id = 1 ORDER BY fw.date;
SELECT age_group, SUM(visitor_count) as total_visitors FROM art_exhibitions GROUP BY age_group;
SELECT AVG(WatchTime) FROM Movies JOIN Directors ON Movies.DirectorID = Directors.DirectorID WHERE Directors.Gender = 'Female' AND Directors.Country LIKE 'Asia%';
UPDATE labor_statistics SET hourly_wage = hourly_wage * 1.10 WHERE job_category = 'Plumbing';
SELECT discipline, project_type, COUNT(*) FROM projects WHERE open_pedagogy = TRUE GROUP BY discipline, project_type;
SELECT SUM(budget) as total_budget FROM departments d WHERE open_data = true AND (SELECT COUNT(*) FROM policies p WHERE d.id = p.department_id AND evidence_based = true) > 5;
SELECT SUM(billing_amount) FROM cases WHERE client_id = 100;
INSERT INTO vehicles (vehicle_id, vehicle_type, vehicle_name) VALUES ('BUS-789', 'Bus', 'BusE'), ('TRAIN-123', 'Train', 'TrainA');
SELECT Country, COUNT(*) AS NumBrands FROM Brands GROUP BY Country;
SELECT COUNT(*) FROM workers WHERE factory_id = (SELECT id FROM factories WHERE name = 'Fair Trade Factories' AND type = 'Factory');
SELECT SUM(weight) FROM imports WHERE product = 'Coffee Beans' AND is_fair_trade = true AND country = 'Australia';
SELECT country, SUM(quantity) AS total_quantity FROM inventory WHERE organic = TRUE GROUP BY country ORDER BY total_quantity DESC LIMIT 3;
SELECT name FROM staff WHERE role = 'Data Manager' AND department = 'climate_adaptation';
SELECT AVG(Score) FROM Feedback WHERE City = 'Beijing' AND Year = 2020 AND Category = 'Public Transportation';
SELECT AVG(Age) FROM Members m INNER JOIN Workout w ON m.MemberID = w.MemberID WHERE w.WorkoutType IN ('Yoga', 'Swimming') GROUP BY m.MemberID;
SELECT name, budget FROM community_projects WHERE country = 'Brazil' AND budget = (SELECT MAX(budget) FROM community_projects WHERE country = 'Brazil')
SELECT AVG(Salary) FROM Employees WHERE Department = 'IT';
SELECT activity, COUNT(*) AS count FROM members JOIN workouts ON members.id = workouts.member_id WHERE members.gender = 'Male' AND members.age BETWEEN 50 AND 59 GROUP BY activity ORDER BY count DESC LIMIT 1;
SELECT t1.customer_id, t1.branch_id as branch_id_1, t2.branch_id as branch_id_2 FROM transactions t1 INNER JOIN transactions t2 ON t1.customer_id = t2.customer_id AND t1.transaction_date = t2.transaction_date AND t1.branch_id != t2.branch_id WHERE t1.transaction_date BETWEEN DATEADD(day, -30, GETDATE()) AND GETDATE();
SELECT mode, MAX(users) FROM multimodal WHERE city = 'Tokyo';
SELECT AVG((PostRetrofitRating-PreRetrofitRating)/PreRetrofitRating*100) FROM BuildingRetrofits WHERE Country = 'United Kingdom';
INSERT INTO creative_applications (id, application_name, art_form, num_judges, total_score) VALUES (1, 'MusicalMind', 'music', 4, 0); UPDATE creative_applications SET total_score = total_score + (judge1_score + judge2_score + judge3_score + judge4_score) WHERE application_name = 'MusicalMind';
SELECT contract_id, AVG(transactions) AS AverageTransactions, MIN(transactions) AS MinTransactions, MAX(transactions) AS MaxTransactions FROM smart_contracts_transactions GROUP BY contract_id;
SELECT program, COUNT(*) as total_participants FROM wellbeing_program_participants GROUP BY program;
UPDATE RuralHealthFacility4 SET diagnosis = 'diabetes' WHERE patient_name = 'Eve';
SELECT AVG(EquipmentCost) FROM MilitaryEquipment WHERE ManufacturingCountry IN ('Africa');
SELECT SUM(CASE WHEN gmo = FALSE THEN 1 ELSE 0 END) FROM ingredients;
SELECT MAX(count_per_country) FROM (SELECT COUNT(*) AS count_per_country FROM ai_applications GROUP BY country);
SELECT DATE_FORMAT(date_reported, '%Y-%m') as month, COUNT(*) as count FROM security_incidents WHERE date_reported >= '2022-01-01' AND date_reported < '2023-01-01' GROUP BY month;
INSERT INTO fashion_trend_data (product_name, is_sustainable) VALUES ('Jacket', true);
SELECT MIN(yield) FROM farm WHERE region = 'region2' AND crop = 'rice';
SELECT SUM(1) FROM Transactions JOIN Accounts ON Transactions.AccountID = Accounts.AccountID WHERE Accounts.RiskLevel = 'High' AND Transactions.TransactionDate >= DATEADD(month, -1, GETDATE());
SELECT COUNT(*) FROM applications WHERE sector = 'Education' AND YEAR(published_date) >= YEAR(CURRENT_DATE()) - 2;
SELECT genres.name, COUNT(user_genre_preferences.user_id) AS popularity FROM genres JOIN user_genre_preferences ON genres.id = user_genre_preferences.genre_id JOIN users ON user_genre_preferences.user_id = users.id WHERE users.country = 'India' GROUP BY genres.name ORDER BY popularity DESC LIMIT 1;
DROP TABLE peacekeeping_operations;
SELECT project_type, SUM(investment_amount) FROM finance_projects GROUP BY project_type;
SELECT amount FROM rd_expenditure WHERE company_name = 'PharmaCorp' AND expenditure_year = 2021;
SELECT type, COUNT(type) FROM vessels WHERE region = 'North Sea' GROUP BY type;
SELECT SUM(total_donations) as total_donations, camp_name FROM refugee_camps GROUP BY camp_name ORDER BY total_donations DESC LIMIT 10;
SELECT mining_operation.name, environmental_assessment.date, environmental_assessment.impact FROM mining_operation JOIN environmental_assessment ON mining_operation.id = environmental_assessment.mining_operation_id WHERE mining_operation.location = 'United States';
SELECT AVG(price) FROM Cosmetics WHERE type = 'Lip Balm' AND has_organic_ingredients = TRUE;
UPDATE trucks SET year = 2024 WHERE make = 'Rivian';
SELECT COUNT(*) FROM subscribers WHERE type = 'prepaid' AND region = 'island';
SELECT SUM(items_quantity) FROM Warehouse WHERE country = 'Indonesia' INTERSECT SELECT SUM(items_quantity) FROM Warehouse WHERE country = 'South Korea';
SELECT name, primary_mirror_diameter FROM space_telescopes;
SELECT production_time FROM production_time WHERE garment = 'Jackets' AND region = 'North America';
SELECT COUNT(*) FROM Accidents INNER JOIN VesselCountry ON Accidents.VesselId = VesselCountry.VesselId WHERE Accidents.Year = 2021 AND VesselCountry.Country = 'USA' AND VesselCountry.Country = 'Canada';
SELECT ap.title, d.name, d.city FROM art_pieces ap JOIN donors d ON ap.donor_id = d.id WHERE d.city = 'San Francisco';
SELECT program, age_group, SUM(attendance) as total_attendance FROM DanceAttendance WHERE YEAR(attendance_date) = 2022 AND MONTH(attendance_date) <= 6 AND program = 'Dance' GROUP BY program, age_group;
INSERT INTO festivals (festival_id, festival_name, city, revenue) VALUES (3, 'Glastonbury', 'Pilton', 300000.00), (4, 'Summerfest', 'Milwaukee', 125000.00); SELECT festival_name, SUM(revenue) AS total_revenue FROM festivals GROUP BY festival_name;
SELECT operations.name, COUNT(accidents.id) FROM operations LEFT JOIN accidents ON operations.id = accidents.operation_id AND accidents.year = 2021 GROUP BY operations.id;
SELECT SUM(involved_in_safety) - SUM(NOT involved_in_safety) FROM union_safety WHERE state = 'Arizona';
SELECT region, SUM(violation_reported) as total_violations FROM Labor_Rights GROUP BY region;
SELECT name FROM dams WHERE height > 300;
SELECT country, COUNT(*) AS request_count FROM freight_forwarding JOIN warehouse_geo ON freight_forwarding.warehouse_id = warehouse_geo.warehouse_id WHERE request_date BETWEEN '2022-06-01' AND '2022-06-30' GROUP BY country ORDER BY request_count DESC LIMIT 1;
SELECT SUM(Budget) FROM HealthBudget WHERE Service = 'Healthcare' AND Year = 2020;
SELECT race, num_diagnoses FROM hiv_diagnoses;
SELECT AVG(score) FROM afc_scores WHERE gender = 'Male' AND country IN ('South Africa', 'Brazil');
ALTER TABLE impact_investments ADD COLUMN region VARCHAR(10);
SELECT MAX(Age) FROM Players WHERE HasPlayedVR = true;
SELECT VehicleMake, COUNT(*) as TotalAccidents FROM VehicleSafetyTesting GROUP BY VehicleMake HAVING TotalAccidents > 50;
SELECT COUNT(DISTINCT c.id) FROM clients c WHERE EXISTS (SELECT 1 FROM investments i WHERE c.id = i.client_id AND i.investment_date >= c.registered_date + INTERVAL '1 year');
SELECT COUNT(*) FROM Animals WHERE Species IN (SELECT Species FROM Endangered_Species WHERE Habitat = 'North America');
SELECT SUM(socially_responsible_loan) FROM clients WHERE region = 'Midwest';
SELECT Country, COUNT(DISTINCT DonorID) FROM DonorCountry WHERE DonationDate BETWEEN '2022-10-01' AND '2022-12-31' GROUP BY Country;
SELECT Volunteers.name FROM Volunteers LEFT JOIN VolunteerDonations ON Volunteers.id = VolunteerDonations.volunteer_id WHERE VolunteerDonations.id IS NULL;
SELECT country, SUM(production_capacity) as total_capacity FROM manufacturers GROUP BY country;
SELECT AVG(rate) FROM RecyclingRatesEU WHERE country IN ('Germany', 'France');
select project_type, min(num_workers) as min_workers from project_employment group by project_type;
SELECT SUM(quantity) FROM mining_operation WHERE location = 'Canada' AND resource = 'Gold';
SELECT MAX(cost) FROM InfrastructureProjects WHERE region = 'Midwest' AND project_type = 'highway';
 SELECT MAX(inference_time) FROM ai_models WHERE explainability_technique IS NOT NULL;
SELECT SUM(Amount) FROM Budget WHERE Department = 'Education' AND BudgetYear = YEAR(CURDATE());
SELECT SUM(allocation) FROM state_budget WHERE state IN ('New York', 'California') AND sector = 'Education';
SELECT category, COUNT(*) as article_count FROM articles GROUP BY category ORDER BY article_count DESC LIMIT 3;
SELECT AVG(Amount) as AverageDonation, DATE_FORMAT(DonationDate, '%Y-%m') as Month FROM Donations WHERE Country = 'United States' GROUP BY Month;
SELECT MAX(distance_to_next_station) FROM subway_stations WHERE city = 'New York City';
SELECT appetizer_name, MAX(quantity_sold) FROM appetizers WHERE category = 'Organic' GROUP BY appetizer_name ORDER BY quantity_sold DESC LIMIT 1;
SELECT AVG(transaction_value) FROM ethereum_smart_contracts;
SELECT AVG(preference_score) FROM consumer_preferences WHERE organic = TRUE;
SELECT disease, MAX(cases) FROM infectious_disease WHERE location = 'Africa' GROUP BY disease;
SELECT SUM(revenue) FROM (SELECT revenue FROM mobile_revenue WHERE quarter = 1 UNION SELECT revenue FROM broadband_revenue WHERE quarter = 1);
SELECT SUM(Employees) FROM MiningFirms WHERE Company IN (SELECT Company FROM SouthAmericanMines)
SELECT attorney_id, COUNT(*) as num_cases FROM cases JOIN offices ON cases.office_id = offices.office_id WHERE offices.office_name = 'Chicago' GROUP BY attorney_id ORDER BY num_cases DESC;
SELECT a.author_name, COUNT(pa.author_id) as num_papers FROM author a INNER JOIN paper_author pa ON a.author_id = pa.author_id INNER JOIN paper p ON pa.paper_id = p.paper_id WHERE p.topic = 'Explainable AI' GROUP BY a.author_name ORDER BY num_papers DESC LIMIT 3;
SELECT r.reaction_type, r.chemical_1, r.chemical_2, COUNT(rr.id) as num_reactions FROM reaction r INNER JOIN reaction_record rr ON r.id = rr.reaction_id WHERE (r.chemical_1 = 'Sodium Hydroxide' AND r.chemical_2 = 'Hydrochloric Acid') OR (r.chemical_1 = 'Hydrochloric Acid' AND r.chemical_2 = 'Sodium Hydroxide') GROUP BY r.id;
SELECT AVG(CarbonFootprint) FROM CarbonFootprint WHERE Industry = 'Food' AND Country = 'Canada';
SELECT MIN(start_date) FROM therapy WHERE patient_id IN (SELECT id FROM patients WHERE country = 'Australia');
SELECT COUNT(*) FROM (SELECT model, year FROM boeing_aircraft WHERE year < 2000 UNION ALL SELECT model, year FROM airbus_aircraft WHERE year < 2000) AS combined;
SELECT SUM(maintenance_cost) FROM military_equipment WHERE region = 'Europe' AND maintenance_date >= DATE '2021-01-01' AND maintenance_date < DATE '2021-07-01';
SELECT COUNT(*) FILTER (WHERE gender = 'Female' AND is_solo = TRUE) / COUNT(*) FILTER (WHERE gender = 'Male' AND is_solo = TRUE) FROM artists WHERE genre = 'Hip Hop';
ALTER TABLE waste_generation ADD source VARCHAR(50);
SELECT mission_name, launch_date FROM jupiter_missions WHERE destination = 'Jupiter';
SELECT MIN(size_km) FROM habitats WHERE animal_type = 'Reptile';
SELECT sensors.country, sensors.sensor_type, COUNT(sensors.sensor_id) FROM sensors GROUP BY sensors.country, sensors.sensor_type;
SELECT CertificationYear, COUNT(*) FROM GreenBuildings WHERE City = 'City K' GROUP BY CertificationYear;
SELECT company_name FROM companies INNER JOIN (SELECT company_id FROM funds WHERE investor_type IN ('Venture Capital', 'Angel Investor') GROUP BY company_id HAVING COUNT(DISTINCT investor_type) = 2) as subquery ON companies.company_id = subquery.company_id;
SELECT playlist_name FROM playlists_detailed JOIN playlists_3_songs ON playlists_detailed.playlist_id = playlists_3_songs.playlist_id;
SELECT SUM(BillingAmount) AS TotalBillingAmount FROM CaseBilling JOIN Cases ON CaseBilling.CaseID = Cases.CaseID WHERE DurationDays > 60;
SELECT MIN(passengers) as min_passengers FROM public_buses;
SELECT SUM(value) FROM defense_contracts WHERE sign_date BETWEEN '2021-07-01' AND '2021-12-31';
SELECT AVG(energy_efficiency) FROM commercial_buildings WHERE country IN (SELECT country FROM regions WHERE region = 'Asia Pacific');
SELECT AVG(investment_amount) FROM investment WHERE location LIKE 'Africa%' GROUP BY location;
SELECT AVG(accessibility_needs) FROM (SELECT COUNT(*) AS accessibility_needs, domain FROM users GROUP BY domain) AS subquery;
SELECT vessel_name, MAX(visit_date) FROM visits JOIN vessels ON visits.vessel_id = vessels.vessel_id WHERE port_id = (SELECT port_id FROM ports WHERE port_name = 'Singapore') AND visit_date >= '2021-01-01' GROUP BY vessel_name ORDER BY MAX(visit_date) DESC;
SELECT habitat_ocean, status, COUNT(*) FROM species INNER JOIN conservation_status ON species.id = conservation_status.species_id GROUP BY habitat_ocean, status;
SELECT (COUNT(StudentID) * 100.0 / (SELECT COUNT(StudentID) FROM Students WHERE Region = 'Arctic' AND AccommodationYear = 2023)) FROM Students WHERE DisabilityType = 'Mobility Impairment' AND Region = 'Arctic' AND AccommodationYear = 2023;
SELECT DATEPART(dw, usage_date) AS day_of_week, COUNT(DISTINCT user_id) FROM game_R_usage GROUP BY DATEPART(dw, usage_date);
DELETE FROM sustainable_sources WHERE source_id > 50;
INSERT INTO charging_stations (station_id, type, city) VALUES (4, 'Car', 'Madrid');
SELECT project_name, funding_source FROM AutonomousDrivingResearch;
SELECT SUM(quantity) FROM materials WHERE name LIKE '%recycled%';
SELECT country, MIN(finance_amount) FROM climate_finance_projects WHERE project_type = 'climate communication' AND year >= 2016 GROUP BY country;
SELECT category, AVG(response_time) FROM incident_response WHERE YEAR(incident_date) = 2021 GROUP BY category;
SELECT SUM(trip_distance) FROM electric_taxis, city_coordinates WHERE city_coordinates.city = 'Berlin';
SELECT technique, COUNT(*) as num_applications FROM ai_techniques WHERE application LIKE '%Creative%' GROUP BY technique ORDER BY num_applications DESC;
SELECT name FROM hospitals WHERE state = 'New York' ORDER BY budget ASC LIMIT 1;
SELECT shipping_mode, COUNT(shipping_mode) AS count FROM shipments WHERE shipment_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY shipping_mode ORDER BY count DESC LIMIT 3;
SELECT AVG(capacity) FROM landfill_data WHERE sector IN ('City', 'County') AND capacity > 0;
CREATE TABLE ethical_ai_research (id INT PRIMARY KEY, title VARCHAR(255), abstract TEXT, author_name VARCHAR(255), author_affiliation VARCHAR(255), publication_date DATETIME);
SELECT region, COUNT(*) as total_species_per_region FROM animal_species_regions GROUP BY region;
SELECT COUNT(*) FROM company WHERE founder_background = 'minority';
SELECT name FROM startups WHERE (founder1 != founder2) AND (founder1 IS NOT NULL AND founder2 IS NOT NULL);
SELECT state, MAX(revenue) FROM concerts;
SELECT Mutations FROM ClinicalTrial WHERE Name IN ('Trial_B', 'Trial_C');
UPDATE hotel_ratings SET guest_rating = 4.5 WHERE hotel_id = 101 AND segment = 'luxury';
DELETE FROM weapons WHERE name = 'Mig-29';
SELECT SupplierName FROM Suppliers INNER JOIN (SELECT SupplierID, COUNT(*) as FailedCount FROM Inspections WHERE InspectionDate >= '2022-01-01' AND Failed = 1 GROUP BY SupplierID) as FailedInspections ON Suppliers.SupplierID = FailedInspections.SupplierID WHERE FailedCount = (SELECT MAX(FailedCount) FROM FailedInspections);
DELETE FROM materials WHERE material_id = 3001;
SELECT SUM(s.price * s.quantity) FROM sales s JOIN circular_supply_chain c ON s.product_id = c.product_id JOIN sustainable_products sp ON s.product_id = sp.product_id JOIN certified_products cp ON sp.certified_by = cp.certification_id WHERE sp.recycled = TRUE;
SELECT AVG(investment) FROM infrastructure_projects;
SELECT SUM(cost) FROM humanitarian_assistance WHERE (donor = 'France' OR donor = 'Germany') AND region = 'Middle East' AND assistance_date >= '2010-01-01';
SELECT journalists.name, journalists.city FROM journalists INNER JOIN stories ON journalists.id = stories.journalist_id WHERE stories.id IN (SELECT id FROM stories WHERE title LIKE '%investigative%');
SELECT MAX(Score) FROM Scores WHERE GameType = 'VR';
SELECT DepartmentID, AVG(Amount/12) as AvgMonthlyBudget FROM Budget WHERE YEAR(StartDate) = 2023 GROUP BY DepartmentID;
SELECT ArtistName FROM Artists a JOIN MusicStreams ms ON a.ArtistID = ms.ArtistID WHERE Country = 'India' AND ms.StreamCount > 1000000;
SELECT AVG(rating) FROM hotels WHERE ai_adoption = true AND country = 'USA';
UPDATE Investments SET investment_amount = 4000000 WHERE id = 1;
UPDATE soil_conditions SET last_updated = last_updated + INTERVAL '1 day';
SELECT s1.name as Start, s2.name as End, ROUND(ST_Distance_Sphere(POINT(s2.lon, s2.lat), POINT(s1.lon, s1.lat)), 2) as Distance FROM stops s1 JOIN stops s2 ON s1.city = s2.city WHERE s1.id <> s2.id AND s1.city = 'Paris';
SELECT COUNT(*) FROM human_resources WHERE department = 'Engineering';
SELECT product_name, price, MAX(price) OVER() - MIN(price) OVER() as price_difference FROM haircare;
SELECT SUM(amount_saved) FROM water_conservation_initiatives WHERE country = 'United States' AND year = 2019;
SELECT state, water_usage FROM AgriculturalWaterUsage ORDER BY water_usage DESC LIMIT 5;
SELECT Artifact_Type, COUNT(*) FROM Site_E GROUP BY Artifact_Type ORDER BY COUNT(*) DESC LIMIT 1;
SELECT name, program, SUM(donation_amount) AS total_donation, RANK() OVER (PARTITION BY program ORDER BY SUM(donation_amount) DESC) AS donation_rank FROM donors_ext GROUP BY name, program HAVING donation_rank <= 2 ORDER BY program;
SELECT SUM(Budget) FROM InfrastructureBudget WHERE Year IN (2019, 2020);
DELETE FROM soil_moisture WHERE moisture < 30;
SELECT AVG(LaborCost) as AvgLaborCost FROM LaborCosts JOIN Projects ON LaborCosts.ProjectID = Projects.ProjectID WHERE State = 'Washington' AND IsSustainable = 1;
SELECT AVG(num_workers) FROM mining.mine WHERE type IN ('diamond mine', 'emerald mine');
SELECT MAX(asset_value) FROM shariah_compliant_finance WHERE country IN (SELECT country FROM (SELECT DISTINCT country FROM shariah_compliant_finance WHERE region = 'Gulf Cooperation Council') t);
INSERT INTO carbon_prices (region, year, price) VALUES ('Germany', 2017, 7.81), ('Germany', 2018, 9.03);
SELECT COUNT(*) FROM marine_protected_areas WHERE region = 'Pacific';
SELECT manufacturer, AVG(avg_speed) as avg_speed FROM ev_sales GROUP BY manufacturer;
DELETE FROM policy_advocacy_3 WHERE id = 4;
SELECT revenue FROM sales WHERE drug_name = 'DrugA' AND quarter = 1 AND year = 2020;
SELECT state, SUM(cases) as total_cases FROM infectious_disease GROUP BY state;
SELECT AVG(production_volume) FROM producers WHERE country = 'India';
SELECT AVG(e.age) FROM employees e JOIN completed_training ct ON e.employee_id = ct.employee_id JOIN training_programs tp ON ct.program_id = tp.program_id WHERE e.department = 'IT';
SELECT SUM(tickets_sold) FROM tickets_sold WHERE game_type = 'Baseball' AND division = 'Central Division';
SELECT COUNT(*) FROM cosmetics WHERE launch_year = 2022 AND organic_ingredients = true;
SELECT county, policy_name, policy_description FROM public_health_policy WHERE county IN ('Cook', 'Harris');
SELECT MAX(depth) FROM ocean_floors WHERE region = 'Indian Ocean';
SELECT FreightForwardingTransactions.TransactionID, FreightForwardingTransactions.TransactionStatus, FreightForwardingTransactions.TransactionDate FROM Customers JOIN FreightForwardingTransactions ON Customers.CustomerID = FreightForwardingTransactions.CustomerID WHERE Customers.CustomerName = 'CustomerA';
SELECT c.country, AVG(e.eco_rating) AS avg_eco_rating FROM countries c JOIN eco_accommodations e ON c.country = e.country GROUP BY c.country;
SELECT safety_rating FROM Vehicle WHERE make = 'Honda' AND manufacture_date = (SELECT MAX(manufacture_date) FROM Vehicle WHERE make = 'Honda');
SELECT certification_name FROM building_certifications bc JOIN green_building_projects gbp ON bc.certification_id = gbp.certification_id WHERE gbp.build_date BETWEEN '2018-01-01' AND '2020-12-31';
SELECT clinic_location, healthcare_provider_name, healthcare_provider_salary, RANK() OVER (PARTITION BY clinic_location ORDER BY healthcare_provider_salary DESC) AS rank FROM rural_clinics;
SELECT AVG(age) FROM educators WHERE domain = 'education';
SELECT AVG(YEAR_MANUFACTURED) FROM Aircraft_Table;
SELECT MAX(experience) FROM medical_staff WHERE role = 'nurse' AND clinic_id IN (SELECT clinic_id FROM clinic_detail WHERE location = 'Montana') AND experience > 5;
SELECT SUM(managed_hectares) FROM forest_management WHERE community_name LIKE '%indigenous%' AND region = 'Amazon rainforest';
SELECT SUM(CASE WHEN category IN ('Meat', 'Pantry') THEN 1 ELSE 0 END) FROM ingredients;
SELECT COUNT(*) FROM campaigns WHERE region = 'Asia' AND launch_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR);
SELECT department, COUNT(*) FROM workforce_diversity GROUP BY department;
SELECT 'Film Screenings' AS event_type, SUM(CASE WHEN gender = 'Male' THEN 1 ELSE -1 END) AS gender_difference FROM film_screenings GROUP BY gender UNION ALL SELECT 'Poetry Readings', SUM(CASE WHEN gender = 'Male' THEN 1 ELSE -1 END) FROM poetry_readings GROUP BY gender;
SELECT d.name, SUM(gs.num_students)  FROM departments d JOIN graduate_students gs ON d.id = gs.department_id GROUP BY d.name;
SELECT habitat_type, AVG(size) FROM north_american_habitats GROUP BY habitat_type;
SELECT SUM(events) FROM defense_diplomacy WHERE location = 'Middle East' AND year = 2019;
SELECT SUM(1) FROM online_travel_agencies ota INNER JOIN hotels h ON ota.hotel_id = h.id WHERE h.city = 'Mumbai' AND h.country = 'India' AND booking_date BETWEEN '2022-07-01' AND '2022-07-31';
SELECT SUM(visitor_count) FROM VisitorEngagement WHERE city = 'Tokyo' AND digital_content = TRUE;
SELECT AVG(delivery_time) FROM Satellites WHERE manufacturer = 'SpaceTech Inc.';
SELECT (COUNT(*) FILTER (WHERE resolution_type = 'mediation')) * 100.0 / COUNT(*) FROM access_to_justice_cases WHERE resolution_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTHS);
SELECT AVG(age) FROM Players WHERE game_genre = 'Racing';
SELECT country, SUM(installed_capacity) FROM wind_projects GROUP BY country;
SELECT AVG(ActiveYears) FROM Artists JOIN Paintings ON Artists.ArtistID = Paintings.ArtistID WHERE GalleryID IN (SELECT GalleryID FROM Gallery WHERE GalleryName = 'Artistic Wonders') AND Nationality = 'Japan' AND DisplayEnd IS NOT NULL;
INSERT INTO production (year, element, country, quantity) VALUES (2022, 'Ytterbium', 'Vietnam', 500);
SELECT AVG(Score) FROM Satisfaction WHERE Service = 'ServiceB' AND Region = 'RegionC' AND Quarter = 2 AND Year = 2021;
SELECT COUNT(*) FROM crimes WHERE neighborhood = 'park' AND date BETWEEN '2022-01-01' AND '2022-01-31';
SELECT COUNT(DISTINCT users.id) FROM posts JOIN users ON posts.user_id = users.id WHERE users.country = 'India' AND posts.timestamp >= DATE_SUB(NOW(), INTERVAL 1 WEEK) GROUP BY users.id HAVING COUNT(posts.id) > 2;
SELECT city, AVG(visitors) FROM Exhibitions GROUP BY city;
SELECT AVG(adoptions.adoption_id) FROM adoptions INNER JOIN users ON adoptions.user_id = users.user_id WHERE users.address = 'urban';
SELECT AVG(square_footage) FROM avg_square WHERE studio = TRUE;
CREATE VIEW high_bed_hospitals AS SELECT name, bed_count FROM rural_hospitals WHERE bed_count > 100;
SELECT ReleaseYear, COUNT(*) as Num_Albums FROM MusicAlbums GROUP BY ReleaseYear;
SELECT species, SUM(weight) FROM UnderweightFish WHERE weight < 0.5 GROUP BY species;
DROP TABLE ProgramOutcomes;
SELECT exhibition_name, MAX(visitor_count) FROM ExhibitionsChicago WHERE city = 'Chicago' AND year = 2020;
SELECT DATE(publication_date) AS date, COUNT(*) AS num_articles FROM articles WHERE publication_date >= DATE_SUB(NOW(), INTERVAL 1 WEEK) GROUP BY date ORDER BY date DESC;
SELECT SUM(streams) FROM music_streaming WHERE artist_nationality LIKE '%Latin%';
SELECT SUM(cost) FROM wind_farm;
SELECT city, AVG(consumption) FROM smart_cities.building_energy_consumption WHERE consumption > 2000 GROUP BY city;
SELECT SUM(Water_Saved) FROM Water_Conservation_Initiatives WHERE State = 'New York';
DELETE FROM flights WHERE flight_type = 'Test Flight' AND flight_date < '2010-01-01';
SELECT AVG(fine_amount) as avg_fine_amount, state_id FROM violations GROUP BY state_id;
SELECT * FROM satellites WHERE country = 'China' ORDER BY launch_date DESC;
SELECT COUNT(*) FROM military_innovation WHERE organization = 'African Union' AND start_year BETWEEN 2015 AND 2020;
UPDATE farms SET location = 'Denver, CO' WHERE id = 111;
SELECT program_id, SUM(amount) as total_donation, YEAR(donation_date) as year FROM donations GROUP BY program_id, year HAVING year = 2021;
SELECT state, SUM(beds) FROM hospitals WHERE mental_health = TRUE GROUP BY state;
SELECT AVG(movies.duration) FROM movies INNER JOIN directors ON movies.director_id = directors.id WHERE directors.gender = 'Female' AND movies.production_country = 'France';
SELECT Province, MAX(Fine) as MaxFine FROM MentalHealthParityFines WHERE Province IN ('Ontario', 'Quebec', 'British Columbia') GROUP BY Province;
SELECT SUM(pu.pesticide_amount) FROM Pesticide_Use pu INNER JOIN Fields f ON pu.field_id = f.id WHERE f.crop_type = 'Corn' AND f.country = 'US';
SELECT Department, AVG(CASE WHEN Gender = 'Male' THEN Salary ELSE NULL END) AS Avg_Male_Salary, AVG(CASE WHEN Gender = 'Female' THEN Salary ELSE NULL END) AS Avg_Female_Salary, AVG(CASE WHEN Gender = 'Non-binary' THEN Salary ELSE NULL END) AS Avg_Non_binary_Salary FROM EmployeeSalary GROUP BY Department;
SELECT SUM(production_volume) FROM mines WHERE location = 'Mexico' AND product = 'Copper' AND year = 2019;
SELECT AVG(amount) FROM org_climate_finance WHERE org_size IN ('medium', 'large');
SELECT rate FROM mexico_recycling_rates WHERE city = 'Mexico City' AND year = 2021;
SELECT Recruitment.RecruiterName, Recruitment.CandidateSource, COUNT(CASE WHEN Recruitment.NewHire = 1 AND Recruitment.HireDate >= DATEADD(month, -3, GETDATE()) THEN 1 ELSE NULL END) as Count_of_New_Hires FROM Recruitment GROUP BY Recruitment.RecruiterName, Recruitment.CandidateSource;
SELECT country, ((SUM(generation) - (SELECT generation FROM renewable_energy WHERE country = 'Australia' AND year = 2015)) / (SELECT generation FROM renewable_energy WHERE country = 'Australia' AND year = 2015)) * 100 AS percentage_increase FROM renewable_energy WHERE country = 'Australia' AND year > 2015 GROUP BY country;
SELECT country, AVG(mpg) FROM vehicles WHERE vehicle_type = 'Sports Car' GROUP BY country;
SELECT MAX(depth) FROM marine_trenches;
SELECT volunteers.name FROM volunteers LEFT JOIN assignments ON volunteers.id = assignments.volunteer_id WHERE assignments.volunteer_id IS NULL;
SELECT AVG(teachers.age) FROM teachers INNER JOIN professional_development ON teachers.id = professional_development.teacher_id WHERE professional_development.topic = 'Open Pedagogy';
DELETE FROM sharks WHERE weight > 1000.0;
SELECT department_name, MAX(average_response_time) FROM police_departments WHERE population BETWEEN 250000 AND 500000 AND location = 'urban' GROUP BY department_name UNION ALL SELECT department_name, MIN(average_response_time) FROM police_departments WHERE population BETWEEN 250000 AND 500000 AND location = 'urban' GROUP BY department_name;
SELECT SUM(quantity) FROM MilitaryVehicles WHERE country IN ('Germany', 'Japan');
SELECT COUNT(DISTINCT employee_id) FROM department_changes WHERE YEAR(change_date) = 2020;
SELECT SUM(carbon_offsets) FROM geothermal_plants WHERE country = 'New Zealand';
SELECT COUNT(DISTINCT color) FROM product_data;
SELECT COUNT(*) AS WellCount, EXTRACT(YEAR FROM DrillDate) AS Year  FROM OnshoreWells WHERE Location = 'Canada' GROUP BY Year;
SELECT COUNT(*) FROM research_stations WHERE ocean = 'Pacific';
SELECT country, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM factories_by_country WHERE country = f.country) AS percentage FROM factories_by_country f WHERE fair_trade = true GROUP BY country ORDER BY percentage DESC LIMIT 1;
SELECT organization FROM allocations WHERE budget = (SELECT MAX(budget) FROM allocations WHERE prompt LIKE '%ethical AI%');
SELECT drug_category, SUM(revenue) FROM sales_3 WHERE quarter = 3 AND year = 2020 GROUP BY drug_category;
SELECT n.region, COUNT(n.id) AS num_devices, SUM(s.revenue) AS total_revenue FROM network_devices n INNER JOIN subscribers s ON n.region = s.region GROUP BY n.region;
SELECT COUNT(*) AS total_players, SUM(CASE WHEN game_type = 'VR' THEN 1 ELSE 0 END) AS vr_players FROM player_games;
SELECT Name, Region FROM Artists;
SELECT SUM(num_patents) FROM patents WHERE company = 'CompanyD' AND region = 'RegionE' AND year BETWEEN 2016 AND 2019;
SELECT COUNT(*) FROM clinical_trials WHERE country = 'CountryA' AND trial_name NOT IN (SELECT trial_name FROM clinical_trials WHERE country = 'CountryB');
SELECT country, COUNT(*) as site_count FROM cultural_sites GROUP BY country ORDER BY site_count DESC LIMIT 3;
SELECT SongName, StreamCount FROM StreamingData WHERE Country = 'US' AND StreamCount = (SELECT MAX(StreamCount) FROM StreamingData WHERE Country = 'US');
SELECT program_name, budget FROM offset_programs WHERE year = 2022 ORDER BY budget DESC LIMIT 1;
SELECT ProgramName FROM Programs WHERE FundingSource = 'Private Donor' AND Attendance > (SELECT 0.5 * SUM(Attendance) FROM Programs WHERE FundingSource = 'Private Donor');
SELECT SUM(CASE WHEN country IN ('ID', 'MY') THEN revenue ELSE 0 END) as total_revenue FROM ad_engagements WHERE ad_id = 1001;
SELECT model, manufacturer, launch_date FROM aircraft;
SELECT COUNT(*) FROM Businesses INNER JOIN RuralInfrastructure ON Businesses.id = RuralInfrastructure.business_id WHERE gender = 'women' AND funded_project = TRUE AND YEAR(RuralInfrastructure.project_date) >= 2015;
SELECT SUM(grant_amount) FROM GRANTS WHERE college = 'College of Education' AND grant_date >= DATE('now','-3 year');
SELECT COUNT(DISTINCT IncidentId) FROM SafetyIncidents WHERE Area = 'Persian Gulf' AND IncidentDate >= DATEADD(MONTH, -6, GETDATE());
SELECT AVG(o.num_volunteers) AS avg_volunteers FROM organizations o JOIN regions r ON o.id = r.id WHERE r.region = 'Midwest';
SELECT COUNT(*) FROM spaceil_missions WHERE result = 'Success';
SELECT r.restaurant_id, SUM(revenue) as total_revenue FROM restaurant_revenue r JOIN restaurant_menu m ON r.restaurant_id = m.restaurant_id WHERE m.has_vegan_options = true GROUP BY r.restaurant_id;
SELECT MIN(age) FROM clients WHERE region = 'California';
SELECT COUNT(*) FROM broadband_subscribers WHERE region = 'rural' AND subscription_date BETWEEN DATE_SUB('2022-04-01', INTERVAL 1 MONTH) AND '2022-04-01';
SELECT ct.trial_name, COALESCE(COUNT(ae.adverse_event_id), 0) AS event_count FROM clinical_trials ct LEFT JOIN adverse_events ae ON ct.clinical_trial_id = ae.clinical_trial_id WHERE ct.country = 'USA' AND ct.drug_id = 1 GROUP BY ct.trial_name;
SELECT category, AVG(views) as avg_views FROM articles GROUP BY category;
SELECT AVG(age) FROM rural_hospital_5;
SELECT A.ArtistName, AVG(AverageRating) as AvgRating FROM Artworks A JOIN Artists B ON A.ArtistID = B.ArtistID WHERE B.Region = 'Africa' GROUP BY A.ArtistName;
SELECT w.city, AVG(w.amount/c.population) FROM waste_generation w JOIN city_population c ON w.city = c.city WHERE w.year = 2021 GROUP BY w.city;
SELECT Workers.ethnicity, AVG(Workers.salary) FROM Workers INNER JOIN Factories ON Workers.factory_id = Factories.id WHERE Workers.industry = 'renewable energy' AND Factories.ethical_manufacturing = TRUE GROUP BY Workers.ethnicity;
DELETE FROM renewable_projects WHERE location = 'Rural Region Y';
SELECT capacity FROM landfill_capacity WHERE region = 'eastern' AND year = 2022;
SELECT year, budget - LAG(budget) OVER (ORDER BY year) AS budget_change FROM national_budget WHERE year BETWEEN 2018 AND 2020;
SELECT d.Amount, d.DonorID, donor.Name, donor.Address FROM Donation d JOIN Donor donor ON d.DonorID = donor.ID WHERE d.ProgramID = 1;
SELECT Sector, SUM(Amount) AS TotalFinance FROM ClimateFinanceAfrica GROUP BY Sector ORDER BY TotalFinance DESC;
CREATE TABLE client_demographics (client_id INT PRIMARY KEY, gender VARCHAR(10), income DECIMAL(10,2));
SELECT application_type, COUNT(*) FROM creative_ai GROUP BY application_type;
SELECT SUM(Mass) FROM Spacecraft WHERE YEAR(LaunchDate) >= 2010;
SELECT AVG(sequestration_rate) FROM carbon_sequestration WHERE forest_type = 'Boreal Forest' AND country IN ('Canada', 'Russia');
SELECT Programs.ProgramName, COUNT(DISTINCT VolunteerPrograms.VolunteerID) as VolunteerCount FROM Programs INNER JOIN VolunteerPrograms ON Programs.ProgramID = VolunteerPrograms.ProgramID WHERE YEAR(VolunteerPrograms.VolunteerDate) = 2022 GROUP BY Programs.ProgramName ORDER BY VolunteerCount DESC;
SELECT volunteer_name, SUM(hours) AS total_hours FROM Volunteers WHERE program_id = 5 GROUP BY volunteer_name ORDER BY total_hours ASC LIMIT 1;
UPDATE city_infrastructure SET project_status = 'Completed' WHERE project_id = 15;
SELECT H.City, V.Visit_Year, AVG(R.Rating) AS Average_Rating  FROM Ratings R  JOIN Hotels H  ON R.Hotel_ID = H.Hotel_ID  JOIN (SELECT Hotel_ID, MAX(Visit_Year) AS Visit_Year  FROM Ratings  GROUP BY Hotel_ID) V  ON R.Hotel_ID = V.Hotel_ID AND R.Visit_Year = V.Visit_Year  GROUP BY H.City, V.Visit_Year;
SELECT District FROM Districts WHERE CitizensParticipated > (TotalCitizens * 0.5);
DELETE FROM property_co_ownership WHERE agreement_end_date < CURDATE();
SELECT COUNT(*) FROM inspection_reports WHERE is_compliant = false;
SELECT name FROM Astronauts WHERE missions = 0;
SELECT AVG(price) FROM accommodations WHERE is_eco_friendly = TRUE AND country = 'Australia';
SELECT country, COUNT(*) FROM wind_farms WHERE country IN ('Canada', 'Brazil', 'Argentina') AND operational = true GROUP BY country;
SELECT therapists.state, COUNT(DISTINCT therapist_patients.patient_id) AS patient_count FROM therapists JOIN therapist_patients ON therapists.therapist_id = therapist_patients.therapist_id GROUP BY therapists.state;
SELECT MAX(funding) FROM biotech.startups WHERE country = 'Canada';
SELECT AVG(account_balance) FROM customers WHERE address LIKE '%CA%';
SELECT crime_type, MIN(crime_count) FROM island.crime_stats GROUP BY crime_type;
SELECT AVG(rating) FROM Dishes WHERE menu_id IN (SELECT id FROM Menus WHERE type = 'Vegan');
SELECT AVG(safety_rating) FROM Vehicles WHERE release_year = 2020;
SELECT COUNT(*) FROM WildlifeSanctuaries WHERE permafrost != 'Stable' AND date BETWEEN '2017-01-01' AND '2022-01-01';
SELECT country FROM conservation_programs WHERE marine_conservation = true;
SELECT country, SUM(quantity_sold) FROM sales JOIN products ON sales.product_id = products.product_id WHERE material = 'Cotton' AND organic = true GROUP BY country;
SELECT f.Location, COUNT(DISTINCT f.FactoryID) * 100.0 / (SELECT COUNT(DISTINCT FactoryID) FROM Factories) AS Percentage FROM Factories f JOIN Production p ON f.FactoryID = p.FactoryID WHERE p.ProductionDate >= DATEADD(year, -1, GETDATE()) AND Material IN ('Eco-Friendly Material', 'Sustainable Material') GROUP BY f.Location;
SELECT DATE_TRUNC('day', mission_date) as mission_day, COUNT(*) as mission_count, RANK() OVER (ORDER BY COUNT(*) DESC) as mission_rank FROM spacecraft_missions GROUP BY mission_day ORDER BY mission_rank;
SELECT title, season, MAX(rating) FROM Episodes GROUP BY season;
SELECT r.name, SUM(rural_clinics.num_workers + rural_areas.num_workers) FROM rural_areas r JOIN rural_clinics ON r.name = rural_clinics.location GROUP BY r.name;
SELECT race, COUNT(*) as num_complaints FROM mental_health_parity_complaints WHERE complaint_date >= DATE_SUB(CURRENT_DATE, INTERVAL 12 MONTH) AND state = 'California' GROUP BY race;
SELECT COUNT(*) AS total_participants FROM ProgramParticipants WHERE participation_date BETWEEN '2021-01-01' AND '2021-12-31' AND participant_community IN ('Hispanic', 'African American', 'Asian', 'Native American', 'LGBTQ+', 'Disabled', 'Women', 'Senior', 'Youth', 'Veteran', 'Refugee');
SELECT v.flag_state, COUNT(v.vessel_id) AS vessel_count FROM vessel_arrivals a JOIN vessel_info v ON a.vessel_id = v.vessel_id WHERE a.arrival_timestamp BETWEEN DATE_SUB(NOW(), INTERVAL 1 MONTH) AND NOW() AND a.port_id IN (SELECT port_id FROM ports WHERE country = 'Canada') GROUP BY v.flag_state;
SELECT brand, AVG(price) FROM prices WHERE is_cruelty_free = true GROUP BY brand ORDER BY AVG(price) DESC LIMIT 3;
INSERT INTO digital_trends (trend_id, name, popularity_score) VALUES (9, 'Machine Learning', 85), (10, 'Blockchain', 60);
SELECT name, MAX(price) FROM menu_items;
SELECT * FROM community_health_workers WHERE score < 80;
SELECT category, COUNT(*) AS count FROM ArticleCategories WHERE newspaper = 'LA Times' GROUP BY category ORDER BY count DESC LIMIT 1;
SELECT City.name, AVG(Crime.count) AS avg_crime_count FROM City INNER JOIN Crime ON City.id = Crime.city_id GROUP BY City.name;
SELECT AVG(word_count) FROM Articles WHERE YEAR(publish_date) = 2017;
SELECT SUM(NumPieces * PricePerPiece) FROM ArtSales2 WHERE MuseumName = 'Modern Art Museum' AND YEAR(SaleDate) = 2022;
SELECT c.name FROM cause c JOIN donation d ON c.id = d.cause_id WHERE d.amount > 10000;
SELECT ports_europe.port_name, AVG(ports_europe.cargo_quantity) FROM ports_europe WHERE ports_europe.region = 'Europe' GROUP BY ports_europe.port_name;
ALTER TABLE cultural_events ADD event_website VARCHAR(50);
INSERT INTO Vessels (Id, Name, Type, Year) VALUES (123, 'Manta Ray', 'Research Vessel', 2015);
SELECT COUNT(initiatives.id) FROM initiatives WHERE initiatives.region = 'rural India' AND initiatives.leader LIKE 'Ms.%' AND initiatives.start_date >= '2015-01-01';
SELECT COUNT(DISTINCT GameB_Participants.player_id) as num_players FROM GameB_Participants JOIN GameB_eSportsEvents ON GameB_Participants.game_id = GameB_eSportsEvents.game_id;
SELECT customer_region, AVG(transaction_value) as avg_transaction_value FROM customer_transactions_2 WHERE transaction_date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) AND CURRENT_DATE AND customer_region = 'Asia' GROUP BY customer_region ORDER BY MIN(transaction_date);
UPDATE products p SET category = 'sustainable' WHERE p.id IN (SELECT ps.id FROM products_sustainability ps);
SELECT (COUNT(*) FILTER (WHERE faculty_gender = 'Female')) * 100.0 / COUNT(*) FROM faculty_members WHERE faculty_department LIKE '%Business%';
SELECT SUM(revenue) FROM organic_farming WHERE region = 'Northeast';
SELECT MIN(weight) FROM packages WHERE shipped_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 WEEK) AND destination = 'Asia';
DELETE FROM recycled_polyester WHERE brand = 'BrandC' AND country = 'Japan' AND year = 2019;
SELECT MAX(torque) FROM performance_data WHERE transmission_type = 'Manual';
SELECT COUNT(*) FROM infrastructure_esg WHERE esg_rating >= 4 AND country = 'United States';
SELECT AVG(inmates.age) FROM inmates INNER JOIN restorative_justice_programs ON inmates.id = restorative_justice_programs.inmate_id INNER JOIN prisons ON inmates.prison_id = prisons.id WHERE prisons.state = 'California';
SELECT MAX(safety_violation_cost) - MIN(safety_violation_cost) FROM chemical_plants WHERE country = 'Brazil';
CREATE TABLE lawyer_cases (id INT PRIMARY KEY, lawyer_id INT, case_number VARCHAR(50), FOREIGN KEY (lawyer_id) REFERENCES lawyers(id));
SELECT p.country FROM projects p INNER JOIN project_capacity pc ON p.id = pc.project_id GROUP BY p.country HAVING SUM(pc.capacity_mw) >= 500;
SELECT SUM(CargoWeight) FROM Vessels WHERE Category = 'Cargo Ship';
SELECT COUNT(*) FROM research_grants WHERE country = 'USA';
SELECT AVG(age) FROM patients WHERE gender = 'female' AND diagnosis = 'diabetes' AND state = 'Texas';
INSERT INTO Albums (AlbumID, AlbumName, ReleaseYear, Artist) VALUES (1, 'DAMN', 2017, 'Kendrick Lamar');
SELECT COUNT(*) FROM Farmers WHERE Country IN ('France', 'Germany') AND Specialty = 'Urban Agriculture';
SELECT AVG(Production) FROM Sustainable_Agriculture WHERE Crop = 'Teff' AND Continent = 'Middle East' AND Year BETWEEN (SELECT MAX(Year) FROM Sustainable_Agriculture) - 4 AND (SELECT MAX(Year) FROM Sustainable_Agriculture);
SELECT DATEPART(year, completion_date) as year, DATEPART(month, completion_date) as month, COUNT(*) as num_projects FROM public_works WHERE completion_date >= '2019-01-01' AND completion_date < '2020-01-01' GROUP BY DATEPART(year, completion_date), DATEPART(month, completion_date);
SELECT SUM(num_trees) FROM climate_mitigation WHERE country IN ('Africa', 'South America');
SELECT recycling_rate FROM region_recycling WHERE region='Andalusia' AND day=5;
SELECT region, SUM(co2_emissions) FROM suppliers GROUP BY region;
SELECT year, ROUND(100.0 * COUNT(*) / (SELECT COUNT(*) FROM ai_safety.papers WHERE published = true AND year <= t.year), 2) as paper_percentage FROM ai_safety.papers t WHERE published = true GROUP BY year;
SELECT Gender, SUM(AmountDonated) as TotalDonated FROM Donors WHERE AmountDonated >= 0 AND AmountDonated < 9999.99 GROUP BY Gender;
DROP VIEW vessels_summary;
SELECT country, COUNT(*) AS num_sustainable FROM Accommodations WHERE sustainable = TRUE GROUP BY country ORDER BY num_sustainable DESC LIMIT 2;
SELECT chemical_name, SUM(waste_amount) as total_waste FROM Chemical_Waste GROUP BY chemical_name;
SELECT drug_type, AVG(approval_time) as average_approval_time FROM approval_times at JOIN drug_types dt ON at.drug_name = dt.drug_name GROUP BY drug_type ORDER BY average_approval_time ASC, drug_type;
SELECT crime_type, MAX(fine) FROM criminal_cases WHERE case_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) GROUP BY crime_type;
SELECT AVG(price) FROM CulturalEvents WHERE region = 'Europe' AND quarter = 1 AND year = 2022 AND category = 'Dance';
SELECT D.donor_id, SUM(D.donation_amount) as total_donations FROM Donors D INNER JOIN Organizations O ON D.org_id = O.org_id WHERE O.org_location IN ('California', 'Texas') GROUP BY D.donor_id;
SELECT treatment_type, COUNT(*) as count FROM treatments WHERE age BETWEEN 40 AND 50 GROUP BY treatment_type ORDER BY count DESC LIMIT 1;
SELECT SUM(CASE WHEN journal IN ('Journal of Engineering', 'Journal of Natural Sciences') THEN 1 ELSE 0 END) FROM publications;
INSERT INTO factories (factory_id, department) VALUES (4, 'renewable energy');
SELECT MAX(trip_duration) FROM autonomous_trains, city_coordinates WHERE city_coordinates.city = 'New York City';
SELECT area, COUNT(*) as num_species FROM ForestArea GROUP BY area;
SELECT MAX(num_workshops) FROM professional_development WHERE department = 'Mathematics';
SELECT district_id, year, CASE WHEN LAG(enrolled) OVER (PARTITION BY district_id ORDER BY year) = true AND enrolled = false THEN 1 ELSE 0 END as enrollment_decreased FROM lifelong_learning WHERE year BETWEEN 2016 AND 2020 GROUP BY district_id, year HAVING SUM(enrollment_decreased) > 0;
WITH expensive_items AS (UPDATE player_inventory SET sold = 'true' WHERE price > 1000) SELECT * FROM expensive_items;
SELECT color, SUM(quantity) AS total_sold FROM sales GROUP BY color;
INSERT INTO traditional_arts (id, name, tribe, description) VALUES (4, 'Dance of the Eagle', 'Tribe Z', 'A sacred dance performed during ceremonial events.');
SELECT City, SUM(Budget) FROM City_Budget WHERE Department = 'Education' GROUP BY City;
SELECT suppliers.supplier_name, COUNT(DISTINCT unique_products.product_id) FROM suppliers JOIN unique_products ON suppliers.supplier_id = unique_products.supplier_id GROUP BY suppliers.supplier_id;
SELECT category, COUNT(DISTINCT donor_id) as total_donors, SUM(amount) as total_donation FROM Donations WHERE donation_date BETWEEN '2021-07-01' AND '2021-09-30' AND ngo_leader = 'Female' AND category = 'Arts' GROUP BY category;
SELECT AVG(DATEDIFF(resolution_date, incident_date)) as avg_resolution_time_finance FROM incidents WHERE department = 'finance'; SELECT AVG(DATEDIFF(resolution_date, incident_date)) as avg_resolution_time_org FROM incidents;
SELECT bank_name, SUM(total_assets) as total_assets FROM ShariahBanks ORDER BY total_assets DESC LIMIT 2;
SELECT Salesperson, SUM(SalesData.Sustainable::INT * SalesData.SalesID) as SumOfSales FROM SalesData WHERE SalesDate BETWEEN '2021-05-01' AND '2021-05-31' AND Sustainable = true GROUP BY Salesperson;
(SELECT species FROM animal_sightings) UNION (SELECT species FROM plant_observations) UNION (SELECT species FROM fungi_findings);
SELECT COUNT(*) FROM wells WHERE region = 'antarctic';
SELECT ota_name, (q1_2022 - q1_2021) / q1_2021 * 100 AS revenue_growth FROM otas_virtual_tours WHERE region = 'LATAM' AND q1_2022 > q1_2021;
SELECT region, MIN(population), COUNT(name) FROM IndigenousCommunities GROUP BY region;
SELECT SUM(budget) FROM budget_report WHERE program = 'education';
SELECT State, SUM(AdoptionRate) FROM ElectricVehicleAdoptionState WHERE State IS NOT NULL GROUP BY State;
SELECT MIN(cargo_weight) FROM shipments JOIN ports ON shipments.port_id = ports.port_id WHERE ports.port_name = 'Rotterdam';
INSERT INTO trades (trade_id, customer_id, trade_date, security_symbol, quantity) VALUES (123, 456, '2022-01-01', 'ABC', 100);
DELETE FROM Suppliers WHERE supplier_name = 'ABC Corp';
SELECT judge_name, SUM(num_cases) as total_cases FROM judge_cases WHERE court_type = 'District Court' GROUP BY judge_name;
SELECT player, SUM(points) OVER (PARTITION BY player ORDER BY game_date DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING) as total_points FROM points WHERE game_date >= DATEADD(day, -5, CURRENT_DATE);
INSERT INTO impact (site_id, impact_score) VALUES (3, 70);
SELECT MIN(StayLength/7.0) FROM Visitors WHERE Nationality IN ('Australian', 'NewZealander') AND DestinationID = 1 AND VisitYear = 2022;
SELECT SUM(rainfall) FROM Rainfall WHERE region IN ('BR-SP', 'AR-BA') AND EXTRACT(MONTH FROM date) = 1 AND EXTRACT(YEAR FROM date) = 2022;
SELECT region, incident_type, SUM(incident_count) as total_incidents FROM safety_incidents GROUP BY region, incident_type;
SELECT SUM(funding.amount) FROM arts_culture.funding JOIN arts_culture.programs ON funding.program_id = programs.program_id WHERE programs.demographic = 'Youth';
SELECT MIN(launch_date) FROM satellites WHERE in_orbit = TRUE;
SELECT DISTINCT Country FROM Humanitarian_Assistance WHERE Quarter = 3 AND Year = 2022;
SELECT tax_percentage FROM sales_tax WHERE region = 'Middle East';
SELECT COUNT(*) FROM customers WHERE financial_wellbeing_score > 8;
UPDATE donations_update SET donation_amount = 6000 WHERE donor_name = 'John Doe';
UPDATE Employees SET Salary = Salary * 1.05 WHERE Department = 'Construction';
SELECT SUM(production_cost) FROM material_production_antarctica WHERE material_name IN ('Organic Cotton', 'Recycled Polyester', 'Hemp') AND production_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE();
SELECT AgencyId, (Budget - LAG(Budget, 1) OVER (PARTITION BY AgencyId ORDER BY Year)) as BudgetIncrease FROM AgencyYearBudget WHERE Year IN (2019, 2020) ORDER BY BudgetIncrease DESC;
SELECT drug_name, SUM(expenditure) as total_rd_expenditure FROM rd_expenditure WHERE year = 2022 GROUP BY drug_name;
SELECT Suppliers.CompanyName FROM Suppliers LEFT JOIN SupplierOrders ON Suppliers.SupplierID = SupplierOrders.SupplierID WHERE Suppliers.Country = 'Asia' AND SupplierOrders.OrderDate < DATEADD(YEAR, -1, GETDATE()) AND SupplierOrders.OrderID IS NULL;
SELECT s.state, h.type as hospital_type, c.type as clinic_type, COUNT(h.id) as num_hospitals, COUNT(c.id) as num_clinics FROM (SELECT DISTINCT state FROM hospitals UNION SELECT DISTINCT state FROM clinics) as s LEFT JOIN hospitals h ON s.state = h.state LEFT JOIN clinics c ON s.state = c.state GROUP BY s.state, h.type, c.type;
SELECT username, MAX(followers) as max_followers FROM (SELECT username, followers, ROW_NUMBER() OVER (PARTITION BY username ORDER BY follow_date DESC) as rn FROM user_followers WHERE region = 'Africa' AND follow_date >= DATEADD(week, -1, CURRENT_DATE)) t GROUP BY username
SELECT warehouses.city, AVG(weight) FROM packages JOIN warehouses ON packages.warehouse_id = warehouses.id WHERE warehouses.state = 'Washington' AND MONTH(packages.shipped_date) > 6 AND YEAR(packages.shipped_date) = 2022 GROUP BY warehouses.city;
ALTER TABLE funding ADD COLUMN year INT;
SELECT SUM(revenue) FROM Sales WHERE dish_name = (SELECT dish_name FROM Sales GROUP BY dish_name ORDER BY COUNT(*) DESC LIMIT 1);
SELECT State, SUM(Amount) as 'Total Donations', (SUM(Amount) / (SELECT SUM(Amount) FROM Donors WHERE DonationDate BETWEEN '2021-01-01' AND '2021-06-30') * 100) as 'Percentage of Donations' FROM Donors WHERE DonationDate BETWEEN '2021-01-01' AND '2021-06-30' GROUP BY State;
SELECT COUNT(*) FROM seals;
SELECT city, type, SUM(value) as total, DATE_FORMAT(timestamp, '%%Y-%%m') as month FROM city_data GROUP BY city, type, month;
SELECT name FROM bridges WHERE location = 'Spain' ORDER BY length DESC LIMIT 3;
SELECT ota.ota_name, SUM(ob.revenue) as total_revenue, (SUM(ob.revenue) / (SELECT SUM(ob2.revenue) FROM ota_bookings ob2)) as market_share FROM hotels h INNER JOIN ota_bookings ob ON h.hotel_id = ob.hotel_id INNER JOIN (SELECT DISTINCT hotel_id, ota_name FROM ota_bookings) ota ON h.hotel_id = ota.hotel_id GROUP BY ota.ota_name;
SELECT county, avg_usage FROM co_drought_impact
SELECT state, (SUM(CASE WHEN gender = 'Female' THEN num_employees ELSE 0 END)/SUM(num_employees))*100 AS pct_female FROM gender_distribution GROUP BY state;
SELECT MIN(timeline) FROM project_timeline WHERE state = 'TX' AND type = 'Residential';
SELECT country, COUNT(*) as num_patents, RANK() OVER (PARTITION BY 1 ORDER BY COUNT(*) DESC) as rank FROM patent GROUP BY country;
SELECT e.artist_id, e.exhibition_name, e.num_works  FROM Exhibitions e  WHERE e.exhibition_name = 'Modern Art Museum'
SELECT Project, Savings FROM WaterConservation WHERE Year = 2019 GROUP BY Project ORDER BY Savings DESC;
SELECT COUNT(*) FROM experiences WHERE city = 'Sydney' AND sustainable = TRUE;
INSERT INTO hotels (id, name, country, stars) VALUES (3, 'Hotel Ritz', 'Spain', 5);
SELECT job_location, COUNT(*) FROM hr.job_applications GROUP BY job_location;
SELECT org_id, SUM(amount) AS total_funding, num_volunteers FROM funding f JOIN volunteers v ON f.org_id = v.org_id GROUP BY org_id;
SELECT safety_measure AS name, protocol_id FROM safety_protocols ORDER BY protocol_id ASC;
SELECT AVG(range) FROM EV_Specs WHERE manufacturing_country = 'South Korea';
SELECT AVG(cost) FROM permit WHERE state = 'California' AND industry = 'Construction';
SELECT Artists.name, Artists.birthplace FROM Artists INNER JOIN Artworks ON Artists.id = Artworks.artist_id WHERE Artworks.art_style = 'Post-Impressionism';
SELECT v.name, COUNT(i.id) as num_incidents FROM incidents i JOIN vessels v ON i.vessel_id = v.id WHERE i.incident_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY v.name;
SELECT COUNT(*) FROM community_development WHERE region = 'Lombardy' AND start_date <= '2017-12-31' AND end_date >= '2015-01-01' AND initiative_type = 'Community Center';
SELECT species, year, SUM(biomass) FROM ArcticOceanBiomassYearly GROUP BY species, year;
SELECT (COUNT(*) FILTER (WHERE body_style = 'sedan')) * 100.0 / COUNT(*) FROM green_vehicles WHERE make = 'Tesla' OR make = 'Rivian';
SELECT AVG(wellbeing_score) FROM financial_training WHERE training_date >= DATEADD(year, -1, CURRENT_DATE) AND country = 'India';
SELECT MIN(Salary) FROM Employees WHERE DiversityTraining = true;
SELECT Total_Manned_Missions FROM Space_Agencies WHERE Agency = 'Roscosmos';
SELECT offender_name, COUNT(*) as total_offenses FROM offenders JOIN offenses ON offenders.offender_id = offenses.offender_id GROUP BY offender_name ORDER BY total_offenses DESC LIMIT 5;
SELECT SUM(duration) as total_duration FROM workout_data JOIN user_data ON workout_data.user_id = user_data.user_id WHERE user_data.gender = 'Female' AND workout_type = 'Strength Training';
SELECT material, COUNT(*) as reuse_count FROM material_reuse GROUP BY material;
SELECT SUM(budget) FROM community_development WHERE status = 'successful';
SELECT B.Brand_Name, COUNT(DISTINCT MT.Material_Type) AS Number_Of_Sustainable_Material_Types FROM Brands B
DELETE FROM Public_Services WHERE service_id = 2;
SELECT e.name, e.location, e.year, r.name AS leader_name FROM expeditions e JOIN researchers r ON e.leader_id = r.id WHERE r.expertise = 'indigenous_knowledge' AND e.year >= 2015;
SELECT SUM(incidents) FROM security_incidents WHERE sector = 'education' AND year = 2020;
SELECT year, MAX(utilization) FROM storage_utilization WHERE country = 'South Korea' AND year BETWEEN 2018 AND 2021 GROUP BY year;
SELECT sector, AVG(response_time) FROM police_assistance GROUP BY sector;
SELECT region, quarter, SUM(quantity) as total_quantity FROM Sales WHERE product = 'Eco Friendly T-Shirts' AND year = 2022 GROUP BY region, quarter;
SELECT COUNT(*) FROM Employees WHERE hire_date BETWEEN '2021-01-01' AND '2021-12-31';
SELECT MAX(age) FROM rural_clinic WHERE country = 'Canada';
SELECT topic FROM ai_topics WHERE papers > 3 AND year = 2023 AND category IN ('AI safety', 'Explainable AI');
SELECT SUM(area) FROM sanctuary_areas;
INSERT INTO GameGenres (GenreID, Genre) VALUES (4, 'Simulation');
SELECT MemberID, WorkoutType, DATE_TRUNC('month', Date) as Month FROM Workouts GROUP BY MemberID, WorkoutType, Month ORDER BY Month DESC;
SELECT brand, revenue/employees as revenue_per_employee FROM brand_data ORDER BY revenue_per_employee ASC;
SELECT AVG(age) FROM refugees WHERE gender = 'Female';
SELECT AVG(cost) FROM water_infrastructure WHERE project_type = 'Dam';
UPDATE explainability_scores SET explanation_score = explanation_score + 10 WHERE algorithm_name = 'ML Algo 1' AND explanation_score < 70;
SELECT campaign_id, SUM(ad_spend) AS total_spend FROM south_america_ads GROUP BY campaign_id;
SELECT ContractorID FROM Contractors WHERE State = 'TX'; SELECT COUNT(PermitID) FROM BuildingPermits WHERE ContractorID IN (SELECT ContractorID FROM Contractors WHERE State = 'TX');
SELECT animal_type, MAX(size) FROM Protected_Habitats GROUP BY animal_type;
SELECT COUNT(*) FROM artworks WHERE gender = 'Female';
SELECT city FROM infrastructure_dept_budget WHERE budget > 500000;
SELECT military_satellites.satellite_name, military_satellites.type, satellite_launches.launch_date FROM military_satellites INNER JOIN satellite_launches ON military_satellites.id = satellite_launches.satellite_id;
SELECT MAX(views) FROM virtual_tours WHERE location = 'Dubai';
SELECT AVG(CO2_emission) FROM flight_emissions WHERE country = 'India';
SELECT region, AVG(rating) FROM ratings r JOIN hotels h ON r.hotel_id = h.hotel_id WHERE rating_source = 'AI-powered chatbot' GROUP BY region;
UPDATE metro_fares SET fare = 1.80 WHERE city = 'Tokyo';
SELECT COUNT(*) FROM Articles WHERE Category = 'National' AND WordCount > 800;
SELECT AVG(population) FROM AnimalData2 WHERE order_class = 'Marine Mammal';
SELECT YEAR(added_date) AS year, COUNT(*) AS total FROM machines GROUP BY year;
SELECT region, SUM(donation_amount) FROM donors d1 WHERE donation_amount < (SELECT DISTINCT donation_amount FROM donors d2 WHERE d1.region = d2.region ORDER BY donation_amount DESC LIMIT 2 OFFSET 1) GROUP BY region;
SELECT w.name, SUM(op.production) as total_production FROM wells w JOIN oil_production op ON w.id = op.well_id WHERE w.location = 'Gulf of Mexico' GROUP BY w.name ORDER BY total_production DESC LIMIT 5;
SELECT D.Name, COUNT(C.CrimeID) as NumCrimes FROM Districts D INNER JOIN Crimes C ON D.DistrictID = C.DistrictID WHERE C.Date >= DATEADD(MONTH, -1, GETDATE()) GROUP BY D.Name;
SELECT AVG(data_usage) FROM customers INNER JOIN customer_activity ON customers.customer_id = customer_activity.customer_id WHERE customers.data_usage IS NOT NULL AND customer_activity.start_date <= CURDATE() - INTERVAL 3 MONTH AND (customer_activity.end_date IS NULL OR customer_activity.end_date >= CURDATE() - INTERVAL 3 MONTH) AND customer_activity.city = 'Los Angeles';
SELECT well_name FROM WellProduction WHERE region = 'ArabianGulf' AND production_qty > (SELECT AVG(production_qty) FROM WellProduction WHERE region = 'ArabianSea')
SELECT dept_name, CASE  WHEN worker_age BETWEEN lower_limit AND upper_limit THEN age_range_id  END as age_range_id, COUNT(*) as count FROM department d JOIN worker_demographics w ON d.worker_id = w.worker_id JOIN age_ranges a ON w.worker_age BETWEEN a.lower_limit AND a.upper_limit GROUP BY dept_name, age_range_id;
SELECT SUM(volume) FROM Shipment WHERE warehouse_id = (SELECT id FROM Warehouse WHERE location = 'Los Angeles') AND region = 'Asia-Pacific' AND shipment_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 3 MONTH) AND CURDATE();
SELECT * FROM mobile_subscribers WHERE region = 'North' AND plan_status = 'active' AND device_os = 'iOS';
SELECT DATE_FORMAT(publish_date, '%Y-%m-%d') as publish_date, COUNT(*) as articles_per_day FROM articles WHERE publish_date >= '2022-06-01' AND publish_date < '2022-07-01' GROUP BY publish_date
SELECT SUM(refills) FROM medications WHERE medication LIKE '%antibiotic%' AND prescription_date BETWEEN '2022-01-01' AND '2022-03-31';
SELECT a.name FROM authors a JOIN articles ar ON a.id = ar.author_id GROUP BY a.name HAVING COUNT(ar.id) > 5 ORDER BY a.name;
SELECT years_of_experience, AVG(COUNT(*)) as avg_courses FROM teachers WHERE professional_development_course_completion_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY years_of_experience;
SELECT MIN(Amount) FROM ResearchGrants rg INNER JOIN Faculty f ON rg.FacultyID = f.FacultyID WHERE f.Department = 'Physics';
SELECT * FROM building_permits WHERE project_type = 'Sustainable' AND state = 'Washington';
SELECT CASE WHEN Age < 30 THEN 'Under 30' WHEN Age < 50 THEN '30-49' ELSE '50 and over' END AS Age_Group, AVG(Claim_Amount) FROM Claims GROUP BY Age_Group;
SELECT name FROM marine_species WHERE habitat = 'Arctic';
SELECT COUNT(*) FROM ISSMissions WHERE crewed = TRUE;
INSERT INTO production_data (element, production_date, production_quantity) VALUES ('Gadolinium', '2023-01-01', 1200), ('Gadolinium', '2023-02-01', 1500), ('Gadolinium', '2023-03-01', 1800);
SELECT MAX(Altitude) FROM TestFlights;
SELECT players.player_name, AVG(games.home_runs) as avg_home_runs_per_game FROM players INNER JOIN games ON players.player_id = games.home_team GROUP BY players.player_name;
SELECT region, AVG(level) AS avg_level, MIN(level) AS min_level, MAX(level) AS max_level FROM epicquest_players GROUP BY region;
SELECT SUM(amount) FROM network_investments WHERE region = 'Europe';
SELECT products.product_code, products.manufacturing_date, raw_materials.supplier_name FROM products INNER JOIN raw_materials ON products.product_code = raw_materials.product_code GROUP BY products.product_code, products.manufacturing_date HAVING COUNT(DISTINCT raw_materials.source_country) >= 2;
SELECT country_code, SUM(donation_amount) FROM donations GROUP BY country_code;
SELECT COUNT(*) FROM Hazardous_Containers WHERE hazardous_material = true AND vessel_name LIKE 'ACME%' AND handling_date >= '2020-07-01' AND handling_date <= '2020-09-30';
SELECT SUM(price) FROM menus WHERE category = 'Vegetarian';
SELECT c.company_name, w.department, SUM(w.num_employees) AS total_employees FROM workers w INNER JOIN companies c ON w.company_id = c.company_id GROUP BY w.department, c.company_name HAVING department = 'geological survey';
SELECT DISTINCT account_name FROM user_accounts WHERE last_updated >= DATEADD(month, -1, GETDATE()) AND incident_count <= 5;
SELECT MIN(investment_amount) FROM impact_investments WHERE sector = 'microfinance';
SELECT name FROM explainable_ai ORDER BY success_score DESC LIMIT 3;
SELECT year, SUM(employees) FROM employment_data WHERE state = 'Texas' GROUP BY year;
SELECT garment, MIN(quantity) FROM sustainable_materials GROUP BY garment;
SELECT county, (SUM(lgbtq) OVER (PARTITION BY county)) * 100.0 / SUM(population) OVER (PARTITION BY county) as pct_lgbtq FROM lgbtq_data ORDER BY pct_lgbtq DESC;
SELECT species_name, min_limit, max_limit FROM MaritimeLaw.SpeciesCatchLimits;
SELECT COUNT(*) FROM Attendees WHERE AttendeeType = 'African American' AND EventDate BETWEEN '2023-01-01' AND '2023-06-30' AND Program = 'Theater' AND IsFirstTimeAttendee = TRUE;
SELECT SUM(size_ha) FROM agroecology.organic_farms;
SELECT mine_id, AVG(impact_score) FROM impact_scores GROUP BY mine_id;
SELECT cultivator_name, SUM(weight) AS total_weight FROM cultivators WHERE state = 'MI' AND harvest_date BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY cultivator_name ORDER BY total_weight DESC LIMIT 1;
SELECT State, COUNT(*) FROM JuvenileOffenders GROUP BY State;
SELECT COUNT(*) FROM Contracts WHERE contractor = 'ABC Corp' AND contract_type = 'Defense';
SELECT ui.industry, AVG(ui.workers) as avg_workers FROM union_industry ui JOIN unions u ON ui.union_id = u.id WHERE u.state = 'Texas' GROUP BY ui.industry;
SELECT recycling_rate FROM recycling_rates WHERE state = 'California' AND year = 2020 AND material_type = 'Metal';
SELECT COUNT(*) FROM Electric_Vehicles_India;
SELECT COUNT(*) FROM students JOIN support_programs_students ON students.id = support_programs_students.student_id JOIN support_programs ON support_programs_students.program_id = support_programs.id WHERE students.disability = 'learning disabilities' AND support_programs.state = 'Florida' AND students.served_by_support_program = TRUE AND date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);
SELECT country, impact FROM economic_impact WHERE row_number() OVER (ORDER BY impact DESC) <= 3;
SELECT AVG(resolution_time) FROM cases WHERE division = 'civil';
SELECT SUM(billing_amount) FROM cases JOIN attorneys ON cases.attorney_id = attorneys.attorney_id WHERE attorneys.law_school IN ('Harvard', 'Stanford', 'Columbia', 'Yale', 'Penn', 'MIT', 'Caltech', 'Princeton', 'Chicago', 'Duke');
SELECT COUNT(DISTINCT name) FROM unions;
SELECT SUM(allocated_amount) FROM budgets_program WHERE program IN ('Program B', 'Program C');
SELECT supplier_name, compliance_score, ROW_NUMBER() OVER (ORDER BY compliance_score DESC) as rank FROM compliance_scores WHERE supplier_id IN (SELECT supplier_id FROM compliance_scores WHERE compliance_score IS NOT NULL ORDER BY compliance_score DESC FETCH FIRST 5 ROWS ONLY);
INSERT INTO dispensaries (id, name, state) VALUES (10, 'Green Detroit', 'Michigan');
ALTER TABLE smart_grid ADD COLUMN renewable_energy_percentage INT;
SELECT * FROM Satellite WHERE LaunchDate BETWEEN '2005-01-01' AND '2010-12-31';
SELECT COUNT(*) FROM cases WHERE dismissal_date >= DATEADD(year, -1, GETDATE());
SELECT COUNT(*) FROM (SELECT 'tangible' as type, t.name FROM tangible_heritage t WHERE t.region = 'Eastern Europe' UNION ALL SELECT 'intangible' as type, i.name FROM intangible_heritage i WHERE i.region = 'Eastern Europe') AS h;
SELECT DISTINCT e.mineral, SUM(e.amount) as total_extraction FROM extraction e JOIN company c ON e.company_id = c.id WHERE c.country LIKE '%European Union%' GROUP BY e.mineral;
SELECT MIN(investment_amount) FROM climate_adaptation_projects WHERE location LIKE 'LDCs' AND investment_year BETWEEN 2017 AND 2021;
SELECT COUNT(*) FROM ai_projects_detailed WHERE project_domain = 'digital divide';
SELECT origin_country, COUNT(*) as designer_count FROM designers GROUP BY origin_country HAVING designer_count > 20;
SELECT MIN(Temperature) as Min_Temperature, DATE_FORMAT(Date, '%M') as Month FROM Temperature JOIN WeatherStation ON Temperature.WeatherStationID = WeatherStation.ID WHERE Country IN ('Canada', 'Russia') AND Date LIKE '2020-%' GROUP BY Month;
SELECT price_range, AVG(rating) as avg_rating FROM (SELECT CASE WHEN price <= 10 THEN 'Low' WHEN price <= 20 THEN 'Medium' ELSE 'High' END as price_range, rating FROM menu) subquery GROUP BY price_range;
SELECT project_name, allocation FROM climate_adaptation WHERE year = 2019;
SELECT program_name, budget FROM community_development WHERE launch_year > 2014;
SELECT factories.name, factories.location FROM factories LEFT JOIN circular_economy_practices ON factories.id = circular_economy_practices.factory_id WHERE circular_economy_practices.factory_id IS NULL;
SELECT avg(avg_weight) FROM penguins;
SELECT country, AVG(temperature) as avg_temperature FROM world_temperature WHERE YEAR(measurement_date) = 2020 GROUP BY country, YEAR(measurement_date), TO_CHAR(measurement_date, 'IYYY') ORDER BY avg_temperature;
SELECT AVG(FairnessScore) FROM Algorithms WHERE Country = 'South America';
SELECT Students.FirstName, Students.LastName, COUNT(Accommodations.AccommodationID) as NumberOfAccommodations FROM Students INNER JOIN Accommodations ON Students.StudentID = Accommodations.StudentID WHERE Accommodations.Date BETWEEN DATEADD(year, -1, GETDATE()) AND GETDATE() GROUP BY Students.FirstName, Students.LastName ORDER BY NumberOfAccommodations DESC LIMIT 5;
SELECT COUNT(*) FROM shariah_compliant_finance WHERE country LIKE 'North America' AND ROE > 0.10;
SELECT PreferredGenre, AVG(Age) FROM Players JOIN VR_Games ON Players.PlayerID = VR_Games.PlayerID JOIN Game_Details ON Game_Library.GameID = Games.GameID WHERE LastVRGame >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) GROUP BY PreferredGenre;
SELECT SUM(grants.amount) FROM grants INNER JOIN graduate_students ON grants.student_id = graduate_students.id WHERE graduate_students.department = 'Engineering';
SELECT AVG(age) FROM employees WHERE diversity_training = TRUE;
SELECT * FROM safety_incidents WHERE chemical = 'chemical D' AND incident_date BETWEEN DATEADD(year, -1, GETDATE()) AND GETDATE();
SELECT wtm.name as treatment_method, SUM(ce.emissions) as total_emissions FROM waste_treatment_methods wtm JOIN co2_emissions ce ON wtm.id = ce.treatment_method_id WHERE wtm.state = 'California' GROUP BY wtm.name;
SELECT Program, COUNT(DISTINCT Volunteer) as TotalVolunteers FROM VolunteerCount WHERE VolunteerDate BETWEEN '2021-07-01' AND '2021-09-30' GROUP BY Program;
INSERT INTO Museums (Name, Attendance, Year) VALUES ('New Museum', 8000, 2021)
UPDATE hotels SET stars = 4 WHERE name = 'Hotel Adlon';
SELECT AVG(budget) FROM startups WHERE location LIKE '%Asia%' OR location LIKE '%Pacific%' AND category = 'bioprocess engineering';
SELECT country, SUM(investment) as total_investment FROM capacity_building_data GROUP BY country;
SELECT manufacturer, launch_year, SUM(accidents) as total_accidents FROM aerospace.aircraft GROUP BY manufacturer, launch_year;
SELECT Gender, SUM(MembershipFee) AS TotalRevenue FROM Members GROUP BY Gender;
SELECT COUNT(DISTINCT country) FROM music_streaming;
SELECT * FROM models WHERE name = 'LIME';
SELECT SUM(c.weight) as total_weight FROM Container c JOIN Shipment s ON c.container_id = s.container_id WHERE s.shipping_date >= NOW() - INTERVAL '30 days' AND c.last_known_location = 'delayed';
SELECT SUM(operations_count) FROM aus_intelligence_operations WHERE year IN (2019, 2020);
DELETE FROM dishes WHERE dishes.dish_id = 2;
SELECT COUNT(*) FROM Southeast_Asia_MPAs;
SELECT usage FROM midwest_water_usage WHERE sector = 'Agricultural' AND state IN ('Iowa', 'Illinois', 'Indiana');
SELECT MAX(depth), MIN(depth) FROM ocean_floor_mapping;
SELECT name FROM rural_development.farmers WHERE technique = 'Sustainable Agriculture';
INSERT INTO renewable_energy_projects (id, project_type, initiator, initiated_year, capacity) VALUES (2, 'solar farm', 'SunStride', 2023, 250);
SELECT station_id, (entries + exits) AS total FROM station_entries_exits ORDER BY total DESC LIMIT 5;
SELECT MAX(volume) FROM port_operations.cargo_handling;
CREATE VIEW avg_skill_level_by_dept AS SELECT department, AVG(skill_level) as avg_skill_level FROM employee_skills GROUP BY department;
SELECT name, location FROM renewable_projects_3 WHERE technology IN ('Solar', 'Wind', 'Hydro', 'Geothermal', 'Biomass');
SELECT MineName, Nationality, COUNT(*) as EmployeeCount FROM Employee INNER JOIN Mine ON Employee.MineID = Mine.MineID GROUP BY MineName, Nationality;
SELECT COUNT(*) FROM policy_trends WHERE country = 'China' AND start_year BETWEEN 2015 AND 2022 AND end_year BETWEEN 2015 AND 2022;
SELECT R.City, YEAR(I.InspectionDate) as Year, COUNT(*) as TotalInspections, AVG(I.InspectionScore) as AverageInspectionScore FROM Restaurants R INNER JOIN Inspections I ON R.RestaurantID = I.RestaurantID WHERE YEAR(I.InspectionDate) = 2022 GROUP BY R.City;
SELECT AVG(salary) FROM upskilled_workers w JOIN upskilling_programs p ON w.id = p.worker_id WHERE w.industry = 'textile' AND program IN ('Automation', 'AI');
SELECT d.disability_status, COUNT(c.attorney_id) AS total_cases, SUM(b.hours) AS total_hours FROM attorney_disability d JOIN billing b ON d.attorney_id = b.attorney_id JOIN cases c ON d.attorney_id = c.attorney_id GROUP BY d.disability_status;
SELECT MIN(gold_production) as min_gold_production FROM production_data;
SELECT MAX(price / gram_weight) FROM grow WHERE grower = 'Grower B' AND product = 'Flower' AND QUARTER(sale_date) = 1 AND YEAR(sale_date) = 2022;
SELECT contract_region, SUM(contract_value) as total_contract_value FROM Contract_Data WHERE contract_region = 'United States government' AND contract_date >= DATEADD(year, -1, GETDATE()) GROUP BY contract_region;
SELECT COUNT(*) FROM authors JOIN articles ON authors.id = articles.author_id WHERE authors.country = 'USA';
SELECT program_name, SUM(mental_health_budget) as total_budget FROM programs_mental_health_budget GROUP BY program_name;
SELECT SUM(funding_amount) FROM startups WHERE location = 'USA' AND founder_race IN ('African American', 'Hispanic', 'Native American', 'Pacific Islander');
DELETE FROM outreach_events WHERE site_id = 987;
SELECT HeritageSites.SiteName, HeritageSites.Country, Budget.Amount FROM HeritageSites INNER JOIN Budget ON HeritageSites.SiteID = Budget.SiteID WHERE HeritageSites.Country = 'Asia' AND Budget.Year = 2022;
SELECT MAX(committed_amount) FROM climate_finance WHERE committer = 'European Union';
SELECT HomeTeam, COUNT(*) AS HomeGames FROM Game WHERE SeasonYear = 2023 AND HomeTeam IN ('Lightning', 'Panthers', 'Maple Leafs', 'Senators', 'Canadiens', 'Bruins', 'Red Wings', 'Flyers') GROUP BY HomeTeam;
SELECT MAX(altitude) FROM satellite_leo WHERE orbit_type = 'LEO';
SELECT PolicyType, AVG(ClaimAmount) OVER (PARTITION BY PolicyType) as AvgClaimAmount FROM Claims;
SELECT country, SUM(runtime) AS total_runtime, COUNT(DISTINCT director) AS unique_directors FROM media_content WHERE country = 'Canada' GROUP BY country;
SELECT domain FROM domain_vulnerabilities_by_date WHERE date_discovered >= DATE_SUB(CURRENT_DATE, INTERVAL 7 DAY) GROUP BY domain HAVING COUNT(*) = 0;
SELECT p.PlayerID, p.Age, p.Gender FROM Players p INNER JOIN MultiplayerGames mg ON p.PlayerID = mg.PlayerID GROUP BY p.PlayerID HAVING COUNT(DISTINCT p.GameGenre) > 1;
SELECT COUNT(*) FROM legal_aid WHERE is_pro_bono = TRUE;
CREATE VIEW recent_drought_impacts AS SELECT * FROM drought_impact_assessments ORDER BY start_date DESC LIMIT 3;
SELECT s.name, i.name, i.quantity FROM ingredients i INNER JOIN suppliers s ON i.supplier_id = s.id WHERE i.is_organic = TRUE GROUP BY s.name, i.name HAVING COUNT(*) > 1000;
SELECT AVG(fp.followers) FROM user_profiles fp JOIN user_posts up ON fp.id = up.user_id WHERE up.hashtags LIKE '%#travel%' GROUP BY up.user_id HAVING COUNT(up.post_id) >= 3;
SELECT title, description, agency, date, LEAD(date) OVER (ORDER BY date) as next_date FROM cybersecurity_strategies WHERE agency = 'European Union';
DELETE FROM player_demographics WHERE age < 18;
SELECT source, threat_level FROM (SELECT source, threat_level, ROW_NUMBER() OVER (ORDER BY threat_level DESC) AS row_num FROM threats WHERE date >= DATE(NOW()) - INTERVAL 7 DAY) AS subquery WHERE row_num <= 5;
UPDATE Production SET OilQuantity = NULL WHERE OilQuantity < 500;
SELECT AVG(price) AS avg_price FROM garments WHERE material = 'organic cotton' AND sale_date >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);
SELECT region, year, COUNT(DISTINCT infrastructure.id) + COUNT(DISTINCT projects.id) FROM infrastructure FULL OUTER JOIN projects ON infrastructure.region = projects.region AND infrastructure.year = projects.year GROUP BY region, year;
SELECT SUM(quantity) FROM organic_cotton_supply_chain;
SELECT company, MAX(num_scooters) FROM shared_scooters GROUP BY company;
SELECT DATE_TRUNC('quarter', launch_date) as quarter, COUNT(*) as products_launched FROM Product_Launch WHERE launch_date >= '2021-01-01' AND launch_date < '2022-01-01' GROUP BY quarter ORDER BY quarter;
SELECT dept_name, worker_gender, COUNT(*) as count, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM department d JOIN worker_demographics w ON d.worker_id = w.worker_id WHERE w.worker_gender IN ('Female', 'Male')) as percentage FROM department d JOIN worker_demographics w ON d.worker_id = w.worker_id WHERE worker_gender IN ('Female', 'Male') GROUP BY dept_name, worker_gender;
SELECT COUNT(*) FROM research_vessels WHERE registry = 'Mediterranean';
SELECT SUM(number_of_stations) FROM fire_stations WHERE state IN ('Florida', 'Texas');
SELECT AVG(cnt) FROM (SELECT company_id, COUNT(*) as cnt FROM funding_rounds GROUP BY company_id) as subquery;
SELECT SUM(quantity) FROM prices WHERE event = 'Homecoming';
SELECT country, COUNT(project_id) as total_projects FROM RenewableProjects.CountryProjects GROUP BY country;
SELECT country, awareness FROM consumer_awareness ORDER BY awareness DESC LIMIT 5;
UPDATE donations d SET donation_amount = d.donation_amount * 1.10 WHERE d.non_profit_id = 3 AND d.donation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH);
SELECT state, MIN(age) FROM community_health_workers GROUP BY state;
SELECT * FROM defense_contracts WHERE year = 2019;
SELECT AVG(salary) FROM departments WHERE name IN ('mining', 'geology');
SELECT COUNT(*) FROM HeritageSites WHERE Category = 'Cultural' AND Country = 'North America';
SELECT Users.Name, AVG(Workouts.HeartRate) AS AvgWorkoutHeartRate, Users.RestingHeartRate FROM Users JOIN Workouts ON Users.ID = Workouts.UserID WHERE Workouts.Date >= DATEADD(month, -1, GETDATE()) GROUP BY Users.Name, Users.RestingHeartRate;
SELECT date, eu_ets FROM carbon_prices WHERE date >= DATEADD(month, -12, CURRENT_DATE) AND date < CURRENT_DATE ORDER BY date;
SELECT GrantYear, COUNT(*) FROM Patents WHERE Accessibility = TRUE AND TeamGender = 'Female' AND GrantYear >= (SELECT MAX(GrantYear) - 2 FROM Patents) GROUP BY GrantYear;
SELECT ROUND(100 * SUM(CASE WHEN users.country = 'United States' AND genre_id = 1 THEN 1 ELSE 0 END) / COUNT(DISTINCT users.id), 2) AS hiphop_percentage FROM users JOIN user_genres ON users.id = user_genres.user_id JOIN genres ON user_genres.genre_id = genres.id;
UPDATE environmental_impact SET co2_emissions = 1200 WHERE site_id = '008';
SELECT DISTINCT genre FROM player_games WHERE player_id IN (SELECT player_id FROM player_games GROUP BY player_id HAVING COUNT(*) > 500);
SELECT SUM(revenue) FROM impressionist_sales WHERE year_sold = 2020;
SELECT COUNT(*) FROM conferences WHERE country = 'Japan' AND conference_year = 2022 AND conference_type = 'Sustainable Tourism';
SELECT AVG(media_literacy_score) FROM user_video_views WHERE country = 'Europe' AND watch_time > 10 AND watch_time <= 10 + 30 AND watch_time >= 10 - 30;
SELECT SUM(price) FROM ConcertTickets WHERE genre = 'heavy metal';
INSERT INTO Infrastructure (id, name, location, type) SELECT 2, 'Bridge 2', 'Country D', 'Steel' FROM DesignStandard WHERE DesignStandard.standard = 'TAA';
SELECT bpwc.Contractor_Name, COUNT(*) as Total_Permits FROM Building_Permits_With_Contractors bpwc WHERE bpwc.City = 'New York' GROUP BY bpwc.Contractor_Name ORDER BY Total_Permits DESC;
SELECT COUNT(*) FROM Volunteers WHERE age IS NOT NULL;
SELECT name, SUM(VR_games_released) AS total_VR_games, MIN(VR_games_released) AS min_VR_games_per_studio FROM GameStudios GROUP BY name;
SELECT AVG(Manufacturers.Cost) FROM Manufacturers JOIN ManufacturerMaterials ON Manufacturers.ManufacturerID = ManufacturerMaterials.ManufacturerID JOIN Materials ON ManufacturerMaterials.MaterialID = Materials.MaterialID WHERE Materials.Type = 'Sustainable' AND Manufacturers.Location = 'India';
ALTER TABLE players DROP COLUMN sport;
SELECT region, RANK() OVER (ORDER BY energy_efficiency DESC) FROM energy_efficiency;
SELECT Brand, COUNT(*) FROM Skincare_Canada WHERE Label = 'Vegan' AND Country = 'Canada' GROUP BY Brand ORDER BY COUNT(*) DESC;
SELECT product_name, category, size, price, price_date, LAG(price) OVER (PARTITION BY product_name ORDER BY price_date DESC) as previous_price FROM products WHERE price > previous_price OR previous_price IS NULL;
SELECT OperatingSystems.name AS Operating_System, AVG(Vulnerabilities.severity) AS Average_Severity FROM Vulnerabilities INNER JOIN OperatingSystems ON Vulnerabilities.operating_system = OperatingSystems.name GROUP BY OperatingSystems.name;
INSERT INTO cybersecurity_strategies (strategy_name, strategy_description) VALUES ('Cybersecurity Mesh', 'Decentralized network architecture for increased security');
SELECT state, MIN(id) AS least, MAX(id) AS most FROM public_participation_events WHERE sector = 'transportation' GROUP BY state;
SELECT Name, SUM(TotalCost) as TotalCost  FROM Projects  WHERE StartDate < '2018-01-01' AND EndDate > '2016-12-31'  GROUP BY Name;
DELETE FROM gold_mines WHERE production_rate < 1000;
SELECT AVG(budget) FROM startups WHERE founder_gender = 'Female';
SELECT name FROM dapps WHERE network = 'Polygon' AND users > 1000;
SELECT COUNT(*) FROM suppliers WHERE sustainable = true AND country LIKE 'Africa%';
DELETE FROM Employees WHERE HireDate < '2022-01-01';
SELECT release_date FROM songs WHERE genre = 'Rap' AND song_length = (SELECT MIN(song_length) FROM songs WHERE genre = 'Rap');
SELECT * FROM articles WHERE category LIKE '%investigation%';
SELECT StrainName FROM StrainTesting WHERE THCContent > (SELECT MaximumTHCContent FROM StrainRegulations WHERE StrainName = StrainTesting.StrainName);
SELECT SUM(wastes.amount) FROM wastes JOIN plants ON wastes.plant_id = plants.id WHERE plants.name = 'Acme Chemicals' AND plants.city = 'San Francisco';
SELECT country FROM consumer_awareness WHERE awareness >= 0.8;
SELECT AVG(budget) FROM shows WHERE genre = 'Drama';
SELECT cultural_competency_score, COUNT(provider_id) as num_providers FROM healthcare_providers GROUP BY cultural_competency_score;
SELECT ms.species_name FROM marine_species ms JOIN marine_species shark ON ms.region = shark.region WHERE shark.species_name = 'shark';
SELECT O.org_name, COUNT(DISTINCT V.vol_id) as total_volunteers FROM Organizations O INNER JOIN Volunteers V ON O.org_id = V.org_id WHERE V.hours_contributed > 50 GROUP BY O.org_name;
SELECT incident_type, COUNT(*) as total_incidents, region FROM security_incidents WHERE incident_time >= NOW() - INTERVAL '90 days' GROUP BY incident_type, region ORDER BY total_incidents DESC LIMIT 4;
SELECT MAX(funding.amount) FROM funding JOIN founders ON funding.company_id = founders.company_id WHERE founders.gender = 'female' AND founders.founding_year = 2016;
SELECT state, SUM(community_service_hours)  FROM offenders  WHERE state IN ('Washington', 'California') GROUP BY state
SELECT AVG(mental_health_score) FROM students WHERE district = 'Lakeside';
SELECT COUNT(*) FROM climate_mitigation_projects WHERE location IN ('Latin America', 'Caribbean');
SELECT * FROM travel_advisories WHERE country IN ('Asia') AND issued_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);
SELECT model, MIN(efficiency) FROM Irrigation_Systems WHERE model = 'Smart Sprinkler' GROUP BY model HAVING COUNT(*) > 1;
SELECT name, SUM(sales) as total_sales FROM sales_representatives WHERE region = 'East' GROUP BY name ORDER BY total_sales DESC LIMIT 2;
SELECT COUNT(*) FROM DisasterEvents WHERE event_year = 2021 AND event_location LIKE 'Asia%' AND event_organizer LIKE 'Non-Profit%';
CREATE VIEW low_waste_countries AS SELECT country, generation_metric FROM waste_generation_metrics WHERE generation_metric < 500;
SELECT DATEPART(dw, vt.tour_date) AS day_of_week, COUNT(uti.user_id) AS num_interactions FROM users u INNER JOIN user_tour_interactions uti ON u.user_id = uti.user_id INNER JOIN virtual_tours vt ON uti.tour_id = vt.tour_id WHERE u.user_country = 'Argentina' AND YEAR(vt.tour_date) = 2021 GROUP BY day_of_week;
SELECT species, SUM(qty) FROM fish_harvest WHERE quarter IN (1, 2, 3) AND region = 'Atlantic' GROUP BY species;
SELECT Gender, AVG(Salary) FROM EmployeeData WHERE Gender IN ('Male', 'Female') GROUP BY Gender;
SELECT product, MAX(revenue) as max_revenue FROM categories WHERE state = 'Oregon' AND year = 2021 GROUP BY product;
SELECT language, MIN(engagement) FROM language_projects GROUP BY language;
SELECT GameID, MAX(COUNT(*)) FROM PlayerSession GROUP BY GameID HAVING COUNT(DISTINCT StartTime) > 1;
SELECT e.exhibition_name, v.country FROM DigitalExhibitions e, (SELECT DISTINCT exhibition_id, country FROM DigitalVisitors) v WHERE e.exhibition_id = v.exhibition_id;
SELECT safety_label, COUNT(*) as num_labels FROM ai_safety_labels GROUP BY safety_label;
SELECT si.inspector_name, COUNT(id.inspection_id) as num_inspections, AVG(id.safety_rating) as avg_safety_rating, SUM(id.waste_amount) as total_waste FROM Safety_Inspectors si JOIN Inspection_Data id ON si.inspector_id = id.inspection_id GROUP BY si.inspector_name;
SELECT launch_agency, COUNT(satellite_name) AS launches FROM satellite_launches WHERE launch_agency IN ('CNSA', 'PLA Strategic Support Force') GROUP BY launch_agency;
SELECT COUNT(*) as num_users FROM memberships WHERE member_type LIKE 'E%' OR member_type LIKE 'P%';
SELECT SUM(imports.weight) FROM imports WHERE imports.supplier_country = 'Japan' AND imports.store_location = 'New York';
SELECT AVG(song_length) FROM genres WHERE genre = 'pop';
SELECT category, MIN(date) FROM Cybersecurity WHERE title NOT LIKE '%Vulnerability%' AND date >= '2010-01-01' GROUP BY category;
SELECT tv_shows.title, tv_shows.production_country, tv_shows.premiere_date, tv_shows.production_budget FROM tv_shows INNER JOIN producers ON (tv_shows.production_country = 'Mexico' OR producers.nationality = 'Mexico');
SELECT AVG(mass) FROM spacecrafts WHERE manufacturer = 'SpaceCorp' AND manufacture_date BETWEEN '2010-01-01' AND '2015-12-31';
SELECT DISTINCT location FROM exploration_projects WHERE region = 'Pacific';
SELECT location, AVG(quantity) as avg_quantity FROM neodymium_production JOIN mining_companies ON neodymium_production.company_name = mining_companies.company_name WHERE year = 2020 AND location LIKE 'Asia%' GROUP BY location;
SELECT host_star, AVG(distance_from_sun) OVER (PARTITION BY host_star) FROM exoplanets;
INSERT INTO members (member_id, name, age, gender) VALUES (5, 'Lucas Almeida', 31, 'Male');
SELECT AVG(budget) FROM tv_show_budgets WHERE genre = 'Comedy';
SELECT DISTINCT Mission, Spacecraft FROM ExoplanetMissions WHERE Discoveries > 0;
SELECT product_name, ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) as rank FROM purchases WHERE customer_age BETWEEN 25 AND 34 AND purchase_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY product_name HAVING rank <= 3;
SELECT certification_level, carbon_offset_tons FROM green_buildings WHERE state = 'California';
SELECT * FROM ai_algorithms ORDER BY explainability_score DESC LIMIT 3;
SELECT SUM(posts.views) FROM posts INNER JOIN users ON posts.user_id = users.id WHERE users.country = 'Brazil' AND posts.timestamp >= DATE_SUB(NOW(), INTERVAL 1 MONTH);
SELECT SUM(total_yield) FROM farms WHERE acres < 50;
DELETE FROM users WHERE ad_interactions = 0;
SELECT sustainable_category, MAX(biomass) FROM fish_data WHERE ocean = 'Pacific' AND sustainable_category IS NOT NULL;
SELECT cu.country, COUNT(DISTINCT st.user_id) as unique_users FROM countries cu JOIN users u ON cu.country = u.user_country JOIN streams st ON u.user_id = st.user_id GROUP BY cu.country;
SELECT port.port_name, SUM(handling.cargo_weight) FROM port INNER JOIN handling ON port.port_id = handling.port_id WHERE handling_date BETWEEN '2022-06-01' AND '2022-06-30' GROUP BY port.port_name;
DELETE FROM regulatory_compliance WHERE compliance_id = 22222;
INSERT INTO cargo_operations (id, vessel_id, port_id, operation_type, amount, timestamp) VALUES (1, 1, 2, 'Loading', 10000, '2022-01-01 10:00:00');
SELECT AVG(Revenue) FROM GameDesignData WHERE Multiplayer = TRUE;
SELECT Element, Quantity FROM RareEarthElements_Production WHERE Year = 2020;
SELECT actor, COUNT(*) as num_movies FROM Movies WHERE country = 'USA' GROUP BY actor ORDER BY num_movies DESC LIMIT 5;
SELECT destination, (visitors - (SELECT visitors FROM tourism_stats t2 WHERE t2.destination = t1.destination AND t2.year = 2019)) AS diff FROM tourism_stats t1 WHERE year = 2020 ORDER BY diff DESC LIMIT 1;
SELECT location, COUNT(*) FROM news_stories GROUP BY location;
SELECT MAX(investment) FROM network_investments;
SELECT COUNT(*) FROM Artists WHERE Gender = 'Female' AND Nationality = 'Indian';
SELECT SUM(capacity_mw) FROM wind_projects_3 WHERE country IN ('Germany', 'France', 'Spain');
SELECT MenuID, COUNT(*) FROM Orders WHERE OrderDate >= '2022-01-01' AND OrderDate < '2022-02-01' GROUP BY MenuID;
SELECT SUM(budget) FROM defense_diplomacy WHERE region = 'Europe' AND year IN (2017, 2018);
SELECT country, COUNT(event) as total_events FROM military_innovation WHERE (country = 'USA' OR country = 'Russia' OR country = 'China') AND (year BETWEEN 2016 AND 2018) GROUP BY country;
SELECT SUM(investment) FROM hydroelectric_projects JOIN southeast_asia ON hydroelectric_projects.location = southeast_asia.id WHERE year = 2019;
SELECT model_name, LAG(fairness_score) OVER (PARTITION BY model_name ORDER BY observation_date) lag_score, fairness_score, fairness_score - LAG(fairness_score) OVER (PARTITION BY model_name ORDER BY observation_date) change FROM ModelFairness;
SELECT COUNT(DISTINCT species) num_species FROM arctic_mammals;
SELECT Region, MAX(MilitaryPersonnel) AS MaxMilitaryPersonnel FROM Country GROUP BY Region;
SELECT country, COUNT(*) as total_bases FROM military_bases GROUP BY country;
SELECT COUNT(*) FROM military_vehicles WHERE storage_location = 'Texas' AND current_status = 'in storage';
SELECT COUNT(*) FROM union_members WHERE industry = 'healthcare';
SELECT SUM(investment) FROM energy_investments INNER JOIN customer_data ON energy_investments.customer_id = customer_data.customer_id WHERE investment_type = 'healthcare' AND customer_data.region = 'west';
SELECT participant_name FROM OpenDataInitiatives WHERE country = 'Brazil' AND YEAR(participation_date) = 2019;
UPDATE sustainable_vendors SET country = 'USA' WHERE name = 'Green Waves';
SELECT COUNT(*) FROM team_membership WHERE team = 'Accessibility' AND join_date <= '2022-07-01';
SELECT total_cost FROM infrastructure_projects WHERE project_name = 'Coastal Protection';
SELECT G.Gender, AVG(E.Salary) AS AvgSalary FROM Employees E INNER JOIN Genders G ON E.EmployeeID = G.EmployeeID WHERE E.Department = 'IT' AND E.Department IN (SELECT Department FROM Departments WHERE DepartmentHead = 'John Doe') GROUP BY G.Gender;
SELECT * FROM regulatory_frameworks WHERE implementation_date > (SELECT implementation_date FROM regulatory_frameworks WHERE id = 5);
SELECT museum_name, art_category, SUM(quantity) FROM MuseumArt GROUP BY museum_name, art_category;
SELECT enterprise_id, sector, investment_received FROM social_enterprises WHERE sector = 'renewable energy' AND investment_received > 100000;
SELECT contract_id, contract_value FROM contracts ORDER BY contract_value DESC;
SELECT campaign_name, AVG(donation_amount) FROM donations d JOIN campaigns c ON d.donation_date BETWEEN c.campaign_start_date AND c.campaign_end_date GROUP BY campaign_name;
SELECT country, AVG(quantity) as avg_launches_per_year FROM spacecraft_launches GROUP BY country;
SELECT HS.SiteName, COUNT(E.EngagementID) AS TotalEngagements FROM HeritageSites HS JOIN Engagements E ON HS.SiteID = E.SiteID GROUP BY HS.SiteName;
SELECT SUM(num_workers) FROM rural_health_facilities WHERE facility_type IN ('clinic', 'hospital');
SELECT technology_name, location, year FROM MilitaryTechnology WHERE year >= 2015 AND location LIKE '%Asia%';
SELECT region, SUM(population) AS total_population FROM indigenous_communities WHERE population >= 500 GROUP BY region;
SELECT WellID, ProductionDate, ProductionRate, ROW_NUMBER() OVER (PARTITION BY WellID ORDER BY ProductionDate DESC) AS RowNumber FROM Production WHERE ProductionDate >= DATEADD(month, -1, GETDATE());
SELECT DISTINCT certifications FROM PRODUCT;
SELECT country, AVG(duration) as average_duration FROM country_incident_duration WHERE incident_time >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 3 MONTH) GROUP BY country ORDER BY average_duration DESC LIMIT 3;
SELECT (SUM(area) / (SELECT SUM(area) FROM glaciers) * 100) AS percentage FROM glaciers;
SELECT name, LAG(cost, 1) OVER (ORDER BY start_date) as PreviousCost, LEAD(cost, 1) OVER (ORDER BY start_date) as NextCost FROM CommunityInitiatives WHERE region = 'Rural Alabama' ORDER BY start_date;
SELECT SUM(revenue) FROM fares WHERE route = (SELECT line FROM routes WHERE start_date <= '2010-01-01' AND line = 'Blue' LIMIT 1);
SELECT AVG(age) FROM tourism_data WHERE destination = 'Netherlands' AND YEAR(arrival_date) = 2022;
SELECT * FROM biosensors WHERE title LIKE '%optical detection%' OR abstract LIKE '%optical detection%';
UPDATE Volunteers SET hours_contributed = 25 WHERE vol_id = 123;
UPDATE Volunteers SET phone_number = '555-987-6544' WHERE id = 2;
SELECT MAX(visitor_id) FROM MonthlyVisitors WHERE country IN ('South America') AND visit_month BETWEEN '2022-01-01' AND '2022-12-31';
SELECT initiatives FROM CircularEconomy WHERE year = 2018 AND sector = 'commercial';
UPDATE ocean_floor_mapping SET depth = 10900 WHERE location = 'Tonga Trench';
SELECT volunteer_type, AVG(volunteer_count) as avg_volunteers_per_project FROM (SELECT project_id, volunteer_type, COUNT(volunteer_id) as volunteer_count FROM volunteers v JOIN projects p ON v.project_id = p.project_id WHERE volunteer_date BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY project_id, volunteer_type) AS subquery GROUP BY volunteer_type;
SELECT COUNT(*) FROM marine_species WHERE marine_species.location = 'Southern Ocean';
SELECT country, COUNT(*) AS investment_count FROM impact_investments GROUP BY country ORDER BY investment_count DESC LIMIT 3;
SELECT CommunityHealthWorker.Name, CulturalCompetencyTraining.TrainingName, CulturalCompetencyTraining.TrainingDate FROM CommunityHealthWorker FULL OUTER JOIN CulturalCompetencyTraining ON CommunityHealthWorker.WorkerID = CulturalCompetencyTraining.MHW_ID;
SELECT EXTRACT(MONTH FROM deployment_date) AS month, COUNT(*) FROM smart_contracts GROUP BY month ORDER BY month;
SELECT SUM(quantity_sold) FROM menu WHERE item_name = 'Veggie Delight' AND sale_date BETWEEN '2022-01-01' AND '2022-01-31';
SELECT COUNT(*) FROM volunteers WHERE region_id = 1 AND activity_id = 1;
SELECT COUNT(*) FROM vessels WHERE region = 'Atlantic Ocean' AND year = 2019 AND registered = TRUE;
SELECT Mission, Duration, Launch_Date FROM (SELECT Mission, Duration, Launch_Date, ROW_NUMBER() OVER (PARTITION BY Mission ORDER BY Duration) as RowNum, RANK() OVER (ORDER BY Duration) as Ranking FROM Space_Missions) as SubQuery WHERE SubQuery.Ranking IN (1, 2);
SELECT B.Brand_Name, SUM(MU.Quantity) AS Total_Quantity_2021 FROM Brands B
SELECT name FROM campaigns WHERE state = 'New York' AND start_date > '2018-12-31';
SELECT MAX(capacity) FROM geothermal_plants WHERE country = 'New Zealand';
SELECT location, COUNT(*) as num_campaigns, SUM(budget) as total_budget FROM campaigns GROUP BY location;
SELECT MAX(delivery_time) FROM orders WHERE country = 'Australia';
SELECT forests.name FROM forests INNER JOIN tallest_trees ON forests.id = tallest_trees.forest_id WHERE forests.hectares > 200000;
SELECT COUNT(*) FROM healthcare_access_points WHERE area_type = 'rural';
SELECT * FROM military_sales WHERE buyer = 'Country B' AND quantity > 50 ORDER BY equipment_type ASC;
SELECT growth_season, COUNT(*) FROM crops GROUP BY growth_season;
SELECT SUM(Inventory.inventory_cost) FROM Inventory INNER JOIN Menu ON Inventory.menu_id = Menu.menu_id WHERE Menu.is_vegetarian = FALSE AND MONTH(Inventory.inventory_date) = 1 AND YEAR(Inventory.inventory_date) = 2022;
SELECT SUM(revenue) FROM suburbs_revenue;
SELECT COUNT(*) FROM Products WHERE organic = true AND locally_sourced = false;
DELETE FROM ships WHERE decommission_year < 2010;
SELECT age, gender FROM Action_Games WHERE player_id IN (SELECT player_id FROM Puzzle_Games) AND age > 25;
SELECT SUM(cost) FROM renewable_energy WHERE project_name LIKE '%Wind%';
SELECT model, year, COUNT(*) as vehicles_due_for_maintenance FROM vehicle WHERE DATEDIFF(CURDATE(), last_maintenance) > 90 GROUP BY model, year;
DELETE FROM material WHERE material_type = 'Synthetic';
SELECT AVG(age) FROM readers WHERE preference = 'sports';
SELECT MIN(BillingAmount) FROM Cases INNER JOIN Attorneys ON Cases.AttorneyID = Attorneys.AttorneyID WHERE Specialization = 'Civil Law';
SELECT MONTH(date) AS month, species, MIN(temperature) AS min_temp FROM arctic_weather WHERE YEAR(date) = 2020 GROUP BY month, species;
SELECT MIN(Age) FROM Patients WHERE Disease = 'Dengue' AND State = 'California';
SELECT AVG(gas_price) FROM fantom_gas_prices WHERE date >= CURDATE() - INTERVAL 7 DAY;
SELECT p.name, SUM(v.number_of_volunteers) as total_volunteers FROM projects p INNER JOIN volunteers v ON p.id = v.project_id WHERE p.country = 'Colombia' GROUP BY p.name;
SELECT COUNT(*) as max_endangered_languages FROM (SELECT * FROM EndangeredLanguages WHERE country_id = Countries.id GROUP BY country_id ORDER BY COUNT(*) DESC LIMIT 1) el;
SELECT G.GarmentName, M.ManufacturerName FROM Garments G JOIN DiscontinuedGarments DG ON G.GarmentID = DG.GarmentID JOIN Manufacturers M ON DG.ManufacturerID = M.ManufacturerID WHERE M.ManufacturerName != 'GreenThreads';
SELECT AVG(home_team_assists + away_team_assists) as avg_assists FROM games WHERE home_team_id = (SELECT team_id FROM teams WHERE team_name = 'Clippers') OR away_team_id = (SELECT team_id FROM teams WHERE team_name = 'Clippers');
SELECT SUM(funds) FROM advocacy WHERE category IN ('healthcare', 'education');
SELECT SUM(area) FROM mangrove_forests WHERE country = 'Indonesia';
SELECT teams.team_name, COUNT(games.game_id) as total_games FROM teams INNER JOIN games ON teams.team_id IN (games.home_team, games.away_team) GROUP BY teams.team_name;
SELECT COUNT(DISTINCT animal_species) FROM animal_population;
SELECT pr.range, COUNT(p.product_id) FROM products p JOIN price_ranges pr ON p.price BETWEEN pr.price - 5 AND pr.price + 5 GROUP BY pr.range;
SELECT AVG(transaction_amount) FROM (SELECT transaction_amount FROM transactions INNER JOIN customers ON transactions.customer_id = customers.customer_id WHERE transactions.transaction_date BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY customer_id ORDER BY SUM(transaction_amount) DESC LIMIT 10) AS top_customers;
SELECT company_id, COUNT(DISTINCT round_number) FROM investment GROUP BY company_id HAVING industry = 'Education';
SELECT name, budget FROM ethical_ai_projects WHERE location = 'Africa';
SELECT p.product_category, l.lifecycle_stage, r.revenue_generated FROM products p JOIN revenues r ON p.product_id = r.product_id JOIN lifecycle_stages l ON p.product_id = l.product_id WHERE p.is_circular_supply = TRUE;
SELECT SUM(*) FROM Bridges WHERE state = 'New York' AND maintenance_cost > 100000;
SELECT c.site_id, c.amount as coal_depletion, g.amount as gold_depletion FROM coal_depletion c INNER JOIN gold_depletion g ON c.site_id = g.site_id WHERE c.amount > g.amount;
SELECT AVG(price) FROM SustainableProducts WHERE country = 'Netherlands';
SELECT MAX(arrival_time) FROM trips WHERE route_id = 3;
SELECT e.role, COUNT(DISTINCT e.id) as role_count FROM employees e INNER JOIN mining_operations m ON e.operation_id = m.id INNER JOIN (SELECT * FROM indonesian_provinces WHERE name IN ('East Kalimantan', 'Papua') UNION ALL SELECT * FROM kazakhstani_regions WHERE name IN ('Karaganda', 'Ekibastuz')) c ON m.country_id = c.id GROUP BY e.role;
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM workplaces WHERE sector = 'retail')) AS percentage FROM workplaces WHERE sector = 'retail' AND successful_cb = TRUE;
SELECT country, MAX(capacity) as max_capacity FROM energy_storage GROUP BY country;
SELECT SUM(requests) FROM foia_requests WHERE year IN (2020, 2021)
SELECT region, COUNT(*) FROM mental_health_parity WHERE incident_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY region;
SELECT MIN(price) FROM MenuItems WHERE is_vegan = false AND category = 'Appetizer';
SELECT AVG(depth) FROM ocean_floor WHERE ocean = 'Pacific';
SELECT ProgramCategory, SUM(Budget) as TotalBudget FROM Programs WHERE YEAR(ProgramStartDate) = 2022 GROUP BY ProgramCategory;
SELECT Program, SUM(DonationAmount) as TotalDonationAmount, AVG(DonationAmount) as AverageDonationAmountPerDonor FROM Donors WHERE DonationDate BETWEEN '2019-07-01' AND '2019-09-30' GROUP BY Program;
CREATE TABLE Eco_Labels (label_id SERIAL PRIMARY KEY, label_name VARCHAR(50), description TEXT, is_active BOOLEAN DEFAULT TRUE);
SELECT AVG(rate) FROM CarbonSequestration WHERE name = 'Boreal Forest' AND region = 'Canada';
SELECT SUM(quantity_sold) FROM Dishes WHERE city = 'New York' AND sale_date >= '2022-07-01' AND sale_date < '2022-08-01';
UPDATE animals SET population = 2000 WHERE species = 'Penguin';
SELECT name FROM (SELECT name, ROW_NUMBER() OVER (ORDER BY matches_won DESC) as rank FROM tennis_players WHERE match_date >= DATEADD(month, -6, GETDATE())) subquery WHERE rank = 1;
SELECT MIN(carbon_offset_amount) FROM Carbon_Offset_Programs WHERE sector = 'Transportation';
SELECT u.user_id, u.posts_count, u.followers_count  FROM users u  JOIN posts p ON u.user_id = p.user_id  WHERE u.followers_count > 1000 AND u.posts_count >= 5 AND p.post_date >= NOW() - INTERVAL '1 month'  GROUP BY u.user_id, u.posts_count, u.followers_count  ORDER BY u.posts_count DESC  LIMIT 3;
INSERT INTO community_policing(id, location, month_year) VALUES (1, 'Bronx', '2020-11-01'), (2, 'Bronx', '2020-11-02'), (3, 'Bronx', '2020-11-03');
SELECT age_group, AVG(score) FROM media_literacy_scores GROUP BY age_group;
SELECT * FROM biosensor_tech_development WHERE tech_type = 'BioSensor-B';
SELECT AVG(depth) FROM Buoys WHERE location = 'Sargasso Sea';
SELECT ota_name, revenue FROM otas WHERE region = 'Asia' ORDER BY revenue DESC;
SELECT AVG(budget) FROM climate_adaptation_projects WHERE location IN ('Maldives', 'Fiji', 'Bahamas');
INSERT INTO train_routes (route_id, start_station, end_station, distance, fare) VALUES (1, (SELECT station_id FROM stations WHERE station_name = 'San Francisco'), (SELECT station_id FROM stations WHERE station_name = 'Los Angeles'), 600, 100);
SELECT AVG(Weight) FROM Measurements INNER JOIN Members ON Measurements.MemberId = Members.Id WHERE DATE_FORMAT(Date, '%Y-%m') = '2022-02' AND Gender = 'Female';
SELECT AVG(amount) FROM economic_diversification.investments;
SELECT AVG(success) as avg_success_rate FROM (SELECT approval_year, success, COUNT(*) as trials_count FROM clinical_trials WHERE approval_year BETWEEN 2017 AND 2020 GROUP BY approval_year, success) subquery WHERE trials_count > 1;
SELECT name, total_funding FROM (SELECT name, total_funding, ROW_NUMBER() OVER (ORDER BY total_funding DESC) as rank FROM agroecology_projects) as ranked_projects WHERE rank = 1 OR rank = (SELECT COUNT(*) FROM agroecology_projects) ORDER BY total_funding;
UPDATE Sales SET quantity = 5 WHERE product = 'Sour Diesel' AND sold_date = '2021-06-15';
SELECT COUNT(marine_species.id) FROM marine_species INNER JOIN conservation_status ON marine_species.id = conservation_status.species_id WHERE marine_species.region = 'Mediterranean Sea' AND conservation_status.status = 'Critically Endangered';
SELECT StrainType, SUM(QuantitySold) AS TotalSold FROM Sales WHERE SaleDate >= DATEADD(MONTH, -1, GETDATE()) GROUP BY StrainType;
SELECT teacher_id FROM teacher_trainings WHERE teacher_id NOT IN (SELECT teacher_id FROM teacher_trainings WHERE training_date >= DATE(NOW()) - INTERVAL 1 YEAR);
DELETE FROM mining_sites WHERE state = 'California';
SELECT COUNT(*) FROM media_outlets WHERE country = 'South America' AND disinformation_score > 5;
SELECT SUM(g.amount_funded) + SUM(ngo.amount_funded) FROM government_funding g JOIN ngo_funding ngo ON g.project_id = ngo.project_id WHERE g.sector = 'climate adaptation' AND ngo.sector = 'climate adaptation';
SELECT SUM(income) FROM shariah_compliant_finance_incomes WHERE country IN ('Saudi Arabia', 'UAE', 'Qatar');
DELETE e FROM employees e WHERE e.hire_date < '2021-01-01' OR NOT EXISTS (SELECT 1 FROM diversity_training dt WHERE dt.employee_id = e.id);
SELECT MAX(improvement) FROM energy_efficiency_improvement WHERE province = 'British Columbia' AND year = 2022;
SELECT therapy_type, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM therapy_outcome WHERE therapy_outcome.treatment_center = 'clinic_j' AND outcome_status = 'Success') FROM therapy_outcome WHERE (therapy_type = 'Group Therapy' OR therapy_type = 'Family Therapy') AND treatment_center = 'clinic_j';
SELECT MAX(cargo_weight_tonnes) FROM vessel_performance WHERE vessel_name = 'VesselE';
SELECT material, SUM(quantity) as total_waste FROM waste_generation WHERE city = 'New York City' AND YEAR(event_date) = 2021 GROUP BY material;
SELECT SUM(incidents) FROM ai_safety_incidents WHERE region = 'europe' AND year = 2021;
SELECT SUM(frequency) FROM (SELECT COUNT(*) AS frequency FROM CyberThreats WHERE country = 'Mexico' AND threat_date >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH) GROUP BY threat_type) AS subquery;
SELECT station FROM passenger_counts WHERE passenger_count > 1000;
SELECT name, allergens FROM Menu WHERE allergens IN ('Milk', 'Eggs', 'Wheat');
SELECT name FROM athlete_demographics WHERE age > 30;
SELECT country, COUNT(*) FROM financial_wellbeing_programs GROUP BY country;
SELECT region, hotel_adoptions FROM ota_adoptions WHERE quarter = 'Q2 2022' AND region = 'APAC';
SELECT ships.name, SUM(cargo_weights.weight) FROM ships INNER JOIN visits ON ships.id = visits.ship_id INNER JOIN cargo_weights ON visits.id = cargo_weights.visit_id GROUP BY ships.name;
SELECT c.State, SUM(t.TrainingHours) FROM CulturalCompetencyTraining t INNER JOIN CommunityHealthWorkers c ON t.WorkerID = c.WorkerID GROUP BY c.State;
SELECT case_type, SUM(billing_amount) FROM CaseTypes WHERE case_type = 'family' GROUP BY case_type;
SELECT * FROM maritime_safety_incidents WHERE type = 'incident' AND vessel_type = 'fishing' AND location LIKE '%Indian Ocean%';
SELECT team FROM team_achievements WHERE title = 'Stanley Cup' AND year = 2012;
SELECT SUM(capacity) as total_capacity FROM renewable_energy WHERE type = 'wind turbine' AND location = 'Texas';
SELECT donor_zip, AVG(donation_amount) as avg_donation FROM donations WHERE donation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY donor_zip ORDER BY avg_donation DESC LIMIT 10;
UPDATE GreenBuildings SET size = 2000 WHERE building_name = 'EcoHouse';
UPDATE vessels v1 SET status = 'inactive' WHERE NOT EXISTS (SELECT 1 FROM vessel_activity va1 WHERE va1.vessel_id = v1.id AND va1.activity_date > DATE(NOW()) - INTERVAL 1 YEAR);
SELECT AVG(funding_amount) FROM startups WHERE location = 'Asia';
SELECT species, region, SUM(count) as total_count FROM boreal_wildlife WHERE year BETWEEN 2015 AND 2019 AND region = 'Boreal' GROUP BY species, region;
SELECT factories.name, factories.location FROM factories LEFT JOIN production ON factories.id = production.factory_id WHERE production.year IS NULL OR production.year < YEAR(CURRENT_DATE()) - 2;
SELECT COUNT(*) FROM marine_farms WHERE location = 'Pacific Ocean';
SELECT AVG(data_usage) FROM mobile_customers WHERE state = 'New York' AND plan_type = 'postpaid';
SELECT country, SUM(capacity) FROM RenewableEnergyProjects GROUP BY country;
SELECT username, SUM(TIMESTAMPDIFF(MINUTE, login_time, logout_time)) FROM AuthenticationLogs WHERE username = 'jane.doe' AND authentication_status = 'Success' GROUP BY username;
SELECT DATE_FORMAT(e.call_time, '%Y-%m') AS month, COUNT(e.eid) FROM emergencies e WHERE e.call_time >= DATE_SUB(CURRENT_TIMESTAMP(), INTERVAL 1 YEAR) GROUP BY month;
SELECT satellite_type, MIN(launch_date) OVER (PARTITION BY satellite_type) as earliest_launch_date FROM satellite_deployment.launches;
SELECT topic, AVG(COUNT(*)) as avg_articles_per_day FROM News GROUP BY topic;
SELECT MAX(price) FROM dishes WHERE dietary_restrictions = 'vegan' AND restaurant_id IN (SELECT id FROM restaurants WHERE city = 'New York');
SELECT co.case_number, co.outcome, lp.precedent_id FROM criminal.case_outcomes co INNER JOIN criminal.legal_precedents lp ON co.case_number = lp.case_number ORDER BY co.case_number;
SELECT p.port_name, SUM(c.weight) as total_weight FROM ports p JOIN cargo c ON p.port_id = c.port_id WHERE handling_date >= '2021-01-01' AND handling_date < '2022-01-01' GROUP BY p.port_name ORDER BY total_weight DESC LIMIT 5;
SELECT c.name, SUM(du.data_amount / 1024 / 1024 / 1024) as total_gb_used FROM customers c JOIN data_usage du ON c.customer_id = du.customer_id WHERE c.state = 'California' GROUP BY c.name;
SELECT dc.drug_category FROM drug_categories dc LEFT JOIN drug_sales ds ON dc.drug_category = ds.drug_category WHERE ds.sales IS NULL;
UPDATE satellite_images SET capture_date = '2021-12-30' WHERE id = 3;
SELECT institution_id, COUNT(project_id) as total_projects FROM projects WHERE completion_date > '2020-01-01' AND project_type = 'open pedagogy' GROUP BY institution_id;
SELECT price_date, oil_price, LAG(oil_price, 1) OVER (ORDER BY price_date) as prev_oil_price, oil_price - LAG(oil_price, 1) OVER (ORDER BY price_date) as daily_change FROM oil_prices;
SELECT SUM(revenue) FROM bookings WHERE hotel_type = 'Luxury' AND booking_date >= DATE_SUB(NOW(), INTERVAL 3 MONTH) AND agency IS NOT NULL;
SELECT AVG(rating) FROM hotel_ratings WHERE category = 'budget';
UPDATE hotels SET sustainability_rating = 5 WHERE hotel_id = 1;
SELECT AVG(ProductionBudget) AS Avg_Budget, AVG(IMDBRating) AS Avg_Rating FROM Movies WHERE Genre = 'Action' AND ReleaseYear BETWEEN 2010 AND 2015;
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cosmetics.lipstick_spf_data WHERE country = 'India') as percentage FROM cosmetics.lipstick_spf_data WHERE country = 'India' AND has_spf = true AND spf_level >= 15;
SELECT SUM(budget) FROM cities WHERE city_name IN ('Los Angeles') AND service IN ('education', 'healthcare');
SELECT model_id, MAX(explanation_score) as max_explanation_score, COUNT(*) as count FROM explainability_audits GROUP BY model_id;
SELECT Department, Gender, COUNT(*) * 100.0 / SUM(COUNT(*)) OVER (PARTITION BY Department) AS Percentage FROM Employees GROUP BY Department, Gender;
SELECT ProjectType, Month, AVG(EnergyEfficiencyScore) OVER (PARTITION BY ProjectType, Month) FROM ProjectTypeEfficiencyData;
SELECT pc.ProductCategoryName, COUNT(pw.WorkerID) AS WorkerCount FROM ProductionWorkers pw JOIN ProductCategories pc ON pw.ProductCategoryID = pc.ProductCategoryID GROUP BY pc.ProductCategoryName;
SELECT COUNT(*) FROM Players WHERE Region = 'Asia-Pacific';
SELECT GameName FROM Games WHERE MagazineReviews > 10;
SELECT DISTINCT artist_id FROM funding WHERE source IN ('Private Donor', 'Corporation');
SELECT job_title, COUNT(*) as total_employees FROM mining_operations GROUP BY job_title;
SELECT SUM(num_stations) FROM charging_stations WHERE location = 'Asia';
INSERT INTO player_demographics (player_id, age, gender) VALUES (5, 30, 'Transgender Male');
SELECT sport, COUNT(athlete_id) FROM injuries WHERE injury_date >= CURDATE() - INTERVAL 2 MONTH GROUP BY sport;
SELECT MAX(AvgSpeed) FROM Vessels WHERE VesselType = 'Container Ship';
SELECT MAX(temperature) FROM PlanetaryTemperature WHERE planet = 'Venus';
SELECT COUNT(DISTINCT patient_id) as num_patients FROM provider_visits INNER JOIN providers ON provider_visits.provider_id = providers.provider_id WHERE providers.area_id = (SELECT area_id FROM areas WHERE area_name = 'rural area X') AND YEAR(visit_date) = 2021;
SELECT SUM(quantity) as total_quantity FROM extraction_data WHERE year = 2018 AND element = 'Lanthanum' AND company_name IN (SELECT company_name FROM mining_locations WHERE region = 'North America');
SELECT language, COUNT(*) as total_articles FROM language_counts GROUP BY language;
SELECT SUM(cost) FROM accommodations WHERE accommodation_date BETWEEN '2020-07-01' AND '2020-09-30' AND EXISTS (SELECT * FROM students WHERE students.id = accommodations.student_id AND students.disability_type = 'Hearing Impairment');
SELECT COUNT(*) as total_high_severity_vulnerabilities FROM Vulnerabilities WHERE severity = 'High';
INSERT INTO space_debris_data (name, removal_date) VALUES ('Debris 4', '2022-12-31');
SELECT AVG(amount) FROM climate_and_clean_air_coalition WHERE country = 'Africa' AND sector = 'Energy' AND renewable_energy_flag = TRUE;
SELECT condition, COUNT(*) FROM condition_summary INNER JOIN location ON condition_summary.patient_id = location.patient_id WHERE region = 'Pacific' GROUP BY condition;
SELECT COUNT(DISTINCT ta.threat_actor_id) as num_actors, STRING_AGG(ta.threat_actor_name, ', ') as actor_names FROM threat_actors ta INNER JOIN targeted_systems ts ON ta.threat_actor_id = ts.threat_actor_id INNER JOIN cve_scores c ON ts.system_id = c.system_id INNER JOIN scan_dates sd ON ts.system_id = sd.system_id WHERE c.score > 7 AND sd.scan_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);
INSERT INTO excavations (id, site_id, date, notes) VALUES (1, 345, '2022-06-10', 'Limited access to the site');
SELECT marine_protected_areas.location, AVG(marine_protected_areas.avg_depth) AS avg_depth, species_count.species_count FROM marine_protected_areas INNER JOIN species_count ON marine_protected_areas.area_name = species_count.area_name WHERE marine_protected_areas.location = 'Pacific Ocean' GROUP BY species_count.area_name;
SELECT city, COUNT(*) FROM virtual_tours GROUP BY city;
SELECT country, AVG(cost) as avg_cost, STDDEV(cost) as stddev_cost FROM SpacecraftManufacturing GROUP BY country;
SELECT Area, SUM(Sessions) as TotalSessions FROM CulturalCompetencyTraining WHERE Area = 'Urban' AND Quarter = 2 AND Year = 2021 GROUP BY Area;
SELECT * FROM marine_mammals;
SELECT FarmID, MIN(WaterTemp) as MinTemp FROM FarmWaterTemp GROUP BY FarmID;
SELECT MAX(comment_count) FROM posts JOIN users ON posts.user_id = users.user_id WHERE users.category = 'athlete';
SELECT teacher_id, COUNT(*) FROM teacher_pd WHERE completion_date >= DATE_SUB(CURDATE(), INTERVAL 3 YEAR) GROUP BY teacher_id;
SELECT COUNT(s.id) as num_satellites FROM SatelliteLaunches l LEFT JOIN Satellites s ON l.id = s.launch_id WHERE YEAR(launch_date) = 2022;
SELECT region, AVG(cost) as AvgCost FROM RuralInfrastructure WHERE type = 'Utility' GROUP BY region;
SELECT destination, rating FROM sustainability_ratings WHERE destination IN ('Galapagos Islands', 'Torres del Paine NP', 'Machu Picchu') ORDER BY rating DESC LIMIT 3;
SELECT ProgramID FROM DonorVolunteer GROUP BY ProgramID HAVING COUNT(DISTINCT DonorID) > 1;
SELECT name, carbon_offset FROM green_buildings WHERE region = 'Oceania';
SELECT art_form FROM UNESCO_Intangible_Heritage WHERE year = 2003;
SELECT AVG(energy_efficiency_rating) FROM Buildings WHERE city = 'Seattle';
SELECT SUM(amount) FROM network_investments WHERE investment_date BETWEEN '2020-01-01' AND '2020-03-31';
SELECT Country, COUNT(*) as Count FROM Players WHERE GamePreference = 'RPG' GROUP BY Country ORDER BY Count DESC;
SELECT COUNT(*) FROM military_bases WHERE base_category = 'intelligence' ORDER BY base_size DESC;
SELECT date, COUNT(*) as total_policies, AVG(policy_type = 'access_control'::int) as avg_access_control FROM policies WHERE region = 'Oceania' GROUP BY date ORDER BY date;
UPDATE Teacher SET Age = 45 WHERE TeacherID = 1;
SELECT SUM(amount_saved) FROM water_conservation_initiatives WHERE state = 'Florida' AND year = 2019;
SELECT * FROM deep_sea_expeditions WHERE location = 'Arctic';
SELECT SUBSTRING(location, 1, INSTR(location, '-') - 1) AS continent, COUNT(*) AS num_cities FROM smart_cities GROUP BY continent;
SELECT MIN(exit_strategy_valuation) FROM companies WHERE founder_underrepresented = true;
SELECT SUM(g.amount) FROM grants g INNER JOIN faculty f ON g.faculty_id = f.faculty_id WHERE f.department = 'Computer Science' AND f.gender = 'Female' AND g.year >= 2015;
SELECT * FROM renewable_energy_projects WHERE location IN ('Middle East', 'North Africa') AND budget > 500000;
UPDATE carbon_sequestration SET sequestration = sequestration * 1.05 WHERE country = 'Canada' AND year = 2020;
SELECT AVG(Sustainability_Score) FROM Attraction WHERE Country_ID = (SELECT Country_ID FROM Country WHERE Country_Name = 'Canada');
SELECT strategy_name, COUNT(*) FROM customers GROUP BY strategy_name;
SELECT product_id, COUNT(*) as safety_incidents FROM safety_records WHERE incident_date >= DATEADD(month, -6, GETDATE()) GROUP BY product_id;
INSERT INTO humanitarian_assistance (assistance_id, assistance_name, year, location, description) VALUES (2, 'Natural Disaster Relief in Caribbean', 2021, 'Caribbean', 'Description of the natural disaster relief operation');
SELECT MAX(Salary) FROM Employees WHERE HireYear = (SELECT MAX(HireYear) FROM Employees);
SELECT AVG(AdoptionRate) FROM AdoptionStatistics WHERE Country IN ('China', 'Japan') AND Year >= 2018;
SELECT DATE(request_date) AS request_day, AVG(TIMESTAMPDIFF(MINUTE, request_date, pickup_time)) AS avg_waiting_time FROM paratransit WHERE request_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 WEEK) GROUP BY request_day;
SELECT SUM(water_consumption) FROM Water_Consumption WHERE state = 'New York' AND sector = 'Residential';
SELECT deployment_year, COUNT(*) FROM satellite_deployment GROUP BY deployment_year;
SELECT AVG(impact_score) FROM programs WHERE country = 'Africa';
SELECT r.name, SUM(s.revenue) FROM Sales s JOIN Regions r ON s.region_id = r.id WHERE s.quarter = 2 AND s.year = 2021 GROUP BY r.name;
DELETE FROM Auto WHERE car_make = 'BMW' AND car_model = '3-Series';
SELECT region, MIN(depth) FROM marine_life_research_stations GROUP BY region;
SELECT ct.crop_type, MIN(ct.temperature) as min_temp, MIN(ch.humidity) as min_humidity FROM crop_temperature ct JOIN crop_humidity ch ON ct.timestamp = ch.timestamp WHERE ct.timestamp BETWEEN DATEADD(month, -1, CURRENT_TIMESTAMP) AND CURRENT_TIMESTAMP GROUP BY ct.crop_type;
SELECT SUM(1) FROM juvenile_courts jc INNER JOIN court_cases jcc ON jc.court_id = jcc.court_id GROUP BY jc.court_state;
INSERT INTO PublicMeetings (ID, Date, Status) VALUES (4, '2022-09-15', 'Scheduled');
SELECT COUNT(*) FROM sites WHERE country IN ('Mexico', 'Peru') AND year = 2021 AND visitors > 15000;
SELECT species, population, efforts FROM animal_population INNER JOIN habitat_preservation ON animal_population.species = habitat_preservation.species WHERE population = (SELECT MIN(population) FROM animal_population);
SELECT SUM(electric_vehicles_sold) FROM sales WHERE country IN ('India', 'South Korea', 'Japan') AND year = 2020;
CREATE TABLE VolunteerAgeGroups (AgeGroup VARCHAR(10), VolunteerCount INT); INSERT INTO VolunteerAgeGroups (AgeGroup, VolunteerCount) SELECT CASE WHEN Age < 18 THEN '0-17' WHEN Age BETWEEN 18 AND 35 THEN '18-35' WHEN Age BETWEEN 36 AND 55 THEN '36-55' ELSE '56+' END AS AgeGroup, COUNT(*) AS VolunteerCount FROM Volunteers GROUP BY AgeGroup;
DELETE FROM Players WHERE num_reviews = 0;
SELECT MAX(statement_length) FROM artist_statements;
SELECT SUM(funding) FROM funding.research_funding WHERE year = 2021;
SELECT A.name, COUNT(*) as collaborations_count FROM Artists A INNER JOIN Collaborations C ON A.id = C.artist1 OR A.id = C.artist2 GROUP BY A.name ORDER BY collaborations_count DESC;
SELECT continent, SUM(budget) as total_budget FROM Digital_Divide GROUP BY continent;
SELECT AVG(temperature_anomaly) FROM climate_data WHERE year = 2020;
SELECT MIN(Artworks.creation_date) FROM Artworks INNER JOIN Artists ON Artworks.artist_id = Artists.id WHERE Artists.nationality = 'Italy';
SELECT AVG(gadolinium_prod) FROM (SELECT * FROM gadolinium_production WHERE year IN (2020, 2021) AND producer IN ('China', 'USA') ORDER BY gadolinium_prod DESC) WHERE rownum <= 2;
SELECT MAX(daily_production) FROM (SELECT daily_production FROM mines WHERE element = 'Terbium' AND year = 2019 GROUP BY name ORDER BY SUM(daily_production) DESC LIMIT 3);
SELECT p.product_name, SUM(i.weight) FROM product p JOIN ingredient i ON p.product_id = i.product_id WHERE i.cruelty_free = true GROUP BY p.product_name;
DELETE FROM mobile_subscribers WHERE id NOT IN (SELECT subscriber_id FROM customer_complaints);
SELECT province, AVG(temperature) AS avg_temperature FROM WeatherData GROUP BY province ORDER BY avg_temperature ASC;
SELECT department_id, SUM(course_count) as total_courses FROM department_lifelong_learning GROUP BY department_id;
SELECT AVG(Age) FROM PlayerGenre WHERE Genre = 'Open World';
UPDATE rd_expenditures SET expenditure = expenditure * 1.10 WHERE drug_name = 'DrugD' AND expenditure_date BETWEEN '2021-07-01' AND '2021-09-30';
SELECT COUNT(DISTINCT location) FROM audience;
SELECT MIN(awards) FROM awards WHERE genre = 'Country' AND year >= 2015;
SELECT AVG(e.attendees) FROM events e JOIN cultural_orgs o ON e.org_id = o.id WHERE o.city = 'Paris';
SELECT chemical FROM chemical_production WHERE region = 'Europe' INTERSECT SELECT chemical FROM environmental_impact WHERE impact_score > 55;
SELECT AVG(year) FROM pollution_control_initiatives WHERE location = 'Southern Ocean';
SELECT SUM(rg.amount) FROM research_grants rg JOIN graduate_students gs ON rg.graduate_student_id = gs.id WHERE gs.department = 'Mathematics';
SELECT department, DATE_TRUNC('month', hire_date) AS hire_month, COUNT(*) AS num_hires FROM employees GROUP BY department, hire_month;
SELECT AVG(productivity) FROM labor_productivity_by_region WHERE region = 'West';
SELECT COUNT(*) FROM (SELECT * FROM Bridge WHERE state = 'California' UNION ALL SELECT * FROM Tunnel WHERE state = 'California') AS combined;
UPDATE players SET status = 'VIP' WHERE total_spent > 500 AND country = 'US' AND last_login > NOW() - INTERVAL 30 DAY;
SELECT DATE_FORMAT(HireDate, '%Y-%m') AS Month, COUNT(*) FROM Employees WHERE HireDate >= '2021-01-01' AND HireDate < '2022-01-01' GROUP BY Month;
SELECT AVG(Salary) FROM Employees WHERE Department = 'Marketing';
SELECT COUNT(*) FROM incidents WHERE region = 'region_3';
SELECT COUNT(*) FROM cargo_handling WHERE port_id IN (SELECT port_id FROM ports WHERE country = 'Nigeria');
SELECT COUNT(*) FROM smart_contracts sc JOIN languages l ON sc.language = l.name WHERE l.type = 'Systems programming';
SELECT COUNT(*) FROM immunization_clinics WHERE region = 'West';
SELECT country, gender, COUNT(*) as count FROM producers GROUP BY country, gender ORDER BY country, count DESC;
SELECT Forests.Name, TotalCarbon.TotalCarbon FROM Forests INNER JOIN TotalCarbon ON Forests.ForestID = TotalCarbon.ForestID ORDER BY TotalCarbon.TotalCarbon DESC LIMIT 1;
SELECT h1.client_id, h1.balance - LAG(h1.balance) OVER (PARTITION BY h1.client_id ORDER BY h1.month) AS balance_change FROM shariah_compliant_finance_history h1 ORDER BY balance_change DESC LIMIT 1;
SELECT COUNT(*) FROM SouthAmerica.MilitaryDrones WHERE in_operation = true;
SELECT project_id, AVG(hours) AS avg_hours FROM labor WHERE project_id = 3 GROUP BY project_id;
SELECT strategy FROM market_access WHERE product = 'ProductL' AND region = 'RegionP';
SELECT department, employee_count, ROUND(100.0 * employee_count / (SELECT SUM(employee_count) FROM departments), 2) AS percentage FROM departments;
SELECT name, native_speakers FROM languages WHERE continent = 'North America' AND native_speakers = (SELECT MAX(native_speakers) FROM languages WHERE continent = 'North America' AND native_speakers < (SELECT MAX(native_speakers) FROM languages WHERE continent = 'North America'));
SELECT city, SUM(num_vehicles) FROM public_transport_cities GROUP BY city;
SELECT ArtistID, EXTRACT(YEAR FROM CreationDate) AS Decade, COUNT(*) as ArtworkCount FROM Artwork WHERE Continent = 'Africa' GROUP BY ArtistID, Decade ORDER BY Decade, ArtworkCount DESC;
SELECT vulnerability_id, severity FROM Vulnerabilities WHERE severity = 'High' AND mitigated = FALSE AND discovered_date >= DATEADD(day, -7, GETDATE());
SELECT COUNT(*) FROM machinery WHERE machine_id NOT IN (SELECT machine_id FROM maintenance);
SELECT SUM(capacity) FROM wind_farms WHERE state = 'California';
SELECT COUNT(*) FROM songs WHERE release_year > 2010 AND genre = 'pop';
SELECT AVG(water_temp) FROM Salmon_farms WHERE country = 'Norway';
UPDATE defense_contracts SET contract_amount = contract_amount * 1.1 WHERE contracting_agency = 'DOD' AND contract_status = 'active';
SELECT AVG(CSUS.AvgSize) - AVG(CSCA.AvgSize) FROM CustomerSizesUS CSUS, CustomerSizesCA CSCA WHERE CSUS.Country = 'US' AND CSCA.Country = 'Canada';
SELECT satellite_name FROM first_satellites ORDER BY launch_date LIMIT 1;
SELECT Plant, SUM(Waste_Amount) AS Total_Waste FROM Waste GROUP BY Plant ORDER BY Total_Waste DESC;
SELECT state, AVG(daily_consumption/population) FROM WaterUsage INNER JOIN Population ON WaterUsage.date = Population.date GROUP BY state;
SELECT MAX(factories.num_employees) FROM factories WHERE factories.location = 'East';
SELECT companies.name FROM companies JOIN funding_records ON companies.id = funding_records.company_id WHERE DATEDIFF(funding_records.funding_date, companies.founding_date) > (5 * 365)
SELECT continent, AVG(life_expectancy) as avg_life_expectancy FROM countries WHERE continent = 'Africa';
SELECT habitat, AVG(population) AS avg_population FROM marine_populations GROUP BY habitat;
SELECT programs.program_name, AVG(donations.amount_donated) AS avg_donation FROM donations INNER JOIN programs ON donations.program_id = programs.program_id GROUP BY programs.program_name;
SELECT material, LAG(recycling_rate) OVER (PARTITION BY material ORDER BY measurement_date) as previous_recycling_rate, recycling_rate, measurement_date FROM recycling_rate_history WHERE city_id = 1 ORDER BY measurement_date;
CREATE VIEW contract_value_trends AS SELECT DATE_TRUNC('quarter', contract_date) as quarter, department, SUM(contract_value) as total_contract_value FROM defense_contracts GROUP BY quarter, department;
SELECT reported_region, COUNT(*) as count FROM safety_issues_by_region GROUP BY reported_region;
SELECT community_courts.year, SUM(community_courts.cases_heard) AS total_cases_heard FROM community_courts WHERE community_courts.state = 'New York';
SELECT Companies.name, SUM(Investments.investment_amount) as total_funding FROM Companies JOIN Founders ON Companies.founder_id = Founders.id JOIN Investments ON Companies.id = Investments.company_id WHERE Founders.gender = 'Female' GROUP BY Companies.name ORDER BY total_funding DESC;
DELETE FROM label_founding WHERE founding_year > 2005;
SELECT Region, SUM(Amount) FROM Expenditure WHERE Quarter = 1 AND Year = 2023 GROUP BY Region;
SELECT SUM(revenue) FROM concert_events ce JOIN artist_demographics ad ON ce.artist_id = ad.artist_id WHERE ce.attendance > 15000 AND ad.gender = 'female' AND ad.ethnicity = 'Asian' AND ce.event_date BETWEEN '2022-01-01' AND '2022-12-31';
SELECT product_id, product_name, SUM(price * gram_weight) as total_cost FROM ingredients JOIN products ON ingredients.product_id = products.product_id GROUP BY product_id, product_name ORDER BY total_cost DESC FETCH FIRST 5 ROWS ONLY;
ALTER TABLE emergency_response ADD COLUMN date DATE;
SELECT COUNT(*) FROM Events WHERE TotalAttendees > 50 AND CommunityType = 'Underrepresented';
SELECT r.line, MIN(t.start_time) AS earliest, MAX(t.start_time) AS latest FROM route r INNER JOIN trip t ON r.route_id = t.route_id GROUP BY r.line;
SELECT AVG(donation) FROM donors WHERE age BETWEEN 30 AND 40;
SELECT coverage_type, AVG(policyholder.age) as average_age, COUNT(DISTINCT policyholder.policyholder_id) as policyholder_count, policyholder.gender FROM policyholder JOIN policy ON policyholder.policy_number = policy.policy_number JOIN zip_codes ON policyholder.zip_code = zip_codes.zip_code WHERE zip_codes.median_home_value > (SELECT AVG(median_home_value) FROM zip_codes) GROUP BY coverage_type, policyholder.gender;
SELECT f.name, COUNT(t.id) FROM forests f  JOIN trees t ON f.id = t.forest_id WHERE t.age > 50 GROUP BY f.name;
SELECT AVG(Age) FROM Astronauts INNER JOIN (SELECT MAX(RetirementDate) AS Retirement FROM Astronauts) AS Subquery ON Astronauts.RetirementDate = Subquery.Retirement;
SELECT products.product_id, products.name FROM products LEFT JOIN nutrition ON products.product_id = nutrition.product_id WHERE nutrition.product_id IS NULL;
SELECT SUM(revenue) FROM Restaurants WHERE seating_capacity > 100;
SELECT r.name, AVG(d.delay) AS avg_delay FROM delays d JOIN subway_routes r ON d.route_id = r.id GROUP BY r.name;
SELECT mine_name, year, (productivity - LAG(productivity) OVER (PARTITION BY mine_name ORDER BY year)) / LAG(productivity) OVER (PARTITION BY mine_name ORDER BY year) AS productivity_growth_rate FROM mine_productivity;
SELECT SUM(revenue) FROM ExhibitionSales WHERE city = 'Paris';
SELECT usage FROM california_water_usage WHERE sector IN ('Residential', 'Commercial');
SELECT n.country, n.equipment_type, n.quantity FROM nato_military_equipment n WHERE n.country IN (SELECT m.country FROM military_countries m WHERE m.alliance = 'NATO') GROUP BY n.equipment_type;
INSERT INTO games (id, name, genre, release_date) VALUES (1, 'Game A', 'Action', '2022-01-01'), (2, 'Game B', 'Adventure', '2022-06-01'), (3, 'Game C', 'Strategy', '2022-12-01');
SELECT COUNT(*), AVG(cost) FROM costs WHERE country = 'Nepal';
SELECT co.offering_id, c.course_id, AVG(c.mental_health_rating) AS avg_rating, SUM(co.enrollment) AS total_enrollment FROM course_offerings co JOIN courses c ON co.course_id = c.course_id GROUP BY co.offering_id, c.course_id;
INSERT INTO students (id, name, country, registration_date) VALUES (1, 'Sofia Garcia', 'Mexico', '2021-09-01');
SELECT SUM(sightings) FROM atlantic_ocean WHERE year = 2020 AND species = 'Blue Whale';
SELECT AVG(sustainability_rating) FROM hotels WHERE location = 'New York';
SELECT dapp_name, network, smart_contracts FROM (SELECT dapp_name, network, smart_contracts, ROW_NUMBER() OVER (PARTITION BY network ORDER BY smart_contracts DESC) as rn FROM dapps) x WHERE rn <= 3 AND network = 'Ethereum';
SELECT COUNT(DISTINCT users.id) FROM users JOIN follows ON users.id = follows.user_id JOIN influencers ON follows.influencer_id = influencers.id WHERE users.country = 'Canada' AND influencers.topic = 'eco-friendly' AND follows.timestamp BETWEEN DATE_SUB(NOW(), INTERVAL 1 MONTH) AND NOW() GROUP BY users.id HAVING COUNT(DISTINCT influencers.id) >= 10;
SELECT SUM(capacity) FROM shelter WHERE region_id = (SELECT region_id FROM region WHERE name = 'south_america');
SELECT AVG(co2_emissions) FROM ElectricVehicles WHERE country = 'Canada' AND year = 2020;
SELECT MAX(retail_price) FROM Garments WHERE category = 'Vintage_Styles';
UPDATE programs SET name = 'Housing Assistance' WHERE id = 2;
SELECT topic, COUNT(*) FROM articles WHERE YEAR(publication_date) = 2022 GROUP BY topic;
SELECT Branch, NumPersonnel, ROW_NUMBER() OVER (ORDER BY NumPersonnel DESC) as Rank FROM MilitaryPersonnel;
SELECT manufacturing_org, SUM(weight) as total_weight FROM spacecrafts GROUP BY manufacturing_org;
SELECT YEAR(date_awarded) AS year, QUARTER(date_awarded) AS quarter, SUM(amount) AS total_amount FROM grants WHERE category = 'Legal Technology' GROUP BY year, quarter;
SELECT AVG(population) FROM habitats WHERE region = 'Southeast Asia' AND animal_type = 'orangutan';
SELECT regulatory_frameworks.name AS Framework, COUNT(dapps.id) AS DApps_Count FROM regulatory_frameworks JOIN dapps ON regulatory_frameworks.id = dapps.framework_id GROUP BY regulatory_frameworks.name ORDER BY DApps_Count DESC;
SELECT state, AVG(score) as avg_score, STDDEV(score) as stddev_score FROM student_mental_health GROUP BY state;
SELECT city, buses FROM public_buses;
SELECT DATE_PART('month', volunteer_date) as month, COUNT(volunteer_id) as num_volunteers FROM volunteers WHERE volunteer_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY month;
SELECT COUNT(i.id) FROM incidents i INNER JOIN countries c ON i.country_id = c.id WHERE c.region = 'Asia-Pacific' AND i.year = 2020;
SELECT COUNT(volunteer_id) FROM volunteers WHERE country = 'India' GROUP BY volunteer_id HAVING hours_served > 10;
SELECT AVG(price / ounce_weight) FROM wholesale WHERE wholesaler = 'Wholesaler D' AND product = 'Concentrate';
SELECT property_id, building_type FROM affordable_housing;
SELECT SUM(co2_emission) FROM SilkProduction WHERE country = 'China';
SELECT author_name, num_citations, NTILE(5) OVER (ORDER BY num_citations DESC) as citation_group FROM explainable_ai_papers;
SELECT COUNT(*) FROM Artworks WHERE artwork_type = 'Sculpture' AND gallery_name = 'Renaissance';
SELECT garment, sustainable_material_percentage FROM GarmentSustainability ORDER BY sustainable_material_percentage DESC LIMIT 10;
SELECT region, COUNT(*) as source_count FROM threat_intel GROUP BY region;
SELECT Year, Type, COUNT(*) as New_Sites FROM (SELECT Year, Type, Mineral, ROW_NUMBER() OVER (PARTITION BY Year, Type ORDER BY Id) as rn FROM New_Sites) t WHERE rn = 1 GROUP BY Year, Type;
SELECT Country, COUNT(*) as TotalParticipants FROM DisabilitySupportPrograms GROUP BY Country;
SELECT DATE_FORMAT(date, '%Y-%m') as month, SUM(revenue) as total_revenue FROM sales GROUP BY month;
SELECT vendor_name FROM smart_cities.tech_vendors WHERE energy_efficiency = TRUE AND waste_management = TRUE;
WITH client_score AS (UPDATE financial_capability SET score = 8 WHERE client_id = 10 AND country = 'Kenya') SELECT score FROM client_score;
SELECT mental_health_score FROM student_mental_health WHERE semester = 'Fall' ORDER BY mental_health_score DESC LIMIT 3;
UPDATE hr.employees SET hire_date = '2019-06-01' WHERE id = 1;
SELECT SUM(local_ingredients) FROM menus WHERE is_vegan = true;
SELECT medium, COUNT(*) FROM Collections WHERE city = 'New York' GROUP BY medium;
SELECT MIN(num_personnel) FROM peacekeeping_ops;
SELECT historical_period, COUNT(*) FROM artifacts GROUP BY historical_period ORDER BY COUNT(*) DESC;
UPDATE ai_ethics SET region = UPPER(region);
SELECT country, COUNT(object_id) FROM Debris GROUP BY country;
SELECT COUNT(*) * 1.0 / (SELECT COUNT(*) FROM singapore_abuses) FROM singapore_escooters;
SELECT name, usage_volume FROM (SELECT name, usage_volume, ROW_NUMBER() OVER (ORDER BY usage_volume DESC) AS rn FROM feed_additives WHERE manufacturer_id IN (SELECT id FROM feed_manufacturers WHERE country = 'Brazil' OR country = 'Colombia' OR country = 'Argentina')) tmp WHERE rn <= 5;
SELECT textile_type, production_country, volume, NTILE(4) OVER (PARTITION BY textile_type ORDER BY volume) as tier FROM production_volumes;
SELECT MIN(price) FROM property_prices p JOIN sustainable_urbanism s ON p.property_id = s.property_id JOIN co_ownership c ON p.property_id = c.property_id WHERE p.city = 'Boston' AND c.co_owner_count > 1;
INSERT INTO citizen_feedback (citizen_id, feedback, feedback_date) VALUES (1, 'Great job on fixing the potholes!', '2022-03-15');
SELECT B.Name, COUNT(P.PropertyID) as CoOwnedProperties FROM Properties P JOIN Boroughs B ON P.BoroughID = B.BoroughID WHERE P.CoOwned = TRUE GROUP BY B.Name;
SELECT name, rating FROM eco_hotels WHERE country = 'Spain' ORDER BY rating DESC LIMIT 1;
SELECT SUM(Attendance.participant_id) FROM Attendance INNER JOIN Workshops ON Attendance.workshop_id = Workshops.workshop_id INNER JOIN Participants ON Attendance.participant_id = Participants.participant_id WHERE Workshops.program_area = 'Climate Action' AND (YEAR(Attendance.attendance_date) = 2020 OR YEAR(Attendance.attendance_date) = 2021);
SELECT c.age, c.gender, c.income FROM clients c JOIN cases cs ON c.client_id = cs.client_id WHERE cs.outcome = 'Positive';
SELECT GameName, Country, PlayerCount FROM PlayerCount WHERE Country = 'Europe' ORDER BY PlayerCount DESC LIMIT 5;
SELECT s.supplier_name FROM military_suppliers s INNER JOIN (SELECT supplier_id FROM military_contracts WHERE country IN ('Canada', 'Australia') GROUP BY supplier_id HAVING COUNT(DISTINCT country) = 2) c ON s.supplier_id = c.supplier_id;
SELECT material, AVG(recycling_rate) FROM recycling_rates WHERE state = 'California' AND year = 2019 GROUP BY material;
SELECT COUNT(*) FROM fairness_incidents WHERE region = 'Oceania' AND incident_date >= '2022-07-01' AND incident_date < '2022-08-01';
SELECT ui.username, SUM(ua.activity) as total_activity FROM user_info ui JOIN user_activity ua ON ui.user_id = ua.user_id WHERE ui.followers IN (SELECT MAX(followers) FROM user_info) AND ua.post_date BETWEEN DATE_SUB(NOW(), INTERVAL 1 MONTH) AND NOW() GROUP BY ui.username;
SELECT port_name, (LEAD(total_cargo) OVER (PARTITION BY port_name ORDER BY update_date) - total_cargo) AS cargo_difference FROM port_updates WHERE port_name IN ('Port of Shanghai', 'Port of Singapore') AND update_date > DATEADD(MONTH, -1, GETDATE());
SELECT Neighborhood, COUNT(*) FROM Properties WHERE CoOwnedBy LIKE '%Female, Indigenous%' OR CoOwnedBy LIKE '%Male, African American%' OR CoOwnedBy LIKE '%Female, Latinx%' GROUP BY Neighborhood;
SELECT name, percentage_recycled_materials, ROUND(percentage_recycled_materials * 100, 2) as percentage_recycled_materials_percentage FROM Supplier WHERE sale_date >= (CURRENT_DATE - INTERVAL '3 months') ORDER BY percentage_recycled_materials_percentage DESC;
SELECT name, salary FROM employees WHERE salary > (SELECT AVG(salary) FROM employees);
SELECT AVG(age) FROM (SELECT age FROM community_health_workers WHERE state = 'Florida' ORDER BY age) AS subquery ORDER BY age DESC LIMIT 1;
DELETE FROM SmartContracts WHERE LastUpdate < DATEADD(year, -1, GETDATE());
SELECT Region, COUNT(StudentID) * 100.0 / (SELECT COUNT(StudentID) FROM Students) as Percentage FROM StudentsWithMentalHealthDisabilities WHERE DisabilityType = 'mental health disability' GROUP BY Region;
SELECT species, sequestration_rate FROM carbon_sequestration;
UPDATE safety_ratings SET safety_rating = 5 WHERE make = 'Volvo' AND model = 'XC60';
SELECT MAX(hours) AS max_hours, volunteer_id FROM volunteer_hours GROUP BY volunteer_id; SELECT name, volunteer_id FROM volunteers WHERE volunteer_id IN (SELECT volunteer_id FROM (SELECT MAX(hours) AS max_hours, volunteer_id FROM volunteer_hours GROUP BY volunteer_id) AS subquery WHERE max_hours = (SELECT MAX(hours) FROM volunteer_hours));
SELECT sector, COUNT(*) FROM projects WHERE program IN ('food_security', 'shelter') GROUP BY sector;
SELECT ProviderID, COUNT(DISTINCT WorkerGender) as NumGenders FROM MentalHealthProvider GROUP BY ProviderID HAVING NumGenders > 2;
SELECT AVG(media_literacy_score) FROM user_video_views WHERE country = 'South America' AND watch_time > 5 AND watch_time <= 5 + 1 AND watch_time >= 5 - 1;
SELECT africa_programs.program_name FROM africa_programs WHERE africa_programs.region = 'Sub-Saharan Africa';
DELETE FROM reservoirs WHERE oil_grade = 'light';
SELECT SUM(CASE WHEN country = 'USA' THEN 1 ELSE 0 END) as total_assets, name FROM DigitalAssets WHERE country = 'USA';
SELECT DishName FROM Dishes WHERE Calories > (SELECT AVG(Calories) FROM Dishes);
SELECT vehicle_id, ROUND(100.0 * SUM(CASE WHEN maintenance_type = 'Oil Change' THEN 1 ELSE 0 END) / COUNT(*), 2) as pct_oil_change, ROUND(100.0 * SUM(CASE WHEN maintenance_type = 'Tire Rotation' THEN 1 ELSE 0 END) / COUNT(*), 2) as pct_tire_rotation, ROUND(100.0 * SUM(CASE WHEN maintenance_type NOT IN ('Oil Change', 'Tire Rotation') THEN 1 ELSE 0 END) / COUNT(*), 2) as pct_other FROM maintenance GROUP BY vehicle_id;
SELECT name, SUM(population) FROM arctic_communities WHERE name != 'Sami' GROUP BY name;
SELECT * FROM Parks WHERE area > 100;
SELECT sales_range, AVG(vegan) * 100 AS percentage FROM (SELECT products.*, NTILE(5) OVER (ORDER BY sales) AS sales_range FROM products WHERE region = 'Europe' AND sale_date >= DATEADD(month, -3, CURRENT_DATE)) GROUP BY sales_range;
SELECT project_name, COUNT(safety_incidents.incident_id) as num_incidents FROM safety_incidents JOIN satellite_deployment ON safety_incidents.satellite_id = satellite_deployment.satellite_id GROUP BY project_name;
SELECT location, current_capacity, projected_capacity FROM landfill_capacity WHERE location = 'Mumbai' AND year = 2035;
SELECT donor_name FROM (SELECT donor_name, COUNT(*) as num_donations FROM donors WHERE donation_date >= '2019-01-01' AND donation_date < '2020-01-01' GROUP BY donor_name) t WHERE num_donations > 1;
SELECT COUNT(*) FROM climate_adaptation WHERE location = 'South America' AND budget > 50000;
SELECT warehouse_id, MAX(weight) FROM package_weights GROUP BY warehouse_id;
SELECT SUM(weight) FROM FOOD_ITEMS WHERE is_organic = false AND category = 'Meat';
SELECT COUNT(well) FROM eagle_ford_wells WHERE completion_year > 2017;
UPDATE carbon_sequestration SET sequestration_rate = 5 WHERE tree_type = 'Pine' AND year = 2020;
SELECT cosmetics_products.category, SUM(CASE WHEN ingredient_sourcing.organic THEN 1 ELSE 0 END) as organic_ingredient_count FROM ingredient_sourcing JOIN cosmetics_products ON ingredient_sourcing.product_id = cosmetics_products.product_id GROUP BY cosmetics_products.category;
SELECT i.age_group, AVG(i.insured) AS avg_insurance_rate FROM insurance i GROUP BY i.age_group;
SELECT COUNT(DISTINCT customer_id) FROM customer_skincare_sales;
SELECT product_id, AVG(preference_rating) as avg_rating FROM consumer_preferences WHERE timestamp BETWEEN DATE_SUB(NOW(), INTERVAL 2 YEAR) AND NOW() GROUP BY product_id ORDER BY avg_rating DESC LIMIT 5;
SELECT mhc.condition_name, COUNT(pp.patient_id) as total_patients FROM mental_health_conditions mhc CROSS JOIN providers p ON mhc.condition_id = pp.condition_id AND p.region_id IN (3, 5) GROUP BY mhc.condition_name;
SELECT 100.0 * SUM(CASE WHEN delay > 2 THEN 1 ELSE 0 END) / COUNT(*) AS pct_delayed FROM Shipments WHERE shipped_date >= DATEADD(month, -1, GETDATE());
SELECT incident_category, incident_count, ROW_NUMBER() OVER (ORDER BY incident_count DESC) AS rank FROM SecurityIncidents;
SELECT year, local_impact FROM local_economy WHERE location = 'Bangkok';
SELECT COUNT(*) FROM diagnoses WHERE code = 'A01';
SELECT s.city, s.name, SUM(t.quantity) as total_quantity FROM salesperson s JOIN tickets t ON s.id = t.salesperson_id GROUP BY s.city, s.name;
SELECT Name, ConstructionCost FROM SustainableProjects WHERE CompletionDate < '2020-01-01';
SELECT COUNT(DISTINCT ip_address) as num_unique_ips FROM security_incidents WHERE incident_date >= DATEADD(month, -1, GETDATE()) AND incident_type = 'DDoS';
SELECT Material, AVG(WaterUsage) AS AvgWaterUsage FROM WaterUsage GROUP BY Material;
SELECT name FROM menu_items WHERE certification = 'Halal';
SELECT MAX(consumption) FROM CityWaterUsage_CapeTown WHERE city = 'Cape Town' AND year = 2019;
SELECT tree_type FROM young_forest WHERE tree_type NOT IN (SELECT tree_type FROM mature_forest);
SELECT AVG(energy_consumption) FROM SmartCities.Buildings WHERE built_year < 2010;
SELECT violation_year, SUM(violation_count) FROM mental_health_parity GROUP BY violation_year;
SELECT AVG(accuracy) FROM datasets WHERE fair = 1;
SELECT d.DisasterType FROM Disasters d LEFT JOIN DisasterDonations dd ON d.DisasterID = dd.DisasterID WHERE dd.DonationID IS NULL;
INSERT INTO mental_health_parity (state, violations) VALUES ('Virginia', 5);
SELECT AstronautID, Agency, MAX(MissionDuration) AS Max_Mission_Duration, RANK() OVER (PARTITION BY Agency ORDER BY MAX(MissionDuration) DESC) AS Max_Mission_Duration_Rank FROM AstronautMissions GROUP BY AstronautID, Agency;
SELECT a.date FROM Advocacy a INNER JOIN Policy_Advocacy pa ON a.advocacy_id = pa.advocacy_id WHERE MONTH(a.date) = 1 AND YEAR(a.date) = 2022;
SELECT COUNT(*) FROM ResearchPapers WHERE Country = 'Germany';
SELECT COUNT(teacher_id) FROM teachers WHERE last_pd_completion_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);
SELECT Region, COUNT(*) AS Number_Of_Volunteers, SUM(Hours) AS Total_Hours_Spent FROM Volunteer_Hours GROUP BY Region;
SELECT AVG(w.salary) as avg_salary FROM workers w JOIN factories f ON w.factory_id = f.factory_id WHERE f.department = 'Assembly';
SELECT gender, AVG(score) FROM financial_wellbeing_scores GROUP BY gender;
SELECT type, COUNT(*) FROM projects WHERE location LIKE 'Southwest%' GROUP BY type;
SELECT AVG(visitors_per_month) FROM Cultural_Events WHERE city = 'Tokyo';
SELECT MIN(num_employees) FROM workplaces WHERE country = 'Japan' AND is_unionized = true;
SELECT gender, COUNT(*) / (SELECT COUNT(*) FROM lifelong_learning_gender) AS completion_rate FROM lifelong_learning_gender GROUP BY gender;
SELECT COUNT(*) FROM plants WHERE country = 'United Kingdom' AND ethical = 1;
UPDATE supply_chain SET risk_score = 6 WHERE vendor = 'Local Produce Co.';
INSERT INTO Donors (id, name, country, donation_amount, donation_date) VALUES (5, 'Fatima Alvarez', 'Guatemala', 100.00, '2021-12-25');
SELECT artist_name, song_name, SUM(streams) as total_streams FROM Streaming GROUP BY artist_name, song_name;
SELECT sensor_type FROM biosensor_funding WHERE fund_date >= DATE_SUB(CURDATE(), INTERVAL 3 YEAR);
SELECT * FROM fans WHERE last_attended_game IS NULL;
SELECT FacilityName FROM WaterConservationInitiatives WHERE FacilityID = 1 AND StartDate <= '2021-12-31' AND EndDate >= '2021-01-01';
SELECT Region, AVG(Quantity) as Average_Quantity FROM Art GROUP BY Region;
UPDATE climate_finance SET amount = amount * 1.1 WHERE funding_source = 'Private sector' AND country = 'United States';
SELECT SUM(funding) AS total_funding FROM Funding WHERE program_focus = 'Accessibility' AND funding_date BETWEEN '2022-01-01' AND '2022-06-30';
SELECT COUNT(ll.course_id) as completed_courses, COUNT(*) as total_courses, (COUNT(ll.course_id) * 100.0 / COUNT(*)) as completion_percentage FROM lifelong_learning ll WHERE ll.completed = true;
SELECT ManufacturingCountry, COUNT(*) AS SpacecraftCount FROM Spacecraft GROUP BY ManufacturingCountry ORDER BY SpacecraftCount DESC LIMIT 3;
SELECT MAX(investment) as max_investment FROM investment_data WHERE country = 'Australia' AND year BETWEEN 2019 AND 2021;
SELECT COUNT(id) as total_drills FROM drills WHERE department IN ('Police', 'Fire') AND drill_date >= '2022-01-01' AND drill_date < '2023-01-01';
SELECT Prevalence FROM Disease_Prevalence WHERE Disease = 'Diabetes';
SELECT state FROM mental_health_parity WHERE law_name IS NULL GROUP BY state;
SELECT city, MAX(engagement_score) FROM CommunityEngagement WHERE engagement_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY city ORDER BY MAX(engagement_score) DESC LIMIT 1;
SELECT name, salary FROM employees WHERE department = 'metalwork' ORDER BY salary DESC LIMIT 3;
SELECT sector.name FROM sector LEFT JOIN incidents ON sector.id = incidents.sector_id WHERE incidents.timestamp < DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) IS NULL;
SELECT category, MAX(views) FROM art_works WHERE city = 'New York' GROUP BY category;
SELECT project_name, GROUP_CONCAT(channel) as channels, SUM(funding) as total_funding FROM finance_projects WHERE region = 'Asia' GROUP BY project_name;
SELECT * FROM broadband_customers WHERE state = 'California' AND last_outage >= DATEADD(month, -1, CURRENT_DATE);
SELECT (COUNT(*) FILTER (WHERE passed = true) / COUNT(*)) * 100 AS percentage_passed FROM inspections_japan;
SELECT Machine, AVG(Energy) OVER (PARTITION BY Machine ORDER BY Timestamp ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) FROM EnergyConsumption WHERE Timestamp >= DATEADD(day, -7, CURRENT_TIMESTAMP)
SELECT location, COUNT(DISTINCT program_name) as num_programs FROM community_education GROUP BY location;
DELETE FROM diversity_metrics WHERE metric_id = 1;
SELECT gs.student_name, COUNT(pp.id) as paper_count FROM graduate_students gs JOIN published_papers pp ON gs.id = pp.student_id GROUP BY gs.student_name;
SELECT ReportDate, COUNT(*) as CountOfCases FROM MentalHealthParity GROUP BY ReportDate ORDER BY CountOfCases DESC LIMIT 1;
SELECT SUM(budget) FROM space_missions WHERE agency = 'NASA' AND YEAR(launch_date) = 2000;
SELECT MAX(risk_score) FROM Brown_Investment_Group WHERE sector = 'Agriculture';
SELECT students.gender, students.ethnicity, AVG(students.mental_health_score) as avg_score FROM students GROUP BY students.gender, students.ethnicity;
SELECT COUNT(*) FROM site WHERE location = 'Country C' AND type = 'Mineral Extraction';
SELECT Airport, SUM(NumFlights) AS TotalFlights FROM AirportData WHERE ArrivalType = 'International' GROUP BY Airport ORDER BY TotalFlights DESC LIMIT 3;
SELECT * FROM maintenance WHERE date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH);
UPDATE Teams SET WinRate = (Wins / (Wins + Losses)) WHERE Game = 'GameB';
SELECT MIN(water_salinity) FROM fish_farms WHERE region = 'Africa' AND water_depth > 5 AND water_temperature < 28;
SELECT FacultyID FROM Faculty WHERE Faculty.LastAdvisedDate < DATEADD(year, -3, GETDATE());
SELECT AVG(grant_avg) FROM (SELECT department, AVG(amount) AS grant_avg FROM research_grants GROUP BY department HAVING COUNT(*) >= 3) AS subquery;
SELECT Trips FROM Transportation WHERE Month = 'January 2022' AND City = 'New York';
SELECT COUNT(*) FROM satellites WHERE country_id = 4;
SELECT COUNT(*) FROM social_enterprises_funding WHERE sector = 'Health' AND funding_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR);
SELECT SUM(value) FROM contracts WHERE country = 'South Korea' AND sector = 'Renewable Energy' AND year BETWEEN 2017 AND 2021;
SELECT name, start_date FROM public.projects WHERE start_date >= CURRENT_DATE - INTERVAL '30 days';
SELECT COUNT(*), SUM(word_count) FROM open_pedagogy WHERE topic = 'Indigenous Studies';
SELECT SUM(funding_amount) FROM Programs WHERE focus = 'Dance' AND state = 'Texas';
SELECT SUM(donation_amount) FROM Donations WHERE team_name = 'Emergency Response Team' AND YEAR(donation_date) = 2020;
SELECT name  FROM victims  JOIN restorative_justice_services ON victims.id = restorative_justice_services.victim_id WHERE state = 'Colorado'
SELECT SUM(sales) FROM menu WHERE is_sustainable = true;
SELECT COUNT(*) FROM fields WHERE operator = 'Shell';
SELECT water_consumption FROM daily_industrial_water_usage WHERE region = 'Brazil' AND usage_date = (SELECT MAX(usage_date) FROM daily_industrial_water_usage WHERE EXTRACT(MONTH FROM usage_date) = 7 AND EXTRACT(YEAR FROM usage_date) = 2022);
SELECT Issue, COUNT(*) as CountOfIssues FROM CulturalCompetency GROUP BY Issue ORDER BY CountOfIssues DESC LIMIT 3;
SELECT country_of_origin, COUNT(*) as material_count FROM materials GROUP BY country_of_origin ORDER BY material_count DESC;
SELECT * FROM orders WHERE order_date = '2021-06-03';
DELETE FROM landfill_capacity WHERE city = 'Rio de Janeiro' AND year = 2022;
SELECT AVG(depth) FROM underwater_sites WHERE country = 'Fiji';
SELECT SUM(accidents) FROM Vessel WHERE port_id = 2;
SELECT SUM(GiftShops.Revenue) FROM Museums INNER JOIN GiftShops ON Museums.MuseumID = GiftShops.MuseumID WHERE Museums.Country = 'United States';
SELECT style, popularity FROM trends WHERE season IN ('Spring', 'Summer') AND popularity > 85.0;
INSERT INTO WeatherData (region, crop, month, temperature) VALUES ('Z', 'C', 7, 20.0);
SELECT d.department_name, COUNT(e.employee_id) AS num_employees FROM Departments d INNER JOIN Employees e ON d.department_id = e.department_id WHERE d.manufacturer_id = (SELECT manufacturer_id FROM Manufacturers WHERE manufacturer_name = 'ManufacturerD') GROUP BY d.department_name;
SELECT SUM(cost) FROM Infrastructure WHERE YEAR(completed) = 2021;
SELECT SUM(price * quantity) FROM RetailerG WHERE item = 'Accessories';
INSERT INTO Menu (id, name, category, price) VALUES (1, 'Veggie Burger', 'Sandwich', 7.99);
SELECT AVG(score) as avg_score, country FROM energy_efficiency GROUP BY country;
DELETE FROM Size WHERE name = 'Teen';
SELECT DISTINCT well_id FROM gas_production WHERE year IN (2019, 2020);
SELECT founding_year, country, SUM(total_funding) FROM biotech_startups WHERE country IN (SELECT country FROM biotech_startups GROUP BY country ORDER BY SUM(total_funding) DESC LIMIT 3) GROUP BY founding_year, country;
SELECT SUM(cnt) FROM (SELECT city, COUNT(*) AS cnt FROM public.vehicles WHERE city IN ('Toronto', 'Montreal') AND (type LIKE 'electric%' OR type LIKE 'autonomous%') GROUP BY city) AS subquery;
SELECT SUM(age) FROM mature_forest;
INSERT INTO menu (id, category, item) VALUES (4, 'dinner', 'Tofu Poke Bowl');
INSERT INTO rural_hospitals (id, name, location, age, position) VALUES (3, 'Hospital C', 'Rural Area 3', 30, 'Nurse');
INSERT INTO routes (id, route_name, agency, start_date) VALUES (1001, 'Red Line', 'CTA', '2020-01-01');
SELECT AVG(carbon_offset_tonnes) FROM carbon_offset_initiatives;
SELECT COUNT(*) FROM customers WHERE size = 10 AND last_purchase <= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);
SELECT COUNT(*) FROM GraduateStudents WHERE Department = 'Mathematics' AND NumPapers > 2;
SELECT * FROM Incidents WHERE Department = 'Flight Operations' AND Type = 'Technical'
SELECT SUM(inventory.quantity) FROM inventory INNER JOIN materials ON inventory.material_id = materials.id WHERE materials.recycled = true;
SELECT ProgramName, MAX(VolunteerCount) FROM Programs;
SELECT products.name, COUNT(*) AS review_count FROM products JOIN product_reviews ON products.product_id = product_reviews.product_id WHERE region = 'Latin America' GROUP BY products.name ORDER BY review_count DESC LIMIT 5;
SELECT SUM(passengers_per_day) FROM public_transportation WHERE country IN ('India', 'China');
SELECT DATE_TRUNC('quarter', sale_date) as quarter, SUM(quantity) as quarterly_quantity FROM quarterly_sales WHERE sale_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY quarter ORDER BY quarter;
SELECT SUM(amount) FROM investments WHERE investor = 'GreenCapital' AND project_type = 'reforestation' AND date BETWEEN '2022-04-01' AND '2022-06-30';
SELECT * FROM satellites WHERE country IS NULL;
SELECT MAX(energy_efficiency) FROM buildings WHERE city = 'Paris';
SELECT DATE(transaction_date) as transaction_day, COUNT(transaction_id) as number_of_transactions FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31' GROUP BY transaction_day;
SELECT MAX(quantity) as max_sold FROM EquipmentSales WHERE region = 'Africa';
SELECT city, state, COUNT(*) FROM hospitals GROUP BY city, state;
INSERT INTO streams (song_id, stream_date, genre, country, revenue) VALUES (9, '2021-02-14', 'R&B', 'Japan', 1.20);
SELECT COUNT(*) as num_wins FROM matches WHERE home_team_won = TRUE AND match_date >= DATEADD(year, -1, GETDATE());
UPDATE bills SET status = 'Passed' WHERE id = 1;
SELECT AVG(rating) FROM hotels WHERE region = 'APAC' AND reviews > 150;
SELECT SUM(generation) FROM waste_generation wg JOIN factories f ON wg.factory_id = f.id WHERE f.region = 'Africa';
SELECT COUNT(*) FROM schools WHERE city_id = (SELECT id FROM cities WHERE name = 'Dallas');
SELECT SUM(sales.quantity * products.price) FROM sales JOIN products ON sales.product_id = products.id WHERE products.is_sustainable = true;
SELECT company, COUNT(*) as Total_Spacecraft FROM Spacecraft_Manufacturing GROUP BY company ORDER BY company;
SELECT COUNT(policies.id) FROM policies JOIN policyholders ON policies.policyholder_id = policyholders.id JOIN zipcodes ON SUBSTRING(policyholders.address FROM 14 FOR 5) = zipcodes.zipcode WHERE policies.issue_date BETWEEN '2022-07-01' AND '2022-09-30' AND zipcodes.area_type = 'Urban';
SELECT VesselName, LoadCapacity, RANK() OVER (PARTITION BY CountryOfRegistry ORDER BY LoadCapacity DESC) as Rank FROM Vessels WHERE LoadCapacity = (SELECT MAX(LoadCapacity) FROM Vessels v WHERE v.CountryOfRegistry = Vessels.CountryOfRegistry);
SELECT AVG(runtime) FROM TV_shows WHERE release_year = 2019 AND imdb_rating > 8.0;
SELECT initiative_type, SUM(participants) OVER (PARTITION BY initiative_type ORDER BY SUM(participants) DESC) AS total_participants FROM community_diversification WHERE country = 'Peru' GROUP BY initiative_type, year ORDER BY total_participants DESC;
SELECT vessels.type, MAX(vessels.speed) AS max_speed, MIN(vessels.speed) AS min_speed FROM vessels WHERE vessels.type = 'Cruise Ship' AND vessels.id >= DATEADD('year', -1, CURRENT_DATE) GROUP BY vessels.type;
SELECT DISTINCT FLOOR(age / 10) * 10 AS age_range FROM member_classes WHERE class_type IN ('yoga', 'spinning');
SELECT region, 100.0 * COUNT(CASE WHEN gender = 'Female' THEN 1 END) / COUNT(*) as pct FROM social_media_posts WHERE region IN ('Middle East', 'North Africa') AND post_date >= NOW() - INTERVAL 7 DAY GROUP BY region;
SELECT d.name, COUNT(DISTINCT i.strain_id) as unique_strains FROM inventory i JOIN dispensaries d ON i.dispensary_id = d.id WHERE i.available_date <= '2022-03-01' GROUP BY d.name;
SELECT SUM(amount) as total_donated FROM donations d JOIN returning_donors rd ON d.donor = rd.name WHERE rd.is_returning = TRUE AND d.donation_date >= '2021-07-01' AND d.donation_date < '2022-01-01';
SELECT Region, COUNT(*) FROM MobileSubscribers WHERE BillingIssue = 0 GROUP BY Region;
SELECT location, AVG(temperature) as avg_temp, AVG(salinity) as avg_salinity, AVG(depth) as avg_depth FROM oceanography_data WHERE location = 'Arctic Ocean' GROUP BY location;
SELECT r.region_id, r.region_name, COUNT(sr.species_id) FROM regions AS r JOIN species_regions AS sr ON r.region_id = sr.region_id GROUP BY r.region_id, r.region_name;
SELECT COUNT(*) FROM restorative_justice_cases rjc JOIN restorative_justice_facilitators rjf ON rjc.facilitator_id = rjf.facilitator_id WHERE rjf.city = 'Miami';
SELECT DISTINCT country, quantity FROM europium_production;
INSERT INTO courses (course_id, title, completed) VALUES (2002, 'Data Science', '2023-01-21');
SELECT SUM(species_number) FROM southern_hemisphere;
SELECT country, oil_production FROM production_by_country ORDER BY oil_production DESC LIMIT 2;
SELECT city, SUM(co2_emissions) AS total_emissions, RANK() OVER (ORDER BY SUM(co2_emissions) DESC) as co2_rank FROM city_emissions WHERE year = 2020 GROUP BY city HAVING COUNT(*) FILTER (WHERE year = 2020) > 2 ORDER BY total_emissions DESC, city;
SELECT product_category, SUM(revenue) FROM product_sales WHERE MONTH(sale_date) = MONTH(CURDATE()) AND YEAR(sale_date) = YEAR(CURDATE()) GROUP BY product_category;
SELECT MIN(age) as min_age FROM employee_database WHERE department = 'HR' AND training_completed = 'Diversity';
DELETE FROM esports_teams WHERE organization NOT IN ('Genesis', 'Titan');
SELECT DISTINCT organization FROM biosensor_development WHERE year < 2020 AND country = 'US';
SELECT OrgName, COUNT(EventID) AS EventsInLast3Years FROM Organizations INNER JOIN Events ON OrgID = Organizations.OrgID WHERE Country = 'Europe' AND Year BETWEEN 2019 AND 2021 GROUP BY OrgName;
SELECT PlayerID, COUNT(DISTINCT GameType) FROM PlayerGameType GROUP BY PlayerID;
SELECT gender, city, COUNT(*) FROM member_demographics GROUP BY gender, city;
SELECT agencies.name FROM agencies LEFT JOIN reports ON agencies.id = reports.agency_id WHERE report_date < NOW() - INTERVAL 3 MONTH AND state = 'Texas' GROUP BY agencies.name HAVING COUNT(reports.id) = 0;
SELECT genre, AVG(viewership) FROM shows WHERE genre = 'Comedy' GROUP BY genre;
WITH cte AS (VALUES (1, 'Sword of Light', 10), (2, 'Shield of Shadow', 5), (3, 'Bow of the Seas', 8)) INSERT INTO player_inventory (player_id, item_name, quantity) SELECT * FROM cte;
SELECT c.type, r.region, AVG(sm.level) FROM crops c INNER JOIN soil_moisture sm ON c.id = sm.crop_id INNER JOIN (SELECT region, id FROM crops GROUP BY region) r ON c.region = r.region GROUP BY c.type, r.region;
SELECT SUM(i.amount) FROM investment i JOIN company c ON i.company_id = c.id WHERE c.founder = 'LGBTQ+' AND c.industry = 'Transportation';
SELECT city_id, AVG(budget) as 'Avg Budget Allocated to Education' FROM City_Budget WHERE category = 'Education' GROUP BY city_id HAVING COUNT(category) > 5;
SELECT AVG(price) FROM Produce WHERE type = 'Organic' AND name LIKE 'Fruits%';
SELECT DonationCause, SUM(DonationAmount) as TotalDonations FROM DonorAge WHERE DonationYear = 2022 AND DonorAge BETWEEN 30 AND 40 GROUP BY DonationCause ORDER BY TotalDonations DESC;
SELECT SUM(population) FROM cities WHERE province IN (SELECT province FROM cities WHERE population > 1000000 GROUP BY province HAVING COUNT(*) > 1);
SELECT DATE(post_date) AS post_date, COUNT(*) AS posts_per_day FROM socialdata.posts WHERE hashtags LIKE '%#sustainability%' GROUP BY post_date;
SELECT m.species_name, c.status FROM marine_species m INNER JOIN conservation_status c ON m.species_name = c.species_name WHERE m.affected_by_ocean_acidification = TRUE;
SELECT Country, MAX(Amount) FROM MilitarySpending WHERE Year = 2019 GROUP BY Country;
SELECT region, num_requests FROM maintenance_requests WHERE region IN ('Pacific', 'Atlantic') AND quarter = 2;
SELECT Warehouses.WarehouseName, SUM(ReverseLogistics.Pallets) as TotalPallets FROM Warehouses INNER JOIN ReverseLogistics ON Warehouses.WarehouseID = ReverseLogistics.WarehouseID WHERE ReturnDate >= '2022-01-01' AND ReturnDate < '2022-02-01' GROUP BY Warehouses.WarehouseName;
SELECT m.name, m.location FROM mine m INNER JOIN coal_mine c ON m.id = c.mine_id INNER JOIN iron_mine i ON m.id = i.mine_id GROUP BY m.id, m.name, m.location HAVING SUM(c.amount) = SUM(i.amount);
SELECT PolicyholderId FROM Policies p1 WHERE PolicyType = 'Auto' AND EXISTS (SELECT 1 FROM Policies p2 WHERE p2.PolicyholderId = p1.PolicyholderId AND PolicyType = 'Life');
CREATE TABLE CANADA_AUTONOMOUS_DRIVING_RESEARCH (id INT, date DATE, city VARCHAR(50), research_type VARCHAR(50), description TEXT);
SELECT AVG(tenure) FROM union_membership WHERE department = 'technology';
SELECT d.name, AVG(donors.amount) as avg_donation_per_donor FROM disasters d LEFT JOIN donors ON d.id = donors.disaster_id GROUP BY d.id;
UPDATE wind_turbines SET capacity = 2.5 WHERE manufacturer = 'FutureEnergy';
SELECT investment FROM strategies WHERE id = (SELECT MAX(id) FROM strategies);
SELECT (COUNT(*) * 100 / (SELECT COUNT(*) FROM company_founding)) AS percentage_female_founded FROM company_founding WHERE founder_gender = 'Female';
SELECT s.country, COUNT(*) FROM startup s WHERE s.exit_strategy = 'IPO' GROUP BY s.country;
SELECT age, COUNT(*) as count FROM readers GROUP BY age ORDER BY count DESC LIMIT 1;
SELECT severity, COUNT(*) as vulnerability_count FROM vulnerabilities WHERE discovered_date >= DATEADD(quarter, -1, GETDATE()) GROUP BY severity;
SELECT r.cuisine, 100.0 * COUNT(CASE WHEN m.vegetarian THEN 1 END) / COUNT(*) as vegetarian_percentage FROM restaurants r JOIN menu_items m ON r.menu_item_id = m.id GROUP BY r.cuisine;
SELECT sector, COUNT(*) FROM incidents WHERE date >= '2021-01-01' AND date < '2021-04-01' GROUP BY sector; SELECT sector, COUNT(*) FROM incidents WHERE date >= '2021-04-01' AND date < '2021-07-01' GROUP BY sector; SELECT sector, COUNT(*) FROM incidents WHERE date >= '2021-07-01' AND date < '2021-10-01' GROUP BY sector; SELECT sector, SUM(incidents) FROM (SELECT sector, COUNT(*) as incidents FROM incidents WHERE date >= '2021-01-01' AND date < '2021-10-01' GROUP BY sector) AS subquery GROUP BY sector;
SELECT year, impact_statistic FROM environmental_impact;
SELECT COUNT(*) as total_post_impressionist FROM artworks a JOIN art_styles s ON a.style_id = s.id WHERE s.style = 'Post-Impressionism';
SELECT COUNT(area_name) FROM marine_protected_areas_geo WHERE location LIKE 'Southeast%';
SELECT country, AVG(passengers) as avg_daily_ridership FROM pt_ridership GROUP BY country;
SELECT SUM(membership_fee) FROM memberships WHERE member_state IN ('New York', 'California') AND membership_start_date BETWEEN '2022-01-01' AND '2022-03-31';
SELECT region, SUM(total_cargo_capacity) FROM port_office GROUP BY region;
SELECT menu_category, SUM(quantity * price) as total_revenue FROM orders o JOIN menu m ON o.menu_id = m.menu_id JOIN prices p ON o.menu_id = p.menu_id WHERE DATEPART(dw, order_date) < 6 GROUP BY menu_category;
SELECT r.name AS region, AVG(ms.environmental_impact_score) AS avg_score, COUNT(ms.id) AS total_sites FROM regions r INNER JOIN mining_sites ms ON r.id = ms.region_id GROUP BY r.name;
SELECT EXTRACT(QUARTER FROM publication_date) as quarter, COUNT(content_type) as news_count FROM media_publication WHERE publication_date BETWEEN '2021-01-01' AND '2021-12-31' AND content_type = 'News' GROUP BY quarter;
SELECT COUNT(*) FROM WastewaterPlant WHERE State = 'New York';
SELECT country, SUM(capacity) as total_capacity FROM country_landfill_capacity WHERE year = 2019 GROUP BY country;
SELECT AVG(funding) FROM startups WHERE founder_gender = 'male' AND founder_race = 'black';
SELECT sector, risk_rating FROM companies_risk WHERE sector = 'finance' ORDER BY risk_rating DESC;
SELECT c.name, COUNT(DISTINCT d.donor_id) AS total_donors FROM cause c JOIN donation d ON c.id = d.cause_id GROUP BY c.id ORDER BY total_donors DESC LIMIT 10;
SELECT SUM(c.weight) FROM Cargo c INNER JOIN Vessel v ON c.vessel_id = v.vessel_id WHERE v.type = 'Cargo';
SELECT DISTINCT species FROM fish_inventory WHERE quantity > 50;
SELECT COUNT(*) FROM Donations INNER JOIN Volunteers ON Donations.volunteer_id = Volunteers.id WHERE Volunteers.country = 'Canada';
SELECT destination, SUM(cargo_weight) FROM cargo_data WHERE vessel_name = 'Vessel E' GROUP BY destination;
SELECT city, COUNT(*) FROM asia.hotels GROUP BY city;
UPDATE volunteers SET volunteer_hours = 20 WHERE program_name = 'Community Meal Prep' AND volunteer_date = '2022-03-15';
SELECT AVG(age) FROM readers WHERE city IN ('New York', 'Chicago') AND interest = 'sports';
SELECT SUM(quantity) FROM sourcing WHERE fabric_type LIKE 'sustainable%' AND country = 'Africa';
SELECT site_name, COUNT(*) as accidents_h1_2021 FROM site_safety WHERE incident_date BETWEEN '2021-01-01' AND '2021-06-30' GROUP BY site_name;
SELECT AVG(cost) FROM projects WHERE region = 'Northern' AND category = 'Smart City';
SELECT COUNT(*) FROM startup WHERE founder_gender = 'woman';
SELECT program_name, SUM(donation_amount) as total_donation FROM programs_q4_2022 WHERE participants > 500 GROUP BY program_name;
SELECT Artists.name, AVG(Paintings.price) as avg_price FROM Artists JOIN Paintings ON Artists.id = Paintings.artist_id GROUP BY Artists.name ORDER BY avg_price DESC LIMIT 2;
SELECT SUM(revenue) FROM Movies WHERE rating = 'R';
SELECT COUNT(*) FROM marine_species WHERE region = 'Pacific' AND threatened_by_pollution = TRUE;
SELECT AVG(Salary) FROM Employees WHERE Department = 'Marketing' AND LeaveStatus IN ('Active', 'Maternity');
SELECT name FROM startup WHERE total_funding > 10000000;
SELECT Astronauts.name, SpaceMissions.mission, MedicalRecords.medical_condition FROM Astronauts INNER JOIN SpaceMissions ON Astronauts.id = SpaceMissions.astronaut_id INNER JOIN MedicalRecords ON Astronauts.id = MedicalRecords.astronaut_id;
SELECT name FROM destinations WHERE awards IN (SELECT MAX(awards) FROM destinations WHERE year IN (2018, 2019)) AND year IN (2018, 2019) UNION SELECT destination_name FROM sustainable_tourism_awards WHERE category = 'Sustainable Tourism' AND year IN (2018, 2019) GROUP BY destination_name HAVING COUNT(*) > 1;
SELECT AVG(Grade) FROM Students WHERE Program = 'Data Science';
SELECT launch_year, country, COUNT(*) as num_satellites FROM satellites_launched GROUP BY launch_year, country ORDER BY launch_year;
SELECT SUM(population) FROM sanctuary_g WHERE animal_name IN ('lion', 'zebra');
SELECT school_id, measurement_date, mental_health_score, LAG(mental_health_score) OVER (PARTITION BY school_id ORDER BY measurement_date) as previous_mental_health_score FROM students_time;
SELECT fabric, region, COUNT(*) as production_count, RANK() OVER (PARTITION BY fabric ORDER BY COUNT(*) DESC) as production_rank FROM textile_sourcing GROUP BY fabric, region;
SELECT country, COUNT(*) AS total_projects FROM marine_research_projects WHERE funder = 'WWF' AND date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR) GROUP BY country ORDER BY total_projects DESC LIMIT 3;
DELETE FROM movies WHERE budget > 10000000.00;
SELECT platform, SUM(total_hours_played) AS total_hours, MIN(total_hours_played) AS min_hours_per_platform FROM Players GROUP BY platform;
SELECT Manufacturer, COUNT(*) as Total FROM MilitaryAircraft GROUP BY Manufacturer ORDER BY Manufacturer;
SELECT name FROM employees WHERE department = (SELECT department FROM employees WHERE name = 'Jane Smith');
SELECT Vessels.VesselID FROM Vessels JOIN SafetyIncidents ON Vessels.VesselID = SafetyIncidents.VesselID WHERE SafetyIncidents.IncidentDate > DATEADD(day, -30, GETDATE());
SELECT MIN(installed_capacity) FROM renewable_energy WHERE technology = 'Hydro';
SELECT species_name, population FROM Research.Species WHERE population > (SELECT AVG(population) FROM Research.Species);
SELECT severity, COUNT(*) as total_incidents FROM security_incidents WHERE incident_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) GROUP BY severity;
SELECT location, AVG(weight_lost) FROM member_weight_loss GROUP BY location;
SELECT name, MIN(healthcare_distance) FROM rural_villages WHERE population >= 500 GROUP BY name;
SELECT location, capacity FROM Facilities WHERE facility_id = 1;
SELECT name FROM cultural_sites WHERE city = 'Paris' ORDER BY virtual_tour_rating DESC;
INSERT INTO metrics (metric_id, metric_name, country_id) VALUES (6, 'Agroforestry', 38);
SELECT MIN(safety_rating) FROM testing_results WHERE is_electric = TRUE;
SELECT transaction_date, AVG(transaction_amount) OVER (ORDER BY transaction_date ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS moving_average FROM daily_transactions;
SELECT h.hotel_name, otas.booking_date FROM otas INNER JOIN hotels h ON otas.hotel_id = h.hotel_id INNER JOIN virtual_tours vt ON h.hotel_id = vt.hotel_id WHERE h.region = 'EMEA';
SELECT founding_location, COUNT(*) FROM company GROUP BY founding_year, founding_location HAVING founding_location LIKE 'Oceania%';
SELECT ProjectID, State FROM InfrastructureProjects WHERE State = 'CA' AND YEAR(CompletionDate) = YEAR(GETDATE());
SELECT a.aircraft_type, AVG(CASE WHEN i.incident_date >= a.in_service_date THEN 1 ELSE 0 END) as avg_incident_rate FROM Aircraft_Incidents i RIGHT JOIN Aircraft_Types a ON i.aircraft_type = a.aircraft_type GROUP BY a.aircraft_type;
SELECT ip_address, COUNT(*) as incident_count FROM security_incidents GROUP BY ip_address ORDER BY incident_count DESC LIMIT 5;
SELECT SUM(size) FROM marine_protected_areas WHERE country = 'Mediterranean Sea';
SELECT c.country, AVG(dc.value) as avg_value FROM customer c JOIN debit_card dc ON c.customer_id = dc.customer_id GROUP BY c.country;
SELECT Genre, COUNT(*) AS GameCount, RANK() OVER (ORDER BY COUNT(*) DESC) AS Rank FROM Games GROUP BY Genre;
SELECT user_id, COUNT(*) AS num_images FROM posts WHERE content_type = 'image' GROUP BY user_id HAVING COUNT(*) > 5;
SELECT SUM(Cases) FROM FluData WHERE Region = 'South America' AND Year = 2020;
UPDATE biotech_startups SET location = 'USA' WHERE id = 1 AND quarter = 1 AND year = 2022;
SELECT crop_type, COUNT(*) FROM planting_data WHERE planting_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) GROUP BY crop_type;
SELECT dispensary_id, SUM(revenue) as total_revenue FROM sales WHERE date BETWEEN '2021-07-01' AND '2021-07-31' GROUP BY dispensary_id;
SELECT Department, COUNT(*) AS HireCount FROM Employees GROUP BY Department ORDER BY HireCount DESC;
SELECT faculty_member, publications FROM College_of_Engineering WHERE publication_year = 2020 ORDER BY publications DESC;
SELECT COUNT(*) FROM Meeting WHERE department_id = (SELECT id FROM Department WHERE name = 'Education') AND MONTH(datetime) = 1 AND YEAR(datetime) IN (2021, 2022);
SELECT name FROM open_data_ambassadors WHERE region_id = (SELECT id FROM regions WHERE name = 'Lombardy');
SELECT SUM(budget) FROM CommunityDevelopment WHERE country = 'Tanzania' AND year = 2018;
SELECT COUNT(*) FROM digital_assets INNER JOIN developers ON digital_assets.developer_id = developers.developer_id WHERE developers.country = 'United Kingdom';
SELECT isp.name, AVG(sub.monthly_data_usage) as avg_data_usage FROM isps isp INNER JOIN subscribers sub ON isp.id = sub.isp_id WHERE sub.subscriber_type = 'broadband' AND sub.monthly_data_usage > 0 GROUP BY isp.name;
SELECT MAX(ai_features) FROM hotel_features WHERE location = 'Europe';
SELECT name FROM national_parks WHERE country = 'Canada' AND has_virtual_tour = true;
SELECT COUNT(*) FROM clean_energy_policy_trends WHERE region = 'European Union';
SELECT country, AVG(co2_emission/population) as 'Average CO2 Emission per Capita' FROM CO2Emissions INNER JOIN PopulationData ON CO2Emissions.country = PopulationData.country WHERE year >= 1990 AND continent = 'South America' GROUP BY country;
SELECT AVG(age) FROM bioprocess_engineers;
INSERT INTO models (model_name, model_type, country, safety_score, explainability_score) VALUES ('ModelI', 'Recommender', 'Mexico', 86.00, 84.00), ('ModelJ', 'Recommender', 'Argentina', 87.00, 85.00);
SELECT founding_year, SUM(patent_count) FROM company_innovation WHERE founding_year < 2011 GROUP BY founding_year;
SELECT program, MIN(score) FROM EconomicDiversification WHERE year = 2020 GROUP BY program;
SELECT SUM(sales) FROM electric_vehicles WHERE country = 'Germany' AND year = 2021;
SELECT Technology, Budget FROM MilitaryBudget WHERE Year >= 2016 AND Budget > 500000000;
SELECT SUM(revenue) FROM carbon_pricing WHERE year = 2020 GROUP BY region;
SELECT equipment_type, COUNT(*) as num_requests FROM maintenance WHERE YEAR(date_submitted) = 2020 GROUP BY equipment_type;
UPDATE vessel_voyage SET cargo_weight = 15000 WHERE voyage_id = 'V002';
SELECT Consumption FROM IndustrialWaterUsage WHERE Location = 'Texas' AND Year = 2020;
SELECT DISTINCT VendorName FROM Vendors WHERE Location = 'Warehouse';
SELECT MAX(V.AverageSpeed) FROM Vessels V WHERE V.ComplianceStatus = 'Compliant' AND V.AverageSpeed <= (SELECT AVG(AverageSpeed) FROM Vessels WHERE ComplianceStatus = 'Compliant') AND V.LastInspectionDate >= DATEADD(quarter, -1, GETDATE());
UPDATE suppliers SET country = 'Colombia' WHERE supplier_id = 2001;
SELECT sanctuary_name, animal_type, (animal_count::float/SUM(animal_count) OVER (PARTITION BY sanctuary_name))*100 AS animal_percentage FROM sanctuary_data;
SELECT exploration_projects.project_name, COUNT(wells.well_id) FROM exploration_projects INNER JOIN wells ON exploration_projects.project_id = wells.project_id WHERE exploration_projects.region = 'Middle East' GROUP BY exploration_projects.project_name;
SELECT s.contract_creator, COUNT(s.contract_address) as total_contracts FROM smart_contracts s INNER JOIN (SELECT contract_creator, COUNT(*) as contracts_created FROM smart_contracts GROUP BY contract_creator ORDER BY contracts_created DESC LIMIT 5) t ON s.contract_creator = t.contract_creator GROUP BY s.contract_creator;
SELECT country, SUM(weight) as total_weight FROM packages GROUP BY country;
UPDATE DowntownWaterConsumption SET WaterConsumption = 150.0 WHERE Location = 'Downtown';
SELECT org, COUNT(*) FROM expedition GROUP BY org;
SELECT aca.name, aap.species, SUM(aap.animal_count) as total_animals FROM african_conservation_areas aca JOIN african_animal_population aap ON aca.id = aap.conservation_area_id GROUP BY aca.name, aap.species;
SELECT b.brand_name, ROUND(100.0 * COUNT(p.product_id) FILTER (WHERE p.is_cruelty_free AND p.is_vegan) / COUNT(p.product_id), 2) as pct_cruelty_free_vegan FROM brands b JOIN products p ON b.brand_id = p.brand_id GROUP BY b.brand_name ORDER BY b.brand_name;
SELECT AVG(response_time) FROM public.medical_emergencies WHERE city = 'Chicago';
SELECT student_id, RANK() OVER (ORDER BY progress DESC) as rank FROM lifelong_learning WHERE rank = 1;
SELECT AVG(salary) FROM employees WHERE department = 'mining_engineering';
SELECT COUNT(*) FROM solar_installations WHERE location LIKE '%New York%' AND year = 2020;
SELECT SUBSTRING(location, 1, INSTR(location, ' ')-1) AS continent, COUNT(*) FROM heritage_sites_2 GROUP BY continent;
SELECT COUNT(*) FROM marinefarms WHERE country = 'Indonesia' AND uses_ras = true;
SELECT AVG(price) FROM property WHERE sustainability_rating >= 4 AND co_owner IN ('Jamal', 'Sofia');
SELECT Vendor, AVG(Calories) as AvgCalories FROM Meals WHERE IsVegetarian = TRUE GROUP BY Vendor ORDER BY AvgCalories ASC LIMIT 1;
SELECT pa.AdvocateName FROM Policies p INNER JOIN PolicyDetails pd ON p.PolicyID = pd.PolicyID INNER JOIN PolicyAdvocates pa ON p.PolicyID = pa.PolicyID WHERE pd.DisabilityType = 'Cognitive Disability';
SELECT event, SUM(budget) as total_budget FROM LanguagePreservationEvents WHERE program = 'New Zealand' GROUP BY event;
SELECT site, MAX(quantity) FROM chemical_production_6 GROUP BY site;
SELECT COUNT(*) FROM WaterConservationInitiatives WHERE State = 'New York'
SELECT A.Name, SUM(T.Price) as TotalEarnings FROM Artists A INNER JOIN Concerts C ON A.ArtistID = C.ArtistID INNER JOIN Tickets T ON C.ConcertID = T.ConcertID GROUP BY A.Name HAVING TotalEarnings > 50000;
SELECT patient_id, MIN(session_date) AS first_treatment_date FROM therapy_sessions WHERE patient_id IN (SELECT patient_id FROM patient_info WHERE first_treatment_date IS NULL OR first_treatment_date = '2022-01-01') GROUP BY patient_id;
UPDATE customers SET assets_value = assets_value * 1.05 WHERE region = 'Asia Pacific';
SELECT continent, complaint_type, COUNT(*) as complaints, PERCENT_RANK() OVER (PARTITION BY continent ORDER BY complaints DESC) as complaint_percentile FROM customer_complaints WHERE complaint_date >= DATEADD(month, -1, CURRENT_DATE) GROUP BY continent, complaint_type;
ALTER TABLE employee_demographics ADD ethnicity VARCHAR(30);
SELECT MIN(salary) FROM staff WHERE position = 'Reporter';
SELECT AVG(fare) FROM bus_routes WHERE weekly_maintenance_cost > 500;
SELECT COUNT(*) FROM community_health_centers WHERE state IN ('New York', 'California');
SELECT SUM(mission_cost) FROM spacex_missions WHERE launch_date BETWEEN '2015-01-01' AND '2020-12-31';
SELECT state, MIN(joined_date) FROM union_members GROUP BY state;
SELECT COUNT(*) FROM virtual_tours WHERE location LIKE '%Americas%' AND date >= DATEADD(month, -1, GETDATE());
SELECT MIN(visitor_age) FROM Family_Friendly_Exhibitions WHERE city = 'London' AND year = 2021;
SELECT author, topic, COUNT(*) as total_articles FROM news_reports GROUP BY author, topic ORDER BY total_articles DESC;
UPDATE ArtifactAnalysis SET status = 'Re-analysis needed' WHERE type = 'Pottery' AND date_analyzed BETWEEN '2021-01-01' AND '2022-12-31';
SELECT MIN(revenue) FROM restaurants;
SELECT (COUNT(*) FILTER (WHERE topic = 'media representation' AND publisher_country = 'USA')) * 100.0 / COUNT(*) FROM articles;
SELECT material_type, MAX(production_cost) FROM SustainableMaterialsCost GROUP BY material_type;
SELECT MAX(monthly_salary) FROM union_members WHERE union_id = (SELECT union_id FROM unions WHERE union_name = 'Construction Workers Union');
SELECT athlete_id FROM athletes_history GROUP BY athlete_id HAVING COUNT(DISTINCT sport) > 1;
SELECT MAX(Salary) FROM Employees WHERE Department = 'IT' AND GenderIdentity IN ('Non-binary', 'Female');
INSERT INTO Volunteers (VolunteerID, VolunteerName, Program, Hours) VALUES (5, 'David Kim', 'ProgramC', 15.00);
SELECT COUNT(*) FROM sales WHERE size = 'XL' AND date >= '2022-04-01' AND date <= '2022-06-30';
SELECT total_streams FROM genre_streams WHERE genre = 'Classical';
SELECT brand_id, brand_name, (COUNT(CASE WHEN material = 'organic cotton' THEN 1 END) * 100.0 / COUNT(*)) as percentage FROM brands b JOIN products p ON b.brand_id = p.brand_id GROUP BY brand_id, brand_name;
SELECT SUM(amount) FROM military_spending WHERE continent = 'Africa' AND year = 2020;
SELECT d.continent, AVG(t.duration) as avg_duration FROM trips t JOIN destinations d ON t.destination_id = d.id GROUP BY d.continent;
SELECT container_type, AVG(cargo_weight) FROM cargo GROUP BY container_type;
SELECT SUM(market_share) FROM ota_market_share WHERE ota_id IN (1, 2, 3) AND region = 'MEA' AND date = '2023-01-01';
SELECT initiative FROM african_initiatives ORDER BY budget;
SELECT AVG(a.population) FROM animal_population a INNER JOIN endangered_animals e ON a.animal_name = e.animal_name;
DELETE FROM fishing_regulations WHERE region = 'Southern Ocean';
SELECT MIN(age) FROM underrepresented_farmer_age;
SELECT artist_name, SUM(streams) as total_streams FROM music_streams WHERE country = 'Brazil' GROUP BY artist_name ORDER BY total_streams DESC LIMIT 3;
SELECT player_name, team, home_runs FROM baseball_players;
SELECT area_name FROM shallow_protected_areas WHERE max_depth <= 1000.0;
SELECT mission_name, launch_date FROM space_missions WHERE launch_country IN ('India', 'Russia');
SELECT country, COUNT(satellites) OVER (PARTITION BY country) FROM satellite_launches;
CREATE VIEW autonomous_vehicles_by_city AS SELECT city, SUM(num_vehicles) as total_autonomous_vehicles FROM autonomous_vehicles WHERE type = 'Autonomous' GROUP BY city;
SELECT MIN(fairness_score) FROM creative_ai;
SELECT MAX(age) AS max_age FROM players WHERE game = 'Fortnite';
SELECT MAX(safety_score) FROM models_france WHERE country = 'France';
SELECT name FROM unions WHERE domain = 'Government' GROUP BY name ORDER BY COUNT(*) DESC LIMIT 1;
SELECT AVG(rating) FROM sustainable_tours_australia WHERE country = 'Australia';
SELECT DISTINCT last_port FROM ports WHERE last_port = 'Bahamas';
SELECT region, SUM(quantity * sale_price) as total_revenue FROM sales WHERE region = 'Europe' GROUP BY region;
DELETE FROM ota_stats WHERE region = 'NA' AND date < '2021-01-01';
SELECT location_name, AVG(rating) AS avg_rating FROM location_ratings GROUP BY location_name;
SELECT city, MAX(temperature) as max_temp FROM crop_weather GROUP BY city;
SELECT COUNT(DISTINCT country) FROM Humanitarian_Assistance WHERE year BETWEEN YEAR(CURRENT_DATE)-5 AND YEAR(CURRENT_DATE);
SELECT AVG(safety_rating) as avg_safety_rating FROM AIModels WHERE application_type = 'Education'; SELECT COUNT(*) as asian_org_count FROM AIOrganizations WHERE region = 'Asia' AND organization IN (SELECT organization FROM AIModels WHERE application_type = 'Education');
SELECT artist_name, year, num_pieces FROM (SELECT artist_name, year, num_pieces, DENSE_RANK() OVER (ORDER BY num_pieces DESC) as rank FROM artist_productivity) a WHERE rank <= 1 OR rank >= 11;
SELECT EventLocations.Country, AVG(Events.Attendance) FROM Events INNER JOIN EventLocations ON Events.EventID = EventLocations.EventID GROUP BY EventLocations.Country;
SELECT j.gender, COUNT(a.id) AS num_articles FROM articles a JOIN journalists j ON a.author_id = j.id GROUP BY j.gender;
SELECT EXTRACT(MONTH FROM date) as month, SUM(sales) as total_sales FROM Concerts GROUP BY month;
SELECT AVG(depth) FROM marine_life_research_stations;
SELECT COUNT(*) FROM building_permits WHERE state = 'Illinois' AND YEAR(permit_date) = 2021 AND sustainable = 'yes';
UPDATE Product SET Price = 'Discontinued' WHERE Product.Category = 'Makeup' AND Product.Price > (SELECT AVG(Price) FROM Product WHERE Category = 'Skincare');
DELETE FROM item_inventory WHERE quantity = 0;
SELECT year, COUNT(*) FROM conservation_efforts GROUP BY year
SELECT state, SUM(budget) FROM Government.Park WHERE state IN (SELECT name FROM Government.State WHERE area > 500) GROUP BY state;
SELECT attack_type, attack_date, COUNT(DISTINCT ip_address) as unique_ip_addresses FROM attacks WHERE attack_date >= DATEADD(month, -1, GETDATE()) GROUP BY attack_type, attack_date;
INSERT INTO programs (program_id, name, participants) VALUES ((SELECT MAX(program_id) FROM programs) + 1, 'Community Art Workshop', 15);
SELECT SUM(installed_capacity) FROM renewable_projects WHERE project_type = 'Wind';
SELECT SUM(volume) FROM wells WHERE region = 'Caribbean' AND MONTH(date) <= 6 AND YEAR(date) = 2022;
SELECT title, COUNT(*) as total, state FROM rural_health.staff GROUP BY state, title;
SELECT Country, SUM(Cases) FROM COVIDCountry GROUP BY Country;
SELECT AVG(vulnerability_score) FROM systems WHERE department = 'Admin';
SELECT country, AVG(expenditure) FROM rd_2020 GROUP BY country
SELECT * FROM customer_transactions_5 WHERE transaction_value > 25000 AND customer_region = 'South America' ORDER BY transaction_date DESC;
SELECT s.ShippingMethod, w.Country, SUM(s.ShippedWeight) as TotalWeight FROM Shipments s INNER JOIN Carriers c ON s.CarrierID = c.CarrierID INNER JOIN Warehouses w ON s.WarehouseID = w.WarehouseID WHERE s.ShippingMethod = 'Air Freight' AND c.Region = 'Europe' AND s.ShippedDate >= DATEADD(quarter, -1, GETDATE()) GROUP BY s.ShippingMethod, w.Country;
DELETE FROM Clients WHERE FinanciallyCapable = FALSE AND Region = 'Africa' AND (LastLoanDate < DATE_SUB(CURDATE(), INTERVAL 6 MONTH) OR LastDepositDate < DATE_SUB(CURDATE(), INTERVAL 6 MONTH));
SELECT AVG(temperature) as avg_temperature, EXTRACT(DAY FROM timestamp) as day FROM temperature_data WHERE EXTRACT(MONTH FROM timestamp) = 7 AND location = 'chemical_storage' GROUP BY day;
SELECT AVG(risk_assessment) FROM initiatives WHERE category = 'clean water';
SELECT COUNT(*) FROM railways WHERE (country = 'AU' OR country = 'IN');
SELECT m.Name AS Manufacturer, COUNT(am.Manufacturer) AS Accidents_Involved FROM Manufacturers m JOIN Accidents_Manufacturers am ON m.Id = (SELECT m2.Id FROM Manufacturers m2 WHERE m2.Name = m.Name) GROUP BY m.Name;
SELECT COUNT(*) FROM hospitals WHERE location LIKE '%rural%' UNION ALL SELECT COUNT(*) FROM clinics WHERE location LIKE '%rural%'
SELECT AVG(hours_worked) FROM pro_bono_work WHERE region = 'Southern' AND work_year = 2022;
UPDATE satellites SET name = 'ERS-1A' WHERE name = 'ERS-1';
SELECT AVG(DATEDIFF(CURDATE(), registration_date) / 365) AS avg_age FROM ships s WHERE LAST_DAY(last_maintenance_date) >= LAST_DAY(CURDATE() - INTERVAL 1 YEAR);
SELECT MAX(founding_year) FROM companies WHERE industry = 'Healthcare';
DELETE FROM music_artists WHERE id = 3;
SELECT * FROM cb_agreements WHERE sector = 'manufacturing';
SELECT COUNT(*) FROM DefenseDiplomacy WHERE Event = 'Military Exercise' AND Country = 'United States';
SELECT GameName FROM GameDesign WHERE VR = 1 AND CrossPlatform = 1;
SELECT COUNT(*) FROM financial_capability_south_america WHERE capable = true AND country IN ('Brazil', 'Argentina', 'Colombia');
SELECT SUM(DATEDIFF(HOUR, LoadingStart, LoadingEnd)) AS TotalWaitingTime FROM Cargos WHERE PortID = (SELECT PortID FROM Ports WHERE PortName = 'Long Beach');
SELECT SUM(amount) FROM research_grants JOIN faculties ON research_grants.faculty_id = faculties.faculty_id WHERE faculties.race = 'Asian';
INSERT INTO cosmetics.certifications (certification_id, certification_name, awarded_by) VALUES (3, 'Choose Cruelty Free', 'CCF');
SELECT subscription_start_date, COUNT(*) as total_subscribers FROM subscriber_tech WHERE technology = 'WiMax' GROUP BY subscription_start_date;
SELECT crop, MAX(yield) as highest_yield FROM crop_comparison GROUP BY crop;
DELETE FROM products WHERE category = 'luxury' AND cruelty_free = true;
SELECT name FROM painters WHERE paintings = (SELECT MAX(paintings) FROM painters);
SELECT AVG(temperature) FROM field1 WHERE EXTRACT(MONTH FROM date) = 6 AND field1.date::text LIKE '2021-06-%';
SELECT country.name AS country, MAX(regulatory_fine.amount) AS max_fine FROM regulatory_fine JOIN country ON regulatory_fine.country_id = country.id GROUP BY country.name;
SELECT AVG(revenue) FROM tourism_activities WHERE location LIKE 'Southeast%' AND sustainable = TRUE;
UPDATE claim SET claim_status = 'Paid' WHERE claim_state = 'California';
DELETE FROM digital_divide_programs WHERE program_name = 'Digital Skills for Seniors' AND location = 'Urban California';
SELECT ArtForm, NumberOfPractitioners FROM TraditionalArtForms WHERE NumberOfPractitioners > 5000 ORDER BY ArtForm ASC;
SELECT name, budget FROM programs WHERE state = 'California' AND budget > 1000000.0 ORDER BY budget DESC;
SELECT quantity FROM inventory WHERE item_code = 'C01' AND warehouse_id = 'MXC';
SELECT COUNT(*) FROM AircraftManufacturing WHERE manufacturer = 'Boeing' AND YEAR(delivery_date) = 2020;
SELECT r.line, AVG(m.time) FROM metros m JOIN routes r ON m.route_id = r.route_id GROUP BY r.line;
SELECT Brand_Name, Consumer_Preference FROM Brands WHERE Cruelty_Free = TRUE ORDER BY Consumer_Preference DESC;
SELECT name, research_interest FROM professors WHERE grant = 1;
SELECT airline, aircraft_type, COUNT(*) as Total FROM flights WHERE budget_airline = TRUE GROUP BY airline, aircraft_type;
SELECT c.name, c.total_assets, c.account_count FROM customers c ORDER BY c.total_assets DESC, c.account_count DESC LIMIT 5;
SELECT MIN(price) FROM menus WHERE dish_type = 'Appetizers';
SELECT smart_cities.city_name FROM smart_cities INNER JOIN renewable_energy ON smart_cities.city_name = renewable_energy.city_name WHERE smart_cities.state = 'California';
SELECT e.name, AVG(r.rating) AS avg_rating FROM ratings r JOIN exhibitions e ON r.exhibition_id = e.id GROUP BY r.exhibition_id ORDER BY avg_rating DESC LIMIT 1;
SELECT dd.name FROM donors dd INNER JOIN donations d ON dd.id = d.donor_id WHERE dd.ethnicity LIKE 'Indigenous%' GROUP BY dd.name HAVING SUM(d.amount) > 1000;
SELECT country, COUNT(DISTINCT student_id) FROM student_demographics WHERE department = 'Engineering' GROUP BY country;
SELECT COUNT(*) FROM properties WHERE city = 'Portland' AND listing_price > 300000 AND co_owned = true;
SELECT SUM(sales_quantity) FROM cosmetics_sales WHERE product IN ('Lipstick', 'Lip Balm');
SELECT MIN(depth) FROM oceanography WHERE location IN ('Cayman Trough', 'Puerto Rico Trench') AND oceanography.location LIKE '%Atlantic%';
SELECT MIN(response_time) FROM emergency_responses WHERE district_id = (SELECT id FROM districts WHERE name = 'East') AND type = 'Medical Emergency';
SELECT city, building_count FROM GreenCertified WHERE country = 'Canada' GROUP BY city;
SELECT COUNT(*) FROM Pool WHERE Region = 'Southwest' AND Type = 'Public';
SELECT month, year, count FROM cybersecurity_vulnerabilities.vuln_reports WHERE year = 2021;
SELECT AVG(FareAmount) FROM Fares INNER JOIN City ON Fares.CityID = City.CityID WHERE City.CityName IN ('CityA', 'CityB');
SELECT city, AVG(ai_features) as avg_features FROM hotels WHERE city = 'Tokyo' GROUP BY city;
SELECT vessel_type, AVG(berthing_time) as avg_berthing_time FROM berthing GROUP BY vessel_type;
SELECT warehouse_location, COUNT(*) FROM warehouse_shipments GROUP BY warehouse_location;
SELECT SUM(b.amount) FROM budget b WHERE b.domain = 'Transportation' AND b.state = 'California';
DELETE FROM cultural_sites WHERE country = 'India' AND visitors = 0;
SELECT SUM(available_tours) FROM virtual_tourism WHERE country IN ('Spain', 'Italy');
SELECT SUM(co2_emissions) FROM products WHERE feature = 'feature';
SELECT country, MIN(budget) as min_budget FROM Community WHERE year = 2016 GROUP BY country;
SELECT AVG(WasteGenerated) FROM ManufacturingPlants WHERE PlantLocation IN ('Southeast');
SELECT volume FROM wastewater_treatment WHERE country = 'Japan' AND year = 2016;
SELECT cp.country, cp.element, SUM(cp.quantity) as total_quantity FROM country_production cp WHERE cp.year = 2016 GROUP BY cp.country, cp.element;
SELECT brand FROM labor_violations WHERE violation_count IS NULL;
CREATE TABLE Parks( park_id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), area FLOAT, created_date DATE);
SELECT quarter, SUM(oil_production) as total_oil_production FROM production_2020 GROUP BY quarter ORDER BY quarter;
DELETE FROM Members WHERE MemberID NOT IN (SELECT MemberID FROM (SELECT MemberID, COUNT(*) as CheckInCount FROM Members WHERE LastCheckIn >= DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY) GROUP BY MemberID) t1 WHERE CheckInCount > 0);
SELECT country, MAX(max_salary) as max_salary, MIN(min_salary) as min_salary FROM electronics_training GROUP BY country;
SELECT membership_type, COUNT(membership_id) as new_members FROM memberships WHERE membership_type = 'Elite' AND signup_date >= DATEADD(quarter, -1, CURRENT_DATE) GROUP BY membership_type;
SELECT company, amount, award_date FROM defense_contracts WHERE state IN ('New York', 'New Jersey') AND amount BETWEEN 250000 AND 750000;
SELECT SUM(co2_reduction) FROM adaptation_projects WHERE country IN ('China', 'India') AND year = 2019;
SELECT COUNT(DISTINCT country) FROM readers;
SELECT MIN(price) FROM garment_sales WHERE garment_type = 'dress' AND country = 'Australia' AND sustainability_rating = 5;
WITH cte AS (UPDATE travel_advisories SET advisory = 'New advisory for Japan' WHERE country = 'Japan' RETURNING *) SELECT * FROM cte;
SELECT COUNT(*) FROM emergency_incidents WHERE city IN ('Los Angeles', 'New York City') UNION ALL SELECT COUNT(*) FROM crimes WHERE city IN ('Los Angeles', 'New York City');
SELECT i.initiative_name, fs.source_name, SUM(if.amount) AS total_funding FROM initiatives i INNER JOIN initiative_funding if ON i.initiative_id = if.initiative_id INNER JOIN funding_sources fs ON if.source_id = fs.source_id WHERE i.state = 'Texas' AND if.year = 2021 GROUP BY i.initiative_name, fs.source_name;
SELECT COUNT(*) FROM companies WHERE sector = 'Technology' AND esg_score > 80;
SELECT E.EventName, E.State, AVG(EA.Visitors) AS AvgAttendance FROM Events E INNER JOIN EventAttendance EA ON E.EventID = EA.EventID WHERE E.State = 'California' AND EA.Year BETWEEN 2017 AND 2021 GROUP BY E.EventName, E.State;
SELECT region, COUNT(*) as total_projects, SUM(project_cost) as total_cost FROM DefenseProjects GROUP BY region;
SELECT SUM(budget) FROM Movies WHERE release_year < 2010 UNION ALL SELECT SUM(budget) FROM TVShows WHERE release_year < 2010;
SELECT name, AVG(depth) AS avg_depth    FROM marine_protected_areas    GROUP BY name;
SELECT SUM(cost) FROM therapy_sessions WHERE session_name = 'Cognitive Behavioral Therapy' AND country = 'UK';
SELECT COUNT(*) AS total_cases, SUM(CASE WHEN case_status = 'pending' THEN 1 ELSE 0 END) AS pending_cases FROM CriminalJustice;
SELECT SUM(co2_emissions) FROM flights WHERE origin = 'Canada' AND destination IN ('China', 'Japan') AND YEAR(flight_date) = 2022;
SELECT COUNT(*) FROM incidents;
SELECT AVG(price/grams) FROM inventory WHERE state = 'California' AND year = 2021 AND strain = 'OG Kush';
SELECT AVG(co2_emission) FROM car_rentals WHERE country = 'France';
SELECT country, COUNT(*) AS num_requests FROM maintenance_requests WHERE request_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) GROUP BY country ORDER BY num_requests DESC LIMIT 3;
SELECT name, revenue FROM (SELECT name, revenue, ROW_NUMBER() OVER (ORDER BY revenue DESC) as rn FROM games WHERE genre = 'Gaming') sub WHERE rn != 1;
SELECT COUNT(*) FROM Droughts WHERE state = 'California' AND year BETWEEN 2010 AND 2020 AND drought = true;
SELECT COUNT(*) FROM art_exhibit_attendance WHERE num_attendees > 30 AND exhibit_location = 'Paris';
SELECT ScholarName FROM Scholars INNER JOIN Publications ON Scholars.ScholarID = Publications.ScholarID WHERE Focus = 'Mayan Civilization';
INSERT INTO organizations (id, sector, ESG_rating) VALUES (5, 'Education', 8.7);
INSERT INTO sustainable_fabric (id, fabric, country_of_origin) VALUES (1, 'Organic Cotton', 'India'), (2, 'Tencel', 'Austria'), (3, 'Hemp', 'China'), (4, 'Recycled Polyester', 'Japan');
SELECT COUNT(*) FROM Nigerian_TV WHERE year BETWEEN 2020 AND 2023;
SELECT COUNT(*) FROM Players WHERE Underrepresented = TRUE;
SELECT AVG(t.amount) FROM transactions t JOIN customers c ON t.customer_id = c.id WHERE c.country = 'Italy';
SELECT language, COUNT(*) FROM community_health_workers WHERE cultural_competency_training = 'Yes' GROUP BY language;
SELECT AVG(num_projects_per_year) FROM (SELECT YEAR(CURDATE()) - year AS num_projects_per_year FROM innovation_table) AS innovation_years;
SELECT SUM(budget) FROM projects WHERE (category = 'Transportation' OR category = 'Water Supply') AND status = 'Completed';
SELECT AVG(max_speed) FROM Spacecraft WHERE name IN ('Mars Reconnaissance Orbiter', 'Perseverance Rover', 'Curiosity Rover', 'Spirit Rover', 'Opportunity Rover');
SELECT SUM(carbon_offset_value) FROM carbon_offset WHERE location LIKE '%Americas%';
SELECT c.industry, COUNT(*) FROM companies c WHERE c.founder_community <> 'White' GROUP BY c.industry ORDER BY COUNT(*) DESC LIMIT 1;
SELECT country, AVG(explainability_score) AS avg_explainability_score FROM ai_models GROUP BY country ORDER BY avg_explainability_score DESC LIMIT 3;
SELECT country, MIN(budget) as min_budget FROM Community WHERE year BETWEEN (YEAR(CURRENT_DATE) - 3) AND YEAR(CURRENT_DATE) GROUP BY country;
SELECT year, vessel, SUM(safety_incidents) FROM annual_vessel_safety GROUP BY year, vessel;
SELECT SUM(hours) FROM content_hours WHERE region = 'North America' AND creator LIKE '%Indigenous%' AND content_type = 'Video' AND date >= DATEADD(year, -1, GETDATE());
SELECT d.DispensaryName, COUNT(DISTINCT i.Strain) as UniqueStrains FROM Dispensaries d INNER JOIN Inventory i ON d.DispensaryID = i.DispensaryID WHERE d.State = 'Colorado' GROUP BY d.DispensaryName;
SELECT dispensary_id, SUM(quantity_sold) FROM DispensarySales WHERE strain_type = 'sativa' AND sale_date >= '2022-01-01' AND sale_date <= '2022-01-31' GROUP BY dispensary_id;
INSERT INTO vessels (id, name, build_year, gross_tonnage) VALUES (105, 'Pacific Princess', 2010, 2500);
SELECT SUM(reduction) FROM world_reduction WHERE year = 2021;
SELECT manufacturer_id, manufacturer_name, SUM(weight) as total_weight, RANK() OVER (ORDER BY SUM(weight) DESC) as rank FROM chemicals JOIN manufacturers ON chemicals.manufacturer_id = manufacturers.manufacturer_id GROUP BY manufacturer_id, manufacturer_name ORDER BY rank ASC, founding_date ASC;
SELECT AVG(Scores_India.score) FROM Scores_India INNER JOIN Accommodations_India ON Scores_India.country = Accommodations_India.country WHERE Accommodations_India.type = 'Eco-Friendly' AND Scores_India.country = 'India';
DELETE FROM art_forms WHERE is_practiced = FALSE
SELECT AVG(patients.age) FROM patients INNER JOIN outcomes ON patients.patient_id = outcomes.patient_id WHERE outcomes.improvement = TRUE AND patients.treatment = 'CBT';
SELECT AVG(speed) FROM vessels WHERE dock_date >= DATEADD(month, -1, GETDATE()) AND dock_port = 'Los Angeles';
DELETE FROM Workouts WHERE Duration > 90;
SELECT COUNT(*) FROM company WHERE num_employees > 10 AND founder_gender = 'Female';
SELECT * FROM articles WHERE content LIKE '%corruption%';
SELECT COUNT(*) FROM biotech.projects WHERE status = 'Completed' AND completion_date BETWEEN '2021-04-01' AND '2021-06-30';
SELECT MovementName, AVG(Duration) as AvgDuration FROM ArtMovements WHERE Popularity >= 4 AND Region = 'Europe' GROUP BY MovementName;
SELECT SUM(TIMESTAMPDIFF(MINUTE, start_time, end_time)) FROM player_sessions WHERE country = 'Japan' AND game_genre = 'action';
SELECT Country, 100.0 * COUNT(*) OVER (PARTITION BY Country) * 1.0 / SUM(COUNT(*)) OVER () AS PercentageOfTotal FROM CommunityEngagement WHERE Country = 'Oceania' GROUP BY Country;
SELECT country, COUNT(*) as well_count FROM wells WHERE drill_year = 2020 GROUP BY country;
UPDATE tv_shows SET viewership_count = 12000000 WHERE title = 'The Crown';
SELECT TopSize, BottomSize, COUNT(*) AS CustomerCount FROM CustomerSizes GROUP BY TopSize, BottomSize HAVING TopSize = 'L' AND BottomSize = 'XL';
SELECT country, technology, COUNT(*) as total, (COUNT(*) FILTER (WHERE technology = '4G')::FLOAT / COUNT(*)) * 100 as percentage FROM mobile_subscribers_2 GROUP BY country, technology HAVING technology = '4G';
SELECT City.name, City.state FROM City ORDER BY City.population DESC LIMIT 1;
SELECT year, SUM(visitors) FROM Exhibitions WHERE city = 'Tokyo' GROUP BY year;
SELECT COUNT(*) FROM pollution_readings WHERE location = 'South China Sea' AND reading_date BETWEEN '2019-01-01' AND '2019-12-31';
SELECT MAX(quantity) FROM car_sharing WHERE city = 'Madrid' AND country = 'Spain';
DELETE FROM Emission_Statistics WHERE CO2_Emissions > (SELECT AVG(CO2_Emissions) FROM Emission_Statistics) AND Year = (SELECT MAX(Year) FROM Emission_Statistics);
SELECT DATEDIFF(day, violation_date, resolution_date) as days_to_resolve FROM (SELECT violation_id, MIN(resolution_date) as resolution_date FROM Violation_Resolutions GROUP BY violation_id ORDER BY resolution_date DESC LIMIT 3) as top_3_violations INNER JOIN Ethical_Violations ON top_3_violations.violation_id = Ethical_Violations.violation_id;
UPDATE players SET position = 'Goalkeeper' WHERE position = 'Goalie';
SELECT AVG(g.rating) FROM Games g INNER JOIN Publishers p ON g.publisher_id = p.publisher_id WHERE p.country = 'United Kingdom';
SELECT COUNT(*) FROM company WHERE founder_lgbtq = 1 AND industry = 'Education Technology';
SELECT MIN(temperature) FROM deep_sea_temperature WHERE location = 'Mariana Trench';
SELECT EXTRACT(MONTH FROM published_date) AS month, COUNT(*) AS total_articles FROM news_articles WHERE YEAR(published_date) = 2021 GROUP BY month ORDER BY month DESC;
SELECT fs.name AS species_name, MAX(wq.temperature) AS max_temperature FROM fish_inventory fi JOIN fish_farms ff ON fi.fish_farm_id = ff.id JOIN fish_species fs ON fi.fish_species_id = fs.id JOIN water_quality wq ON ff.id = wq.fish_farm_id AND fs.id = wq.fish_species_id GROUP BY fs.name;
SELECT region, SUM(sales_revenue) FROM sales_data GROUP BY region;
SELECT name FROM cuisines WHERE ingredient = 'Ingredient A' AND id NOT IN (SELECT cuisine_id FROM cuisines WHERE ingredient = 'Ingredient B') GROUP BY name;
SELECT AVG(delivery_time) FROM FreightForwarding WHERE country = 'United States' AND quarter = 1 AND year = 2022;
SELECT year, AVG(waste_quantity) FROM WasteGenerationTrend WHERE year BETWEEN 2018 AND 2020 AND country IN ('South America/Brazil', 'South America/Argentina') GROUP BY year;
SELECT Organization, COUNT(*) FROM FluShots GROUP BY Organization;
UPDATE Buildings SET name = 'WindHaven2022', co2_emission = 75.0 WHERE id = 4;
SELECT DISTINCT seismic_zone, resilience_metric1, resilience_metric2 FROM infrastructure_projects WHERE seismic_zone IS NOT NULL;
SELECT article_topic, AVG(investigation_length) FROM investigative_reports GROUP BY article_topic;
SELECT MuseumName, Website FROM Museums WHERE Country = 'Oceania'
SELECT AVG(length) FROM songs WHERE genre = 'Classical';
SELECT COUNT(DISTINCT user_id) AS unique_users FROM sustainable_posts WHERE post_text LIKE '%renewableenergy%';
SELECT (COUNT(CASE WHEN gender = 'male' THEN 1 END) * 100.0 / COUNT(*)) as male_percentage   FROM users;
SELECT SUM(rainfall) FROM Field4_Rainfall WHERE EXTRACT(MONTH FROM measurement_time) = 6 AND EXTRACT(YEAR FROM measurement_time) = 2022 AND station_id = 5;
INSERT INTO chemical_inventory (chemical_name, safety_stock) VALUES ('Potassium Chloride', 75);
SELECT Name, SUM(Amount) as TotalDonated FROM Donors GROUP BY Name ORDER BY TotalDonated DESC;
SELECT COUNT(*) FROM transportation_system WHERE type = 'Public';
SELECT COUNT(*) FROM medical_professionals JOIN hospitals ON medical_professionals.hospital_id = hospitals.id WHERE hospitals.location = 'New York';
SELECT DISTINCT technology FROM military_transactions WHERE country IN ('China', 'India') AND year = 2020 AND technology IS NOT NULL;
SELECT FB.BrandName FROM FashionBrands FB LEFT JOIN BrandUpdates BU ON FB.BrandID = BU.BrandID WHERE BU.UpdateDate IS NULL OR BU.UpdateDate < DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);
SELECT tr.chemical_id, c.name, c.min_storage_temp, COUNT(tr.id) as num_records FROM temperature_record tr INNER JOIN chemical c ON tr.chemical_id = c.id GROUP BY tr.chemical_id;
SELECT u.id, u.name, u.country FROM users u LEFT JOIN user_game_history ug ON u.id = ug.user_id WHERE ug.last_played < (CURRENT_DATE - INTERVAL '1 year') OR ug.last_played IS NULL;
SELECT manufacturer FROM AircraftManufacturing WHERE model='Dreamliner';
SELECT AVG(price) FROM dishes WHERE is_vegan = TRUE;
SELECT name, type FROM Research_Vessels WHERE year > 2015;
SELECT SUM(population) FROM endangered_species WHERE native_to = 'Africa';
SELECT * FROM Students;
SELECT COUNT(*) FROM sustainable_activities WHERE country IN ('India', 'Brazil') AND type = 'sustainable' UNION ALL SELECT COUNT(*) FROM sustainable_activities WHERE country IN ('India', 'Brazil') AND type = 'economic' EXCEPT (SELECT * FROM (SELECT COUNT(*) FROM sustainable_activities WHERE country IN ('India', 'Brazil') AND type = 'sustainable' UNION ALL SELECT COUNT(*) FROM sustainable_activities WHERE country IN ('India', 'Brazil') AND type = 'economic') AS subquery);
SELECT AVG(R.Rating) FROM Products P INNER JOIN Ratings R ON P.Product_ID = R.Product_ID WHERE P.Is_Cruelty_Free = true AND P.Is_Vegan = true;
SELECT dish_type, added_date, SUM(calorie_count) OVER (PARTITION BY dish_type ORDER BY added_date) total_calorie_count FROM dishes;
SELECT AVG(length) FROM the_guardian WHERE category = 'business';
SELECT SUM(permits_issued) FROM building_permits WHERE city = 'Seattle' AND year = 2020;
SELECT Department, SUM(Cost) FROM Trainings WHERE Date >= '2022-01-01' AND Date < '2022-04-01' GROUP BY Department;
SELECT d.name, SUM(g.amount) as total_funding FROM grant g JOIN department d ON g.department_id = d.id WHERE d.name IN ('English', 'History', 'Philosophy') GROUP BY d.name;
SELECT COUNT(DISTINCT Donors.DonorID) AS TotalVolunteers, SUM(Donors.DonationAmount) AS TotalDonations FROM Donors WHERE Donors.State = 'New York';
SELECT r.name, mv.violation_month, SUM(mv.num_violations) as total_violations FROM restaurants r JOIN month_violations mv ON r.id = mv.restaurant_id GROUP BY r.name, mv.violation_month;
SELECT AVG(temperature) FROM ocean_temperatures WHERE ocean = 'Atlantic Ocean';
SELECT AVG(cost) FROM SpacecraftManufacturing WHERE country IN ('Australia', 'New Zealand');
SELECT MAX(ReleaseDate) FROM VirtualRealityGames;
SELECT f.name, r.faculty_member_gender, SUM(r.amount) FROM funding_agency f JOIN research_grants r ON f.id = r.funding_agency_id GROUP BY f.name, r.faculty_member_gender;
SELECT p1.PlayerID, COUNT(DISTINCT e.EventID) as NumEvents FROM Players p1 JOIN EsportsEvents e ON p1.PlayerID = e.PlayerID WHERE p1.Platform = 'Console' GROUP BY p1.PlayerID;
SELECT server, SUM(bytes) as total_bytes FROM network_traffic WHERE server = 'ServerA' GROUP BY server;
SELECT SUM(assets) FROM customers WHERE industry = 'Financial Services' AND assets > 250000.00;
SELECT COUNT(*) as festival_count FROM artist_festivals WHERE artist_name = 'BTS';
SELECT SUM(tickets_sold) FROM events WHERE location IN ('New York', 'London');
SELECT Region, EvaluationYear, COUNT(*) FROM HealthEquityMetricEvaluations WHERE EvaluationYear BETWEEN 2019 AND 2021 GROUP BY Region, EvaluationYear;
SELECT city, SUM(donation_amount) as total_donation FROM climate_change GROUP BY city ORDER BY total_donation DESC LIMIT 3;
SELECT program.name, COUNT(student.id) FROM program LEFT JOIN student ON program.id = student.program_id GROUP BY program.name;
INSERT INTO defense_contracts (contract_id, contractor_name, contract_value, contract_start_date, contract_end_date) VALUES (12345, 'Lockheed Martin', 50000000, '2022-01-01', '2024-12-31');
SELECT basin, COUNT(*) as species_count FROM marine_species_by_basin GROUP BY basin ORDER BY species_count DESC;
SELECT location, SUM(gas_production) as total_gas_production FROM wells GROUP BY location ORDER BY total_gas_production DESC LIMIT 1;
SELECT SUM(budget) FROM InfrastructureProjects WHERE category = 'Waste Management';
SELECT COUNT(*) FROM therapy_sessions WHERE country = 'Germany' AND therapy_type = 'online therapy' AND success = TRUE;
SELECT AVG(cost) FROM Costs WHERE country = 'France' AND item IN ('Dress', 'Blouse')
INSERT INTO initiative (id, name, department_id, status) VALUES ((SELECT MAX(id) FROM initiative) + 1, 'Traffic Congestion', (SELECT id FROM department WHERE name = 'Transportation'), 'open');
SELECT country, branch, SUM(number) as total_personnel FROM military_personnel_2 GROUP BY country, branch;
CREATE VIEW young_farmers AS SELECT * FROM farmers WHERE age < 30;
SELECT financial_institutions.name FROM financial_institutions INNER JOIN shariah_compliant_finance ON financial_institutions.id = shariah_compliant_finance.financial_institution_id WHERE region = 'Southeast Asia' ORDER BY branches DESC;
SELECT AVG(time_to_detect) FROM security_incidents WHERE sector = 'Education' AND year = 2022;
SELECT Name, Year FROM CyberSecurityStrategies WHERE Country = 'Singapore' AND Year BETWEEN 2010 AND 2020;
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM associated_press)) AS percentage FROM associated_press WHERE title LIKE '%investigation%'
WITH updated_status AS (UPDATE contracts SET status = 'completed' WHERE negotiation_id = 123) SELECT * FROM updated_status;
SELECT MAX(incident_count) FROM daily_incidents WHERE region = 'LATAM' AND date >= '2022-01-01';
SELECT destination, COUNT(*) FROM shipments WHERE source = 'United States' AND shipment_date >= CURDATE() - INTERVAL 7 DAY GROUP BY destination;
SELECT Attorneys.Name, SUM(CaseBilling.BillingAmount) AS TotalBilling FROM Attorneys JOIN CaseBilling ON Attorneys.AttorneyID = CaseBilling.AttorneyID GROUP BY Attorneys.Name ORDER BY TotalBilling DESC;
SELECT make, model, SUM(total_distance) AS total_distance FROM autonomous_vehicles GROUP BY make, model ORDER BY make DESC, model DESC;
SELECT AVG(Rainfall) as AvgAnnualRainfall, SUM(MaintenanceCost) as TotalAnnualMaintenanceCost  FROM BridgeRainfall  WHERE Region = 'Northwest' AND Year >= YEAR(CURRENT_DATE) - 5 GROUP BY Year;
SELECT age_group, COUNT(*) FROM ArtGallery GROUP BY age_group;
SELECT topic, COUNT(*) AS num_articles FROM articles GROUP BY topic;
SELECT threat, impact_score FROM cyber_threats WHERE first_half BETWEEN 1 AND 2 ORDER BY impact_score DESC LIMIT 3;
SELECT org_id, AVG(donation_amount) AS avg_donation, COUNT(*) AS total_donations FROM donation GROUP BY org_id ORDER BY avg_donation DESC LIMIT 3;
SELECT initiative, AVG(carbon_offset) FROM carbon_offsets GROUP BY initiative;
SELECT SUM(expenditure_amount) FROM rd_expenditure WHERE company = 'InnoMed' AND region = 'Middle East' AND expenditure_year = 2022;
DELETE FROM authors WHERE first_name = 'John' AND last_name = 'Doe';
SELECT industry, COUNT(*) FROM company WHERE founder LIKE '%Immigrant%' GROUP BY industry;
SELECT SUM(Artworks.price) FROM Artworks INNER JOIN Artists ON Artworks.artist_id = Artists.artist_id WHERE Artists.country = 'Australia' AND Artists.artist_name = 'Albert Namatjira';
SELECT destination, AVG(delivery_time) as avg_delivery_time, RANK() OVER (ORDER BY AVG(delivery_time) DESC) as rank FROM Shipment GROUP BY destination HAVING rank <= 5;
SELECT name, avg_depth FROM marine_protected_areas WHERE region = 'Pacific' AND avg_depth > 2000;
CREATE VIEW quarterly_sales AS SELECT sport_id, EXTRACT(QUARTER FROM purchase_date) as quarter, EXTRACT(YEAR FROM purchase_date) as year, SUM(quantity) as total_sales FROM Tickets GROUP BY sport_id, quarter, year;
SELECT Manufacturer, (SUM(Distance) * 100.0 / (SELECT SUM(Distance) FROM AutonomousTests WHERE Country = 'USA' AND EXTRACT(YEAR FROM TestDate) = 2021)) AS Percentage FROM AutonomousTests WHERE Country = 'USA' AND EXTRACT(YEAR FROM TestDate) = 2021 GROUP BY Manufacturer;
SELECT genre, AVG(runtime) AS avg_runtime, COUNT(*) AS entries FROM media_content GROUP BY genre;
INSERT INTO building_permits (id, project_name, project_type, state) VALUES (3, 'Wind Farm', 'Sustainable', 'Washington');
SELECT salesperson_id, AVG(size) as avg_order_size FROM orders GROUP BY salesperson_id;
SELECT initiative_type, SUM(budget) FROM community_development GROUP BY initiative_type;
SELECT Position, AVG(Salary) FROM Employees WHERE Remote = true GROUP BY Position;
SELECT A.ArtistName, A.Genre, SUM(Albums.Sales) AS Total_Sales FROM Artists A INNER JOIN (SELECT ArtistID, SUM(Sales) AS Sales, ROW_NUMBER() OVER (ORDER BY SUM(Sales) DESC) AS Rank FROM Albums GROUP BY ArtistID) B ON A.ArtistID = B.ArtistID WHERE B.Rank <= 3 GROUP BY A.ArtistName, A.Genre;
SELECT MAX(value) FROM Artworks;
SELECT MAX(gas_fee) AS max_fee, MIN(gas_fee) AS min_fee FROM solana_transactions WHERE transaction_date >= DATEADD(month, -1, GETDATE());
SELECT h.state, COUNT(h.id) as hospital_count, COUNT(c.id) as clinic_count FROM hospitals h OUTER JOIN clinics c ON h.state = c.state WHERE h.location LIKE '%rural%' GROUP BY h.state;
SELECT country, COUNT(site) as num_sites, ROUND(COUNT(site) * 100.0 / (SELECT COUNT(*) FROM UNESCO_Heritage_Sites WHERE country = 'Asia'), 2) as percentage FROM UNESCO_Heritage_Sites WHERE country = 'Asia' GROUP BY country ORDER BY num_sites DESC;
SELECT SUM(transaction_value) FROM socially_responsible_loans WHERE transaction_date BETWEEN '2022-01-01' AND '2022-03-31';
SELECT COUNT(*) FROM eco_friendly_hotels WHERE location LIKE '%Southeast Asia%';
SELECT Category, SUM(Quantity * Price) as TotalSales FROM Orders JOIN Dishes ON Orders.DishID = Dishes.DishID GROUP BY Category;
UPDATE solar_panels SET efficiency = 0.22 WHERE manufacturer = 'SunPower' AND location = 'California';
DELETE FROM absences WHERE employee_id = 456 AND absence_date = '2022-06-15';
UPDATE warehouse_state SET capacity = 1500 WHERE name IN ('California');
SELECT * FROM smart_city_projects WHERE location = 'Urbanville';
SELECT location, COUNT(*) as mine_count FROM mining_sites WHERE location != 'Nevada' GROUP BY location;
DELETE FROM conservation_efforts WHERE region NOT IN (SELECT region FROM water_usage);
SELECT MAX(population) FROM ocean_species;
SELECT COUNT(*), state FROM mental_health_providers WHERE cultural_competency_score IS NULL GROUP BY state;
SELECT COUNT(expedition.id) FROM expedition INNER JOIN region ON expedition.region_id = region.id WHERE region.name = 'Arctic';
SELECT SUM(generation) FROM energy_generation WHERE province = 'Alberta' AND (energy_source = 'Solar' OR energy_source = 'Wind') AND year = 2022;
SELECT COUNT(*) FROM traffic_violations WHERE city = 'Tokyo';
SELECT author_id, AVG(total_publications) FROM (SELECT author_id, COUNT(*) as total_publications FROM publications GROUP BY author_id, year) as subquery GROUP BY author_id;
SELECT p.category, AVG(i.sourcing_rating) FROM products p JOIN ingredients i ON p.product_id = i.product_id GROUP BY p.category;
SELECT race, denial_reason, COUNT(*) FROM legal_aid_denials WHERE application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY race, denial_reason;
SELECT DATE_FORMAT(i.incident_time, '%W') AS day_of_week, HOUR(i.incident_time) AS hour, COUNT(i.iid) FROM incidents i WHERE i.incident_time >= DATE_SUB(CURRENT_TIMESTAMP(), INTERVAL 1 MONTH) GROUP BY day_of_week, hour;
SELECT SUM(DonationAmount) FROM (SELECT DonationAmount FROM Donors WHERE DonationYear = 2021 AND DonorID IN (SELECT DonorID FROM (SELECT DonorID, ROW_NUMBER() OVER (ORDER BY DonationAmount DESC) as rank FROM Donors WHERE DonationYear = 2021) as topDonors WHERE rank <= 5) ORDER BY DonationAmount DESC) as top5Donors;
SELECT MAX(snow_depth) FROM Arctic_Research_Station_11; SELECT MAX(snow_depth) FROM Arctic_Research_Station_12; SELECT GREATEST(MAX(snow_depth), MAX(snow_depth)) FROM Arctic_Research_Station_11, Arctic_Research_Station_12;
SELECT AVG(review_score) FROM hotel_reviews WHERE hotel_id = 123;
SELECT Year, Sub_Domain, SUM(Number_Of_Projects) FROM Research_Projects GROUP BY Year, Sub_Domain;
SELECT policy_name, exception_count, COUNT(*) as count FROM policy_database WHERE exception_count > 0 GROUP BY policy_name ORDER BY count DESC;
INSERT INTO harvest_sites (name, year, volume) VALUES ('Site A', 2021, 1000);
SELECT ArtistID FROM Albums WHERE ReleaseYear < 2000 INTERSECT SELECT ArtistID FROM Albums WHERE ReleaseYear >= 2000;
INSERT INTO machines (id, name, model, year, location) VALUES (1, 'Machine A', 'Model X', 2015, 'USA'), (2, 'Machine B', 'Model Y', 2017, 'Canada'), (3, 'Machine C', 'Model Z', 2019, 'Mexico');
SELECT appliance, rating FROM energy_efficiency WHERE appliance IN ('Refrigerator A', 'Washing Machine B', 'Television C', 'Dishwasher D');
SELECT SUM(funds) FROM agricultural_innovation_projects WHERE country = 'Rwanda' AND year = 2019;
SELECT City, OccupancyRate FROM AffordableHousing WHERE UnitID IN (SELECT UnitID FROM AffordableHousing WHERE City IN ('San Francisco', 'New York', 'Los Angeles') AND OccupancyRate < 1);
SELECT SupplierWaste.SupplierID, SUM(SupplierWaste.Waste) FROM SupplierWaste WHERE SupplierWaste.WasteDate >= DATEADD(MONTH, -1, GETDATE()) GROUP BY SupplierWaste.SupplierID;
SELECT initiative_name, ROW_NUMBER() OVER (PARTITION BY sustainable ORDER BY rating DESC) as ranking FROM initiative_ratings WHERE continent = 'Africa' AND year = 2021 AND sustainable = TRUE;
UPDATE Donors SET DonationDate = '2022-12-31', Amount = Amount + 250 WHERE FirstName = 'John';
SELECT region, MIN(response_time) FROM ems_responses GROUP BY region;
SELECT MIN(posts.likes) FROM posts INNER JOIN users ON posts.user_id = users.id WHERE users.location = 'Canada' AND posts.created_at >= DATE_SUB(NOW(), INTERVAL 1 WEEK);
SELECT COUNT(*) FROM UserGameStats WHERE Region = 'North America';
SELECT measure FROM SafetyMeasures WHERE transparency_rating > (SELECT AVG(transparency_rating) FROM SafetyMeasures);
SELECT COUNT(DISTINCT s.StudentID), a.AccommodationType FROM Students s INNER JOIN Accommodations a ON s.StudentID = a.StudentID WHERE s.DisabilityType = 'Physical Impairment' GROUP BY a.AccommodationType;
SELECT country, MAX(quantity) FROM military_equipment_sales GROUP BY country;
SELECT s.state, AVG(s.score) as avg_score, c.num_workers FROM state_health_equity s JOIN community_health_workers_by_state c ON s.state = c.state GROUP BY s.state;
SELECT Genre, COUNT(*) as Popularity FROM Artists INNER JOIN Performances ON Artists.ArtistID = Performances.ArtistID INNER JOIN Concerts ON Performances.ConcertID = Concerts.ConcertID WHERE Location = 'USA' GROUP BY Genre ORDER BY Popularity DESC LIMIT 1;
INSERT INTO temperature_data (field, temperature, timestamp) VALUES ('Field_7', 22, '2022-10-01 15:00:00');
SELECT 100.0 * COUNT(CASE WHEN improvement_status = 'Improved' THEN 1 END) / COUNT(*) as percentage FROM progress WHERE city = 'New Delhi' AND EXTRACT(MONTH FROM progress_date) = 3 AND EXTRACT(YEAR FROM progress_date) = EXTRACT(YEAR FROM progress_date) - 3;
SELECT MIN(score) FROM impact_assessments WHERE industry = 'mining' AND region = 'Oceania';
SELECT COUNT(*) FROM virtual_tours WHERE region = 'Asia' AND EXTRACT(MONTH FROM tour_date) = 6 AND EXTRACT(YEAR FROM tour_date) = 2021;
SELECT ei.OperationID, ei.WasteGeneration, (ei.WasteGeneration / SUM(ei.WasteGeneration) OVER ()) * 100 as WastePercentage FROM EnvironmentalImpact ei;
SELECT country, COUNT(*) as vessel_count FROM vessels WHERE ocean = 'Indian Ocean' GROUP BY country ORDER BY vessel_count DESC LIMIT 1;   SELECT country, COUNT(*) as vessel_count FROM vessels WHERE ocean = 'Indian Ocean' GROUP BY country ORDER BY vessel_count ASC LIMIT 1;
SELECT COUNT(*) FROM adaptation_fund WHERE region IN ('Latin America', 'Caribbean') AND mitigation_flag = TRUE;
SELECT MIN(salary) FROM employees WHERE department = 'IT';
SELECT Category, COUNT(DISTINCT SupplierID) as SupplierCount FROM ProductSuppliers GROUP BY Category;
SELECT COUNT(DISTINCT destination) FROM travel_advisories WHERE destination IN (SELECT destination FROM travel_advisories GROUP BY destination HAVING COUNT(DISTINCT country_issuing_advisory) >= 3);
SELECT SUM(num_whales) FROM whale_sightings_2021;
SELECT DispensaryName, SUM(QuantitySold) FROM StrainSalesData WHERE State = 'Washington' AND Strain = 'Indica' GROUP BY DispensaryName;
SELECT p.program, COUNT(DISTINCT v.volunteer_name) as num_volunteers, SUM(d.donation_amount) as total_donations FROM Donations d INNER JOIN Volunteers v ON d.program = v.program INNER JOIN Programs p ON d.program = p.program WHERE d.country = 'Mexico' GROUP BY p.program;
SELECT SUM(amount) FROM budget WHERE category = 'Cultural Programs' AND year = 2020;
SELECT node_id, COUNT(*) FROM stellar_transactions WHERE timestamp BETWEEN UNIX_TIMESTAMP() - 604800 AND UNIX_TIMESTAMP() GROUP BY node_id;
SELECT SUM(shipments.cargo_tonnage) FROM vessels JOIN shipments ON vessels.vessel_id = shipments.vessel_id JOIN ports ON shipments.port_id = ports.port_id WHERE ports.port_name = 'Port of Long Beach' AND ports.country = 'Japan' AND YEAR(shipments.ship_date) = 2021 AND QUARTER(shipments.ship_date) = 1;
SELECT subject, AVG(mental_health_score) as avg_score, RANK() OVER (ORDER BY AVG(mental_health_score) DESC) as rank FROM student_mental_health GROUP BY subject ORDER BY rank;
SELECT COUNT(*) FROM patents WHERE filing_date BETWEEN '2018-01-01' AND '2018-12-31';
INSERT INTO ocean_basin (name, species_count) SELECT habitat, COUNT(*) FROM species GROUP BY habitat;
SELECT SUM(strains.quantity) FROM strains JOIN dispensaries ON TRUE WHERE strains.type = 'sativa' AND dispensaries.state = 'Colorado' AND time_periods.year = 2021;
SELECT AVG(post_count/DATEDIFF(last_post_time, DATE_SUB(NOW(), INTERVAL 1 DAY))) FROM users WHERE country = 'United Kingdom' AND industry = 'fashion' AND followers > 10000;
SELECT year, material, AVG(recycling_rate) as avg_recycling_rate FROM waste_stream GROUP BY year, material;
SELECT name, account_balance FROM ( SELECT name, account_balance, RANK() OVER (ORDER BY account_balance DESC) as rank FROM customers JOIN demographics ON customers.id = demographics.customer_id WHERE demographic = 'Retired' ) ranked WHERE rank <= 3;
SELECT campaign_name, number_of_campaigns FROM public_awareness_campaigns ORDER BY number_of_campaigns DESC;
SELECT Country, WaterUsage FROM MiningWaterUsage ORDER BY WaterUsage DESC LIMIT 1; SELECT Country, WaterUsage FROM MiningWaterUsage ORDER BY WaterUsage ASC LIMIT 1;
SELECT MIN(usage.data_usage) AS min_data_usage FROM usage WHERE usage.type = 'mobile' AND usage.region = 'South America';
SELECT year, score, LAG(score, 1) OVER (PARTITION BY student_id ORDER BY year) AS previous_score, score - LAG(score, 1) OVER (PARTITION BY student_id ORDER BY year) AS score_change FROM mental_health_changes WHERE score > 80;
SELECT SUM(funding) FROM genetic_research.projects WHERE disease_category = 'Neurological Disorders';
SELECT SUM(quantity) FROM production WHERE quarter IN (4, 1, 2, 3);
INSERT INTO sustainable_practices (id, title, description, date) VALUES (13, 'Wind Turbines Installation', 'Installation of wind turbines on buildings', '2022-06-10');
SELECT SUM(labor_cost) FROM labor_cost WHERE province = 'Saskatchewan' AND cost_date BETWEEN '2022-04-01' AND '2022-06-30' AND race = 'Asian';
SELECT Continent, COUNT(DISTINCT Visitor_ID) FROM Visitor_Interactions GROUP BY Continent;
SELECT category, AVG(rd_expenditure) AS avg_expenditure FROM drug_data WHERE sale_date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) AND CURRENT_DATE GROUP BY category ORDER BY avg_expenditure DESC;
SELECT Company.founding_date, Diversity.gender, AVG(Diversity.employee_count) FROM Company RIGHT JOIN Diversity ON Company.id = Diversity.company_id WHERE Company.founding_date > '2015-01-01' GROUP BY Company.founding_date, Diversity.gender;
SELECT SUM(energy_efficiency_improvements.improvement_value) / COUNT(DISTINCT buildings.id) FROM buildings JOIN energy_efficiency_improvements ON buildings.id = energy_efficiency_improvements.building_id WHERE buildings.location = 'South Korea';
SELECT MAX(MaxHeartRate) FROM WorkoutData;
SELECT COUNT(*), type FROM auto_shows GROUP BY type;
SELECT client_id, name, transaction_amount FROM (SELECT client_id, name, transaction_amount, ROW_NUMBER() OVER (PARTITION BY client_id ORDER BY transaction_amount DESC) as rn FROM transactions t JOIN clients c ON t.client_id = c.client_id WHERE transaction_date >= CURDATE() - INTERVAL 30 DAY) t WHERE rn = 1;
SELECT project_name, location FROM Sewer_System;
SELECT region, MAX(safety_score) FROM chemical_plants GROUP BY region;
SELECT r.name, MIN(s.population) AS min_population, MAX(s.population) AS max_population FROM MarineLife.Species s JOIN Geography.Regions r ON s.id = r.id GROUP BY r.name;
SELECT context.country, COUNT(*) as patient_count, RANK() OVER (ORDER BY COUNT(*) DESC) as therapy_rank FROM patients JOIN therapy ON patients.id = therapy.patient_id WHERE therapy_type = 'Psychotherapy' GROUP BY country;
SELECT tickets_sold FROM ticket_sales WHERE match = 'TeamA vs TeamB';
SELECT SUM(amount) FROM finance WHERE country = 'Australia' AND year = 2020;
SELECT Genre, MAX(Duration) FROM Song WHERE Genre = 'Country' GROUP BY Genre;
INSERT INTO Programs (ProgramID, ProgramName, StartDate, EndDate) VALUES (2, 'Education Support', '2023-07-01', '2024-06-30');
SELECT policy_id, policy_date FROM policies WHERE policy_date BETWEEN '2021-01-01' AND '2021-06-30';
INSERT INTO policy_changes (id, area, change_date, description) VALUES (4, 'Healthcare', '2022-06-10', 'New Policy'), (5, 'Healthcare', '2022-06-25', 'Updated Guidelines');
SELECT * FROM fairness_issues WHERE domain = 'Healthcare' AND issue_date >= DATEADD(year, -1, GETDATE());
SELECT s.song_name, SUM(ms.streams) AS total_streams FROM music_streaming ms JOIN songs s ON ms.song_id = s.song_id WHERE ms.country = 'USA' GROUP BY s.song_name ORDER BY total_streams DESC LIMIT 3;
SELECT SUM(hours) FROM project WHERE city = 'Seattle' AND type = 'Sustainable';
SELECT country, COUNT(expedition_id) AS num_expeditions   FROM deep_sea_expeditions   GROUP BY country;
INSERT INTO Warehouse (WarehouseID, WarehouseName, City) VALUES (4, 'Warehouse 4', 'City Y');
SELECT PlayerID, COUNT(GameID) as TotalGamesPlayed FROM PlayerGames GROUP BY PlayerID;
 SELECT AVG(personal_best)  FROM (SELECT personal_best FROM athletes WHERE sport = 'Athletics' AND event = '100m' ORDER BY personal_best DESC FETCH NEXT 10 ROWS ONLY) AS subquery;
SELECT SUM(grant_amount) FROM theater_grants WHERE YEAR(grant_date) = 2019;
SELECT bank_id, SUM(mortgage_amount) OVER (PARTITION BY bank_id) AS total_mortgage_amount, bank_name, location FROM bank_mortgages JOIN banks ON bank_mortgages.bank_id = banks.bank_id ORDER BY total_mortgage_amount DESC;
SELECT b.year, SUM(budget) as total_budget FROM budgets b JOIN nonprofits n ON b.budget_id = n.nonprofit_id WHERE n.sector = 'human rights' GROUP BY b.year;
SELECT COUNT(*) FROM SkincareSales WHERE is_paraben_free = TRUE AND (country = 'South Korea' OR country = 'Japan') AND YEAR(sale_date) = 2022;
SELECT Military_Technologies.Name FROM Military_Technologies INNER JOIN Locations ON Military_Technologies.Name = Locations.Location WHERE Locations.Location = 'Asia-Pacific';
SELECT AVG(usage) FROM water_usage WHERE year = 2019 AND location IN ('Chicago', 'Miami');
SELECT spectral_type, MAX(absolute_magnitude) as max_absolute_magnitude FROM Stars WHERE spectral_type = 'O9.5Iab' GROUP BY spectral_type;
SELECT project_name FROM climate_communication WHERE location != 'North America';
SELECT category, AVG(daily_revenue) as avg_daily_revenue FROM daily_revenue WHERE date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY category;
SELECT DISTINCT m.MemberID, m.FirstName, m.LastName FROM Members m INNER JOIN Workouts w1 ON m.MemberID = w1.MemberID INNER JOIN Workouts w2 ON m.MemberID = w2.MemberID WHERE w1.WorkoutDate >= '2022-01-01' AND w1.WorkoutDate < '2022-02-01' AND w2.WorkoutDate >= '2022-02-01' AND w2.WorkoutDate < '2022-03-01';
SELECT country, MAX(hotel_count) FROM Global_Hotels;
SELECT ROUND(100.0 * SUM(CASE WHEN IsOrganic THEN UnitsSold END) / SUM(UnitsSold) OVER (), 2) AS OrganicSalesPercentage FROM BeautyProducts WHERE SaleDate >= DATEADD(QUARTER, -1, CURRENT_DATE);
SELECT COUNT(*) FROM Exhibitions WHERE type = 'Group' AND location LIKE '%Japan%' AND start_year >= 2010;
SELECT country, AVG(total_funding)  FROM companies WHERE women_founded = 1 GROUP BY country;
SELECT JobCategory, COUNT(DISTINCT ApplicantID) FROM JobApplications WHERE ApplicationDate >= DATE_SUB(CURDATE(), INTERVAL 12 MONTH) GROUP BY JobCategory;
SELECT m.country, COUNT(mr.request_id) AS num_requests, SUM(mr.cost) AS total_cost FROM military_equipment m JOIN maintenance_requests mr ON m.equipment_id = mr.equipment_id GROUP BY m.country ORDER BY num_requests DESC LIMIT 5;
SELECT MAX(release_year) FROM movies;
SELECT SUM(DonationCount) FROM Donors WHERE Region = 'San Francisco' AND DonationCount > 1;
SELECT s.station_name, SUM(t.fare) as total_fare FROM trips t JOIN stations s ON t.station_id = s.station_id WHERE s.line = 'Green Line' GROUP BY s.station_name ORDER BY total_fare DESC LIMIT 1;
SELECT AVG(loan_amount) FROM loan_disbursals WHERE region = 'Southeast Asia';
SELECT MAX(production) FROM wastewater_production WHERE city = 'Mumbai' AND date >= '2021-10-01' AND date <= '2021-10-31';
SELECT COUNT(*) FROM smart_cities WHERE completion_year >= 2018 AND country = 'Canada';
SELECT (Suicides / Population) * 100000 FROM Suicide WHERE Country = 'Japan';
SELECT SUM(quantity_sold) FROM Hybrid_Sales WHERE region IN ('North America', 'Europe') AND sale_quarter = 2;
SELECT team_id, MAX(assists) OVER (PARTITION BY team_id ORDER BY team_id) AS highest_assists FROM nba_assists;
SELECT AVG(ib.amount) as avg_annual_intelligence_budget FROM (SELECT cs.country_id, cs.year, MAX(cs.amount) as max_spending FROM military_spending cs GROUP BY cs.country_id, cs.year) ms JOIN intelligence_budget ib ON ms.country_id = ib.country_id AND ms.year = ib.year AND ms.max_spending = ib.amount LIMIT 5;
SELECT country FROM climate_adaptation WHERE budget > (SELECT MAX(budget) FROM climate_adaptation WHERE country = 'Europe') AND country = 'Asia';
DELETE FROM Marketing_Campaigns WHERE campaign_name = 'Print' AND marketing_budget < 10000000;
SELECT department_id, COUNT(*) as injury_count FROM incident WHERE date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) AND CURRENT_DATE AND department_id = 3;
SELECT region, year, SUM(volume) as total_volume FROM forests GROUP BY region, year;
SELECT * FROM community_initiatives WHERE completion_date >= DATEADD(year, -2, GETDATE());
SELECT dept_name, gender, COUNT(*) as count FROM employees e JOIN departments d ON e.dept_id = d.dept_id GROUP BY dept_name, gender;
SELECT SUM(oil_production) as total_oil_production FROM production WHERE year = 2020 AND region = 'Permian Basin';
INSERT INTO state_facts (state, capital, population, area_sq_miles) VALUES ('TX', 'Austin', 29527941, 268596);
DELETE FROM Garment WHERE price < 20.00 OR price > 40.00;
SELECT SUM(biomass) FROM plankton WHERE ocean = 'Atlantic';
SELECT COUNT(*), AVG(points_team - points_opponent) FROM matches WHERE team = 'Chicago Bulls' AND season = '1995-1996';
SELECT MIN(Cost) FROM Trainings;
SELECT e.name, SUM(er.amount) AS total_silver_extracted, lp.worker_count FROM mining_sites e JOIN extraction_revenues er ON e.id = er.site_id JOIN labor_productivity lp ON e.id = lp.mining_site_id GROUP BY e.name, lp.worker_count;
SELECT brand, is_cruelty_free, COUNT(*) as num_purchases FROM cosmetics_purchases WHERE country = 'India' AND is_cruelty_free = TRUE GROUP BY brand, is_cruelty_free ORDER BY num_purchases DESC;
SELECT AVG(amount) FROM network_investments WHERE region = 'Africa' AND investment_date BETWEEN DATE_SUB('2022-04-01', INTERVAL 1 YEAR) AND '2022-04-01';
INSERT INTO water_quality (sample_id, location, sample_date, pH, turbidity)  VALUES  (1, 'Stream A', '2022-01-01', 7.2, 30),  (2, 'River B', '2022-01-02', 7.5, 20),  (3, 'Lake C', '2022-01-03', 6.8, 50);
SELECT brand_id, AVG(quantity) as avg_quantity FROM products WHERE material = 'organic cotton' GROUP BY brand_id;
SELECT COUNT(*) FROM iot_sensors WHERE last_data_received <= DATE_SUB(CURDATE(), INTERVAL 7 DAY);
SELECT SUM(sales) FROM products WHERE supplier_type = 'Fair Trade' AND sale_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);
SELECT COUNT(*) FROM research_papers WHERE publication_year = 2021 AND autonomous_driving = true;
INSERT INTO satellite_images (id, farm_id, image_url, capture_date) VALUES (1, 123, 'https://example.com/image1.jpg', '2022-02-01 14:30:00');
SELECT region, SUM(coal_quantity) as total_q1_2022 FROM coal_production WHERE region = 'South' AND month BETWEEN 1 AND 3 AND year = 2022 GROUP BY region;
SELECT SUM(involved_in_bargaining) FROM union_bargaining WHERE state = 'Florida';
SELECT SUM(volume_sold) AS total_volume FROM Meat WHERE organic = 1 AND sale_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH);
SELECT country, factory, SUM(violations) as total_violations FROM labor_violations GROUP BY country, factory;
SELECT food_truck_id, name, SUM(sales) as total_sales FROM menu_items GROUP BY food_truck_id, name ORDER BY total_sales DESC;
INSERT INTO virtual_tours (tour_id, location, description, price) VALUES (23, 'Tokyo', 'A virtual tour of the Tokyo Skytree', 20.50);
SELECT donor_id, SUM(donation_amount) as total_donated FROM donor_transactions WHERE YEAR(donation_date) = 2020 GROUP BY donor_id ORDER BY total_donated DESC;
SELECT MAX(depth) FROM SouthernOcean WHERE name = 'Southern Ocean Trench';
SELECT COUNT(*) FROM Safety_Research UNION SELECT COUNT(*) FROM Creative_AI;
SELECT transaction_date, amount FROM financial_capability WHERE EXTRACT(DOW FROM transaction_date) IN (0, 6) AND EXTRACT(MONTH FROM transaction_date) = EXTRACT(MONTH FROM CURRENT_DATE);
SELECT Players.Name, COUNT(Games.GameName) FROM Players JOIN Games ON Players.PlayerID = Games.PlayerID WHERE Players.GamingCommunity = 'RetroGamers' GROUP BY Players.Name;
SELECT Cities.city, AVG(RecyclingRates.recycling_rate) FROM Cities JOIN RecyclingRates ON Cities.city = RecyclingRates.city WHERE Cities.region = 'Northwest' GROUP BY Cities.city;
SELECT incident_country, COUNT(*) as incident_count FROM incidents WHERE incident_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY incident_country;
SELECT SUM(amount) FROM funding INNER JOIN company ON funding.company_id = company.id WHERE company.industry = 'finance';
SELECT AVG(risk_score) FROM Vulnerabilities WHERE category = 'Software' AND resolved >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND resolved IS NOT NULL;
SELECT material, SUM(quantity) FROM production GROUP BY material;
SELECT COUNT(DISTINCT species_name) as unique_species_count, species_name FROM biodiversity GROUP BY species_name;
SELECT MAX(max_active) FROM active_iss_astronauts;
SELECT Gender, COUNT(*) as Count FROM Players GROUP BY Gender;
SELECT Country, SUM(Weight) AS Total_Weight, RANK() OVER (ORDER BY SUM(Weight) DESC) AS Rank FROM Satellites GROUP BY Country;
SELECT CountryName FROM AquacultureCountries WHERE Species IN ('Salmon', 'Trout') GROUP BY CountryName HAVING COUNT(DISTINCT Species) = 2;
SELECT SUM(w.total_consumption) FROM water_usage w JOIN drought_info d ON w.region = d.region WHERE w.year = 2020 AND d.severity = 5;
SELECT COUNT(c.ClaimID) as ClaimCount FROM Claims c INNER JOIN Policyholders p ON c.PolicyID = p.PolicyID INNER JOIN Calendar cal ON c.ClaimDate >= cal.Date AND cal.Date >= DATE_SUB(curdate(), INTERVAL 6 MONTH) WHERE p.RiskScore < 500;
SELECT DISTINCT offense FROM hate_crimes_tx WHERE year = 2021 UNION ALL SELECT DISTINCT offense FROM hate_crimes_ny WHERE year = 2021;
SELECT MAX(resilience_score) FROM bridges WHERE region = 'South' AND year_built > 2000;
SELECT city, MAX(hours_worked) FROM labor_hours GROUP BY city;
SELECT AVG(species_count::FLOAT / area_count) FROM deep_sea_species, marine_protected_areas;
SELECT SUM(steps) FROM steps GROUP BY TRUNC(step_date, 'IW');
SELECT name FROM indigenous_food_systems WHERE techniques LIKE '%Agroforestry%';
SELECT program_name, num_published_articles FROM programs ORDER BY num_published_articles DESC LIMIT 3;
UPDATE public.boats SET name = REPLACE(name, 'Electric Boat', 'Vancouver Electric Boat') WHERE city = 'Vancouver';
SELECT gender, COUNT(*) as worker_count, MIN(hire_date) as earliest_hire_date FROM gender_workforce GROUP BY gender;
SELECT satellite, MIN(launches) AS least_launches FROM satellite_launches WHERE year = 2019 GROUP BY satellite HAVING least_launches = (SELECT MIN(launches) FROM satellite_launches WHERE year = 2019);
SELECT COUNT(*) FROM marine_protected_areas WHERE country = 'Indonesia';
UPDATE judges SET court_id = 3 WHERE id = 2;
SELECT genre, SUM(runtime) FROM tv_shows WHERE release_year > 2015 AND country = 'Mexico' GROUP BY genre;
SELECT c.Continent, COUNT(lp.ProgramID) AS ProgramCount FROM Continents c JOIN LanguagePrograms lp ON c.Country = lp.Country WHERE lp.StartYear >= YEAR(CURRENT_DATE) - 5 GROUP BY c.Continent;
SELECT region, SUM(production) FROM wells WHERE region = 'North Sea' GROUP BY region;
SELECT AVG(food_cost_percentage) FROM MenuItems WHERE order_count > 50;
SELECT MAX(temperature) FROM sea_surface_temperature WHERE region = 'Indian Ocean';
SELECT SUM(tourists) FROM (SELECT tourists FROM tourism_stats WHERE visitor_country = 'Japan' AND year IN (2020, 2021)) subquery;
INSERT INTO smart_contracts (name, language) VALUES ('Governance', 'DAML');
SELECT mdata.member_id FROM member_data mdata LEFT JOIN member_workouts mworkouts ON mdata.member_id = mworkouts.member_id WHERE mworkouts.member_id IS NULL;
SELECT category, ROUND(COUNT(*) FILTER (WHERE is_fair_trade = true) * 100.0 / COUNT(*), 2) as fair_trade_percentage FROM FairTradeProducts GROUP BY category;
SELECT AVG(COUNT(posts.id)/86400) AS avg_posts_per_day FROM posts JOIN users ON posts.user_id = users.id WHERE users.age > 40;
DELETE FROM Projects WHERE country = 'Indonesia';
SELECT year, AVG(total_funding) as avg_funding FROM yearly_funding, startups_per_year WHERE yearly_funding.year = startups_per_year.year GROUP BY year;
SELECT AVG(water_temp) FROM Salmon_farms WHERE MONTH(created_at) = 1 AND species = 'Salmon';
SELECT State, ClientFirstName, ClientLastName, DATEDIFF(CloseDate, OpenDate) AS DaysOpen FROM Cases WHERE CaseOutcome = 'won' ORDER BY State, DaysOpen;
SELECT MAX(funding_amount) FROM investment_rounds ir JOIN startup s ON ir.startup_id = s.id WHERE s.industry = 'Renewable Energy' AND s.founder_count >= 2;
INSERT INTO student_accommodations (student_id, accommodation_year, accommodation_type) VALUES (5, 2022, 'Speech');
SELECT company_id, MAX(funding_amount) - MIN(funding_amount) AS funding_difference FROM funding_rounds GROUP BY company_id;
SELECT SUM(price) as total_revenue FROM Menu WHERE vegetarian = true; SELECT SUM(price) as total_revenue FROM Menu WHERE vegetarian = false;
SELECT DISTINCT category FROM advocacy WHERE funds > 4000;
SELECT * FROM Products WHERE harmful_ingredient_1 = TRUE OR harmful_ingredient_2 = TRUE OR harmful_ingredient_3 = TRUE;
SELECT program_name FROM community_education;
SELECT dept_name, COUNT(*) as num_employees FROM employees e JOIN departments d ON e.dept_id = d.dept_id WHERE hire_date < DATEADD(year, -5, CURRENT_DATE) GROUP BY dept_name;
SELECT SUM(area_ha) FROM wildlife_reserve;
SELECT EXTRACT(MONTH FROM VolunteerDate) AS Month, SUM(VolunteerHours) as TotalHours FROM Volunteers GROUP BY Month;
SELECT supplier_name, SUM(total_delivered) FROM textile_suppliers JOIN sustainable_textile_products ON textile_suppliers.id = sustainable_textile_products.supplier_id GROUP BY supplier_name ORDER BY SUM(total_delivered) DESC;
SELECT COUNT(*) FROM complaints WHERE complaint_type = 'data throttling' AND complaint_date >= '2022-04-01' AND complaint_date < '2022-07-01' AND resolved = FALSE;
SELECT 100.0 * COUNT(product_id) / (SELECT COUNT(product_id) FROM cosmetics_products WHERE category = 'haircare') as cruelty_free_percentage FROM certifications JOIN cosmetics_products ON certifications.product_id = cosmetics_products.product_id WHERE certifications.certification_type = 'cruelty-free' AND cosmetics_products.category = 'haircare';
SELECT risk_level, SUM(assets_value) FROM portfolios WHERE portfolio_date = LAST_DAY(DATE_SUB(CURDATE(), INTERVAL 3 MONTH)) GROUP BY risk_level;
SELECT SUM(quantity) FROM Auto_Shows WHERE year = 2019 AND country = 'Mexico';
SELECT SUM(Cases) FROM HIV WHERE Country = 'South Africa';
INSERT INTO concerts (concert_id, artist_name, concert_date, location, tickets_sold) VALUES (2, 'Smooth Groove Band', '2023-07-01', 'Chicago', 300);
SELECT COUNT(*) FROM infectious_diseases WHERE report_date >= DATEADD(day, -30, CURRENT_DATE) AND city = 'New York';
SELECT Year, CropName, AVG(Yield) OVER (PARTITION BY CropName ORDER BY Year ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as MovingAvg FROM Yield;
SELECT SUM(visitors) FROM sites WHERE country = 'Italy';
SELECT COUNT(*) FROM public_art WHERE type = 'Installation';
SELECT COUNT(*) FROM Volunteers WHERE ProgramArea = 'Mental Health' AND VolunteerDate >= DATEADD(month, -6, GETDATE());
SELECT SUM(budget) FROM HeritageSitePreservation WHERE country IN ('Egypt', 'Iran', 'Turkey') AND region = 'Middle East';
SELECT SUM(Contracts.ContractValue) FROM Contracts INNER JOIN Suppliers ON Contracts.SupplierID = Suppliers.SupplierID WHERE Suppliers.Country = 'India';
UPDATE animal_population SET population = 300 WHERE animal_type = 'lions' AND habitat_name = 'Serengeti';
SELECT AVG(sustainability_score) FROM garment_data WHERE collection = 'Spring 2021';
SELECT COUNT(*) FROM songs WHERE genre = 'classical' AND release_year < 2000;
SELECT category, AVG(price) FROM products INNER JOIN suppliers ON products.supplier_id = suppliers.supplier_id WHERE is_ethical_labor_practices = true GROUP BY category;
SELECT COUNT(*) FROM hospitals WHERE beds < 100 AND location LIKE '%rural midwest%' AND maternity_care = true;
SELECT donor_name FROM donations WHERE donation_date < CURDATE() - INTERVAL 6 MONTH EXCEPT SELECT donor_name FROM donations WHERE donation_date >= CURDATE() - INTERVAL 6 MONTH;
SELECT MAX(capacity) FROM energy_storage WHERE state = 'California';
SELECT DonorType, SUM(Amount) as TotalDonated FROM Donors WHERE YEAR(DonationDate) = 2022 AND MONTH(DonationDate) BETWEEN 7 AND 9 GROUP BY DonorType;
DELETE FROM latam_landfill_capacity WHERE country_name = 'Brazil' AND date = (SELECT MIN(date) FROM latam_landfill_capacity WHERE country_name = 'Brazil');
SELECT company_name, initiative_type, initiative_description FROM companies c JOIN initiatives i ON c.id = i.company_id WHERE c.industry = 'Textile' AND initiative_type IN ('Waste Reduction', 'Energy Efficiency', 'Product Design');
SELECT gender, FLOOR(age/10)*10 as age_group, SUM(steps) as total_steps FROM activity_data a JOIN membership m ON a.member_id = m.member_id WHERE timestamp BETWEEN '2022-01-01 00:00:00' AND '2022-01-08 23:59:59' GROUP BY gender, age_group;
SELECT SUM(local_impact) FROM virtual_tours WHERE country IN ('China', 'Japan', 'South Korea') AND quarter = 'Q3';
SELECT country, COUNT(*) as num_initiatives FROM initiatives WHERE open_pedagogy = TRUE GROUP BY country;
SELECT state, COUNT(*) FROM conservation_initiatives WHERE init_date BETWEEN '2015-01-01' AND '2020-12-31' GROUP BY state;
SELECT year, country, SUM(troops) as total_troops FROM peacekeeping_by_year GROUP BY year, country;
SELECT AVG(products.carbon_footprint) as avg_carbon_footprint FROM products JOIN materials ON products.material_id = materials.material_id WHERE materials.type = 'Recycled' AND materials.origin = 'South America';
SELECT route_id, SUM(distance) as total_distance, COUNT(*) as num_delays, ROW_NUMBER() OVER (ORDER BY SUM(distance) DESC) as rank FROM routes RIGHT JOIN delays ON routes.route_id = delays.route_id GROUP BY route_id;
SELECT MONTH(accommodation_date) as month, COUNT(DISTINCT student_id) as number_of_students FROM Accommodations WHERE student_id NOT IN ( SELECT student_id FROM Accommodations WHERE accommodation_date < ( SELECT MIN(accommodation_date) FROM Accommodations )) GROUP BY month;
SELECT COUNT(*) FROM cases INNER JOIN attorneys ON cases.attorney_id = attorneys.attorney_id WHERE attorneys.years_of_experience > 5;
SELECT project_type, MIN(budget) as min_budget, MAX(budget) as max_budget FROM civil_engineering_projects GROUP BY project_type;
SELECT region, (SUM(CASE WHEN is_organic = 'true' THEN f.acres ELSE 0 END) / total_organic_acres) * 100 AS organic_percentage FROM farm_regions fr JOIN farms f ON fr.farm_id = f.id JOIN organic_farms_by_region org ON fr.region = org.region GROUP BY region;
SELECT id, species, population FROM wildlife_sanctuaries WHERE species = 'giant panda' AND population > 50;
SELECT SUM(CASE WHEN fan_age BETWEEN 15 AND 24 THEN num_fans ELSE 0 END) AS num_15_24, SUM(CASE WHEN fan_age BETWEEN 25 AND 34 THEN num_fans ELSE 0 END) AS num_25_34, SUM(CASE WHEN fan_age BETWEEN 35 AND 44 THEN num_fans ELSE 0 END) AS num_35_44 FROM fan_attendance;
SELECT STDDEV(construction_cost) FROM Tunnel WHERE region = 'Midwest';
SELECT COUNT(DISTINCT user_id) FROM public_transportation_users WHERE city = 'Sydney' GROUP BY user_id HAVING DATEDIFF('2022-06-30', start_date) >= 30;
SELECT therapists.id, therapists.name, treatments.start_date, treatments.end_date FROM therapists INNER JOIN treatments ON therapists.id = treatments.therapist_id WHERE DATEDIFF(treatments.end_date, treatments.start_date) > 180;
SELECT AVG(awards) FROM (SELECT destination, AVG(awards) AS awards FROM destinations_awards WHERE year IN (2018, 2019) GROUP BY destination, year HAVING COUNT(*) > 1);
SELECT location, MIN(min_depth) AS min_depth, MAX(max_depth) AS max_depth FROM ocean_floor WHERE location = 'Indian Ocean' GROUP BY location;
SELECT MIN(temperature) FROM temp_data WHERE field_id = 'Field006' AND timestamp BETWEEN DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 7 DAY) AND CURRENT_TIMESTAMP;
SELECT category, SUM(amount) FROM budget GROUP BY category
SELECT model FROM aircraft WHERE num_seats > 200;
SELECT title, ROW_NUMBER() OVER (ORDER BY year) AS rank FROM ancient_art;
SELECT name, SUM(funding) FROM biotech.startups GROUP BY name;
SELECT region, MIN(project_cost) FROM Projects GROUP BY region;
SELECT CASE WHEN hire_date < '2021-01-01' THEN 'Before' ELSE 'After' END as hire_period, COUNT(*) as num_employees FROM employee_history GROUP BY hire_period;
SELECT faculty_members.name, faculty_members.department, disability_accommodations.start_date FROM faculty_members INNER JOIN disability_accommodations ON faculty_members.id = disability_accommodations.faculty_id WHERE faculty_members.id = 1;
SELECT name FROM startups WHERE industry = 'Transportation' AND founders = 'Oceania' AND funding > 5000000;
UPDATE WastewaterTreatment SET treatment_date = '2022-01-01' WHERE record_id = 1;
SELECT genre, AVG(rating) as genre_avg FROM game_design GROUP BY genre HAVING AVG(rating) > (SELECT AVG(rating) FROM game_design);
SELECT SUM(biomass) FROM fish_farms WHERE location = 'Arctic Ocean';
SELECT facility_type FROM wastewater_facilities WHERE capacity_bod = (SELECT MAX(capacity_bod) FROM wastewater_facilities);
SELECT MONTH(date) AS month, region, MAX(temperature) AS max_temp FROM arctic_weather WHERE YEAR(date) = 2020 GROUP BY month, region;
SELECT SUM(emissions) AS total_emissions, source FROM co2_emissions_q3_2021 WHERE source IN ('Coal', 'Gas', 'Oil') GROUP BY source;
SELECT name FROM cities WHERE population > 500000 AND women_workforce_percentage > (SELECT AVG(women_workforce_percentage) FROM cities);
SELECT Patients.Age, MentalHealthConditions.Condition, COUNT(MentalHealthConditions.ConditionID) FROM Patients INNER JOIN MentalHealthConditions ON Patients.PatientID = MentalHealthConditions.PatientID WHERE Patients.Age BETWEEN 20 AND 30 GROUP BY Patients.Age, MentalHealthConditions.Condition ORDER BY Patients.Age, COUNT(MentalHealthConditions.ConditionID) DESC;
SELECT exhibition, visitor_continent, SUM(visitor_count) FROM Exhibitions WHERE city = 'Rome' GROUP BY exhibition, visitor_continent;
SELECT c.customer_id, c.name, c.region FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id AND t.transaction_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) WHERE t.transaction_id IS NULL;
SELECT COUNT(*) FROM county.community_policing WHERE YEAR(event_date) = 2021;
SELECT DISTINCT initiative_name FROM CommunityInitiatives WHERE district = 'Oakland';
SELECT SUM(Amount) FROM Donations;
SELECT MAX(timeline), MIN(timeline) FROM timelines_min_max WHERE practice = 'Green Roofs' AND state IN ('California', 'Oregon', 'Washington', 'Nevada', 'Arizona', 'Utah', 'Colorado', 'New Mexico');
SELECT MIN(weight) FROM shipments WHERE origin = 'Egypt' AND destination = 'Indonesia' AND shipped_at >= '2021-02-01' AND shipped_at < '2021-03-01' GROUP BY DATE(shipped_at);
SELECT COUNT(*) FROM train_stations WHERE city = 'New York' AND accessible = true;
SELECT Region, MAX(Amount) FROM Budget WHERE Year = 2019 AND Department = 'Healthcare' GROUP BY Region;
SELECT COUNT(*) FROM Overpass WHERE location = 'Berlin, Germany' AND type = 'Pedestrian';
SELECT AVG(age) FROM FestivalArtists WHERE festival = 'Coachella' AND year = 2022;
SELECT sector, SUM(consumption) as total_consumption FROM industrial_water_usage GROUP BY sector, month;
SELECT d.name AS department, JSON_EXTRACT(d.diversity_stats, '$.underrepresented') AS underrepresented_count FROM departments d WHERE d.name = 'Engineering';
SELECT SUM(Inventory.quantity) FROM Inventory INNER JOIN Warehouses ON Inventory.warehouse_id = Warehouses.id WHERE Warehouses.location = 'United States';
SELECT DeptName FROM UnderwritingDepartments GROUP BY DeptName HAVING COUNT(*) > 1000;
SELECT AVG(success) FROM projects WHERE country = 'Nepal' AND YEAR(start_date) BETWEEN 2015 AND 2020;
SELECT city, COUNT(*), SUM(carbon_offsets) FROM green_buildings GROUP BY city;
SELECT SUM(users) FROM public_transportation WHERE city = 'Sydney';
SELECT SUM(amount) FROM budget_allocations WHERE department = 'Public Transportation' AND area_type = 'Rural' AND year_id IN (SELECT year_id FROM fiscal_years WHERE year_start >= DATEADD(year, -3, GETDATE()));
SELECT community, COUNT(*) FROM users WHERE community = 'Latinx' AND accessed_diversity_content = true GROUP BY community;
SELECT name, productivity FROM mine WHERE mineral = 'Copper' ORDER BY productivity DESC LIMIT 3;
SELECT WasteMetrics.city, WasteMetrics.generation_tons FROM Cities JOIN WasteMetrics ON Cities.city = WasteMetrics.city WHERE Cities.region = 'Southeast' AND Cities.city != 'Atlanta';
SELECT storage_location, COUNT(DISTINCT chemical_id) AS num_chemicals, RANK() OVER (ORDER BY COUNT(DISTINCT chemical_id) DESC) AS rank FROM chemical_storage GROUP BY storage_location HAVING rank <= 2;
SELECT SUM(cost) FROM SpacecraftManufacturing WHERE year = 2022;
DELETE FROM Inventory WHERE last_sale_date < DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) AND store_id IN (SELECT store_id FROM Stores WHERE state IN ('Washington', 'Oregon'));
SELECT SUM(sale_amount) FROM art_sales s JOIN artists a ON s.artist_id = a.id WHERE a.nationality = 'South Africa' AND s.sale_year BETWEEN YEAR(CURRENT_DATE) - 5 AND YEAR(CURRENT_DATE);
SELECT policyholders.name, SUM(claims.amount) FROM policyholders INNER JOIN policies ON policyholders.policyholder_id = policies.policyholder_id INNER JOIN claims ON policies.policy_id = claims.policy_id GROUP BY policyholders.name;
SELECT a.attorney_name, COUNT(*) as cases_opened FROM attorneys a JOIN cases c ON a.attorney_id = c.attorney_id GROUP BY a.attorney_name;
INSERT INTO media (title, runtime, genre, country) VALUES ('New Anime Show', 60, 'Anime', 'Japan');
SELECT (COUNT(*) FILTER (WHERE daily_water_consumption > 1500)) * 100.0 / COUNT(*) FROM nyc_water_consumption WHERE city = 'New York'
SELECT MAX(patients.age) FROM patients INNER JOIN therapies ON patients.id = therapies.patient_id WHERE therapies.therapy = 'Psychotherapy' AND patients.country = 'Canada';
DELETE FROM biosensor_technology_patents WHERE patent_filing_date < '2015-01-01';
SELECT drug_name FROM drug_approval WHERE approval_agency = 'FDA' AND approval_date BETWEEN '2020-01-01' AND '2020-12-31';
SELECT organization, COUNT(*) FROM ResearchExpeditions GROUP BY organization;
SELECT 100.0 * COUNT(DISTINCT CASE WHEN treatments.treatment = 'Medication' THEN patients.id END) / COUNT(DISTINCT patients.id) AS percentage FROM patients LEFT JOIN treatments ON patients.id = treatments.patient_id WHERE patients.country = 'India';
SELECT name FROM vessels WHERE company = 'Sea Dragons Shipping';
SELECT AVG(member_count) FROM Union_Info WHERE industry = 'Manufacturing';
INSERT INTO posts (id, user_id, post_text) VALUES (1, 1, 'Hello World!');
SELECT site_id FROM (SELECT site_id, COUNT(DISTINCT artifact_type) as count FROM site_p GROUP BY site_id HAVING count > 0 INTERSECT SELECT site_id, COUNT(DISTINCT artifact_type) as count FROM site_q GROUP BY site_id HAVING count > 0) AS subquery;
SELECT name, success_count FROM threat_actors WHERE target_sector = 'Healthcare' AND success_count > 0 ORDER BY success_count DESC LIMIT 5;
SELECT COUNT(*) FROM DecentralizedApps WHERE update_date >= '2021-06-01' AND update_date < '2021-07-01';
SELECT title  FROM (SELECT title, ROW_NUMBER() OVER (ORDER BY authors DESC) as rn FROM research_papers WHERE publication_year >= YEAR(CURRENT_DATE) - 3) t WHERE rn <= 10;
SELECT category, MAX(sustainability_rating) FROM restaurants GROUP BY category;
SELECT project_name, funding_amount FROM genetic_research WHERE location = 'Canada';
SELECT city, certification_tier, COUNT(*) as building_count FROM green_buildings GROUP BY city, certification_tier;
SELECT PhysicianDensity FROM Medical WHERE Country = 'Australia';
SELECT DATE(publish_date) AS pub_date, COUNT(*) AS num_articles FROM articles WHERE publish_date >= NOW() - INTERVAL 1 MONTH GROUP BY pub_date ORDER BY num_articles DESC;
SELECT industry, AVG(funding) FROM company WHERE founder = 'Female' GROUP BY industry;
INSERT INTO manufacturing_output (chemical_name, quantity) SELECT 'He' as chemical_name, 1000 as quantity FROM chemicals WHERE chemical_name = 'He' LIMIT 1;
SELECT MAX(exit_valuation) FROM investment_rounds INNER JOIN company ON investment_rounds.company_id = company.id WHERE company.industry = 'sustainability';
SELECT material, MAX(co2_emissions) as max_emissions FROM sustainable_materials GROUP BY material;
SELECT SUM(revenue) as total_revenue FROM MOVIE_REVENUE WHERE language = 'Hindi' AND year IN (2019, 2020);
SELECT AVG(accuracy) FROM fair_models WHERE raised_issue = 1;
SELECT AVG(ua.duration) as avg_duration FROM UnionActivities ua JOIN UnionMembers um ON ua.union_member_id = um.id WHERE um.state = 'Illinois' AND um.years_in_union > 5;
SELECT laborer_name, project_id FROM construction_labor WHERE project_id IN (SELECT project_id FROM building_permit WHERE YEAR(permit_date) = 2022);
SELECT SUM(AmountDonated) FROM (SELECT AmountDonated FROM Donors WHERE DonorName IN (SELECT DonorName FROM Donors WHERE DonationDate >= DATEADD(year, -1, GETDATE()) GROUP BY DonorName HAVING COUNT(*) > 1) GROUP BY DonorName);
SELECT name, COUNT(*) as article_count FROM article_authors WHERE section = 'sports' AND publish_date BETWEEN '2020-01-01' AND '2020-12-31' GROUP BY name ORDER BY article_count DESC LIMIT 5;
SELECT COUNT(DISTINCT animals.id) AS total_animals FROM animals INNER JOIN habitats ON animals.id = habitats.animal_id INNER JOIN regions ON habitats.location = regions.name WHERE regions.name = 'African Savannah';
SELECT AVG(p.price) as avg_price FROM Products p WHERE p.category = 'Hair Care' AND p.vegan = true;
SELECT factor, SUM(amount) as total_investment FROM esg_factors WHERE country = 'Colombia' GROUP BY factor ORDER BY total_investment DESC LIMIT 1;
SELECT country, water_usage FROM asian_water_usage WHERE country IN (SELECT country FROM asian_water_usage GROUP BY country ORDER BY SUM(water_usage) DESC LIMIT 2) ORDER BY year;
SELECT COUNT(*) FROM articles INNER JOIN journalists ON articles.journalist_id = journalists.id WHERE journalists.is_freelance = TRUE AND articles.year = 2020;
SELECT country, SUM(waste_produced) FROM waste_by_mining WHERE country IN ('United States', 'China') AND mining_type = 'coal' GROUP BY country;
SELECT MIN(price) as min_price FROM wind.wind_plants WHERE capacity >= 50;
SELECT Fabrics.FabricName, Stock.Quantity FROM Fabrics INNER JOIN Stock ON Fabrics.FabricID = Stock.FabricID WHERE Fabrics.IsSustainable = TRUE;
SELECT route_id, origin, destination, SUM(revenue) as total_revenue FROM freight_forwarding GROUP BY route_id, origin, destination ORDER BY total_revenue DESC LIMIT 3;
SELECT MAX(Players.Age) FROM Players JOIN PlayerGameLibrary ON Players.PlayerID = PlayerGameLibrary.PlayerID JOIN GameLibrary ON PlayerGameLibrary.GameID = GameLibrary.GameID WHERE Players.Country = 'Japan' AND GameLibrary.GameType = 'Non-VR';
SELECT c.name FROM city c WHERE c.id IN (SELECT m.city_id FROM mayor m WHERE m.community != 'White' AND m.year >= 2018 GROUP BY m.city_id HAVING COUNT(DISTINCT m.year) = 3)
SELECT COUNT(*) FROM japanfarms WHERE country = 'Japan' AND disease_outbreak = true AND year = 2021;
SELECT AVG(impact_score) FROM investment JOIN investor ON investment.investor_id = investor.investor_id WHERE investor.country = 'Canada' AND strategy LIKE '%Education%';
SELECT SUM(funding_amount) FROM CulturalOrganizations WHERE country IN ('Brazil', 'Russia');
SELECT SUM(Points) FROM Seasons WHERE TeamName = (SELECT TeamName FROM Seasons WHERE SeasonID = (SELECT MAX(SeasonID) - 4 FROM Seasons)) AND SeasonID BETWEEN (SELECT MAX(SeasonID) - 4 FROM Seasons) AND (SELECT MAX(SeasonID) FROM Seasons)
INSERT INTO disasters (id, name, location, type, start_date, end_date) VALUES (1, 'Hurricane Katrina', 'New Orleans', 'Hurricane', '2005-08-29', '2005-09-30');
UPDATE port SET full_address = 'Australia, 100 King George Street' WHERE country = 'Australia';
SELECT * FROM ConstructionLaborStatistics WHERE state = 'New York' AND year = 2020;
SELECT MAX(span_length) FROM Bridge_Design;
SELECT (Obese / Total) * 100 FROM Obesity WHERE Country = 'Mexico';
DELETE FROM Menu WHERE price < 10;
SELECT SUM(incident_count) FROM southern_ocean_pollution WHERE report_year = 2019;
SELECT project_type, start_date FROM rural_projects WHERE region = 'Mindanao';
ALTER TABLE players ADD COLUMN date_joined DATETIME;
SELECT COUNT(*), skill_level FROM volunteers GROUP BY skill_level;
SELECT SUM(num_refineries) FROM terbium_refineries WHERE country IN ('India', 'South Africa');
SELECT SUM(Quantity) FROM BrandMaterials;
SELECT military_bases.country, SUM(military_bases.num_personnel) as total_personnel, SUM(CASE WHEN cybersecurity_incidents.year = 2020 THEN 1 ELSE 0 END) as total_incidents FROM military_bases LEFT JOIN cybersecurity_incidents ON military_bases.country = cybersecurity_incidents.country GROUP BY military_bases.country;
SELECT e.site_id, AVG(e.co2_emission_kg) as avg_co2_emission FROM co2_emission e GROUP BY e.site_id;
SELECT department, COUNT(incident_id) as unresolved_incidents FROM incidents WHERE incident_date >= DATEADD(year, -1, GETDATE()) AND incident_status = 'Open' GROUP BY department;
SELECT (SELECT COUNT(*) FROM patients WHERE diagnosis = 'asthma' AND residence = 'rural') / (SELECT COUNT(*) FROM patients WHERE residence = 'rural') AS rural_asthma_prevalence, (SELECT COUNT(*) FROM patients WHERE diagnosis = 'asthma' AND residence = 'urban') / (SELECT COUNT(*) FROM patients WHERE residence = 'urban') AS urban_asthma_prevalence;
UPDATE nursing_homes SET total_beds = 160 WHERE id = 2;
SELECT MIN(transaction_date) FROM transactions WHERE account_region = 'Middle East';
SELECT SUM(amount) FROM grant_amounts WHERE student_id IN (SELECT id FROM research_grants WHERE department = 'Sciences');
SELECT SUM(DonationAmount) FROM Donors WHERE DonorState = 'California' AND YEAR(DonationDate) = 2020 AND DonationType = 'Individual';
SELECT r.region_name, SUM(p.quantity_sold) as total_quantity_sold FROM regions r INNER JOIN products p ON r.region_id = p.region_id WHERE p.is_vegan = TRUE GROUP BY r.region_name;
SELECT number_of_ships FROM maritime_incidents WHERE region = 'South China Sea' AND incident_type = 'collision' AND year = 2019;
SELECT Country.Name, COUNT(Country.ArtistID) as ArtistCount FROM Country GROUP BY Country.Name;
SELECT SUM(grants.value) FROM grants WHERE grants.region = 'Canada' AND grants.type = 'rural infrastructure' AND grants.date >= '2010-01-01' AND grants.name LIKE '%Indigenous%';
SELECT SUM(items_quantity) FROM Shipment WHERE (source_country = 'Egypt' AND destination_country = 'Nigeria') OR (source_country = 'Nigeria' AND destination_country = 'Egypt') AND shipment_date NOT BETWEEN '2021-06-01' AND '2021-06-30';
SELECT COUNT(DISTINCT VesselName) FROM Vessels WHERE LoadingCapacity > 40000;
SELECT symbol, MAX(price) as max_price FROM digital_assets GROUP BY symbol;
SELECT race, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM health_insurance WHERE state = 'Texas') AS percentage FROM health_insurance WHERE state = 'Texas' AND no_insurance = TRUE GROUP BY race;
SELECT location, year, initiatives FROM circular_economy WHERE location = 'Germany' AND year >= 2017 ORDER BY year;
DELETE FROM attractions WHERE country = 'Brazil';
SELECT SUM(quantity_kg) FROM materials_inventory WHERE is_recycled = true;
SELECT MachineID, SUM(TIMESTAMPDIFF(HOUR, StartTime, EndTime)) / (SELECT SUM(TIMESTAMPDIFF(HOUR, StartTime, EndTime)) FROM MachineProduction WHERE MachineProduction.MachineID = Machines.ID AND MachineProduction.StartTime >= '2020-07-01' AND MachineProduction.StartTime < '2020-10-01') * 100 AS Percentage FROM Machines WHERE MachineID IN (SELECT MachineID FROM MachineProduction WHERE MachineProduction.StartTime >= '2020-07-01' AND MachineProduction.StartTime < '2020-10-01') GROUP BY MachineID;
SELECT ((capacity - (SELECT capacity FROM landfill_capacity l2 WHERE l2.name = 'Landfill B' AND l2.year = 2018)) / (SELECT capacity FROM landfill_capacity l3 WHERE l3.name = 'Landfill B' AND l3.year = 2018)) * 100 FROM landfill_capacity WHERE name = 'Landfill B' AND year = 2020;
SELECT SUM(hectares) FROM forests INNER JOIN animals ON forests.id = animals.forest_id WHERE forests.country = 'Africa' AND animals.species = 'Koala';
SELECT project_name, SUM(budget_allocated) as total_budget_spent FROM Projects WHERE YEAR(start_date) = 2022 GROUP BY project_name;
INSERT INTO international_visitor_statistics (id, country, year, visitor_count) VALUES (1, 'China', 2022, 20000000);
SELECT COUNT(volunteer_name) FROM volunteers WHERE project_name = 'Habitat Restoration' AND MONTH(participation_date) BETWEEN 7 AND 9;
SELECT AVG(num_workouts_per_day) FROM (SELECT date, COUNT(*) AS num_workouts_per_day FROM workouts JOIN members ON workouts.member_id = members.member_id GROUP BY date) AS subquery;
SELECT MIN(wage) FROM Wages WHERE country = 'Indonesia' AND industry = 'Garment'; SELECT COUNT(*) FROM Wages WHERE country = 'Indonesia' AND industry = 'Garment' AND wage < (SELECT MIN(wage) FROM Wages WHERE country = 'Indonesia' AND industry = 'Garment');
SELECT AVG(claim_amount) FROM claims JOIN policyholders ON claims.policyholder_id = policyholders.id WHERE policyholders.state = 'New York';
DELETE FROM athlete_wellbeing WHERE wellbeing_program = 'Yoga';
SELECT SUM(Budget) FROM Programs WHERE Category IN ('Arts', 'Environment');
SELECT oil_production FROM offshore_oil_production WHERE location IN ('Gulf of Mexico', 'North Sea')
SELECT country, SUM(quantity) AS total_quantity, SUM(sales) AS total_revenue FROM sales_q2_2022 WHERE sale_date >= '2022-04-01' AND sale_date < '2022-07-01' GROUP BY country;
SELECT COUNT(DISTINCT v.volunteer_id) as total_volunteers FROM volunteers v JOIN nonprofit_events ne ON v.city = ne.city JOIN events e ON ne.event_id = e.event_id JOIN nonprofits n ON ne.nonprofit_id = n.nonprofit_id WHERE n.sector = 'environment';
SELECT ProductName, SUM(Quantity) AS TotalQuantity FROM Shipments WHERE ShippedDate BETWEEN DATEADD(month, -1, GETDATE()) AND GETDATE() GROUP BY ProductName;
SELECT R.RestaurantName, S.SustainabilityPercentage, SUM(R.RevenueAmount) AS TotalRevenue FROM Restaurants R INNER JOIN Revenue RV ON R.RestaurantID = RV.RestaurantID INNER JOIN Sustainability S ON R.RestaurantID = S.RestaurantID WHERE RV.RevenueDate BETWEEN '2021-01-01' AND '2021-01-31' GROUP BY R.RestaurantName, S.SustainabilityPercentage;
DELETE FROM fans WHERE age > 60;
SELECT m.Name, COUNT(a.Id) as Total FROM Manufacturers m JOIN Aircraft a ON m.Id = a.ManufacturerId WHERE a.ProductionYear = 2020 GROUP BY m.Name;
SELECT country, SUM(amount) as total_amount FROM carbon_offsets GROUP BY country;
SELECT country, COUNT(DISTINCT contract_id) AS num_contracts FROM defense_contracts_by_country GROUP BY country;
SELECT type, SUM(value) AS Total_Programs FROM (SELECT location, type, 1 AS value FROM programs WHERE start_date <= CURDATE() AND end_date >= CURDATE()) AS subquery GROUP BY type;
SELECT MIN(start_date) FROM projects WHERE continent = 'Asia';
SELECT (year - 1) DIV 10 * 10 AS decade, COUNT(*) FROM traditional_art_2 WHERE year >= 1900 GROUP BY decade;
SELECT SUM(budget) FROM Policy WHERE city_id = 3 AND category = 'Transportation';
SELECT id, campaign_name, start_date, end_date, budget, region, NTILE(4) OVER (ORDER BY budget DESC) as quartile FROM campaigns;
SELECT name FROM community_members WHERE language = 'Language2' AND engagement = (SELECT MIN(engagement) FROM community_members WHERE language = 'Language2')
SELECT MIN(Experience) FROM RolePlayers WHERE GamesPlayed > 15;
SELECT AVG(Budget), ServiceName FROM PublicServices WHERE State = 'California' AND AllocationDate >= DATEADD(year, -2, GETDATE()) GROUP BY ServiceName ORDER BY AVG(Budget) DESC;
SELECT diagnoses.condition, patients.country FROM diagnoses JOIN patients ON diagnoses.patient_id = patients.id GROUP BY diagnoses.condition, patients.country ORDER BY COUNT(*) DESC LIMIT 3;
SELECT COUNT(DISTINCT customer_id) FROM (SELECT customer_id FROM purchases p JOIN customers c ON p.customer_id = c.customer_id WHERE c.local_supplier = TRUE INTERSECT SELECT customer_id FROM purchases p JOIN customers c ON p.customer_id = c.customer_id WHERE c.overseas_supplier = TRUE);
SELECT AVG(amount_donated / donation_count) FROM donors WHERE country = 'India';
INSERT INTO climate_finance (id, funding_source, country, amount) VALUES (1, 'Bilateral', 'Kenya', 25000);
SELECT country, MAX(quantity) as max_daily_silver FROM silver_mine WHERE num_employees > 30 AND country = 'Australia' GROUP BY country;
SELECT city_id, MAX(price) - MIN(price) as price_difference FROM properties GROUP BY city_id;
SELECT name FROM space_telescopes ORDER BY primary_mirror_m DESC LIMIT 1;
SELECT COUNT(*) FROM (SELECT team1 as team FROM matches WHERE goals1 >= 3) UNION (SELECT team2 as team FROM matches WHERE goals2 >= 3);
SELECT AVG(word_count) FROM articles WHERE category = 'category2'
SELECT Plant_Name, MAX(Daily_Usage) FROM Water_Treatment_Plants WHERE State = 'Texas' GROUP BY Plant_Name;
SELECT COUNT(*) FROM volunteers WHERE joined_date BETWEEN '2020-01-01' AND '2020-12-31' AND underrepresented_community = true AND country = 'Canada';
SELECT conditions.condition_name, COUNT(treatments.condition_id) AS treatment_count FROM conditions INNER JOIN treatments ON conditions.condition_id = treatments.condition_id WHERE treatments.patient_id IN (SELECT patient_id FROM patients WHERE patients.state = 'New York') GROUP BY conditions.condition_name ORDER BY treatment_count DESC LIMIT 5;
SELECT AVG(total_disasters) FROM (SELECT location, COUNT(*) AS total_disasters FROM disasters GROUP BY location, year) AS disaster_counts GROUP BY location;
SELECT state, (veteran_count::FLOAT / total_employees) * 100 AS percentage FROM veteran_employment;
SELECT country, COUNT(DISTINCT spacecraft_model) as total_spacecraft_launched FROM space_missions GROUP BY country;
SELECT ProviderName, COUNT(ProgramID) as ProgramCount FROM ProvidersForMultipleDisabilities WHERE DisabilityType = 'multiple disabilities' GROUP BY ProviderName ORDER BY ProgramCount DESC LIMIT 3;
SELECT name FROM asia_accommodations WHERE sustainability_score IN (SELECT MAX(sustainability_score) FROM asia_accommodations) LIMIT 3;
SELECT ethnicity, AVG(heart_rate) as avg_heart_rate FROM wearable_data w JOIN member_demographics m ON w.member_id = m.member_id WHERE membership_type = 'Gold' GROUP BY ethnicity;
UPDATE Donations SET amount = 100.00 WHERE user = 'Jane';
SELECT MIN(yield) FROM farm WHERE region = 'Amazonian forests' AND crop = 'cassava';
SELECT well_type, SUM(oil_prod + gas_prod) FROM production JOIN wells ON production.well_id = wells.well_id WHERE wells.location = 'Canada' GROUP BY well_type;
SELECT AVG(DATEDIFF(CURDATE(), dob)/365) AS avg_age  FROM members  WHERE YEAR(join_date) = 2022;
SELECT region, SUM(amount) as total_donation FROM donations WHERE donation_date BETWEEN '2022-07-01' AND '2022-09-30' GROUP BY region;
SELECT city_name, adoption_date FROM smart_cities WHERE budget > 15000000 AND location = 'Asia';
SELECT SUM(revenue) FROM company_sales WHERE sustainable_materials = TRUE;
INSERT INTO machines (id, model, manufacturing_country, year) VALUES (301, 'CNC Milling Machine', 'Japan', 2018);
SELECT COUNT(*) FROM animal_population WHERE animal_region = 'Africa';
SELECT AVG(salary) FROM employees WHERE department = 'Marketing';
SELECT causes.name, AVG(volunteers.age) as avg_age FROM causes JOIN volunteers ON causes.id = volunteers.cause_id GROUP BY causes.name;
INSERT INTO virtual_tour_pricing (id, attraction_id, price) VALUES (1, 1, 19.99);
SELECT HOUR(incident_date) as hour, COUNT(*) as total_incidents FROM security_incidents GROUP BY hour;
SELECT SUM(population) FROM marine_species_pacific WHERE region = 'Pacific';
SELECT location, SUM(total_cost) as total_cost, ROW_NUMBER() OVER (PARTITION BY location ORDER BY SUM(total_cost) DESC) as rn FROM infrastructure_projects GROUP BY location ORDER BY total_cost DESC;
SELECT AVG(age) FROM viewers WHERE region = 'Southeast';
DELETE FROM labor_rights_advocacy WHERE action = 'Protest';
SELECT p.category, SUM(s.revenue) FROM sales s INNER JOIN products p ON s.product_id = p.product_id WHERE s.sale_date >= DATEADD(month, -1, GETDATE()) GROUP BY p.category;
SELECT region, crop, COUNT(*) OVER (PARTITION BY region, crop) AS count FROM farm_activities;
SELECT country, industry, severity, COUNT(*) as num_incidents FROM incidents WHERE industry = 'textile' AND country = 'Bangladesh' AND incident_date > DATE_SUB(CURDATE(), INTERVAL 2 YEAR) GROUP BY country, industry, severity;
SELECT location, COUNT(DISTINCT hotel_id) as total_hotels FROM hotel_listings WHERE location IN ('Europe', 'Asia') GROUP BY location
SELECT actor_id, COUNT(*) as successful_attacks FROM attack_results WHERE success = true AND timestamp >= DATE_SUB(NOW(), INTERVAL 6 MONTH) GROUP BY actor_id ORDER BY successful_attacks DESC LIMIT 2;
SELECT h.city, COUNT(DISTINCT h.hotel_id) AS hotel_count, SUM(b.booking_id) AS booking_count FROM hotels h LEFT JOIN bookings b ON h.hotel_id = b.hotel_id GROUP BY h.city;
SELECT AVG(severity) FROM vuln_assessments WHERE date_discovered > NOW() - INTERVAL 1 MONTH;
SELECT trade, RANK() OVER (ORDER BY hours DESC) FROM oregon_labor;
SELECT Disease, State, COUNT(*) AS Total FROM Patients WHERE Disease IN ('Influenza', 'Pneumonia') GROUP BY Disease, State;
SELECT SUM(num_members) FROM union_stats WHERE avg_safety_incidents > (SELECT AVG(num_safety_incidents) FROM union_stats);
SELECT COUNT(*) FROM mobile_subscribers WHERE international_calls = TRUE;
SELECT EnergyEfficiency.Country, AVG(EnergyEfficiency.Score) AS Average_Score FROM EnergyEfficiency WHERE EnergyEfficiency.Country IN ('Japan', 'South Korea', 'China', 'India') AND EnergyEfficiency.Year = 2022 GROUP BY EnergyEfficiency.Country ORDER BY Average_Score DESC LIMIT 3;
SELECT ArtistID, Name FROM Artists WHERE Nationality = 'Japan';
SELECT AVG(price) FROM green_cars WHERE type = 'Compact';
SELECT AVG(patients.age) FROM patients INNER JOIN diseases ON patients.id = diseases.patient_id WHERE patients.rural = true AND diseases.name = 'Diabetes';
SELECT SUM(tickets_sold) FROM events WHERE category = 'Music';
SELECT crop_name, MAX(price) FROM Crop_Prices JOIN Market_Location ON Crop_Prices.id = Market_Location.crop_price_id JOIN Markets ON Market_Location.market_id = Markets.id WHERE Markets.location = 'Mexico' AND price_date > DATE_SUB(CURDATE(), INTERVAL 6 MONTH) GROUP BY crop_name;
SELECT MIN(price) FROM neodymium_prices WHERE country = 'China' AND year >= 2018;
DELETE FROM shipment WHERE warehouse_id = (SELECT id FROM warehouse WHERE city = 'Rio de Janeiro') AND (SELECT name FROM carrier WHERE id = shipment.carrier_id) = 'Brazil' AND shipped_date < '2022-02-01';
SELECT COUNT(DISTINCT CASE WHEN renewal_date IS NOT NULL THEN policyholder_id END) / COUNT(DISTINCT policyholder_id) * 100 AS retention_rate FROM policies WHERE state = 'FL' AND age > 50;
SELECT org_id, SUM(donation_amount) AS total_donations FROM donation WHERE EXTRACT(YEAR FROM donation_date) = EXTRACT(YEAR FROM CURRENT_DATE) GROUP BY org_id ORDER BY total_donations DESC LIMIT 5;
SELECT AVG(players.age) FROM players INNER JOIN events ON players.country = 'USA' AND events.date >= DATEADD(month, -3, GETDATE()) AND players.id = events.id;
SELECT COUNT(*) as num_posts FROM posts JOIN users ON posts.user_id = users.id WHERE users.country = 'Germany' AND posts.post_date >= CURDATE() - INTERVAL 7 DAY;
SELECT type, status, COUNT(*) as num_completed_not_evaluated FROM CommunityDevelopment WHERE status = 'completed' AND evaluation_date IS NULL GROUP BY type;
UPDATE Equipment SET Status = 'Inactive' WHERE Status = 'Decommissioned';
SELECT SUM(ms.worker_count) as total_workers FROM manufacturing_sector ms WHERE ms.country IN ('Nigeria', 'South Africa') AND ms.industry = 'Manufacturing';
SELECT country, subscriber_type, COUNT(*) as subscriber_count FROM subscriber_data GROUP BY country, subscriber_type;
SELECT name FROM country ORDER BY initiatives DESC;
SELECT AVG(response_time) FROM emergency_calls;
SELECT DATEPART(QUARTER, HireDate) as Quarter, COUNT(*) as NewHires FROM Employees WHERE HireDate BETWEEN DATEADD(YEAR, -1, GETDATE()) AND GETDATE() GROUP BY DATEPART(QUARTER, HireDate);
SELECT ethnicity, AVG(mental_health_score) OVER (PARTITION BY ethnicity ORDER BY date ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as avg_score FROM student_mental_health;
SELECT tool, score FROM tool WHERE category = 'AI' AND score = (SELECT MAX(score) FROM tool WHERE category = 'AI');
SELECT COUNT(*) FROM concerts JOIN artists ON concerts.artist_id = artists.artist_id WHERE artists.genre = 'Electronic' AND concerts.country IN ('Nigeria', 'South Africa', 'Egypt', 'Morocco', 'Kenya') AND concerts.timestamp >= '2019-01-01' AND concerts.timestamp < '2022-01-01';
SELECT teacher_region, SUM(course_completed) FROM teacher_professional_development GROUP BY teacher_region;
SELECT state, AVG(workers) FROM hospitals GROUP BY state;
SELECT worker_id, language, years_experience, COUNT(*) OVER(PARTITION BY language, years_experience) as count FROM community_health_workers;
SELECT region, AVG(sessions) as avg_sessions FROM cultural_competency_training WHERE year IN (2020, 2021) GROUP BY region;
DELETE FROM conservation_efforts WHERE name = 'Polar Bear Protection';
SELECT c.name, c.annual_revenue FROM Cultural_Heritage_Sites c WHERE c.location = 'Tokyo, Japan';
SELECT AVG(salary) FROM basketball_players WHERE salary > (SELECT AVG(salary) FROM basketball_players);
SELECT AVG(age) FROM Patients WHERE trial_name = 'TrialA';
SELECT name FROM engineering_projects WHERE type = 'Bioprocess Engineering' AND partners LIKE '%South America%';
SELECT AVG(salary) FROM workers WHERE sector = 'Renewable Energy';
SELECT COUNT(*) FROM the_guardian UNION ALL SELECT COUNT(*) FROM new_york_times;
UPDATE battery_storage SET capacity = 1500 WHERE id = 2001;
SELECT gd.gene_sequence FROM genetic_data gd INNER JOIN biosensor_funding bf ON gd.sample_id = bf.sample_id WHERE bf.funding_amount > 300000;
DELETE FROM regulatory_compliance WHERE regulation_id = 201;
INSERT INTO courses (course_id, course_name, num_completions) VALUES (12345, 'Python for Educators', 50); UPDATE professional_development pd SET pd.course_id = 12345 WHERE EXISTS (SELECT * FROM teachers t JOIN courses c ON t.teacher_id = pd.teacher_id WHERE c.course_id = 12345 AND pd.course_id != 12345);
SELECT WasteGeneration.area, WasteGeneration.amount FROM WasteGeneration LEFT JOIN Population ON WasteGeneration.area = Population.district WHERE Population.population >= 100000 OR Population.district IS NULL;
SELECT author, SUM(word_count) as total_word_count FROM articles GROUP BY author ORDER BY total_word_count DESC LIMIT 3
SELECT AVG(household_size) FROM household_data WHERE city = 'Toronto';
DELETE FROM neodymium_production WHERE name = 'Company Y' AND YEAR(production_date) = 2020;
SELECT students.state, COUNT(DISTINCT open_pedagogy_resources.id) as resources_accessed FROM students INNER JOIN resource_access ON students.id = resource_access.student_id INNER JOIN open_pedagogy_resources ON resource_access.resource_id = open_pedagogy_resources.id GROUP BY students.state;
SELECT AVG(Change) FROM TemperatureChange WHERE Year BETWEEN 2012 AND 2021;
SELECT Year, Mineral, COUNT(*) as Number_of_Sites FROM Sites_Over_Time GROUP BY Year, Mineral;
SELECT continent, SUM(revenue) FROM hotels GROUP BY continent;
SELECT COUNT(*) FROM Employees WHERE Department = 'Mining Operations';
SELECT AVG(capacity) FROM renewable_energy_plants WHERE country = 'USA';
SELECT SUM(size) FROM properties WHERE city = 'Chicago' AND build_year < 2000 AND inclusive = true;
SELECT plant, SUM(cost) FROM Production WHERE production_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) GROUP BY plant
SELECT * FROM climate_projects WHERE funding_source = 'Private Investment';
SELECT species, animal_count FROM animal_population WHERE species NOT IN (SELECT species FROM animal_population WHERE endangered_status = 'endangered');
SELECT country, RANK() OVER (ORDER BY tourists DESC) AS rank FROM TotalTourists2020 WHERE country IN ('Canada', 'Brazil', 'Russia');
SELECT year, COUNT(*), SUM(amount) FROM climate_adaptation_projects GROUP BY year;
SELECT COUNT(*) FROM Defense_Project_Timelines WHERE region = 'Europe' AND start_year <= 2019 AND end_year >= 2021 AND delayed = true;
SELECT AVG(Water_Temperature) FROM Salmon_Farms;
SELECT SUM(disbursal_amount) FROM Loans WHERE leader_gender = 'Female' AND YEAR(disbursal_date) = 2020 AND country = 'Rwanda';
INSERT INTO movie_ratings (user_id, movie_id, rating) VALUES (1, 123, 4.5);
SELECT 'Site A' AS Site, COUNT(*) FROM Site_A UNION ALL SELECT 'Site B', COUNT(*) FROM Site_B UNION ALL SELECT 'Site C', COUNT(*) FROM Site_C
SELECT resolution_team, AVG(resolution_time) as avg_resolution_time FROM security_incidents GROUP BY resolution_team;
SELECT system_type, ridership FROM (SELECT system_type, ridership, ROW_NUMBER() OVER (ORDER BY ridership DESC) AS rank FROM transportation WHERE system_type LIKE '%public%' AND year = 2022) AS subquery WHERE rank = 1 OR rank = 4;
SELECT cc.case_county, COUNT(dr.resolution_type) FROM civil_cases cc INNER JOIN dispute_resolution dr ON cc.case_id = dr.case_id GROUP BY cc.case_county;
SELECT COUNT(*) FROM canada_art WHERE artist IN (SELECT artist FROM canada_art WHERE type = 'Indigenous') AND museum IN (SELECT museum FROM canada_art WHERE type = 'Canadian');
SELECT department, SUM(issue_reported) as total_issues FROM FairnessIssues GROUP BY department;
SELECT athlete_name, sport, total_gold FROM athletes WHERE sport = 'Swimming' ORDER BY total_gold DESC LIMIT 1;
SELECT AVG(item_count) FROM city_deliveries WHERE EXTRACT(QUARTER FROM delivery_date) = 1 AND city = 'North America' GROUP BY delivery_date;
CREATE TABLE satellites (name TEXT, launch_date DATE, country TEXT, function TEXT);
SELECT DATE_TRUNC('quarter', sale_date) as quarter, SUM(sales_amount) FROM sales WHERE country = 'France' AND is_eco_friendly = true AND sale_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY quarter;
SELECT subscriber_id FROM activity WHERE last_activity_date IS NULL OR last_activity_date < DATE_SUB(CURRENT_DATE, INTERVAL 30 DAY);
SELECT DISTINCT machinery_type FROM machinery m1 WHERE NOT EXISTS (SELECT 1 FROM machinery m2 WHERE m1.machinery_type = m2.machinery_type AND m2.department != 'Engineering');
UPDATE Vessels SET Type = 'Passenger' WHERE Name = 'Sea Serpent';
SELECT Machines.MachineName, Machines.Department, Machines.LastMaintenance FROM Machines WHERE Machines.Department = 'Manufacturing' AND Machines.NextMaintenance BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY);
SELECT AVG(Visitors.Age) FROM Visitors INNER JOIN Attendance ON Visitors.VisitorID = Attendance.VisitorID INNER JOIN Exhibitions ON Attendance.ExhibitionID = Exhibitions.ExhibitionID WHERE Visitors.City IN ('Sydney', 'Melbourne');
SELECT species, (population_2020 - population_2019) as population_change FROM (SELECT species, MAX(CASE WHEN year = 2020 THEN population END) as population_2020, MAX(CASE WHEN year = 2019 THEN population END) as population_2019 FROM wildlife GROUP BY species) as population_changes;
SELECT COUNT(DISTINCT founder_id) FROM company WHERE industry = 'Retail'
SELECT COUNT(*) FROM financial_capability_programs WHERE country = 'Africa' AND launch_date >= DATEADD(year, -5, CURRENT_DATE);
SELECT SUM(sale_quantity * sale_price) AS total_revenue FROM sales JOIN products ON sales.product_id = products.product_id WHERE products.product_type = 'foundation' AND mineral_based = TRUE AND country = 'US' AND store != 'Sephora' AND sale_date BETWEEN '2022-07-01' AND '2022-09-30';
SELECT COUNT(*) FROM HealthcareProviders WHERE Location LIKE 'City%';
SELECT region, AVG(likes) as avg_likes FROM social_media GROUP BY region;
SELECT goals FROM player_stats WHERE player = 'Messi' AND year = 2019;
SELECT incident_type FROM safety_incidents WHERE vessel_id = 'VES003';
SELECT r.region_name, COUNT(c.initiative_id) FROM regions r INNER JOIN community_policing c ON r.region_id = c.region_id GROUP BY r.region_name;
SELECT SUM(donation_amount) FROM donors WHERE donor_type = 'individual';
DELETE FROM training_data2 WHERE algorithm = 'Neural Network';
SELECT COUNT(*) FROM journalists INNER JOIN articles ON journalists.journalist_id = articles.journalist_id WHERE journalists.journalist_type = 'independent' AND country IN ('France', 'Germany', 'Italy');
SELECT event_name, COUNT(*) FROM PolicyAdvocacyEvents GROUP BY event_name;
SELECT coowner_count, SUM(square_footage) as total_sqft FROM properties WHERE coowner_count >= 2 GROUP BY coowner_count ORDER BY total_sqft DESC;
UPDATE museums SET virtual_tour_price = 15 WHERE name = 'Tokyo National Museum' AND city = 'Tokyo';
SELECT SUM(posts.comments) AS total_comments FROM posts WHERE posts.hashtags LIKE '%#mentalhealthawareness%';
SELECT sector, AVG(esg_score) AS avg_esg_score, ROW_NUMBER() OVER (ORDER BY AVG(esg_score) DESC) AS sector_rank FROM company GROUP BY sector ORDER BY avg_esg_score DESC, sector_rank;
SELECT name FROM dishes ORDER BY calories LIMIT 1;
SELECT title FROM TV_Shows WHERE season_1_episodes > 10;
SELECT Plant, AVG(Waste_Amount) AS Avg_Waste_Per_Day, RANK() OVER (ORDER BY AVG(Waste_Amount) DESC) AS Rank FROM Waste_Production WHERE Waste_Date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY Plant;
SELECT bus_stops.* FROM bus_stops WHERE bus_stops.issues IS NULL AND bus_stops.city = 'Santiago';
SELECT SUM(funding) FROM infrastructure_funding WHERE region = 'Luzon' AND project_id IN (SELECT id FROM rural_projects WHERE project_type = 'Rural Infrastructure');
SELECT system_name, ridership, year FROM public_transportation_2 WHERE year > 2020 AND ridership < 0.8 * (SELECT ridership FROM public_transportation_2 WHERE system_id = system_id AND year = 2020);
SELECT SUM(num_accessible_tech_initiatives) FROM Areas WHERE population > 20000 AND type = 'rural';
SELECT d.dept_name, g.grant_type, SUM(g.grant_amount) AS total_funding FROM departments d INNER JOIN grants g ON d.dept_id = g.dept_id GROUP BY d.dept_name, g.grant_type;
SELECT SUM(amount) FROM Donations WHERE country = 'USA' AND donation_date >= '2021-01-01' AND donation_date < '2021-04-01';
SELECT SUM(transactions.price) FROM transactions JOIN products ON transactions.product_id = products.product_id WHERE products.recyclable = TRUE;
SELECT COUNT(transaction_id) FROM algorand_transactions WHERE timestamp >= NOW() - INTERVAL '1 week';
SELECT game_category, SUM(revenue) as total_revenue FROM game_sales WHERE sale_date BETWEEN '2022-04-01' AND '2022-06-30' GROUP BY game_category;
INSERT INTO investment_rounds (id, company_id, funding_amount) VALUES (6, 4, 2500000);
SELECT AVG(length) FROM songs JOIN releases ON songs.id = releases.song_id WHERE release_year > 2010;
SELECT COUNT(id) as total_articles, AVG(word_count) as avg_word_count   FROM articles;
SELECT AVG(age) FROM Trees;
DELETE FROM Music_Artists WHERE country = 'United States';
SELECT AVG(income) FROM income_data WHERE indigenous_status = 'yes' AND location = 'urban';
SELECT region, COUNT(*) FROM IndigenousCommunities GROUP BY region;
SELECT event_name, AVG(ticket_price) as avg_ticket_price, SUM(ticket_price * num_tickets) as total_revenue FROM concerts GROUP BY event_name;
SELECT COUNT(*) FROM educational_programs WHERE location = 'South America' AND YEAR(launch_date) >= 2017;
SELECT program, budget FROM MilitaryTech WHERE division IN ('Army', 'Navy');
INSERT INTO satellite_image_analysis (field_id, image_quality, image_timestamp) VALUES (8, 90, '2023-04-01');
DELETE FROM transactions WHERE digital_asset = 'ABC' AND YEAR(transaction_date) = 2022;
SELECT l.line_name, c.container_type, SUM(c.revenue) as total_revenue FROM cargo c JOIN shipping_lines l ON c.line_id = l.line_id GROUP BY l.line_id, c.container_type ORDER BY total_revenue DESC LIMIT 3;
SELECT project_name FROM energy_projects WHERE completion_year < (SELECT adoption_year FROM smart_city_projects ORDER BY adoption_year ASC LIMIT 1);
SELECT COUNT(*) FROM PassengerVessels WHERE SafetyInspections > 0 AND Region = 'Caribbean' AND LastInspection >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);
SELECT SUM(budget), site_name FROM heritage_sites WHERE location LIKE '%%Africa%%' GROUP BY site_name;
SELECT COUNT(ProjectID) FROM SustainableProjects WHERE State = 'CA';
SELECT AVG(rating) FROM building_energy WHERE city IN ('New York', 'Chicago');
SELECT COUNT(*) FROM wind_projects WHERE location LIKE '%Africa%' AND start_date >= DATE_SUB(CURDATE(), INTERVAL 2 YEAR);
SELECT SUM(TotalDonations) FROM (SELECT DonorID, SUM(DonationAmount) AS TotalDonations FROM Donations JOIN Donors ON Donations.DonorID = Donors.DonorID WHERE Donations.DonationDate > DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND DonorID IN (SELECT DonorID FROM Donors GROUP BY DonorID HAVING COUNT(*) > 1) GROUP BY DonorID);
SELECT SUM(attendee_count) FROM theater_performances WHERE attendee_disability = true AND performance_date BETWEEN '2021-10-01' AND '2021-12-31';
SELECT AVG(avg_depth) FROM marine_protected_areas;
SELECT COUNT(DISTINCT dispensary) FROM DispensarySales WHERE state = 'Colorado' AND strain_type = 'Sativa';
SELECT SUM(runtime) FROM music_video WHERE artist = 'Beyoncé';
SELECT section, COUNT(*) FROM articles WHERE newspaper = 'The New York Times' AND publish_date >= '2022-01-01' AND publish_date < '2022-02-01' GROUP BY section;
SELECT station_id, COUNT(*) as wheelchair_accessible_stations, SUM(parking_spaces) as total_parking_spaces FROM accessibility WHERE parking_spaces > 20 AND wheelchair_accessible = true GROUP BY station_id;
SELECT country, COUNT(*) as brand_count FROM FashionBrands WHERE years_in_business < 5 GROUP BY country ORDER BY brand_count ASC LIMIT 3;
SELECT champion, AVG(deaths) as avg_deaths_per_match, RANK() OVER (ORDER BY AVG(deaths) DESC) as rank FROM lolgames GROUP BY champion
SELECT COUNT(home_team_player_assists + away_team_player_assists) AS total_assists FROM american_matches;
SELECT category, AVG(price) AS avg_price FROM products WHERE ethically_sourced = true GROUP BY category;
SELECT ManufacturingCountry, AVG(Mass) FROM Spacecraft WHERE PropulsionSystem = 'Chemical Rocket' GROUP BY ManufacturingCountry;
SELECT 'California' AS state, location, SUM(count) AS total_clinics FROM california_legal_aid GROUP BY location UNION ALL SELECT 'Texas' AS state, location, SUM(count) AS total_clinics FROM texas_legal_aid GROUP BY location;
UPDATE union_members SET membership_count = membership_count + 20 WHERE union_id = '001';
SELECT MAX(caloricContent) FROM FoodItems INNER JOIN GroceryStores ON FoodItems.name = GroceryStores.name;
SELECT MAX(cost) FROM device_cost_north_america WHERE country = 'North America';
UPDATE course_offerings SET semester = 'Spring 2023' WHERE course_name = 'Data Literacy for Teachers';
SELECT AVG(calories) FROM meals WHERE type = 'vegan' AND state = 'Texas' AND date BETWEEN '2021-07-01' AND '2021-09-30';
SELECT fabric_type FROM fabrics_sourced WHERE sustainability_rating >= 8;
SELECT MAX(temperature) FROM crop;
SELECT transaction_category, SUM(transaction_value) as total_value FROM transactions WHERE transaction_date BETWEEN '2021-01-01' AND '2021-03-31' GROUP BY transaction_category;
SELECT Gender, AVG(Age) as Average_Age, COUNT(*) as Employee_Count FROM Employees GROUP BY Gender;
SELECT Amount FROM Transport WHERE City = 'Mumbai' AND Year = 2020 AND Category = 'Public Transportation';
SELECT district_id, COUNT(*) FILTER (WHERE gender = 'Female') / COUNT(*) FILTER (WHERE gender = 'Male') as gender_ratio FROM student_demographics GROUP BY district_id ORDER BY district_id, gender_ratio;
SELECT max_depth FROM oceans WHERE name = 'Arctic Ocean';
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM songs WHERE rank <= 100)) FROM songs WHERE artist LIKE '%Asia%' AND rank <= 100;
SELECT SUM(h.quantity + c.quantity) FROM haiti_relief h, colombia_relief c WHERE h.supply_type = c.supply_type;
SELECT AVG(Age) FROM Players WHERE FavoriteGenre = 'Simulation' AND VRPossible = true;
SELECT team_id, SUM(CASE WHEN result = 'Win' THEN 1 ELSE 0 END) AS wins, SUM(CASE WHEN result = 'Loss' THEN 1 ELSE 0 END) AS losses FROM games GROUP BY team_id;
SELECT state, COUNT(*) as num_hospitals FROM hospitals GROUP BY state ORDER BY num_hospitals DESC;
SELECT COUNT(*) FROM Support_Programs WHERE region = 'Midwest' AND EXTRACT(YEAR FROM start_date) = 2019 AND EXTRACT(YEAR FROM end_date) = 2019;
SELECT r.region_name, COUNT(m.subscriber_id) as mobile_subscribers, COUNT(b.subscriber_id) as broadband_subscribers FROM regions r LEFT JOIN mobile_subscribers m ON r.region_id = m.region_id LEFT JOIN broadband_subscribers b ON r.region_id = b.region_id GROUP BY r.region_name;
SELECT AVG(ArtistAge) AS AvgFemaleArtistAge FROM ArtistDemographics WHERE ArtistGender = 'Female';
SELECT country, COUNT(*) as program_count FROM lifelong_learning_programs WHERE year = 2021 GROUP BY country;
SELECT researcher_name FROM explainable_ai_researchers ORDER BY num_papers DESC LIMIT 1 OFFSET 1;
SELECT d.drug_name FROM drugs d JOIN sales s ON d.drug_id = s.drug_id WHERE d.approval_status = 'Approved' AND d.market_availability = 'Available in EU' AND s.country != 'UK' GROUP BY d.drug_name;
SELECT AVG(carbon_offsets) FROM renewable_energy_infrastructure WHERE region = 'North America';
SELECT COUNT(*) FROM fleet;
SELECT SUM(price * tickets_sold) FROM TicketSales WHERE event_type = 'Concert' AND location = 'Indoor Arena' AND ticket_type = 'VIP' AND date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 DAY);
SELECT Deliveries.* FROM Deliveries INNER JOIN Items ON Deliveries.item_id = Items.item_id WHERE Deliveries.country = 'Syria' AND Deliveries.delivery_date BETWEEN '2022-01-01' AND '2022-12-31' AND Items.item_name LIKE '%medical%';
SELECT name, price FROM menu_items WHERE menu_item_id IN (SELECT restaurant_id FROM restaurants) GROUP BY name, price HAVING COUNT(DISTINCT restaurant_id) = (SELECT COUNT(DISTINCT restaurant_id) FROM restaurants);
SELECT ArtistName, SUM(ArtworkCount) AS TotalArtworks FROM ArtCollection GROUP BY ArtistName ORDER BY TotalArtworks DESC LIMIT 5;
SELECT SUM(NumberOfProviders) FROM SouthAmericanMentalHealth WHERE Country IN ('Argentina', 'Chile') AND Location LIKE '%Rural Area%' AND ProviderType IN ('Psychiatrist', 'Psychologist', 'Social Worker', 'Counselor');
SELECT year, SUM(CO2_emissions) FROM ShippingEmissions GROUP BY year;
INSERT INTO public_health_policy_analysis_v2 (id, policy_name, impact_score) VALUES (4, 'Policy B', 87);
DELETE FROM strategy WHERE region_id = (SELECT id FROM region WHERE name = 'Middle East');
SELECT SUM(CASE WHEN Transactions.Service = 'Workout' THEN Transactions.Amount ELSE 0 END) AS WorkoutRevenue, AVG(Transactions.Amount) AS AverageSpending FROM Members INNER JOIN Transactions ON Members.MemberID = Transactions.MemberID WHERE Members.Gender = 'Male' AND Members.Region = 'Texas';
SELECT Country, SUM(Hours) as TotalHours FROM Volunteers WHERE QUARTER(VolunteerDate) = 2 GROUP BY Country ORDER BY TotalHours DESC LIMIT 3;
SELECT role, (COUNT(*) FILTER (WHERE ethnicity = 'Indigenous')) * 100.0 / COUNT(*) FROM workers GROUP BY role;
SELECT MIN(donation) FROM donors WHERE region = 'Middle East';
SELECT ports.name FROM ports INNER JOIN cargo_handling ON ports.id = cargo_handling.port_id WHERE ports.region = 'Atlantic' AND cargo_type = 'Perishable' AND tonnage > 5000 AND cargo_handling.handling_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY ports.name HAVING COUNT(DISTINCT cargo_type) > 1;
SELECT chemical.name, MAX(emission_log.emission_amount) FROM chemical JOIN emission_log ON chemical.chemical_id = emission_log.chemical_id WHERE chemical.name IN (SELECT name FROM chemical WHERE state = 'Oregon') GROUP BY chemical.name;
UPDATE employees SET role = 'senior employee' WHERE id = 3;
SELECT SUM(satellites) FROM SatelliteLaunches WHERE country = 'China' AND year BETWEEN 2015 AND 2020;
SELECT region, assessment FROM geopolitical_risk WHERE region IN ('Middle East', 'Africa') AND half = 2 AND year = 2023;
SELECT SUM(weight) FROM shipments WHERE origin_region = 'Southeast Asia' AND destination_continent = 'Oceania';
SELECT COUNT(p.PermitID) as NumPermitsIssued FROM Permits p WHERE p.Year = 2020 AND p.Status = 'Issued';
SELECT SUM(quantity) FROM fabric_usage WHERE sustainability_rating >= 80;
SELECT day, MAX(usage) FROM water_usage WHERE customer_type = 'Residential' AND city = 'New York City' AND year = 2020;
INSERT INTO donations (id, donor_id, donation_date, amount) VALUES (4, 5, '2022-03-15', 200.00);
SELECT AVG(donation_amount) FROM country_donations WHERE EXTRACT(YEAR FROM donation_date) = 2020 GROUP BY donor_id;
SELECT v.name, AVG(DATEDIFF(i2.inspection_date, i.inspection_date)) as avg_time_between_inspections FROM inspections i JOIN inspections i2 ON i.vessel_id = i2.vessel_id AND i.id < i2.id JOIN vessels v ON i.vessel_id = v.id GROUP BY v.name;
SELECT AVG(num_incidents) FROM (SELECT COUNT(*) AS num_incidents, incident_date FROM criminal_incidents WHERE city = 'London' GROUP BY incident_date) AS daily_incidents;
SELECT severity, COUNT(*) as num_impacts FROM drought_impact GROUP BY severity;
SELECT COUNT(*) FROM users WHERE region = 'Asia' AND followers > 1000;
SELECT MIN(CO2Sequestered) FROM MitigationSequestration WHERE Location = 'Asia';
SELECT AVG(daily_consumption) FROM Households WHERE city = 'New York City';
SELECT organizations.name, SUM(accessible_tech_patents.patents) as total_patents FROM organizations INNER JOIN accessible_tech_patents ON organizations.id = accessible_tech_patents.organization_id GROUP BY organizations.name ORDER BY total_patents DESC LIMIT 3;
SELECT d.dish_name, c.category_name, d.waste_percentage FROM dish d JOIN category c ON d.category_id = c.category_id WHERE d.waste_percentage > 0.15;
SELECT orbit_type, COUNT(*) as satellite_count FROM satellite_database GROUP BY orbit_type ORDER BY satellite_count DESC LIMIT 3;
SELECT AVG(avg_speed) FROM Auto_Show WHERE vehicle_type = 'Electric';
SELECT AVG(revenue) FROM revenue WHERE region = 'Asia';
SELECT * FROM National_Security WHERE budget > 3000000;
SELECT MAX(budget) FROM digital_divide_projects WHERE continent = 'Europe';
SELECT AVG(DATEDIFF('day', start_date, end_date)) as avg_duration FROM campaigns WHERE country = 'Japan';
SELECT StoreCountry, ProductType, SUM(QuantitySold) as TotalQuantitySold FROM StoreSales S JOIN Products P ON S.ProductID = P.ProductID WHERE P.ProductType = 'Eco-friendly Tops' AND StoreCountry = 'Brazil' AND SaleDate BETWEEN '2024-01-01' AND '2024-03-31' GROUP BY StoreCountry, ProductType;
DELETE FROM heritage_site WHERE site_id IN (1, 3, 5);
SELECT DISTINCT PH.Name FROM Policyholders PH JOIN Policy P ON PH.PolicyholderID = P.PolicyholderID WHERE P.Active = TRUE GROUP BY PH.Name HAVING COUNT(P.PolicyID) > 1;
SELECT DISTINCT algorithm_name FROM bias_evaluations WHERE biased = TRUE;
SELECT country, MIN(num_ambulances) FROM ambulances GROUP BY country;
SELECT p.program_type FROM programs p INNER JOIN organizations o ON p.organization_name = o.name WHERE o.type = 'Non-Profit' AND o.location = 'United States';
SELECT d.district_name, c.crime_type, SUM(c.crime_count) FROM districts d INNER JOIN crimes c ON d.district_id = c.district_id GROUP BY d.district_name, c.crime_type;
UPDATE farmers_market_vendors SET organic = 1 WHERE state = 'NY';
SELECT ConsumerName, COUNT(*) AS ProductCount FROM ConsumerPreference CP INNER JOIN Consumers C ON CP.ConsumerID = C.ConsumerID WHERE CP.Country = 'Mexico' GROUP BY ConsumerName ORDER BY ProductCount DESC LIMIT 3;
SELECT name, agency, missions, RANK() OVER (PARTITION BY agency ORDER BY missions DESC) as mission_rank FROM Astronauts WHERE gender = 'Female';
SELECT spacecraft, AVG(COUNT(*)) as avg_daily_encounters FROM spacecraft_meteoroids GROUP BY spacecraft;
SELECT t.territory, COUNT(h.id) AS num_hospitals, COUNT(c.id) AS num_clinics, COUNT(h2.id) AS num_hospitals_with_helipad FROM hospitals h INNER JOIN clinics c ON h.territory = c.territory INNER JOIN hospitals h2 ON h.territory = h2.territory AND h2.has_helipad = true GROUP BY t.territory;
SELECT DISTINCT g.genre_name, c.country_name FROM genre g INNER JOIN artist a ON g.genre_id = a.genre_id INNER JOIN country c ON a.country_id = c.country_id;
SELECT organizations.org_name, COUNT(donations.donation_id) AS total_donations FROM organizations LEFT JOIN donations ON organizations.org_id = donations.org_id GROUP BY organizations.org_name;
SELECT type, COUNT(*) as count, RANK() OVER (ORDER BY COUNT(*) DESC) as rank FROM digital_assets WHERE region = 'EU' GROUP BY type;
SELECT COUNT(*) FROM (SELECT student_id, (LAG(score) OVER(PARTITION BY student_id ORDER BY date) - score) / LAG(score) OVER(PARTITION BY student_id ORDER BY date) * 100.0 as decrease_percentage FROM student_mental_health_history WHERE date >= DATEADD(month, -3, GETDATE())) t WHERE decrease_percentage > 5;
SELECT genre, SUM(viewers) FROM tv_show GROUP BY genre;
SELECT EXTRACT(MONTH FROM CT.transport_time) as month, COUNT(DISTINCT CT.vessel_id) as vessels_count FROM CargoTransports CT JOIN VesselTypes VT ON CT.vessel_id = VT.id WHERE VT.vessel_type = 'Liquefied Natural Gas Carrier' AND CT.transport_time > '2021-01-01' AND CT.transport_time < '2022-01-01' AND CT.latitude BETWEEN 10 AND 25 AND CT.longitude BETWEEN -90 AND -55 GROUP BY month;
SELECT country, SUM(revenue) AS total_revenue FROM Sales WHERE order_date BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY country;
SELECT borough, MAX(budget) FROM budget_allocations WHERE category = 'Libraries' GROUP BY borough;
SELECT donors.name, SUM(donations.amount) FROM donors INNER JOIN donations ON donors.id = donations.donor_id WHERE donors.cause_area IN ('disaster relief', 'housing') GROUP BY donors.name;
WITH upd_data AS (UPDATE peacekeeping_operations SET status = 'Completed' WHERE id = 1 RETURNING *) UPDATE peacekeeping_operations SET status = 'Completed' WHERE id IN (SELECT id FROM upd_data);
SELECT MAX(ad_revenue) FROM ads WHERE platform = 'Facebook' AND MONTH(ad_date) = 4 AND YEAR(ad_date) = 2021 AND user_id IN (SELECT user_id FROM users WHERE category = 'brand' AND post_count > 15);
SELECT MAX(daily_transaction_volume) FROM frontier_markets.digital_assets;
SELECT COUNT(*) FROM market_access WHERE quarter IN (3, 4) AND year = 2018;
SELECT COUNT(*) as sourcing_records FROM sourcing WHERE restaurant_id = (SELECT restaurant_id FROM restaurants WHERE name = 'Restaurant V');
SELECT organizations.organization_name FROM organizations INNER JOIN donations ON organizations.id = donations.organization_id INNER JOIN donors ON donations.donor_id = donors.id WHERE donors.donor_city = 'San Francisco';
SELECT * FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY operation_start_date DESC) as rn FROM PeacekeepingOperations WHERE organization = 'UN' AND operation_start_date >= DATEADD(year, -5, CURRENT_DATE)) x WHERE rn = 1;
SELECT supplier, AVG(delivery_time) as avg_delivery_time FROM deliveries GROUP BY supplier ORDER BY avg_delivery_time DESC LIMIT 1;
SELECT AVG(age) FROM musicians WHERE city IN ('New Orleans', 'Chicago') AND genre = 'jazz';
SELECT AVG(points) FROM (SELECT points FROM team_scores WHERE team_id = 2 AND game_date >= (SELECT MAX(game_date) FROM team_scores WHERE team_id = 2) - INTERVAL '180 days' ORDER BY game_date DESC LIMIT 5) AS subquery;
SELECT department, SUM(budget) as total_budget FROM department_budget WHERE year IN (2019, 2020) GROUP BY department;
SELECT country, COUNT(*) patent_count FROM bioprocess.patents GROUP BY country ORDER BY patent_count DESC LIMIT 2;
SELECT DonorName FROM Donations INNER JOIN (SELECT VolunteerName FROM VolunteerPrograms WHERE ProgramID = 3) AS Volunteers ON 1=1 WHERE DonationAmount > 500;
SELECT category, COUNT(*) as num_violations FROM policy_violations WHERE violation_date >= DATE_SUB(CURDATE(), INTERVAL 1 WEEK) GROUP BY category;
SELECT AVG(max_speed) FROM mars_rovers;
SELECT player_name, SUM(assists) as total_assists FROM players GROUP BY player_name ORDER BY total_assists DESC LIMIT 1;
SELECT MIN(budget) FROM initiatives WHERE region = 'Africa' AND name LIKE '%accessible%';
SELECT aircraft.model, SUM(safety_records.incident_count) FROM aircraft INNER JOIN safety_records ON aircraft.aircraft_id = safety_records.aircraft_id GROUP BY aircraft.model;
SELECT Location, COUNT(*) as NumberOfProjects, STRING_AGG(Name, ', ') as CompletedProjects FROM PublicWorksProjects WHERE Status = 'Completed' GROUP BY Location;
INSERT INTO Departments (DepartmentID, DepartmentName, EmployeesCount) VALUES (1, 'HR', 100), (2, 'IT', 200), (3, 'Finance', 50), (4, 'Marketing', 75), (5, 'Legal', 150), (6, 'Sales', 125), (7, 'Diversity and Inclusion', 5);
SELECT MAX(speed) FROM vessel_performance WHERE location = 'Mediterranean Sea' AND timestamp BETWEEN '2021-09-01' AND '2021-09-30';
SELECT ocean, year, COUNT(*) FROM research_projects WHERE ocean IN ('Arctic', 'Southern') GROUP BY ocean, year;
SELECT DATEPART(YEAR, DonationDate) as Year, DATEPART(MONTH, DonationDate) as Month, COUNT(DISTINCT DonorID) as NewDonors FROM Donations WHERE DonationDate >= DATEADD(YEAR, -1, GETDATE()) GROUP BY DATEPART(YEAR, DonationDate), DATEPART(MONTH, DonationDate) ORDER BY Year, Month;
SELECT country, AVG(total_words/num_articles) as avg_word_count FROM Countries GROUP BY country ORDER BY avg_word_count DESC LIMIT 1;
UPDATE workplace_safety SET total_incidents = total_incidents + 1 WHERE facility_id BETWEEN 40 AND 50;
SELECT MAX(orbital_speed) FROM satellite_orbits WHERE orbit_type = 'Geostationary';
SELECT SUM(revenue) as total_revenue, SUM(co2_emissions) as total_co2_emissions FROM products WHERE is_circular_supply_chain = TRUE;
UPDATE carbon_pricing SET price = 30 WHERE country = 'Germany' AND year = 2025;
SELECT AVG(budget) FROM MilitaryBudget WHERE region = 'Asia-Pacific' AND budget >= 200000000;
SELECT vessel_name FROM port_of_houston WHERE dock_month = 8 EXCEPT (SELECT vessel_name FROM port_of_new_orleans WHERE dock_month >= 8 UNION SELECT vessel_name FROM port_of_miami WHERE dock_month >= 8);
SELECT COUNT(*) FROM economic_diversification_efforts WHERE country = 'Peru' AND start_year >= 2015 AND end_year <= 2019 AND initiated = 1;
SELECT name, provider FROM virtual_tours WHERE country = 'Portugal';
SELECT DATE_FORMAT(transaction_date, '%Y-%m-%d') AS transaction_date, SUM(transaction_value) AS total_value FROM transactions WHERE region = 'North America' AND transaction_date BETWEEN '2022-03-01' AND '2022-03-31' GROUP BY transaction_date;
SELECT AVG(revenue/100) FROM cult_tours WHERE country = 'Greece' AND YEAR(tour_date) = 2021;
SELECT year, SUM(biomass) AS total_biomass FROM fish_biomass WHERE region = 'Arctic Ocean' GROUP BY year;
SELECT i.Country, h.SiteName, e.EventName FROM CountryInfo i JOIN HeritageSites h ON i.Country = h.Country JOIN CommunityEngagement e ON i.Country = e.Country;
SELECT player_name, home_runs FROM mlb_players ORDER BY home_runs DESC;
SELECT COUNT(DISTINCT type) FROM space_debris;
SELECT ArtistID, MAX(SellingPrice) as HighestSellingPrice FROM Artwork WHERE Continent = 'Americas' GROUP BY ArtistID ORDER BY HighestSellingPrice DESC LIMIT 3;
SELECT program_id, AVG(donation_amount) as avg_donation FROM donations WHERE QUARTER(donation_date) = 1 AND YEAR(donation_date) = 2021 GROUP BY program_id;
SELECT condition_id, AVG(improvement_score) OVER (PARTITION BY condition_id ORDER BY follow_up_date ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as rolling_avg FROM patient_outcomes;
SELECT Countries.country_name, SUM(Violations.violation_count) FROM Violations INNER JOIN Countries ON Violations.country_id = Countries.country_id GROUP BY Countries.country_name;
SELECT species, SUM(population) FROM Sharks WHERE species != 'Great White' GROUP BY species;
SELECT author, topic, COUNT(*) FROM news_articles GROUP BY author, topic;
SELECT AVG(balance) FROM clients WHERE country = 'Japan';
UPDATE aircraft SET status = CASE  WHEN flight_hours > 15000 THEN 'high_mileage'  WHEN DATEDIFF(year, purchase_date, GETDATE()) > 10 THEN 'old'  ELSE 'active'  END;
SELECT AVG(savings) FROM savings WHERE state = 'California';
SELECT AVG(AverageSpeed) FROM Spacecrafts WHERE Manufacturer = 'Galactic Spacecraft Inc.'
UPDATE military_bases SET status = 'active' WHERE base_name = 'Ramstein';
SELECT COUNT(*) FROM schools WHERE city = 'New York City' AND public = true;
SELECT SUM(biomass) FROM FarmH WHERE species='Salmon';
SELECT COUNT(DISTINCT trimmed_design_elements) FROM (SELECT REGEXP_SPLIT_TO_TABLE(design_elements, ',') AS trimmed_design_elements FROM games WHERE rating >= 9) AS split_design_elements;
INSERT INTO organizations (id, name, type, country) VALUES (1, 'Accessible AI', 'Non-profit', 'USA');
SELECT MAX(max_temperature) FROM temperature_mexico WHERE month = 7;
SELECT suppliers.name, MAX(supplier_items.price) AS max_price FROM supplier_items INNER JOIN suppliers ON supplier_items.supplier_id = suppliers.id GROUP BY suppliers.id ORDER BY max_price DESC LIMIT 3;
SELECT region_id, name, COUNT(*) as total_disasters FROM natural_disasters nd JOIN regions r ON nd.region_id = r.region_id WHERE date >= CURDATE() - INTERVAL 6 MONTH GROUP BY region_id, name;
SELECT COUNT(*) FROM SpaceMissions WHERE company IN ('SpaceX', 'Blue Origin', 'Virgin Galactic') AND year = 2021;
SELECT MIN(age) FROM audience_demographics WHERE gender = 'Non-binary';
SELECT district, COUNT(*) FROM Carbon_Offset_Initiatives GROUP BY district;
SELECT ai_technology, COUNT(*) as num_use_cases FROM creative_use_cases GROUP BY ai_technology;
SELECT GameDesign.Genre, MAX(Players.Playtime) as MaxPlaytime FROM GameDesign INNER JOIN Players ON Players.GamePreference = GameDesign.Genre GROUP BY GameDesign.Genre;
SELECT program, COUNT(*) FROM Volunteers WHERE program = 'Feed the Hungry' GROUP BY program HAVING COUNT(*) > 10;
SELECT SUM(value) FROM defense_contracts WHERE company = 'ABC Corp' AND date BETWEEN '2020-04-01' AND '2020-06-30';
SELECT state, AVG(usage) FROM pacific_water_usage GROUP BY state;
SELECT SUM(amount) FROM donations WHERE donation_country = 'Brazil' AND QUARTER(donation_date) = 1 AND YEAR(donation_date) = 2021;
SELECT MAX(max_depth) FROM species;
SELECT COUNT(*) FROM aircraft_manufacturing WHERE manufacturer = 'Brazil' AND production_year BETWEEN 2010 AND 2020 AND production_year != 2015;
SELECT period, COUNT(*) FROM Collections_Period WHERE city = 'Amsterdam' GROUP BY period;
SELECT COUNT(*) FROM trains WHERE station = 'Victoria';
 SELECT genre, MAX(followers) as max_followers FROM artists GROUP BY genre;
SELECT COUNT(*) FROM digital_assets WHERE network = 'Ethereum';
SELECT AVG(waste_amount) FROM waste_generation WHERE city = 'Seattle' AND sector = 'Residential'
SELECT COUNT(*) FROM climate_communication WHERE location LIKE 'Africa%' AND year BETWEEN 2015 AND 2018 AND type = 'Communication';
SELECT type, AVG(temperature) FROM crop GROUP BY type;
SELECT MIN(temperature) FROM ocean_temperatures WHERE ocean = 'Atlantic Ocean';
SELECT home_stadium_id AS stadium_id, COUNT(*) AS total_games FROM nba_games GROUP BY home_stadium_id UNION ALL SELECT away_stadium_id, COUNT(*) FROM nba_games GROUP BY away_stadium_id;
SELECT DISTINCT company_name FROM Collective_Bargaining WHERE union_agreement_status = 'Inactive';
SELECT SUM(number_of_employees) FROM labor_stats WHERE (state = 'Florida' OR state = 'Georgia') AND occupation = 'Construction laborer';
SELECT SUM(Amount) FROM Budget WHERE Year = 2021 AND Category = 'Environmental Protection';
SELECT name, COUNT(*) as total_articles FROM articles JOIN news_agency ON articles.agency_id = news_agency.id GROUP BY name;
SELECT dc.Country, COUNT(*) as DiplomacyCount FROM DefenseDiplomacy d JOIN DiplomacyCountries dc ON d.Country = dc.Country WHERE d.EventDate BETWEEN DATEADD(year, -7, GETDATE()) AND GETDATE() GROUP BY dc.Country ORDER BY DiplomacyCount DESC;
SELECT (COUNT(*) FILTER (WHERE type = 'theft')) * 100.0 / COUNT(*) FROM crimes WHERE location IN ('downtown', 'westside') AND report_date BETWEEN '2021-08-01' AND '2021-08-31';
SELECT SUM(Amount) FROM Funding WHERE FundingSource = 'Government';
DELETE FROM mental_health_parity WHERE parity_law IS NULL;
SELECT COUNT(*) FROM (SELECT * FROM boeing_defense_projects UNION ALL SELECT * FROM raytheon_defense_projects) AS combined_projects;
SELECT COUNT(Exhibition1.visitor_id) - COUNT(Exhibition2.visitor_id) AS difference FROM Exhibition1 LEFT JOIN Exhibition2 ON Exhibition1.visitor_id = Exhibition2.visitor_id;
SELECT team, player, MAX(points) FROM points JOIN games ON points.game_id = games.id WHERE games.game_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY team, player;
SELECT AVG(sustainability_rating) FROM products WHERE product_category = 'makeup' AND country = 'Germany';
SELECT location, SUM(production_rate) AS Total_Production_Rate FROM well_production WHERE measurement_date >= DATEADD(month, -1, GETDATE()) GROUP BY location
SELECT COUNT(DISTINCT city) FROM programs WHERE program = 'Feeding America';
SELECT MAX(timeline) FROM Project_Timelines WHERE is_sustainable = TRUE;
SELECT SUM(cost) FROM InfrastructureProjects WHERE category = 'Roads';
SELECT employee_name FROM employees WHERE salary > (SELECT AVG(salary) FROM employees);
SELECT country, SUM(Terbium_imported) AS total_Terbium, COUNT(DISTINCT importer_id) AS unique_importers FROM imports WHERE YEAR(datetime) = 2018 AND Terbium_imported IS NOT NULL AND country LIKE 'Africa%' GROUP BY country;
SELECT Programs.Name FROM Programs LEFT JOIN Volunteers ON Programs.ProgramID = Volunteers.ProgramID WHERE Programs.Budget > 5000 AND Volunteers.ProgramID IS NULL;
UPDATE satellites SET name = 'Vanguard 1R' WHERE satellite_id = 3;
SELECT supplier_id, COUNT(*) FROM products WHERE price < (SELECT AVG(price) FROM products) GROUP BY supplier_id ORDER BY COUNT(*) DESC;
SELECT MAX(safety_score) FROM models WHERE country = 'Australia';
SELECT AVG(tipping_fee) FROM landfill GROUP BY state;
SELECT SUM(votes_for) AS total_votes_for, SUM(votes_against) AS total_votes_against FROM laws;
SELECT COUNT(union_member_id) FROM Educators_Union WHERE safety_rating > 8;
SELECT yield FROM max_yield WHERE species_id = 1 AND zone_id = 1;
SELECT s.name as strain_name, c.state as cultivator_state, SUM(s.sales) as total_sales, AVG(s.potency) as average_potency FROM strains s INNER JOIN cultivators c ON s.cultivator_id = c.id WHERE c.state = 'Colorado' AND s.year = 2021 GROUP BY s.name, c.state;
SELECT sector, SUM(amount) as total_donated FROM donations WHERE sector = 'Education' AND donation_date >= DATE_SUB(NOW(), INTERVAL 12 MONTH) GROUP BY sector;
SELECT type, SUM(sales) as total_sales FROM materials WHERE country IN ('France', 'Germany') GROUP BY type;
SELECT animal_name, SUM(acres) FROM animal_habitat GROUP BY animal_name;
DELETE FROM emissions_reduction WHERE co2 = 0;
SELECT Exhibitions.name, COUNT(DISTINCT Digital_Interactions.visitor_id) FROM Exhibitions JOIN Visits ON Exhibitions.id = Visits.exhibition_id JOIN Digital_Interactions ON Visits.visitor_id = Digital_Interactions.visitor_id GROUP BY Exhibitions.name;
SELECT c.name, COUNT(vt.tour_id) as tour_count FROM cities c JOIN virtual_tours vt ON c.city_id = vt.city_id GROUP BY c.name ORDER BY tour_count DESC LIMIT 5;
SELECT AVG(price) FROM carbon_prices WHERE region = 'European Union' AND year = 2021;
SELECT SUM(CASE WHEN country IN ('Canada', 'France') THEN 1 ELSE 0 END) FROM Accommodations;
SELECT compound_name, production_quantity FROM ap_compounds WHERE region = 'Asia-Pacific' ORDER BY production_quantity DESC;
SELECT SUM(sales.quantity) FROM sales JOIN products ON sales.product_id = products.id WHERE products.category = 'Skincare' AND products.supplier_country = 'Canada' AND products.organic = TRUE AND sales.sale_date BETWEEN '2021-01-01' AND '2021-01-31';
SELECT SUM(population) FROM Habitat5 WHERE species IN (SELECT species FROM AnimalData3 WHERE order_class = 'Birds') AND habitat = 'Habitat5';
SELECT SUM(num_negotiations) FROM contract_negotiations WHERE company = 'Huntington Ingalls Industries' AND region = 'Africa' AND year IN (2019, 2020);
ALTER TABLE autonomous_vehicles ADD COLUMN price FLOAT;
SELECT s.student_id, COUNT(s.course_id) as num_courses_completed, DATEDIFF(MAX(s.course_completion_date), MIN(s.course_completion_date)) as days_since_first_course FROM students s GROUP BY s.student_id;
SELECT AVG(funding_amount) FROM investment_rounds ir INNER JOIN company c ON ir.company_id = c.id WHERE c.founder_identity = 'LGBTQ+' AND c.industry = 'E-commerce';
SELECT t1.year, MAX(t1.temperature) as max_temp, MIN(t1.temperature) as min_temp, AVG(t1.temperature) as avg_temp FROM temperature_by_year t1 GROUP BY t1.year;
DELETE FROM Staff WHERE StaffID = 4;
SELECT region, COUNT(*) as total_initiatives FROM ethical_ai_initiatives GROUP BY region ORDER BY total_initiatives DESC;
SELECT SUM(total_cost) FROM construction_projects WHERE city = 'Seattle' AND YEAR(project_start_date) = 2020;
SELECT name, country FROM Fair_AI_Companies WHERE employees < 100;
SELECT SUM(budget) FROM peacekeeping_operations WHERE YEAR(start_date) = 2022;
SELECT SUM(installed_capacity) FROM south_africa_solar WHERE country = 'South Africa';
INSERT INTO community_education (id, name, city, state, country) VALUES (1, 'GreenLife', 'San Juan', 'PR', 'Puerto Rico');
SELECT AVG(spend) as avg_spend FROM consumers WHERE country IN ('France', 'UK', 'Germany');
SELECT i.name, COUNT(*) as num_investments FROM investors i INNER JOIN investments inv ON i.id = inv.investor_id INNER JOIN startups s ON inv.startup_id = s.id WHERE s.industry = 'Healthcare' GROUP BY i.name ORDER BY num_investments DESC;
SELECT paper_name, author FROM fairness_papers WHERE conference = 'ACM FAccT'
SELECT COUNT(*) FROM regulatory_actions r JOIN smart_contracts s ON r.contract_id = s.contract_id WHERE s.region = 'Antarctic';
SELECT c.region, COUNT(*) FROM countries co JOIN incidents i ON co.id = i.country_id GROUP BY co.region;
CREATE VIEW fan_demographics AS SELECT fan_id, age, gender, city, state, country FROM fan_info WHERE state IN ('NY', 'CA', 'TX');
SELECT s.supplier_name, AVG(ABS(spc.product_price - spc.prev_price)) as avg_price_change FROM suppliers s INNER JOIN supplier_price_changes spc ON s.supplier_id = spc.supplier_id GROUP BY s.supplier_name ORDER BY avg_price_change DESC LIMIT 10;
SELECT SUM(credits) FROM latam_carbon_credits WHERE country = 'Argentina';
SELECT region, COUNT(*) FROM sensor WHERE region IN ('North', 'South') GROUP BY region;
SELECT SUM(shipped_qty) as total_shipped FROM packages WHERE origin_country = 'India' AND destination_country = 'USA' AND shipped_quarter = 2 AND shipped_year = 2022;
SELECT SUM(Quantity) FROM Orders JOIN Products ON Orders.ProductID = Products.ProductID WHERE Products.IsGlutenFree = true AND CustomerLocation = 'Texas';
SELECT SUM(production) FROM wells WHERE well_id = 'W003' AND YEAR(datetime) = 2021;
SELECT * FROM investments WHERE investor = 'Green Capital' AND sector = 'renewable energy';
UPDATE national_security_advisors SET advisor_status = 'Inactive' WHERE service_years > 10;
SELECT * FROM media_ethics WHERE LENGTH(description) > 50;
SELECT AVG(ROI) FROM ImpactInvestments WHERE Region = 'Africa';
INSERT INTO cosmetics.certifications (certification_id, certification_name, awarded_by) VALUES (4, '100% Vegan', 'CCF');
INSERT INTO dapps (name, category, platform) SELECT 'Axie Infinity', 'GameFi', 'Ethereum' WHERE NOT EXISTS (SELECT * FROM dapps WHERE name = 'Axie Infinity');
SELECT name, research_interest FROM professors WHERE gender = 'Female' AND department = 'Computer Science';
SELECT MIN(biomass) FROM whale_biomass WHERE location = 'Indian';
DELETE FROM users WHERE last_interaction < NOW() - INTERVAL 1 YEAR;
SELECT name FROM tv_shows WHERE rating > 7;
SELECT PolicyTypes.PolicyType, AVG(Claims.ClaimAmount) FROM PolicyTypes INNER JOIN Claims ON PolicyTypes.PolicyTypeID = Claims.PolicyTypeID GROUP BY PolicyTypes.PolicyType;
SELECT platform, popularity_index FROM social_media WHERE location = 'Spain' AND year = 2022 ORDER BY popularity_index DESC LIMIT 1;
SELECT COUNT(*) FROM research_grants WHERE YEAR(grant_date) = 2021;
SELECT launch_year, SUM(CASE WHEN mission_status = 'Success' THEN 1 ELSE 0 END) as successful_missions FROM space_missions GROUP BY launch_year;
SELECT COUNT(*) FROM government_meetings WHERE duration >= 60;
SELECT MAX(water_temp) FROM mollusk_farms WHERE type = 'Mollusk' AND record_date BETWEEN DATE('now', '-1 year') AND DATE('now');
SELECT COUNT(*) FROM CityH_Vehicles WHERE vehicle_type = 'Car' AND is_electric = true;
UPDATE creative_ai SET explainability_score = 75 WHERE model_name = 'modelB';
SELECT neighborhood, SUM(sqft) FROM property GROUP BY neighborhood;
SELECT name, AVG(DATEDIFF(launch_date, birth_date)) OVER (PARTITION BY name) as AvgAgeAtFirstMission FROM (SELECT name, birth_date, MIN(mission_id) as mission_id, launch_date FROM astronauts JOIN missions ON astronauts.mission_id = missions.id GROUP BY name, birth_date, launch_date) t;
SELECT platform, SUM(revenue) FROM ad_data GROUP BY platform;
SELECT country, COUNT(*) as operation_count FROM peacekeeping_operations GROUP BY country ORDER BY operation_count DESC LIMIT 1;
SELECT state, COUNT(*) * 100.0 / (SELECT SUM(population) FROM state_data) AS percentage FROM (SELECT patient.state FROM patient INNER JOIN treatment ON patient.patient_id = treatment.patient_id WHERE treatment.treatment_name = 'CBT' GROUP BY patient.state) AS cbt_states INNER JOIN state_data ON cbt_states.state = state_data.state;
SELECT VolunteerName FROM Volunteer JOIN VolunteerProgram ON Volunteer.VolunteerID = VolunteerProgram.VolunteerID WHERE ProgramDate >= DATEADD(week, -1, GETDATE());
SELECT COUNT(*) FROM members m JOIN wearables w ON m.id = w.member_id WHERE m.membership_type = 'Gym' AND w.device_type IS NOT NULL;
SELECT name FROM providers WHERE provider_id NOT IN (SELECT provider_id FROM incidents);
SELECT product_id, material FROM packaging WHERE recyclable = true ORDER BY LENGTH(material) DESC LIMIT 1;
SELECT COUNT(*) AS high_donors, SUM(donation_amount) AS total_high_donations FROM donors WHERE donation_amount > 1000.00 AND donation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR);
SELECT AVG(loans.financial_wellbeing_score) FROM loans WHERE loans.is_shariah_compliant = TRUE AND loans.id IN (SELECT loan_id FROM customers WHERE customers.city = 'Florida');
SELECT SUM(amount_saved) FROM mexico_water_savings WHERE year IN (2020, 2021);
SELECT SUM(workers) FROM Factories WHERE risk = 'high';
SELECT name, country, filed_date FROM engineering.patents WHERE country IN ('USA', 'Germany') GROUP BY name, country, filed_date ORDER BY filed_date DESC LIMIT 3;
SELECT fleet, SUM(naval_vessels_count) as total_naval_vessels FROM NavalVesselsFleets GROUP BY fleet;
SELECT gender, MAX(court_appearances) FROM defendants WHERE verdict >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) AND verdict IS NOT NULL GROUP BY gender;
SELECT Area, MapDate, Depth, ROW_NUMBER() OVER (PARTITION BY Area ORDER BY MapDate) as DepthRank FROM OceanFloorMapping WHERE Area = 'Indian Ocean'
SELECT Name, Contact FROM CommunityOrgs WHERE Program = 'Restorative Justice' AND ParticipationDate >= DATEADD(year, -2, GETDATE());
SELECT COUNT(*) FROM Members WHERE MONTH(JoinDate) = MONTH(GETDATE()) AND YEAR(JoinDate) = YEAR(GETDATE());
SELECT SUM(weight) FROM packages;
UPDATE Players SET Gender = 'Non-binary' WHERE PlayerID = 1;
SELECT COUNT(*) FROM community_development_projects WHERE region = 'South America' AND status = 'Completed';
SELECT project_category, SUM(num_volunteers) AS total_volunteers FROM projects WHERE volunteer_year IN (2022, 2023) GROUP BY project_category;
SELECT manufacturer, SUM(quantity) FROM Engine_Manufacturers GROUP BY manufacturer;
SELECT (COUNT(*) / (SELECT COUNT(*) FROM screenings WHERE date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) AND CURRENT_DATE AND gender = 'Male')) * 100 FROM screenings WHERE date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) AND CURRENT_DATE AND screening = 'Colonoscopy' AND gender = 'Male'
SELECT COUNT(DISTINCT country) FROM treatment_centers WHERE country IN ('Canada', 'Australia');
SELECT SUM(capacity) FROM geothermal_projects WHERE location LIKE '%Asia%';
SELECT COUNT(*) FROM tourists_visits WHERE city = 'Barcelona' AND visit_date >= DATEADD(month, -12, CURRENT_TIMESTAMP);
SELECT AVG(power_consumption) FROM machines WHERE category = 'molding';
SELECT status FROM language_preservation WHERE region = 'Antarctica';
SELECT origin_country, destination_continent, SUM(weight) as total_weight FROM shipments JOIN countries ON origin_country = country GROUP BY origin_country, destination_continent;
SELECT articles.title, authors.author_name, SUM(read_counts.read_count) FROM articles INNER JOIN authors ON articles.author_id = authors.author_id INNER JOIN read_counts ON articles.article_id = read_counts.article_id GROUP BY articles.title ORDER BY SUM(read_counts.read_count) DESC LIMIT 3;
SELECT SUM(*) FROM EmployeeData WHERE Sector = 'Technology' AND WeeklyHours > 45;
SELECT animal_species, SUM(spending) as total_spending FROM conservation_funding GROUP BY animal_species ORDER BY total_spending DESC LIMIT 5;
DELETE FROM auto_show_information WHERE show_name = 'Detroit Auto Show';
SELECT p.program_name, COUNT(DISTINCT pa.participant_id) AS unique_participants FROM education_programs p JOIN program_attendance pa ON p.program_id = pa.program_id GROUP BY p.program_name ORDER BY unique_participants DESC;
UPDATE peacekeeping SET status = 'Long-term' WHERE start_date < DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR) AND status != 'Long-term';
SELECT county FROM drought_impact WHERE state='Texas' AND year=2019 AND impact=TRUE;
SELECT SUM(market_cap) FROM digital_assets WHERE regulatory_status = 'Regulated';
SELECT products.name FROM products LEFT JOIN ingredient_suppliers ON products.product_id = ingredient_suppliers.product_id WHERE ingredient_suppliers.product_id IS NULL;
UPDATE labor_rights_advocacy SET advocacy_type = 'strike' WHERE advocacy_id = 3;
SELECT AVG(calories) FROM Meals WHERE name LIKE '%Organic%' AND country = 'Canada';
SELECT MAX(timestamp), light_level FROM greenhouse_sensors WHERE sensor_type = 'light' AND light_level IS NOT NULL;
SELECT MAX(avg_temp), MIN(avg_temp) FROM temperature WHERE year >= EXTRACT(YEAR FROM NOW()) - 5;
SELECT n.category, SUM(awc.word_count) as total_word_count FROM news_articles n JOIN article_word_count awc ON n.article_id = awc.article_id GROUP BY n.category;
SELECT SUM(financing_amount) FROM shariah_financing WHERE business_type = 'medium business' AND financing_date BETWEEN '2021-04-01' AND '2021-06-30';
SELECT organizations.name FROM organizations WHERE organizations.id IN (SELECT donations.org_id FROM donations JOIN donors ON donations.donor_id = donors.id WHERE donors.state = 'California') AND organizations.id NOT IN (SELECT donations.org_id FROM donations JOIN donors ON donations.donor_id = donors.id WHERE donors.state IN ('New York', 'Florida'));
SELECT name, type FROM disability_services.support_programs;
SELECT lead_country, COUNT(mission) FROM Peacekeeping_Lead WHERE start_date >= DATE(NOW()) - INTERVAL 10 YEAR GROUP BY lead_country ORDER BY COUNT(mission) DESC LIMIT 3;
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM hotels_africa)) AS percentage FROM hotel_ai WHERE ai = true AND region = 'Africa';
SELECT SUM(violation_count) FROM labour_productivity;
SELECT SUM(length) FROM Roads WHERE state = 'California';
SELECT project_name FROM renewable_energy WHERE project_id NOT IN (SELECT project_id FROM carbon_offsets WHERE renewable_energy.location = carbon_offsets.location);
SELECT m.country, m.spending FROM military_innovation m JOIN top_military_spenders t ON m.country = t.country ORDER BY m.spending DESC;
SELECT district_name, COUNT(*) AS count FROM districts d JOIN incidents i ON d.district_id = i.district_id WHERE i.incident_type = 'Fire' AND incident_date >= DATEADD(year, -1, GETDATE()) GROUP BY district_name ORDER BY count DESC;
SELECT volunteer_name, nonprofit_id, SUM(hours_volunteered) as total_hours FROM volunteers WHERE volunteer_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY volunteer_name, nonprofit_id ORDER BY total_hours DESC LIMIT 5;
UPDATE landfills SET capacity = 130000 WHERE name = 'Landfill A';
SELECT country, water_consumption FROM water_consumption WHERE fabric_type = 'Linen' ORDER BY water_consumption ASC LIMIT 1;
SELECT quarter, COUNT(*) FROM Volunteers WHERE hours > 5 GROUP BY quarter;
SELECT astronaut_name, medical_condition FROM astronaut_medical_2 WHERE mission = 'Moon-1';
SELECT c.capital, a.country, COUNT(a.id) as artist_count FROM artists_nma a JOIN countries c ON a.country = c.country GROUP BY a.country, c.capital;
SELECT year, SUM(total_waste) FROM waste_generation WHERE country IN ('Nigeria', 'South Africa', 'Egypt', 'Algeria', 'Morocco') GROUP BY year;
SELECT DISTINCT material_name FROM material_data WHERE country IN ('Canada', 'Germany') AND industry = 'Manufacturing';
SELECT military_innovation.country, COUNT(military_innovation.innovation_id) as innovation_count FROM military_innovation WHERE military_innovation.start_date >= DATE_SUB(CURDATE(), INTERVAL 10 YEAR) GROUP BY military_innovation.country ORDER BY innovation_count DESC LIMIT 3;
SELECT m.name, SUM(p.quantity * p.price) as total_revenue FROM Manufacturers m JOIN Production p ON m.id = p.manufacturer_id WHERE YEAR(p.production_date) = 2020 GROUP BY m.name;
SELECT museum_name, COUNT(*) as exhibitions_count FROM Exhibitions WHERE movement = 'Surrealist' GROUP BY museum_name;
UPDATE VESSEL_PERFORMANCE SET SPEED = 25 WHERE VESSEL_ID = 123;
UPDATE state_facts SET area_sq_miles = 54556 WHERE state = 'NY';
INSERT INTO sales (sale_date, drug_id, quantity) VALUES (DATE('2022-01-01') + INTERVAL FLOOR(RAND() * 365) DAY, (SELECT drug_id FROM drugs WHERE drug_name = 'DrugE'), 500)
SELECT PolicyType, SUM(ClaimAmount) FROM ClaimDetails WHERE PolicyType IN ('Auto', 'Home') GROUP BY PolicyType;
SELECT AVG(calories) FROM dishes WHERE is_organic = TRUE;
SELECT products.product_name, AVG(reviews.review_rating) AS avg_rating FROM products JOIN reviews ON products.product_id = reviews.product_id WHERE products.clean_beauty = true GROUP BY products.product_id ORDER BY avg_rating DESC LIMIT 3;
SELECT project_type, SUM(total_cost) FROM agricultural_innovation WHERE project_location LIKE 'Latin%' AND YEAR(start_date) = 2019 GROUP BY project_type;
SELECT dept_name, MAX(num_students) as max_enrollment FROM departments JOIN courses ON departments.dept_id = courses.dept_id GROUP BY dept_name;
SELECT COUNT(*) FROM sales_associates WHERE is_union_member = false;
SELECT agency.name, SUM(budget.amount) as total_budget FROM agency JOIN budget ON agency.id = budget.agency_id WHERE budget.year = 2022 GROUP BY agency.name;
SELECT D.DonorID, D.DonorName, SUM(D.Amount) FROM Donors D JOIN Donations DO ON D.DonorID = DO.DonorID WHERE DO.Field != 'Global Health' GROUP BY D.DonorID, D.DonorName ORDER BY SUM(D.Amount) DESC LIMIT 5;
SELECT DISTINCT crop_type FROM pest_data WHERE pest_incident >= DATE(NOW()) - INTERVAL 60 DAY;
SELECT COUNT(DISTINCT customers.id) FROM customers JOIN transactions ON customers.loan_id = transactions.id WHERE transactions.is_shariah_compliant = TRUE;
SELECT SUM(Transactions.Amount) FROM Transactions JOIN PlayerLocation ON Transactions.PlayerID = PlayerLocation.PlayerID WHERE PlayerLocation.Location IN ('Germany', 'France', 'UK', 'Italy', 'Spain') AND Transactions.TransactionYear = 2018;
SELECT SUM(co2_emission) FROM environmental_impact WHERE year = 2020;
SELECT * FROM mobile_subscribers WHERE billing_updated_date <= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);
SELECT max_sustainable_yield FROM pacificsalmon WHERE country = 'Canada' AND location = 'British Columbia';
SELECT media_type, COUNT(*) AS count FROM MediaTypes GROUP BY media_type;
SELECT country, AVG(hourly_wage) as avg_wage, COUNT(DISTINCT id) as worker_count FROM Workers JOIN Factories ON Workers.factory_id = Factories.id WHERE certification = 'fair_trade' GROUP BY country;
SELECT f.fabric_type, SUM(p.quantity) AS total_quantity FROM fabrics f INNER JOIN products p ON f.id = p.fabric_id WHERE f.is_sustainable = TRUE GROUP BY f.fabric_type;
SELECT MAX(package_weight) FROM package_weights WHERE shipped_from = 'France' AND shipped_to = 'Germany' AND shipped_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 WEEK);
SELECT country, SUM(quantity) FROM country_sustainable_chains WHERE sustainable_practices = TRUE GROUP BY country;
SELECT oil_production FROM daily_oil_production WHERE platform_id = 2 AND production_date BETWEEN '2020-03-01' AND '2020-03-03';
SELECT DISTINCT startup_country FROM biosensor_patents WHERE filing_date BETWEEN DATEADD(YEAR, -3, GETDATE()) AND GETDATE() AND startup_country IN ('Canada', 'Japan');
DELETE FROM cargo_handling WHERE port = 'New York';
SELECT Location, COUNT(*) as NumEvents FROM Event WHERE YEAR(EventDate) = 2021 AND EventName LIKE '%accessibility%' GROUP BY Location;
SELECT product, SUM(revenue) as total_revenue FROM cosmetics_sales WHERE sale_date BETWEEN '2022-01-01' AND '2022-01-31' AND product IN ('Cleanser', 'Moisturizer') GROUP BY product;
SELECT w.name, g.type, SUM(g.quantity) FROM Goods g JOIN Warehouses w ON g.warehouse_id = w.id GROUP BY w.id, g.type;
SELECT c.type, AVG(d.calories) AS avg_calories FROM cuisine c JOIN dishes d ON c.id = d.cuisine_id GROUP BY c.id ORDER BY avg_calories DESC LIMIT 2;
SELECT MAX(installed_capacity) FROM renewable_energy WHERE project_name LIKE '%solar%';
SELECT COUNT(*) FROM emergency_incidents WHERE state = 'TX';
SELECT SUM(donation_amount) FROM donors WHERE state IN ('California', 'Texas');
SELECT * FROM hotel_reservations WHERE hotel_id = 4;
UPDATE workplaces SET union_affiliation = 'Union C' WHERE id = 1;
SELECT MAX(water_depth) FROM arctic_fish;
SELECT COUNT(*) FROM contract_negotiations_un WHERE organization = 'United Nations';
SELECT * FROM materials WHERE circular = 'Yes';
INSERT INTO emergency_calls(id, location, month_year, emergency_type) VALUES (1, 'Seattle', '2021-10-01', 'medical'), (2, 'Seattle', '2021-10-02', 'fire'), (3, 'Seattle', '2021-10-03', 'police');
DELETE FROM tv_shows WHERE release_year < 2010;
SELECT AVG(installed_capacity) FROM renewable_energy_projects_north_america WHERE region = 'NorthAmerica';
SELECT MIN(capacity_mw) FROM projects WHERE type = 'biomass' AND status = 'operational';
SELECT provider_name, ROUND(hotels_served * 100.0 / (SELECT SUM(hotels_served) FROM ai_chatbot_providers WHERE region = 'MEA'), 2) AS market_share FROM ai_chatbot_providers WHERE region = 'MEA' AND provider_id IN (SELECT provider_id FROM (SELECT provider_id, RANK() OVER (ORDER BY hotels_served DESC) AS rank FROM ai_chatbot_providers WHERE region = 'MEA') sub WHERE rank <= 3);
SELECT AVG(annual_budget) FROM (SELECT DISTINCT annual_budget FROM smart_city_projects WHERE city IN ('Tokyo', 'Seoul', 'Hong Kong', 'Shanghai') ORDER BY annual_budget)
SELECT SUM(tickets_sold) FROM Concerts WHERE genre = 'classical' AND city = 'London';
SELECT EXTRACT(MONTH FROM ContractDate) AS Month, COUNT(*) FROM ContractMonths WHERE ContractDate BETWEEN '2020-01-01' AND '2020-12-31' GROUP BY Month ORDER BY Month;
SELECT region, SUM(count) FROM transportation_fleet GROUP BY region;
DELETE FROM waste WHERE waste_type = 'Plastic';
UPDATE Students SET Disability = 'Learning' WHERE StudentID BETWEEN 100 AND 200;
SELECT MIN(salary) FROM reporters WHERE city = 'Chicago';
SELECT MAX(Seats) FROM Vehicles WHERE Type = 'Minivan' AND Autonomous = TRUE;
SELECT SUM(I.Quantity) as TotalQuantity FROM Ingredients I JOIN Suppliers S ON I.SourceCountry = S.Country JOIN Products P ON I.ProductID = P.id JOIN ProductSafety PS ON P.id = PS.ProductID WHERE S.Country LIKE 'Lat%' AND PS.SafetyRating > 4.5;
SELECT disaster_name FROM disasters WHERE start_date BETWEEN '2015-01-01' AND '2016-12-31';
SELECT country, year, SUM(quantity) as total_quantity FROM sourcing WHERE fabric_type LIKE 'sustainable%' GROUP BY country, year;
SELECT AVG(Price) FROM Products WHERE Halal = 1;
SELECT MAX(max_speed) FROM high_speed_trains WHERE city = 'Beijing' AND train_type = 'public';
SELECT country, AVG(quantity) as avg_quantity, STDDEV(quantity) as stddev_quantity FROM SpacecraftComponents GROUP BY country;
SELECT AVG(annual_income) as median_income FROM (SELECT annual_income FROM offenders WHERE state = 'California' AND year = 2021 ORDER BY annual_income LIMIT 2 OFFSET 1) as subquery;
SELECT MAX(hectares) FROM Forest_Hectares WHERE forest_id IN (SELECT id FROM Forests WHERE country = 'India');
INSERT INTO voting_data (voter_id, name, age, state, registration_date) VALUES (54321, 'John Doe', 35, 'NY', '2021-12-31');
SELECT MAX(salary) FROM technology_workers WHERE industry = 'technology';
SELECT COUNT(*) FROM citizen_feedback WHERE feedback_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);
UPDATE cosmetics_ingredients SET safety_rating = 3 WHERE product IN (SELECT product FROM sulfate_shampoo);
SELECT conservation_status FROM fish_species WHERE species_name = 'bluefin tuna'
SELECT COUNT(DISTINCT users.id) AS total_unique_users FROM users JOIN likes ON users.id = likes.user_id JOIN posts ON likes.post_id = posts.id;
SELECT r.restaurant_id, r.restaurant_name FROM restaurants r JOIN inspections i ON r.restaurant_id = i.restaurant_id WHERE i.inspection_date >= DATEADD(month, -3, GETDATE()) AND i.violation_code IS NOT NULL;
SELECT * FROM properties WHERE city = 'Sydney' AND price > 2000000.00 AND coowner_count > 1;
SELECT country, AVG(expenditure) as avg_annual_expenditure FROM defense_expenditures GROUP BY country;
SELECT Name, SUM(DonationAmount) as TotalDonations FROM Donors GROUP BY Name ORDER BY TotalDonations DESC LIMIT 5;
SELECT country, COUNT(*) AS num_startups FROM Startups WHERE gender = 'Female' AND exit_strategy <> '' AND year >= 2012 GROUP BY country ORDER BY num_startups DESC LIMIT 3;
SELECT airline, accident_type, COUNT(*) as Total FROM accidents WHERE accident_date >= DATE_SUB(CURDATE(), INTERVAL 5 YEAR) GROUP BY airline, accident_type;
SELECT project_id, country, start_date, end_date FROM DefenseProjects WHERE DATEDIFF(end_date, start_date) > 730 AND country = 'Canada';
SELECT m.material_name, AVG(production_quantity) FROM Production p INNER JOIN Materials m ON p.material_id = m.material_id WHERE m.is_sustainable = true GROUP BY m.material_name;
SELECT r.name AS region_name, p.name AS provider_name, rs.name AS renewable_source_name, SUM(pg.power_generated) AS total_power_generated  FROM power_generation pg  JOIN renewable_source rs ON pg.source_id = rs.id  JOIN provider p ON rs.provider_id = p.id  JOIN region r ON p.region_id = r.id WHERE r.name = 'North' AND rs.name = 'Hydroelectric' AND pg.date BETWEEN '2021-10-01' AND '2021-12-31' GROUP BY r.name, p.name, rs.name;
SELECT COUNT(DISTINCT customers.customer_id) FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN organic_products ON orders.supplier_id = organic_products.supplier_id JOIN suppliers ON orders.supplier_id = suppliers.supplier_id WHERE suppliers.name = 'Farm Fresh Organics' AND organic_products.organic = true;
SELECT c.country_name, SUM(ff.quantity) as total_farmed_fish FROM countries c JOIN fish_farming ff ON c.country_id = ff.country_id GROUP BY c.country_name;
SELECT AVG(funding) FROM climate_finance_projects WHERE year = 2020;
SELECT (COUNT(*) FILTER (WHERE Ethnicity IN ('Asian', 'Black', 'Latino')) * 100.0 / COUNT(*)) AS Percentage FROM Employees WHERE Department = 'HR';
SELECT city, MIN(cnt) FROM (SELECT city, COUNT(*) AS cnt FROM japan_tech WHERE adoption_year BETWEEN 2018 AND 2020 GROUP BY city) AS subquery;
INSERT INTO funding_rounds (id, company_id, round_type, raised_amount) VALUES (4, 104, 'Seed', 500000), (5, 104, 'Series A', 2000000);
SELECT AVG(price) FROM sustainable_urbanism WHERE city = 'Los Angeles' AND co_owner_count > 1;
SELECT MIN(timeline_months) FROM Project_Timelines WHERE end_date IS NOT NULL AND country = 'France' AND end_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);
SELECT pct_drought_area FROM drought_impact WHERE country = 'India' AND year = 2020;
SELECT COUNT(*) FROM package_shipments WHERE shipped_from = 'Canada' AND shipped_to LIKE 'South%' AND shipped_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH);
SELECT hotels.name, SUM(otas.bookings) FROM otas INNER JOIN hotels ON otas.hotel_id = hotels.hotel_id WHERE hotels.category = 'Boutique' GROUP BY hotels.name;
SELECT SmartContracts.id FROM SmartContracts JOIN Companies ON SmartContracts.company_id = Companies.id WHERE Companies.id = 3 AND SmartContracts.execution_date >= '2021-10-01' AND SmartContracts.execution_date < '2021-11-01';
SELECT r.city, SUM(m.total_revenue) as total_revenue FROM restaurants r INNER JOIN menus m ON r.restaurant_id = m.restaurant_id WHERE MONTH(m.order_date) = 1 GROUP BY r.city;
SELECT MIN(fine_amount) FROM justice_traffic WHERE violation_type = 'Parking Violation';
SELECT cuisine, MAX(revenue) FROM restaurants WHERE cuisine = 'Italian';
SELECT SUM(capacity) FROM renewable_energy WHERE state = 'Florida' AND technology = 'Wind';
SELECT water_meter_readings.city_id, SUM(water_meter_readings.consumption) as total_consumption FROM water_meter_readings WHERE water_meter_readings.reading_date >= (CURRENT_DATE - INTERVAL '1 year')::date AND water_meter_readings.country_id IN (SELECT id FROM countries WHERE name = 'Brazil') GROUP BY water_meter_readings.city_id ORDER BY total_consumption DESC LIMIT 5;
SELECT b.BuildingName, SUM(bb.BudgetAmount) AS TotalBudget FROM BuildingBudgets bb INNER JOIN Buildings b ON bb.BuildingID = b.BuildingID GROUP BY b.BuildingName;
SELECT COUNT(*) FROM marine_species_count WHERE ocean = 'Southern Ocean';
SELECT garment, sale_date, DATEDIFF(day, LAG(sale_date) OVER (PARTITION BY garment ORDER BY sale_date), sale_date) as days_between_sales FROM sales;
WITH updated_cases AS (UPDATE bankruptcy_law SET chapter = '13' WHERE EXTRACT(YEAR FROM filing_date) = 2018 RETURNING *) SELECT * FROM updated_cases;
SELECT MAX(cost) FROM Highways WHERE state = 'Texas';
SELECT MAX(visitors) FROM Exhibitions WHERE art_period = 'Surrealist' AND location = 'Madrid';
SELECT SUM(salary) FROM salaries_dept WHERE department = 'engineering';
SELECT i.investor_id, SUM(i.invested_amount) as total_investment FROM investments i JOIN companies c ON i.company_id = c.id WHERE c.socially_responsible = true GROUP BY i.investor_id;
DELETE FROM autonomous_vehicles WHERE manufacture_date < DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR);
SELECT category, SUM(quantity) as total_waste FROM waste_data WHERE year = 2019 GROUP BY category;
SELECT facilitator_name, MAX(AVG(participant_satisfaction)) as avg_satisfaction FROM participants JOIN programs ON programs.program_id = participants.program_id JOIN facilitators ON programs.facilitator_id = facilitators.facilitator_id GROUP BY facilitator_name HAVING program_type = 'Restorative Justice';
SELECT AVG(funding_round_size) FROM startup WHERE founder_gender = 'Female';
SELECT SUM(aum) FROM investment_strategies WHERE name = 'Conservative Growth';
SELECT SUM(population) FROM ReindeerPopulation WHERE country IN ('Norway', 'Finland', 'Sweden') AND year = 2020;
SELECT AVG(treatments.success) FROM treatments JOIN patients ON treatments.patient_id = patients.id WHERE patients.condition = 'Anxiety' AND patients.country = 'Japan' AND treatments.approach = 'Therapy';
SELECT name FROM genetics.projects WHERE country = 'Germany';
SELECT capacity FROM landfill_capacity WHERE state = 'California' AND year = 2025;
SELECT route_id, AVG(fare_amount) as avg_fare FROM FARE_COLLECTION GROUP BY (CASE WHEN DATE_PART('day', collection_date) IN (1, 2, 3, 4, 5) THEN 'Weekday' ELSE 'Weekend' END);
SELECT MIN(initiatives) FROM community_policing WHERE city = 'London' AND year = 2021;
DELETE v FROM Vessels v LEFT JOIN SafetyInspections s ON v.VesselID = s.VesselID WHERE s.InspectionDate < DATE_SUB(CURDATE(), INTERVAL 6 MONTH);
SELECT OrgName, SUM(Amount) as TotalDonations FROM Donations JOIN Organizations ON Donations.OrgID = Organizations.OrgID WHERE DonationDate BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY OrgName;
SELECT teacher_id, COUNT(course_id) as courses_completed FROM teacher_professional_development WHERE date >= DATEADD(year, -2, GETDATE()) GROUP BY teacher_id;
SELECT sale_date, revenue, DATE_PART('day', sale_date) - DATE_PART('day', CURRENT_DATE) as day_of_week FROM daily_sales ORDER BY sale_date DESC LIMIT 7;
SELECT MAX(treatment_time) FROM RuralHealthFacility7;
SELECT SUM(Revenue) FROM CompanyRevenue WHERE Quarter = 1 AND Company IN ('Company A', 'Company B', 'Company C')
SELECT m.name, SUM(re.resources_extracted) FROM MiningSites m JOIN ResourceExtraction re ON m.id = re.site_id WHERE date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) GROUP BY m.id;
SELECT DATE_FORMAT(labor_date, '%Y-%m') AS month, SUM(hours) FROM mining_site_labor_hours WHERE site_id = 1 AND labor_date >= '2022-01-01' AND labor_date < '2023-01-01' GROUP BY month;
SELECT DATE_FORMAT(signup_date, '%W') AS day_of_week, COUNT(*) AS signups_per_day FROM signups GROUP BY day_of_week ORDER BY signups_per_day DESC LIMIT 1;
SELECT signup_date, COUNT(*) as new_users FROM social_media_users WHERE signup_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) GROUP BY signup_date;
INSERT INTO Projects (project_id, contractor_id, start_date, end_date) VALUES (1001, 1001, '2022-01-01', '2022-12-31');
SELECT COUNT(*) FROM virtual_tour_visitors WHERE visited_virtual_tour = true AND race_ethnicity IN ('BIPOC', 'Black', 'African American', 'Asian', 'Hispanic', 'Latinx', 'Native American', 'Pacific Islander', 'South Asian', 'Middle Eastern');
SELECT HOUR(activity_time) AS hour, COUNT(user_id) AS user_count FROM user_activity GROUP BY hour;
SELECT MIN(cost) FROM ConstructionProjects WHERE city = 'Bangkok';
SELECT MAX(installed_capacity) FROM WindFarm;
SELECT MAX(duration) FROM tourism_stats WHERE country = 'India' AND destination = 'Singapore';
SELECT project_type, start_date FROM rural_projects WHERE project_type = 'Agricultural Innovation';
SELECT COUNT(*) FROM explainable_ai_patents WHERE country IN ('Germany', 'France', 'UK', 'Italy', 'Spain');
SELECT SUM(revenue) FROM MusicStreaming WHERE country = 'Germany';
INSERT INTO threat_intelligence (threat_type, threat_level, report_date) VALUES ('Physical', 'Medium', '2022-05-15');
SELECT 100.0 * COUNT(*) / (SELECT COUNT(*) FROM PoetryReadings) FROM PoetryReadings WHERE age BETWEEN 18 AND 35;
SELECT category, SUM(price) FROM events GROUP BY category;
SELECT AVG(cf.amount) FROM climate_finance cf INNER JOIN least_developed_countries ldc ON cf.country = ldc.country;
SELECT programming_language, COUNT(contract_id) as total_deployments FROM solana_smart_contracts GROUP BY programming_language;
SELECT job_title, AVG(annual_salary) as avg_salary FROM salaries GROUP BY job_title ORDER BY avg_salary DESC LIMIT 3;
SELECT operation_name, AVG(water_usage) AS avg_water_usage, SUM(water_usage) AS total_water_usage FROM mining_operations WHERE country IN ('Chile', 'Peru') GROUP BY operation_name;
SELECT ethical_certifications FROM Brands WHERE name = 'Sustainable Fashion';
SELECT COUNT(*) as detections FROM MalwareDetections WHERE malware_name = 'specific_malware' AND detection_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH);
SELECT species, AVG(stock_level) as avg_stock_level, AVG(weight) as avg_weight FROM stock_data GROUP BY species;
SELECT QUARTER(account_open_date) AS quarter, COUNT(account_number) FROM shariah_compliant_finance WHERE account_type = 'Shariah-compliant' GROUP BY quarter;
SELECT (COUNT(*) FILTER (WHERE meals.calories >= (meals.daily_recommended_intake * 0.8))) * 100.0 / COUNT(*) AS percentage FROM meals JOIN customers ON meals.customer_id = customers.id WHERE customers.country = 'India';
SELECT SUM(medical_issues) FROM Astronauts WHERE country = 'India';
UPDATE fabrics SET sustainability_rating = 4.3 WHERE name = 'Organic Cotton';
SELECT content_creator, SUM(views) as total_views FROM content_views WHERE community = 'Asian American' GROUP BY content_creator ORDER BY total_views DESC LIMIT 3;
SELECT p.PlayerName, COUNT(*) as PlayersPlayedOnDate FROM Players p INNER JOIN PlayerGames pg ON p.PlayerID = pg.PlayerID WHERE pg.GameDate = '2022-12-31' GROUP BY p.PlayerName;
SELECT LocationID, AVG(pH) FROM WaterQuality WHERE MeasurementDate BETWEEN DATEADD(month, -1, GETDATE()) AND GETDATE() GROUP BY LocationID;
SELECT defense_contractors.name, SUM(defense_contracts.contract_value) as total_contract_value FROM defense_contractors INNER JOIN defense_contracts ON defense_contractors.id = defense_contracts.contractor_id GROUP BY defense_contractors.name HAVING total_contract_value > 1000000;
SELECT manufacturer, manufacturing_date FROM Spacecraft_Manufacturing WHERE manufacturer = 'NASA';
SELECT station_name FROM climate_monitoring_stations WHERE country = (SELECT country FROM climate_monitoring_stations WHERE station_name = 'Station A');
SELECT AVG(revenue) FROM drug_j_sales WHERE year = 2021 AND drug_name = 'DrugJ';
SELECT AVG(max_habitat_depth) FROM species WHERE ocean_basin = 'Indian';
SELECT SUM(capacity) FROM solar_installations WHERE state = 'Arizona' AND capacity >= 500000 AND completion_year >= 2000;
SELECT faculty_name, COUNT(*) AS total_publications FROM faculty_publications WHERE country_of_origin = 'India' GROUP BY faculty_name ORDER BY total_publications DESC;
SELECT 100.0 * SUM(has_natural_ingredients) / COUNT(*) as percentage FROM product_ingredients JOIN products ON product_ingredients.product_id = products.product_id WHERE country = 'UK';
SELECT warehouse_name, total_space, occupied_space, (occupied_space * 100.0 / total_space) as occupation_percentage FROM warehouses;
SELECT Name, HistoricalSignificance FROM (SELECT Name, CreationDate, HistoricalSignificance, ROW_NUMBER() OVER (ORDER BY CreationDate DESC) as RowNum FROM Artifacts) as ArtifactRank WHERE RowNum = 1;
SELECT Manufacturer, AVG(Mass) FROM Spacecraft GROUP BY Manufacturer;
DELETE FROM defense_diplomacy WHERE event_date LIKE '2015-%';
SELECT CityName, Population FROM Cities WHERE Country = 'Australia' ORDER BY Population DESC LIMIT 1;
SELECT state, SUM(quantity) as total_vaccinations FROM vaccinations WHERE vaccine_type = 'Flu' AND age > 65 AND year = 2021 GROUP BY state;
SELECT r.name, COUNT(v.violation_description) as total_violations FROM restaurants r INNER JOIN violations v ON r.id = v.restaurant_id WHERE r.city = 'Tasty Town' GROUP BY r.name;
INSERT INTO ocean_temperature (date, temperature, location) VALUES ('2022-03-01', 25.5, 'Pacific Ocean');
SELECT EXTRACT(MONTH FROM complaint_date) AS month, COUNT(*) FROM customer_complaints WHERE complaint_date >= '2021-01-01' AND complaint_date < '2022-01-01' GROUP BY month;
SELECT ArtWorks.Title FROM ArtWorks INNER JOIN Artists ON ArtWorks.ArtistID = Artists.ArtistID WHERE Artists.Nationality IN ('Indian', 'Spanish') AND ArtWorks.YearCreated > 1900;
SELECT facility, COUNT(*) FROM environmental_assessments WHERE assessment_date >= DATEADD(month, -6, CURRENT_DATE) GROUP BY facility;
SELECT offense_type, COUNT(*) AS count FROM offenses WHERE state = 'TX' GROUP BY offense_type ORDER BY count DESC LIMIT 1;
SELECT species, AVG(biomass) FROM fish_stock GROUP BY species;
SELECT AVG(budget / DATEDIFF(day, start_date, end_date)) as avg_daily_budget FROM ad_campaigns;
SELECT Country, Movie, SUM(Views) as Total_Views FROM MovieViews GROUP BY Country, Movie;
SELECT AVG(ai_powered_features) FROM hotel_tech_adoption;
SELECT SUM(revenue) FROM DigitalExperiences WHERE date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH);
UPDATE investment_rounds SET round_type = 'Series Unknown' WHERE round_date < '2018-01-01';
SELECT COUNT(species_name) FROM marine_species WHERE conservation_status IS NULL;
SELECT title FROM Research_Papers WHERE domain = 'Safety' AND year = 2020;
SELECT department, gender, ethnicity, COUNT(*) AS count, ROUND(100.0 * COUNT(*) / (SELECT SUM(COUNT(*)) FROM diversity_stats GROUP BY department, gender, ethnicity), 2) AS percentage FROM diversity_stats GROUP BY department, gender, ethnicity;
INSERT INTO Movies (title, release_year, production_budget) VALUES ('Dune', 2021, 165000000);
SELECT AVG(DATEDIFF(resolution_date, incident_date)) as avg_resolution_time_30_days FROM incidents WHERE incident_date >= NOW() - INTERVAL 30 DAY; SELECT AVG(DATEDIFF(resolution_date, incident_date)) as avg_resolution_time_60_days FROM incidents WHERE incident_date >= NOW() - INTERVAL 60 DAY;
SELECT Country, COUNT(*) as NumPlayers FROM Players WHERE VRAdoption = TRUE GROUP BY Country;
SELECT Id, ProgramId, Outcome, OutcomeDate, RANK() OVER(PARTITION BY ProgramId ORDER BY OutcomeDate DESC) AS OutcomeRank FROM Outcomes;
SELECT M.ManufacturerName, G.GarmentName, SUM(SD.SalesQuantity) AS TotalSales FROM SalesData SD JOIN Manufacturers M ON SD.ManufacturerID = M.ManufacturerID JOIN Garments G ON SD.GarmentID = G.GarmentID GROUP BY M.ManufacturerName, G.GarmentName ORDER BY TotalSales DESC, M.ManufacturerName, G.GarmentName LIMIT 3;
SELECT 100.0 * SUM(has_gym) / COUNT(*) FROM Amenities WHERE city = 'Dubai';
SELECT * FROM National_Security;
SELECT SUM(*) FROM tourism_data WHERE visitor_country LIKE 'Asia%' OR visitor_country LIKE 'Oceania%' OR visitor_country LIKE 'Africa%' AND visit_year = 2018 AND destination_country = 'Australia';
SELECT o.org_name, COUNT(rp.program_id) FROM legal_organizations o INNER JOIN restorative_justice_programs rp ON o.org_id = rp.org_id GROUP BY o.org_name;
SELECT region, AVG(size) FROM ProtectedAreas WHERE size IS NOT NULL GROUP BY region;
SELECT region, AVG(investment_portfolio) as avg_portfolio, EXTRACT(MONTH FROM portfolio_date) as month FROM customer_info WHERE portfolio_date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 12 MONTH) AND CURRENT_DATE AND region = 'Asia-Pacific' GROUP BY region, month ORDER BY month DESC;
SELECT SUM(Cargo.Quantity) FROM Cargo WHERE Cargo.VesselID = 1 AND Cargo.CargoName = 'Electronics';
SELECT SUM(billing_amount) FROM cases JOIN offices ON cases.office_id = offices.office_id WHERE offices.office_name = 'New York' AND precedent_type = 'Precedential' AND case_outcome = 'Won';
SELECT SUM(amount) FROM climate_finance_re WHERE region = 'Asia' AND source IN ('Wind', 'Solar'); SELECT COUNT(*) FROM climate_adaptation_re WHERE region = 'Asia';
SELECT country, SUM(tickets_sold * ticket_price) as total_revenue FROM Concerts GROUP BY country;
SELECT MovementName FROM ArtMovements WHERE YearStart BETWEEN 1800 AND 1899 AND CulturalImpact = (SELECT MAX(CulturalImpact) FROM ArtMovements WHERE YearStart BETWEEN 1800 AND 1899);
SELECT co.name AS country, SUM(me.quantity) AS total_minerals_extracted, COUNT(DISTINCT ms.id) AS total_sites, SUM(e.quantity + c.quantity) AS total_workforce FROM countries co INNER JOIN mining_sites ms ON co.id = ms.country_id INNER JOIN (SELECT site_id, SUM(quantity) AS quantity FROM minerals_extracted GROUP BY site_id) me ON ms.id = me.site_id INNER JOIN (SELECT site_id, SUM(quantity) AS quantity FROM employees GROUP BY site_id) e ON ms.id = e.site_id INNER JOIN (SELECT site_id, SUM(quantity) AS quantity FROM contractors GROUP BY site_id) c ON ms.id = c.site_id GROUP BY co.name;
SELECT AVG(Duration) FROM Workouts INNER JOIN Members ON Workouts.MemberID = Members.MemberID WHERE Members.Age > 40;
SELECT SUM(donation_amount) FROM donors WHERE donation_amount < 1000 AND YEAR(donation_date) = 2020;
SELECT c.type, SUM(c.area) as total_area, COUNT(s.id) as num_images FROM crop c INNER JOIN satellite_images s ON c.id = s.crop_id WHERE s.timestamp >= DATE_SUB(NOW(), INTERVAL 1 MONTH) GROUP BY c.type;
SELECT P.name, E.year, E.efficiency FROM Projects P INNER JOIN Efficiency E ON P.id = E.project_id WHERE P.location IN ('USA', 'California') AND E.year = 2021 AND EXISTS (SELECT 1 FROM Efficiency E2 WHERE E2.project_id = E.project_id AND E2.year = 2020 AND E2.efficiency < E.efficiency);
SELECT * FROM (SELECT DonorName, TotalDonation, ROW_NUMBER() OVER (ORDER BY TotalDonation DESC) as rn FROM Donors) t WHERE rn <= 5;
SELECT conditions.condition, COUNT(conditions.condition) AS count FROM conditions JOIN patients ON conditions.patient_id = patients.id WHERE patients.country = 'Canada' AND patients.age < 18 GROUP BY conditions.condition ORDER BY count DESC LIMIT 1;
SELECT AVG(donation_amount) FROM donations WHERE EXTRACT(YEAR FROM donation_date) = 2020 AND EXTRACT(MONTH FROM donation_date) BETWEEN 1 AND 12 AND donor_id IN (SELECT id FROM donors WHERE country = 'UK');
SELECT AVG(sf.fare_amount) FROM subway_fares sf JOIN subway_lines sl ON sf.line_id = sl.line_id WHERE sl.city = 'San Francisco';
SELECT country, AVG(financial_capability_score) FROM clients WHERE country IN ('Costa Rica', 'Guatemala', 'Panama', 'Nicaragua') GROUP BY country;
SELECT COUNT(*) FROM policies WHERE policyholder_state = 'Texas';
SELECT continent, COUNT(*) FROM open_pedagogy_schools GROUP BY continent;
SELECT MakeupProducts.product_name, Suppliers.supplier_name FROM MakeupProducts INNER JOIN Suppliers ON MakeupProducts.product_id = Suppliers.product_id WHERE MakeupProducts.vegan = TRUE;
SELECT COUNT(*) FROM libraries WHERE city_id = (SELECT id FROM cities WHERE name = 'Seattle');
SELECT l.language, DATE_FORMAT(d.date, '%Y-%m') as month, COUNT(a.id) as num_articles FROM Articles a JOIN Languages l ON a.language_id = l.id JOIN Dates d ON a.date_id = d.id GROUP BY l.language, month;
SELECT AVG(moisture) FROM (SELECT moisture, ROW_NUMBER() OVER (PARTITION BY sensor_id ORDER BY timestamp) rn FROM soil_moisture WHERE country = 'India' AND EXTRACT(MONTH FROM timestamp) = 8 AND EXTRACT(DAY FROM timestamp) BETWEEN 1 AND 7) t WHERE rn = 1;
SELECT MAX(r.funding_amount) FROM Companies c JOIN Investment_Rounds r ON c.id = r.company_id WHERE c.founders LIKE '%Female%' AND c.founders LIKE '%African American%' AND c.industry = 'Healthcare';
SELECT COUNT(*) FROM CollectiveBargaining WHERE Sector = 'Healthcare' AND SignDate BETWEEN '2016-01-01' AND '2019-12-31';
INSERT INTO language_preservation_events (id, name, language_id, participants, date, description) VALUES (1, 'Gàidhlig Language Revitalization Workshop', 2, 30, '2024-04-01', 'A workshop aimed at revitalizing the Gàidhlig language with 30 participants on April 1st, 2024.');
INSERT INTO crimes (id, district, crime_date, crime_type) VALUES (3, 'District Z', CURRENT_DATE - INTERVAL '3 days', 'Assault'), (4, 'District W', CURRENT_DATE - INTERVAL '1 day', 'Harassment');
DELETE FROM fields WHERE operator = 'ExxonMobil';
SELECT airline, SUM(incident_cost) as total_cost FROM Flight WHERE incident_year = 2021 GROUP BY airline;
DELETE FROM visitors WHERE age < 18;
SELECT MAX(budget) FROM Policy_Advocacy WHERE region = 'East Coast' AND year = 2020;
SELECT event, AVG(rating) as avg_rating FROM viewership_ratings GROUP BY event;
INSERT INTO attractions (attraction_name, country, is_international) VALUES ('Mt. Fuji Shrine', 'Japan', true);
SELECT SUM(CASE WHEN species LIKE '%Turtle%' THEN 1 ELSE 0 END) FROM conservation_efforts;
SELECT country, MIN(amount) FROM donations GROUP BY country;
SELECT title, rating FROM movie_ratings WHERE release_year > 2015 ORDER BY rating DESC LIMIT 5;
SELECT MAX(LevelsCompleted) FROM MysticJourney WHERE Victories > 5;
SELECT state, SUM(budget) FROM department GROUP BY state;
SELECT algorithm_name, AVG(safety_score) as avg_safety_score FROM ai_algorithms GROUP BY algorithm_name ORDER BY avg_safety_score DESC;
SELECT AVG(funds) FROM agricultural_innovation_projects WHERE country = 'Tanzania' AND year IN (2018, 2021);
DELETE FROM Menu WHERE menu_name = 'Lunch';
SELECT category, SUM(revenue) FROM products GROUP BY category;
DELETE FROM tv_shows WHERE budget > 10000000 AND release_year < 2010;
SELECT SUM(area_size) FROM seagrass WHERE location = 'Mediterranean';
DELETE FROM fares WHERE ticket_type = 'Child';
SELECT AVG(water_consumption) FROM seattle_households WHERE month IN ('January', 'February', 'March') GROUP BY month;
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM EmployeeData)) AS Percentage FROM EmployeeData WHERE Gender = 'Female' AND Degree = 'College';
SELECT programs.name as program_name, COUNT(DISTINCT donations.donor_id) as num_donors, SUM(donations.amount) as total_donation, programs.budget as budget FROM programs INNER JOIN donations ON programs.id = donations.program_id GROUP BY programs.id;
SELECT region, SUM(amount) AS total_investment FROM network_investments WHERE investment_date BETWEEN '2021-07-01' AND '2021-09-30' GROUP BY region;
DELETE FROM patient_visits WHERE patient_id IN (SELECT patient_id FROM patient_visits p JOIN (SELECT patient_id, MAX(last_visit_date) AS max_date FROM patient_visits WHERE clinic_id IN (SELECT clinic_id FROM rural_clinics WHERE state = 'California') GROUP BY patient_id) t ON p.patient_id = t.patient_id AND p.last_visit_date < t.max_date - INTERVAL '1 year') AND age > 65;
SELECT treatment_name, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM treatment_outcome WHERE treatment_center = 'clinic_f' AND outcome_status = 'Success') FROM treatment_outcome WHERE treatment_center = 'clinic_f' AND outcome_status = 'Success' GROUP BY treatment_name;
SELECT Vendor, AVG(Calories) as AvgCalories FROM Meals GROUP BY Vendor ORDER BY AvgCalories DESC LIMIT 1;
SELECT SUM(quantity) FROM tencel_usage WHERE year = 2022;
SELECT manufacturing_country, MIN(labor_hours) as min_labor_hours FROM labor_hours WHERE garment = 't-shirt' GROUP BY manufacturing_country;
SELECT call_date FROM emergency_calls_2022 GROUP BY call_date HAVING COUNT(*) = 0;
SELECT MIN(co.temperature) FROM cooking_oils co JOIN dishes d ON co.id = d.cooking_oil_id WHERE d.type = 'Vegetarian';
CREATE VIEW top_sustainable_suppliers AS SELECT * FROM suppliers WHERE sustainability_score >= 90;
SELECT SUM(quantity) FROM Military_Equipment_Sales WHERE supplier = 'ACME Corp' AND region = 'Africa' AND sale_year = 2022;
INSERT INTO Customers (customerName, loyalty_score) VALUES ('Jane Doe', 80);
SELECT MIN(temperature) FROM ocean_temperatures WHERE ocean = 'Antarctic';
SELECT SUM(no_farms) FROM organic_farms WHERE region = 'Africa' AND certified = TRUE;
SELECT country, num_interventions FROM disaster_response WHERE year = 2015 ORDER BY num_interventions DESC LIMIT 5;
SELECT SUM(revenue) AS total_revenue, program_category FROM Revenue WHERE date BETWEEN '2021-04-01' AND '2021-06-30' GROUP BY program_category;
SELECT country, COUNT(*) AS total_species FROM marine_species_observations GROUP BY country ORDER BY total_species DESC LIMIT 3;
UPDATE community_policing_events SET title = 'Community Safety Meeting', date = '2023-03-17' WHERE id = 201;
INSERT INTO inventory (garment, color, size, quantity) VALUES ('Eco Dress', 'Green', 'S', 100), ('Eco Dress', 'Green', 'M', 100), ('Eco Dress', 'Blue', 'S', 100), ('Eco Dress', 'Blue', 'M', 100);
SELECT COUNT(*) as count FROM employee_database WHERE department = 'Engineering' AND training_completed = 'Inclusion';
SELECT COUNT(*) FROM exhibitions e WHERE e.museum_id = (SELECT museum_id FROM museums m WHERE m.name = 'Guggenheim Museum');
SELECT incidentType, region, MIN(responseTime) FROM EmergencyResponse WHERE incidentType = 'Medical' AND region = 'West' AND year BETWEEN (YEAR(CURRENT_DATE) - 3) AND YEAR(CURRENT_DATE) GROUP BY incidentType, region ORDER BY responseTime LIMIT 5;
SELECT Country, SUM(Amount) AS TotalDonations FROM Donations GROUP BY Country ORDER BY TotalDonations DESC LIMIT 5;
INSERT INTO food_products (name, safety_recall) VALUES ('Quinoa Puffs', false);
SELECT MIN(salary) FROM transportation_workers WHERE industry = 'transportation';
SELECT JobTitle, COUNT(*) as Total FROM Employees GROUP BY JobTitle;
SELECT f.name, s.type, COUNT(s.id) FROM farms f INNER JOIN sensors s ON f.id = s.farm_id GROUP BY f.name, s.type;
SELECT director, AVG(rating) FROM Director_Movies GROUP BY director;
SELECT name, (living_wage_workers * 100.0 / workers) AS percentage FROM factories;
SELECT building_type, AVG(energy_efficiency_rating) as avg_energy_efficiency_rating FROM green_buildings WHERE location = 'Urban' GROUP BY building_type;
SELECT country, COUNT(*) as cruelty_free_lipsticks FROM product p JOIN certification c ON p.id = c.product_id WHERE is_cruelty_free = true GROUP BY country ORDER BY cruelty_free_lipsticks DESC LIMIT 3;
SELECT SUM(fares_collected.fare) FROM fares_collected INNER JOIN bus_routes ON fares_collected.route_id = bus_routes.route_id WHERE city = 'Mexico City' AND bus_routes.route_id = 1;
SELECT a.nationality, AVG(a.lifespan) FROM astronauts a INNER JOIN (SELECT astronaut_id, COUNT(*) as spacewalks FROM spacewalks GROUP BY astronaut_id) sw ON a.astronaut_id = sw.astronaut_id WHERE a.spacewalks > 0 GROUP BY a.nationality;
SELECT MIN(capacity) FROM global_health.hospitals;
SELECT region, name, data_usage_gb, ROW_NUMBER() OVER (PARTITION BY region ORDER BY data_usage_gb DESC) as rank FROM customers WHERE region = 'Chicago'
SELECT COUNT(*) FROM labour_productivity WHERE mine_location = 'South America';
SELECT c.cause, SUM(d.total_donations) as total_donation FROM causes c INNER JOIN donors d ON c.id = d.city WHERE d.country = 'Asia' GROUP BY c.cause;
SELECT COUNT(DISTINCT artist_name) FROM MusicEvents WHERE country IN ('France', 'Germany');
ALTER TABLE MentalHealthParity ADD CONSTRAINT FK_MentalHealthParity_Region FOREIGN KEY (AffectedRegion) REFERENCES Region(RegionName);
SELECT education, AVG(income) as AverageIncome FROM education WHERE location = 'Urban' GROUP BY education;
SELECT DISTINCT workout_type FROM fitness.workouts WHERE region = 'West Coast';
SELECT f.faculty_department, COUNT(*) AS cnt FROM faculty f INNER JOIN publications p ON f.faculty_id = p.faculty_id WHERE f.faculty_gender IN ('Female', 'Non-binary') AND p.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR) GROUP BY f.faculty_department ORDER BY cnt DESC LIMIT 5;
SELECT SUM(amount) FROM budget WHERE sector = 'education';
SELECT PolicyType, PolicyCount FROM PolicyCount;
SELECT Year, SUM(Revenue) as TotalRevenue FROM Auctions WHERE Region = 'Americas' AND AuctionName LIKE '%Online%' GROUP BY Year;
SELECT MIN(rating) FROM hotels WHERE country = 'Europe';
SELECT g.genre_name, SUM(s.song_id) AS total_streams, AVG(s.song_id / u.user_count) AS avg_streams_per_user FROM genres g INNER JOIN artist_genre_streams s ON g.genre_id = s.genre_id INNER JOIN artists a ON s.artist_id = a.artist_id INNER JOIN streams stream ON s.song_id = stream.song_id INNER JOIN users u ON stream.user_id = u.user_id GROUP BY g.genre_name ORDER BY total_streams DESC LIMIT 3;
SELECT MAX(HeartRate) FROM Users WHERE Country = 'Australia' AND WorkoutDate >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);
SELECT SUM(num_participants) FROM meetings INNER JOIN canada_provinces ON meetings.province = canada_provinces.province WHERE canada_provinces.year = 2021;
SELECT SUM(accidents) FROM traffic_accidents WHERE neighborhood = 'East Los Angeles' AND year = 2022;
SELECT AVG(amount) FROM pharma.expenditures e JOIN pharma.drug_approval a ON e.year = a.year WHERE e.year = 2020;
SELECT customer_id FROM (SELECT customer_id, SUM(price) as total_spent FROM menus JOIN orders ON menus.menu_id = orders.order_id WHERE menus.category = 'sustainable seafood' GROUP BY customer_id) as subquery ORDER BY total_spent DESC LIMIT 1;
SELECT m.station_name FROM marine_life_research_stations m LEFT JOIN maritime_law_compliance_initiatives mlci ON m.station_id = mlci.station_id WHERE mlci.initiative_id IS NULL;
SELECT AVG(smh.score) as avg_score FROM student_mental_health smh JOIN students s ON smh.student_id = s.id WHERE s.ethnicity LIKE '%Indigenous%';
INSERT INTO healthcare.MentalHealthParity (parity_id, healthcare_provider, mental_health_coverage) VALUES (3, 'Dr. Ahmed Al-Sayed', 0.87), (4, 'Dr. Maria Gonzalez', 0.92);
SELECT COUNT(*) FROM Podcasts WHERE host_name IN ('Jane Smith', 'Alice Johnson') AND publication_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);
SELECT subscriber_id, data_usage FROM mobile_subscribers WHERE region = 'Rural' ORDER BY data_usage DESC LIMIT 3;
SELECT COUNT(DISTINCT sensor_id) FROM Sensor WHERE location IN ('ES-Andalucia', 'FR-Nouvelle Aquitaine');
SELECT country, warnings FROM travel_warnings WHERE country IN ('Brazil', 'Argentina');
SELECT AVG(capacity) FROM energy_storage WHERE country IN ('US', 'Canada');
SELECT Products.category, SUM(Sales.quantity) as total_quantity FROM Sales INNER JOIN Products ON Sales.product_id = Products.id GROUP BY Products.category ORDER BY total_quantity DESC LIMIT 3
SELECT country_id, country_name, COUNT(*) as completion_count FROM student_lifelong_learning GROUP BY country_id, country_name ORDER BY completion_count DESC;
SELECT AVG(threat_level) FROM threat_intelligence WHERE country = 'XYZ' AND year = 2022;
SELECT M.MenuCategory, SUM(M.TotalRevenue) as TotalRevenuePerCategory FROM Menus M INNER JOIN Restaurants R ON M.RestaurantID = R.RestaurantID WHERE R.Name = 'H' AND MONTH(M.OrderDate) = 7 AND YEAR(M.OrderDate) = 2021 GROUP BY M.MenuCategory;
SELECT FarmTypes.FarmType, COUNT(*) as Count FROM Farms INNER JOIN FarmTypes ON Farms.FarmTypeID = FarmTypes.FarmTypeID WHERE Farms.Location = 'Amazon Rainforest' GROUP BY FarmTypes.FarmType;
SELECT category, MAX(confidence) as max_confidence FROM threat_intel WHERE date_added > '2022-02-01' GROUP BY category HAVING max_confidence = (SELECT MAX(confidence) FROM threat_intel WHERE date_added > '2022-02-01');
SELECT AVG(revenue) FROM restaurants WHERE type = 'Italian' AND rating >= 4;
UPDATE tv_series SET genre = 'Adventure' WHERE title = 'Series1';
SELECT vaccine_name, patient_age FROM covid_vaccine WHERE patient_age = (SELECT MIN(patient_age) FROM covid_vaccine WHERE state = 'CA') AND state = 'CA';
SELECT SUM(hectares) as total_hectares FROM forestland WHERE country IN ('Canada', 'Australia') AND community_type = 'Indigenous';
SELECT AVG(salary) FROM tech_salaries WHERE position = 'Data Analyst';
SELECT Donors.Country, COUNT(Donors.DonorID) / COUNT(Volunteers.VolunteerID) FROM Donors FULL OUTER JOIN Volunteers ON Donors.Country = Volunteers.Country GROUP BY Donors.Country;
SELECT r.route_name, AVG(f.fare_amount) as avg_fare FROM routes r JOIN fares f ON r.route_id = f.route_id WHERE f.fare_collection_date = '2022-03-31' GROUP BY r.route_name;
SELECT SUM(amount) FROM military_contracts WHERE state = 'California' AND year = 2020;
SELECT AVG(length) FROM podcasts_2 WHERE length < 30 AND category = 'science';
SELECT MIN(min_depth) AS min_depth, MAX(max_depth) AS max_depth FROM marine_protected_areas_atlantic_ocean;
SELECT COUNT(*) FROM courses WHERE department = 'Math' AND completion_date >= DATE('now', '-6 month');
SELECT SUM(capacity) FROM SolarCapacity WHERE country = 'United States';
SELECT StateName, ProgramName, Budget, ROW_NUMBER() OVER (PARTITION BY StateName ORDER BY Budget DESC) as Rank FROM StateDisabilityBudget WHERE Rank <= 3;
SELECT SUM(revenue) FROM virtual_tours_usa WHERE city = 'New York' AND country = 'USA' AND EXTRACT(MONTH FROM date) = 7;
SELECT name, SUM(articles) AS total_articles FROM authors GROUP BY name;
SELECT Program, LAG(SUM(Hours), 1) OVER (PARTITION BY Program ORDER BY DATE_TRUNC('month', VolunteerHourDate)) AS PreviousMonthHours, SUM(Hours) AS CurrentMonthHours, SUM(Hours) - LAG(SUM(Hours), 1) OVER (PARTITION BY Program ORDER BY DATE_TRUNC('month', VolunteerHourDate)) AS HoursChange FROM VolunteerHours GROUP BY Program, DATE_TRUNC('month', VolunteerHourDate) ORDER BY VolunteerHourDate;
SELECT MAX(amount) FROM transactions JOIN customers ON transactions.customer_id = customers.id WHERE customers.segment = 'SME' AND transaction_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);
SELECT college_name, grant_year, SUM(grant_amount) FROM research_grants GROUP BY college_name, grant_year;
SELECT gender, AVG(certification_count) as avg_certifications FROM (SELECT gender, COUNT(certification) as certification_count FROM community_health_worker_certifications GROUP BY worker_id, gender) as subquery GROUP BY gender;
UPDATE SpeciesPopulation SET population = population * (1 + growth_rate) FROM SpeciesGrowth WHERE SpeciesPopulation.species = SpeciesGrowth.species AND SpeciesPopulation.year = SpeciesGrowth.year;
SELECT COUNT(*) FROM rounds JOIN company ON rounds.company_id = company.id WHERE company.founder_identity = 'Native American';
SELECT category, SUM(budget) FROM rural_infrastructure GROUP BY category;
SELECT h.name habitat, ag.name age_group, SUM(t.biomass) total_biomass FROM trees t JOIN wildlife_habitats h ON t.habitat_id = h.id JOIN age_groups ag ON (t.age >= ag.id * 100 AND t.age < (ag.id + 1) * 100) GROUP BY h.name, ag.name;
SELECT SUM(value) FROM impact_investments WHERE sector = 'Renewable Energy';
SELECT MAX(sightings) FROM whale_sightings WHERE hemisphere = 'Southern';
UPDATE military_personnel SET status = 'retired' WHERE age > 65;
SELECT COUNT(DISTINCT consumers.id) FROM consumers INNER JOIN preferences ON consumers.id = preferences.consumer_id INNER JOIN products ON preferences.product_id = products.id WHERE consumers.region = 'Midwest' AND products.category = 'Lipstick';
DELETE FROM chemical_manufacturers WHERE manufacturer_id = 1;
SELECT SUM(capacity_mw) FROM eu_projects;
SELECT AVG(avg_annual_rainfall) FROM forests WHERE region = 'Amazon Basin';
SELECT TeamID, COUNT(*) AS GamesPlayed FROM Games GROUP BY TeamID;
SELECT practice, description FROM practice_counts INNER JOIN sustainable_practices ON practice_counts.practice = sustainable_practices.name WHERE practice_counts.count > 500;
SELECT COUNT(DISTINCT donor_name) FROM donors WHERE donation_amount > 500;
SELECT Site, YearEstablished, PreservationStatus FROM HeritageSites WHERE Site IN (SELECT Site FROM HeritageSites WHERE Region = 'Asia');
SELECT Properties.State, COUNT(Properties.PropertyID) FROM Properties INNER JOIN States ON Properties.State = States.State WHERE Properties.Sustainable = 'Yes' GROUP BY Properties.State;
SELECT airport_name, elevation FROM airports WHERE state = 'California';
SELECT type, SUM(report_count) as total_reports FROM ThreatReports GROUP BY type;
SELECT AVG(cnt) FROM (SELECT location, COUNT(*) AS cnt FROM physicians JOIN hospitals ON physicians.hospital_id = hospitals.id GROUP BY location, hospital_id) t GROUP BY location
SELECT (COUNT(*) FILTER (WHERE gender = 'Non-binary'))::FLOAT / COUNT(*)::FLOAT FROM labor_demographics WHERE province = 'Québec' AND employed_date BETWEEN '2022-01-01' AND '2022-12-31' AND profession = 'Construction';
UPDATE astronauts SET medical_records = 'Completed 3 or more missions' WHERE astronauts.astronaut_id IN (SELECT astronaut_id FROM completed_missions GROUP BY astronaut_id HAVING COUNT(*) > 3);
SELECT AVG(funding) FROM startups WHERE location = 'USA';
SELECT project_name, cost FROM Sustainable_Projects WHERE location = 'California' ORDER BY cost DESC;
SELECT COUNT(DISTINCT EmployeeID) FROM EmployeesInMines WHERE (SELECT MineType FROM Mines WHERE Mines.MineID = EmployeesInMines.MineID) = 'Coal' AND (SELECT Region FROM Mines WHERE Mines.MineID = EmployeesInMines.MineID) = 'Northern';
INSERT INTO programs (id, name) VALUES (5, 'Arts and Crafts');
SELECT city, total_score FROM financial_wellbeing_view_2;
SELECT month, AVG(price) as avg_apple_price FROM MonthlyFruitPrices WHERE fruit = 'Apples' AND year = 2019 GROUP BY month;
SELECT COUNT(*) FROM tourists WHERE country = 'Japan' AND EXTRACT(YEAR FROM visit_date) = 2020 AND daily_spending > 1000;
SELECT c.country_name, AVG(ha.score) AS average_score FROM countries c JOIN healthcare_access ha ON c.country_id = ha.country_id GROUP BY c.country_id;
SELECT MAX(publication_year) FROM research_papers WHERE topic = 'Algorithmic Fairness';
SELECT AVG(Age) FROM Employees WHERE Gender = 'Non-binary' AND Training = 'Compliance';
SELECT country, AVG(size) as avg_size FROM organic_farms GROUP BY country HAVING COUNT(*) > 50;
SELECT r.restaurant_id, SUM(m.total_revenue) as total_revenue, COUNT(m.menu_id) as total_menus FROM restaurants r INNER JOIN menus m ON r.restaurant_id = m.restaurant_id WHERE YEAR(m.order_date) = 2020 GROUP BY r.restaurant_id ORDER BY total_revenue DESC LIMIT 5;
DELETE FROM customers WHERE loyalty_points > 1000;
SELECT dish, COUNT(dish) AS count FROM orders WHERE order_date >= DATEADD(day, -30, GETDATE()) GROUP BY dish ORDER BY count DESC LIMIT 3;
SELECT SUM(amount) FROM investments WHERE sector = 'Education';
SELECT crop_type, QUARTER(timestamp) AS quarter, AVG(nitrogen) FROM crop_nutrient_data WHERE timestamp >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 1 YEAR) GROUP BY crop_type, quarter;
SELECT team_name, AVG(price) as avg_price FROM ticket_sales JOIN teams ON ticket_sales.team_id = teams.team_id GROUP BY team_name;
SELECT state, COUNT(project_id) OVER (PARTITION BY state) as num_projects FROM South_CP;
INSERT INTO Size (id, name, average_spending) VALUES (6, 'Plus Size', 150);
SELECT COUNT(*) FROM news_articles WHERE publisher = 'The New York Times' AND YEAR(publication_date) = 2020;
UPDATE employees SET salary = salary * 1.08 WHERE department = 'HR';
SELECT MAX(salary) FROM employees WHERE department = 'management';
SELECT scheme, COUNT(*), SUM(cost) FROM Projects WHERE scheme != 'Mitigation' GROUP BY scheme
SELECT COUNT(*) FROM building_permits WHERE state = 'California' AND issue_date BETWEEN '2021-01-01' AND '2021-03-31';
SELECT province, AVG(impact_score) as avg_score FROM environmental_impact WHERE operation_date >= DATEADD(year, -2, GETDATE()) GROUP BY province;
SELECT dish_ingredients.name, SUM(ingredient_sales.revenue) as total_sales FROM ingredient_sales JOIN dish_ingredredients ON ingredient_sales.ingredient_id = dish_ingredients.id GROUP BY dish_ingredients.name ORDER BY total_sales DESC LIMIT 3;
DELETE FROM Diversity WHERE Year = 2020;
SELECT es.site_name, COUNT(a.artifact_id) as artifact_count FROM ExcavationSites es INNER JOIN Artifacts a ON es.site_id = a.site_id WHERE es.period = 'Stone Age' GROUP BY es.site_id;
SELECT COUNT(*) FROM sustainable_tourism WHERE country IN ('Denmark', 'Norway');
SELECT COUNT(*) FROM cultural_heritage WHERE country = 'Italy' GROUP BY country HAVING SUM(annual_visitors) > 5000;
SELECT AVG(Budget) FROM Parks_And_Rec GROUP BY Service;
SELECT AVG(score) FROM fc_scores WHERE gender = 'Female' AND country IN ('South Africa', 'Brazil');
SELECT type, 100.0 * SUM(CASE WHEN status = 'Resolved' THEN 1 ELSE 0 END) / COUNT(*) as resolved_percentage FROM vulnerabilities GROUP BY type;
WITH cte AS (DELETE FROM Fabrics WHERE fabric_type NOT IN ('Organic Cotton', 'Recycled Polyester', 'Tencel')) SELECT * FROM Fabrics;
SELECT AVG(CO2_Emissions) FROM (SELECT ROW_NUMBER() OVER (PARTITION BY Country ORDER BY CO2_Emissions DESC) rn, Country, CO2_Emissions FROM Renewable_Energy_Projects) t WHERE rn <= 5;
SELECT SUM(fr.amount) FROM companies c JOIN funding_records fr ON c.company_id = fr.company_id WHERE c.industry = 'Renewable Energy' AND c.founder_race = 'Black';
INSERT INTO ethical_manufacturing (id, certification, certification_date) VALUES (1, 'Fair Trade Certified', '2021-01-01');
SELECT algorithm_name, AVG(fairness_score) as avg_fairness_score FROM ai_algorithms_fairness GROUP BY algorithm_name ORDER BY avg_fairness_score ASC;
SELECT AVG(population) FROM city_data WHERE population > 500000;
SELECT COUNT(*) FROM EuropeanArtMuseum.artpieces EXCEPT SELECT COUNT(*) FROM AfricanArtGallery.artpieces;
SELECT state, COUNT(*) as facility_count FROM mental_health_facilities GROUP BY state ORDER BY facility_count DESC LIMIT 3;
SELECT telescope_name, observing_wavelength FROM space_telescopes;
SELECT m.mine_type, SUM(mp.volume) as total_volume FROM mines m JOIN mine_production mp ON m.mine_id = mp.mine_id GROUP BY m.mine_type;
SELECT AVG(IoT_Sensors.temperature) FROM IoT_Sensors INNER JOIN Fields ON IoT_Sensors.Field_id = Fields.id WHERE Fields.location = 'US-CA';
DELETE FROM pollution_control_initiatives WHERE last_updated < NOW() - INTERVAL 2 YEAR;
SELECT contractor_id, contractor_name, num_veterans * 1.0 / total_employees as veteran_ratio FROM defense_contractors ORDER BY veteran_ratio DESC LIMIT 3;
SELECT region, COUNT(*) as total_projects, SUM(project_cost) as total_cost FROM DefenseProjects WHERE region = 'Y' GROUP BY region;
DELETE FROM genetic_research WHERE id = 1;
UPDATE eco_hotels SET name = 'Sustainable Hotel' WHERE hotel_id = 3;
DELETE FROM TextileSuppliers WHERE SustainabilityRating < 80;
SELECT year, SUM(quantity) FROM (SELECT year, quantity FROM mining WHERE element = 'Gadolinium' UNION ALL SELECT year, quantity FROM recycling WHERE element = 'Gadolinium') AS total_sources GROUP BY year HAVING year IN (2019, 2020);
SELECT a.name, COUNT(al.id) AS albums_count FROM artist a JOIN album al ON a.id = al.artist_id GROUP BY a.id ORDER BY albums_count DESC LIMIT 3;
SELECT COUNT(*) FROM students WHERE program LIKE 'Social%' AND publications > 0;
SELECT c.case_id, c.case_type, a.attorney_name, COUNT(b.bill_id) as num_bills FROM cases c INNER JOIN attorneys a ON c.attorney_id = a.attorney_id LEFT OUTER JOIN billing b ON c.case_id = b.case_id AND a.attorney_id = b.attorney_id GROUP BY c.case_id, c.case_type, a.attorney_name;
SELECT name, age FROM doctors WHERE age > 50;
SELECT AVG(waste_generation_kg_per_capita) FROM WasteGeneration WHERE region = 'Asia';
SELECT city, material, AVG(rate) AS avg_rate FROM recycling_rates_material_city GROUP BY city, material;
SELECT COUNT(*) FROM clients c INNER JOIN transactions t ON c.client_id = t.client_id WHERE DATE_FORMAT(t.transaction_date, '%Y') - DATE_FORMAT(c.dob, '%Y') = (YEAR(CURDATE()) - YEAR(c.dob)) AND MONTH(t.transaction_date) = MONTH(c.dob) AND DAY(t.transaction_date) = DAY(c.dob) AND t.transaction_date BETWEEN '2023-07-01' AND '2023-09-30'
SELECT s.name, o.name AS organization_name, o.type FROM CyberStrategy s INNER JOIN Organization o ON s.organization_id = o.id WHERE o.type = 'Intelligence';
SELECT * FROM PlayerData WHERE Country = 'USA';
SELECT COUNT(*) FROM pollution_reports WHERE location LIKE '%Atlantic%' AND date BETWEEN '2021-01-01' AND '2021-12-31';
SELECT program_name, AVG(percentage) as avg_percentage FROM social_equity_programs INNER JOIN social_equity_participation ON social_equity_programs.id = social_equity_participation.dispensary_id WHERE YEAR(social_equity_participation.year) = YEAR(CURRENT_DATE) - 1 GROUP BY program_name;
SELECT DISTINCT initiative_name FROM diversification_projects WHERE budget > 25000 AND location != 'Asia';
SELECT startup_name, amount FROM funding_events WHERE state = 'Texas' AND amount > 5000000 AND date >= '2020-01-01';
SELECT a.Type, COUNT(a.ArtifactID) AS 'Artifact Count' FROM Artifact a JOIN ExcavationSite e ON a.SiteID = e.SiteID WHERE e.Country = 'Greece' GROUP BY a.Type;
SELECT UnionName FROM UnionSafetyHistory WHERE Incidents IN (SELECT MAX(Incidents) FROM UnionSafetyHistory GROUP BY UnionName) AND Year = 2021 AND Incidents > (SELECT Incidents FROM UnionSafetyHistory WHERE UnionName = UnionName AND Year = 2020)
SELECT SUM(cost) FROM road_projects WHERE state IN ('MI', 'WI', 'MN', 'IA', 'IL', 'IN', 'OH', 'MO') AND start_date > '2018-01-01';
SELECT ResearchStations.region, COUNT(DISTINCT ResearchStations.name) FROM ResearchStations LEFT JOIN Species ON ResearchStations.region = Species.region WHERE Species.id IS NULL GROUP BY ResearchStations.region;
SELECT B.brand_name, AVG(A.score) FROM Awareness A INNER JOIN Brands B ON A.brand_id = B.brand_id WHERE B.ethical = TRUE GROUP BY B.brand_name;
SELECT AVG(num_employees) FROM site;
SELECT AVG(length) as avg_length FROM songs WHERE genre = (SELECT genre FROM genres WHERE genre = 'blues') AND release_year < 2000;
SELECT DISTINCT type FROM clinics WHERE location IN ('New York', 'Florida')
SELECT state, COUNT(program_id) as num_programs FROM carbon_offsets GROUP BY state;
SELECT COUNT(*) FROM tickets_sold WHERE quantity > 1000;
SELECT partner_country, COUNT(*) as total_exercises FROM exercises WHERE exercise_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 3 YEAR) AND CURDATE() GROUP BY partner_country;
SELECT v.type, MIN(i.inspection_date) as earliest_date FROM vessels v JOIN inspections i ON v.id = i.vessel_id GROUP BY v.type;
SELECT AVG(AverageSpeed) FROM VesselPerformance WHERE DeparturePort = 'Port of Oakland' AND DepartureDate >= DATEADD(MONTH, -1, GETDATE());
SELECT topic, COUNT(*) as count FROM article_topics WHERE newspaper = 'The Washington Post' GROUP BY topic;
SELECT Company, COUNT(*) as Q2_Count FROM ExplainableAITable WHERE Date BETWEEN '2021-04-01' AND '2021-06-30' GROUP BY Company HAVING COUNT(*) > 0;
SELECT SUM(ad_spend) FROM campaigns WHERE target_region = 'Europe' AND start_date <= NOW() AND end_date >= DATE_SUB(NOW(), INTERVAL 1 MONTH);
SELECT AVG(NumberOfArtPrograms) AS AverageArtPrograms, Location FROM LanguagePreservationCenter WHERE Location = 'Canada' GROUP BY Location ORDER BY AverageArtPrograms DESC;
SELECT District, AVG(Fine) OVER (PARTITION BY District) AS AvgFine FROM TrafficViolations;
SELECT COUNT(*) as TotalCases FROM Cases WHERE AttorneyID = (SELECT AttorneyID FROM Attorneys WHERE Name = 'Alberto Rodriguez');
WITH data_to_delete AS (DELETE FROM automation_trends WHERE sensor_id = 8 AND trend_date < '2021-02-15' RETURNING *) SELECT * FROM data_to_delete;
SELECT num_trips FROM bike_trips WHERE city = 'Beijing';
SELECT event FROM diplomacy WHERE event LIKE '%summit%' AND year BETWEEN 2016 AND 2018;
SELECT AVG(Amount) FROM Donations INNER JOIN Members ON Donations.MemberID = Members.MemberID WHERE YEAR(DonationDate) = 2022 AND Members.MemberID NOT IN (SELECT Members.MemberID FROM Members GROUP BY Members.MemberID HAVING COUNT(Members.MemberID) < 2) AND QUARTER(DonationDate) = 2;
SELECT ethnicity, AVG(age) FROM patients GROUP BY ethnicity;
SELECT SUM(mass) FROM Satellites WHERE agency = 'AgencyY';
SELECT MAX(production_volume) FROM mines WHERE location = 'Mexico' AND mineral = 'silver';
UPDATE energy_efficiency_stats SET co2_emissions = co2_emissions * 0.9 WHERE year BETWEEN 2000 AND 2010;
SELECT country FROM neodymium_production WHERE year IN (2017, 2018) GROUP BY country;
CREATE TABLE military_equipment (equipment_id INT, name VARCHAR(255), type VARCHAR(255), country_of_origin VARCHAR(255), year INT);
SELECT COUNT(DISTINCT VolunteerID) AS NumVolunteers, SUM(Hours) AS TotalHours FROM Volunteers WHERE VolunteerDate >= DATEADD(month, -1, GETDATE());
SELECT AVG(order_value) FROM orders WHERE device = 'mobile' AND country = 'USA';
SELECT SUM(budget) FROM agri_innovation_projects WHERE location = 'Oceania' AND year = 2020;
SELECT AVG(Claims.ClaimAmount) FROM Claims INNER JOIN Policyholders ON Claims.PolicyID = Policyholders.PolicyID WHERE Policyholders.City = 'Seattle';
SELECT country, COUNT(hotel_id) AS total_hotels, AVG(engagement_time) AS avg_engagement_time, STDDEV(engagement_time) AS stddev_engagement_time FROM hotel_virtual_tour WHERE country = 'Caribbean' AND virtual_tour = 'yes' GROUP BY country
SELECT name FROM employees INNER JOIN projects ON employees.employee_id = projects.data_scientist WHERE projects.sector = 'ethical AI';
SELECT viewer_count FROM viewership WHERE title = 'MovieC' AND release_year = 2018;
SELECT state_name, COUNT(*) as num_projects FROM community_development INNER JOIN states ON community_development.state_id = states.state_id GROUP BY state_name;
SELECT SUM(container_weight) FROM cargo INNER JOIN time_table ON cargo.time_id = time_table.time_id WHERE time_table.time_id BETWEEN '2022-01-01' AND '2022-01-31';
SELECT COUNT(animal_name) FROM rescue_center WHERE date_admitted BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) AND CURRENT_DATE AND region = 'Mountain';
SELECT SUM(percentage) FROM urban_produce WHERE production_method = 'Organic'
SELECT habitat_type, AVG(spending) as avg_spending FROM conservation_spending GROUP BY habitat_type;
SELECT Social_Good_Tech_Quarters.quarter, Social_Good_Tech_Quarters.status, SUM(Social_Good_Tech_Quarters.projects) FROM Social_Good_Tech_Quarters WHERE Social_Good_Tech_Quarters.quarter IN ('Q1', 'Q2', 'Q3', 'Q4') GROUP BY Social_Good_Tech_Quarters.quarter, Social_Good_Tech_Quarters.status;
SELECT YEAR(incident_date) as year, QUARTER(incident_date) as quarter, COUNT(*) as num_incidents, AVG(resolution_time) as avg_resolution_time FROM incidents GROUP BY year, quarter;
SELECT game_genres.genre, SUM(players.hours_played) AS total_hours FROM players INNER JOIN game_sessions ON players.id = game_sessions.player_id INNER JOIN game_genres ON game_sessions.game_genre_id = game_genres.id WHERE game_genres.genre NOT IN ('Strategy') GROUP BY game_genres.genre;
SELECT DISTINCT f.Location FROM Factories f LEFT JOIN Production p ON f.FactoryID = p.FactoryID AND p.ProductionDate >= DATEADD(month, -6, GETDATE()) WHERE p.ProductionID IS NULL;
SELECT c.category_name, SUM(d.co2_emissions) as total_co2_emissions FROM dish d JOIN category c ON d.category_id = c.category_id WHERE d.order_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY c.category_name;
SELECT MIN(year) FROM Art_History WHERE category = 'Abstract Art';
SELECT Programs.ProgramCategory, SUM(ProgramDonations.DonationAmount) as TotalDonated FROM Programs INNER JOIN ProgramDonations ON Programs.ProgramID = ProgramDonations.ProgramID GROUP BY Programs.ProgramCategory;
SELECT Artist.name, SUM(Art.value) AS total_value FROM Artist JOIN Art_Artist ON Artist.id = Art_Artist.artist_id JOIN Art ON Art_Artist.art_id = Art.id GROUP BY Artist.name ORDER BY total_value DESC;
SELECT SUM(ProjectValue) FROM Projects WHERE State='CA' AND IsSustainable=TRUE;
SELECT AVG(price) FROM carbon_prices WHERE date >= DATEADD(day, -30, CURRENT_DATE) AND region = 'European Union Emissions Trading System';
SELECT AircraftModels.name, ComponentManufacturingCosts.total_cost FROM AircraftModels JOIN ComponentManufacturingCosts ON AircraftModels.id = ComponentManufacturingCosts.model_id;
SELECT d.department_name, MAX(t.hours_spent_on_mental_health_sessions) FROM departments d INNER JOIN teachers t ON d.department_id = t.department_id GROUP BY d.department_id;
UPDATE community_health_workers SET salary = 60000 WHERE id = 1;
SELECT * FROM campaigns WHERE country = 'US' AND launch_date < '2010-01-01';
SELECT SUM(flight_hours) FROM flights WHERE pilot_name = 'Jane Doe';
SELECT AVG(gas_fee) FROM binance_smart_chain_transactions WHERE transaction_date >= DATEADD(month, -1, GETDATE());
SELECT Department, MAX(Budget) FROM DepartmentBudget;
SELECT SUM(Biomass) FROM FishStock WHERE FarmID IN (SELECT FarmID FROM Farm WHERE Location = 'Country C');
SELECT country FROM Countries WHERE launched_satellites = false;
SELECT COUNT(*) FROM us_wellbeing WHERE country = 'United States' AND score > 8;
SELECT country, SUM(production) as total_production FROM crops WHERE crop_name IN ('wheat', 'rice') AND year = 2020 GROUP BY country ORDER BY total_production DESC;
SELECT g.garment_category, SUM(gs.quantity) as total_quantity FROM garment_sales gs JOIN garments g ON gs.garment_id = g.garment_id GROUP BY g.garment_category;
SELECT s.state_name, ROUND(100 * SUM(ps.budget) / (SELECT SUM(ps2.budget) FROM police_services ps2 WHERE ps2.state_id = s.state_id) , 2) as police_budget_percentage, ROUND(100 * SUM(fs.budget) / (SELECT SUM(fs2.budget) FROM fire_services fs2 WHERE fs2.state_id = s.state_id) , 2) as fire_budget_percentage FROM states s LEFT JOIN police_services ps ON s.state_id = ps.state_id LEFT JOIN fire_services fs ON s.state_id = fs.state_id GROUP BY s.state_name;
SELECT MAX(serving_size) FROM MealSizes WHERE meal_type = 'Vegan Meal';
SELECT SUM(cost) FROM rural_clinic_6;
SELECT emission_country, SUM(emission_amount) as total_emissions FROM co2_emissions WHERE emission_date >= DATEADD(year, -1, CURRENT_DATE) AND emission_industry = 'Mining' GROUP BY emission_country;
SELECT ingredient_name FROM ingredient_sourcing WHERE sourcing_location NOT LIKE '%Organic Farm%' AND last_updated >= DATEADD(year, -1, GETDATE());
SELECT name FROM biosensors.projects WHERE country = 'Canada';
SELECT COUNT(*) FROM Articles WHERE author_name = 'Jane Smith' AND publication_date >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);
SELECT d.name, g.gender, COUNT(f.id) * 100.0 / SUM(COUNT(f.id)) OVER (PARTITION BY d.name)  FROM faculty f JOIN departments d ON f.department_id = d.id JOIN (VALUES ('Female'), ('Non-binary')) AS g(gender) ON f.gender = g.gender GROUP BY d.name, g.gender;
SELECT COUNT(Exhibitions.ExhibitionID) AS ExhibitionCount FROM Exhibitions INNER JOIN (SELECT ExhibitionID FROM ExhibitionArtworks GROUP BY ExhibitionID HAVING COUNT(*) > 50) AS Subquery ON Exhibitions.ExhibitionID = Subquery.ExhibitionID INNER JOIN Artists ON Exhibitions.ArtistID = Artists.ArtistID WHERE Artists.Nationality = 'Egyptian';
SELECT AVG(Age) FROM Members m JOIN Classes c ON m.MemberID = c.MemberID WHERE m.MembershipType = 'Gold' AND c.ClassType = 'Cycling' GROUP BY m.MemberID HAVING COUNT(c.ClassID) > 5;
SELECT Type, AVG(Cost) FROM Naval_Vessels GROUP BY Type;
SELECT AVG(salary) FROM salary WHERE location = 'Rural California';
(SELECT COUNT(*) FROM PlayerPreferences JOIN Players ON PlayerPreferences.PlayerID = Players.PlayerID WHERE Players.Country IN ('Europe', 'South America') AND PlayerPreferences.Preference = 'Non-VR')
SELECT SUM(amount) FROM Investments WHERE investor = 'Green Ventures' AND sector = 'CleanEnergy';
DELETE FROM graduate_students WHERE id NOT IN (SELECT student_id FROM academic_publications);
SELECT e.name as program_name, a.name as animal_name FROM education_programs e JOIN animals a ON e.animal_id = a.id;
SELECT district_id, AVG(response_time) as avg_response_time FROM emergency_responses WHERE incident_type = 'Medical' GROUP BY district_id;
SELECT SUM(quantity) FROM RetailerF WHERE item = 'Skirts';
SELECT AVG(duration_minutes) as avg_maintenance_duration FROM maintenance_schedule WHERE mode_id IN (1, 2);
SELECT * FROM transactions WHERE client_id = (SELECT id FROM clients WHERE name = 'Mateo Davis');
SELECT AVG(Water_Consumption) FROM Household_Water_Usage WHERE City = 'Seattle' AND Year = 2020;
UPDATE public_transportation_routes SET stop_id = 803 WHERE route_id = 402 AND stop_sequence = 5;
SELECT MIN(maintenance_duration) as min_duration FROM MilitaryVehicles WHERE region = 'Europe' AND manufacturer = 'GDELS' AND service_date BETWEEN '2021-04-01' AND '2021-06-30';
SELECT SUM(capacity) FROM renewable_energy_projects WHERE state = 'New York' AND project_type != 'wind farm';
SELECT SUM(Crop.production) FROM Crop INNER JOIN Region ON Crop.region_id = Region.id WHERE Crop.name = 'Corn';
SELECT algorithm, MAX(explainability) OVER (PARTITION BY algorithm) FROM explainable_ai;
SELECT PolicyID, ExpirationDate FROM Policies WHERE ExpirationDate BETWEEN DATE_ADD(CURRENT_DATE(), INTERVAL 1 DAY) AND DATE_ADD(CURRENT_DATE(), INTERVAL 30 DAY);
SELECT gender, COUNT(*) as num_students FROM students WHERE mental_health_score > (SELECT AVG(mental_health_score) FROM students GROUP BY gender) GROUP BY gender;
UPDATE posts SET likes = 150 WHERE post_id = 1;
SELECT AVG(revenue) FROM restaurants WHERE area = 'downtown';
SELECT country, annual_budget FROM language_preservation ORDER BY annual_budget DESC LIMIT 2;
SELECT country, AVG(production_cost) as avg_cost FROM SustainableFootwear GROUP BY country ORDER BY avg_cost ASC LIMIT 5;
SELECT menu_item, revenue FROM menu_item_revenue WHERE cuisine = 'Italian' AND revenue > 5000.00;
SELECT conditions.condition FROM conditions INNER JOIN patients ON conditions.condition_id = patients.condition_id GROUP BY conditions.condition HAVING COUNT(DISTINCT patients.country) > 1;
SELECT name, total_area, max_depth FROM ocean_basins;
SELECT AVG(budget) FROM SustainableTourism WHERE location = 'North America';
SELECT name FROM students WHERE program = 'Computer Science';
SELECT country, COUNT(*) as total_organic FROM Ingredients WHERE is_organic = true GROUP BY country ORDER BY total_organic DESC LIMIT 1;
SELECT d.name, SUM(p.quantity) FROM departments d INNER JOIN products p ON d.id = p.department_id GROUP BY d.name;
SELECT SUM(quantity) FROM extraction WHERE year = 2021;
SELECT products.name, products.product_code FROM products INNER JOIN countries ON products.country = countries.name WHERE products.type = 'Shariah' AND countries.name = 'United States';
SELECT SUM(post_likes.like_id) FROM post_likes INNER JOIN post_data ON post_likes.post_id = post_data.post_id WHERE post_data.category = 'travel' AND post_data.platform = 'LinkedIn';
SELECT SUM(data_usage) FROM customers WHERE city = 'Chicago' AND id IN (SELECT id FROM (SELECT id FROM customers WHERE city = 'Chicago' ORDER BY data_usage DESC LIMIT 10) subquery) ORDER BY data_usage DESC;
SELECT t.team_name, AVG(f.age) as avg_age, SUM(ts.revenue) as avg_revenue FROM teams t JOIN fans f ON t.team_id = f.team_id JOIN ticket_sales ts ON t.team_id = ts.team_id GROUP BY t.team_name;
SELECT COUNT(DISTINCT destination) FROM TravelAdvisories WHERE issue_year IN (2022, 2023);
SELECT model, MAX(max_passengers) as max_passengers FROM aircraft_specs GROUP BY model;
SELECT COUNT(*) FROM cybersecurity_incidents WHERE region = 'Middle East' AND incident_date >= (CURRENT_DATE - INTERVAL '60 days') GROUP BY region HAVING COUNT(*) >= ALL (SELECT COUNT(*) FROM cybersecurity_incidents WHERE region = 'Middle East' AND incident_date >= (CURRENT_DATE - INTERVAL '60 days') GROUP BY region);
SELECT i.name, investment.amount, investment.investment_date FROM investors i JOIN investments investment ON i.id = investment.investor_id WHERE i.investment_goal = 'Climate Change';
SELECT COUNT(*) FROM TrafficViolations WHERE District = 5;
SELECT p.*, LEAD(p.id, 1) OVER (PARTITION BY p.user_id ORDER BY p.created_at) as next_post_id, LAG(p.id, 1) OVER (PARTITION BY p.user_id ORDER BY p.created_at) as prev_post_id FROM posts p;
DELETE FROM environmental_impact WHERE impact_score < 5;
SELECT threat_type FROM threat_intelligence WHERE threat_level IN ('High', 'Medium') AND last_reported_date BETWEEN '2021-07-01' AND '2021-12-31';
SELECT COUNT(*) FROM hr.employees WHERE gender = 'Female';
SELECT Country FROM SpaceMissions WHERE Year = 2015 GROUP BY Country HAVING COUNT(SatelliteID) > 0;
UPDATE cosmetic_ingredients SET ingredient_type = 'Unsustainable' WHERE ingredient_name = 'Palm Oil';
SELECT AVG(DATEDIFF('2023-01-01', built) / 365.25) FROM Bridges WHERE state = 'Washington';
SELECT m.id, AVG(w.heart_rate_avg) as avg_heart_rate FROM memberships m JOIN workout_data w ON m.id = w.member_id WHERE w.workout_type = 'Yoga' AND w.workout_date >= DATE '2022-01-01' AND w.workout_date < DATE '2022-02-01' GROUP BY m.id;
SELECT Region, COUNT(*) AS TrainingCount FROM Employees WHERE TrainingDate >= DATEADD(year, -3, GETDATE()) GROUP BY Region;
SELECT hotel_name, SUM(consumption) as total_consumption FROM hotel_energy_usage WHERE energy_type = 'Electricity' AND year = 2022 GROUP BY hotel_name;
SELECT COUNT(*) FROM DefenseProjects WHERE Contractor = 'Raytheon' AND Region = 'Asia-Pacific' AND StartDate <= '2020-12-31' AND EndDate >= '2018-01-01';
SELECT number_of_turbines FROM wind_turbines WHERE country = 'Germany' AND year = 2020;
SELECT AVG(UrbanResidents.Income) FROM UrbanResidents INNER JOIN HigherEducation ON UrbanResidents.ResidentID = HigherEducation.ResidentID WHERE UrbanResidents.EducationLevel = 'Bachelor' OR UrbanResidents.EducationLevel = 'Master';
SELECT COUNT(*) FROM intelligence_ops WHERE YEAR(report_date) = 2019;
DELETE FROM crops WHERE temperature < 15;
SELECT AVG(temp) FROM weather_record WHERE date >= DATE_SUB(CURDATE(), INTERVAL 3 DAY);
SELECT AVG(readers.age) FROM readers INNER JOIN preferences ON readers.id = preferences.id WHERE readers.region = 'Southern' AND preferences.category = 'social issues';
SELECT f.name FROM factories f LEFT JOIN workers w ON f.factory_id = w.factory_id WHERE w.program IS NULL;
SELECT MAX(food_safety_score) FROM restaurant;
SELECT well, MAX(quantity) FROM Oil_Production WHERE production_date BETWEEN '2021-02-01' AND '2021-02-28' GROUP BY well;
DELETE FROM products;
SELECT r.restaurant_name, SUM(s.revenue) as total_revenue FROM restaurants r INNER JOIN sales s ON r.restaurant_id = s.restaurant_id WHERE s.sale_date BETWEEN '2022-01-01' AND '2022-01-31' GROUP BY r.restaurant_name;
SELECT event_name, attendee_age_group, COUNT(attendee_age_group) as attendance FROM cultural_events GROUP BY event_name, attendee_age_group ORDER BY attendance DESC, event_name;
SELECT home_team_id AS team_id, COUNT(*) AS games_won FROM nba_games WHERE home_team_points > away_team_points GROUP BY home_team_id UNION ALL SELECT away_team_id, COUNT(*) FROM nba_games WHERE away_team_points > home_team_points GROUP BY away_team_id;
SELECT COUNT(*) FROM cybersecurity_incidents WHERE region = 'Middle East and North Africa' AND incident_date >= DATEADD(month, -6, CURRENT_DATE) ORDER BY COUNT(*) DESC;
SELECT restaurant_id, COUNT(*) as critical_violations FROM inspections WHERE result = 'critical violation' GROUP BY restaurant_id;
SELECT position, AVG(penalty_minutes) as avg_penalty_minutes FROM hockey_players_stats GROUP BY position HAVING SUM(penalty_minutes) > 100;
SELECT name, location FROM art_galleries WHERE location = 'Tokyo' AND annual_visitors > 500000;
SELECT SUM(consumption) FROM water_usage WHERE country = 'United States' AND year IN (2016, 2017);
SELECT AVG(temperature) FROM weather WHERE country = 'Peru' UNION SELECT AVG(temperature) FROM weather WHERE country = 'Tanzania'
SELECT COUNT(*) FROM community_development WHERE YEAR(end_date) < 2022 AND status = 'completed';
SELECT name, SUM(playtime) as total_playtime FROM games WHERE type = 'VR' GROUP BY name HAVING SUM(playtime) > 500 ORDER BY total_playtime DESC;
SELECT COUNT(*) FROM veteran_businesses WHERE state = 'California' AND owner_type = 'veteran';
SELECT region, COUNT(*) AS program_count FROM education_programs GROUP BY region;
SELECT food_name, sodium_content FROM food_nutrition_info WHERE sodium_content <= 140.0;
SELECT MAX(production_volume) FROM daily_production WHERE element = 'yttrium' AND extract(year from date) = 2019;
SELECT SUM(quantity) FROM sales_data WHERE year = 2020 AND state = 'California' AND vehicle_type = 'Self-Driving Car';
SELECT State, COUNT(*) FROM Healthcare_Units WHERE Type IN ('Immunization Clinic', 'Mobile Health Unit') GROUP BY State;
SELECT AVG(distance_from_earth) FROM exoplanets ORDER BY distance_from_earth DESC LIMIT 1;
SELECT type, SUM(revenue) FROM events WHERE country = 'Mexico' AND date >= '2022-01-01' AND date < '2023-01-01' GROUP BY type;
DELETE FROM tourism_stats WHERE continent = 'Europe' AND year = 2019;
SELECT wallet_address, COUNT(DISTINCT interaction_date) as interactions FROM binance_smart_chain WHERE network_name = 'Binance Smart Chain' AND dapp_category = 'DeFi' GROUP BY wallet_address HAVING COUNT(DISTINCT interaction_date) >= 1 ORDER BY interactions DESC;
UPDATE marine_research_projects SET budget = budget * 1.15 WHERE organization = 'Ocean Exploration Trust';
SELECT COUNT(*) FROM SalesByDate WHERE product = 'Eyeshadow' AND country = 'Canada' AND date >= DATEADD(year, -1, GETDATE());
SELECT COUNT(*) FROM genetic_research WHERE completion_year = 2021 AND region = 'Europe';
SELECT country, COUNT(initiative) as num_initiatives FROM carbon_offsets GROUP BY country ORDER BY num_initiatives DESC;
SELECT COUNT(*) FROM biosensors.projects WHERE country = 'India';
SELECT city, COUNT(*) as num_hotels FROM hotels WHERE city = 'Tokyo' AND ai_chatbot = TRUE GROUP BY city;
SELECT country FROM peacekeeping_operations pkops INNER JOIN defense_diplomacy ddip ON pkops.country = ddip.country GROUP BY country HAVING COUNT(DISTINCT pkops.operation) > 0 AND COUNT(DISTINCT ddip.event) > 0;
SELECT company_id, gender, ethnicity, percentage, RANK() OVER(ORDER BY percentage DESC) as rank FROM diversity_metrics;
SELECT source FROM threat_intelligence_open_source WHERE source IN (SELECT source FROM threat_intelligence_classified);
SELECT AVG(price) FROM strain_prices;
SELECT meal_type, AVG(calories) as avg_calories FROM (SELECT restaurant_name, meal_type, calories, meal_date, ROW_NUMBER() OVER (PARTITION BY meal_type, meal_date ORDER BY calories) as rn FROM restaurant_meals WHERE restaurant_name = 'Seattle Organic' AND meal_date >= '2022-01-01' AND meal_date < '2022-02-01') t WHERE rn = 1 GROUP BY meal_type;
SELECT Name, Salary FROM Employees WHERE YEAR(HireDate) < 2020 ORDER BY Salary;
SELECT is_vegan, COUNT(*) as count FROM products WHERE category = 'Makeup' GROUP BY is_vegan;
SELECT AVG(species_observations.count) FROM expeditions INNER JOIN species_observations ON expeditions.id = species_observations.expedition_id INNER JOIN leaders ON expeditions.leader_id = leaders.id WHERE leaders.name = 'Alice Johnson';
SELECT volunteers.volunteer_name, SUM(hours_contributed) as total_hours, organizations.org_name FROM volunteers INNER JOIN organizations ON volunteers.org_id = organizations.org_id GROUP BY volunteers.volunteer_name, organizations.org_name;
SELECT region, COUNT(*) FROM diplomacy_2020 GROUP BY region;
SELECT platform, AVG(TIMESTAMPDIFF(DAY, timestamp, LEAD(timestamp) OVER (PARTITION BY platform_id ORDER BY timestamp))) as avg_daily_streams FROM streams GROUP BY platform;
SELECT MIN(frequency) FROM (SELECT COUNT(*) AS frequency FROM CyberThreats WHERE country = 'Brazil' AND threat_date >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH) GROUP BY threat_type) AS subquery;
UPDATE wastewater_treatment_plants SET treatment_cost = treatment_cost * 1.1 WHERE plant_id = 7;
SELECT ota_name, SUM(bookings) as total_bookings, SUM(revenue) as total_revenue FROM otas JOIN bookings ON otas.ota_id = bookings.ota_id JOIN hotels ON bookings.hotel_id = hotels.hotel_id WHERE hotels.city = 'Berlin' GROUP BY ota_name;
SELECT MAX(depth) FROM marine_species WHERE type = 'Mammal';
SELECT company_name FROM companies WHERE city = 'Vancouver' ORDER BY employees DESC LIMIT 1;
DELETE FROM drug_approvals WHERE year = 2014;
SELECT Country, Price * (SELECT AVG(Exchange_Rate) FROM Exchange_Rates WHERE Currency_Code = Carbon_Pricing.Currency) AS Price_In_USD FROM Carbon_Pricing;
SELECT city, AVG(stars) as avg_rating, COUNT(DISTINCT hotel_id) as hotel_count FROM hotel_data GROUP BY city;
SELECT garment_category, SUM(manufacturing_cost * (SELECT SUM(quantity) FROM orders WHERE orders.garment_id = garments.garment_id)) AS total_cost FROM garments GROUP BY garment_category;
SELECT SUM(Duration) FROM GameSessions WHERE Game = 'Shooter';
SELECT station, depth, temperature - LAG(temperature) OVER (PARTITION BY depth ORDER BY station) as temperature_difference FROM temperature_monitor;
SELECT Disease, MAX(Count) FROM Diseases WHERE Continent = 'South America';
SELECT size, COUNT(*) AS count FROM sustainable_fashion GROUP BY size ORDER BY count DESC LIMIT 1;
SELECT a.birth_place, COUNT(*) FROM artists a GROUP BY a.birth_place;
SELECT m.name, m.location, m.exhibition_space, COUNT(a.id) as artwork_count FROM museums m LEFT JOIN artworks a ON m.id = a.museum_id GROUP BY m.id;
SELECT category, AVG(price) AS avg_price FROM menu_items GROUP BY category;
SELECT SuicideRate FROM Suicide WHERE Country = 'New Zealand' AND Year = 2020;
SELECT type, AVG(cost) as avg_monthly_cost FROM EquipmentMaintenance WHERE date >= '2021-01-01' AND date <= '2021-12-31' GROUP BY type;
SELECT agency, SUM(num_debris) as total_debris FROM satellites GROUP BY agency ORDER BY total_debris DESC;
SELECT a.artistName, YEAR(aws.saleDate) as sale_year, COUNT(*) as artwork_count FROM ArtWorkSales aws JOIN Artists a ON aws.artistID = a.artistID GROUP BY a.artistName, sale_year;
SELECT name FROM community_development WHERE program = 'Rural Development';
SELECT COUNT(*) FROM diabetes_asthma_patients WHERE county IN ('Briarwood', 'Pineville', 'Oakwood');
SELECT AVG(COUNT(*)) OVER (PARTITION BY year) FROM CentralAmericaProjects WHERE region = 'Central America' AND project_status = 'completed' GROUP BY year;
SELECT COUNT(*) FROM biotech.research WHERE type = 'Genetics' AND (country = 'India' OR country = 'China');
SELECT SUM(cargoes.tonnage) FROM cargoes INNER JOIN ports ON cargoes.port_id = ports.id WHERE ports.name = 'Singapore' AND cargoes.load_date BETWEEN '2022-01-01' AND '2022-01-31';
SELECT dt.date, SUM(dt.volume) as daily_volume FROM daily_transaction_volume dt WHERE dt.asset_id = 1 AND dt.date >= CURDATE() - INTERVAL 30 DAY GROUP BY dt.date;
SELECT COUNT(*) FROM affordable_housing WHERE property_tax < 4000;
SELECT date, region, SUM(incident_count) as total_incidents FROM incidents WHERE date >= DATE_SUB(CURRENT_DATE(), INTERVAL 1 WEEK) GROUP BY date, region;
SELECT d.district_name, COUNT(c.crime_id) FROM districts d INNER JOIN crimes c ON d.district_id = c.district_id WHERE c.crime_date >= DATEADD(month, -1, GETDATE()) GROUP BY d.district_name;
SELECT MIN(age) FROM Artists INNER JOIN Festivals ON Artists.id = Festivals.artist_id WHERE Festivals.name = 'Lollapalooza';
SELECT MIN(score) as min_score, MAX(score) as max_score FROM SocialImpact;
SELECT COUNT(*) FROM news WHERE category = 'Politics';
SELECT name, affiliation, publications FROM (SELECT name, affiliation, publications, RANK() OVER (ORDER BY publications DESC) as rank FROM Researchers) subquery WHERE rank <= 2;
SELECT SUM(CASE WHEN is_vegetarian = TRUE AND is_gluten_free = TRUE AND category = 'Dinner' THEN 1 ELSE 0 END) FROM menus;
DELETE FROM athletes, teams WHERE athletes.sport = teams.sport AND sport = 'Basketball';
DELETE FROM Products WHERE sodium_percentage > 0.3;
SELECT State, SUM(EnergyConsumption) AS TotalEnergyConsumption, RANK() OVER (ORDER BY SUM(EnergyConsumption) DESC) AS Rank FROM StateEnergyData GROUP BY State HAVING Rank <= 3;
SELECT location, year, dissolved_oxygen - LAG(dissolved_oxygen) OVER (PARTITION BY location ORDER BY year) as change FROM dissolved_oxygen_readings WHERE region = 'Atlantic' GROUP BY location, year ORDER BY location, year;
SELECT algorithm_name FROM ai_safety_algorithms WHERE id NOT IN (SELECT id FROM transactions WHERE algorithm_type = 'AI Safety');
SELECT division, AVG(response_time) as avg_response_time FROM incidents GROUP BY division;
SELECT AVG(response_time) FROM emergency_calls WHERE state = 'Illinois' AND response_time < 20*60;
SELECT resource_type, SUM(quantity) FROM environmental_impact WHERE year = 2022 GROUP BY resource_type;
SELECT model_name, explainability_score FROM explainable_ai WHERE explainability_score = (SELECT MIN(explainability_score) FROM explainable_ai);
SELECT name, claim_amount FROM (SELECT name, claim_amount, ROW_NUMBER() OVER (PARTITION BY group ORDER BY claim_amount DESC) rn FROM underwriting WHERE group = 'Low Risk') sub WHERE rn = 1;
SELECT r.region_name, COUNT(fsr.species) as fish_count FROM regions r JOIN fish_stock_regions fsr ON r.region_id = fsr.region_id GROUP BY r.region_name;
SELECT gender, MIN(health_equity_metric_score) FROM patients GROUP BY gender;
SELECT ProductionLineID, SUM(EnergyConsumption) FROM EnergyConsumption WHERE Date >= '2021-01-01' AND Date < '2022-01-01' GROUP BY ProductionLineID;
SELECT name FROM energy_storage_projects WHERE country IN ('Indonesia', 'Vietnam') AND commission_date < '2018-01-01';
SELECT AVG(budget) FROM community_development_initiatives WHERE country = 'Thailand' AND YEAR(start_date) = 2018;
SELECT * FROM forest_management WHERE age < 20 OR age > 80;
SELECT mine_name FROM mining_operations_asia JOIN workforce_diversity_asia ON TRUE WHERE workforce_diversity_asia.diversity_score > 0.6 AND region = 'Asia';
SELECT COUNT(*) FROM public_libraries WHERE state IN ('Illinois', 'Michigan');
SELECT name FROM heritage_sites WHERE region = 'Asia';
SELECT AVG(age) FROM players WHERE game_genre = 'Adventure';
SELECT Vessels.Name FROM Vessels INNER JOIN Inspections ON Vessels.ID = Inspections.Vessel_ID WHERE Vessels.Safety_Score > 85 ORDER BY Vessels.Safety_Score DESC;
SELECT p.name, COUNT(*) AS attendance FROM program p JOIN event_attendees ea ON p.id = ea.program_id GROUP BY p.name ORDER BY attendance DESC LIMIT 3;
SELECT Race, COUNT(*) as ViolationCount FROM MentalHealthParityRace GROUP BY Race;
SELECT MAX(hours_worked) AS max_hours, plant, employee FROM employees WHERE plant LIKE 'Mid-Atlantic%' GROUP BY plant, employee HAVING max_hours = (SELECT MAX(hours_worked) FROM employees WHERE plant LIKE 'Mid-Atlantic%');
SELECT city, AVG(age) FROM fans GROUP BY city;
INSERT INTO labor_practices (product_id, brand, quantity_sold) VALUES (4, 'BrandJ', 550);
SELECT School, Gender, COUNT(*) as Count FROM Teachers GROUP BY School, Gender;
SELECT AVG(age) FROM ancient_tools;
SELECT neighborhood, COUNT(*) OVER (PARTITION BY co_owned) AS co_owned_count FROM co_ownership;
SELECT name, energy_star_rating FROM hotel_info WHERE country = 'United Kingdom' ORDER BY energy_star_rating DESC LIMIT 3;
SELECT MIN(rate) FROM well_production_norwegian_sea;
SELECT name, advisor FROM graduate_students WHERE num_grants IN (SELECT MAX(num_grants) FROM graduate_students WHERE year BETWEEN 2020 AND 2021) GROUP BY name, advisor LIMIT 3;
SELECT COUNT(*) FROM charging_stations WHERE city = 'Vancouver';
SELECT AVG(art_count) FROM (SELECT COUNT(ArtPieces.id) AS art_count FROM ArtPieces JOIN Artists ON ArtPieces.artist_id = Artists.id WHERE Artists.region = 'Africa' GROUP BY Artists.id) AS ArtCountPerArtist
SELECT Continent, AVG(Accident_Count) FROM Airline_Accidents GROUP BY Continent;
SELECT MIN(Salary) FROM Employees WHERE Gender = 'Female';
SELECT SUM(funding_round.round_amount) FROM company JOIN funding_round ON company.id = funding_round.company_id WHERE company.CEO_ethnicity = 'Black';
SELECT AVG(severity_score) as avg_severity FROM threats WHERE threat_type = 'phishing' AND threat_date >= DATEADD(year, -1, GETDATE());
SELECT region, SUM(price) AS total_revenue FROM sales WHERE price > 250 GROUP BY region;
SELECT f.factory_name, MAX(salary) FROM workers w INNER JOIN factories f ON w.factory_id = f.factory_id INNER JOIN roles r ON w.role_id = r.role_id WHERE r.role_name = 'senior' GROUP BY f.factory_name;
SELECT hs.Name AS HeritageSite, COUNT(ap.ArtPieceID) AS ArtPieces, SUM(ap.Value) AS TotalValue FROM HeritageSites hs JOIN ArtPieces ap ON hs.ArtPieceID = ap.ArtPieceID GROUP BY hs.Name ORDER BY TotalValue DESC;
SELECT COUNT(*) FROM Properties p JOIN Urbanism_Policies up ON p.Property_ID = up.Property_ID WHERE Urbanism_Policy = 'Sustainable';
SELECT AVG(temperature) FROM weather WHERE location = 'Tokyo' AND EXTRACT(MONTH FROM date) = 8;
SELECT AVG(budget) FROM projects WHERE budget BETWEEN 5000000.00 AND 15000000.00;
SELECT SUM(CASE WHEN EXTRACT(YEAR FROM publish_date) >= 2019 AND language IN ('Quechua', 'Telugu', 'Yoruba') THEN 1 ELSE 0 END) as total_count FROM articles;
SELECT MAX(touchdowns) FROM games WHERE team_id = (SELECT team_id FROM teams WHERE team_name = 'Seattle Seahawks') AND league = 'NFL';
SELECT AVG(price) FROM Military_Vehicles WHERE country = 'USA' AND YEAR(sale_date) = 2022 AND vehicle_type = 'Tank' OR vehicle_type = 'Fighter Jet';
SELECT country, SUM(metric_tons) as total_metric_tons FROM carbon_sequestration_by_country WHERE year = 2019 GROUP BY country ORDER BY total_metric_tons DESC LIMIT 5;
SELECT country, avg_efficiency, RANK() OVER (ORDER BY avg_efficiency DESC) as efficiency_rank FROM efficient_manufacturers_q1_2022;
UPDATE ArtHeritage SET year = 2005 WHERE name = 'Pottery';
SELECT location, MAX(level) FROM acidification_data GROUP BY location;
SELECT v.name, COUNT(i.id) as collision_count FROM vessel v INNER JOIN incident i ON v.id = i.vessel_id WHERE v.type = 'container' AND i.incident_type = 'collision' AND i.incident_date >= DATE(NOW(), INTERVAL -3 YEAR) GROUP BY v.name ORDER BY collision_count DESC;
SELECT country, COUNT(*) as count FROM security_incidents WHERE incident_time >= DATE_SUB(CURRENT_TIMESTAMP(), INTERVAL 1 MONTH) GROUP BY country ORDER BY count DESC LIMIT 3;
DELETE FROM wearable_devices WHERE id = '002';
SELECT MAX(market_price) FROM Ytterbium_Market_Prices WHERE year = 2020 AND country = 'Japan';
SELECT game_region, AVG(DATEDIFF(second, joined_at, left_at)) as avg_duration, RANK() OVER (ORDER BY AVG(DATEDIFF(second, joined_at, left_at)) DESC) as rank FROM gameactivity GROUP BY game_region
SELECT 100.0 * COUNT(*) FILTER (WHERE product_id IN (SELECT product_id FROM paraben_products)) / COUNT(*) as paraben_percentage FROM all_products WHERE country = 'Germany';
SELECT Manufacturer, SUM(ProductionQuantity) as TotalProduction FROM Aircraft GROUP BY Manufacturer;
SELECT AVG(cargo_weight) FROM vessel_performance WHERE arrived_date BETWEEN '2022-05-01' AND '2022-05-31' AND country = 'Canada';
SELECT SUM(cs_count) AS total_cs_count FROM charging_stations WHERE cs_city = 'Berlin' AND cs_type = 'EV';
SELECT type, COUNT(*) as total FROM Equipment GROUP BY type;
SELECT (COUNT(CASE WHEN gender = 'female' THEN 1 END) * 100.0 / COUNT(*)) as female_percentage   FROM users;
SELECT customer_name, SUM(price) as total_spent FROM CustomerOrders WHERE is_fair_trade = true GROUP BY customer_name ORDER BY total_spent DESC LIMIT 5;
SELECT COUNT(*) FROM cases INNER JOIN attorneys ON cases.attorney_id = attorneys.attorney_id WHERE attorneys.gender = 'Female' AND attorneys.city = 'Los Angeles';
SELECT DISTINCT supplier_name FROM SupplyChain WHERE vegan = true;
INSERT INTO CHW_Demographics (CHW_ID, Age, Ethnicity) VALUES (1, 45, 'Native Hawaiian');
UPDATE Employees SET Salary = 75000 WHERE Department = 'Engineering';
SELECT COUNT(*) FROM agri_innovation_south_africa WHERE country = 'South Africa' AND start_year BETWEEN 2012 AND 2018 AND end_year BETWEEN 2012 AND 2018;
SELECT department_name FROM employees WHERE (SELECT AVG(salary) FROM employees AS e2 WHERE e1.department_name = e2.department_name) = (SELECT MIN(avg_salary) FROM (SELECT department_name, AVG(salary) AS avg_salary FROM employees GROUP BY department_name) AS e3);
SELECT * FROM vehicle_safety_test_results vstr INNER JOIN vehicle_specs vs ON vstr.vehicle_type = vs.vehicle_type;
SELECT AVG(square_footage) FROM rural_neighborhoods;
SELECT continent, SUM(funding) as total_funding FROM Tech_Accessibility GROUP BY continent;
SELECT location, disease, prevalence FROM health_stats WHERE disease = 'heart disease' AND location IN ('rural Oregon', 'urban Oregon');
SELECT MIN(salary) FROM worker_salaries WHERE region = 'South';
DELETE FROM housing_subsidies WHERE end_date < CURDATE() OR start_date > CURDATE();
SELECT SUM(consumption) FROM energy_consumption WHERE name = 'Germany' AND energy_type = 'renewable energy';
SELECT technology, SUM(capacity) OVER (PARTITION BY technology) FROM projects;
SELECT SUM(blocks) FROM players WHERE player_name = 'Russell Westbrook' AND team_name = 'Thunder' AND season_start_year = 2015 AND season_end_year = 2016;
SELECT COUNT(subscriber_id) FROM subscribers WHERE subscriber_type = 'Mobile' AND subscriber_city = 'Mumbai' AND upgrade_date >= CURDATE() - INTERVAL 1 MONTH;
SELECT SUM(funding) FROM ai_safety_projects WHERE country IN ('Germany', 'France', 'UK', 'Italy', 'Spain');
SELECT name, manufacturer, country FROM military_equipment ORDER BY manufacturer ASC;
SELECT COUNT(DISTINCT user_id) FROM likes GROUP BY user_id HAVING COUNT(DISTINCT article_id) > 1;
SELECT r.agency_name, DATE_FORMAT(rf.fine_date, '%Y') as year, SUM(rf.fine_amount) as total_fines FROM regulatory_fines rf JOIN ports p ON rf.port_id = p.port_id JOIN regulatory_agencies r ON rf.agency_id = r.agency_id GROUP BY r.agency_name, year;
UPDATE production SET production_count = 14000 WHERE well_id = 'J10';
SELECT property_id, square_footage FROM affordable_housing WHERE square_footage > 2000;
SELECT AVG(engagement_time) FROM virtual_tour_stats WHERE region IN ('Norway', 'Sweden', 'Denmark', 'Finland', 'Iceland') AND date = '2022-10-01';
SELECT chapter, ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) as rank, COUNT(*) as long_term_members FROM union_members WHERE years_active > 5 GROUP BY chapter ORDER BY rank;
SELECT teacher_id, COUNT(professional_development_course) as courses_completed FROM teachers GROUP BY teacher_id;
SELECT DATE_TRUNC('month', transaction_date) as month, digital_asset, SUM(transaction_volume) as total_volume, RANK() OVER (PARTITION BY month ORDER BY SUM(transaction_volume) DESC) as rank FROM DEX GROUP BY month, digital_asset, transaction_volume HAVING rank <= 2;
INSERT INTO Donors (DonorID, Name, TotalDonation) VALUES (6, 'David Lee', 250.00);
SELECT member_id, SUM(duration) AS total_duration_march_2023 FROM workout_sessions WHERE MONTH(session_date) = 3 AND YEAR(session_date) = 2023 GROUP BY member_id;
SELECT MAX(carbon_offsets) FROM carbon_offset_programs WHERE country = 'Canada';
SELECT AVG(Budget) FROM SupportPrograms WHERE Region = 'APAC';
SELECT location, AVG(production_rate) FROM wells GROUP BY location;
SELECT s.name, p.name, sl.country FROM stores s JOIN products p ON s.id = p.store_id JOIN supplier_location sl ON p.supplier_id = sl.supplier_id JOIN certifications c ON p.id = c.product_id WHERE s.state = 'New York' AND p.is_ethically_sourced = TRUE;
SELECT c.name, AVG(COUNT(vt.tour_id)) as avg_tours FROM cities c LEFT JOIN virtual_tours vt ON c.city_id = vt.city_id WHERE c.country LIKE 'Europe%' GROUP BY c.name;
SELECT COUNT(*) FROM businesses WHERE certified = TRUE AND location IN ('Bahamas', 'Jamaica', 'Puerto Rico', 'Cuba', 'Dominican Republic', 'Barbados', 'Haiti', 'Trinidad and Tobago');
SELECT user_id, SUM(hours) FROM Volunteers WHERE program = 'program D' AND volunteer_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY user_id ORDER BY SUM(hours) DESC LIMIT 1;
SELECT DATEPART(YEAR, signup_date) as year, DATEPART(MONTH, signup_date) as month, COUNT(*) as num_volunteers FROM volunteers WHERE YEAR(signup_date) = 2020 GROUP BY DATEPART(YEAR, signup_date), DATEPART(MONTH, signup_date);
SELECT COUNT(*) FROM whale_sharks WHERE status = 'alive';
SELECT org_id, COUNT(*) AS total_volunteers FROM volunteer GROUP BY org_id ORDER BY total_volunteers DESC;
SELECT type, SUM(capacity_mw) FROM india_renewable_projects WHERE completion_date > '2018-12-31' GROUP BY type;
SELECT COUNT(*) FROM rural_development.community_development WHERE location LIKE 'A%' OR location LIKE 'B%';
INSERT INTO dispensary_sales (dispensary_id, product_id, sale_date, quantity) VALUES (501, 1001, '2022-01-01', 200), (502, 1002, '2022-01-02', 300), (503, 1003, '2022-01-03', 150);
SELECT SUM(vaccinations) FROM flu_vaccinations WHERE country = 'Canada' AND year = 2019;
SELECT country, COUNT(*) as num_subscribers FROM subscribers WHERE subscriber_type = 'Mobile' GROUP BY country HAVING COUNT(*) > 0;
SELECT Shipment.destination_country, SUM(Shipment.quantity) FROM Shipment INNER JOIN Warehouse ON Shipment.warehouse_id = Warehouse.id GROUP BY Shipment.destination_country;
SELECT region, COUNT(*) as total_violations FROM violations GROUP BY region HAVING total_violations > 0;
SELECT network_type, SUM(subscriber_count) FROM subscriber_data GROUP BY network_type;
SELECT AVG(temperature) FROM yearly_temps WHERE location = 'Indian Ocean' AND year BETWEEN (YEAR(CURRENT_DATE) - 10) AND YEAR(CURRENT_DATE);
SELECT source, capacity FROM energy_storage WHERE country = 'Germany' AND timestamp = '2022-01-01';
INSERT INTO graduate_students (id, name, department, enrollment_date) VALUES (4, 'Maria Garcia', 'Computer Science', '2022-08-22');
SELECT gft.team_name, AVG(gfts.revenue/gfts.quantity) as avg_revenue_per_game FROM gaelic_football_ticket_sales gfts JOIN gaelic_football_teams gft ON gfts.team_id = gft.team_id WHERE gft.province = 'Connacht' GROUP BY gft.team_name;
SELECT country, COUNT(*) as returned_items  FROM returns GROUP BY country ORDER BY returned_items DESC LIMIT 3;
SELECT sensor_id, EXTRACT(DAY FROM timestamp) AS day, AVG(humidity) AS avg_humidity FROM sensor_humidity GROUP BY sensor_id, day;
UPDATE subscribers SET data_usage = 40 WHERE subscriber_id = 10;
SELECT SUM(quantity) FROM sales JOIN stores ON sales.store_id = stores.store_id JOIN products ON sales.product_id = products.product_id WHERE products.product_name = 'Fair Trade Coffee' AND sale_date >= products.launched_date AND store_location = 'London';
SELECT SUM(weight) FROM sales s JOIN dispensaries d ON s.dispensary_id = d.dispensary_id WHERE d.state = 'MI' AND s.product_type = 'trim' AND s.sale_date BETWEEN '2022-01-01' AND '2022-03-31';
SELECT COUNT(*) as total_programs FROM community_program WHERE precinct_id = 1;
SELECT metric_type, ((value - LAG(value, 1) OVER (PARTITION BY metric_type ORDER BY year)) * 100.0 / LAG(value, 1) OVER (PARTITION BY metric_type ORDER BY year)) as pct_change FROM agricultural_metrics WHERE year IN (2021, 2022) GROUP BY metric_type ORDER BY pct_change DESC;
SELECT AVG(budget) FROM economic_diversification_efforts WHERE country = 'South Africa' AND year IN (2018, 2019);
SELECT SUM(usage) FROM southern_water_usage WHERE state IN ('Florida', 'Texas', 'Georgia', 'North Carolina', 'South Carolina')
SELECT COUNT(*) FROM initiatives WHERE country = 'USA' AND start_date < '2010-01-01' AND end_date < '2010-01-01';
SELECT Specialty FROM CommunityHealthWorkers WHERE Specialty = 'Mental Health' UNION SELECT Specialty FROM CommunityHealthWorkers WHERE Specialty = 'Physical Health';
SELECT smart_contracts.name, smart_contracts.developer FROM smart_contracts INNER JOIN (SELECT * FROM dates WHERE year = 2022) AS dates ON smart_contracts.deployment_date = dates.date
SELECT SUM(Amount) FROM Budget WHERE Year = 2020 AND Department = 'Transportation';
SELECT player, SUM(goals) FROM scores WHERE year = 2022 GROUP BY player ORDER BY SUM(goals) DESC LIMIT 1;
SELECT tech_name, cost FROM (SELECT tech_name, cost, ROW_NUMBER() OVER (ORDER BY cost DESC) AS rn FROM military_tech) t WHERE rn <= 2
SELECT CourthouseID, MIN(CaseDate) as EarliestCaseDate FROM CourtCases GROUP BY CourthouseID ORDER BY EarliestCaseDate DESC;
SELECT StoreCountry, ProductType, SUM(QuantitySold) as TotalQuantitySold FROM StoreSales S JOIN Products P ON S.ProductID = P.ProductID WHERE P.ProductType = 'Sustainable Clothing' AND StoreCountry = 'Germany' AND SaleDate BETWEEN '2023-06-01' AND '2023-08-31' GROUP BY StoreCountry, ProductType;
SELECT city, autonomous_vehicles, RANK() OVER(ORDER BY autonomous_vehicles DESC) as rank FROM city_data WHERE autonomous_vehicles > 0 AND city NOT IN ('City with no data', 'Missing Data') GROUP BY city ORDER BY rank LIMIT 5;
SELECT policyholders.name, SUM(claims.claim_amount) AS total_claim_amount FROM policies JOIN policyholders ON policies.policyholder_id = policyholders.id JOIN claims ON policies.id = claims.policy_id WHERE policyholders.state = 'CA' GROUP BY policyholders.id ORDER BY total_claim_amount DESC LIMIT 5;
DELETE FROM inventory WHERE quantity < 50;
SELECT age as youngest_player_age FROM player_demographics ORDER BY age ASC LIMIT 1;
SELECT SUM(donation_amount) FROM donations JOIN organization_info ON donations.org_id = organization_info.id WHERE organization_info.focus = 'Environment' AND organization_info.location = 'California';
SELECT context.mine_name, context.mineral, SUM(context.score) as total_score FROM context WHERE context.year = 2020 GROUP BY context.mine_name, context.mineral;
SELECT ocean, conservation_status, COUNT(*) FROM marine_species GROUP BY ocean, conservation_status;
SELECT COUNT(*) FROM oil_spills WHERE location = 'Arctic' AND year >= 2018;
SELECT AVG(credit_limit) FROM accounts WHERE account_type = 'Credit Card' AND branch = 'Mumbai';
INSERT INTO train_routes (route_id, start_station, end_station, distance, fare) VALUES (1, (SELECT station_id FROM stations WHERE station_name = 'Paris'), (SELECT station_id FROM stations WHERE station_name = 'Berlin'), 1200, 250);
SELECT bs.state, COUNT(bs.customer_id) AS num_subscribers FROM broadband_subscriptions bs JOIN state_populations sp ON bs.state = sp.state WHERE sp.population > 5000000 GROUP BY bs.state;
SELECT MAX(salary) FROM employees WHERE department = 'research and development';
SELECT region, COUNT(policy) as total_policies FROM clean_energy_policies WHERE region = 'south_america' GROUP BY region ORDER BY total_policies DESC;
SELECT SUM(spacecraft_mass) FROM iss_missions;
SELECT state, MAX(adoption_rate) FROM SmartCityAdoption GROUP BY state;
SELECT MineID, MIN(Date) FROM ExtractionData GROUP BY MineID;
CREATE TABLE recycling_initiatives ( id INT PRIMARY KEY, region VARCHAR(255), initiative_name VARCHAR(255), initiative_description TEXT, start_date DATE, end_date DATE);
SELECT u.UnionName, COUNT(a.AgreementID) AS TotalAgreements FROM Unions u INNER JOIN Agreements a ON u.UnionID = a.UnionID GROUP BY u.UnionName;
SELECT SUM(DonationAmount) FROM Donors WHERE Age >= 40;
SELECT drill_year, SUM(production_qty) as total_production FROM wells WHERE region = 'North Sea' GROUP BY drill_year;
SELECT COUNT(*) FROM teams WHERE (wins / (wins + losses)) > 0.6 AND sport = 'Basketball';
SELECT COUNT(*) FROM conservation_projects WHERE status = 'Success';
SELECT Country, AVG(Activities) OVER (PARTITION BY Country ORDER BY Year ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS AvgActivities, RANK() OVER (ORDER BY AvgActivities DESC) AS Rank FROM DefenseDiplomacy GROUP BY Country ORDER BY Rank;
SELECT AVG(star_rating) FROM hotels INNER JOIN countries ON hotels.country_id = countries.country_id WHERE is_eco_friendly = true AND countries.name = 'Costa Rica';
SELECT company_id, founder_id FROM latinx_founders WHERE founder_latinx = TRUE;
SELECT Infrastructure.name, Maintenance.maintenance_date FROM Infrastructure INNER JOIN Maintenance ON Infrastructure.id = Maintenance.infrastructure_id WHERE Infrastructure.location = 'Texas' AND Infrastructure.is_public_works = TRUE AND Infrastructure.resilience_score < 60;
SELECT COUNT(DISTINCT Exhibitions.id) FROM Visitors JOIN Visits ON Visitors.id = Visits.visitor_id JOIN Exhibitions ON Visits.exhibition_id = Exhibitions.id WHERE Visitors.country LIKE 'Europe%';
SELECT city, SUM(quantity) as total_kits_distributed FROM disaster_preparedness_kits GROUP BY city;
UPDATE GraduateStudents SET Department = 'Electrical Engineering' WHERE StudentID = 1001;
SELECT AVG(calories) FROM meals WHERE type = 'vegetarian';
SELECT category, AVG(rating) AS avg_rating FROM ratings GROUP BY category;
(SELECT vessel FROM VesselOrganizations WHERE organization = 'FisheryEnforcement' EXCEPT SELECT vessel FROM VesselOrganizations WHERE organization = 'MaritimeSecurity') UNION (SELECT vessel FROM VesselOrganizations WHERE organization = 'MaritimeSecurity' EXCEPT SELECT vessel FROM VesselOrganizations WHERE organization = 'FisheryEnforcement');
SELECT crime_type, COUNT(*) AS count FROM chicago_crimes GROUP BY crime_type ORDER BY count DESC LIMIT 1;
SELECT d.Country, COUNT(DISTINCT d.DonorID) as UniqueDonors, SUM(d.Amount) as TotalDonations FROM Donations d INNER JOIN DonorCountry dc ON d.DonorID = dc.DonorID WHERE d.DonationDate >= DATEADD(year, -1, GETDATE()) GROUP BY d.Country;
SELECT SUM(production_quantity) FROM oil_production WHERE location = 'Canada' AND production_type = 'Oil' AND company_headquarters = 'Alberta' AND production_date BETWEEN '2020-01-01' AND '2020-12-31';
SELECT SUM(investment) FROM smart_city_investment WHERE country = 'Japan';
SELECT ingredient_name FROM ingredients WHERE is_vegan = true AND launch_year = 2019 GROUP BY ingredient_name ORDER BY COUNT(*) DESC LIMIT 2;
SELECT gender, COUNT(*) as count FROM graduate_students WHERE department = 'Mathematics' GROUP BY gender;
SELECT MAX(release_year), MIN(release_year) FROM shows;
SELECT region, AVG(ai_adoption) FROM hotel_ai GROUP BY region;
SELECT country, COUNT(*) FROM military_tech_assets WHERE acquisition_year = 2021 GROUP BY country;
SELECT COUNT(*) FROM initiatives WHERE region = 'EU';
SELECT Companies.region, COUNT(DISTINCT Companies.id) FROM Companies JOIN Materials ON Companies.id = Materials.company_id GROUP BY Companies.region;
SELECT CityName, Population FROM City WHERE Continent = 'Africa' ORDER BY Population DESC LIMIT 1;
SELECT COUNT(*) FROM evidence_based_policy_making WHERE sector = 'justice' AND year = 2020 AND completed = true;
SELECT (SUM(d2.donation_amount) - SUM(d1.donation_amount)) / SUM(d1.donation_amount) * 100 as percent_change FROM donations_time d1 JOIN donations_time d2 ON d1.cause = d2.cause WHERE d1.donation_date BETWEEN '2022-04-01' AND '2022-06-30' AND d2.donation_date BETWEEN '2023-04-01' AND '2023-06-30' AND d1.cause = 'Arts';
SELECT Department, COUNT(*) as Total FROM Employees GROUP BY Department HAVING COUNT(*) > 5;
SELECT student_name FROM publications.student_publications WHERE num_publications=0;
SELECT projects.name, policies.policy_name FROM projects FULL OUTER JOIN policies ON projects.id = policies.project_id WHERE policies.policy_name IS NOT NULL AND projects.type = 'Geothermal';
INSERT INTO solar_panels (system_size, install_year, manufacturer) VALUES (50, 2021, 'SolarEase');
SELECT AVG(visitor_count) FROM Exhibitions WHERE genre = 'Impressionist';
SELECT institution, AVG(COUNT(*)) OVER (PARTITION BY institution ORDER BY MIN(publication_date) ROWS BETWEEN 3 PRECEDING AND CURRENT ROW) as moving_avg FROM safety_paper GROUP BY institution, publication_date ORDER BY publication_date;
SELECT country, AVG(renewable_energy_share)  FROM renewable_energy WHERE year = 2020 AND country IN ('Brazil', 'Argentina', 'Colombia', 'Peru', 'Chile') GROUP BY country;
SELECT AlbumName, AVG(Streams) as AverageStreams, AVG(Sales) as AverageSales FROM Albums GROUP BY AlbumName;
SELECT drug_name, SUM(sales) as total_sales FROM drug_sales WHERE region = 'Europe' AND year = 2021 GROUP BY drug_name ORDER BY total_sales DESC LIMIT 5;
SELECT MIN(health_equity_score) as min_score FROM mental_health_facilities WHERE location = 'Rural';
SELECT Capitals.City, Year, COUNT(*) AS Events FROM Events INNER JOIN Capitals ON Events.City = Capitals.City WHERE Capitals.City IN ('Washington', 'London', 'Ottawa') AND Year >= 2010 GROUP BY Year, Capitals.City;
SELECT ingredient_name, SUM(usage) FROM ingredients WHERE is_cruelty_free = true AND launch_year = 2022 GROUP BY ingredient_name ORDER BY SUM(usage) DESC LIMIT 5;
SELECT * FROM (SELECT name, ESG_score, ROW_NUMBER() OVER (ORDER BY ESG_score DESC) as rn FROM companies WHERE sector = 'Healthcare') t WHERE rn <= 5;
SELECT SUM(quantity) FROM production WHERE element IN ('Terbium', 'Dysprosium', 'Holmium') AND year = 2021;
SELECT COUNT(*) FROM SalesData WHERE Gender = 'Men' AND Size = 32 AND SaleDate >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH);
SELECT AVG(production_rate) FROM well_production WHERE measurement_date >= DATEADD(quarter, -1, GETDATE()) AND location LIKE 'Middle East%';
SELECT AVG(subscription_fee) as avg_fee FROM subscriber_tech WHERE technology = 'Fiber';
SELECT Day, AVG(Response_Time) as Avg_Response_Time FROM Daily_Response GROUP BY Day ORDER BY Avg_Response_Time ASC;
DELETE FROM Stations WHERE line = 'Red Line' AND accessibility = false;
SELECT 100.0 * SUM(CASE WHEN completion_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) THEN 1 ELSE 0 END) / COUNT(DISTINCT teacher_id) FROM teacher_pd;
SELECT MIN(consumption_twh) FROM energy_consumption WHERE country IN ('United Kingdom', 'Germany');
SELECT type, AVG(attendance) as avg_attendance FROM events GROUP BY type;
SELECT SUM(streams) FROM Streams WHERE artist = 'Ariana Grande' AND country = 'Germany'
SELECT Mine_Site, SUM(Quantity) as Total_Production FROM Production WHERE Material = 'Coal' AND Date >= '2020-01-01' AND Date < '2020-02-01' GROUP BY Mine_Site HAVING Total_Production > 600;
SELECT model_name, fairness_score FROM ai_model WHERE model_type = 'Classification';
SELECT COUNT(*) FROM menus WHERE menu_type = 'Vegetarian' AND price > 12;
UPDATE autonomous_vehicles SET manufacturing_country = 'France (EU)' WHERE manufacturing_country = 'France';
SELECT BrandName, SUM(Quantity) as TotalQuantity FROM Brands GROUP BY BrandName ORDER BY TotalQuantity DESC LIMIT 3;
SELECT COUNT(shipwreck) FROM caribbean_sea;
SELECT country, TotalSales FROM RetailSales ORDER BY TotalSales DESC LIMIT 3;
SELECT waste_type, country, SUM(amount) FROM waste_generation_europe WHERE area = 'Europe' AND year = 2021 GROUP BY waste_type, country;
SELECT country, AVG(data_usage) AS avg_data_usage FROM mobile_subscribers GROUP BY country;
SELECT RANK, DEPTH FROM TRENCHES WHERE RANK = (SELECT MIN(RANK) FROM TRENCHES WHERE RANK > 5);
CREATE TABLE construction_projects (project_name TEXT, start_date DATE, end_date DATE, total_cost FLOAT);
SELECT city, state, COUNT(installation_id) FROM urban_solar_installations GROUP BY city, state HAVING COUNT(installation_id) > 500;
SELECT ai_algorithm, AVG(safety_score) as avg_safety_score FROM creative_ai.ai_algorithms GROUP BY ai_algorithm;
SELECT COUNT(*) FROM marine_species WHERE discovery_date BETWEEN '2016-01-01' AND '2021-12-31' AND location = 'Indian Ocean';
SELECT r.region_name, ps.service_name, SUM(ps.budget) as region_budget, ROUND(100 * SUM(ps.budget) / (SELECT SUM(ps2.budget) FROM public_services ps2 WHERE ps2.region_id = r.region_id) , 2) as percentage FROM regions r JOIN public_services ps ON r.region_id = ps.region_id GROUP BY r.region_name, ps.service_name;
SELECT SUM(installed_capacity) FROM solar_projects WHERE region = 'Asia' AND country NOT IN (SELECT country FROM countries WHERE name = 'China');
SELECT artist_name, SUM(tickets_sold) as total_tickets_sold FROM Concerts GROUP BY artist_name ORDER BY total_tickets_sold DESC;
INSERT INTO talent_acquisition (id, job_title, job_location, number_of_openings, source) VALUES (2001, 'Software Engineer', 'Seattle', 3, 'LinkedIn');
SELECT AVG(workers) FROM hospitals WHERE location = 'urban';
SELECT AVG(DonationAmount) as AvgDonation FROM Donation JOIN Donor ON Donation.DonorID = Donor.DonorID WHERE DonationDate >= DATEADD(month, -1, GETDATE());
SELECT AVG(wage) FROM labor_practices WHERE country = 'Italy';
SELECT DISTINCT algorithm FROM fairness_research WHERE country = 'UK';
SELECT SUM(renewable_energy_consumption) FROM energy_consumption_data WHERE year = 2019;
SELECT MAX(co2_sequestration_rate) FROM forests WHERE country = 'Canada';
SELECT MIN(speed) FROM broadband_plans WHERE state = 'Texas';
SELECT COUNT(*) FROM posts WHERE brand_mentioned = 'Apple' AND industry = 'technology' AND country = 'Japan' AND post_time > DATE_SUB(NOW(), INTERVAL 1 WEEK);
SELECT AVG(score), MAX(score) FROM environmental_impact WHERE country = 'Australia';
SELECT AVG(price) FROM co_ownership WHERE city = 'Seattle';
SELECT SUM(tree_count) FROM tree_counts INNER JOIN species_growth_rates ON tree_counts.species = species_growth_rates.species WHERE growth_rate > 1.2;
SELECT continent, AVG(temperature) FROM temperature WHERE year BETWEEN 1950 AND 2000 GROUP BY continent;
INSERT INTO tourist_sites (id, name, country, visitor_count) VALUES (1, 'Colosseum', 'Italy', 6000000);
DELETE FROM water_conservation WHERE id = 1;
DELETE FROM startups WHERE funding_amount IS NULL;
INSERT INTO athletes (id, name, age, team) VALUES (1, 'Michael Jordan', 50, 'Bulls'), (2, 'Serena Williams', 40, 'Eagles');
SELECT region, MAX(safety_incident_rate) FROM plant_locations GROUP BY region;
SELECT protocol FROM safety_protocols_2 WHERE review_date < DATE_SUB(CURDATE(), INTERVAL 2 YEAR);
SELECT MIN(Age) FROM PlayerGames WHERE GameRating = 10;
SELECT MIN(AdoptionRevenue) FROM VRHardwareMiddleEast WHERE Country = 'Middle East';
SELECT SUM(budget) FROM public_transportation WHERE city = 'New York' AND state = 'New York';
SELECT department, MIN(severity) FROM dept_vulnerabilities WHERE department = 'Finance';
SELECT SUM(visitors) FROM Exhibitions WHERE city IN ('Los Angeles', 'San Francisco');
INSERT INTO planets (id, name, distance_to_sun) VALUES (5, 'Pluto', 3.67);
SELECT COUNT(*) FROM DefenseProjects WHERE (country1 = 'China' AND country2 = 'Pakistan') OR (country1 = 'Pakistan' AND country2 = 'China') AND start_year BETWEEN 2015 AND 2020;
DELETE FROM habitats WHERE name = 'South America';
DELETE FROM bridges WHERE region = 'West Coast' AND resilience_score < 80;
SELECT agency_name, SUM(data_value) FROM intelligence_budget WHERE category = 'budget' GROUP BY agency_name ORDER BY SUM(data_value) DESC LIMIT 1;
SELECT * FROM accommodations WHERE type <> 'Elevator';
SELECT COUNT(*) FROM investments WHERE date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY investor;
 UPDATE regulations SET status = 'active' WHERE jurisdiction LIKE '%US%' AND publication_date < '2021-01-01';
DELETE FROM Suppliers WHERE region = 'Greater Chicago';
SELECT name, launched_satellites FROM countries;
SELECT m.name FROM mines m WHERE m.annual_coal_production > 100000;
SELECT COUNT(*) FROM mine_stats WHERE mine_type = 'coal' AND depth > 2000;
DELETE FROM funding_records WHERE company_id NOT IN (SELECT id FROM companies WHERE industry = 'Technology');
SELECT SUM(cost) FROM Ingredients WHERE dish_id IN (SELECT dish_id FROM Dishes WHERE dish_name = 'Tofu Scramble') AND ingredient_name NOT IN ('Spices', 'Oil');
SELECT a.sport, COUNT(DISTINCT a.athlete_id) AS athletes_enrolled FROM athlete a JOIN wellbeing_programs wp ON a.athlete_id = wp.athlete_id WHERE wp.enrollment_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY a.sport;
SELECT MIN(salary) FROM nurses WHERE is_union_member = false AND department = 'nursing';
SELECT SUM(Ridership) FROM Public_Transportation WHERE City IN ('London', 'Paris');
UPDATE museums SET status = 'open' WHERE name = 'New York Museum of Modern Art';
SELECT condition, COUNT(*) FROM treatments WHERE city = 'Seattle' GROUP BY condition ORDER BY COUNT(*) DESC LIMIT 1;
SELECT team_id, COUNT(*) as games_played FROM hockey_games GROUP BY team_id;
SELECT pt.type, AVG(s.energy_savings) as avg_savings FROM ProjectTypes pt INNER JOIN Savings s ON pt.id = s.project_type_id GROUP BY pt.id;
SELECT AVG(attendance) FROM Art_Exhibition WHERE museum_name = 'Art Museum' AND year = 2020;
SELECT tm.name, (SUM(ev.vehicle_count) / SUM(cv.vehicle_count)) AS ratio FROM transportation_modes tm JOIN electric_vehicles ev ON tm.id = ev.mode_id JOIN conventional_vehicles cv ON tm.id = cv.mode_id GROUP BY tm.name;
SELECT SUM(availability) FROM shared_vehicles WHERE type = 'Autonomous' AND city = 'San Francisco';
SELECT name, city, balance_usd FROM mobile_subscribers
SELECT age, COUNT(*) FROM Fans WHERE event_id IN (SELECT event_id FROM Events WHERE category = 'Sports') GROUP BY age;
SELECT hotel_id, SUM(revenue) FROM hotel_revenue WHERE year = 2021 GROUP BY hotel_id;
SELECT AVG(processing_time) FROM fairness_audits WHERE country IN ('USA', 'Canada')
SELECT subscriber_type, COUNT(*), country FROM country GROUP BY subscriber_type, country;
SELECT COUNT(*) FROM AAS_Articles WHERE publication BETWEEN '2022-06-01' AND '2022-06-30';
SELECT g.GarmentName, COUNT(*) AS Count FROM Customers c JOIN GarmentSales s ON c.CustomerID = s.CustomerID JOIN Garments g ON s.GarmentID = g.GarmentID WHERE g.IsSustainable = TRUE AND PurchaseDate >= DATEADD(YEAR, -1, CURRENT_DATE) GROUP BY g.GarmentName ORDER BY Count DESC LIMIT 3;
SELECT AVG(cnt) FROM (SELECT COUNT(*) AS cnt FROM research_grants WHERE faculty_department LIKE '%Computer Science%' GROUP BY year) AS subquery;
SELECT EXTRACT(MONTH FROM loan_date) AS month, AVG(loan_amount) FROM loans WHERE loan_type = 'socially responsible' GROUP BY month;
SELECT product_name, transparency_score FROM products ORDER BY transparency_score DESC LIMIT 1;
SELECT SUM(Materials.quantity) FROM Materials JOIN Products ON Materials.material_id = Products.material_id WHERE Materials.is_sustainable = TRUE AND Products.name LIKE '%outerwear%';
SELECT city, SUM(tickets_sold * price) as revenue FROM Exhibits GROUP BY city ORDER BY revenue DESC LIMIT 3;
SELECT AVG(Streams) FROM Streaming WHERE Genre = 'Latin';
SELECT DATE_FORMAT(e.date, '%H') AS hour_of_day, e.gender, AVG(e.attendance) AS avg_attendance FROM Events e WHERE e.event_type = 'Music' AND e.date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY hour_of_day, e.gender;
SELECT SUM(amount) FROM grants JOIN faculty ON grants.faculty_id = faculty.faculty_id WHERE department = 'Computer Science' AND gender = 'Female';
SELECT AVG(production_cost) FROM OrganicCottonClothing;
SELECT name, SUM(works_count) AS total_works FROM artists WHERE country IN ('Ghana', 'Kenya', 'Nigeria') GROUP BY name ORDER BY total_works DESC;
SELECT region, AVG(communication_score) FROM climate_projects WHERE project_type = 'mitigation' GROUP BY region;
SELECT year, month, SUM(events) FROM community_policing WHERE precinct = 'Precinct 7' AND year = YEAR(CURRENT_DATE) - 1 GROUP BY year, month;
SELECT COUNT(*) FROM biotech_startups WHERE funding_round BETWEEN DATEADD(MONTH, -18, GETDATE()) AND GETDATE() AND country IN ('Australia', 'New Zealand');
INSERT INTO community_education (country, program_name, start_date, end_date) VALUES ('Brazil', 'Wildlife Conservation Program', '2024-01-01', '2024-12-31');
SELECT name FROM product p JOIN certification c ON p.id = c.product_id WHERE is_vegan = true AND is_cruelty_free = false;
SELECT continent, MAX(communication_score) as max_score, MIN(communication_score) as min_score, COUNT(*) as total_projects FROM climate_projects WHERE project_type = 'adaptation' GROUP BY continent;
SELECT w1.sea_level_rise - w2.sea_level_rise AS sea_level_diff FROM (SELECT AVG(sea_level_rise) FROM SeaLevelData WHERE location LIKE 'Pacific%' AND year BETWEEN 1993 AND 2021) w1, (SELECT AVG(sea_level_rise) FROM SeaLevelData WHERE year BETWEEN 1993 AND 2021) w2;
SELECT SUM(capacity) FROM renewable_energy WHERE type = 'Wind Turbine' AND country = 'Germany';
SELECT AVG(word_count) FROM articles WHERE section = 'politics';
SELECT dish, COUNT(dish) AS count FROM orders WHERE order_date >= DATEADD(day, -60, GETDATE()) AND vegetarian = TRUE GROUP BY dish ORDER BY count DESC LIMIT 3;
SELECT SUM(otas_revenue) FROM otas JOIN hotels ON otas.hotel_id = hotels.hotel_id WHERE hotels.country = 'France' AND hotels.stars <= 3;
SELECT vehicle_type, AVG(quantity) AS avg_quantity FROM sales WHERE manufacturer_country = 'Germany' GROUP BY vehicle_type ORDER BY avg_quantity DESC;
SELECT city, usage_date, LAG(water_demand) OVER (PARTITION BY city ORDER BY usage_date) as prev_water_demand, water_demand, LAG(price) OVER (PARTITION BY city ORDER BY usage_date) as prev_price, price FROM water_demand_price ORDER BY city, usage_date;
SELECT State, 100.0 * COUNT(*) / SUM(COUNT(*)) over () as Percentage FROM LaborStatistics WHERE Job = 'Electricians' GROUP BY State ORDER BY Percentage DESC;
SELECT * FROM chemicals WHERE hazard_level = 'High';
SELECT country, SUM(product_count) as total_vegan_products FROM vegan_beauty_products WHERE vegan = true GROUP BY country;
SELECT continent, MAX(total_investment) FROM continent_summary;
SELECT AVG(Age) FROM Employees WHERE Department = 'Mining' AND Position = 'Engineer';
SELECT * FROM genetics.projects WHERE start_date >= '2022-01-01' AND duration > 9;
DELETE FROM landfill_capacity WHERE city = 'Paris' AND year = 2023;
SELECT SUM(capacity_mw) FROM wind_farms WHERE country = 'Germany' AND technology = 'onshore';
SELECT (SUM(CASE WHEN initiative_category = 'education' THEN donations.amount ELSE 0 END) / SUM(donations.amount)) * 100 as education_percentage FROM donations WHERE YEAR(donation_date) = 2019;
SELECT Donors.Country, AVG(Donations.DonationAmount) AS AverageDonationAmount FROM Donors INNER JOIN Donations ON Donors.DonorID = Donations.DonorID WHERE QUARTER(Donations.DonationDate) = 2 AND YEAR(Donations.DonationDate) = 2022 GROUP BY Donors.Country;
SELECT * FROM military_equipment WHERE equipment_category = 'Small Arms' AND YEAR(maintenance_date) = 2021;
SELECT b.brand_name, AVG(p.product_price) FROM MakeupProducts p JOIN MakeupBrands b ON p.brand_name = b.brand_name WHERE b.cruelty_free = TRUE GROUP BY b.brand_name;
SELECT region, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM donors d2 WHERE d1.region = d2.region) AS percentage FROM donors d1 WHERE donation_amount > 500 GROUP BY region;
SELECT COUNT(CASE WHEN owner_gender = 'Female' THEN 1 END) as num_women_owned, (COUNT(CASE WHEN owner_gender = 'Female' THEN 1 END) / COUNT(business_id)) * 100 as percentage FROM businesses WHERE district IN ('Kisumu', 'Nakuru', 'Kericho', 'Eldoret');
SELECT SUM(donations.amount) FROM donations JOIN donors ON donations.donor_id = donors.id WHERE donors.state = 'CA' AND donors.donor_type = 'foundation';
SELECT AVG(posts), AVG(comments), AVG(reactions) FROM (SELECT u.country, COUNT(p.post_id) AS posts, COUNT(c.comment_id) AS comments, COUNT(r.reaction_id) AS reactions FROM users u LEFT JOIN posts p ON u.user_id = p.user_id LEFT JOIN comments c ON p.post_id = c.post_id LEFT JOIN reactions r ON p.post_id = r.post_id WHERE u.country IN ('USA', 'India') GROUP BY u.country) sub;
INSERT INTO student_mental_health (id, student_id, mental_health_score, assessment_date)  VALUES (1, 101, 60, '2021-01-15'), (2, 102, 70, '2021-02-12'), (3, 103, 80, '2021-03-18');
SELECT MAX(transaction_amount) FROM clients WHERE region = 'Asia';
SELECT AVG(Salary) FROM Employees WHERE YEAR(HireDate) = 2020;
SELECT site_name, historical_period, COUNT(DISTINCT artifact_type) as artifact_count FROM excavation_sites s JOIN artifacts a ON s.site_id = a.site_id GROUP BY site_name, historical_period;
SELECT product, MAX(severity) as max_severity FROM vulnerabilities WHERE discovered_at >= DATE_SUB(NOW(), INTERVAL 1 YEAR) GROUP BY product;
SELECT SUM(ir.amount_raised) FROM company c JOIN investment_round ir ON c.id = ir.company_id WHERE c.industry = 'Healthtech' AND c.founder_immigrant = 'Yes';
SELECT department, COUNT(*) as project_count FROM research_projects GROUP BY department;
INSERT INTO research_vessels (id, name, type, length, max_depth_meters, region) VALUES (31, 'Ocean Explorer', 'Research Vessel', 80.5, 4000, 'Atlantic Ocean');
SELECT products.product_category, SUM(ingredients.cost) as total_cost FROM ingredients INNER JOIN suppliers ON ingredients.supplier_id = suppliers.supplier_id INNER JOIN products ON ingredients.product_id = products.product_id WHERE suppliers.is_sustainable = TRUE GROUP BY products.product_category;
SELECT Fish.fish_species, AVG(Farm.water_temperature) as AvgWaterTemp FROM Farm INNER JOIN Fish ON Farm.fish_species = Fish.fish_species GROUP BY Fish.fish_species;
SELECT COUNT(DISTINCT c.id) as country_count FROM Countries c INNER JOIN Sustainable_Practices sp ON c.id = sp.country_id WHERE c.continent = 'Oceania' AND sp.certification_date >= '2018-01-01';
SELECT AVG(apogee_altitude) FROM communication_satellites WHERE type = 'Communication' AND orbit = 'Geostationary';
SELECT s.team_name FROM sports_teams s WHERE s.stadium IS NULL;
DELETE FROM InclusiveHousingPolicies WHERE ImplementationDate < '2010-01-01';
SELECT garment_type, region, SUM(units_manufactured) FROM garment_manufacturing JOIN garments ON garment_manufacturing.garment_id = garments.garment_id WHERE EXTRACT(QUARTER FROM production_date) = 1 AND EXTRACT(YEAR FROM production_date) = 2021 GROUP BY garment_type, region;
INSERT INTO circular_economy_initiatives (id, location, initiative, start_date, end_date) VALUES (1, 'Berlin', 'Waste-to-Energy Project', '2022-01-01', '2025-12-31');
SELECT SUM(cost) FROM project_info WHERE category = 'Bridge Construction';
SELECT COUNT(*) FROM diversity_metrics;
SELECT warehouse_location FROM warehouse_data GROUP BY warehouse_location HAVING SUM(quantity) > 100;
INSERT INTO players (player_name, jersey_number, country_name) VALUES ('Sarah', 21, 'Canada');
SELECT JobTitle, AVG(CASE WHEN PERCENT_RANK() OVER (PARTITION BY JobTitle ORDER BY Salary) BETWEEN 0 AND 0.25 THEN Salary ELSE NULL END) - AVG(CASE WHEN PERCENT_RANK() OVER (PARTITION BY JobTitle ORDER BY Salary) BETWEEN 0.75 AND 1 THEN Salary ELSE NULL END) AS Salary_Difference FROM Employees GROUP BY JobTitle;
SELECT AVG(donation_amount) FROM donors WHERE country = 'United States' GROUP BY donor_id HAVING COUNT(donor_id) > 5;
SELECT SUM(Quantity) FROM Orders JOIN Menu ON Orders.MenuID = Menu.MenuID WHERE Menu.MenuType = 'Meal' AND Orders.OrderDate >= '2022-01-01' AND Orders.OrderDate < '2022-02-01' AND Menu.MenuItem LIKE '%vegan%';
SELECT SUM(rd_expenditure) FROM rd_expenditure INNER JOIN drug_approval ON rd_expenditure.drug_name = drug_approval.drug_name WHERE drug_approval.approval_body = 'MHRA' AND drug_approval.approval_year = 2020;
SELECT SUM(CO2_emissions * reduction_percentage) FROM emissions WHERE country LIKE 'South%' AND year = 2021;
DELETE FROM PlayerPreferences WHERE preference_type = 'VR';
SELECT DATE_PART('month', DonationDate) AS Month, SUM(DonationAmount) FROM RecurringDonors GROUP BY Month ORDER BY Month;
SELECT name, location, MAX(num_electric_vehicles) FROM AutoShow;
UPDATE fans SET team = 'Portland Blue' WHERE id = 345;
SELECT t.name, SUM(m.revenue) as total_revenue FROM merchandise_sales m JOIN teams t ON m.team_id = t.id WHERE m.year = 2021 GROUP BY t.name;
SELECT MAX(price) FROM hair_care_sales WHERE is_natural = true AND country = 'France';
SELECT COUNT(*) FROM product_launches WHERE product_type LIKE 'Body Care%' AND gluten_free = TRUE AND YEAR(launch_date) = 2020;
SELECT SUM(num_incidents) FROM cybersecurity_incidents WHERE region = 'Asia' AND year BETWEEN 2019 AND 2021;
SELECT artist, genre, year, SUM(streams) AS total_streams FROM ArtistStreaming WHERE genre = 'pop' GROUP BY artist, genre, year HAVING total_streams IN (SELECT DISTINCT total_streams FROM (SELECT genre, year, MAX(SUM(streams)) OVER (PARTITION BY genre) AS total_streams FROM ArtistStreaming WHERE genre = 'pop' GROUP BY genre, year) AS subquery) LIMIT 3;
SELECT r.region_name, (COUNT(t.teacher_id) * 100.0 / (SELECT COUNT(*) FROM teachers)) as percentage_attended FROM teachers t JOIN regions r ON t.region_id = r.region_id WHERE workshop_attendance = TRUE GROUP BY r.region_name;
SELECT FB.BrandName, SUM(WG.WasteQuantity) AS TotalWasteGenerated, SUM(WG.RecycledQuantity) AS TotalWasteRecycled FROM FashionBrands FB INNER JOIN WasteGeneration WG ON FB.BrandID = WG.BrandID GROUP BY FB.BrandName;
SELECT AVG(Cost) FROM MenuItems WHERE MenuItemType = 'Entree' AND MenuItemName IN ('Vegan Cheese Pizza', 'Quinoa Salad', 'Chickpea Curry');
SELECT DATEPART(YEAR, transaction_date) as year, DATEPART(MONTH, transaction_date) as month, COUNT(*) as total_transactions FROM transactions WHERE transaction_date BETWEEN DATEADD(year, -1, GETDATE()) AND GETDATE() GROUP BY DATEPART(YEAR, transaction_date), DATEPART(MONTH, transaction_date);
SELECT Destination, SUM(SustainabilityRating) AS TotalRating FROM SustainabilityRatings WHERE Country = 'United Arab Emirates' OR Country = 'Israel' OR Country = 'Turkey' AND SustainabilityRating < 5 GROUP BY Destination ORDER BY TotalRating ASC;
SELECT 100.0 * SUM(CASE WHEN Outcome = 'positive' THEN 1 ELSE 0 END) / COUNT(*) FROM PatientTherapyOutcomes WHERE Condition = 'OCD' AND Therapy = 'exposure and response prevention';
SELECT expenditure FROM r_and_d WHERE drug_name = 'GHI-999' AND quarter = 1 AND year = 2022;
 SELECT city, investment FROM (  SELECT city, investment,  ROW_NUMBER() OVER (ORDER BY investment DESC) as rn  FROM network_investments  WHERE year = 2022  ) x  WHERE rn <= 5; 
SELECT country, SUM(learned_sustainability + learned_fairtrade) as total_learned FROM customer_education WHERE country = 'India';
SELECT project_name, AVG(project_budget) AS avg_budget, RANK() OVER (ORDER BY AVG(project_budget) DESC) AS rank FROM economic_diversification WHERE country = 'Malawi' GROUP BY project_name HAVING rank = 1;
SELECT SUM(num_satellites) FROM satellites_launched WHERE company = 'SpaceX';
SELECT city, route_number, SUM(trips) FROM Route_Transportation GROUP BY city, route_number;
SELECT MAX(Speed) FROM EV_Data WHERE City = 'LosAngeles' AND Month = 'February' AND Type = 'Electric';
SELECT d.destination_name, COUNT(vs.visitor_id) as num_solo_travelers FROM destinations d JOIN visitor_stats vs ON d.destination_id = vs.destination_id WHERE vs.party_size = 1 GROUP BY d.destination_name ORDER BY num_solo_travelers DESC FETCH FIRST 1 ROW ONLY;
INSERT INTO savings (account_number, interest_rate, customer_name) VALUES (301, 0.02, 'Aisha');
SELECT AVG(readers.age) FROM readers INNER JOIN preferences ON readers.id = preferences.reader_id WHERE readers.region = 'Midwest' AND preferences.category = 'technology';
SELECT AttorneyID, MAX(BillingAmount) AS Max_Billing_Amount, MIN(BillingAmount) AS Min_Billing_Amount FROM AttorneyPrecedents GROUP BY AttorneyID;
SELECT SUM(carbon_footprint) FROM Hotels WHERE country = 'Germany';
SELECT OrganizationName, SUM(Spending) as TotalSpending, COUNT(ProjectID) as AvgProjectsPerOrg FROM HumanitarianAssistance JOIN Organizations ON HumanitarianAssistance.OrganizationID = Organizations.OrganizationID GROUP BY OrganizationName HAVING TotalSpending > 10000000 ORDER BY AvgProjectsPerOrg DESC;
SELECT smart_contracts.name, smart_contracts.developer FROM smart_contracts WHERE smart_contracts.date > '2020-01-01';
SELECT c.county_name, COUNT(l.library_id)  FROM libraries l INNER JOIN counties c ON l.county_id = c.county_id GROUP BY c.county_name ORDER BY COUNT(l.library_id) DESC;
SELECT company, COUNT(*) as patents_filed FROM biosensors.patents WHERE filing_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR) GROUP BY company;
SELECT COUNT(DISTINCT industry) FROM company_industry WHERE company_name IN (SELECT company_name FROM company_founding WHERE founder_race <> 'Caucasian');
SELECT size, SUM(quantity) FROM Sizes WHERE size IN ('XL', 'XXL') GROUP BY size;
SELECT success_rate FROM campaigns WHERE state = 'CA';
SELECT AVG(height) AS avg_height, AVG(width) AS avg_width, AVG(depth) AS avg_depth FROM dimensions d JOIN works w ON d.work_id = w.work_id WHERE w.style = 'Surrealism' AND w.category = 'Sculpture';
SELECT brand, SUM(reduction) FROM co2_emissions GROUP BY brand;
SELECT country, recycling_rate FROM recycling_rates WHERE year = 2019;
SELECT AVG(viewers) as avg_viewers FROM VIEWERSHIP WHERE event_name = 'Super Bowl' AND year BETWEEN 2017 AND 2021;
SELECT project_name, category, end_date FROM rnd_projects WHERE category = 'Space';
SELECT MAX(od.depth) as max_depth FROM marine_species ms JOIN ocean_depths od ON ms.habitat_type = od.location;
SELECT MAX(depth) FROM deep_sea_features WHERE name = 'Sirena Deep';
SELECT d.name, COUNT(m.id) as movie_count FROM directors d INNER JOIN movies m ON d.id = m.director_id WHERE m.genre = 'Action' GROUP BY d.name ORDER BY movie_count DESC LIMIT 1;
SELECT incident_type, AVG(resolution_time) as avg_resolution_time FROM security_incidents GROUP BY incident_type;
SELECT strategy, AVG(return_rate) as avg_return FROM investments GROUP BY strategy;
SELECT COUNT(*) FROM genetics.research_projects WHERE location = 'Brazil' AND focus = 'Gene Therapy';
INSERT INTO authors (author_id, first_name, last_name, email) VALUES (21, 'Alex', 'Garcia', '[alex.garcia@example.com](mailto:alex.garcia@example.com)');
SELECT tech, capacity FROM energy_storage_capacity WHERE tech IN ('Batteries', 'Pumped Hydro');
SELECT name, digital_divide_score, RANK() OVER (ORDER BY digital_divide_score DESC) AS rank FROM countries;
SELECT MAX(ESG_rating) FROM companies WHERE sector = 'finance';
SELECT community_name, AVG(growth_rate) FROM population_growth GROUP BY community_name;
SELECT organization_id, SUM(amount) as total_donation FROM donations WHERE donation_date BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY organization_id ORDER BY total_donation DESC LIMIT 1;
SELECT zip FROM community_health_workers WHERE consultations = (SELECT MAX(consultations) FROM community_health_workers);
SELECT state FROM state_budget WHERE service = 'Transportation' AND allocation > (SELECT allocation FROM state_budget sb WHERE sb.state = state_budget.state AND sb.service = 'Education') GROUP BY state;
SELECT COUNT(DISTINCT from_address) AS unique_senders FROM binance_smart_chain_txs WHERE timestamp >= '2022-03-01 00:00:00' AND timestamp < '2022-04-01 00:00:00' AND to_address LIKE '0x%';
SELECT state, AVG(avg_heart_rate) FROM fitness.workouts INNER JOIN fitness.users ON workouts.user_id = users.id GROUP BY state HAVING AVG(avg_heart_rate) > 120;
SELECT c.CountryName, COUNT(r.RecallID) as TotalRecalls FROM Country c JOIN Recall r ON c.CountryID = r.CountryID GROUP BY c.CountryName ORDER BY TotalRecalls DESC;
DELETE FROM transactions WHERE transactions.account_id IN (SELECT accounts.account_id FROM accounts WHERE accounts.account_type = 'Standard');
SELECT c.name, i.strategy_name, SUM(i.value) FROM customers c JOIN investment_portfolios i ON c.id = i.customer_id GROUP BY c.id, c.name, i.strategy_name;
SELECT AVG(heart_rate) FROM members WHERE age BETWEEN 25 AND 30;
SELECT e.event_name, COUNT(DISTINCT attendee_id) FROM attendee_zips az JOIN tickets t ON az.attendee_id = t.attendee_id JOIN events e ON t.event_id = e.event_id WHERE az.attendee_zip = 90210 GROUP BY e.event_name;
SELECT AVG(streams) FROM songs WHERE genre = 'hip-hop' AND release_year = 2022;
SELECT * FROM open_data_initiatives WHERE state = 'California';
SELECT country, level FROM carbon_pricing ORDER BY level DESC LIMIT 3
SELECT permit_id, permit_value, RANK() OVER (ORDER BY permit_value DESC) as rank FROM tx_permits WHERE state = 'TX' AND permit_date >= DATEADD(YEAR, -1, CURRENT_DATE) GROUP BY permit_id, permit_value ORDER BY permit_value DESC;
SELECT DISTINCT m.member_id FROM member_profiles m INNER JOIN gym_class_attendance gca ON m.member_id = gca.member_id WHERE m.member_city = 'LA' AND gca.class_name IN ('yoga', 'pilates');
SELECT COUNT(DISTINCT chemical_code) FROM production_batch;
SELECT COUNT(DISTINCT gs.id) FROM grad_students gs JOIN papers p ON gs.id = p.author_id WHERE gs.country IN (SELECT name FROM countries WHERE region = 'Africa') AND p.year BETWEEN YEAR(CURRENT_DATE) - 3 AND YEAR(CURRENT_DATE) GROUP BY gs.id HAVING COUNT(DISTINCT p.paper_id) >= 2;
SELECT AVG(price_per_night) FROM BudgetPrices WHERE ota = 'Expedia' AND city = 'Tokyo' AND hotel_class = 'budget';
SELECT * FROM peacekeeping_operations WHERE lead_organization IN ('European Union', 'League of Arab States');
SELECT AVG(horsepower) FROM green_vehicles WHERE type = 'Electric';
SELECT MAX(allocation) FROM climate_adaptation_max WHERE year = 2020;
SELECT br.route_name, SUM(f.fare_amount) as total_revenue FROM bus_routes br INNER JOIN fares f ON br.route_id = f.route_id WHERE f.fare_date >= DATEADD(month, -1, GETDATE()) GROUP BY br.route_name;
SELECT COUNT(*) FROM properties WHERE city = 'Austin' AND state = 'TX' AND build_date > '2010-01-01' AND co_owners > 1;
SELECT actor_id, name, attack_count FROM (SELECT actor_id, name, attack_count, RANK() OVER (ORDER BY attack_count DESC) as threat_rank FROM malware_threats WHERE attack_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) GROUP BY actor_id, name, attack_count) subquery WHERE threat_rank <= 5;
DELETE FROM operations WHERE year < 2000;
INSERT INTO state_facts (state, capital, population, area_sq_miles) VALUES ('IL', 'Springfield', 12671821, 57914), ('FL', 'Tallahassee', 21734418, 65758);
SELECT context.miner_name, sql.reclamation_costs FROM reclamation_expenses sql JOIN (SELECT miner_name, worker_count, worker_rank FROM labor_force, miner_year_worker_count WHERE labor_force.miner_name = miner_year_worker_count.miner_name AND worker_rank = 1 AND country = 'Europe') context ON sql.miner_name = context.miner_name
SELECT MAX(investment) FROM social_impact_bonds WHERE country = 'Africa';
SELECT MIN(word_count) FROM news WHERE author = 'Jane Smith';
SELECT MIN(ProductionCapacity) FROM Mines WHERE MineType = 'Gold' AND Country = 'Australia';
SELECT name FROM campaigns_2021 WHERE budget = (SELECT MAX(budget) FROM campaigns_2021);
SELECT AthleteID, COUNT(*) FROM AthletePromotions WHERE PromotionDate >= DATEADD(YEAR, -1, GETDATE()) GROUP BY AthleteID ORDER BY COUNT(*) DESC;
SELECT region, SUM(size) FROM ProtectedHabitats WHERE size IS NOT NULL GROUP BY region;
SELECT product_type, NVL(SUM(quantity), 0) AS total_quantity FROM products GROUP BY ROLLUP (product_type) ORDER BY product_type;
SELECT region, COUNT(*) as num_reports FROM threat_intelligence WHERE report_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) AND region != 'Asia' GROUP BY region;
SELECT Resource, COUNT(*) FROM TeacherAccess WHERE District = 'Rural Education' GROUP BY Resource ORDER BY COUNT(*) DESC;
SELECT MAX(duration) FROM MedicalCheckups WHERE checkup_date >= '2021-01-01' AND checkup_date < '2022-01-01';
SELECT MAX(cost) FROM building_permits WHERE location = 'New York' AND YEAR(issue_date) = 2019;
SELECT * FROM CommunityHealthWorker WHERE State = 'Florida' ORDER BY Age DESC LIMIT 1;
SELECT DISTINCT l.name, e.score FROM MiningLocation l, EnvironmentalImpact e WHERE l.id = e.location_id;
SELECT item_id, item_name FROM menu_items WHERE calorie_count > (SELECT AVG(calorie_count) FROM menu_items);
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM workers w WHERE industry = 'electronics' AND region = 'Europe')) AS percentage FROM workers w WHERE industry = 'electronics' AND region = 'Europe' AND industry_4_0_training = TRUE;
SELECT CustomerID FROM Investments WHERE Market = 'US' INTERSECT SELECT CustomerID FROM Investments WHERE Market = 'Canada'
UPDATE students SET email = 'newemail@example.com' WHERE country = 'China';
SELECT SUM(trips) FROM multimodal_mobility WHERE city IN ('Paris', 'Berlin');
SELECT AVG(square_footage) FROM green_buildings;
SELECT TeamID, AVG(Score) FROM PlayerScore JOIN PlayerTeam ON PlayerScore.PlayerID = PlayerTeam.PlayerID GROUP BY TeamID ORDER BY AVG(Score) DESC LIMIT 1;
SELECT MONTH(sale_date) AS sale_month, SUM(quantity) AS total_sales FROM sales WHERE material IN ('organic_cotton', 'recycled_polyester', 'tencel') GROUP BY sale_month;
SELECT AVG(age) FROM patients WHERE improvement = 'improved' AND sexual_orientation IN ('gay', 'lesbian', 'bisexual', 'queer', 'questioning', 'pansexual', 'asexual');
SELECT SUM(co2_emission) FROM deliveries WHERE country = 'Japan';
SELECT vt.vehicle_type, mr.request_type, COUNT(mr.request_id) as num_requests FROM vehicle_types vt INNER JOIN maintenance_requests mr ON vt.vehicle_type_id = mr.vehicle_type_id GROUP BY vt.vehicle_type, mr.request_type ORDER BY num_requests DESC;
SELECT customer_id FROM shipments WHERE shipment_date >= CURDATE() - INTERVAL 7 DAY GROUP BY customer_id ORDER BY SUM(delivery_time) DESC LIMIT 1;
SELECT DISTINCT product FROM shipments WHERE shipped_to = 'Canada' AND shipped_date >= '2021-06-01'
SELECT COUNT(*) FROM posts WHERE post_text LIKE '%friends%';
SELECT JobTitle, MAX(Salary) FROM Salaries GROUP BY JobTitle;
SELECT COUNT(*) FROM fairness_issues WHERE model_name = 'ModelX' AND country = 'US';
SELECT r.study_name, p.pi_name FROM Research_Studies r JOIN Principal_Investigators p ON r.pi_id = p.pi_id;
SELECT MIN(data_usage_gb) FROM mobile_subscribers WHERE city = 'Chicago';
DELETE FROM plaintiffs WHERE last_name = 'Lee';
SELECT MAX(budget) FROM startups.budgets WHERE startup_id IN (SELECT id FROM startups.startups WHERE country = 'USA');
SELECT COUNT(*) FROM BodyStats WHERE BodyFat > 20;
SELECT d.country_id, MAX(d.court_appearances) AS max_appearances, MIN(d.court_appearances) AS min_appearances FROM defendants d GROUP BY d.country_id;
DELETE FROM CommunityEvents WHERE event_date < NOW() - INTERVAL '6 month';
SELECT COUNT(p.id) FROM publication p JOIN faculty f ON p.faculty_id = f.id WHERE f.gender = 'female' AND p.year BETWEEN YEAR(CURRENT_DATE) - 5 AND YEAR(CURRENT_DATE);
SELECT safety_rating FROM AutonomousVehicle WHERE price = (SELECT MAX(price) FROM AutonomousVehicle);
SELECT city_id, name, COUNT(*) as total_incidents FROM emergency_incidents ei JOIN cities c ON ei.city_id = c.city_id GROUP BY city_id, name;
SELECT SUM(Quantity * UnitPrice) FROM Sales_2020 WHERE Manufacturer = 'Northrop Grumman' AND DestinationCountry LIKE 'North America%';
SELECT location, MIN(total_weight) FROM WarehousesAfrica WHERE location LIKE '%Africa%';
SELECT year, SUM(value) FROM Military_Equipment_Sales WHERE year = 2017 GROUP BY year;
SELECT program, COUNT(*), AVG(age) FROM athletes WHERE program = 'Fitness' GROUP BY program;
CREATE TABLE living_wage (country VARCHAR(50), apparel_manufacturing_sector VARCHAR(50), living_wage_minimum FLOAT, living_wage_maximum FLOAT);
SELECT COUNT(*) FROM security_incidents si JOIN users u ON si.user_id = u.user_id WHERE incident_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) AND u.department_size > 100;
SELECT AVG(avg_distance) FROM space_stations WHERE active = TRUE AND location = 'ISS';
SELECT COUNT(*) FROM marine_protected_areas WHERE location = 'Indian' AND min_depth > 100;
SELECT COUNT(*) FROM investment JOIN investor ON investment.investor_id = investor.investor_id WHERE investor.country = 'Brazil' AND EXTRACT(YEAR FROM investment_date) = 2022;
SELECT donors.name, donors.email, SUM(donations.amount) as total_donation FROM donors INNER JOIN donations ON donors.id = donations.donor_id GROUP BY donors.id;
SELECT SUM(A.Price) FROM Artwork A JOIN Artists AR ON A.ArtistID = AR.ArtistID WHERE YEAR(AR.BirthDate) BETWEEN 1800 AND 1899;
SELECT Program, AVG(DonationAmount) FROM Donors WHERE Country = 'Canada' GROUP BY Program;
UPDATE production_data_2 SET quantity = 1000 WHERE element = 'Gadolinium';
SELECT Material, Gender, SUM(Sales) AS TotalSales FROM SalesByMaterialAndGender GROUP BY Material, Gender;
SELECT DISTINCT Test FROM VehicleTesting WHERE Make = 'Toyota' AND Result = 'Pass';
SELECT COUNT(*) / (SELECT COUNT(*) FROM projects WHERE country = 'Brazil') FROM projects WHERE country = 'Brazil';
SELECT currency, COUNT(*) AS num_transactions, SUM(sales_amount) AS total_value FROM transaction_data WHERE transaction_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY currency;
SELECT AVG(c.avg_salary) as avg_salary FROM mining_companies c WHERE c.region = 'Asia-Pacific';
SELECT attorneys.name FROM attorneys LEFT JOIN cases ON attorneys.id = cases.attorney_id AND cases.result = 'won' WHERE attorneys.city = 'Washington D.C' AND cases.id IS NULL;
SELECT MAX(Headshots) FROM SniperElite WHERE Headshots > 50;
SELECT state_abbr, AVG(budget_allocation/population) FROM states GROUP BY state_abbr;
SELECT state, COUNT(*) as completed_projects FROM rural_infrastructure WHERE status = 'Completed' GROUP BY state;
SELECT AVG(budget) AS avg_budget FROM national_security_budgets WHERE year BETWEEN 2010 AND 2020 AND agency_name IN ('Mossad', 'CIA', 'FSB', 'MI6', 'MoI');
SELECT (SELECT COUNT(*) FROM IoTDevices WHERE region = 'Asia' AND firmware_version LIKE '3.%') AS Total_Devices, AVG(temperature) AS Avg_Temperature FROM WeatherData WHERE region = 'Asia' AND date BETWEEN '2022-12-01' AND '2022-12-31';
SELECT name FROM companies WHERE esg_score > (SELECT AVG(esg_score) FROM companies);
SELECT SUM(TIMESTAMPDIFF(HOUR, start_time, end_time)) FROM incident_response WHERE incident_response.incident_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH);
SELECT AVG(age) FROM member_demographics WHERE device_id = 1;
SELECT title, creation_year FROM Artworks WHERE art_movement LIKE '%impressionism%';
SELECT WorkerID, Address FROM WorkerContactInfo WHERE State = 'Florida' AND LastUpdated > '2021-01-01';
DELETE FROM Languages WHERE Status = 'Inactive';
SELECT MIN(MinCapacity) FROM FleetMinCapacity WHERE FleetName IN ('Blue', 'Yellow');
SELECT AVG(s.duration) as avg_duration FROM songs s WHERE s.genre IN ('Hip Hop', 'R&B');
SELECT DISTINCT Language FROM Arctic_Languages WHERE Region NOT IN ('Greenland', 'Canada');
SELECT r.name FROM ai_researcher r LEFT JOIN ai_papers p ON r.id = p.researcher_id WHERE p.id IS NULL;
SELECT COUNT(permit_number) FROM Building_Permits WHERE state = 'FL' AND quarter = 2 AND year = 2022;
SELECT gender, AVG(balance) FROM customers GROUP BY gender;
SELECT AVG(Quantity) FROM Erbium_Production WHERE Year = 2019;
SELECT COUNT(*) FROM projects WHERE location = 'New York, NY' AND status = 'In Progress' AND type = 'Transportation';
SELECT drug_name, COUNT(*) as approval_count FROM drug_approvals WHERE approval_country IN ('EU', 'Japan') GROUP BY drug_name ORDER BY drug_name;
SELECT name, type, year, country FROM (SELECT name, type, year, country, MIN(year) OVER () as min_year FROM ArtHeritage) t WHERE year = min_year;
UPDATE CarbonOffset SET amount = 6000 WHERE project_name = 'ForestryProject1';
SELECT vessel_type, SUM(total_containers) FROM vessel_loading WHERE EXTRACT(MONTH FROM loading_date) = 2 AND EXTRACT(YEAR FROM loading_date) = 2022 GROUP BY vessel_type;
SELECT sector, AVG(DATEDIFF(end_date, start_date)) as avg_time FROM Disaster_Response_Asia WHERE location = 'Asia' GROUP BY sector;
SELECT SUM(co2_reduction) FROM offset_initiatives WHERE region = 'South America' AND year = 2020;
SELECT manufacturing_id, safety_rating FROM (SELECT manufacturing_id, safety_rating, RANK() OVER (PARTITION BY manufacturer_country ORDER BY safety_rating DESC) as safety_rank FROM chemical_manufacturing WHERE manufacturer_country = 'Asia') WHERE safety_rank <= 2
SELECT manufacturer_name, AVG(weight) as avg_weight FROM ManufacturerMaterials GROUP BY manufacturer_name;
SELECT country, SUM(quantity) FROM aid_recipients WHERE aid_type IN ('food', 'water') GROUP BY country ORDER BY SUM(quantity) DESC;
SELECT SUM(incidents) FROM CybersecurityIncidents WHERE region = 'Europe' AND year = 2021;
SELECT country, SUM(oil_production_mbbl) FROM production_figures WHERE year = 2020 GROUP BY country;
SELECT age_group, obesity_rate FROM obesity_rates WHERE country = 'United States';
SELECT SUM(s.investment_amount) FROM startup s WHERE s.founder_identity = 'Black or African American' AND s.industry = 'Artificial Intelligence';
SELECT payment_method, SUM(quantity_sold) as total_quantity_sold_online FROM sales WHERE region = 'London' AND garment_material = 'wool' AND transaction_date >= '2022-01-01' AND transaction_date <= '2022-12-31' AND payment_method IS NOT NULL GROUP BY payment_method;
UPDATE financial_capability_client SET religion = (SELECT religion FROM shariah_finance_client f WHERE f.client_id = financial_capability_client.client_id) FROM financial_capability_client INNER JOIN shariah_finance_loan l ON financial_capability_client.client_id = l.client_id;
SELECT 'Pacific Islands' AS region, country, SUM(num_centers) AS total_centers FROM pacific_islands_legal_aid GROUP BY country UNION ALL SELECT 'Australia' AS region, country, SUM(num_centers) AS total_centers FROM australia_legal_aid GROUP BY country;
SELECT i.sector_name, SUM(c.water_consumption) FROM industrial_sectors i JOIN california_water_usage c ON i.sector_id = c.sector_id WHERE c.year = 2020 GROUP BY i.sector_name;
INSERT INTO esports_event (name, location, start_date, end_date, prize_pool, game_id) VALUES ('CyberSphereCup', 'LA', '2024-01-01', '2024-01-10', 500000, (SELECT game_id FROM game WHERE name = 'CS'))
SELECT d.district_name, FLOOR(c.age / 10) * 10 AS age_group, COUNT(crime_id) crime_count FROM crimes c JOIN citizens ON c.committed_by_id = citizens.citizen_id JOIN city_districts d ON citizens.district_id = d.district_id GROUP BY d.district_name, age_group;
INSERT INTO landfill_capacity (location, capacity) VALUES ('Berlin', 25000);
SELECT c.name, bp.name, SUM(c.usage) as total_usage FROM customers c JOIN broadband_plans bp ON c.broadband_plan_id = bp.id WHERE c.created_at >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 1 MONTH) GROUP BY c.name, bp.name ORDER BY total_usage DESC LIMIT 5;
SELECT product_id, MAX(sale_price) FROM HairCareSales WHERE is_natural = true AND country = 'Canada' AND sale_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY product_id;
SELECT hotel_category, AVG(engagement_time) as avg_engagement_time FROM hotel_virtual_tours WHERE hotel_category = 'Luxury' AND tour_date BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY hotel_category;
SELECT AVG(quantity) FROM production_neodymium WHERE year = 2020;
SELECT COUNT(tickets.ticket_id) FROM tickets INNER JOIN games ON tickets.game_id = games.game_id WHERE games.sport = 'Basketball' AND (games.city = 'Los Angeles' OR games.city = 'Chicago') AND tickets.sale_date >= DATEADD(quarter, -1, GETDATE());
SELECT COUNT(*) FROM hotels h JOIN countries c ON h.country = c.country WHERE has_sustainable_practices = true AND c.continent = 'Africa';
SELECT SUM(teams.wins) FROM teams WHERE teams.mascot LIKE 'B%';
SELECT investors.name FROM investors JOIN investment_rounds ON investors.id = investment_rounds.investor_id JOIN companies ON investment_rounds.company_id = companies.id WHERE investment_rounds.round_type = 'Series C' AND companies.industry = 'Fintech' ORDER BY investment_rounds.date DESC LIMIT 1;
SELECT h.Country, h.Year, COUNT(*) as TotalEvents FROM HumanitarianAssistance h JOIN SouthAmerica sa ON h.Country = sa.Country WHERE h.Year BETWEEN DATEADD(year, -10, GETDATE()) AND GETDATE() GROUP BY h.Country, h.Year;
SELECT hotel_name, rating FROM hotel_ratings WHERE city = 'Amsterdam' ORDER BY rating DESC LIMIT 1;
INSERT INTO Employees (EmployeeID, FirstName, LastName, Department, TrainingCompletion) VALUES (8, 'Fatima', 'Ahmed', 'IT', '2022-05-10');
INSERT INTO customer (customer_id, name, dob, country) VALUES ((SELECT MAX(customer_id) FROM customer) + 1, 'Leila Ahmed', '1985-04-15', 'Egypt');
SELECT s.stablecoin_name, SUM(bdv.daily_volume) as total_volume FROM binance_stablecoins s JOIN binance_daily_volumes bdv ON s.stablecoin_id = bdv.stablecoin_id WHERE bdv.daily_volume_date >= NOW() - INTERVAL '7 days' AND s.network = 'Binance' GROUP BY s.stablecoin_name ORDER BY total_volume DESC LIMIT 5;
SELECT country, SUM(value) FROM OrganicProduceExports WHERE year = 2019 GROUP BY country ORDER BY SUM(value) DESC LIMIT 5;
INSERT INTO company (name, founding_year) VALUES ('Eco Solutions', 2015);
SELECT client_name, country, amount FROM donations WHERE country IN ('Nigeria', 'Kenya') AND amount > 700;
SELECT COUNT(*) FROM policy_advocacy_2 WHERE region = 'North America' AND year = 2019;
SELECT country, AVG(energy_consumption) as avg_energy_consumption FROM hotels GROUP BY country, month;
SELECT SUM(generation_rate) FROM WasteGeneration WHERE country IN ('Germany', 'France', 'Italy', 'Spain', 'United Kingdom')
SELECT region, assessment FROM GeopoliticalRiskAssessments WHERE region = 'Indo-Pacific';
SELECT SUM(Production) FROM OilWells WHERE Location = 'Venezuela' AND DrillYear BETWEEN 2015 AND 2017;
SELECT d.name, AVG(m.rating) FROM Directors d JOIN Movies m ON d.id = m.director_id GROUP BY d.id ORDER BY AVG(m.rating) DESC LIMIT 1;
SELECT region, issues FROM digital_divide ORDER BY issues ASC LIMIT 1; SELECT region, issues FROM digital_divide ORDER BY issues DESC LIMIT 1;
INSERT INTO users (id, name, country) VALUES (5, 'Edith', 'Mexico'), (6, 'Fernando', 'Mexico'); INSERT INTO posts (id, user_id, content, created_at) SELECT NULL, users.id, 'Discovering the richness of Mexican culture! #localculture', NOW() FROM users WHERE users.id NOT IN (SELECT latest_post.user_id FROM latest_post) AND users.country = 'Mexico';
SELECT SUM(revenue) FROM sustainable_revenue WHERE country = 'Canada' AND year = 2021 AND activity_name IN ('Whale Watching', 'Polar Bear Tour');
UPDATE researchers SET experience = 7 WHERE researcher_id = 205;
SELECT CompanyName, SUM(Quantity) FROM Extraction JOIN Companies ON Extraction.CompanyID = Companies.CompanyID WHERE Material = 'Coal' GROUP BY CompanyName;
SELECT id, city, energy_consumption FROM SmartCities.Buildings WHERE energy_consumption > (SELECT AVG(energy_consumption) FROM SmartCities.Buildings);
SELECT SUM(donation_amount) FROM donations d JOIN donors don ON d.donor_id = don.id WHERE donor_type = 'recurring' AND donation_date BETWEEN '2021-07-01' AND '2021-09-30';
SELECT DISTINCT incident_type FROM incidents WHERE resolved = FALSE AND resolved_date IS NULL;
SELECT f.name, wh.animal FROM forests f  JOIN wildlife_habitats wh ON f.id = wh.forest_id WHERE f.region_id = 1;
SELECT COUNT(*) FROM decentralized_applications WHERE developer_country = 'India';
CREATE TABLE policyholders_new AS SELECT * FROM policyholders WHERE 1=2;
SELECT COUNT(*) FROM EmployeeTrainings WHERE Training = 'Diversity and Inclusion' AND Country = 'Canada';
SELECT vessel_id, MAX(speed) FROM vessel_performance GROUP BY vessel_id;
SELECT COUNT(*), SUM(num_employees) FROM mine_details WHERE mine_type = 'Coal Mine' AND num_employees > 100;
SELECT AVG(rating) FROM hotels WHERE city = 'San Francisco';
SELECT SUM(installed_capacity) FROM renewable_energy WHERE project_name LIKE '%wind%';
SELECT region, product_category, SUM(sale_quantity) AS quantity_sold, SUM(sale_amount) AS sales_amount FROM sales_data WHERE region = 'NY' AND YEAR(sale_date) = 2021 GROUP BY region, product_category;
SELECT COUNT(*), AVG(num_virtual_tours) FROM cultural_sites WHERE country = 'Japan';
SELECT SUM(Quantity * UnitPrice) FROM MilitaryEquipmentSales WHERE Manufacturer = 'Lockheed Martin' AND DestinationCountry LIKE 'Europe%' AND YEAR(SaleDate) = 2020;
SELECT operation_id, AVG(carbon_emission) FROM carbon_emissions GROUP BY operation_id;
CREATE TABLE artists_extended AS SELECT artist_id, artist_name, birth_year, death_year, country FROM artists;
SELECT * FROM customers WHERE credit_score < 650 AND last_purchase_date BETWEEN DATEADD(week, -1, GETDATE()) AND GETDATE() AND region = 'LA';
SELECT 'Job offers received' := COUNT(*) FILTER (WHERE job_offer = TRUE) * 100.0 / COUNT(*) AS percentage_of_job_offers, COUNT(*) AS total_applications FROM veteran_employment WHERE EXTRACT(YEAR FROM application_date) = 2020 AND EXTRACT(QUARTER FROM application_date) = 2
SELECT Department, COUNT(*) as Total FROM Employees WHERE Gender IN ('Non-binary', 'Female') AND Department IN ('Mining Operations', 'Geology', 'Maintenance') GROUP BY Department;
SELECT MIN(mental_health_score) FROM students WHERE district = 'Remote Learning';
SELECT reported FROM hiv_reports WHERE disease = 'HIV' AND location = 'Florida' AND year = 2016;
SELECT bp.permit_number, bp.issued_date, pt.start_date, pt.end_date FROM BuildingPermits bp JOIN ProjectTimelines pt ON bp.permit_number = pt.permit_number WHERE bp.state = 'New York' AND QUARTER(bp.issued_date) = 1;
SELECT SUM(budget) FROM RuralInfrastructure WHERE country = 'Kenya';
DELETE FROM regulatory_compliance WHERE fine > 5000;
SELECT MAX(max_attempts) FROM lockout_policies WHERE department = 'marketing';
UPDATE menu_items SET price = 15.99 WHERE item_id = 123;
SELECT AVG(energy_rating) FROM Hotels WHERE country IN ('France', 'Germany') GROUP BY country;
SELECT SUM(production) FROM DysprosiumProduction WHERE year = 2021 AND region = 'Asia';
SELECT location, COUNT(id) as 'number_of_programs' FROM CommunityPrograms WHERE start_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 1 YEAR) GROUP BY location;
SELECT species, AVG(sequestration_rate) as avg_sequestration_rate FROM CarbonSequestration GROUP BY species;
SELECT ingredient_name FROM (SELECT ingredient_name, ROW_NUMBER() OVER (ORDER BY sustainability_score DESC) AS rn FROM ingredients) t WHERE rn <= 3;
SELECT country, RANK() OVER (ORDER BY impact DESC) as rank FROM local_economy WHERE rank <= 3;
SELECT DISTINCT make, model FROM EV_Adoption WHERE city = 'Tokyo';
SELECT SUM(amount) FROM loans WHERE interest_free = TRUE AND location LIKE '%rural%';
SELECT SUM(spending) FROM DefenseDiplomacy WHERE nation IN ('Poland', 'Romania', 'Ukraine', 'Hungary', 'Czech Republic') AND year = 2017;
SELECT name, accommodation FROM disability_services.students WHERE program = 'adaptive_technology';
WITH updated_data AS (UPDATE soil_moisture_data SET moisture = moisture - 5 WHERE parcel_id = 9 RETURNING *) SELECT * FROM updated_data;
SELECT Country, COUNT(*) AS num_diversity_trainings FROM EmployeeTraining WHERE TrainingProgram = 'Diversity and Inclusion' AND TrainingDate >= DATEADD(year, -1, GETDATE()) GROUP BY Country;
SELECT DISTINCT language FROM LanguagePreservation WHERE country = 'Vanuatu';
SELECT value FROM water_usage_gwh WHERE sector = 'Agricultural' AND region = 'India' AND year = 2021;
SELECT COUNT(DISTINCT product_id) as total_recalls FROM recalls WHERE recall_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);
SELECT contract_id, name, creator_address, creation_date, MIN(creation_date) OVER (PARTITION BY creator_address) AS first_contract_created_in_2018 FROM smart_contracts WHERE EXTRACT(YEAR FROM creation_date) = 2018;
SELECT aasi.incident_type, AVG(COUNT(aasi.method_id)) AS avg_methods FROM ai_safety_incidents aasi INNER JOIN algorithmic_fairness_methods afm ON aasi.method_id = afm.method_id GROUP BY aasi.incident_type;
SELECT project_name, budget FROM social_good WHERE region = 'Africa' AND budget > 50000;
DELETE FROM marine_protected_areas WHERE depth > 3000.0;
SELECT COUNT(*) FROM MarineSpecies.Species;
SELECT MAX(price) FROM Menu WHERE dish LIKE '%vegan%';
SELECT country, COUNT(DISTINCT name) as num_sites FROM heritagesites WHERE region = 'Asia' GROUP BY country;
SELECT Country, AccommodationType, SUM(Quantity) as Total FROM Accommodations GROUP BY Country, AccommodationType;
SELECT diameter_class, COUNT(*) FROM forest_inventory GROUP BY diameter_class;
SELECT MAX(order_qty) FROM packaging_materials WHERE recycled = true;
SELECT country, amount FROM MilitarySpending ORDER BY amount DESC LIMIT 3;
SELECT gas_production FROM wells WHERE well_id = 5 AND region = 'Eagle Ford';
SELECT Genre.Name, AVG(GenreMonthly.Revenue) as AvgRevenuePerMonth FROM GenreMonthly INNER JOIN Genre ON GenreMonthly.GenreID = Genre.GenreID INNER JOIN TopGenre ON Genre.GenreID = TopGenre.GenreID GROUP BY Genre.Name;
SELECT MIN(Score) FROM Game_Scores WHERE Game_Name = 'Quantum Quest';
SELECT principle FROM ai_ethics WHERE country = 'USA';
SELECT MAX(water_temp) FROM temperature WHERE location_id = (SELECT location_id FROM location WHERE location_name = 'Pacific Ocean');
SELECT MIN(ViolationCost) as Min_Cost FROM MentalHealthParity WHERE ViolationType = 'Service';
SELECT borough, COUNT(*) FROM properties WHERE for_sale = TRUE GROUP BY borough;
SELECT launch_year, COUNT(*) as total_satellites FROM aerospace.satellites GROUP BY launch_year;
SELECT AVG(families.income) AS avg_income, AVG(families.income > (SELECT AVG(income) FROM families WHERE children_under_18 = true)) * 100 AS pct_above_avg_income FROM families WHERE children_under_18 = true;
SELECT SUM(Budget) FROM Programs WHERE Category IN ('Environment', 'Human Rights');
SELECT D.DonorID, D.DonationDate, DD.DonorName FROM Donations D JOIN Donors DD ON D.DonorID = DD.DonorID WHERE EXTRACT(MONTH FROM D.DonationDate) IN (4, 8) AND EXTRACT(YEAR FROM D.DonationDate) = 2021 GROUP BY D.DonorID HAVING COUNT(DISTINCT EXTRACT(MONTH FROM D.DonationDate)) = 2;
SELECT WEEKOFYEAR(published_date) AS week, COUNT(*) AS total FROM news_stories WHERE YEAR(published_date) = 2022 GROUP BY week;
SELECT Destination FROM Sustainable_Tourism WHERE CO2_Emissions > (SELECT AVG(CO2_Emissions) FROM Sustainable_Tourism);
SELECT ItemName, AvailableSizes FROM ClothingItems WHERE ItemName LIKE '%Women%';
SELECT * FROM Policyholders WHERE State = 'California';
SELECT organizations.org_name, COUNT(DISTINCT donations.donor_id) AS unique_donors, SUM(donations.donation_amount) AS total_donated FROM organizations INNER JOIN donations ON organizations.org_id = donations.org_id GROUP BY organizations.org_name;
SELECT COUNT(*) FROM properties WHERE city = 'Austin' AND co_ownership = true;
SELECT SUM(amount) FROM funding WHERE date BETWEEN '2022-01-01' AND '2022-03-31';
SELECT Effort FROM ITInclusion WHERE Effort NOT IN (SELECT Effort FROM FinanceInclusion);
SELECT DISTINCT region FROM readers ORDER BY region ASC;
SELECT name, location FROM factories WHERE location = 'Asia' AND fair_labor_practices = false;
SELECT SUM(art_pieces) FROM museums WHERE region = 'Europe';
SELECT SUM(quantity) FROM chemical_production WHERE chemical_id = 'C123' AND country = 'USA';
SELECT COUNT(*) FROM defendants WHERE program_year = 2020 AND participated_restorative_program = true;
SELECT SUM(f.amount) FROM funding f WHERE f.state IN ('TX', 'FL');
SELECT bank_id, 100.0 * SUM(amount) / (SELECT SUM(amount) FROM large_loans) as large_loan_percentage FROM large_loans GROUP BY bank_id ORDER BY large_loan_percentage DESC FETCH FIRST 1 ROW ONLY;
DELETE FROM donors WHERE donor_id = 2001;
SELECT s.menu_item FROM Sales s RIGHT JOIN Menu m ON s.menu_item = m.menu_item WHERE m.menu_item_category = 'vegan' AND s.sale_quantity IS NULL AND s.sale_date >= DATEADD(day, -7, GETDATE());
SELECT COUNT(*) FROM multi_crop_farmers;
SELECT MIN(f.fare_amount) FROM taxi_fares f JOIN taxi_routes br ON f.route_id = br.route_id WHERE f.is_accessible = true AND f.fare_collection_date BETWEEN '2022-04-01' AND '2022-04-30';
SELECT newspaper, COUNT(*) as cnt FROM articles WHERE YEAR(publication) = 2022 GROUP BY newspaper ORDER BY cnt DESC;
SELECT Unions.UnionName, CollectiveBargaining.AgreementDate   FROM Unions   JOIN CollectiveBargaining ON Unions.UnionID = CollectiveBargaining.UnionID   WHERE Unions.UnionName IN ('Construction Workers Union', 'Teachers Union');
SELECT BrandName, SustainabilityScore, TotalSales FROM (SELECT BrandName, SustainabilityScore, TotalSales, ROW_NUMBER() OVER (ORDER BY TotalSales DESC) as rn FROM Brands WHERE Country = 'US') t WHERE rn <= 3;
WITH upd AS (UPDATE animals SET population = 11000 WHERE name = 'Walrus') SELECT id, name, species, population FROM animals;
SELECT Name FROM Satellites WHERE Country = 'India';
INSERT INTO renewable_energy_production (source, state, production_gwh) VALUES ('wind', 'Florida', 30), ('solar', 'Florida', 45), ('wind', 'Georgia', 40), ('solar', 'Georgia', 55);
SELECT department.name as department_name, AVG(employee.salary) as average_salary FROM employee INNER JOIN department ON employee.department_id = department.id WHERE department.sustainable = FALSE GROUP BY department.name HAVING COUNT(*) > 1;
SELECT COUNT(*) FROM criminal_incidents WHERE city = 'Toronto' AND incident_date BETWEEN '2020-01-01' AND '2020-12-31';
SELECT AVG(price) FROM eco_products WHERE country_of_origin = 'USA';
SELECT hp.county_id, hp.professional_name, hp.state_abbr, COUNT(*) as num_healthcare_professionals FROM healthcare_professionals hp JOIN counties c ON hp.county_id = c.county_id WHERE c.rural = true GROUP BY hp.county_id, hp.state_abbr, hp.professional_name;
SELECT site_name, MIN(date_found) as earliest_date FROM excavation_sites s JOIN artifacts a ON s.site_id = a.site_id GROUP BY site_name;
SELECT gender, race, ethnicity, COUNT(*) as count FROM patients GROUP BY gender, race, ethnicity;
SELECT AVG(players.age), players.genre FROM players INNER JOIN vr_games ON players.id = vr_games.player_id WHERE players.genre = 'VR' GROUP BY players.genre;
SELECT MAX(Cost) FROM Utility_Projects WHERE Project_Type = 'Utility';
SELECT drug_name, SUM(amount) as total_rd_expenditure FROM r_and_d_expenditure_2021 WHERE YEAR(expenditure_date) = 2021 GROUP BY drug_name ORDER BY total_rd_expenditure DESC;
SELECT name FROM fl_workers WHERE consultations = (SELECT MIN(consultations) FROM fl_workers);
SELECT name FROM mining_operations WHERE num_employees > (SELECT AVG(num_employees) FROM mining_operations) AND environmental_impact_score < (SELECT AVG(environmental_impact_score) FROM mining_operations);
SELECT MAX(Wins) as MaxWins FROM PlayerTournaments INNER JOIN PlayerInfo ON PlayerTournaments.PlayerID = PlayerInfo.PlayerID WHERE Country LIKE 'North%';
SELECT country, COUNT(*) as num_startups FROM startups GROUP BY country;
SELECT AVG(Budget) FROM Initiatives WHERE Region = 'Southeast Asia';
SELECT SUM(investment) FROM economic_diversification WHERE region = 'south' AND year BETWEEN 2019 AND 2021;
SELECT MAX(DATEDIFF(end_date, start_date)) FROM Memberships;
SELECT ci.country, (COUNT(ci.init_date) * 100.0 / cp.population) AS percentage FROM conservation_initiatives AS ci JOIN country_population AS cp ON ci.country = cp.country WHERE YEAR(ci.init_date) = 2020 GROUP BY ci.country;
SELECT MIN(expenditure) FROM rd_expenditure WHERE approval_year = 2017;
SELECT COUNT(*) FROM missions WHERE YEAR(launch_date) >= 2000 AND YEAR(launch_date) < 2010;
INSERT INTO climate_projects (id, project_name, project_location, project_type) VALUES (4, 'Adaptation Project 2', 'Southeast Asia', 'Climate Adaptation'), (5, 'Adaptation Project 3', 'Southeast Asia', 'Climate Adaptation');
SELECT farm_id, SUM(stock_change) as total_stock_change FROM FarmStock WHERE stock_date >= '2021-10-25' AND stock_date < '2021-11-01' GROUP BY farm_id ORDER BY SUM(stock_change) DESC;
SELECT state, RANK() OVER (ORDER BY usage DESC) as rank FROM us_water_usage GROUP BY state HAVING rank <= 3;
CREATE VIEW threat_trends AS SELECT year, SUM(CASE WHEN threat_level = 'High' THEN 1 ELSE 0 END) as high_threats, SUM(CASE WHEN threat_level = 'Medium' THEN 1 ELSE 0 END) as medium_threats, SUM(CASE WHEN threat_level = 'Low' THEN 1 ELSE 0 END) as low_threats FROM threat_intelligence GROUP BY year;
SELECT AVG(new_species_discovered) FROM deep_sea_expeditions WHERE year >= 2017;
SELECT status, COUNT(*) as sensor_count, AVG(temperature) as avg_temp, AVG(humidity) as avg_humidity FROM sensor_data WHERE status = 'active' AND timestamp >= DATE_SUB(CURRENT_TIMESTAMP(), INTERVAL 1 WEEK) GROUP BY status;
SELECT COUNT(DISTINCT c.client_id) FROM clients c INNER JOIN (SELECT client_id, SUM(total_amount) as total_q1_2022 FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY client_id) t1 ON c.client_id = t1.client_id INNER JOIN (SELECT client_id, SUM(total_amount) as total_q1_2021 FROM transactions WHERE transaction_date BETWEEN '2021-01-01' AND '2021-03-31' GROUP BY client_id) t2 ON c.client_id = t2.client_id WHERE t1.total_q1_2022 > 1.1 * t2.total_q1_2021
SELECT SUM(membership_fee) FROM memberships WHERE region = 'NY';
SELECT region, COUNT(*) as num_projects, RANK() OVER (PARTITION BY 1 ORDER BY COUNT(*) DESC) as rank FROM fairness WHERE start_date >= DATEADD(year, -2, CURRENT_DATE) GROUP BY region;
SELECT region, SUM(CASE WHEN improvement = 'Y' THEN 1 ELSE 0 END) as improved_patients FROM patients_regions GROUP BY region;
SELECT mhw.WorkerID, COUNT(*) as NumProviders FROM MentalHealthProvider mhp JOIN CommunityHealthWorker mhw ON mhp.WorkerID = mhw.WorkerID GROUP BY mhw.WorkerID;
SELECT county, workers FROM community_health_workers WHERE state = 'CA';
SELECT program, COUNT(*), MAX(age) FROM athletes WHERE program = 'Fitness' GROUP BY program;
SELECT AVG(range) FROM Vehicle_Range WHERE country = 'Japan' AND year BETWEEN 2017 AND 2022;
SELECT MAX(likes) FROM articles WHERE topic = 'political corruption';
SELECT landfill_name FROM landfills WHERE country = 'Z' AND capacity_remaining < 0;
SELECT SUM(fare_amount) FROM fares INNER JOIN routes ON fares.route_name = routes.route_name WHERE routes.line_color = 'Red' AND fares.collection_date = '2022-01-03';
SELECT name, max_depth FROM submersibles WHERE max_depth >= 6000
UPDATE athletes SET age = 31 WHERE id = 1;
SELECT region, SUM(investment_amount) as total_investment FROM network_investments WHERE investment_date >= DATE_SUB(CURRENT_DATE, INTERVAL 12 MONTH) GROUP BY region ORDER BY total_investment DESC LIMIT 5;
SELECT country_id, name, RANK() OVER (PARTITION BY name ORDER BY COUNT(*) DESC) as rank FROM climate_change_projects GROUP BY country_id, name HAVING rank <= 2;
SELECT COUNT(*) FROM fish_farms WHERE ocean = 'Indian' AND sustainable = true;
INSERT INTO subscribers (subscriber_id, first_name, last_name, mobile_number, email, date_joined) VALUES (12345, 'John', 'Doe', '1234567890', 'johndoe@mail.com', '2022-01-01');
SELECT COUNT(*) FROM humanitarian_assistance WHERE location IN ('Middle East', 'Asia');
SELECT MIN(listing_price) AS "Lowest Price", MAX(listing_price) AS "Highest Price" FROM prop_listings;
SELECT trip_date, AVG(daily_ridership) FROM public_buses GROUP BY trip_date;
SELECT SUM(floor_area) FROM green_buildings_vancouver WHERE city = 'Vancouver';
SELECT d.Department, AVG(e.Salary) as AvgSalary FROM Employees e JOIN Departments d ON e.Department = d.Department GROUP BY d.Department ORDER BY AvgSalary DESC LIMIT 1;
SELECT MAX(GamesPlayed) FROM PlayerDailyGames INNER JOIN Players ON PlayerDailyGames.PlayerID = Players.PlayerID WHERE Country = 'Canada';
WITH cte AS (UPDATE building_permits SET contractor = 'Green Builders' WHERE permit_number = '2021-015') SELECT * FROM cte;
SELECT SUM(donations.amount) FROM donations INNER JOIN donors ON donations.donor_id = donors.id WHERE donors.country = 'USA' AND donation_date >= '2021-05-01' AND donation_date < '2021-06-01';
SELECT region, COUNT(*) AS count FROM FactoryWorkers WHERE certification = 'Fair Trade' GROUP BY region ORDER BY count DESC LIMIT 1;
SELECT Vendors.name FROM Vendors INNER JOIN (SELECT vendor_id, SUM(calorie_content) AS total_calories FROM Products GROUP BY vendor_id ORDER BY total_calories DESC LIMIT 1) AS Subquery ON Vendors.vid = Subquery.vendor_id;
SELECT SUM(revenue) FROM revenue WHERE product = 'ProductA' AND country = 'CountryB' AND quarter LIKE 'Q% 2020';
SELECT country, visitors FROM tourism_stats WHERE year = 2020;
SELECT SUM(weight) FROM orders WHERE customer_id = 1001 AND (product_type = 'Meat' OR product_type = 'Dairy');
SELECT COUNT(DISTINCT ip) as unique_ips FROM incidents WHERE date >= DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH);
SELECT country, COUNT(*) FROM smart_cities.ev_charging_stations GROUP BY country;
SELECT Member.Gender, COUNT(Workout.WorkoutID) FROM Workout INNER JOIN Member ON Workout.MemberID = Member.MemberID WHERE Member.MembershipStart > '2019-12-31' GROUP BY Member.Gender;
SELECT AVG(length) as avg_length FROM Fish WHERE conservation_status = 'Endangered' AND habitat LIKE '%Pacific%';
SELECT COUNT(DISTINCT species) AS species_count, SUM(count) AS total_count FROM arctic_marine_species WHERE species != 'Fish';
SELECT ArtistID, Genre, MAX(SellingPrice) as HighestSellingPrice FROM Artwork WHERE Continent = 'Africa' GROUP BY ArtistID, Genre;
SELECT artist, total_revenue FROM post_impressionist_sales ORDER BY total_revenue DESC LIMIT 3;
SELECT AVG(word_count) FROM ArticleWordCount WHERE category = 'politics' AND newspaper = 'WashingtonPost';
SELECT AVG(caloric_content) as avg_caloric_content FROM Dishes WHERE dish_type = 'Vegan';
SELECT SUM(booking_revenue) FROM hotels INNER JOIN bookings ON hotels.hotel_id = bookings.hotel_id INNER JOIN users ON bookings.user_id = users.user_id WHERE hotels.region = 'South America' AND users.user_country = 'Brazil' AND YEAR(booking_date) = 2022 AND booking_status = 'completed';
SELECT h.city, h.category, COUNT(DISTINCT h.hotel_id) AS hotel_count, SUM(b.booking_id) AS booking_count FROM hotels h INNER JOIN bookings b ON h.hotel_id = b.hotel_id WHERE h.city = 'New York' AND h.category = 'luxury' GROUP BY h.city, h.category;
SELECT client_id, name, assets FROM (SELECT client_id, name, assets, ROW_NUMBER() OVER (ORDER BY assets DESC) as rn FROM clients) t WHERE rn <= 3;
SELECT coach_name FROM coaches INNER JOIN (SELECT team_id, SUM(CASE WHEN result = 'Win' THEN 1 ELSE 0 END) AS wins, SUM(CASE WHEN result = 'Loss' THEN 1 ELSE 0 END) AS losses FROM games GROUP BY team_id) AS subquery ON coaches.team_id = subquery.team_id WHERE subquery.wins >= (SELECT MAX(subquery2.wins) FROM subquery AS subquery2 WHERE subquery2.losses = subquery.losses) AND subquery.losses = (SELECT MIN(subquery3.losses) FROM subquery AS subquery3 WHERE subquery3.wins = subquery.wins);
WITH LowLimitClaims AS (DELETE FROM Claims WHERE PolicyID IN (SELECT PolicyID FROM Policyholders WHERE CoverageLimit < 100000) RETURNING *) SELECT * FROM LowLimitClaims;
SELECT p.platform_name, SUM(op.oil_production) AS total_oil_production FROM oil_production op JOIN platforms p ON op.platform_id = p.platform_id WHERE p.region = 'South China Sea' GROUP BY op.platform_id;
DELETE FROM Military_Equipment_Sales WHERE year = 2021 AND value < 1000000;
SELECT SUM(viewers) FROM movie WHERE rating >= 8.0 AND rating < 9.0;
SELECT AVG(m.annual_visitors) FROM museums m WHERE m.country = 'Senegal';
SELECT country, COUNT(*) FROM open_data_portals GROUP BY country;
SELECT SUM(garments.price * sales_volume.quantity) FROM garments INNER JOIN sales_volume ON garments.item = sales_volume.item WHERE garments.material = 'Organic Cotton';
SELECT AVG(ai_adoption_score) FROM hotels WHERE region = 'Caribbean' AND ai_adoption_score >= 70 AND year = 2022;
SELECT AVG(ad_spend.amount) FROM ad_spend INNER JOIN users ON ad_spend.user_id = users.id WHERE ad_spend.spend_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH);
SELECT SUM(amount) FROM climate_funding WHERE sector = 'Climate communication' AND year = 2019;
SELECT team, ROUND(100.0 * SUM(games_won) / SUM(games_played), 2) as win_percentage FROM nba_games GROUP BY team;
SELECT MAX(followers) FROM users WHERE country = 'Japan';
SELECT country, AVG(total_funding) FROM biotech_startups WHERE founding_year BETWEEN 2018 AND 2020 AND employees > 50 GROUP BY country;
INSERT INTO HealthcareFacilities (Name, City, Specialized) VALUES ('Facility D', 'City Y', TRUE);
DELETE FROM GreenBuildings WHERE material = 'wood';
UPDATE tours SET price = 150 WHERE country = 'Italy';
SELECT AVG(programs.impact_score) FROM arts_culture.programs WHERE programs.demographic = 'Women' AND programs.category = 'Visual Arts';
SELECT D.Name as DepartmentName, SUM(D.Budget) as TotalBudget2021 FROM Departments D WHERE YEAR(D.StartDate) = 2021 GROUP BY D.DepartmentID, D.Name;
SELECT cuisine, MIN(revenue) FROM restaurants WHERE cuisine = 'Asian' AND city = 'New York';
SELECT AVG(price) FROM ArtPieces WHERE type = 'Pottery' AND artist_nationality LIKE '%Canada - Indigenous%';
SELECT p.program, SUM(d.donation_amount) as total_donations FROM Donations d INNER JOIN Programs p ON d.program = p.program WHERE d.country = 'Japan' GROUP BY p.program;
SELECT SUM(s.sale_quantity) as total_sales_of_organic_skincare FROM sales s JOIN products p ON s.product_id = p.product_id WHERE p.category = 'skincare' AND p.is_organic = true AND s.sale_country IN ('FR', 'DE');
SELECT AVG(population) FROM biodiversity WHERE population < 10000;
SELECT MAX(market_price) FROM Holmium_Market_Prices WHERE country = 'Germany';
SELECT MIN(donation) FROM donors;
INSERT INTO virtual_tours (tour_id, location, description, price) VALUES (21, 'Barcelona', 'A virtual tour of the Sagrada Familia', 17.50);
SELECT SUM(area) as total_area, COUNT(*) as num_parks FROM parks WHERE area >= 5 AND city = 'Seattle';
SELECT region, AVG(construction_cost) FROM Airport WHERE region = 'Northeast' GROUP BY region;
SELECT p.name, COUNT(DISTINCT v.id) AS num_volunteers, COUNT(DISTINCT d.id) AS num_donors FROM programs p LEFT JOIN program_volunteers v ON p.id = v.program_id LEFT JOIN program_donors d ON p.id = d.program_id GROUP BY p.name;
SELECT CompanyName FROM Companies JOIN EnvironmentalImpact ON Companies.Country = EnvironmentalImpact.Country WHERE ImpactScore IN (SELECT MAX(ImpactScore) FROM EnvironmentalImpact);
DELETE FROM conservation_status WHERE status = 'Least Concern';
SELECT SUM(initiative_count) FROM circular_economy WHERE country = 'Germany' AND year >= 2019;
SELECT operating_system, system_name, vulnerability_score FROM systems ORDER BY vulnerability_score DESC LIMIT 5;
SELECT program, location, SUM(participants) as 'TotalParticipants' FROM HealthEquityMetrics WHERE program = 'Physical Activity' AND location = 'San Francisco';
SELECT region, COUNT(region) as num_reports FROM threat_intelligence WHERE report_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) GROUP BY region HAVING num_reports >= 2;
SELECT ethnicity, SUM(CASE WHEN therapy_dropped = TRUE THEN 1 ELSE 0 END) AS dropped_therapy, SUM(CASE WHEN medication_dropped = TRUE THEN 1 ELSE 0 END) AS dropped_medication FROM patients GROUP BY ethnicity;
SELECT m.name, m.year_developed, m.developer_country, c.country_name FROM MilitaryTech m INNER JOIN Country c ON m.developer_country = c.country_code WHERE m.year_developed < 1990;
SELECT organizations.name, organizations.contact, preservation_status.status FROM organizations INNER JOIN preservation_status ON organizations.region = preservation_status.status WHERE organizations.region = 'Africa';
SELECT AVG(amount) FROM donors WHERE sector = 'arts and culture' AND id NOT IN (SELECT DISTINCT org_id FROM grants);
SELECT country, SUM(num_wells) FROM well_drilling WHERE year = 2019 AND region = 'North Sea' GROUP BY country;
SELECT MAX(price_per_yard) FROM fabric;
SELECT production_company, COUNT(*) AS count FROM Movies GROUP BY production_company;
SELECT SUM(total_cost) FROM climate_adaptation WHERE location = 'South America';
SELECT launch_country, rocket_type, SUM(CASE WHEN launch_result = 'Success' THEN 1 ELSE 0 END) as Successes, SUM(CASE WHEN launch_result = 'Failure' THEN 1 ELSE 0 END) as Failures FROM rocket_launches WHERE launch_date >= DATE_SUB(CURDATE(), INTERVAL 20 YEAR) GROUP BY launch_country, rocket_type;
SELECT hotel_id, COUNT(*) FROM hotel_reviews GROUP BY hotel_id;
SELECT COUNT(*) FROM rigs WHERE status = 'Active' AND region = 'North Atlantic';
CREATE TABLE medical_facilities (facility_id INT, facility_name VARCHAR(255), facility_type VARCHAR(255), location VARCHAR(255), capacity INT);
SELECT union_name FROM union_details WHERE member_count > 10000;
SELECT SUM(country = 'France' OR country = 'Japan') FROM Visitors;
SELECT MAX(budget) FROM Accessible_Tech WHERE community = 'Indigenous';
SELECT d.continent, 100.0 * COUNT(v.id) / (SELECT COUNT(*) FROM visits) AS percentage FROM visits v JOIN destinations d ON v.destination_id = d.id WHERE d.country = 'Brazil' GROUP BY d.continent;
INSERT INTO patients VALUES (8, 'PTSD', 25, 'US');
SELECT country, sustainable_material_usage FROM (SELECT country, sustainable_material_usage, ROW_NUMBER() OVER (ORDER BY sustainable_material_usage DESC) rn1, ROW_NUMBER() OVER (ORDER BY sustainable_material_usage ASC) rn2 FROM Garment_Production_Countries) t WHERE rn1 = 1 OR rn2 = 1;
SELECT COUNT(*) FROM clients WHERE region = 'Latin America' AND credit_rating > 700;
SELECT regions.name, COUNT(traditional_artists.id) AS total_artists, COUNT(language_speakers.id) AS total_speakers FROM regions LEFT JOIN traditional_artists ON regions.id = traditional_artists.region_id LEFT JOIN language_speakers ON regions.id = language_speakers.region_id GROUP BY regions.id;
SELECT vessel_name, MAX(max_cargo_weight) FROM vessel_performance GROUP BY vessel_name;
SELECT collection, COUNT(*) FROM production_costs WHERE cost > 30 GROUP BY collection;
WITH cte AS (DELETE FROM building_permits WHERE permit_number = '2022-005') SELECT * FROM cte;
SELECT COUNT(*) FROM energy_efficiency_inspections INNER JOIN buildings ON energy_efficiency_inspections.building_id = buildings.id WHERE construction_year < 2000;
SELECT branch, tech_name, MAX(year_introduced) as first_introduced, MAX(current_version) as latest_version FROM military_tech_branches GROUP BY branch, tech_name;
SELECT AVG(explainability_score) FROM creative_ai_algorithms;
SELECT AVG(citation_count) FROM citation_data WHERE field = 'Creative AI';
UPDATE facility_schedule SET end_time = DATE_ADD(start_time, INTERVAL 1 HOUR);
INSERT INTO workout_schedule (id, member_id, workout_date, workout_duration) VALUES (1, 21, '2023-03-01', 60), (2, 22, '2023-03-02', 45), (3, 23, '2023-03-03', 90);
SELECT SUM(total_pallets) FROM warehouse_stats WHERE warehouse = 'Los Angeles';
SELECT field_name, SUM(rainfall) FROM field_rainfall WHERE YEAR(measurement_date) = 2021 GROUP BY field_name;
SELECT AVG(rating) FROM movies WHERE production_country = 'USA' AND release_year BETWEEN 2000 AND 2010;
SELECT FirstName, LastName, Country, MIN(DateOfBirth) as YoungestDonor FROM Donors GROUP BY Country;
INSERT INTO Artworks (ArtworkID, Title, Genre) VALUES (3, 'The Persistence of Memory', 'Surrealism');
SELECT AVG(weight) FROM cargo WHERE vessel_id = 'VES017';
SELECT SUM(cost) FROM Infrastructure_Projects WHERE province IN ('Ontario', 'Quebec') AND type = 'Transportation';
SELECT EXTRACT(MONTH FROM investment_date) as month, SUM(investment_amount) as total_investment FROM social_impact_bonds WHERE sector = 'Housing' GROUP BY month ORDER BY month ASC;
SELECT SUM(revenue) FROM Skincare WHERE is_vegan = true;
SELECT * FROM biosensor_tech WHERE location = 'Southeast Asia';
SELECT department, AVG(age) FROM news_reporters WHERE gender = 'male' GROUP BY department;
SELECT MAX(users.age) FROM users JOIN likes ON users.id = likes.user_id WHERE likes.article_id = 123;
SELECT country, COUNT(*) AS attack_count FROM CyberAttacks WHERE date >= DATE_SUB(CURDATE(), INTERVAL 12 MONTH) GROUP BY country ORDER BY attack_count DESC LIMIT 5;
SELECT country, COUNT(*) FROM TV_Shows GROUP BY country;
INSERT INTO players (player_id, name, position, team_id) VALUES (3, 'Emily Lee', 'Defense', 1), (4, 'Michael Chen', 'Forward', 1), (5, 'Grace Kim', 'Goalie', 1);
SELECT COUNT(*) FROM ocean_acidification_monitoring_stations WHERE location IN ('Arctic', 'Antarctic');
SELECT name, MAX(capacity_mw) FROM clean_energy_policy_trends WHERE country = 'Japan';
SELECT city, SUM(revenue) as total_revenue FROM Restaurants GROUP BY city;
SELECT COUNT(*) FROM marine_protected_areas WHERE region = 'Pacific';
SELECT AVG(Exhibitions.attendance) FROM Exhibitions WHERE Exhibitions.region = 'Europe' AND Exhibitions.quarter = 2 AND Exhibitions.year = 2019;
SELECT COUNT(*) FROM ThreatIntelligence WHERE region = 'Middle East' AND report_date BETWEEN '2020-01-01' AND '2020-12-31';
SELECT HeritageSites.name, Budget.budget FROM HeritageSites INNER JOIN Budget ON HeritageSites.name = Budget.heritage_site ORDER BY Budget.budget DESC;
SELECT e.country, e.capacity, ee.efficiency FROM energy_storage e JOIN energy_efficiency ee ON e.country = ee.country;
SELECT MAX(safety_score) FROM domain_safety WHERE domain = 'Transportation';
SELECT COUNT(DISTINCT drug_name) FROM drugs_approval WHERE approval_year = 2020;
SELECT ag.age_group_name, SUM(t.quantity) as tickets_sold FROM age_groups ag JOIN tickets t ON t.age BETWEEN ag.lower_bound AND ag.upper_bound GROUP BY ag.age_group_name;
SELECT dish, carbohydrates FROM (SELECT dish, carbohydrates, ROW_NUMBER() OVER (PARTITION BY dish_date ORDER BY carbohydrates ASC) as rn FROM dishes WHERE restaurant_name LIKE 'Tokyo%' AND cuisine = 'Japanese' AND dish_date >= '2022-04-01' AND dish_date < '2022-05-01') t WHERE rn <= 3;
SELECT Station.name, SUM(CASE WHEN Employee.role = 'police officer' THEN 1 ELSE 0 END) as total_police FROM Station INNER JOIN Employee ON Station.sid = Employee.sid GROUP BY Station.name;
SELECT COUNT(*) FROM climate_projects WHERE region = 'Asia' AND type = 'Mitigation';
SELECT subject_area, COUNT(*) AS number_of_courses FROM courses WHERE academic_year = 2022 AND pedagogy_type = 'Open' GROUP BY subject_area;
SELECT industry_name FROM industry WHERE total_workers < 4000;
SELECT region AS country, SUM(donation_amount) AS total_donation FROM Donors WHERE sector = 'Health' AND donation_date >= '2020-01-01' AND donation_date < '2021-01-01' GROUP BY region ORDER BY total_donation DESC LIMIT 2;
SELECT trench_name, max_depth FROM trench_info WHERE ocean_basin = 'Indian Ocean' ORDER BY max_depth DESC LIMIT 10;
SELECT AVG(experience) FROM counselors WHERE state = 'Texas';
SELECT AVG(co2_emissions) FROM carbon_offset WHERE category = 'Energy Efficiency';
SELECT Country, Year, AVG(SpendingAmount) as AvgSpending FROM Budget WHERE Year BETWEEN EXTRACT(YEAR FROM CURRENT_DATE)-5 AND EXTRACT(YEAR FROM CURRENT_DATE) GROUP BY Country, Year;
SELECT military_equipment.equipment_type FROM military_equipment LEFT JOIN maintenance_records ON military_equipment.equipment_id = maintenance_records.equipment_id WHERE maintenance_records.maintenance_date IS NULL OR maintenance_records.maintenance_date < DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) GROUP BY military_equipment.equipment_type ORDER BY equipment_type;
SELECT AVG(mass_kg) AS avg_mass FROM spacecraft WHERE manufacturer = 'Galactic Inc.';
SELECT SUM(orders.quantity) FROM orders WHERE orders.order_date BETWEEN '2022-01-01' AND '2022-01-15';
SELECT salesperson.name, COUNT(sales.sales_id) AS quantity_sold FROM salesperson INNER JOIN sales ON salesperson.salesperson_id = sales.salesperson_id WHERE sale_date >= CURRENT_DATE - INTERVAL '30 days' GROUP BY salesperson.name ORDER BY quantity_sold ASC;
UPDATE movies SET budget = 60000000 WHERE title = 'The Matrix';
SELECT MIN(ClaimDate) FROM Claims JOIN Policyholders ON Claims.PolicyID = Policyholders.PolicyID WHERE Policyholders.State = 'Ohio';
SELECT state, COUNT(*) FROM healthcare_facilities GROUP BY state;
SELECT route_name, fare FROM train_routes WHERE fare > 2.75 AND fare < 2.25;
SELECT h.country, COUNT(DISTINCT hg.hotel_id) FROM hotels h JOIN hotels_geo hg ON h.id = hg.hotel_id GROUP BY h.country;
SELECT SUM(cargo_weight) FROM cargo WHERE vessel_id = 4 AND YEAR(transport_date) = 2021;
SELECT sa.Name, MIN(sm.LaunchDate) AS EarliestLaunchDate FROM SpaceAgency sa JOIN SpaceMission sm ON sa.ID = sm.AgencyID GROUP BY sa.Name;
SELECT p.name, p.rank FROM Personnel p INNER JOIN PersonnelClearances pc ON p.id = pc.personnel_id INNER JOIN ClearanceLevels cl ON pc.clearance_id = cl.id WHERE p.division = 'Special Forces' AND cl.level IN ('Top Secret', 'Top Secret Plus');
SELECT AVG(local_economic_impact) FROM EcoFriendlyTours WHERE country = 'Costa Rica';
CREATE TABLE public.citizen_demographics (citizen_id SERIAL PRIMARY KEY, age INT, gender VARCHAR(10), region VARCHAR(50));
SELECT foundation_name, SUM(consumer_preference) FROM foundations WHERE vegan = true GROUP BY foundation_name ORDER BY SUM(consumer_preference) DESC LIMIT 3;
SELECT s.state, COUNT(sp.project_id) FROM smart_projects sp INNER JOIN states s ON sp.state = s.state JOIN (SELECT state, MAX(budget) AS max_budget FROM smart_projects GROUP BY state) AS sm ON s.state = sm.state AND sp.budget = sm.max_budget GROUP BY s.state;
SELECT SUM(revenue) FROM africahotels WHERE region = 'Africa' AND is_eco_friendly = 1 AND has_gym = 1;
SELECT MemberID, SUM(Duration) AS TotalDuration FROM WorkoutSessions GROUP BY MemberID;
SELECT users.country, AVG(1.0 * posts.likes) as avg_likes_per_post FROM posts JOIN users ON posts.user_id = users.id WHERE users.continent = 'South America' GROUP BY users.country;
SELECT SUM(waste_production_tonnes) as total_waste FROM companies WHERE circular_economy = 'Circular Economy' AND year = 2021;
SELECT o.operation_name, r.resource_name, SUM(rd.depletion) as total_depletion FROM mining_operations o INNER JOIN resource_depletion rd ON o.id = rd.operation_id INNER JOIN resources r ON rd.resource_id = r.id GROUP BY o.id, r.id;
SELECT COUNT(DISTINCT ingredient) FROM SupplyChain WHERE vegan = true;
SELECT region, COUNT(DISTINCT p.player_id) AS num_players FROM players p JOIN vr_tech v ON p.player_id = v.player_id GROUP BY region;
SELECT category, MAX(quantity) as max_quantity FROM Sales JOIN MenuItems ON Sales.menu_item_id = MenuItems.menu_item_id GROUP BY category;
SELECT industry, SUM(startup_count) FROM (SELECT industry, CASE WHEN founder_identity = 'Individual with Disability' THEN 1 ELSE 0 END AS startup_count FROM startups JOIN founders ON startups.id = founders.startup_id) subquery GROUP BY industry;
SELECT Port, COUNT(DISTINCT VesselID) FROM VesselInspections WHERE InspectionDate >= DATEADD(year, -1, GETDATE()) GROUP BY Port;
SELECT COUNT(visitor_id) as num_visitors FROM visitors WHERE exhibition_id = 2 AND country = 'Canada';
SELECT AVG(duration) FROM korean_dramas;
SELECT p.category, SUM(s.sales) as total_sales, AVG(s.price) as average_price FROM products p INNER JOIN sales s ON p.id = s.product_id WHERE p.name = 'California' AND s.year = 2020 GROUP BY p.category;
SELECT YEAR(launch_date) AS year, COUNT(*) AS project_count FROM AccessibleTech WHERE location = 'Asia' GROUP BY year ORDER BY year;
SELECT AVG(length) FROM railways WHERE location = 'Saskatchewan';
SELECT COUNT(*) AS total_libraries, SUM(books_count) AS total_books FROM public_libraries WHERE province = 'Ontario';
SELECT AVG(age) FROM news WHERE gender = 'Male';
SELECT city, num_ebikes FROM (SELECT city, num_ebikes, RANK() OVER (ORDER BY num_ebikes DESC) rn FROM african_ebikes) tmp WHERE rn = 1;
SELECT region, COUNT(*) FROM hotel_ai WHERE region = 'Asia' AND ai_adoption = true GROUP BY region;
SELECT 100.0 * SUM(CASE WHEN user_type = 'industrial' THEN recycling_rate END) / SUM(recycling_rate) FROM recycling_rates WHERE state = 'Utah';
SELECT MAX(crime_count) FROM (SELECT COUNT(*) crime_count FROM Crimes WHERE year = 2021 GROUP BY neighborhood_id) subquery;
SELECT MAX(tickets_sold) FROM tickets_sold WHERE game_type = 'Basketball' AND division = 'Atlantic Division';
DELETE FROM travel_advisories WHERE issue_date < '2020-01-01' AND country_id = (SELECT country_id FROM countries WHERE name = 'Indonesia');
SELECT project_status, SUM(installed_capacity) FROM RenewableEnergyProjects GROUP BY project_status;
SELECT cuisine, MIN(cooking_time) as min_cooking_time, MAX(cooking_time) as max_cooking_time FROM Dishes WHERE cuisine = 'Indian' GROUP BY cuisine;
SELECT MAX(NumHearings) FROM CivilCases WHERE State = 'Illinois' AND YEAR(ClosureDate) BETWEEN YEAR(CURRENT_DATE) - 5 AND YEAR(CURRENT_DATE) AND CaseType = 'Civil';
SELECT SUM(assets) FROM bank_info WHERE region = 'Asia-Pacific' AND socially_responsible = TRUE;
SELECT name, initiatives, RANK() OVER (ORDER BY initiatives DESC) as rank FROM countries WHERE rank <= 2;
SELECT (COUNT(*) * 100.0 / (SELECT SUM(*) FROM tourism_data WHERE visit_year = 2018 AND destination_country = 'Thailand')) FROM tourism_data WHERE visit_year = 2018 AND destination_country = 'Thailand' AND visitor_country LIKE 'Western%';
SELECT AVG(age) FROM educators WHERE num_courses > 3;
INSERT INTO providers (provider_id, first_name, last_name, specialty, city, state) VALUES (1234, 'María', 'García', 'Community Health Worker', 'Miami', 'FL');
SELECT province, SUM(capacity) FROM wastewater_treatment WHERE province IN ('New South Wales', 'Victoria', 'Queensland', 'Western Australia', 'South Australia', 'Tasmania') AND YEAR(date) = 2019 GROUP BY province;
SELECT AVG(rating) FROM hotels WHERE is_eco_friendly = true AND country = 'Australia';
SELECT ride_date, SUM(revenue) AS daily_revenue FROM bus_rides GROUP BY ride_date;
SELECT item, SUM(price * qty_sold) as revenue FROM menu_items WHERE date BETWEEN '2019-04-01' AND '2019-06-30' GROUP BY item ORDER BY revenue DESC LIMIT 3;
SELECT AVG(usage) FROM canada_water_usage WHERE province = 'Canada' GROUP BY year, month;
SELECT name FROM organization WHERE focus = 'Ethical AI' AND location = 'Africa';
SELECT ocean_basin, MIN(surface_temperature) FROM ocean_temperature GROUP BY ocean_basin;
SELECT f.name, AVG(r.dissolved_oxygen) as avg_dissolved_oxygen FROM farm f INNER JOIN readings r ON f.id = r.farm_id WHERE MONTH(r.date) = 1 GROUP BY f.id;
UPDATE military_equipment SET equipment_status = 'Operational' WHERE region = 'Atlantic';
SELECT AVG(depth) as avg_depth FROM Coral WHERE species = 'Stony Coral';
SELECT M.material_name, AVG(A.score) FROM Materials M INNER JOIN Awareness A ON M.material_id = A.material_id WHERE M.sustainable = TRUE GROUP BY M.material_name;
SELECT Country, AdoptionPercentage FROM Adoption WHERE Country = 'USA' OR Country = 'China' OR Country = 'Germany' OR Country = 'Norway' OR Country = 'Japan';
SELECT MAX(Age) FROM Employees WHERE LeadershipTraining = TRUE;
SELECT country, gender, COUNT(*) as employee_count FROM workforce WHERE (SELECT COUNT(*) FROM workforce w WHERE w.mine_id = workforce.mine_id) < 50 GROUP BY country, gender;
DELETE FROM la_traffic_violations WHERE violation_date BETWEEN '2020-01-01 00:00:00' AND '2020-12-31 23:59:59';
SELECT MIN(min_depth) FROM marine_protected_areas WHERE region = 'Atlantic';
SELECT construction_workers.name, SUM(worker_projects.total_labor_hours) FROM construction_workers INNER JOIN worker_projects ON construction_workers.worker_id = worker_projects.worker_id INNER JOIN project_types ON worker_projects.project_id = project_types.project_id WHERE project_types.project_type = 'Sustainable' GROUP BY construction_workers.name ORDER BY construction_workers.name ASC;
SELECT MAX(pH) FROM ocean_acidity WHERE location = 'Atlantic Ocean' AND year = 2019;
SELECT species, year, AVG(population) OVER (PARTITION BY species ORDER BY year ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS moving_average FROM animal_population;
SELECT filename FROM imagery WHERE field_name IN ('north_field', 'south_field');
SELECT YEAR(join_date) AS year, COUNT(*) AS count FROM UnionK GROUP BY year;
SELECT SUM(sale_price) FROM Sales JOIN Products ON Sales.product_id = Products.id WHERE is_vegan = true AND category = 'Skincare' AND country = 'US';
SELECT region, year, SUM(quantity) FROM region_sales WHERE vehicle_type IN ('ev', 'autonomous') AND year = 2019 GROUP BY region, year;
SELECT Department, COUNT(*) FROM Employees GROUP BY Department;
SELECT city, SUM(amount) as total_donation FROM Donations WHERE YEAR(donation_date) = 2020 GROUP BY city;
INSERT INTO infection_rates (id, state, infection_rate) VALUES (1, 'Texas', 5.6);
SELECT chain_name FROM hotel_chains WHERE country = 'USA' ORDER BY eco_score DESC LIMIT 3;
SELECT AVG(Donations.DonationAmount) FROM Donors INNER JOIN Donations ON Donors.DonorID = Donations.DonorID WHERE Donors.Country IN ('Nigeria', 'Kenya');
SELECT type, MAX(cargo_weight_capacity) FROM vessels GROUP BY type;
SELECT country FROM military_tech WHERE type = 'Aircraft Carrier' GROUP BY country;
SELECT region, landfill_name, capacity FROM landfills WHERE region = 'W';
SELECT AVG(duration) FROM performance_durations WHERE city = 'Paris' AND type = 'dance' AND year BETWEEN 2018 AND 2020;
SELECT title, genre FROM (SELECT title, genre, studio, rating, ROW_NUMBER() OVER (PARTITION BY studio ORDER BY rating DESC) as rank FROM movies WHERE studio LIKE '%Canada%') subquery WHERE rank <= 3 ORDER BY rating DESC;
CREATE VIEW vw_top_scorers AS SELECT * FROM (SELECT name, goals_scored, ROW_NUMBER() OVER (ORDER BY goals_scored DESC) as rn FROM athlete_stats) WHERE rn <= 3;
SELECT MIN(funding.amount) FROM funding INNER JOIN company ON funding.company_id = company.id WHERE company.industry = 'Fintech' AND company.founding_year > 2015;
SELECT COUNT(menu.item) FROM menu WHERE menu.category = 'fine dining' AND menu.price > 15.00;
UPDATE AthleteWellbeing SET InjuryStatus = 'Healthy' WHERE AthleteID = 1;
SELECT COUNT(*) FROM Students WHERE DisabilityType = 'Visual Impairment' AND Major LIKE 'STEM%' AND Region = 'North America';
DELETE d1  FROM Donations d1 LEFT JOIN Donations d2 ON d1.DonorID = d2.DonorID AND YEAR(d2.DonationDate) >= 2020 WHERE YEAR(d1.DonationDate) < 2020;
SELECT genre, MAX(frequency) FROM media_content GROUP BY genre;
SELECT region, COUNT(id) AS num_communities FROM community_data WHERE community_type = 'Indigenous' AND region = 'Arctic' GROUP BY region;
SELECT AVG(patients.age) FROM patients INNER JOIN treatments ON patients.id = treatments.patient_id WHERE patients.condition = 'PTSD' AND patients.country = 'South America' AND treatments.treatment = 'Medication';
INSERT INTO defendants (id, name, case_id) VALUES (1, 'John Smith', 1);
SELECT region, cases, RANK() OVER (ORDER BY cases DESC) AS rank FROM infectious_disease;
UPDATE local_businesses SET sustainability_rating = CASE business_id WHEN 1 THEN 5 WHEN 2 THEN 4 WHEN 3 THEN 3 ELSE sustainability_rating END WHERE business_id IN (1, 2, 3);
SELECT COUNT(DISTINCT P.PlayerID) as UniquePlayers FROM Players P JOIN GameDesign GD ON P.PlayerID = GD.GameID WHERE GD.Genre = 'Sports' AND P.TotalHoursPlayed > 30;
SELECT MAX(quantity) FROM CommunityPolicing WHERE state = 'California';
SELECT brand, COUNT(*) AS mentions FROM user_posts WHERE age BETWEEN 31 AND 35 AND country = 'United States' AND brand IN ('brand1', 'brand2', 'brand3', 'brand4', 'brand5') GROUP BY brand LIMIT 5;
SELECT subscriber_id, name, data_usage + call_usage AS total_usage FROM mobile_subscribers WHERE region = 'New York' ORDER BY total_usage DESC;
SELECT SUM(servings_per_day) FROM meal_plan WHERE vegan = true;
SELECT sa_mine_productivity.productivity, sa_environmental_impact.co2_emission FROM sa_mine_productivity INNER JOIN sa_environmental_impact ON sa_mine_productivity.year = sa_environmental_impact.year WHERE sa_mine_productivity.year BETWEEN 2017 AND 2019 AND sa_mine_productivity.productivity IS NOT NULL AND sa_environmental_impact.co2_emission IS NOT NULL;
SELECT MIN(fairness_score) FROM asia_fairness WHERE region = 'Asia';
SELECT SUM(violation_count) FROM regulatory_violations WHERE platform IN ('Binance', 'Kraken');
SELECT AVG(w.salary) FROM workers w JOIN factories f ON w.factory_id = f.factory_id WHERE f.department = 'textile';
SELECT MAX(Mass) FROM Spacecraft;
SELECT COUNT(*) FROM Building_Permits WHERE Project_Type = 'Green Building' AND Issue_Date >= DATEADD(year, -5, GETDATE());
SELECT s.sport_name, SUM(t.revenue) as total_revenue FROM sports s JOIN tickets t ON s.sport_id = t.sport_id GROUP BY s.sport_name;
SELECT DISTINCT location FROM disaster_response WHERE team = 'Team A';
SELECT initiative, launch_date FROM legal_tech_dates WHERE country = 'US' ORDER BY launch_date DESC;
SELECT country, COUNT(*) as num_users FROM user_activity WHERE activity LIKE '%outdoor%' GROUP BY country;
SELECT post_date, MIN(post_time) AS earliest_post_time FROM posts GROUP BY post_date;
SELECT AVG(funding_amount) FROM funding_records INNER JOIN companies ON funding_records.company_id = companies.id WHERE companies.founder_gender = 'Female' AND companies.industry = 'Healthcare';
SELECT COUNT(*) FROM green_building_certifications WHERE country = 'India' AND year = 2020;
DELETE FROM forest_plot fp USING (SELECT MIN(id) as id, size, species_id FROM forest_plot GROUP BY size, species_id HAVING COUNT(*) > 1) dup WHERE fp.id = dup.id;
SELECT AVG(g.count) FROM (SELECT COUNT(grants.id) AS count FROM grants GROUP BY grants.department_id) AS g;
SELECT AVG(monthly_data_usage) FROM customers WHERE state = 'Texas';
SELECT program_id, COUNT(animal_id) AS animal_count FROM Animals_In_Programs GROUP BY program_id;
SELECT name FROM rural_development.farmers WHERE technique IS NULL;
SELECT teacher.teacher_name FROM teacher INNER JOIN attendance ON teacher.teacher_id = attendance.teacher_id INNER JOIN workshop ON attendance.workshop_id = workshop.workshop_id WHERE workshop.workshop_name = 'Open Pedagogy 101';
SELECT AVG(DATEDIFF(hh, LAG(InventoryChecks.CheckDate) OVER (PARTITION BY InventoryChecks.WarehouseID ORDER BY InventoryChecks.CheckDate), InventoryChecks.CheckDate)) AS AverageTimeBetweenChecks FROM InventoryChecks WHERE InventoryChecks.WarehouseID = 4;
SELECT * FROM transactions WHERE initiative_type LIKE '%local%economic%' AND country IN ('Canada', 'Australia');
SELECT region, COUNT(fan_id) FROM regions JOIN games ON regions.fan_id = games.fan_id WHERE game_type = 'Baseball' GROUP BY region;
SELECT ArtistName, COUNT(*) AS SongCount FROM Songs JOIN Artists ON Songs.ArtistID = Artists.ArtistID WHERE Genre = 'Pop' GROUP BY ArtistName ORDER BY SongCount DESC;
SELECT name, COUNT(crop) Harvested_Crops FROM Farmers WHERE YEAR(harvest_date) = 2020 GROUP BY name;
SELECT name, SUM(funding) as total_funding FROM startups WHERE location LIKE 'Asia%' GROUP BY name ORDER BY total_funding DESC LIMIT 1;
SELECT t.teacher_name, COUNT(w.workshop_id) as total_workshops FROM workshops w JOIN teachers t ON w.teacher_id = t.teacher_id WHERE w.workshop_year = 2021 GROUP BY t.teacher_name;
SELECT * FROM network_investments WHERE region = 'Southwest';
SELECT AVG(visitors) FROM accommodations WHERE country = 'Canada' AND type = 'Eco-friendly';
SELECT province, COUNT(*)/SUM(population) as infection_rate FROM malaria_cases JOIN (SELECT province, SUM(population) as population FROM census GROUP BY province) USING(province) GROUP BY province;
SELECT b.brand_name, COUNT(p.product_id) AS product_count FROM brands b JOIN products p ON b.brand_id = p.brand_id WHERE b.is_cruelty_free = true GROUP BY b.brand_name ORDER BY product_count DESC LIMIT 3;
SELECT SUM(CO2_emission_tonnes) FROM AustralianWasteData;
SELECT COUNT(*) FROM central_access UNION ALL SELECT COUNT(*) FROM antarctic_access;
SELECT continent, year, quarter, arrivals, NTILE(4) OVER (ORDER BY arrivals) as quartile, (arrivals - LAG(arrivals) OVER (PARTITION BY continent ORDER BY year, quarter))*100.0 / LAG(arrivals) OVER (PARTITION BY continent ORDER BY year, quarter) as pct_change FROM quarterly_arrivals;
SELECT * FROM SustainableProperties WHERE size > 1000 AND country = 'India';
SELECT SUM(members) FROM unions WHERE domain LIKE '%Aerospace%';
SELECT plan_type, state, SUM(revenue) FROM mobile_revenue WHERE state = 'New York' GROUP BY plan_type;
SELECT COUNT(*) FROM emergencies WHERE neighborhood = 'Bronx' AND hour IN (7, 8, 16, 17, 18);
SELECT SUM(user_count) FROM virtual_tours WHERE country LIKE 'Asia%';
SELECT CuisineType, MealName, CalorieCount FROM (SELECT CuisineType, MealName, CalorieCount, RANK() OVER (PARTITION BY CuisineType ORDER BY CalorieCount DESC) as meal_rank FROM Cuisines C JOIN Meals M ON C.CuisineID = M.CuisineID) t WHERE meal_rank <= 3;
INSERT INTO public.taxis (name, in_use, city) VALUES ('Autonomous Taxi 3', TRUE, 'Atlanta');
SELECT SUM(num_personnel) FROM military_personnel WHERE department IN ('Navy', 'Air Force');
DELETE FROM students WHERE id NOT IN (SELECT student_id FROM courses);
CREATE VIEW virtual_tour_stats_summary AS SELECT hotel_id, COUNT(*), AVG(view_duration) FROM virtual_tour_stats GROUP BY hotel_id;
SELECT DISTINCT CaseAttorney.AttorneyID FROM CaseAttorney WHERE CaseAttorney.Outcome = 'Favorable';
INSERT INTO Maintenance (equipment, date, labor, parts) VALUES ('Jeep', '2021-04-30', 200, 100);
SELECT MAX(g.amount) FROM grants g JOIN faculty f ON g.faculty_id = f.id WHERE f.department = 'Physics';
SELECT ProgramName FROM TrainingPrograms WHERE ARRAY_LENGTH(STRING_TO_ARRAY(Participants, ',')) - ARRAY_LENGTH(STRING_TO_ARRAY(REPLACE(Participants, ',Non-binary', ''), ',')) > 5 AND ARRAY_LENGTH(STRING_TO_ARRAY(Participants, ',')) - ARRAY_LENGTH(STRING_TO_ARRAY(REPLACE(Participants, ',Female', ''), ',')) > 5 AND ARRAY_LENGTH(STRING_TO_ARRAY(Participants, ',')) - ARRAY_LENGTH(STRING_TO_ARRAY(REPLACE(Participants, ',Male', ''), ',')) > 5;
SELECT country, ev_market_share, av_market_share FROM MarketShare WHERE country IN ('Germany', 'UK');
SELECT AVG(species_count) FROM fish_observations WHERE reef LIKE '%coral reef%';
UPDATE art_exhibitions SET attendance = 550 WHERE exhibition_type = 'modern' AND attendee_age = 25;
SELECT grade_level, gender, AVG(mental_health_score) as avg_score FROM grades_gender WHERE grade_level = 11 GROUP BY grade_level, gender;
SELECT Courts.Location, COUNT(*) OVER(PARTITION BY Courts.Location) * 100.0 / SUM(COUNT(*)) OVER() AS Percentage FROM Courts JOIN Cases ON Courts.CourtID = Cases.CourtID WHERE Verdict = 'Conviction' AND CaseDate >= DATEADD(YEAR, -1, GETDATE()) GROUP BY Courts.Location, Courts.CourtID;
SELECT COUNT(*) FROM WastewaterTreatmentPlants WHERE Location = 'Region1' AND Capacity > 50000;
SELECT MAX(amount) FROM rd_expenditure WHERE country = 'CountryZ' AND year = 2022;
SELECT v.type, MAX(s.days_at_sea), AVG(w.wave_height) FROM vessels v JOIN sea_days s ON v.id = s.vessel_id JOIN wave_heights w ON v.id = w.vessel_id WHERE g.country = 'Southern Ocean' GROUP BY v.type;
SELECT SUM(IncidentCount) FROM SecurityIncidents WHERE Region = 'Latin America' AND Year = 2022;
SELECT title, description, publication_date FROM creative_ai_applications WHERE (country = 'Spain' OR country = 'Italy') AND publication_date >= '2020-01-01';
SELECT DATE_TRUNC('month', launch_date) as month, COUNT(*) as products_launched FROM Product_Launch WHERE launch_date >= '2022-01-01' AND launch_date < '2023-01-01' GROUP BY month ORDER BY month;
SELECT SUM(count) FROM marine_mammals WHERE type = 'mammal' AND region = 'Southern Ocean';
SELECT artist, SUM(revenue) as total_revenue FROM ArtistRevenue WHERE year = 2020 GROUP BY artist ORDER BY total_revenue DESC LIMIT 1;
SELECT job_title, AVG(salary) FROM salaries GROUP BY job_title;
SELECT AVG(revenue) FROM virtual_tours WHERE country IN ('United States', 'United Kingdom');
SELECT AVG(Torque) FROM EVSpecs WHERE Make = 'Audi';
SELECT avg_co2_emission FROM cars WHERE type = 'Electric' AND country = 'Germany';
SELECT COUNT(*) FROM properties WHERE property IN ('recyclable', 'biodegradable') GROUP BY item_id HAVING COUNT(DISTINCT property) = 2;
DELETE FROM volunteer WHERE vol_email NOT LIKE '%@%.%';
SELECT e.company_id, c.name, SUM(e.quantity) AS total_silver_quantity FROM extraction e JOIN company c ON e.company_id = c.id WHERE e.mineral = 'silver' GROUP BY e.company_id, c.name;
SELECT year, SUM(horsepower) as total_hp FROM green_cars WHERE is_electric = TRUE GROUP BY year;
INSERT INTO space_missions (id, mission_name, launch_date, mission_status) VALUES (1, 'Voyager 1', '1977-09-05', 'Active'), (2, 'Voyager 2', '1977-08-20', 'Active');
INSERT INTO UnderwritingData (ID, PolicyholderID, Occupation, AnnualIncome, HomeOwner) SELECT Policyholders.ID, Policyholders.ID AS PolicyholderID, 'Nurse' AS Occupation, 80000 AS AnnualIncome, 'Yes' AS HomeOwner FROM Policyholders WHERE Policyholders.AnnualIncome > 75000 AND HomeOwner = 'Yes';
SELECT MIN(launch_year) FROM satellites;
SELECT AVG(event_attendance.attendees) FROM event_attendance JOIN events ON event_attendance.event_id = events.id WHERE events.category = 'theater' AND capacity > 500;
SELECT department, MAX(DATEDIFF(resolution_date, incident_date)) as max_resolution_time FROM incidents WHERE department = 'finance' GROUP BY department; SELECT incident_id, DATEDIFF(resolution_date, incident_date) as resolution_time FROM incidents WHERE department = 'finance' ORDER BY resolution_time DESC LIMIT 1;
UPDATE sustainable_practices SET category = 'Energy' WHERE practice_id = 3;
DELETE FROM students WHERE last_checkin < DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) AND DATEDIFF(last_checkin, CURRENT_DATE) < 5;
INSERT INTO peacekeeping_operations (operation_id, operation_name, country, operation_year) VALUES (1, 'Operation Peaceful Sky', 'Cyprus', 2020), (2, 'Operation Ocean Shield', 'Somalia', 2011);
SELECT AVG(Training.duration) FROM Training WHERE Training.program_area = 'Emergency Response' AND YEAR(Training.start_date) = 2019;
INSERT INTO marine_species (id, name, discovery_date, location) VALUES (4, 'New Species', '2022-03-02', 'Indian Ocean');
SELECT project_type, COUNT(*) FROM Count_By_Type JOIN Project_Types ON Count_By_Type.project_type = Project_Types.project_type GROUP BY project_type;
SELECT country, MAX(stars) as max_stars, MIN(stars) as min_stars FROM hotels GROUP BY country;
SELECT company_name, carbon_emissions FROM company_emissions WHERE year = 2019 AND company_name IN (SELECT company_name FROM company_emissions WHERE year = 2019 GROUP BY company_name ORDER BY SUM(carbon_emissions) DESC LIMIT 3) ORDER BY carbon_emissions DESC;
SELECT SUM(quantity) FROM sales WHERE category = 'Tops' AND sale_date BETWEEN '2021-01-01' AND '2021-03-31';
SELECT project_name, completion_year FROM climate_adaptation_projects WHERE project_type = 'adaptation';
SELECT MAX(depth) FROM mining_shafts;
SELECT n.name, COUNT(v.id) as num_lost_volunteers FROM non_profit n INNER JOIN volunteers v ON n.id = v.non_profit_id WHERE v.end_date <= CURRENT_DATE AND v.end_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY n.id;
SELECT COUNT(*) FROM workplaces WHERE state = 'Florida' AND safety_violation = true;
SELECT ArtistID, COUNT(*) AS ArtCount FROM TraditionalArt GROUP BY ArtistID ORDER BY ArtCount DESC;
SELECT p.platform, COUNT(DISTINCT p.post_id) as num_posts, COUNT(DISTINCT c.comment_id) as num_comments, u.gender FROM posts p JOIN comments c ON p.post_id = c.post_id JOIN user_profile u ON p.user_id = u.user_id WHERE p.platform = 'Twitter' AND u.age BETWEEN 13 AND 25 AND p.post_date >= DATEADD(week, -1, GETDATE()) GROUP BY p.platform, u.gender;
SELECT AVG(age) FROM teachers WHERE last_pd_course >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);
SELECT AVG(temperature) FROM temperature_data WHERE field_id = 'Field008' AND timestamp BETWEEN DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 1 MONTH) AND CURRENT_TIMESTAMP;
INSERT INTO vessels (id, name, type, year) VALUES (1, 'MV Horizon', 'Container Ship', 2010);
SELECT SUM(cost) FROM SpacecraftManufacturing WHERE manufacturing_date >= DATEADD(year, -5, CURRENT_DATE);
SELECT actor, action, COUNT(*) as count, RANK() OVER (PARTITION BY actor ORDER BY count DESC) as rank FROM incidents GROUP BY actor, action ORDER BY actor, rank;
SELECT country, SUM(project_count) FROM energy_efficiency WHERE year = 2020 GROUP BY country;
SELECT MachineName FROM Machines WHERE PurchaseDate BETWEEN '2020-01-01' AND '2020-12-31' AND Location = 'Warehouse';
SELECT founder, COUNT(*) FROM companies GROUP BY founder;
SELECT AVG(reduction) FROM co2_reduction WHERE source = 'wind';
DELETE FROM Habitat WHERE name = 'Habitat D';
DELETE s FROM shipments s INNER JOIN (SELECT id, delivery_date FROM shipments WHERE status = 'delayed' AND delivery_date < NOW() - INTERVAL 30 DAY) d ON s.id = d.id;
UPDATE regions SET name = 'East Asia' WHERE continent = 'Asia';
SELECT users.name FROM users LEFT JOIN posts ON users.id = posts.user_id WHERE posts.timestamp >= DATE_SUB(NOW(), INTERVAL 24 HOUR) AND posts.likes = 0;
INSERT INTO game_sessions (session_id, player_id, session_start_time, session_duration) VALUES (1, 1, '2021-05-01 15:00:00', '02:30:00'), (2, 2, '2021-04-15 18:15:00', '01:10:00');
SELECT SUM(billing_amount) FROM cases INNER JOIN attorneys ON cases.attorney_id = attorneys.id WHERE attorneys.region = 'New York' AND attorneys.specialty = 'Personal Injury';
SELECT AVG(count) as avg_daily_posts FROM (SELECT DATE(datetime) as date, COUNT(*) as count FROM posts WHERE hashtags LIKE '%#climatechange%' AND datetime BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY date) as daily_posts;
SELECT city, COUNT(*) as num_rides FROM electric_taxis WHERE ride_id BETWEEN 1 AND 100000 GROUP BY city ORDER BY num_rides DESC LIMIT 1;
SELECT AVG(products.price) FROM products WHERE products.category = 'clothing' AND products.is_ethically_sourced = true;
SELECT 100.0 * SUM(volume_sold) / (SELECT SUM(volume_sold) FROM Vegetables) AS percentage FROM Vegetables WHERE origin = 'Local';
ALTER TABLE buildings ADD COLUMN sustainability_rating INT;
SELECT site_name FROM aquaculture_temperature WHERE country = 'Canada' AND avg_temperature < 10.0;
SELECT SUM(budget) FROM city_education WHERE YEAR(event_date) = 2022 AND category = 'education';
SELECT continent, SUM(donation_amount) as total_donations FROM Donations WHERE DATE_TRUNC('year', donation_date) = DATE_TRUNC('year', '2019-01-01') GROUP BY continent;
SELECT capacity_cubic_meters FROM landfill_capacities WHERE city = 'Accra' AND date = (SELECT MAX(date) FROM landfill_capacities WHERE city = 'Accra');
INSERT INTO donors (donor_id, first_name, last_name, email, donation_amount, donation_date) VALUES (2001, 'Jane', 'Smith', 'jane.smith@example.com', 500.00, '2022-08-01');
SELECT ProgramType, SUM(ProgramBudget) as TotalBudget FROM Programs WHERE ProgramStartDate <= '2022-03-31' AND ProgramEndDate >= '2022-01-01' GROUP BY ProgramType;
SELECT c.cuisine_name, COUNT(DISTINCT ingredients) FROM dishes d JOIN cuisine c ON d.cuisine_id = c.cuisine_id GROUP BY c.cuisine_id ORDER BY COUNT(DISTINCT ingredients) DESC;
SELECT ProgramID, ProgramName FROM ZeroBudgetPrograms WHERE Budget = 0 AND Volunteers > 50;
SELECT MAX(HospitalVisits) FROM Patients WHERE MentalHealth IS NOT NULL AND State = 'Texas';
SELECT name FROM SpaceMissions WHERE id IN (SELECT mission_id FROM US_Astronauts_Missions) OR id IN (SELECT mission_id FROM CA_Astronauts_Missions);
SELECT region, AVG(score) as avg_score FROM media_literacy GROUP BY region;
SELECT country, MAX(budget) as max_budget, MIN(budget) as min_budget FROM Ethical_AI;
SELECT ContractorName, SUM(ContractsAwarded) as Total_Contracts FROM Contracts c JOIN Contractors con ON c.ContractorID = con.ContractorID WHERE Industry = 'IT' AND Year = 2020 GROUP BY ContractorName;
SELECT AVG(yield) FROM crops INNER JOIN urban_farmers ON crops.name = urban_farmers.crops WHERE urban_farmers.location = 'Berlin';
SELECT store, category, 100.0 * COUNT(*) / SUM(COUNT(*)) OVER (PARTITION BY store) as percentage FROM products JOIN stores ON products.store = stores.name WHERE ethically_sourced = TRUE AND date >= DATEADD(quarter, -1, GETDATE()) GROUP BY store, category;
SELECT AVG(products.quantity) FROM products WHERE products.is_circular = true AND products.country = 'Developing';
SELECT MAX(Duration) FROM SpaceMission;
SELECT MAX(lifespan) FROM astronauts_india WHERE is_lead_astronaut = true;
SELECT DATE_FORMAT(application_date, '%Y-%m') as month, COUNT(id) as applications_received  FROM job_applications  WHERE YEAR(application_date) = 2022  GROUP BY month;
SELECT AVG(age) FROM patients WHERE disease = 'influenza' AND state = 'Texas';
DELETE FROM sales WHERE sale_date < (CURRENT_DATE - INTERVAL '6 months');
SELECT name, latitude, longitude FROM stations;
SELECT AVG(population/(year-2014)) FROM education_sector WHERE state = 'California' AND year BETWEEN 2015 AND 2020;
SELECT s.state FROM sites s INNER JOIN environmental_impact_assessments e ON s.site_id = e.site_id GROUP BY s.state;
SELECT total_revenue FROM genre_sales WHERE genre = 'Jazz' AND year = 2020;
SELECT mine_name, num_employees, ROW_NUMBER() OVER (ORDER BY num_employees DESC) as rank FROM mine_workforce;
SELECT Region, COUNT(ProgramName) FROM SupportPrograms GROUP BY Region;
SELECT region, SUM(quantity) FROM Recycled_Material_Garments GROUP BY region;
SELECT state, COUNT(DISTINCT student_id) FROM Accommodations WHERE request_date >= '2022-01-01' AND request_date < '2023-01-01' AND visual_impairment = TRUE GROUP BY state;
SELECT f.user_id, COUNT(f.follower_id) as follower_count FROM followers f JOIN users u ON f.user_id = u.user_id JOIN posts p ON u.user_id = p.user_id WHERE p.post_content LIKE '%vegan food%' AND p.post_date >= DATEADD(week, -1, GETDATE()) GROUP BY f.user_id ORDER BY follower_count DESC;
SELECT COUNT(DISTINCT genre) as num_genres FROM Music_Streaming;
SELECT activity_name, AVG(duration) as avg_duration FROM activity_log JOIN membership ON activity_log.member_id = membership.member_id WHERE membership.join_date >= '2021-01-01' AND membership.region = 'East' GROUP BY activity_name ORDER BY avg_duration DESC LIMIT 2;
SELECT system_name FROM vulnerabilities WHERE cve_count < 5;
SELECT AVG(age) FROM attendees JOIN events ON attendees.event_id = events.event_id WHERE events.event_type = 'Music';
SELECT region, AVG(workers) FROM hospitals GROUP BY region;
SELECT AVG(funding.amount) FROM funding JOIN companies ON funding.company_id = companies.id WHERE companies.country = 'USA';
SELECT f.name, SUM(fertilizers.quantity) as total_quantity FROM fertilizers JOIN farmers f ON fertilizers.farm_id = f.id WHERE fertilizers.type = 'Synthetic' AND f.region = 'East' GROUP BY f.name;
SELECT AVG(price) FROM strains WHERE type = 'indica';
SELECT COUNT(DISTINCT t.show_id) + COUNT(DISTINCT m.movie_id) as total_releases FROM Studios s JOIN TV_Shows t ON s.studio_id = t.studio_id JOIN Movies m ON s.studio_id = m.studio_id WHERE t.release_year = 2018 OR m.release_year = 2018 AND s.studio_name = 'Studio J';
SELECT SUM(transaction_amount), payment_method FROM transactions WHERE transactions.transaction_date BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY payment_method;
SELECT MIN(quantity) as min_quantity FROM Manufacturing WHERE garment_type = 'Jacket' AND country = 'China' AND year = 2020;
SELECT AVG(Players.Playtime) FROM Players INNER JOIN VRPlayers ON Players.PlayerID = VRPlayers.PlayerID;
SELECT AVG(Research.Salary) AS ResearchAverage, AVG(Safety.Salary) AS SafetyAverage FROM Employees AS Research, Employees AS Safety WHERE Research.Department = 'Research' AND Safety.Department = 'Safety';
SELECT sale_region, SUM(CASE WHEN is_circular THEN revenue ELSE 0 END) * 100.0 / SUM(revenue) as pct_circular_sales FROM sales WHERE sale_date >= DATEADD(year, -1, GETDATE()) GROUP BY sale_region;
SELECT athletes.name, COUNT(*) as program_count FROM athletes INNER JOIN wellbeing_programs ON athletes.athlete_id = wellbeing_programs.athlete_id GROUP BY athletes.name ORDER BY program_count DESC LIMIT 5;
SELECT p.category_id, p.name, DATE_FORMAT(t.transaction_date, '%Y-%m') as transaction_month, SUM(t.amount) as monthly_transaction_volume FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id INNER JOIN products p ON t.product_id = p.product_id WHERE c.location = 'New York' AND p.category_id IN (SELECT t2.category_id FROM transactions t2 GROUP BY t2.category_id ORDER BY SUM(t2.amount) DESC LIMIT 3) AND t.transaction_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) GROUP BY p.category_id, transaction_month;
SELECT ms.name, ms.location, e.quantity + c.quantity AS total_workforce, me.quantity AS total_minerals_extracted FROM mining_sites ms INNER JOIN (SELECT site_id, SUM(quantity) AS quantity FROM employees GROUP BY site_id) e ON ms.id = e.site_id INNER JOIN (SELECT site_id, SUM(quantity) AS quantity FROM contractors GROUP BY site_id) c ON ms.id = c.site_id INNER JOIN (SELECT site_id, SUM(quantity) AS quantity FROM minerals_extracted GROUP BY site_id) me ON ms.id = me.site_id;
SELECT SUM(tests_failed) FROM safety_testing WHERE country = 'Europe';
SELECT country, SUM(investment_amount) FROM network_investments WHERE country = 'CountryName' AND investment_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY country;
SELECT district_id, AVG(AVG(num_students) + AVG(num_teachers)) as avg_students_and_teachers FROM districts GROUP BY district_id;
SELECT technique FROM explainable_ai WHERE tool IN ('LIME', 'SHAP')
SELECT * FROM cb_agreements WHERE industry = 'manufacturing' AND expiration_date BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 6 MONTH) ORDER BY expiration_date;
SELECT SalesPercentage FROM Sales WHERE VehicleType = 'Electric' AND Country = 'USA';
SELECT project_category, COUNT(*) as total_projects, SUM(project_cost) as total_cost FROM DefenseProjects GROUP BY project_category;
SELECT age_groups.age_range, COUNT(dance_performances.attendee_age) as total_attendees FROM dance_performances INNER JOIN age_groups ON dance_performances.attendee_age BETWEEN age_groups.lower_limit AND age_groups.upper_limit GROUP BY age_groups.age_range;
SELECT name FROM ingredients WHERE country = 'Brazil';
SELECT t.team_name, AVG(price) avg_price FROM ticket_prices tp JOIN teams t ON tp.team_id = t.team_id JOIN games g ON tp.game_id = g.game_id WHERE t.team_id = g.home_team_id AND tp.game_type = 'Home' AND t.sport = 'Soccer' AND tp.price IS NOT NULL GROUP BY t.team_name;
SELECT MAX(funding_amount) FROM company WHERE founder_race = 'Latinx';
SELECT project_type, COUNT(*) AS num_projects, SUM(funded) AS num_funded FROM climate_projects WHERE year BETWEEN 2015 AND 2020 AND region IN ('Asia', 'Africa') GROUP BY project_type;
SELECT COUNT(*) FROM Satellites WHERE country = 'India';
SELECT accommodationType, SUM(cost) FROM AssistiveTechnology GROUP BY accommodationType;
SELECT MAX(recycling_rate) FROM RecyclingRates WHERE year = 2019 AND material = 'Glass' AND country IN ('United States', 'Canada', 'Mexico');
SELECT gender, COUNT(*) FROM employees GROUP BY gender;
SELECT COUNT(*) FROM taxi_trips WHERE vehicle_type = 'Accessible Taxi' AND trip_date BETWEEN '2022-03-01' AND '2022-03-31';
UPDATE workplace_safety SET total_incidents = total_incidents + 1 WHERE facility_id = 42;
SELECT COUNT(*) FROM defense_diplomacy WHERE location = 'South America' AND YEAR(date) = 2022;
SELECT name FROM cultural_sites WHERE city = 'Athens' AND virtual_tour = true;
SELECT SUM(Quantity) FROM Sales JOIN RetailStores ON Sales.StoreID = RetailStores.StoreID JOIN Products ON Sales.ProductID = Products.ProductID WHERE RetailStores.State = 'California' AND Products.IsOrganic = true;
SELECT regions.region_name, SUM(CASE WHEN cruelty_free_sales.is_cruelty_free = true THEN 1 ELSE 0 END) as total_cruelty_free_sales FROM regions JOIN cruelty_free_sales ON regions.region_id = cruelty_free_sales.region_id GROUP BY regions.region_name
DELETE FROM indigenous_communities WHERE community_name = 'Inuit' AND region = 'Nunavut';
SELECT SUM(allocated_budget) FROM Budget WHERE program_name = 'Arts' AND year = 2020;
SELECT COUNT(DISTINCT donor_id) FROM donations JOIN campaigns ON donations.campaign_id = campaigns.id WHERE campaigns.name = 'Campaign A';
SELECT Programs.ProgramName, COUNT(Volunteers.ProgramID) AS NumberOfVolunteers FROM Programs INNER JOIN Volunteers ON Programs.ProgramID = Volunteers.ProgramID WHERE Programs.City = 'Los Angeles' GROUP BY Programs.ProgramName;
SELECT product_name, SUM(sale_amount) AS total_sales FROM TopSkincareSales WHERE sale_date BETWEEN '2020-01-01' AND '2020-12-31' GROUP BY product_name ORDER BY total_sales DESC LIMIT 5;
SELECT SUM(length) FROM Highway WHERE country = 'India';
SELECT MIN(price) FROM carbon_prices_uk_fr WHERE country IN ('United Kingdom', 'France');
SELECT SUM(quantity_sold) FROM Vehicle_Sales WHERE region = 'Canada' AND (vehicle_type = 'Tesla Model 3 (Hybrid)' OR vehicle_type = 'Chevrolet Volt (Electric)') AND sale_quarter = 1;
SELECT Genre, AVG(Rating) FROM Games JOIN Players ON Games.GameID = Players.PlayerID WHERE Country IN ('China', 'Japan', 'Korea') GROUP BY Genre ORDER BY AVG(Rating) DESC LIMIT 3;
SELECT v.vessel_name, MAX(vc.cargo_weight) as max_cargo_weight, MIN(vc.cargo_weight) as min_cargo_weight  FROM VoyageCargo vc JOIN Voyages v ON vc.voyage_id = v.voyage_id WHERE v.region = 'Indian Ocean' AND v.voyage_date >= '2023-01-01' AND v.voyage_date < '2023-04-01' GROUP BY v.vessel_id;
SELECT region, MAX(amount) FROM waste_generation WHERE year = 2020 GROUP BY region;
SELECT COUNT(*) FROM Railways INNER JOIN Countries ON Railways.country = Countries.name WHERE Countries.continent = 'Asia' AND length > 500;
UPDATE DefenseProjects SET project_name = 'Project Z', budget = 1500000000 WHERE project_name = 'Project Y';
SELECT COUNT(*) FROM Players;
SELECT year, co_ownership, COUNT(*) FROM sf_coownership GROUP BY year, co_ownership;
UPDATE rural_clinics SET position = 'Surgeon' WHERE id = 1;
SELECT carbon_seq_rate FROM ForestCarbonSeq WHERE region = 'Region C';
SELECT AVG(rating) FROM products WHERE gluten_free = TRUE;
INSERT INTO public_health_policies (name, created_at) VALUES ('Tobacco Control Act', '2000-01-01 00:00:00');
SELECT State, ViolationYear, COUNT(*) FROM MentalHealthParityViolations GROUP BY State, ViolationYear;
SELECT policy_number, policy_type, coverage_amount FROM policies WHERE coverage_amount = (SELECT MAX(coverage_amount) FROM policies);
CREATE VIEW disease_prevention AS SELECT s.species_id, d.disease_name, d.prevention_methods FROM fish_diseases d JOIN species_diseases sd ON d.disease_id = sd.disease_id JOIN fish_farms f ON f.species_id = sd.species_id GROUP BY s.species_id, d.disease_name, d.prevention_methods;
SELECT ingredient_name, popularity_score FROM ingredients WHERE is_cruelty_free = TRUE AND country = 'Canada' ORDER BY popularity_score DESC;
SELECT SUM(Cases.HoursBilled) as TotalBilledHours FROM Cases INNER JOIN Attorneys ON Cases.AttorneyID = Attorneys.AttorneyID WHERE Attorneys.Gender = 'female';
SELECT * FROM defense_contracts WHERE year = 2020;
SELECT contributor FROM funding WHERE region = 'Canada' GROUP BY contributor ORDER BY SUM(amount) DESC LIMIT 3;
SELECT MAX(health_equity_metric_score), worker_id FROM patients GROUP BY worker_id;
INSERT INTO circular_economy_initiatives (initiative_id, manufacturer_name, initiative_description) VALUES (5, 'ManufacturerE', 'Remanufacturing Program');
SELECT Volunteers.Name, SUM(Donors.Amount) AS TotalDonationAmount FROM Volunteers INNER JOIN Donors ON Volunteers.VolunteerID = Donors.VolunteerID GROUP BY Volunteers.Name;
SELECT PolicyType, COUNT(*) as ClaimCount FROM Claims WHERE ClaimState = 'Michigan' GROUP BY PolicyType;
SELECT type, COUNT(type) AS count FROM military_tech GROUP BY type;
SELECT * FROM nato_equipment;
SELECT SUM(installed_capacity) FROM latam_renewable_energy WHERE country IN ('Brazil', 'Argentina');
SELECT MIN(cargo_weight) FROM Loading WHERE vessel_name = 'VesselV' AND load_date BETWEEN '2021-11-01' AND '2021-11-30';
SELECT * FROM customers WHERE region = 'Americas' AND account_balance > 40000.00;
SELECT COUNT(*) FROM hotel_sustainability WHERE sustainable_practices ILIKE '%Solar Power%';
 SELECT COUNT(*) FROM satellite_images WHERE satellite_name = 'SatelliteA' AND image_date BETWEEN '2021-07-01' AND '2021-07-31' AND has_clouds = TRUE;
SELECT country FROM RaytheonSales WHERE country NOT IN (SELECT country FROM GeneralDynamicsSales WHERE RaytheonSales.country = GeneralDynamicsSales.country AND RaytheonSales.year = GeneralDynamicsSales.year)
SELECT measure, success_rate FROM adaptation_measures WHERE location = 'Africa' AND success_rate > 0.85;
CREATE TABLE circular_economy_initiatives (id INT PRIMARY KEY, location VARCHAR(50), initiative VARCHAR(100), start_date DATE, end_date DATE);
SELECT department, AVG(salary) AS avg_salary FROM employees WHERE department <> 'Sales' GROUP BY department;
SELECT SUM(quantity) FROM sourcing WHERE textile_type = 'Organic Cotton' AND region = 'Africa';
SELECT country, SUM(quantity) FROM country_products WHERE ethical_labor = TRUE GROUP BY country;
SELECT * FROM ai_safety WHERE scenario = 'Explainable AI' AND risk = 'High';
SELECT DATE_FORMAT(employment_date, '%Y-%m') as quarter, job_category, ROUND(100.0 * SUM(CASE WHEN is_veteran THEN 1 ELSE 0 END) / COUNT(*), 2) as pct_veteran_employment FROM veteran_employment WHERE employment_date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) AND CURRENT_DATE GROUP BY quarter, job_category;
SELECT MAX(temperature) FROM biosensors.measurements WHERE location = 'Australia';
SELECT AVG(water_consumption / household_size) FROM seattle_water_consumption WHERE date >= DATEADD(year, -1, CURRENT_DATE) AND city = 'Seattle';
SELECT SUM(sale_amount) FROM MilitaryEquipmentSales WHERE buyer = 'Canada' AND YEAR(sale_date) = 2020;
SELECT d.date, SUM(s.quantity) AS total_quantity FROM Sales s JOIN Dates d ON s.date_id = d.id WHERE s.transparent_supply_chain = true GROUP BY d.date;
DELETE FROM CommunityEngagementMetrics WHERE EventType = 'Panel Discussion';
SELECT * FROM defense_diplomacy ORDER BY event_date DESC;
SELECT drug FROM fda_approval WHERE year = 2018;
SELECT name FROM Exhibition WHERE rating = (SELECT MAX(rating) FROM Exhibition);
SELECT Nationality FROM Astronauts WHERE Name NOT IN (SELECT Astronaut FROM Mission_Astronauts) INTERSECT SELECT Astronaut FROM Research_Data WHERE Experiment = 'Astrophysics';
SELECT sport, COUNT(*) FROM athletes_3 GROUP BY sport;
SELECT State, MAX(Score) FROM Water_Conservation_Initiatives WHERE Year = 2020 GROUP BY State ORDER BY Score DESC LIMIT 3;
UPDATE vehicles SET last_maintenance = CURDATE() WHERE vehicle_id = 1;
SELECT name FROM mines WHERE location = 'Indonesia' AND production_volume > 5000 AND year = 2020 AND mineral = 'tin';
SELECT canyon_name FROM GulfOfMexico;
SELECT country, num_bases FROM military_bases ORDER BY num_bases DESC LIMIT 3;
SELECT d.name, COUNT(e.eid) as num_emergencies, COUNT(c.cid) as num_crimes FROM districts d LEFT JOIN emergencies e ON d.did = e.did LEFT JOIN crimes c ON d.did = c.did GROUP BY d.name;
SELECT well_name FROM well_locations WHERE region = 'south';
SELECT farm_id FROM FarmBiomass WHERE water_quality_index < 65 AND total_biomass > 2000;
SELECT * FROM Employees WHERE DATEDIFF(year, Hire_Date, GETDATE()) > 2 AND Department != 'Executive'
SELECT MAX(availability) FROM shared_ebikes WHERE start_longitude BETWEEN -46.8 AND -46.2 AND start_latitude BETWEEN -23.9 AND -23.3;
SELECT Factories.country, (SUM(CASE WHEN Materials.is_sustainable THEN 1 ELSE 0 END) / COUNT(DISTINCT Products.product_id)) * 100 AS percentage FROM Factories INNER JOIN ProductFactories ON 1 = 1 INNER JOIN Products ON ProductFactories.factory_id = Products.factory_id INNER JOIN Materials ON Products.material_id = Materials.material_id GROUP BY Factories.country;
SELECT garment_id, category, year, MAX(revenue) AS max_revenue FROM GarmentSales GROUP BY category, year;
UPDATE sales_data SET total_cost = total_cost * 1.10;
WITH pre_2010 AS (DELETE FROM EnvironmentalViolations WHERE ViolationDate < '2010-01-01' RETURNING *) SELECT COUNT(*) as ViolationsDeleted FROM pre_2010;
SELECT Astronauts.country, AVG(medical_risk) as avg_medical_risk, STDDEV(medical_risk) as stddev_medical_risk FROM Astronauts INNER JOIN AstronautMedicalData ON Astronauts.id = AstronautMedicalData.astronaut_id GROUP BY Astronauts.country;
SELECT brand, SUM(revenue) as total_revenue FROM sales GROUP BY brand ORDER BY total_revenue DESC LIMIT 3;
SELECT MIN(price) FROM products WHERE is_cruelty_free = TRUE AND country = 'Brazil';
SELECT vessel_id, name FROM Vessels WHERE cargo_capacity > 5000;
SELECT SUM(count) FROM Streams WHERE artist = 'Justin Bieber';
SELECT tower_id, state, investment_date FROM network_towers WHERE state = 'California' AND investment_date >= '2018-01-01';
SELECT donors.name, AVG(donation_details.amount) AS avg_donation FROM donors INNER JOIN donation_details ON donors.id = donation_details.donor_id WHERE category = 'disaster relief' GROUP BY donors.id;
SELECT mediator_id, AVG(case_duration) AS avg_duration FROM case_outcomes WHERE case_status = 'Success' GROUP BY mediator_id;
SELECT producer, SUM(revenue) FROM Producers WHERE year = 2019 AND revenue IN (SELECT MAX(revenue) FROM Producers WHERE year = 2019) OR year = 2018 AND revenue IN (SELECT MAX(revenue) FROM Producers WHERE year = 2018) GROUP BY producer;
SELECT o.org_state, SUM(d.donation_amount) as total_donation_amount FROM organizations o JOIN donations d ON o.org_id = d.org_id GROUP BY o.org_state;
SELECT condition, gender, COUNT(*) as num_patients, AVG(age) as avg_age FROM patients GROUP BY condition, gender;
SELECT Name, NumWeapons FROM Submarines;
SELECT country, total_incidents FROM incident_count_by_country ORDER BY total_incidents DESC;
SELECT c.name FROM countries c INNER JOIN operations o ON c.id = o.country_id WHERE o.region = 'Asia-Pacific';
SELECT space_missions.name, space_missions.start_date, space_missions.end_date FROM space_missions INNER JOIN mission_partners ON space_missions.id = mission_partners.mission_id WHERE mission_partners.partner_country IS NOT NULL;
SELECT region, program_name, COUNT(DISTINCT language) as num_languages FROM language_preservation_programs_region GROUP BY region, program_name;
SELECT formation, SUM(oil_production) + SUM(gas_production) AS total_production FROM shale_oil_gas_production WHERE formation IN ('Marcellus', 'Barnett') GROUP BY formation;
SELECT clients.client_id, clients.total_assets FROM clients INNER JOIN investments ON clients.client_id = investments.client_id WHERE investments.investment_type = 'International Equities' ORDER BY clients.total_assets DESC LIMIT 3;
SELECT Manufacturer, Model, SafetyRating FROM VehicleSafetyTests;
SELECT violation_type, MIN(fine_amount) FROM traffic_court_records WHERE court_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY violation_type;
SELECT DISTINCT Ethnicity, Gender FROM Employees WHERE Department = 'Workforce Development';
DELETE FROM mining_sites WHERE productivity IS NULL;
SELECT AVG(WaterTemp) FROM PacificShrimpFarms WHERE Location LIKE '%Pacific Ocean%' AND MONTH(FarmVisitDate) = 4;
SELECT investment_strategy, MAX(roi) as highest_roi FROM investments WHERE country IN ('Canada', 'Brazil', 'US') AND investment_date BETWEEN '2022-10-01' AND '2022-12-31' GROUP BY investment_strategy;
SELECT AVG(severity) FROM vulnerabilities WHERE sector = 'Communications';
SELECT SUM(investment_amount) FROM econ_diversification;
SELECT SUM(donation_amount) FROM monthly_donations WHERE category = 'impact_investing' AND donation_month = 1;
SELECT SUM(weight) FROM CargoTransports WHERE transport_time > NOW() - INTERVAL '1 year' AND source_port_id IN (SELECT id FROM Ports WHERE country = 'India') AND destination_port_id IN (SELECT id FROM Ports WHERE country = 'Australia') AND (SELECT vessel_type FROM Vessels WHERE id = CargoTransports.vessel_id) != 'Liquefied Gas Carrier';
SELECT SUM(transaction_value) FROM social_impact_investments JOIN esg_categories ON social_impact_investments.category = esg_categories.category;
SELECT MineName, SUM(TotalCoalQuantity) as TotalCoalQuantity FROM Mine GROUP BY MineName ORDER BY TotalCoalQuantity DESC;
INSERT INTO renewable_energy (id, name, location, capacity, type) VALUES (1, 'SolarFarm 1', 'New York', 50.0, 'Solar');
SELECT TransactionDate, SUM(Amount) FROM Transactions GROUP BY TransactionDate ORDER BY SUM(Amount) DESC LIMIT 1;
SELECT plant_name, quantity FROM Chemical_Plant WHERE location = 'California' AND chemical = 'Hydrogen Peroxide';
SELECT MIN(budget) FROM defense_diplomacy WHERE region = 'Southeast Asia';
SELECT SiteName, Visitors FROM CulturalHeritage WHERE Country = 'Africa' GROUP BY SiteName, Country ORDER BY Visitors DESC
SELECT Year, Country, MAX(Number_Of_Satellites) FROM Satellite_Launches GROUP BY Year, Country;
SELECT Destination, (VisitorCountEnd - VisitorCountStart) * 100.0 / VisitorCountStart as PercentageChange FROM (SELECT Destination, FIRST_VALUE(VisitorCount) OVER (PARTITION BY Destination ORDER BY VisitDate ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as VisitorCountStart, LAST_VALUE(VisitorCount) OVER (PARTITION BY Destination ORDER BY VisitDate ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as VisitorCountEnd FROM MonthlyVisitors) AS Subquery;
SELECT city, SUM(cost) FROM Projects WHERE city = 'Austin' AND QUARTER(start_date) = 1 AND YEAR(start_date) = 2022 GROUP BY city;
SELECT Name FROM Suppliers WHERE SupplierID IN (SELECT SupplierID FROM Products WHERE Organic = TRUE GROUP BY SupplierID HAVING MAX(Quantity) OR MIN(Quantity));
SELECT country, COUNT(festival_id) as festival_count FROM Festivals WHERE festival_date >= DATE_SUB(CURDATE(), INTERVAL 5 YEAR) GROUP BY country ORDER BY festival_count DESC LIMIT 3;
SELECT COUNT(*) FROM Exhibitions WHERE year IN (2018, 2019);
 SELECT r.jurisdiction, COUNT(sc.smart_contract_id) as total_smart_contracts FROM smart_contracts sc JOIN regulations r ON sc.jurisdiction = r.jurisdiction GROUP BY r.jurisdiction ORDER BY total_smart_contracts DESC;
SELECT SUM(economic_impact) FROM sustainable_tourism_id WHERE year = 2021;
SELECT name FROM organizations JOIN volunteer_events ON organizations.id = volunteer_events.organization_id WHERE category = 'Environment' AND volunteer_hours > 1000;
SELECT f.department, ROUND(100.0 * COUNT(CASE WHEN f.minority = 'Yes' THEN 1 END) / COUNT(*), 2) AS pct_minority_faculty FROM faculty f GROUP BY f.department;
SELECT Cause, SUM(Budget) FROM Programs GROUP BY Cause;
SELECT state, capacity FROM (SELECT state, capacity, RANK() OVER (ORDER BY capacity DESC) AS rank FROM US_Solar_Energy) AS ranked_states WHERE rank <= 2;
SELECT m.subscriber_id FROM mobile_subscribers m JOIN broadband_subscribers b ON m.subscriber_id = b.subscriber_id WHERE m.has_mobile = TRUE;
SELECT restaurant_id, name, revenue, RANK() OVER (PARTITION BY restaurant_id ORDER BY revenue DESC) as rank FROM menu_items WHERE rank <= 3;
SELECT vessel_name FROM port_of_new_york WHERE dock_month = 7 EXCEPT (SELECT vessel_name FROM port_of_boston WHERE dock_month >= 7 UNION SELECT vessel_name FROM port_of_philadelphia WHERE dock_month >= 7);
SELECT SUM(albums.revenue) FROM albums WHERE albums.release_year = 2020;
SELECT AVG(machines.energy_consumption) FROM machines INNER JOIN departments ON machines.id = departments.machine_id WHERE departments.name = 'textiles';
SELECT country, COUNT(*) as count FROM companies WHERE certification = 'Fair Trade' GROUP BY country ORDER BY count DESC;
SELECT p.name, SUM(cm.weight) FROM ports p JOIN cargo_movements cm ON p.id = cm.port_id WHERE MONTH(cm.date) > 6 GROUP BY p.name;
SELECT state, MAX(generation) FROM state_energy WHERE source = 'hydro' GROUP BY state;
SELECT COUNT(union_member_id) FROM Healthcare_Union WHERE salary < 50000;
SELECT month, COUNT(*) as total_observations FROM marine_species_observations WHERE region = 'Pacific' AND year = 2018 GROUP BY month;
SELECT quarter, SUM(hours) FROM Volunteers GROUP BY quarter;
SELECT sale_country, COUNT(DISTINCT product_name) as unique_products_count FROM beauty_products GROUP BY sale_country;
SELECT MAX(Budget) FROM TransportationProjects WHERE Year = 2021 AND State = 'New York' AND Name LIKE '%transportation%';
SELECT context.country, context.mineral, SUM(context.quantity) as total_quantity FROM context WHERE context.year = 2020 GROUP BY context.country, context.mineral;
SELECT DISTINCT practice FROM sustainable_sourcing WHERE location = 'California' AND quarter = 3 AND year = 2022;
SELECT d.name, SUM(donations.amount) FROM donations INNER JOIN donors ON donations.donor_id = donors.id WHERE donations.sector = 'disaster response' AND donations.donation_date = 2018 AND donors.country = 'Bangladesh' GROUP BY donations.donor_id ORDER BY SUM(donations.amount) DESC LIMIT 5;
SELECT AVG(sm.cost) FROM Sustainable_Materials sm JOIN Projects p ON sm.id = p.id WHERE p.location = 'California';
CREATE TABLE avg_natural_ingredients AS SELECT product_id, AVG(percentage) as avg_natural_ingredients FROM product_ingredients WHERE ingredient LIKE 'natural%' GROUP BY product_id;
SELECT COUNT(*) FROM Workouts INNER JOIN Members ON Workouts.MemberID = Members.MemberID WHERE Members.Age > 40 AND WorkoutDate BETWEEN '2021-01-01' AND '2021-01-31';
SELECT c.project_name, g.name FROM CarbonOffsets c INNER JOIN GreenBuildings g ON c.country = g.country WHERE c.country = 'Australia';
SELECT base_type, COUNT(*) as total_bases FROM military_bases GROUP BY base_type;
SELECT COUNT(*) FROM legal_aid_clinics WHERE area_type = 'Rural' AND focus_area = 'Immigration';
SELECT MIN(transaction_date) FROM transactions WHERE account_number = 999999999;
SELECT p.province_name, COUNT(i.initiative_id) as initiative_count FROM provinces p JOIN initiatives i ON p.province_id = i.province_id GROUP BY p.province_name ORDER BY initiative_count DESC;
SELECT country, garment_category, AVG(sustainability_score) FROM garment_info_2022 GROUP BY country, garment_category;
SELECT SUM(maintenance_cost) FROM Maintenance WHERE maintenance_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND equipment_type = 'Military';
SELECT v.type, AVG(fc.consumption) as avg_consumption FROM fuel_consumption fc JOIN vessels v ON fc.vessel_id = v.id GROUP BY v.type;
SELECT SUM(biomass) FROM shark_biomass WHERE location = 'Atlantic Ocean';
SELECT line_name, fare AS highest_fare FROM train_lines ORDER BY fare DESC LIMIT 1; SELECT line_name, fare AS lowest_fare FROM train_lines ORDER BY fare ASC LIMIT 1;
SELECT DISTINCT vessel_name FROM vessel_visits JOIN vessels ON vessel_visits.vessel_name = vessels.name WHERE company = 'ACME Shipping' AND port_name = 'Port of Los Angeles' AND visit_date >= DATE_SUB(CURRENT_DATE, INTERVAL 30 DAY);
SELECT r.Country, COUNT(r.FamilyID) as NumFamilies, SUM(f.NumberOfMembers) as TotalMembers FROM RefugeeSupport r JOIN RefugeeFamilies f ON r.FamilyID = f.FamilyID GROUP BY r.Country;
SELECT org_name, SUM(funding) FROM urban_agriculture_orgs WHERE city = 'TOK' GROUP BY org_name;
WITH artwork_to_delete AS (DELETE FROM exhibition_artworks WHERE exhibition_id = 1 AND artwork_id = 1) SELECT * FROM artwork_to_delete;
SELECT dish, carbohydrates FROM (SELECT dish, carbohydrates, ROW_NUMBER() OVER (PARTITION BY dish_date ORDER BY carbohydrates DESC) as rn FROM dishes WHERE restaurant_name LIKE 'New York%' AND cuisine = 'Chinese' AND dish_date >= '2022-06-01' AND dish_date < '2022-07-01') t WHERE rn <= 2;
SELECT f.name FROM farmers f JOIN crops_farmers cf ON f.id = cf.farmer_id JOIN crops c ON cf.crop_id = c.id WHERE c.name IN ('Corn', 'Soybean') GROUP BY f.name HAVING COUNT(DISTINCT c.name) = 1;
SELECT SUM(playtime) FROM playtime WHERE game = 'Space Pirates' AND playtime > 5 * 60;
SELECT team_name, (goals_home - goals_away) as diff FROM ucl_season;
SELECT District, FacilityType, SUM(Quantity) FROM Healthcare GROUP BY District, FacilityType;
SELECT Month.name, COUNT(Permit.id) AS permits_issued FROM Month INNER JOIN Permit ON Month.id = MONTH(Permit.issue_date) WHERE YEAR(Permit.issue_date) = 2020 GROUP BY Month.name;
SELECT COUNT(*) FROM loans WHERE loan_type = 'socially responsible' AND institution_id IN (SELECT institution_id FROM financial_institutions WHERE institution_name LIKE '%Europe%');
SELECT country, launch_result, COUNT(*) as num_launches FROM satellite_launches WHERE launch_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 5 YEAR) GROUP BY country, launch_result;
UPDATE waste_production SET plastic_waste_kg_per_capita = 120.5 WHERE country = 'Brazil' AND year = 2021;
SELECT COUNT(Policies.PolicyID) FROM Policies JOIN Underwriters ON Policies.UnderwriterID = Underwriters.UnderwriterID WHERE Underwriters.State = 'FL';
SELECT AVG(age) FROM artists;
SELECT energy_efficiency FROM ResidentialEfficiency WHERE city = 'Seattle' AND building_type = 'Residential';
DELETE FROM impact_investments WHERE region = 'Africa';
SELECT COUNT(*) FROM HeritageSites WHERE region = 'Americas' AND annual_visitors > 100000
SELECT MAX(daily_likes) FROM (SELECT DATE(created_at) AS date, COUNT(*) AS daily_likes FROM articles WHERE articles.category = 'media ethics' GROUP BY date) AS subquery;
SELECT a.name AS advertiser, SUM(ap.revenue) AS total_revenue, SUM(ap.impressions) AS total_impressions FROM ad_performance ap JOIN campaigns c ON ap.campaign_id = c.id JOIN advertisers a ON c.advertiser_id = a.id WHERE ap.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) GROUP BY a.name;
SELECT COUNT(*) FROM labor_disputes WHERE year = 2022 AND days_of_work_stoppage > 30 AND industry = 'manufacturing';
SELECT initiative_name, recycling_rate FROM circular_initiatives ORDER BY recycling_rate DESC LIMIT 1;
SELECT COUNT(DISTINCT Donors.DonorID) AS TotalDonors FROM Donors INNER JOIN Donations ON Donors.DonorID = Donations.DonorID WHERE Donors.Country LIKE 'Asia%' AND QUARTER(Donations.DonationDate) = 4 AND YEAR(Donations.DonationDate) = 2021;
SELECT SUM(BillingAmount) AS TotalBillingAmount FROM CaseBilling JOIN Cases ON CaseBilling.CaseID = Cases.CaseID WHERE DurationDays <= 30;
SELECT d.name, DATE(c.time) as call_date, COUNT(c.cid) as num_calls FROM districts d JOIN calls c ON d.did = c.did GROUP BY d.did, call_date;
SELECT e.name, COUNT(v.visitor_id) as visitor_count FROM Exhibitions e JOIN Visitors v ON e.exhibition_id = v.exhibition_id WHERE v.age >= 60 GROUP BY e.name ORDER BY visitor_count DESC LIMIT 1;
SELECT crop_type, SUM(hours) as total_hours FROM crop_sunlight WHERE date >= DATEADD(day, -7, GETDATE()) GROUP BY crop_type;
SELECT organization, COUNT(model_name) as model_count FROM AIModels WHERE application_type = 'Social Good' GROUP BY organization ORDER BY model_count DESC LIMIT 2; SELECT AVG(safety_rating) as avg_safety_rating FROM AIModels WHERE organization IN ('Microsoft', 'Google');
UPDATE public_transportation SET type = 'Light Rail' WHERE route_id LIKE '%LRT%';
SELECT num_workers FROM mining.company WHERE name = 'mining_company';
SELECT region, SUM(policy_cost) as total_policy_cost FROM policies GROUP BY region;
SELECT AVG(severity) FROM vulnerabilities WHERE department = 'Finance';
SELECT ocean, COUNT(DISTINCT species_name) AS species_count, SUM(population) AS total_population FROM marine_species GROUP BY ocean;
INSERT INTO farmers (id, name, region, training_year, training_topic) VALUES (3, 'Rakesh Kumar', 'Bihar', 2022, 'Precision Agriculture');
SELECT ManufacturerName, AVG(QuantityUsed) AS AvgQuantity FROM Materials INNER JOIN Manufacturers ON Materials.ManufacturerID = Manufacturers.ManufacturerID WHERE Region = 'Africa' GROUP BY ManufacturerName ORDER BY AvgQuantity;
SELECT MineName, JobType, Gender, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Employee WHERE MineID = Employee.MineID) as Percentage FROM Employee GROUP BY MineName, JobType, Gender;
SELECT AVG(TIME_TO_SEC(response_time)) FROM coastal.fire_responses WHERE QUARTER(call_date) = 1 AND YEAR(call_date) = 2022;
SELECT MAX(trial_cost) FROM clinical_trials WHERE approval_body = 'CFDA' AND approval_year = 2019;
SELECT (MAX(quantity) - MIN(quantity)) FROM world_production WHERE quantity IN (SELECT MAX(quantity), MIN(quantity) FROM world_production);
UPDATE users u INNER JOIN donors d ON u.id = d.user_id SET u.email = CONCAT(u.email, '_new') WHERE d.donation_date > DATE_SUB(CURDATE(), INTERVAL 1 MONTH);
SELECT patient_id, COUNT(*) as last_6_months, LAG(COUNT(*)) OVER (PARTITION BY patient_id ORDER BY visit_date) as previous_6_months FROM medical_visits WHERE rural_al = true GROUP BY patient_id, visit_date HAVING last_6_months > previous_6_months;
SELECT SUM(i.investment_amount) FROM investments i INNER JOIN investors j ON i.investor_id = j.investor_id WHERE j.investor_type = 'institutional' AND i.sector_id IN (SELECT sector_id FROM sectors WHERE sector_name = 'technology');
SELECT name FROM menu_items WHERE vegetarian = true AND vegan = true INTERSECT SELECT name FROM menu_items WHERE restaurant_id IN (SELECT id FROM restaurants);
SELECT type, SUM(budget) FROM rural_infrastructure GROUP BY type;
INSERT INTO waste_generation (country, year, waste_kg) VALUES ('Mexico', 2021, 3000000), ('Brazil', 2021, 4000000), ('Argentina', 2021, 5000000);
SELECT COUNT(*) FROM posts JOIN users ON posts.user_id = users.id WHERE users.country = 'US' AND MONTH(posts.post_date) = 7;
SELECT SUM(sales) as total_sales FROM AV_Sales WHERE vehicle_type LIKE 'Autonomous%' AND country = 'Germany' AND year = 2021;
SELECT SUM(doses) FROM vaccinations WHERE state = 'New York';
SELECT hotel_name, ota_revenue FROM hotels WHERE country IN ('France', 'Germany', 'Spain', 'Italy', 'UK') ORDER BY ota_revenue DESC LIMIT 5;
SELECT name FROM AutoShows WHERE country = 'Japan' AND year = 2023;
SELECT COUNT(DISTINCT FoodAssistance.person_name) AS total_people, AVG(FoodAssistance.person_age) AS avg_age FROM FoodAssistance WHERE FoodAssistance.country = 'Yemen';
SELECT L.Type, COUNT(C.CrimeId) FROM Locations L INNER JOIN Crimes C ON L.LocId = C.LocId GROUP BY L.Type;
SELECT COUNT(*) FROM vehicle_inventory WHERE is_electric = true;
SELECT MAX(price), MIN(price) FROM Retail WHERE item_type LIKE 'Women%' AND item_type LIKE '%Accessory';
SELECT SUM(project_hours) FROM projects WHERE grade_level = 10;
SELECT country_id, AVG(visitors) FROM Tourists t JOIN Destinations d ON t.country_id = d.country_id WHERE d.type = 'Natural' GROUP BY country_id;
SELECT is_domestic, COUNT(*) as count FROM vehicle_count WHERE mpg >= 30 GROUP BY is_domestic;
SELECT SUM(revenue) FROM fares WHERE route = (SELECT line FROM routes WHERE start_date <= '2012-01-01' AND line = 'Green' LIMIT 1);
SELECT COUNT(*) FILTER (WHERE worker_ethnicity = 'Hispanic or Latino') * 100.0 / COUNT(*) as pct_hispanic_workers, s.state_name FROM CommunityHealthWorkers chw JOIN States s ON chw.state_id = s.state_id GROUP BY s.state_id;
SELECT v.name, v.email, v.phone, v.total_hours, v.last_project_date, COUNT(p.id) AS projects_worked_on FROM volunteers v INNER JOIN projects p ON v.id = p.volunteer_id WHERE v.total_hours > 0 AND v.last_project_date >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH) GROUP BY v.id ORDER BY v.total_hours DESC LIMIT 5;
SELECT students.name, COUNT(publications.id) FROM students JOIN publications ON students.id = publications.student_id WHERE students.department = 'Mathematics' AND publications.journal = 'Journal of Algebra' GROUP BY students.name;
SELECT COUNT(*) FROM restorative_justice_wa UNION ALL SELECT COUNT(*) FROM restorative_justice_or;
SELECT COUNT(*) FROM authors INNER JOIN articles ON authors.author_id = articles.author_id WHERE authors.native_language IN ('Cree', 'Navajo', 'Inuit') AND country IN ('Canada', 'United States');
SELECT tower_id, connected_devices FROM (SELECT tower_id, connected_devices, ROW_NUMBER() OVER (ORDER BY connected_devices DESC) AS rn FROM network_towers WHERE country = 'UK') subquery WHERE rn <= 5;
SELECT customer_id, SUM(transaction_amount) as total_transaction_amount FROM transactions WHERE transaction_date BETWEEN DATEADD(day, -90, GETDATE()) AND GETDATE() GROUP BY customer_id;
SELECT AVG(budget) FROM agri_innovation_africa WHERE location = 'Africa' AND year = 2022;
SELECT COUNT(*) FROM Economic_Diversification_Argentina WHERE country = 'Argentina' AND (year = 2016 OR year = 2017);
SELECT SUM(quantity) FROM sourcing WHERE country IN ('Brazil', 'Argentina');
SELECT AVG(homeruns) FROM baseball WHERE league = 'AL';
SELECT authors.name FROM authors JOIN (SELECT author_id, COUNT(*) as article_count FROM authors_articles GROUP BY author_id ORDER BY article_count ASC LIMIT 1) as article_counts ON authors.id = article_counts.author_id;
SELECT AVG(depth) FROM species WHERE habitat = 'Open Ocean';
SELECT MAX(CountWins) FROM (SELECT PlayerID, COUNT(GameID) AS CountWins FROM Wins INNER JOIN Games ON Wins.GameID = Games.GameID WHERE Games.Multiplayer = 1 GROUP BY PlayerID) AS Subquery;
SELECT COUNT(*) FROM accounts WHERE balance > 10000;
SELECT payment_method, AVG(amount) as avg_donation_amount FROM donations GROUP BY payment_method;
SELECT SUM(quantity) FROM imports WHERE product LIKE '%plant-based%' AND country NOT IN ('United States', 'Mexico');
SELECT publication_year, num_papers, (num_papers / SUM(num_papers) OVER (PARTITION BY region)) * 100.0 AS pct_per_year FROM ethical_ai_research_mena WHERE region = 'MENA';
SELECT warehouse_id FROM inventory ORDER BY total_quantity DESC LIMIT 1;
INSERT INTO military_sales_3 (id, region, year, value) VALUES (1, 'South America', 2021, 500000);
SELECT MAX(capacity) as max_landfill_capacity FROM landfill_capacity WHERE year = 2022 AND unit = 'MW';
INSERT INTO products (product_id, name, supplier_id, quantity_sold, price) VALUES (1, 'Organic T-Shirt', 1, 100, 20.5);
SELECT location, SUM(budget) AS total_budget FROM language_preservation GROUP BY location ORDER BY total_budget DESC;
SELECT artist_name, COUNT(*) as artwork_count FROM Artworks WHERE period = 'Cubism' GROUP BY artist_name;
DELETE FROM water_conservation WHERE state = 'Rajasthan' AND year = 2017;
DELETE FROM crime_incidents WHERE reported_date < '2019-01-01' AND district_id = 1;
SELECT SUM(IF(union_member = TRUE, 1, 0)) FROM retail; SELECT SUM(IF(union_member = TRUE, 1, 0)) FROM hospitality; SELECT SUM(result) FROM (SELECT SUM(IF(union_member = TRUE, 1, 0)) AS result FROM retail) AS retail_result CROSS JOIN (SELECT SUM(IF(union_member = TRUE, 1, 0)) AS result FROM hospitality) AS hospitality_result;
SELECT AVG(rating) FROM energy_efficiency WHERE country IN ('United States', 'Canada');
SELECT Member.MembershipType, SUM(Workout.Duration) FROM Workout INNER JOIN Member ON Workout.MemberID = Member.MemberID WHERE Member.Age BETWEEN 30 AND 40 AND Workout.Activity = 'meditation' GROUP BY Member.MembershipType;
SELECT COUNT(*) FROM timber_production WHERE year = 2022;
SELECT drug_name FROM drug_sales WHERE sales > (SELECT AVG(sales) FROM drug_sales WHERE approval_year = 'Year2');
INSERT INTO Artists (id, name, community) VALUES (1, 'Jane Doe', 'Underrepresented Community'), (2, 'Jim Smith', 'Underrepresented Community');
SELECT w.WorkoutType, SUM(w.Duration) as TotalDuration FROM Members m JOIN Workouts w ON m.Id = w.MemberId WHERE m.Nationality = 'UK' GROUP BY w.WorkoutType;
SELECT CountryName FROM Rigs r JOIN Countries c ON r.Location = c.CountryName WHERE Status = 'Active' GROUP BY CountryName ORDER BY COUNT(*) DESC LIMIT 1;
SELECT region, AVG(safety_score) FROM chemical_plants GROUP BY region;
SELECT SUM(population) FROM animals WHERE species LIKE '%Bird' AND habitat = 'Savannah';
SELECT name, AVG(sale_price) AS avg_sale_price FROM Strains GROUP BY name;
SELECT DAppName, MIN(Transactions) as MinTransactions, MAX(Transactions) as MaxTransactions FROM Transactions GROUP BY DAppName ORDER BY MinTransactions, MaxTransactions;
SELECT DISTINCT name FROM Suppliers WHERE is_organic = true AND name = 'Down to Earth';
SELECT DonorOrgs.org_name, SUM(MedicalSupplies.quantity) AS total_supplies FROM MedicalSupplies JOIN (SELECT DISTINCT donor_org AS org_name FROM MedicalSupplies WHERE donor_org IN ('UNICEF', 'WHO', 'IFRC') AND country = 'Afghanistan') AS DonorOrgs ON MedicalSupplies.donor_org = DonorOrgs.org_name GROUP BY DonorOrgs.org_name;
SELECT COUNT(*) / (SELECT COUNT(*) FROM startups WHERE founding_team LIKE '%, BIPOC%') AS success_rate FROM startups WHERE exit_status IS NOT NULL AND founding_team LIKE '%, BIPOC%';
SELECT name, MAX(salary) FROM employees WHERE department = 'production';
SELECT Date, MIN(Revenue) FROM Paleteria WHERE Date BETWEEN '2021-01-01' AND '2021-01-04' GROUP BY Date;
SELECT c.cause_name, MAX(dam.donation_amount) FROM philanthropy.causes c JOIN philanthropy.donation_amount_by_cause dam ON c.cause_id = dam.cause_id GROUP BY c.cause_name;
INSERT INTO TV_Shows (title, production_budget, release_year, country) VALUES ('Squid Game', 21000000, 2021, 'South Korea');
SELECT SUM(age) FROM Visitors v JOIN Exhibitions e ON v.exhibition_id = e.exhibition_id WHERE e.country = 'Canada';
SELECT asset, AVG(tx_count) FROM (SELECT asset, COUNT(*) AS tx_count FROM transactions GROUP BY asset, tx_date) AS subquery GROUP BY asset ORDER BY AVG(tx_count) DESC;
SELECT sport, AVG(price) AS avg_price FROM ticket_prices WHERE price < 150 GROUP BY sport;
INSERT INTO products (id, name, category, fair_trade) VALUES (1, 'Fair Trade Coffee', 'coffee', true);
SELECT AVG(prize_money) AS avg_prize_money FROM esports.tournaments;
SELECT grade, AVG(mental_health_score) FROM students GROUP BY grade;
SELECT program_type, program_name, total_carbon_offset FROM Carbon_Offset_Programs;
CREATE TABLE FishFeeding (id INT, fish_id INT, feeding_time TIMESTAMP) AS SELECT 1 AS id, 1 AS fish_id, '2022-08-01 08:00:00' AS feeding_time UNION ALL SELECT 2, 2, '2022-08-01 09:00:00';
SELECT SUM(sales_revenue) FROM cosmetics_sales cs JOIN product_details pd ON cs.product_id = pd.product_id WHERE cs.country = 'United Kingdom' AND pd.is_cruelty_free = TRUE AND cs.product_type = 'makeup';
SELECT SUM(fare) FROM tram_fares WHERE region = 'west' AND fare_date BETWEEN '2022-01-02' AND '2022-01-08';
SELECT AVG(stars) FROM hotel_ratings WHERE country IN ('Japan', 'Malaysia', 'Thailand');
INSERT INTO threat_actors (id, name, country, type) VALUES (1, 'Lazarus Group', 'North Korea', 'state-sponsored'), (2, 'Carbanak Group', 'Russia', 'cybercrime'), (3, 'APT29', 'United Kingdom', 'state-sponsored');
SELECT o.OrgName, COUNT(v.VolunteerID) FROM Volunteers v INNER JOIN Organizations o ON v.OrgID = o.OrgID GROUP BY o.OrgName;
SELECT AVG(pH) FROM ocean_acidity WHERE location = 'Southern Ocean' AND year BETWEEN 2011 AND 2021;
DELETE FROM Vessel WHERE LastDockDate < '2020-01-01';
UPDATE MedicalData SET age = 57 WHERE astronaut_id = 3 AND medical_examination_date = '2021-05-24';
SELECT region, COUNT(stranding_id) FROM marine_mammal_strandings WHERE region = 'Arctic' GROUP BY region;
SELECT COUNT(DISTINCT u.id) AS user_count, COUNT(p.id) AS post_count FROM users u LEFT JOIN posts p ON u.id = p.user_id;
SELECT c.country, SUM(ci.quantity) FROM CountryProduction c INNER JOIN CountryItems ci ON c.id = ci.country GROUP BY c.country;
SELECT department, AVG(salary) FROM Employees WHERE department = 'Finance';
SELECT crop_type, MAX(soil_moisture) as max_soil_moisture FROM crop_soil_moisture_level WHERE date >= CURDATE() - INTERVAL 1 WEEK GROUP BY crop_type;
SELECT SUM(c.weight) as total_weight FROM Container c JOIN Shipment s ON c.container_id = s.container_id WHERE s.port_id = (SELECT port_id FROM Port WHERE port_name = 'Port of Shanghai') AND s.shipping_date >= '2022-01-01' AND s.shipping_date < '2022-02-01';
SELECT name FROM artists WHERE country IN ('Nigeria', 'South Africa');
DELETE FROM infection_rates WHERE state = 'Texas';
SELECT COUNT(*) as number_of_refugees FROM refugees WHERE organization = 'Red Cross' AND location = 'Asia' AND YEAR(assist_date) = 2017;
SELECT region, SUM(num_projects) FROM adaptation_projects WHERE region = 'africa' GROUP BY region;
SELECT team_id, AVG(num_games) FROM soccer_teams GROUP BY team_id;
INSERT INTO Movies (title, production_budget, release_year, production_country) VALUES ('Parasite 2', 25000000, 2023, 'South Korea');
SELECT AVG(avg_population_size) FROM marine_species;
SELECT COUNT(grant_received) FROM graduate_students WHERE community IN ('African American', 'Hispanic', 'Native American') AND grant_year = YEAR(CURRENT_DATE) - 1;
SELECT SUM(revenue) FROM movie_financials WHERE rating > 4.0;
SELECT SUM(revenue) FROM virtual_tours WHERE location = 'United Kingdom' AND date >= DATEADD(year, -1, GETDATE());
SELECT genre, year, SUM(revenue) as total_revenue, COUNT(DISTINCT game_id) as num_games FROM game_releases WHERE genre = 'Sports' GROUP BY genre, year;
SELECT AVG(age) FROM visitors INNER JOIN events ON visitors.event_id = events.event_id WHERE events.location = 'New Orleans' AND events.event_name = 'Dance Performance';
SELECT EventType, AttendeeCount, PERCENT_RANK() OVER(PARTITION BY EventType ORDER BY AttendeeCount) FROM Events WHERE City = 'New York';
SELECT AVG(launch_date) as avg_launch_date FROM satellites WHERE launch_country = 'China';
SELECT p1.Platform, AVG(p1.Age) as AvgAge FROM Players p1 WHERE p1.Platform IN ('VR', 'Console') GROUP BY p1.Platform;
SELECT MIN(SafetyRating) FROM Vehicles WHERE Manufacturer = 'Japan';
SELECT DepartmentName, FemalePercentage FROM DepartmentFemalePercentage WHERE FemalePercentage = (SELECT MAX(FemalePercentage) FROM DepartmentFemalePercentage);
SELECT MAX(budget) FROM support_programs_3 WHERE region = 'Europe';
SELECT AVG(Age) FROM Employees WHERE Department = 'Mining Operations';
SELECT state, unemployment_rate FROM veteran_employment WHERE snapshot_date = (SELECT MAX(snapshot_date) FROM veteran_employment);
SELECT artist_id, COUNT(DISTINCT city_id) as unique_cities FROM artist_performances GROUP BY artist_id HAVING COUNT(DISTINCT city_id) > 1;
SELECT MAX(violation_count) FROM RestaurantInspections;
SELECT COUNT(member_id) FROM gym_memberships WHERE MONTH(start_date) = 1;
SELECT policy_name, last_updated_date FROM policies WHERE last_updated_date >= DATE(NOW()) - INTERVAL 60 DAY AND last_updated_date < DATE(NOW()) - INTERVAL 30 DAY;
SELECT name FROM tech_access WHERE location = 'North America';
SELECT supplier_country, AVG(quantity) as avg_quantity FROM TextileShipments WHERE material = 'Eco-friendly Dye' GROUP BY supplier_country;
SELECT cargo_fleet.ship_name, SUM(CASE WHEN port_operations.operation_type = 'Load' THEN port_operations.container_count ELSE 0 END) AS loaded_containers, SUM(CASE WHEN port_operations.operation_type = 'Unload' THEN port_operations.container_count ELSE 0 END) AS unloaded_containers FROM cargo_fleet INNER JOIN port_operations ON cargo_fleet.id = port_operations.cargo_ship_id GROUP BY cargo_fleet.ship_name;
SELECT (SUM(CASE WHEN sale_date < '2020-04-01' THEN value ELSE 0 END) - SUM(CASE WHEN sale_date >= '2020-04-01' AND sale_date < '2020-07-01' THEN value ELSE 0 END)) / SUM(CASE WHEN sale_date < '2020-04-01' THEN value ELSE 0 END) AS percentage_change FROM military_sales WHERE country = 'Japan';
SELECT school_id, MAX(lifelong_learning_credits) as max_credits FROM students_lifelong_learning GROUP BY school_id;
SELECT * FROM autonomous_driving_research;
SELECT country, COUNT(*) FROM satellites_sunsync WHERE orbit = 'Sun-Synchronous Orbit' GROUP BY country ORDER BY COUNT(*) DESC;
SELECT A.PracticeArea, SUM(B.Amount) AS TotalBillingAmount FROM Attorneys A JOIN Billing B ON A.AttorneyID = B.AttorneyID GROUP BY A.PracticeArea;
SELECT consumption FROM sector_consumption WHERE sector IN ('commercial', 'industrial') AND year IN (2019, 2020)
SELECT StadiumName, AVG(TicketPrice) AS AvgTicketPrice, ROW_NUMBER() OVER (ORDER BY AVG(TicketPrice) DESC) AS Rank FROM Stadiums JOIN Games ON Stadiums.StadiumID = Games.StadiumID GROUP BY StadiumName;
DELETE FROM farmers WHERE region = 'Tuscany' AND training_year < 2018;
SELECT Category, COUNT(*) FROM Ingredients WHERE CrueltyFree = TRUE GROUP BY Category;
SELECT b.name FROM Bridges b JOIN Inspections i ON b.id = i.bridge_id WHERE YEAR(i.inspection_date) = 2022 GROUP BY b.name HAVING COUNT(i.id) > 2;
DROP TABLE space_debris;
SELECT country, COUNT(*) as num_factories FROM FairTradeFactories GROUP BY country ORDER BY num_factories DESC LIMIT 5;
SELECT MIN(g.year) FROM grant g JOIN department d ON g.department_id = d.id WHERE d.name = 'Department of Biology' AND d.college = 'College of Science';
DELETE FROM ticket_sales WHERE price < (SELECT AVG(price) FROM ticket_sales GROUP BY event_id);
SELECT SUM(co2_reduction) FROM co2_emissions WHERE country = 'Australia';
SELECT company_name FROM companies WHERE founder_1_gender IS NOT NULL AND founder_2_gender IS NOT NULL;
INSERT INTO oil_reservoirs (reservoir_id, reservoir_name, location, oil_capacity) VALUES (3, 'Thunder Horse', 'Gulf of Mexico', 1200), (4, 'Kashagan', 'Caspian Sea', 1100);
SELECT SUM(salary) FROM Employees WHERE department = 'Marketing';
SELECT SUM(amount) FROM climate_finance WHERE year BETWEEN 2015 AND 2020 AND community_type IN ('Indigenous Canadian', 'Indigenous Australian');
SELECT AVG(speed) FROM public.vehicles WHERE type = 'electric_car' AND city = 'Oslo';
SELECT Name, Year FROM CybersecurityIncidents WHERE Country = 'Australia' AND Year BETWEEN 2018 AND 2020;
UPDATE donations SET donation_amount = 800.00 WHERE donor_id = 3;
SELECT c.name, SUM(rc.num_refugees) FROM countries c JOIN refugee_camps rc ON c.id = rc.country_id WHERE c.continent = 'Oceania' GROUP BY rc.country_id;
SELECT Country, AVG(Score) as AvgScore FROM CountryScores GROUP BY Country;
SELECT cuisine_type, AVG(calories) AS avg_calories FROM dishes GROUP BY cuisine_type ORDER BY avg_calories DESC LIMIT 3;
SELECT state, COUNT(*) FROM teacher_pd GROUP BY state;
SELECT MAX(design_standard) FROM Engineering_Design;
UPDATE policies SET coverage_amount = 500000 WHERE policy_number = 111213;
SELECT COUNT(*) FROM financial_products WHERE product_type = 'Shariah-compliant';
SELECT SUM(revenue) FROM sales_data WHERE product_type LIKE 'Skincare%' AND fragrance_free = TRUE AND YEAR(sale_date) = 2021;
SELECT Country, AVG(Playtime) FROM Players JOIN GameSessions ON Players.PlayerID = GameSessions.PlayerID WHERE Players.GamingCommunity = 'VirtualRealityGaming' GROUP BY Country ORDER BY AVG(Playtime) DESC;
SELECT s.student_id, s.name FROM student_info s JOIN student_accommodations sa1 ON s.student_id = sa1.student_id JOIN student_accommodations sa2 ON s.student_id = sa2.student_id WHERE sa1.department <> sa2.department AND sa1.department IN ('Academic', 'Residential') GROUP BY s.student_id, s.name HAVING COUNT(DISTINCT sa1.department) = 2;
SELECT 'rural_areas' AS area, num_orgs FROM rural_areas WHERE num_orgs >= 5 UNION SELECT 'urban_areas' AS area, num_orgs FROM urban_areas WHERE num_orgs >= 5 UNION SELECT 'suburban_areas' AS area, num_orgs FROM suburban_areas WHERE num_orgs >= 5 UNION SELECT 'development_areas' AS area, num_orgs FROM development_areas WHERE num_orgs >= 5 UNION SELECT 'refugee_camps' AS area, num_orgs FROM refugee_camps WHERE num_orgs >= 5;
SELECT AVG(year_founded) FROM marine_conservation_orgs WHERE country = 'USA';
SELECT region, risk_level FROM RiskAssessments WHERE region = 'Middle East' AND assessment_date BETWEEN '2022-01-01' AND CURDATE() GROUP BY region, risk_level;
SELECT MAX(salary) FROM construction_workers WHERE state = 'New York';
SELECT (SUM(penalties_home) + SUM(penalties_away)) FROM rugby_matches;
SELECT VendorName, AVG(QuantitySold) OVER (PARTITION BY Location ORDER BY VendorName) AS AvgQuantitySoldByVendor FROM Vendor;
SELECT domain, AVG(performance_score) FROM ai_models GROUP BY domain;
SELECT i.First_Name, i.Last_Name FROM Instructors i JOIN Training_Programs tp ON i.Instructor_ID = tp.Instructor_ID WHERE tp.Program_Name = 'Python for Data Analysis';
SELECT MAX(carbon_sequestration) FROM forests WHERE region = 'Asia';
SELECT dish_name, SUM(quantity * price) as total_revenue FROM Sales JOIN Menu ON Sales.dish_name = Menu.dish_name WHERE branch_id IN (8, 9, 10) GROUP BY dish_name;
SELECT AVG(donation_amount) FROM (SELECT donation_amount, donor_id FROM donations WHERE YEAR(donation_date) = 2021 ORDER BY donation_amount DESC LIMIT 5) AS top_5_donors;
SELECT COUNT(*) FROM machines WHERE status = 'Operational';
SELECT AVG(cost) FROM equipment_repairs WHERE company = 'Dynasys' AND region = 'Asia-Pacific';
SELECT AVG(market_share) FROM Transportation_Market_Share WHERE city IN ('Tokyo', 'London') AND year = 2021;
SELECT COUNT(*) FROM wells WHERE state IN ('Texas', 'Louisiana') AND YEAR(date) = 2020;
WITH NoClaimPolicyholders AS (DELETE FROM Policyholders WHERE PolicyID NOT IN (SELECT PolicyID FROM Claims) RETURNING *) SELECT * FROM NoClaimPolicyholders;
SELECT TeamID, COUNT(*) as FansAttendedMoreThan5Games FROM FanDemographics WHERE GamesAttended > 5 GROUP BY TeamID;
SELECT SUM(CASE WHEN patient_age < 18 THEN 1 ELSE 0 END) AS child_visits, COUNT(dentists.dentist_id) / SUM(CASE WHEN patient_age < 18 THEN 1 ELSE 0 END) AS dentist_per_child FROM dental_visits INNER JOIN dentists ON dental_visits.location = dentists.location WHERE dental_visits.location LIKE 'rural% India';
SELECT art_form FROM Heritage_Festival WHERE event_name = 'Heritage Festival';
SELECT game_name FROM game_design WHERE vr_compatible = false;
DELETE FROM garment_sales WHERE garment_type IN ('t-shirt', 'jeans') AND country = 'Germany' AND sustainability_rating < 4;
SELECT SUM(food_aid_amount) FROM food_aid WHERE organization_id = 5;
SELECT vulnerability_type, AVG(resolution_time) as avg_resolution_time FROM incident_vulnerability_resolution WHERE incident_date >= DATEADD(day, -30, GETDATE()) GROUP BY vulnerability_type;
SELECT location, AVG(mental_health_score) as avg_score FROM students GROUP BY location;
SELECT MIN(heart_rate) FROM wearable_tech WHERE country = 'South Korea';
SELECT customer_id, region, energy_usage_prev_month, energy_usage_current_month, energy_usage_prev_month - energy_usage_current_month as savings FROM customer_data WHERE region = 'California' AND EXTRACT(MONTH FROM energy_usage_prev_month) = EXTRACT(MONTH FROM energy_usage_current_month)
DELETE FROM ai_safety WHERE safety_score = (SELECT MAX(safety_score) FROM ai_safety);
SELECT (COUNT(*) FILTER (WHERE gender = 'Male'))::float / COUNT(*) FROM patients_by_gender WHERE location = 'Rural Alaska';
SELECT COUNT(*) FROM treatment WHERE provider = 'Dr. Bob' AND date BETWEEN '2021-01-01' AND '2021-01-31';
SELECT ft.forest_type_name, AVG(f.age) AS avg_age, COUNT(f.tree_species_count) AS tree_species_count FROM forest_type ft INNER JOIN forest f ON ft.forest_type_id = f.forest_type_id INNER JOIN region r ON ft.region_id = r.region_id WHERE r.region_name = 'North America' GROUP BY ft.forest_type_name ORDER BY avg_age ASC;
SELECT SUM(visitors) FROM us_tourism WHERE sustainability_rating >= 4 AND year BETWEEN 2018 AND 2021;
SELECT Dispensary_Name, SUM(Total_Sales) as Total FROM Sales JOIN Dispensaries ON Sales.Dispensary_ID = Dispensaries.Dispensary_ID WHERE State = 'CA' AND YEAR(Sale_Date) = 2021 GROUP BY Dispensary_Name;
SELECT COUNT(DISTINCT donor_id) FROM large_donors;
SELECT project_value FROM md_projects WHERE quarter = 'Q2 2022' AND state = 'Maryland';
SELECT manufacturer, AVG(lifespan) FROM SatelliteLifespan WHERE manufacturer = 'Millennium Space Systems' GROUP BY manufacturer;
SELECT COUNT(*) FROM factories WHERE sector = 'Workforce Development' AND has_workforce_diversity_initiatives = TRUE AND workforce_size > 500;
SELECT COUNT(*) FROM renewable_energy_projects WHERE region = 'Latin America' AND investment > 10000000;
SELECT * FROM military_innovation WHERE start_date > '2015-12-31';
SELECT region, SUM(incidents) as total_incidents FROM incident_regions WHERE timestamp >= '2022-02-01' GROUP BY region;
SELECT product_id, SUM(incident_count) as total_incident_count FROM ProductSafety WHERE year = 2020 GROUP BY product_id;
SELECT COUNT(DISTINCT species) FROM wildlife;
SELECT name, union_affiliation FROM UnionMembers WHERE membership_date >= '2020-01-01' AND union_affiliation = 'Labor Union A';
SELECT MAX(WaterTemp) FROM AtlanticShrimpFarms WHERE Location LIKE '%Atlantic Ocean%';
SELECT R.Region, COUNT(*) as RestaurantCount FROM Restaurants R WHERE R.SustainabilityScore > 80 GROUP BY R.Region;
SELECT tourists - (SELECT tourists FROM tourism_stats WHERE country = 'Australia' AND year = 2021) FROM tourism_stats WHERE country = 'Canada' AND year = 2021;
SELECT MIN(maintenance_cost) FROM ground_vehicles WHERE units_produced > 500;
SELECT DISTINCT journal FROM publications p JOIN students s ON p.student_id = s.student_id WHERE program = 'Graduate' AND country != 'USA' AND year BETWEEN YEAR(CURRENT_DATE) - 2 AND YEAR(CURRENT_DATE);
SELECT * FROM v_highest_budget_initiatives ORDER BY budget DESC LIMIT 3;
SELECT AVG(water_consumption) FROM households WHERE city = 'Oakland';
SELECT city, SUM(waste_gram) FROM city_waste_generation WHERE year = 2020 GROUP BY city;
SELECT AVG(duration) FROM VirtualTours WHERE location = 'Tokyo' AND year = 2022 AND month BETWEEN 1 AND 12 HAVING AVG(duration) >= 45;
SELECT program_name, total_participants, avg_training_hours_per_participant FROM (SELECT program_name, total_participants, avg_training_hours_per_participant, ROW_NUMBER() OVER (ORDER BY total_participants DESC) as rank FROM workforce_development_programs) as subquery WHERE rank <= 5;
SELECT SUM(funding) FROM startups WHERE location = 'South America' AND funding >= 0 AND date >= '2018-01-01';
SELECT COUNT(*) FROM Dishes WHERE vegan = TRUE AND low_carb = TRUE;
DELETE FROM ships WHERE year_decommissioned = 2010;
SELECT COUNT(DISTINCT species) FROM forests WHERE type = 'Boreal';
SELECT DISTINCT Publications.Topic FROM Publications;
SELECT country, network_type, AVG(data_usage) as avg_data_usage FROM customers WHERE usage_date >= DATEADD(month, -6, GETDATE()) GROUP BY country, network_type;
SELECT plant_name, SUM(waste_amount) FROM waste_generation GROUP BY plant_name;
SELECT COUNT(DISTINCT ip_address) as unique_botnet_ips FROM traffic WHERE network = 'Botnet';
SELECT AVG(design_life) FROM water_treatment_plants WHERE location = 'Texas';
SELECT SupplierName, Country, SustainabilityRating, RANK() OVER (ORDER BY SustainabilityRating DESC) as SustainabilityRank FROM Suppliers WHERE Country = 'South Africa';
SELECT c.name FROM company c LEFT JOIN investment_round ir ON c.id = ir.company_id WHERE ir.company_id IS NULL AND c.industry = 'Sustainability';
SELECT * FROM Infrastructure WHERE state = 'New York' AND type = 'Airport';
SELECT AVG(cost) FROM military_sales WHERE region = 'Middle East' AND quarter = 'Q2' AND year = 2022;
SELECT AVG(songs.year) FROM songs WHERE songs.genre = 'Folk';
SELECT SUM(length) FROM Tunnels;
SELECT AVG(environmental_impact_score) FROM environmental_impact WHERE production_country IN ('Nigeria', 'Egypt', 'South Africa')
SELECT patient_id, treatment_type, AVG(cost) as avg_cost, STDDEV(cost) as std_dev_cost FROM treatments GROUP BY patient_id, treatment_type;
SELECT country, SUM(clicks) AS total_clicks FROM ads a JOIN (SELECT ad_id, COUNT(*) AS clicks FROM ad_clicks WHERE DATE(click_date) > DATE_SUB(CURRENT_DATE, INTERVAL 1 WEEK) GROUP BY ad_id) AS clicks_per_ad ON a.id = clicks_per_ad.ad_id GROUP BY country ORDER BY total_clicks DESC LIMIT 5;
SELECT AVG(budget) FROM defense_diplomacy WHERE organizer = 'NATO' AND event_year BETWEEN 2015 AND 2020;
SELECT COUNT(*) FROM cases WHERE attorney_name = 'Alice Smith';
DELETE FROM training WHERE id = 1001;
DELETE FROM animals WHERE species = 'Tiger' AND population < 50;
SELECT recipient_name FROM climate_finance_2019 WHERE funding_year = 2019 UNION SELECT recipient_name FROM climate_finance_2022 WHERE funding_year = 2022;
SELECT continent, AVG(communication_score) FROM climate_projects WHERE project_type = 'adaptation' GROUP BY continent;
SELECT artist_name, SUM(streams) as total_streams FROM Artists JOIN Streams ON Artists.artist_id = Streams.artist_id GROUP BY artist_name ORDER BY total_streams DESC;
SELECT COUNT(*) FROM WildlifeHabitats WHERE name = 'Boreal Forest' AND region = 'Russia';
SELECT vt.vehicle_type, COUNT(mr.request_id) as num_requests FROM vehicle_types vt INNER JOIN maintenance_requests mr ON vt.vehicle_type_id = mr.vehicle_type_id GROUP BY vt.vehicle_type;
SELECT B.BoroughName, MIN(P.SalePrice) as MinSalePrice FROM Boroughs B JOIN Properties P ON B.BoroughID = P.BoroughID GROUP BY B.BoroughName;
DELETE FROM HealthEquityMetrics WHERE Score < 80;
DELETE t1 FROM therapy_sessions_2023 t1 JOIN (SELECT patient_id, MIN(session_date) AS first_session FROM therapy_sessions_2023 WHERE patient_id = 5 AND YEAR(session_date) = 2023 GROUP BY patient_id) t2 ON t1.patient_id = t2.patient_id AND t1.session_date < t2.first_session;
SELECT GameName, COUNT(*) as PlayerCount FROM PlayerStatus JOIN Players ON PlayerStatus.PlayerID = Players.PlayerID WHERE PlayerStatus = 'Expert' AND Continents.Continent = 'Europe' GROUP BY GameName ORDER BY COUNT(*) DESC LIMIT 1;
SELECT mine_name, SUM(quantity_coal_mined) as total_coal_mined FROM mine GROUP BY mine_name ORDER BY total_coal_mined DESC;
SELECT Region, AVG(HealthEquityMetricScore) as AverageScore, COUNT(*) as TotalHospitals, AVG(CASE WHEN HealthEquityMetricScore >= 80 THEN 1.0 ELSE 0.0 END) as MeetingHospitals FROM Hospitals GROUP BY Region;
SELECT name, location, sustainability_score FROM suppliers WHERE sustainability_score < 8;
INSERT INTO consumer_preferences (consumer_id, country, favorite_product) VALUES (3, 'United Kingdom', 'Anti-Aging Serum');
SELECT algorithm_id, AVG(explainability_score) as avg_explainability_score FROM explainability_scores GROUP BY algorithm_id ORDER BY avg_explainability_score DESC;
SELECT item_name FROM menu_items WHERE category = 'side_dishes';
SELECT visitor_country, COUNT(*) as num_visitors FROM tourism_data WHERE visit_year = 2019 AND destination_country = 'Costa Rica' GROUP BY visitor_country ORDER BY num_visitors DESC LIMIT 3;
SELECT Genre, Country, SUM(PlayerCount) as TotalPlayers FROM PlayerGenreCount WHERE Genre = 'Strategy' AND Country = 'Asia' GROUP BY Genre;
SELECT COUNT(*) FROM community_development WHERE province = 'Eastern Cape' AND organization_type = 'NGO' AND completion_date IS NOT NULL
SELECT SUM(budget) FROM Inclusion WHERE location LIKE '%Midwest%';
SELECT country, COUNT(*) FROM heritage_sites GROUP BY country HAVING country IN ('Spain', 'Italy');
SELECT COUNT(*) FROM SpaceMissions WHERE Commander IN ('Jane Smith', 'Emily Johnson', 'Sophia Garcia');
SELECT MIN(duration) FROM flight_safety WHERE incidents = TRUE;
SELECT MAX(billing_amount) FROM cases JOIN attorneys ON cases.attorney_id = attorneys.id WHERE attorneys.region = 'Miami';
SELECT name FROM satellites WHERE launch_date > '2015-01-01';
SELECT COUNT(*) FROM Users WHERE unsubscription_date IS NOT NULL AND country = 'Japan';
CREATE VIEW garments AS
SELECT incident_type, incident_count FROM security_incidents WHERE incident_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) GROUP BY incident_type ORDER BY incident_count DESC LIMIT 3;
SELECT SUM(waste_amount) FROM WasteGeneration GROUP BY region ORDER BY SUM(waste_amount) DESC LIMIT 3;
SELECT Manufacturer, SUM(UnitsSold) as TotalUnitsSold FROM VRSales GROUP BY Manufacturer;
SELECT hotels.hotel_name, ai_adoption.adoption_level FROM hotels INNER JOIN ai_adoption ON hotels.hotel_id = ai_adoption.hotel_id WHERE hotels.country = 'Europe' AND ai_adoption.adoption_level = (SELECT MAX(adoption_level) FROM ai_adoption WHERE hotel_id = ai_adoption.hotel_id) ORDER BY ai_adoption.adoption_level DESC;
SELECT region_code, SUM(visitor_count) OVER (PARTITION BY region_code) FROM visit_summary WHERE year = 2020;
DELETE FROM products WHERE manufacturing_date < DATE_SUB(CURRENT_DATE(), INTERVAL 5 YEAR);
SELECT Name FROM Suppliers WHERE Country = 'USA' AND CircularSupplyChainInitiatives = true;
SELECT initiative, SUM(waste_generation) FROM circular_economy WHERE year = 2020 GROUP BY initiative;
SELECT MIN(salary) as min_salary FROM employees WHERE ethnicity = 'Hispanic or Latino';
SELECT MPA.mpa_name, MPA.year_established FROM MPA WHERE MPA.region = 'Mediterranean Sea';
DELETE FROM intelligence_operations WHERE operation_id = 1;
SELECT EXTRACT(MONTH FROM u.join_date) as month, COUNT(*) as users_joined FROM Users u WHERE EXTRACT(YEAR FROM u.join_date) = 2021 GROUP BY month;
SELECT context.company, SUM(context.impact_assessment_score) as total_impact_score FROM CompanyEnvironmentalImpact context WHERE context.country = 'South Africa' AND context.year BETWEEN 2018 AND 2020 GROUP BY context.company ORDER BY total_impact_score DESC LIMIT 3;
SELECT products.product_name FROM products INNER JOIN recalls ON products.product_id = recalls.product_id WHERE is_cruelty_free = TRUE AND recalls.recall_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);
SELECT Species_Name, Survival_Rate, SUM(Fish_Weight) OVER (PARTITION BY Species_Name) AS Total_Fish_Weight FROM Species_Survival;
INSERT INTO disability_policies (id, policy_name, description, effective_date) VALUES (3, 'Policy 3', 'Description 3', '2022-03-01'), (4, 'Policy 4', 'Description 4', '2022-04-01');
SELECT AVG(quantity) FROM sales WHERE location = 'Midwest';
SELECT AVG(num_visits/num_events) FROM CommunityEventDetailsSydney;
SELECT project, year, budget FROM infrastructure WHERE region = 'Asia' ORDER BY budget DESC LIMIT 2;
SELECT AVG(patients.age) FROM patients INNER JOIN treatments ON patients.id = treatments.patient_id WHERE treatments.condition = 'Depression';
SELECT AVG(dissolved_oxygen) FROM freshwater_aquaculture WHERE region = 'Great Lakes';
SELECT MAX(ESG_score), MIN(ESG_score) FROM companies WHERE country = 'UK';
SELECT COUNT(DISTINCT founder_gender, founder_minority, founder_immigrant) FROM companies WHERE industry = 'Edtech' AND founding_date BETWEEN '2010-01-01' AND '2015-12-31';
SELECT na.state, pe.program_type, COUNT(pe.id) as program_count FROM north_american_conservation_areas na JOIN community_education_programs pe ON na.id = pe.conservation_area_id GROUP BY na.state, pe.program_type;
SELECT COUNT(*) FROM Inventory WHERE is_gluten_free = TRUE AND price > 5;
SELECT COUNT(*) FROM SpacecraftManufacturing WHERE company = 'Aerospace Inc.' AND year = 2020;
INSERT INTO sustainable_sourcing (item_id, sourcing_date, sustainability_practice) VALUES (456, '2022-05-01', 'Organic Ingredients');
SELECT COUNT(*) FROM WaterConservationInitiatives WHERE State = 'Texas'
SELECT player, MAX(homeruns) FROM baseball_hits;
DELETE FROM startups WHERE name = 'Fintech Startup 2';
SELECT SUM(revenue) FROM events WHERE genre = 'Classical Music' AND event_date LIKE '2020-%';
WITH cte AS (DELETE FROM carbon_price WHERE year = 2020 AND price < 15) DELETE FROM cte;
SELECT COUNT(*) FROM diagnoses WHERE country = 'Germany' AND diagnose_year = 2017;
SELECT customer_name, SUM(total_spending) FROM recycled_textile_sales GROUP BY customer_name ORDER BY SUM(total_spending) DESC LIMIT 3;
INSERT INTO routes (id, distance, start_location, end_location) VALUES (4, 850, 'Sydney', 'Melbourne');
SELECT SUM(size) FROM properties WHERE city = 'San_Francisco';
SELECT site_name FROM site_status WHERE closed_date IS NOT NULL AND closed_date >= '2010-01-01';
SELECT species FROM fish_species fs JOIN farm_species fss ON fs.id = fss.species_id WHERE fss.farm_id IN (SELECT id FROM farms WHERE country = 'Norway' AND sustainable = TRUE);
SELECT * FROM bioprocess_eng WHERE yield > 0.9;
SELECT AVG(age) FROM construction_workers WHERE state = 'Texas';
SELECT SUM(price * daily_sales) AS total_revenue FROM gluten_free_menu WHERE region = 'Mountain';
SELECT SUM(Time.Revenue) as TotalRevenue FROM Time INNER JOIN Song ON Time.SongID = Song.SongID WHERE Song.GenreID = (SELECT GenreID FROM Genre WHERE Name='Jazz') AND Time.Year=2020;
SELECT year, policy_type, AVG(price_usd_per_ton) as avg_price_usd_per_ton FROM canada_carbon_pricing WHERE year = 2020 GROUP BY year, policy_type;
SELECT ArtistID FROM ArtistHistory WHERE Genre = 'Rock' AND EndYear IS NOT NULL INTERSECT SELECT ArtistID FROM ArtistHistory WHERE Genre <> 'Rock';
SELECT mr.role, AVG(hd.salary) as avg_salary FROM hr_data hd JOIN mine_roles mr ON hd.role_id = mr.role_id GROUP BY mr.role;
SELECT SUM(length) FROM atlantic_ocean_vessels WHERE length > 100 AND is_commercial = TRUE;
SELECT dish_name, AVG(rating) as avg_rating, SUM(review_count) as total_reviews FROM dishes WHERE review_count >= 10 GROUP BY dish_name;
SELECT Dispensaries.name, SUM(Sales.revenue) as total_revenue FROM Dispensaries INNER JOIN Sales ON Dispensaries.id = Sales.dispensary_id WHERE strain = 'OG Kush' AND state = 'California' GROUP BY Dispensaries.name ORDER BY total_revenue DESC LIMIT 1;
SELECT MIN(avg_depth) FROM marine_protected_areas WHERE region = 'Pacific' AND has_coral_reef = true;
SELECT sector, SUM(amount) FROM waste_generation WHERE year = 2020 GROUP BY sector;
SELECT players.player_name FROM players ORDER BY DATEDIFF(CURDATE(), players.birth_date) DESC LIMIT 1;
SELECT region, fuel_type, SUM(quantity_sold) as total_autonomous_buses_sold FROM sales_data WHERE region = 'Asia-Pacific' AND vehicle_type = 'Bus' AND fuel_type = 'Autonomous' AND year = 2022 GROUP BY region, fuel_type;
SELECT AVG(total_square_footage) FROM sustainable_urbanism WHERE low_income_area = true;
SELECT max_transfer_tokens FROM transaction_limits WHERE smart_contract_id = (SELECT id FROM smart_contracts WHERE name = 'BSC-20');
SELECT ((poverty_rate_2020 - poverty_rate_2018) * 100.0 / poverty_rate_2018) AS percentage_change FROM (SELECT (SELECT poverty_rate FROM poverty_rates p2 WHERE p1.region = p2.region AND p2.year = 2018) AS poverty_rate_2018, (SELECT poverty_rate FROM poverty_rates p3 WHERE p1.region = p3.region AND p3.year = 2020) AS poverty_rate_2020 FROM poverty_rates p1 WHERE p1.region = 'Central America') AS subquery;
SELECT MIN(data_usage) FROM mobile_subscribers WHERE state = 'California' AND subscription_type = 'postpaid';
SELECT MIN(energy_production_cost) FROM Solar_Power_Plants WHERE location = 'Japan';
DELETE FROM sharks WHERE species = 'Great White';
SELECT product_name, category, quantity FROM transparent_products ORDER BY quantity DESC;
INSERT INTO customer_size_diversity (id, customer_id, size, height, weight) VALUES (1, 1001, 'XS', 152, 45), (2, 1002, 'L', 178, 75), (3, 1003, 'XXL', 190, 110);
INSERT INTO cybersecurity_strategy (strategy_id, strategy_name, strategy_description) VALUES (987, 'Intrusion Detection', 'Detailed description of intrusion detection strategy');
DELETE FROM waste_generation WHERE generation_date > '2020-01-01';
SELECT DISTINCT ch.animal_name FROM critical_habitats ch LEFT JOIN animal_population ap ON ch.animal_name = ap.animal_name WHERE ap.animal_name IS NULL;
CREATE TABLE drought_impact (id INT PRIMARY KEY, region VARCHAR(50), drought_duration INT);
SELECT industry, AVG(amount) FROM company JOIN funding ON company.id = funding.company_id WHERE founding_year = 2018 GROUP BY industry;
SELECT gender, type, COUNT(*) as case_count, ROW_NUMBER() OVER(PARTITION BY gender ORDER BY COUNT(*) DESC) as sequence FROM victims JOIN cases ON victims.case_id = cases.id GROUP BY gender, type;
SELECT state, MIN(hours_worked) FROM labor_hours GROUP BY state;
SELECT SUM(Investment) FROM ClimateChangeCommunication WHERE Region = 'Latin America';
SELECT artist, revenue FROM artist_revenue ORDER BY revenue DESC LIMIT 1;
SELECT COUNT(id) FROM articles WHERE title LIKE '%diversity%';
SELECT DISTINCT f.FactoryName FROM Factories f JOIN Countries c ON f.CountryID = c.CountryID WHERE c.Continent = 'Africa' AND f.Certification = 'Fair Trade' AND c.ChildLabor = FALSE;
SELECT implemented_social_good, funding_type, SUM(amount) FROM funding INNER JOIN organizations ON funding.org_id = organizations.org_id GROUP BY implemented_social_good, funding_type;
SELECT SUM(oi.quantity * m.price) as revenue FROM orders o JOIN order_items oi ON o.order_id = oi.order_id JOIN menu m ON oi.item_id = m.item_id WHERE o.customer_id = 101 AND o.order_date BETWEEN '2022-03-01' AND '2022-03-31';
SELECT AVG(temperature) Avg_Temperature, EXTRACT(MONTH FROM date) Month FROM Weather WHERE YEAR(date) = 2021 GROUP BY EXTRACT(MONTH FROM date);
SELECT AVG(V.AvgSpeed) FROM Vessels V INNER JOIN Docking D ON V.VesselID = D.VesselID WHERE D.Port = 'Oakland' AND DockingTime BETWEEN DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 1 MONTH) AND CURRENT_TIMESTAMP;
SELECT SUM(total_funding) FROM organizations WHERE category = 'theater';
SELECT * FROM reporters WHERE country IN ('Nigeria', 'Ghana', 'Kenya', 'Egypt', 'South Africa');
SELECT p.name, SUM(ft.amount) as total_financial_transactions FROM programs p JOIN financial_transactions ft ON p.id = ft.program_id GROUP BY p.id;
SELECT MAX(absences) FROM students WHERE program = 'mental health' AND last_visit >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);
UPDATE teachers SET professional_development = CASE WHEN years_of_experience >= 10 THEN 'Intermediate' WHEN years_of_experience >= 15 THEN 'Advanced' ELSE 'Beginner' END;
SELECT SUM(hours) FROM project WHERE (state = 'California' OR state = 'NYC') AND type = 'Sustainable';
SELECT AVG(budget) FROM project_budget JOIN climate_project ON project_budget.project_id = climate_project.project_id WHERE climate_project.project_type = 'Adaptation' AND climate_project.project_region = 'South America';
SELECT smart_contract_name, SUM(transaction_amount) as total_transaction_amount, DATE_TRUNC('day', transaction_time) as day  FROM smart_contracts GROUP BY smart_contract_name, day ORDER BY total_transaction_amount DESC;
DELETE FROM veterans_employment WHERE ssn = '987-65-4321';
SELECT diagnosis, SUM(incidents) FROM mental_health_parity GROUP BY diagnosis;
SELECT port_name, MAX(cargo_weight) FROM port_cargo_weight GROUP BY port_name;
SELECT name, safety_issue FROM products WHERE launch_year = 2021 AND safety_issue IS NOT NULL;
SELECT dishes.name, ingredients.name FROM dishes INNER JOIN dish_ingredients ON dishes.id = dish_ingredients.dish_id INNER JOIN ingredients ON dish_ingredients.ingredient_id = ingredients.id WHERE dishes.is_vegetarian = false;
SELECT st.trend, c.size, MAX(c.percentage) AS popularity FROM SustainableTrends st CROSS JOIN CustomerSizes c WHERE c.country = 'Australia' GROUP BY st.trend, c.size;
UPDATE military_technology SET technology_type = '5th Generation Fighter Jet', development_budget = development_budget * 1.10 WHERE id = 1;
SELECT SUM(donation_amount) FROM donors WHERE region = 'Africa' AND is_recurring_donor = true AND YEAR(donation_date) = 2021;
SELECT v.ID, v.Name, v.Type FROM Vessels v LEFT JOIN SafetyIncidents si ON v.ID = si.VesselID WHERE si.ID IS NULL;
SELECT d.DepartmentName, SUM(r.Amount) AS TotalGrants FROM Departments d JOIN ResearchGrants r ON d.DepartmentID = r.DepartmentID GROUP BY d.DepartmentName ORDER BY TotalGrants DESC LIMIT 3;
SELECT DonorName, SUM(TotalDonations) as TotalDonated FROM Donors GROUP BY DonorName ORDER BY TotalDonated DESC;
SELECT WarehouseID, AVG(DeliveryTime) OVER (PARTITION BY WarehouseID) AS AvgDeliveryTime FROM Shipments WHERE Country = 'South Korea';
SELECT SUM(amount) FROM donations WHERE location = 'Bay Area' AND YEAR(donation_date) = YEAR(CURRENT_DATE()) - 1 AND organization IN ('Greenpeace', 'Doctors Without Borders', 'Red Cross');
SELECT artist FROM exhibitions GROUP BY artist HAVING COUNT(DISTINCT museum) > 1;
SELECT species FROM deep_sea_discoveries ORDER BY discovered_depth DESC LIMIT 1;
SELECT sp.sport_name, t.team_name, tp.avg_ticket_price FROM ticket_prices tp JOIN teams t ON tp.team_id = t.team_id JOIN sports sp ON t.sport_id = sp.sport_id;
SELECT city, SUM(amount) as total_revenue FROM sales_data WHERE city IN ('London', 'Paris') AND amount > 500 GROUP BY city;
SELECT visitor_country, SUM(total_expenditure) FROM tourist_expenditures WHERE visitor_country = 'Argentina' GROUP BY visitor_country;
SELECT u.advocacy, SUM(u.cb_agreements), COUNT(u.union_id) FROM unions u WHERE u.advocacy = 'workplace safety' GROUP BY u.advocacy;
SELECT SUM(sales.revenue) FROM sales INNER JOIN products ON sales.product_id = products.product_id WHERE products.is_circular = true AND products.country = 'Developed';
SELECT SUM(sales.price) FROM sales JOIN garments ON sales.garment_id = garments.id WHERE garments.sustainable = TRUE AND sales.country = 'United States';
SELECT MAX(capacity) FROM RenewableEnergyProjects WHERE country = 'Spain';
SELECT country, AVG(waste_amount/population) as avg_waste_per_capita FROM waste_generation GROUP BY country;
SELECT GameID, SUM(PurchaseAmount) as TotalRevenue FROM InGamePurchases GROUP BY GameID;
SELECT site_name, safety_score, MIN(safety_score) OVER (PARTITION BY country) as min_safety_score FROM indian_sites WHERE country = 'India';
SELECT product, AVG(severity) as avg_severity FROM vulnerabilities WHERE last_patch < DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY product ORDER BY avg_severity DESC;
SELECT AVG(production) FROM AtlanticOcean.wells WHERE depth BETWEEN 1000 AND 2000;
SELECT COUNT(*) FROM ArtifactAnalysis WHERE LabID IN ('1', '2');
SELECT SUM(production_quantity) FROM production WHERE mine_id = 1 AND year = 2017 AND element = 'Holmium';
SELECT assessment FROM geopolitical_risk_assessments WHERE region = 'Middle East';
SELECT name, COUNT(*) FROM schema1.vulnerabilities GROUP BY name ORDER BY COUNT(*) DESC LIMIT 3;
UPDATE volunteers SET volunteer_type = 'long-term' WHERE total_hours = (SELECT MAX(total_hours) FROM volunteers);
SELECT AVG(wind_speed) as avg_wind_speed, state FROM weather GROUP BY state;
SELECT AVG(maintenance_cost) FROM military_equipment WHERE branch = 'Air Force';
SELECT SUM(shipped_qty) as total_shipped FROM packages WHERE origin_country = 'Colombia' AND destination_country = 'Brazil' AND shipped_quarter = 1 AND shipped_year = 2022;
SELECT MAX(fare) FROM ferries WHERE region = 'Sydney';
SELECT SUM(DATEDIFF(end_date, start_date) + 1) FROM projects WHERE location IN ('US', 'Canada', 'Mexico') AND start_date BETWEEN '2018-01-01' AND '2022-12-31';
SELECT initiative_name, budget FROM conservation_initiatives;
SELECT AVG(weight) FROM Packages WHERE warehouse_id = (SELECT id FROM Warehouse WHERE name = 'Texas') AND shipment_date BETWEEN '2021-01-01' AND '2021-12-31';
SELECT year, rd_expenditure - LAG(rd_expenditure) OVER (ORDER BY year) as rd_change FROM clinical_trials;
SELECT city, AVG(donation_amount) FROM Donors d JOIN Donations don ON d.donor_id = don.donor_id WHERE state = 'CA' GROUP BY city ORDER BY AVG(donation_amount) DESC LIMIT 3;
SELECT FacultyID FROM Faculty WHERE Faculty.Department = 'Mathematics' AND Faculty.LastGrantDate < DATEADD(year, -1, GETDATE());
UPDATE waste_generation SET waste_kg = 5000000 WHERE country = 'USA' AND year = 2019;
SELECT project_name, construction_cost, people_served, ROW_NUMBER() OVER (ORDER BY construction_cost ASC) as rank FROM flood_control_projects WHERE location = 'Midwest' AND construction_cost BETWEEN 1990 AND 2000 GROUP BY project_name, construction_cost, people_served;
SELECT continent, DATE(signup_date) AS signup_day, COUNT(*) FROM user_data GROUP BY continent, signup_day;
SELECT c.Region, COUNT(*) as Competent_CHWs FROM CulturalCompetency c WHERE Competency_Level = 'Expert' GROUP BY c.Region;
SELECT Shrimp_Farms.name FROM Pacific_Ocean INNER JOIN Shrimp_Farms ON Pacific_Ocean.farm_id = Shrimp_Farms.id WHERE dissolved_oxygen < 6.5;
SELECT region, SUM(revenue) FROM Subscribers WHERE service = 'Mobile' AND QUARTER(payment_date) = 1 AND YEAR(payment_date) = 2022 GROUP BY region;
SELECT MAX(gpa) FROM student WHERE program = 'cs';
SELECT MIN(stream_count) FROM Streams WHERE song_genre = 'country' AND city = 'Nashville';
SELECT SUM(revenue) as total_revenue FROM restaurant_revenue WHERE restaurant_id = 1;
SELECT labor_category, AVG(average_wage) FROM labor_statistics GROUP BY labor_category ORDER BY AVG(average_wage) DESC LIMIT 2;
SELECT permit_number FROM Construction_Permits WHERE issue_date >= '2021-01-01' AND issue_date < '2022-01-01' AND state = 'California';
SELECT e.site_name, AVG(a.weight) as avg_weight FROM excavation_sites e JOIN artifacts a ON e.site_id = a.site_id GROUP BY e.site_id, e.site_name ORDER BY avg_weight DESC;
DROP TABLE volunteers;
SELECT country, AVG(hospital_beds_per_1000 * 1000) as hospital_beds_per_1000_people FROM eu_hospitals GROUP BY country;
SELECT SUM(co2_reduction) FROM carbon_offsets WHERE country = 'United States';
SELECT MAX(comments) FROM posts WHERE language = 'Italian';
SELECT SUM(streams) FROM streams WHERE country LIKE 'Colombia%' AND year = 2021;
SELECT COUNT(*) FROM skincare_products INNER JOIN brands ON skincare_products.brand_id = brands.brand_id WHERE EXTRACT(MONTH FROM launch_date) BETWEEN 7 AND 12 AND is_b_corp = TRUE;
SELECT company, AVG(rating) FROM tv_show GROUP BY company;
SELECT MIN(listing_price) AS "Lowest Price", MAX(listing_price) AS "Highest Price" FROM sustainable_urban WHERE city = 'New York';
SELECT facility_location, (a.CO2_emission - b.CO2_emission) AS CO2_emission_reduction FROM facility_emission_data a JOIN facility_emission_data b ON a.facility_location = b.facility_location AND a.year = b.year + 1 WHERE a.facility_location LIKE 'North America%' AND b.year = 2021;
SELECT AssessmentName, Region, RiskLevel FROM RiskAssessments WHERE Region = 'Middle East' AND AssessmentDate >= DATEADD(month, -6, GETDATE());
SELECT MAX(BillingAmount) FROM AttorneyBilling JOIN AttorneyIdentity ON AttorneyBilling.AttorneyID = AttorneyIdentity.AttorneyID WHERE Identity = 'LGBTQ+';
SELECT COUNT(DISTINCT fabric_type) FROM Textiles WHERE brand = 'Green Visions' INTERSECT SELECT COUNT(DISTINCT fabric_type) FROM Textiles WHERE brand = 'Ethical Fashions';
SELECT location, job_role, AVG(salary) FROM salaries GROUP BY location, job_role;
SELECT country, MAX(amount) AS max_amount FROM production WHERE year = 2020 GROUP BY country;
SELECT type, AVG(price) FROM menus WHERE type = 'Vegan';
SELECT type, COUNT(*) as total FROM mines WHERE location = 'Canada' GROUP BY type;
SELECT AVG(calories) FROM organic_cafe;
WITH updated_data AS (UPDATE sensor_data SET temperature = 25 WHERE sensor_id = 3 RETURNING *) SELECT * FROM updated_data;
SELECT project_name, start_date, end_date FROM projects;
SELECT COUNT(*) FROM UserMetrics WHERE BodyTemperature > 100.4 AND MetricDate >= '2022-04-01' AND MetricDate <= '2022-04-30';
SELECT A.ArtifactID, A.SiteID, A.ArtifactType, A.DateFound FROM Artifacts A INNER JOIN Dates D ON A.DateFound BETWEEN D.MinDate AND D.MaxDate;
INSERT INTO Events (ID, City, EventType, AttendeeCount) VALUES (4, 'Chicago', 'Dance', 100);
SELECT MAX(digital_assets.value) FROM digital_assets INNER JOIN smart_contracts ON digital_assets.asset_id = smart_contracts.asset_id WHERE smart_contracts.contract_name LIKE '%protocol%';
SELECT COUNT(*) FROM asteroid_collisions WHERE collision_date >= DATE_SUB(CURDATE(), INTERVAL 5 YEAR);
INSERT INTO wind_energy (id, region, year, production) VALUES (1, 'Texas', 2025, 5000);
SELECT COUNT(*) FROM polar_bear_sightings WHERE MONTH(date) IN (6, 7, 8) AND sighted = TRUE AND YEAR(date) = 2019;
SELECT SUM(technology_accessibility) FROM patents WHERE inventor_gender = 'Female';
SELECT country, revenue, ROW_NUMBER() OVER (ORDER BY revenue DESC) as rank FROM carbon_tax;
SELECT customer_id, RANK() OVER (ORDER BY SUM(balance) DESC) AS non_shariah_rank FROM non_shariah_accounts WHERE account_type != 'Shariah-compliant' GROUP BY customer_id;
SELECT AVG(beds) FROM rural_hospitals WHERE location = 'United States';
SELECT AVG(cases.billing_amount) FROM cases INNER JOIN attorneys ON cases.attorney_id = attorneys.attorney_id WHERE attorneys.name = 'John Doe';
SELECT spot_name, COUNT(DISTINCT visitor_id) FROM eco_tourism_spots GROUP BY spot_name HAVING COUNT(DISTINCT visitor_id) > 2;
SELECT AVG(budget) FROM programs WHERE program_type = 'Humanitarian Aid' AND country_code = 'ME';
SELECT AVG(num_employees) FROM startup WHERE industry = 'Clean Technology';
SELECT COUNT(*) FROM news.NewsSource WHERE type = 'opinion' AND region = 'southern' AND underrepresented = true
SELECT v.cause, COUNT(DISTINCT v.state) as unique_states FROM volunteers v GROUP BY v.cause;
SELECT SUM(amount) FROM (SELECT amount FROM donors WHERE donation_date >= '2022-04-01' AND donation_date < '2022-07-01' GROUP BY id HAVING COUNT(*) = 1) AS new_donors;
SELECT a.name, COUNT(ma.movie_id) AS num_movies FROM actors a INNER JOIN movies_actors ma ON a.id = ma.actor_id INNER JOIN movies m ON ma.movie_id = m.id WHERE m.production_country = 'India' GROUP BY a.name ORDER BY num_movies DESC LIMIT 5;
SELECT AVG(Duration) FROM Missions WHERE Destination = 'Mars';
SELECT Platform, AVG(PlayTime) AS Avg_PlayTime FROM Games WHERE Genre = 'Virtual Reality' GROUP BY Platform;
SELECT (SELECT SUM(Streams) FROM ArtistStreamingData WHERE ArtistGender = 'Female') - (SELECT SUM(Streams) FROM ArtistStreamingData WHERE ArtistGender = 'Male') AS Difference;
SELECT SUM(budget) FROM BioprocessEngineering WHERE region = 'South America';
SELECT crop_type, SUM(num_sensors) FROM sensor_data GROUP BY crop_type;
SELECT name, RANK() OVER (ORDER BY unesco_sites DESC) as site_rank FROM countries WHERE unesco_sites IS NOT NULL QUALIFY site_rank <= 2;
SELECT MAX(budget) FROM ai_projects;
SELECT MAX(capacity) FROM hydroelectric_plants WHERE country IN ('Brazil', 'Canada');
SELECT hosts.name, COUNT(bookings.id) as num_bookings FROM hosts INNER JOIN bookings ON hosts.id = bookings.host_id WHERE hosts.city = 'London' GROUP BY hosts.name ORDER BY num_bookings DESC LIMIT 3;
UPDATE fares SET revenue = 1200 WHERE station = (SELECT station FROM routes WHERE line = 'Yellow' AND station = 'Station 1' LIMIT 1);
SELECT COUNT(*) FROM Dams WHERE state = 'Washington'
SELECT State, COUNT(*) FROM Hospitals GROUP BY State;
SELECT s.name, SUM(CASE WHEN e.mission_status = 'successful' THEN 1 ELSE 0 END) AS num_successful, SUM(CASE WHEN e.mission_status = 'failed' THEN 1 ELSE 0 END) AS num_failed FROM evacuations e JOIN states s ON e.state = s.name GROUP BY s.name
SELECT COUNT(*) FROM Dysprosium_Mines WHERE country = 'Canada';
SELECT State, SUM(Cost) AS TotalCost FROM SustainableCosts WHERE State = 'WA' AND Sustainable = 1 GROUP BY State;
SELECT COUNT(DISTINCT user_id) FROM marathon_results WHERE marathon_time < '04:00:00';
SELECT m.manufacturer_name, AVG(g.price) AS avg_price FROM garments g JOIN manufacturers m ON g.manufacturer_id = m.manufacturer_id WHERE g.is_eco_friendly = TRUE GROUP BY m.manufacturer_name ORDER BY avg_price DESC, m.manufacturer_name ASC LIMIT 1;  SELECT m.manufacturer_name, AVG(g.price) AS avg_price FROM garments g JOIN manufacturers m ON g.manufacturer_id = m.manufacturer_id WHERE g.is_eco_friendly = TRUE GROUP BY m.manufacturer_name ORDER BY avg_price ASC, m.manufacturer_name ASC LIMIT 1;
SELECT AVG(capacity_cubic_meters) FROM LandfillCapacityAPAC WHERE capacity_cubic_meters > 100000 AND region = 'APAC';
SELECT continent, COUNT(*) FROM marine_species WHERE endemic = true GROUP BY continent;
SELECT company_id, gender, minority, SUM(percentage_representation) as total_percentage FROM Diversity GROUP BY company_id, gender, minority;
SELECT SUM(revenue_usd) FROM csa JOIN (SELECT * FROM sales WHERE YEAR(date) = 2021 AND QUARTER(date) = 1) AS sales_h1 ON csa.id = sales_h1.csa_id WHERE csa.location = 'Africa';
SELECT MAX(likes) FROM social_media_posts WHERE topic = 'Female Empowerment' AND post_date >= DATE_SUB(CURDATE(), INTERVAL 1 WEEK);
SELECT state, COUNT(*) FROM clean_energy_policies GROUP BY state HAVING state IN ('Texas', 'California');
SELECT location, EXTRACT(MONTH FROM date) Month, AVG(temperature) Avg_Temperature FROM Weather GROUP BY location, EXTRACT(MONTH FROM date);
UPDATE students SET mental_health_score = 85 WHERE student_id = (SELECT MAX(student_id) FROM students WHERE participated_in_lifelong_learning = FALSE);
SELECT program_category, SUM(volunteer_hours) as total_hours FROM VolunteerHours WHERE volunteer_date BETWEEN '2023-04-01' AND '2023-06-30' GROUP BY program_category;
SELECT area_name, avg_depth FROM marine_protected_areas ORDER BY avg_depth DESC LIMIT 5;
SELECT SUM(size) FROM power_installations WHERE location = 'California' AND power_type = 'Solar' AND year IN (2020, 2021);
SELECT da.name, sc.name FROM digital_assets da INNER JOIN smart_contracts sc ON da.name = sc.name WHERE da.market_cap > 1000000000 AND sc.network = 'Ethereum';
SELECT production_location, SUM(CASE WHEN is_ethical THEN 1 ELSE 0 END) AS ethical_sales, SUM(CASE WHEN NOT is_ethical THEN 1 ELSE 0 END) AS non_ethical_sales FROM sales_summary GROUP BY production_location;
SELECT AVG(cost) FROM co_ownership WHERE city = 'Seattle';
SELECT m.mine_name, gs.x_coordinate, gs.y_coordinate, gs.geological_feature FROM geological_survey gs JOIN mines m ON gs.mine_id = m.mine_id;
SELECT AVG(vessels.capacity) FROM vessels JOIN companies ON vessels.company_id = companies.company_id WHERE companies.country = 'Oceania' AND companies.company_name LIKE '%Island%';
SELECT carrier.name, SUM(shipment.package_count) FROM shipment JOIN carrier ON shipment.carrier_id = carrier.id JOIN warehouse ON shipment.warehouse_id = warehouse.id WHERE warehouse.city = 'LA' AND shipped_date BETWEEN '2022-01-01' AND '2022-01-31' GROUP BY carrier.name;
SELECT supplier, COUNT(DISTINCT fabric) as unique_fabrics FROM supplier_fabrics GROUP BY supplier;
SELECT SUM(biomass) FROM marine_species WHERE location = 'Indian Ocean' AND depth > 2000;
SELECT SUM(billing_amount) FROM cases WHERE case_type = 'civil';
SELECT country, COUNT(DISTINCT patent_id) FROM military_innovation WHERE continent = 'Asia' AND year = 2020 GROUP BY country;
SELECT AVG(smart_contracts.gas_price) FROM smart_contracts WHERE smart_contracts.network = 'Ethereum';
SELECT MAX(age) as max_age FROM employee_database WHERE department = 'Sales' AND training_completed = 'None';
SELECT AVG(quantity) FROM products JOIN manufacturers ON products.manufacturer_id = manufacturers.manufacturer_id WHERE manufacturers.country = 'India' AND products.material = 'organic cotton';
SELECT DISTINCT type FROM Innovation WHERE type != 'Experimental';
SELECT DISTINCT hospital_name FROM rural.hospitals;
SELECT AVG(salary) FROM workers WHERE industry = 'Agriculture' AND union_member = false;
SELECT COUNT(*) FROM sales INNER JOIN garments ON sales.garment_id = garments.id WHERE garments.sustainable = 'true' AND date BETWEEN '2021-04-01' AND '2021-06-30';
SELECT SUM(CASE WHEN country IN ('Japan', 'Germany') AND category = 'Luxury' THEN 1 ELSE 0 END) FROM Hotels;
SELECT city, COUNT(*) as num_events FROM community_events GROUP BY city ORDER BY num_events DESC;
SELECT et.EventTypeName, SUM(ts.Revenue) as TotalRevenue FROM TicketSales ts INNER JOIN Events e ON ts.EventID = e.EventID INNER JOIN EventTypes et ON e.EventTypeID = et.EventTypeID WHERE ts.TicketSaleDate >= '2022-01-01' AND ts.TicketSaleDate < '2023-01-01' GROUP BY et.EventTypeName;
SELECT name FROM models WHERE safety > 0.85;
SELECT COUNT(*) FROM Companies WHERE industry = 'Education' AND diversity = 'Underrepresented';
SELECT project_name FROM defense_projects WHERE contracted_company = 'Company Z';
SELECT exhibition_name, MAX(visit_date) AS max_weekend_visit FROM attendance WHERE EXTRACT(DAY FROM visit_date) BETWEEN 6 AND 7 GROUP BY exhibition_name;
SELECT genre, AVG(streams_amount) FROM streams GROUP BY genre;
SELECT AVG(launch_cost) FROM astrobiology_missions;
SELECT (COUNT(CASE WHEN f.name = 'Foundation' AND t.type IN ('workshops', 'classes') THEN 1 END) * 100.0 / COUNT(*)) AS foundation_funding_percentage FROM funding_sources f JOIN workshops w ON f.id = w.funding_source_id JOIN classes c ON f.id = c.funding_source_id JOIN (VALUES ('workshops'), ('classes')) AS t(type) ON TRUE
SELECT COUNT(*) FROM attorneys WHERE gender = 'Female' AND specialty = 'Criminal Law';
SELECT region, COUNT(accom_id) AS num_sustainable_accoms FROM accommodations WHERE sustainability_rating >= 4 GROUP BY region;
SELECT SUM(capacity) FROM energy_storage WHERE country = 'France';
SELECT DISTINCT country FROM climate_finance;
SELECT MONTH(hire_date) as hire_month, COUNT(*) as num_employees FROM employee_history GROUP BY hire_month;
SELECT COUNT(*) as total_rounds, SUM(amount) as total_funding FROM investment_rounds JOIN startups ON investment_rounds.startup_id = startups.id JOIN founders ON startups.id = founders.startup_id WHERE industry = 'Renewable Energy' AND founders.founder_identity = 'Refugee';
SELECT donor_zip, COUNT(*) AS donor_count FROM donors GROUP BY donor_zip ORDER BY donor_count DESC LIMIT 3;
SELECT AVG(avg_rating) FROM SupplyChainTransparency WHERE is_organic = TRUE AND is_vegan = TRUE;
SELECT COUNT(*) FROM orders JOIN menus ON orders.menu_id = menus.menu_id WHERE menus.category = 'Non-Vegetarian' AND orders.order_date BETWEEN '2022-03-01' AND '2022-03-31';
INSERT INTO Menu (menu_name, item_name, price) VALUES ('Gluten-Free', 'Chicken Caesar Salad', 13.99);
SELECT SUM(donation_amount) as total_donation_amount, COUNT(DISTINCT donors.id) as num_donors FROM donors
SELECT venue_id, AVG(duration) as 'Average Duration of Longest Tour' FROM Virtual_Tours t1 WHERE t1.duration = (SELECT MAX(duration) FROM Virtual_Tours t2 WHERE t1.venue_id = t2.venue_id) GROUP BY venue_id;
INSERT INTO smart_cities (city_name, initiative) VALUES ('EcoCity', 'smart city');
SELECT Name FROM Recipients WHERE Amount > ALL (SELECT Amount FROM Donors);
SELECT * FROM investments WHERE YEAR(date) = 2020;
SELECT name, budget FROM public_universities WHERE state = 'Oregon' ORDER BY budget DESC LIMIT 1;
INSERT INTO Spacecrafts (Name, Manufacturer, Mass) VALUES ('Comet Cruiser', 'AstroTech', 3000);
SELECT MIN(first_flight) FROM aircraft WHERE manufacturer = 'Airbus';
SELECT s.country, COUNT(s.satellite_id) + COUNT(d.debris_id) as total_objects FROM satellites s FULL OUTER JOIN space_debris d ON s.country = d.country GROUP BY s.country;
SELECT broadband_plans.name AS broadband_plan, SUM(complaints.complaint_count) FROM complaints JOIN broadband_plans ON complaints.plan_id = broadband_plans.id JOIN regions ON broadband_plans.region = regions.name WHERE regions.name = 'Latin America' GROUP BY broadband_plans.name;
UPDATE TV_Shows SET production_budget = 20000000 WHERE title = 'Money Heist';
SELECT AVG(co2_reduction) FROM carbon_offset_programs WHERE country = 'Canada';
SELECT hotel_name, MIN(rating) FROM eco_hotels_arg WHERE country = 'Argentina';
SELECT AVG(DonationAmount) FROM (SELECT DonationAmount, ROW_NUMBER() OVER (PARTITION BY Region ORDER BY DonationAmount DESC) as rn FROM Donors WHERE Region = 'Asia-Pacific') tmp WHERE rn > 10;
SELECT COUNT(*) FROM pallets WHERE warehouse_id = 2 AND received_date BETWEEN '2021-06-01' AND '2021-06-15' AND shipped_date IS NULL;
SELECT country, budget FROM military_budget WHERE country != 'China' AND country IN ('United States', 'Japan', 'India', 'South Korea') ORDER BY budget DESC;
SELECT MIN(salary) AS min_salary FROM employees WHERE department = 'marketing';
CREATE TABLE circular_economy (company VARCHAR(50), location VARCHAR(50), circular_score FLOAT, certification_date DATE);
SELECT Tech_Accessibility_Asia.initiative_type, SUM(Tech_Accessibility_Asia.initiatives) FROM Tech_Accessibility_Asia WHERE Tech_Accessibility_Asia.country IN (SELECT Tech_Accessibility_Asia.country FROM Tech_Accessibility_Asia WHERE Tech_Accessibility_Asia.country = 'Asia' GROUP BY Tech_Accessibility_Asia.country ORDER BY SUM(Tech_Accessibility_Asia.initiatives) DESC LIMIT 2) GROUP BY Tech_Accessibility_Asia.initiative_type;
SELECT DonorCountry, COUNT(DISTINCT DonorID) as NumberOfUniqueDonors FROM Donations JOIN Donors ON Donations.DonorID = Donors.ID GROUP BY DonorCountry;
SELECT name, region FROM facilities WHERE last_inspection < DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);
SELECT name FROM chemicals WHERE last_updated < DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);
SELECT ArtistID, (LAG(TotalSculptures, 1) OVER (PARTITION BY ArtistID ORDER BY Year) - TotalSculptures) AS Increase FROM ArtistSculptures WHERE Year = 2021 ORDER BY Increase DESC LIMIT 1;
SELECT SUM(length) FROM highways WHERE location = 'Canada';
SELECT country, RANK() OVER (ORDER BY SUM(num_awards) DESC) as rank FROM awards WHERE year >= (SELECT MAX(year) - 3) GROUP BY country HAVING COUNT(*) = 3;
SELECT chemical_name, production_rate, RANK() OVER(ORDER BY production_rate DESC) as production_rank FROM production_rates WHERE date >= DATEADD(month, -1, GETDATE());
SELECT AVG(duration) FROM session_duration WHERE treatment = 'Group' AND country = 'United Kingdom';
SELECT SUM(quantity) FROM seafood_exports WHERE export_country = 'Norway' AND import_country = 'USA' AND EXTRACT(YEAR FROM export_date) = 2021 AND species = 'Salmon';
SELECT COUNT(*) FROM open_data_initiatives WHERE region = 'Northeast' AND launch_date >= DATEADD(year, -1, GETDATE());
SELECT COUNT(*) FROM Hiring WHERE HireDate BETWEEN '2020-01-01' AND '2020-03-31';
SELECT destination, MIN(launch_date) as first_launch_date FROM mission_destinations GROUP BY destination;
SELECT num_citizens FROM asia_population WHERE year = 2017;
UPDATE military_equipment SET quantity = CASE equipment_id WHEN 101 THEN 20 WHEN 102 THEN 30 ELSE quantity END;
SELECT MIN(end_time - start_time) AS min_duration, MAX(end_time - start_time) AS max_duration FROM paris_metro;
SELECT Country, COUNT(*) as NumberOfEmployees FROM Employees WHERE ComplianceTraining = true GROUP BY Country;
SELECT AVG(rating) FROM movies WHERE production_country = 'United States' AND release_year BETWEEN 2015 AND 2020;
SELECT COUNT(*) FROM inclusion_efforts WHERE region = 'North';
SELECT item_name, quantity FROM inventory WHERE region = 'EMEA' ORDER BY quantity ASC;
SELECT c.name, c.yield FROM crops c JOIN farmers f ON c.farmer_id = f.id WHERE f.location = 'Toronto';
SELECT MIN(water_consumption) FROM illinois_water_usage WHERE building_type = 'Residential';
UPDATE employees SET salary = salary * 1.03 WHERE department = 'Production';
SELECT strategy, MIN(risk_score) FROM investment_strategies;
SELECT AVG(age) as avg_age FROM community_health_workers chw INNER JOIN completed_training ct ON chw.worker_id = ct.worker_id;
SELECT country, SUM(donation_amount) as total_donations FROM Donations GROUP BY country ORDER BY total_donations DESC;
SELECT feeding_type, SUM(biomass) AS total_biomass FROM fish_data WHERE fish_name IN (SELECT fish_name FROM bay_of_bengal) GROUP BY feeding_type;
SELECT AVG(ny_buses.speed) AS ny_avg_speed, AVG(ca_buses.speed) AS ca_avg_speed FROM ny_buses INNER JOIN ca_buses ON 1=1;
SELECT artist_name FROM Streams WHERE year = 2020 AND streams > 10000000;
SELECT SUM(biomass) FROM fish_species WHERE ocean = 'Pacific';
SELECT Departments.department_name, AVG(Employees.salary) AS avg_salary FROM Departments JOIN Employees ON Departments.employee_id = Employees.id GROUP BY department_name;
SELECT country, contribution FROM LanguagePreservation ORDER BY contribution DESC LIMIT 3;
SELECT c.type, COUNT(d.id) as num_devices FROM crop c INNER JOIN iot_devices d ON c.id = d.crop_id WHERE d.timestamp >= DATE_SUB(NOW(), INTERVAL 3 MONTH) GROUP BY c.type;
SELECT SUM(tickets.price) FROM tickets INNER JOIN games ON tickets.game_id = games.game_id WHERE games.sport = 'Football' AND (games.city = 'Texas' OR games.city = 'California') AND tickets.sale_date >= DATEADD(year, -1, GETDATE());
SELECT AVG(waste_generation) FROM waste_generation wg JOIN environmental_impact ei ON wg.chemical_id = ei.chemical_id WHERE ei.carbon_footprint > 800;
SELECT SUM(budget) FROM Spacecraft WHERE manufacturer IN ('AeroSpace Inc.', 'SpaceX');
SELECT SUM(num_flights) FROM flights JOIN astronauts ON flights.astronaut_id = astronauts.astronaut_id WHERE astronauts.country = 'Canada';
SELECT country, RANK() OVER (ORDER BY viewers DESC) AS rank FROM tournaments WHERE viewers > 40000;
SELECT journalists.name FROM journalists INNER JOIN articles ON journalists.id = articles.author_id INNER JOIN articles_topics ON articles.id = articles_topics.article_id INNER JOIN topics ON articles_topics.topic_id = topics.id WHERE topics.name = 'specific_topic';
SELECT Country, SUM(Hours) FROM Volunteers WHERE Country = 'India' GROUP BY Country;
SELECT innovation_name, budget FROM military_innovation;
SELECT AVG(DATEDIFF(inspection_date, LAG(inspection_date) OVER (PARTITION BY bridge_name ORDER BY inspection_date))) FROM Bridge_Inspections WHERE bridge_type = 'Bridge';
SELECT COUNT(*) FROM international_visitors WHERE country IN ('China', 'Japan', 'India') AND arrival_date >= DATE('now', '-3 month');
SELECT ms.subscriber_id, ms.state, SUM(vc.revenue + sm.revenue) as total_revenue FROM mobile_subscribers ms INNER JOIN voice_calls vc ON ms.subscriber_id = vc.subscriber_id INNER JOIN sms_messages sm ON ms.subscriber_id = sm.subscriber_id WHERE ms.state = 'New York' GROUP BY ms.subscriber_id, ms.state;
SELECT COUNT(*) FROM ebp_initiatives WHERE region = 'EU';
SELECT program_id, COUNT(*), MAX(volunteer_age) FROM program_volunteers GROUP BY program_id;
SELECT campaign, COUNT(DISTINCT target) AS num_targets FROM climate_education WHERE year = 2022 AND campaign IN ('Campaign1', 'Campaign2', 'Campaign3', 'Campaign4') GROUP BY campaign;
SELECT COUNT(*) FROM energy_efficiency_projects WHERE state = 'California';
SELECT SUM(sale_amount) FROM sales_data WHERE drug_name = 'DrugC' AND sale_year = 2020;
SELECT MIN(t.amount) FROM transactions t JOIN customers c ON t.customer_id = c.id WHERE c.country = 'India';
SELECT region, AVG(metric1) as avg_metric1, AVG(metric2) as avg_metric2, AVG(metric3) as avg_metric3 FROM threat_intelligence WHERE date BETWEEN '2020-01-01' AND '2020-12-31' GROUP BY region;
SELECT COUNT(*) FROM model_data WHERE team IN ('Team B', 'Team C');
SELECT SUM(attorneys.cases_handled) FROM attorneys INNER JOIN clients ON attorneys.attorney_id = clients.attorney_id INNER JOIN cases ON clients.client_id = cases.client_id WHERE clients.industry = 'technology';
SELECT department, AVG(budget) as avg_budget FROM public_participation WHERE year = 2021 GROUP BY department;
SELECT AVG(score) FROM players WHERE YEAR(join_date) = 2021;
UPDATE Game_Design SET platform = 'PC' WHERE id = 1;
SELECT MIN(steps) FROM wearable_data WHERE country = 'Colombia';
DELETE FROM packages WHERE delivery_date < DATE_SUB(CURRENT_DATE, INTERVAL 30 DAY);
SELECT COUNT(DISTINCT customer_id) FROM accounts WHERE balance > PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY balance) OVER (PARTITION BY account_type);
SELECT * FROM climate_projects WHERE project_type = 'climate communication' AND location LIKE 'South America%' AND start_year > 2012;
SELECT * FROM FoodSystems WHERE location = 'South America' AND type = 'Indigenous Food System';
SELECT Companies.region, SUM(Materials.quantity) FROM Companies JOIN Materials ON Companies.id = Materials.company_id GROUP BY Companies.region;
SELECT EXTRACT(MONTH FROM join_date) AS month, COUNT(*) FROM Users GROUP BY month;
SELECT MIN(dissolved_oxygen_level) FROM fish_farms WHERE location = 'Red Sea';
SELECT name, location FROM museums WHERE location = 'Amsterdam' AND annual_visitors > 100000;
SELECT software.name, software.version FROM software INNER JOIN vulnerabilities ON software.name = vulnerabilities.software_name AND software.version = vulnerabilities.version WHERE vulnerabilities.sector = 'Education';
SELECT SUM(amount) FROM expenses WHERE (category = 'Medical Aid' OR category = 'Sanitation') AND year = 2019;
SELECT d.name, SUM(c.committed) FROM districts d JOIN crimes c ON d.id = c.district_id WHERE d.city = 'Chicago' GROUP BY d.name ORDER BY SUM(c.committed) DESC;
SELECT SUM(allocated_budget) AS total_budget FROM city_budget WHERE city = 'Oakland' AND year = 2022 AND department = 'Parks and Recreation';
SELECT MIN(launch_date) FROM satellites;
SELECT departments.name, COUNT(*) AS num_employees FROM hr.departments JOIN hr.employees ON departments.id = employees.department_id GROUP BY departments.name ORDER BY num_employees DESC;
SELECT COUNT(TripID) FROM TrainTrips WHERE TripDate >= DATEADD(MONTH, -1, GETDATE());
SELECT AVG(thc_content) FROM flower_sales fs JOIN dispensaries d ON fs.dispensary_id = d.dispensary_id WHERE d.state = 'MO';
SELECT exhibition_name, MIN(visit_date) AS min_weekday_visit FROM attendance WHERE EXTRACT(DAY FROM visit_date) BETWEEN 1 AND 5 GROUP BY exhibition_name;
SELECT SUM(CargoWeight) FROM CargoTransport WHERE VesselID = 4 AND TransportDate BETWEEN '2021-04-01' AND '2021-04-30';
SELECT SUM(transaction_amount) FROM transactions INNER JOIN customer ON transactions.customer_id = customer.customer_id WHERE customer.state IN ('CA', 'TX') AND transaction_type = 'Deposit';
SELECT SUM(budget) FROM CommunityBudget WHERE heritage_site IN (SELECT name FROM Heritagesites WHERE continent = 'Pacific');
SELECT SUM(usage) FROM water_usage WHERE sector = 'residential' AND year = 2020;
SELECT R.Name, YEAR(AE.EventDate) as Year, COUNT(*) as TotalEvents FROM Region R JOIN AdvocacyEvents AE ON R.Id = AE.RegionId GROUP BY R.Name, Year HAVING Year = 2020;
SELECT ingredient, quantity FROM inventory;
SELECT f.program_id, p.name, f.source, f.amount FROM funding f INNER JOIN programs p ON f.program_id = p.id WHERE f.source = 'NEA' AND f.date >= '2018-01-01';
SELECT s.name, p.publication_date FROM students s INNER JOIN publications p ON s.student_id = p.student_id WHERE s.department = 'Engineering' AND s.grant_recipient = TRUE AND s.first_grant_date >= DATEADD(year, -1, GETDATE());
SELECT AVG(SustainabilityRating) as AvgSustainabilityRating FROM Properties WHERE Borough = 'Bronx' AND NumOwners > 1;
SELECT t.team_name, SUM(e.num_tickets_sold) as total_ticket_sales FROM teams t JOIN events e ON t.team_id = e.team_id WHERE e.total_seats >= 500 GROUP BY t.team_name;
SELECT COUNT(*) FROM genetic_research WHERE method LIKE '%genetic mutation%';
SELECT name FROM mines WHERE location = 'Peru' AND production_volume > 8000 AND mineral = 'copper' AND year = 2020;
SELECT law_id, enactment_year, law_name, ROW_NUMBER() OVER (ORDER BY enactment_year ASC) as lowest_enactment_rank, ROW_NUMBER() OVER (ORDER BY enactment_year DESC) as highest_enactment_rank FROM mental_health_parity;
SELECT SUM(amount_received) FROM Funding WHERE program_name = 'Arts Education for All' AND (funding_source = 'Private Donor' OR funding_source = 'Government Grant') AND YEAR(funding_date) = 2022;
SELECT country, SUM(trainee_count) as total_trained FROM military_training WHERE training_date >= '2015-01-01' GROUP BY country ORDER BY total_trained DESC LIMIT 3;
SELECT vessels.vessel_name, MAX(vessels.max_cargo_weight) FROM vessels JOIN port_visits ON vessels.vessel_id = port_visits.vessel_id JOIN ports ON port_visits.port_id = ports.port_id WHERE ports.port_name = 'Port of Oakland' AND YEAR(port_visits.visit_date) = 2022 AND QUARTER(port_visits.visit_date) = 1 GROUP BY vessels.vessel_id;
SELECT AVG(weight_loss / (MONTHS_BETWEEN(join_date, TRUNC(join_date, 'YYYY')))) FROM weight_loss WHERE EXTRACT(YEAR FROM join_date) = 2021;
SELECT MIN(size_km) FROM habitats WHERE animal_type != 'Mammal';
INSERT INTO CommunityHealthWorkers (WorkerID, Age, Gender, Region) VALUES ((SELECT MAX(WorkerID) FROM CommunityHealthWorkers) + 1, 30, 'F', 'FL');
SELECT w.country, w.training, COUNT(*) as count FROM workers w INNER JOIN countries c ON w.country = c.country GROUP BY w.country, w.training;
SELECT district, SUM(water_consumption) FROM hyderabad_water_consumption WHERE date = (SELECT MAX(date) FROM hyderabad_water_consumption) GROUP BY district;
SELECT team_name, total_revenue FROM team_revenue WHERE season = 2022;
SELECT MAX(SafetyRating) FROM Vehicles WHERE Manufacturer = 'South Korea';
SELECT AVG(num_employees) FROM mining_operations;
SELECT COUNT(*) FROM Visitors WHERE country IN ('USA', 'Canada');
SELECT * FROM legal_tech_launch WHERE country = 'US' ORDER BY launch_date DESC;
SELECT station_name FROM RED_LINE WHERE num_bikes_available > 500;
SELECT AVG(age) FROM mine_workers WHERE mine_type = 'Open-pit';
SELECT country, SUM(capacity) OVER (PARTITION BY country) AS total_capacity, RANK() OVER (ORDER BY SUM(capacity) DESC) AS rank FROM renewable_energy_projects GROUP BY country;
SELECT r.name, r.city, CASE WHEN r.wheelchair_accessible THEN 'Yes' ELSE 'No' END as Accessible FROM routes r WHERE r.city = 'Tokyo' AND r.type = 'Bus';
INSERT INTO Players (PlayerID, Name, Age, Gender) VALUES (1, 'Alex Smith', 22, 'Non-binary');
SELECT COUNT(*) FROM Artworks WHERE category = 'modern' AND year > 2000;
SELECT technology, COUNT(*) FROM storage_projects WHERE year >= 2016 GROUP BY technology;
SELECT region_name, impact FROM coastal_regions WHERE country = 'Costa Rica';
SELECT region, AVG(water_consumption) as avg_water_consumption_per_worker FROM water_consumption WHERE region = 'North' AND year = 2021 GROUP BY region, year;
SELECT SUM(funding) FROM genome_inc WHERE project = 'Bioprocess Engineering';
SELECT cargo_handling.waiting_time FROM cargo_handling WHERE cargo_handling.port_code = 'SFO';
SELECT AVG(average_speed) FROM vessels WHERE country = 'Philippines';
SELECT crop, SUM(rainfall) FROM RainfallData WHERE YEAR(time) = YEAR(CURRENT_DATE()) GROUP BY crop;
SELECT AVG(Attendees) FROM Concerts WHERE ConcertDate >= '2023-01-01' AND ConcertDate < '2024-01-01';
SELECT SUM(posts.likes) FROM posts WHERE posts.timestamp BETWEEN '2022-01-01 00:00:00' AND '2022-01-31 23:59:59';
SELECT company, market_share FROM world_gas_companies wgc WHERE wgc.year = 2021 ORDER BY market_share DESC LIMIT 5;
SELECT Policy.PolicyType, AVG(DATEDIFF(day, IssueDate, ExpirationDate)) as AveragePolicyDuration, COUNT(Claim.ClaimId) as NumberOfClaims FROM Policy LEFT JOIN Claim ON Policy.PolicyId = Claim.PolicyId WHERE Policy.Region = 'Florida' GROUP BY Policy.PolicyType;
SELECT AVG(temperature) FROM WeatherData WHERE region IN (1, 2)
SELECT COUNT(DISTINCT f.facility_id) FROM treatment_facilities f INNER JOIN droughts d ON f.facility_id = d.facility_id WHERE f.state = 'Texas' AND d.start_date >= DATE_SUB(f.last_inspection_date, INTERVAL 5 YEAR);
SELECT name, num_libraries FROM borough;
SELECT Country, UserCount FROM UserStreamCountries2 ORDER BY UserCount ASC LIMIT 3;
SELECT p.PlayerID, AVG(pw.WinID/pg.GameDate) as AvgWinsPerDay FROM PlayerWins pw INNER JOIN PlayerGames pg ON p.PlayerID = pg.PlayerID GROUP BY p.PlayerID;
SELECT * FROM (SELECT id, name, COUNT(*) as inspection_count FROM vessels WHERE last_inspection > DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY id) t WHERE inspection_count > 2;
SELECT AVG(spending) FROM military_spending WHERE region = 'Asia';
SELECT AVG(biomass) FROM farm_freshwater WHERE country IN ('Canada', 'US', 'Mexico');
DELETE FROM Paintings WHERE Title = 'Guernica';
SELECT DISTINCT TextileType FROM TextileSourcing WHERE IsSustainable = TRUE;
SELECT region, crop_type, AVG(temperature_diff) FROM (SELECT region, crop_type, TIMESTAMPDIFF(HOUR, MIN(timestamp), MAX(timestamp)) AS hours_diff, AVG(temperature) - (SELECT AVG(temperature) FROM TempData t2 WHERE t1.region = t2.region AND t1.crop_type = t2.crop_type AND DATE(t2.timestamp) = DATE(t1.timestamp) AND HOUR(t2.timestamp) < 6) AS temperature_diff FROM TempData t1 WHERE region = 'Central' AND YEAR(timestamp) = 2022 GROUP BY region, crop_type, DATE(timestamp)) t GROUP BY region, crop_type;
SELECT AVG(age) FROM patients WHERE diagnosis = 'diabetes' AND location = 'rural Texas';
SELECT donations.program_id, COUNT(DISTINCT donors.id) as unique_donors, COUNT(DISTINCT donations.donor_id) as total_donors FROM donors JOIN donations ON donors.id = donations.donor_id GROUP BY donations.program_id;
SELECT AVG(age) AS avg_age FROM nhl_players;
SELECT location AS region, SUM(emissions_reduced) as total_reduction FROM projects WHERE start_date >= '2015-01-01' AND end_date <= '2020-12-31' GROUP BY region;
SELECT AVG(occupancy_rate) FROM hotels WHERE city = 'Paris';
UPDATE stops SET stop_name = 'Hollywood Av' WHERE stop_id = 115;
SELECT research_station.station_name, oa.level AS min_level FROM ocean_acidification oa JOIN (SELECT location, MIN(level) AS min_level FROM ocean_acidification WHERE region = 'Pacific Ocean' GROUP BY location) oa_min ON oa.level = oa_min.min_level JOIN research_stations research_station ON oa.location = research_station.station_name;
SELECT SUM(quantity) FROM inventory WHERE organic = true;
SELECT v.Region, ROUND(COUNT(*) / (SELECT COUNT(*) FROM Volunteers) * 100, 2) as Percentage FROM Volunteers v GROUP BY v.Region;
SELECT AVG(depth) FROM deepest_parts WHERE ocean IN ('Atlantic', 'Pacific', 'Indian');
SELECT country, SUM(amount) as total_financial_aid FROM financial_aid GROUP BY country;
SELECT country_name, gas_production FROM countries ORDER BY gas_production DESC LIMIT 2;
SELECT AVG(recycling_rate) FROM recycling_rates WHERE population > 2000000 AND continent = 'Asia';
SELECT CaseID, BillingAmount FROM Cases WHERE BillingAmount IS NULL;
SELECT Stores.Name, SUM(CASE WHEN Dishes.Type = 'Vegetarian' THEN 1 ELSE 0 END) AS VegetarianDishes, SUM(CASE WHEN Dishes.Type = 'Non-Vegetarian' THEN 1 ELSE 0 END) AS NonVegetarianDishes, SUM(Dishes.Calories) AS TotalCalories FROM Dishes INNER JOIN Stores ON Dishes.StoreID = Stores.StoreID GROUP BY Stores.Name;
SELECT MAX(horsepower) FROM Vehicle WHERE transmission = 'Manual';
SELECT species_id, MAX(temp) as max_temp FROM temperature GROUP BY species_id, YEAR(year)
SELECT CountryName, AVG(EnergyEfficiencyRating) AS AvgRating FROM Building JOIN Country ON Building.CountryID = Country.CountryID GROUP BY CountryID ORDER BY AvgRating DESC LIMIT 3;
SELECT COUNT(*) FROM model_fairness WHERE fairness_score < 0.7;
SELECT COUNT(*) as funding_records_count FROM Funding INNER JOIN Companies ON Funding.company_name = Companies.name WHERE Companies.industry = 'Healthcare' AND Companies.founder_gender = 'Female';
SELECT position, AVG(age) FROM healthcare_workers WHERE hospital_id IN (SELECT id FROM rural_hospitals) GROUP BY position;
SELECT COUNT(*), Borough FROM Parks WHERE CreationDate >= '2015-01-01' GROUP BY Borough;
UPDATE decentralized_apps SET category = 'AMM' WHERE app_id = 1001;
DELETE FROM Incidents WHERE IncidentType = 'TrafficAccident' AND ResponseTime > 120;
SELECT MAX(COUNT(*)) FROM BrandCertifications GROUP BY brand HAVING COUNT(*) > 0;
SELECT SUM(DonationAmount) FROM Donors WHERE QUARTER(DonationDate) = 1 AND YEAR(DonationDate) = 2019;
SELECT * FROM programs WHERE type = 'Legal Technology';
SELECT AVG(production_rate) FROM (SELECT well_id, production_rate FROM well_production WHERE well_type = 'Offshore' AND location = 'Gulf of Mexico' ORDER BY production_rate DESC) WHERE row_number() OVER (ORDER BY production_rate DESC) <= 10;
SELECT COUNT(*) FROM artworks WHERE artist IN (SELECT artist FROM artworks WHERE created_date BETWEEN DATE_SUB(NOW(), INTERVAL 10 YEAR) AND NOW() AND artist LIKE '% female %') AND created_date BETWEEN DATE_SUB(NOW(), INTERVAL 10 YEAR) AND NOW();
SELECT Country, (HospitalBeds / Population) * 1000 AS BedsPer1000 FROM HospitalBedData;
SELECT type, MIN(cost), MAX(cost) FROM Infrastructure_Projects GROUP BY type;
SELECT contract_type, SUM(contract_value) as total_contract_value FROM DefenseContracts WHERE vendor = 'Lockheed Martin' AND contract_date BETWEEN '2022-04-01' AND '2022-06-30' GROUP BY contract_type;
INSERT INTO fish_species (species, scientific_name) VALUES ('Tilapia', 'Oreochromis niloticus');
SELECT RestaurantID, COUNT(*) OVER (PARTITION BY RestaurantID) as TotalInspections, (COUNT(*) FILTER (WHERE ViolationCount > 0) OVER (PARTITION BY RestaurantID) * 100.0 / COUNT(*) OVER (PARTITION BY RestaurantID)) as ViolationPercentage FROM Inspections WHERE RestaurantID IN (SELECT RestaurantID FROM Restaurants WHERE State = 'Texas') AND InspectionDate > CURRENT_DATE - INTERVAL '6 months';
SELECT C.CountryName, A.ArtType, COUNT(AC.ArtID) AS TotalArtTypes FROM Countries C JOIN ArtCountry AC ON C.CountryID = AC.CountryID JOIN ArtTypes A ON AC.ArtTypeID = A.ArtTypeID GROUP BY C.CountryName, A.ArtType;
SELECT innovation, adoption_rate FROM names WHERE community LIKE 'Rural Community%' AND country = 'Bangladesh';
SELECT AVG(cd.wellbeing_score) FROM customer_data cd WHERE cd.customer_id IN (SELECT e.customer_id FROM eligible_customers e);
SELECT SUM(attendees) FROM attendance WHERE event = 'Dance Event' AND country = 'Mexico' AND year = 2021;
SELECT MAX(sales_amount) FROM sales WHERE drug_class = 'cardiovascular';
DELETE FROM capacity_building WHERE program_name = 'Youth Mentorship';
SELECT SUM(capacity) FROM solar_farms WHERE state IN ('Texas', 'Alaska') AND install_date <= '2020-01-01';
SELECT c.CauseName, SUM(d.DonationAmount) as TotalDonationAmount FROM Donors d JOIN Causes c ON d.CauseID = c.CauseID GROUP BY c.CauseName;
SELECT manufacturer, COUNT(*) FROM aircraft GROUP BY manufacturer;
SELECT SUM(ads.revenue) FROM ads INNER JOIN users ON ads.user_id = users.id WHERE users.country = 'Japan' AND ads.timestamp >= DATE_SUB(NOW(), INTERVAL 1 MONTH);
SELECT COUNT(*) FROM Trainings WHERE training_type = 'Cybersecurity training' AND year = 2020 AND region_id = (SELECT region_id FROM Regions WHERE region_name = 'Caribbean');
SELECT u.advocacy, SUM(u.members), COUNT(u.union_id) FROM unions u WHERE u.advocacy = 'workplace safety' AND u.region = 'Western' GROUP BY u.advocacy;
SELECT SUM(artworks) FROM artworks WHERE collection LIKE '%Europe%' AND gender = 'Male';
SELECT articles.title, categories.name FROM articles INNER JOIN categories ON articles.id = categories.article_id;
SELECT Gender, AVG(Salary) FROM Employees WHERE EmploymentStatus = 'Full-time' GROUP BY Gender;
SELECT SUM(Artworks.price) FROM Artworks INNER JOIN Artists ON Artworks.artist_id = Artists.artist_id INNER JOIN Museums ON Artworks.museum_id = Museums.museum_id WHERE Artists.nationality = 'Impressionist' AND Museums.name = 'The Louvre' AND YEAR(Artworks.date_sold) BETWEEN 1950 AND 1970;
SELECT farm_type, year_of_operation, SUM(total_fish) AS total_fish_sum FROM aquaculture_fish GROUP BY farm_type, year_of_operation;
SELECT MIN(budget) FROM defense_diplomacy WHERE region = 'Asia-Pacific';
SELECT AVG(age) FROM patient_diagnosis WHERE diagnosis = 'Anxiety' AND treatment_center = 'clinic_g'; SELECT AVG(age) FROM patient_diagnosis WHERE diagnosis = 'PTSD' AND treatment_center = 'clinic_g';
UPDATE travel_advisory SET status = 'Safe' WHERE location = 'Japan';
SELECT YEAR(start_date) AS year, MONTH(start_date) AS month, COUNT(*) AS projects FROM project_timeline WHERE end_date IS NOT NULL GROUP BY year, month;
SELECT student_ethnicity, COUNT(*) FROM open_pedagogy_schools GROUP BY student_ethnicity;
SELECT SUM(quantity) FROM production WHERE element = 'Terbium' AND year IN (2020, 2021);
SELECT state, recycling_rate FROM recycling_rates WHERE year = 2019 AND state IN ('Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California');
INSERT INTO cargo (cargo_id, cargo_name, weight, volume, description) VALUES (2002, 'Electronics', 500, 100, 'Consumer electronics');
SELECT sa.name, sap.status, SUM(sap.animal_count) as total_animals FROM south_american_conservation_areas sa JOIN south_american_animal_population sap ON sa.id = sap.conservation_area_id GROUP BY sa.name, sap.status;
DELETE FROM safety_protocols WHERE chemical_name IN ('GHI', 'JKL');
SELECT facility_name FROM medical_facilities WHERE state = 'Nebraska' AND facility_id IN (SELECT facility_id FROM covid_tests WHERE total_tests < (SELECT AVG(total_tests) FROM covid_tests WHERE state = 'Nebraska') ORDER BY total_tests LIMIT 1);
SELECT o.name, AVG(d.amount) as avg_donation_amount FROM organization o JOIN donation d ON o.id = d.organization_id WHERE d.donation_year = 2022 GROUP BY o.id;
SELECT (SUM(CASE WHEN author_gender = 'Female' THEN 1 ELSE 0 END) / COUNT(*) * 100) AS Percentage_of_Female_Authors FROM Articles;
SELECT state, AVG(count_events) FROM (SELECT state, event_name, COUNT(event_name) OVER (PARTITION BY visitor_id) as count_events FROM visitor_attendance) as subquery GROUP BY state;
DELETE FROM mining_permits WHERE expiry_date < '2015-01-01';
SELECT strategy_name, strategy_date, budget FROM cyber_strategies WHERE strategy_date >= DATE(NOW()) - INTERVAL 1 YEAR;
SELECT (SUM(CASE WHEN DateClosed IS NOT NULL THEN 1 ELSE 0 END) - SUM(CASE WHEN DateOpened IS NOT NULL THEN 1 ELSE 0 END)) * 100.0 / COUNT(*) as PercentageChange FROM Cases WHERE DateOpened >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);
SELECT AVG(age) FROM players;
SELECT month, revenue FROM Virtual_Tour ORDER BY month;
SELECT age_group, COUNT(*) FROM individual INNER JOIN age_group ON individual.age_group_id = age_group.age_group_id WHERE access_level = 'Limited' AND region = 'Sub-Saharan Africa' GROUP BY age_group;
SELECT AVG(risk_level) FROM investments WHERE sector = 'green_technology'
SELECT artist_id FROM artists_songs GROUP BY artist_id HAVING COUNT(song_id) > 5;
DELETE FROM food_safety_records WHERE inspection_date >= '2021-01-01' AND inspection_date < '2022-01-01';
SELECT EventType, AVG(EventPrice) AS AvgEventPrice FROM CulturalEvents GROUP BY EventType;
SELECT SUM(initiative_count) FROM initiatives WHERE region = 'Pacific Islands';
SELECT brand, (revenue - LAG(revenue) OVER (PARTITION BY brand ORDER BY year))/ABS(LAG(revenue) OVER (PARTITION BY brand ORDER BY year)) as revenue_growth FROM brand_sales WHERE year = 2020 ORDER BY revenue_growth DESC LIMIT 3;
SELECT product_id, SUM(total_revenue) FROM product_sales_view WHERE sale_year = 2020 AND sale_quarter = 3 GROUP BY product_id ORDER BY SUM(total_revenue) DESC LIMIT 5;
SELECT AVG(Amount) FROM ResearchGrants WHERE Department = 'Physics' AND Year BETWEEN (SELECT MAX(Year) FROM ResearchGrants) - 2 AND (SELECT MAX(Year) FROM ResearchGrants);
SELECT zip_code, SUM(donation_amount) AS total_donated FROM donations WHERE zip_code LIKE '100%' GROUP BY zip_code ORDER BY total_donated DESC LIMIT 5;
SELECT MAX(Maximum) FROM HabitatProjects WHERE Project = 'Rainforest Conservation' AND Location = 'South America';
SELECT AVG(COUNT(*)) FROM TraditionalArtsCA_SA WHERE Location IN ('South America', 'Central America');
SELECT city, AVG(rate) as avg_rate FROM recycling_rates WHERE city = 'London' AND year = 2020 GROUP BY city, quarter ORDER BY avg_rate DESC;
SELECT COUNT(Refugees.refugee_id) FROM Refugees INNER JOIN Programs ON Refugees.service_start_date <= Programs.end_date AND Refugees.service_end_date >= Programs.start_date WHERE Programs.program_name = 'Community Outreach Program' AND YEAR(Programs.start_date) = 2019;
DELETE FROM smart_cities WHERE state = 'New York';
SELECT MAX(temperature) FROM ocean_temperatures WHERE year = 2020 AND region = 'Pacific Ocean';
SELECT name, MAX(birth_date) as birth_date FROM Artists;
SELECT SUM(co2_emissions) FROM Emissions WHERE process = 'Manufacturing';
INSERT INTO movies (title, release_year, rating) VALUES ('Black Panther 2', 2022, 4.6);
SELECT products.name, COUNT(DISTINCT chemical_compounds.compound_id) FROM products INNER JOIN product_compounds ON products.product_id = product_compounds.product_id INNER JOIN chemical_compounds ON product_compounds.compound_id = chemical_compounds.compound_id WHERE products.production_date > DATEADD(month, -1, GETDATE()) GROUP BY products.name;
SELECT h.type, COUNT(DISTINCT a.name) as unique_species, SUM(a.population) as total_population FROM animal_species a JOIN habitats h ON a.habitat_id = h.id GROUP BY h.type;
SELECT u.type, 100.0 * COUNT(m.id) FILTER (WHERE m.gender = 'Female') / COUNT(m.id) AS percentage FROM unions u JOIN members m ON u.id = m.union_id GROUP BY u.type;
UPDATE factories SET average_salary = average_salary * 1.10 WHERE department = 'metalwork';
SELECT COUNT(*) FROM patients WHERE diagnosis = 'Diabetes' AND location = 'Ohio' AND age < 65;
SELECT region FROM recycling_rates WHERE recycling_rate > (SELECT AVG(recycling_rate) FROM recycling_rates);
SELECT port_name, country FROM port LEFT JOIN shipment ON port.port_id = shipment.port_id WHERE shipment.shipment_id IS NULL;
SELECT COUNT(DISTINCT genre), AVG(runtime) FROM tv_show WHERE production_country = 'United States';
SELECT name FROM SafetyOrgs WHERE country = 'Germany';
SELECT AVG(score) FROM financial_capability;
SELECT well_name, production_rate, SUM(production_rate) OVER() AS total_production FROM wells WHERE region = 'Red Sea';
SELECT event_type, SUM(CASE WHEN gender = 'Female' THEN visitor_count ELSE 0 END) AS female_visitors, SUM(CASE WHEN gender = 'Male' THEN visitor_count ELSE 0 END) AS male_visitors FROM events WHERE event_type = 'Performing Arts' GROUP BY event_type;
SELECT threat, SUM(exploited) as total_exploited FROM vulnerabilities WHERE timestamp >= '2022-04-01' AND timestamp < '2022-07-01' GROUP BY threat ORDER BY total_exploited DESC LIMIT 5;
SELECT SUM(num_initiatives) FROM open_data INNER JOIN world_countries ON open_data.country = world_countries.country WHERE open_data.year = 2017;
SELECT MineID, SUM(Quantity) FROM ExtractionData WHERE Date BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY MineID;
SELECT SUM(trials) FROM clinical_trials WHERE country = 'CountryB' AND year BETWEEN 2017 AND 2019;
SELECT supplier_id, AVG(safety_rating) as avg_safety_rating, YEAR(source_date) as year FROM IngredientSource WHERE source_date >= '2022-01-01' AND source_date <= '2022-12-31' GROUP BY supplier_id, YEAR(source_date);
UPDATE vulnerabilities SET description = 'Updated description of Brute Force Vulnerability' WHERE id = 5 AND severity = 'High';
SELECT (Smokers / Total) * 100 FROM Smoking WHERE Country = 'Australia';
SELECT production_volume FROM north_sea_oil_production WHERE year = 2020 AND region = 'North Sea';
SELECT dc.category, SUM(s.amount) as total_sales FROM sales s JOIN drug_categories dc ON s.category_id = dc.id WHERE s.sale_region = 'America' GROUP BY dc.category;
SELECT SUM(price * quantity) FROM sales INNER JOIN inventory ON sales.inventory_id = inventory.inventory_id INNER JOIN strains ON inventory.strain_id = strains.strain_id WHERE strains.type = 'Sativa' AND dispensary_id = (SELECT dispensary_id FROM dispensaries WHERE name = 'Happy High') AND sale_date BETWEEN '2022-07-01' AND '2022-09-30';
INSERT INTO community_engagement (id, name, location, date) VALUES (1, 'Festa Junina', 'Brazil', '2023-06-24');
SELECT Neighborhood.neighborhood_name, AVG(Building.carbon_offset) as avg_carbon_offset FROM Neighborhood JOIN Building ON Neighborhood.neighborhood_id = Building.neighborhood_id GROUP BY Neighborhood.neighborhood_name;
SELECT year, metric_type, value FROM agricultural_metrics WHERE year = 2023 ORDER BY metric_type, value;
SELECT MAX(age) FROM ptsd_diagnosis WHERE condition = 'PTSD' AND country = 'Japan';
SELECT SUM(runtime) FROM Movies WHERE genre_id = (SELECT id FROM Genres WHERE genre = 'Horror') AND production_country = 'Spain';
SELECT MAX(duration) FROM SpaceMissions INNER JOIN Astronauts ON SpaceMissions.leader_id = Astronauts.id WHERE Astronauts.gender = 'Female';
SELECT SUM(num_incidents) FROM incidents WHERE sector = 'manufacturing' AND year = 2021;
SELECT COUNT(*) FROM patient_improvement WHERE improvement_status = 'No Improvement' AND treatment_center = 'clinic_i';
SELECT COUNT(*) FROM building_permits WHERE building_type = 'Commercial' AND state = 'Texas';
SELECT MAX(well_depth) FROM wells WHERE region = 'Gulf of Mexico';
SELECT 'Mobile' AS service, COUNT(DISTINCT subscriber_id) FROM mobile_subscribers WHERE network_provider = 'XYZ' UNION ALL SELECT 'Broadband', COUNT(DISTINCT subscriber_id) FROM broadband_subscribers WHERE network_provider = 'XYZ';
UPDATE AgriculturalInnovations SET year_introduced = 2021 WHERE innovation_name = 'Autosteer System';
SELECT MIN(population) FROM city_data WHERE country = 'CountryB';
SELECT MIN(funding) FROM startups WHERE industry = 'FinTech' AND founding_year > 2017;
SELECT healthcareProvider, languageSpoken FROM CulturalCompetency WHERE culturalBackground = 'East Asian';
SELECT AVG(JourneySpeed) AS AvgJourneySpeed FROM Journeys WHERE MONTH(JourneyDate) = 7;
SELECT COUNT(*) FROM vendors WHERE conference = 'Sydney Sustainable Tourism Conference';
SELECT COUNT(*) FROM AircraftManufacturing WHERE manufacturer = 'Boeing';
SELECT AVG(donation_amount) FROM donors WHERE country = 'USA';
SELECT artists.name, COUNT(songs.id) AS song_count FROM artists JOIN songs_artists ON artists.id = songs_artists.artist_id JOIN songs ON songs_artists.song_id = songs.id WHERE songs.genre = 'jazz' GROUP BY artists.name ORDER BY song_count DESC LIMIT 3;
SELECT SUM(revenue) FROM hotel_revenue WHERE is_eco_friendly = TRUE AND quarter = 'Q2' AND hotel_name LIKE '%France%';
SELECT name, age, last_maintenance FROM bridges WHERE age > 50;
UPDATE strategy SET focus = 'Cyber Defense' WHERE name = 'National Security Strategy' AND region_id = (SELECT id FROM region WHERE name = 'North America');
SELECT D.DishName, R.RestaurantName, (D.DishPrice - D.CostPrice) AS Markup, D.DishPrice, D.CostPrice FROM Dishes D INNER JOIN Restaurants R ON D.RestaurantID = R.RestaurantID WHERE R.City = 'Dallas' AND (D.DishPrice - D.CostPrice) > 200;
SELECT SUM(SalesAmount) FROM MusicSales WHERE ArtistGender = 'Female';
SELECT revenue_date, SUM(revenue_amount) AS daily_revenue FROM Revenue WHERE revenue_date BETWEEN DATE_SUB(NOW(), INTERVAL 7 DAY) AND NOW() GROUP BY revenue_date;
SELECT SUM(PlayerCount) as TotalPlayers FROM PlayerCount WHERE Genre = 'FPS';
SELECT SUM(booking_amount) FROM ota_bookings WHERE region = 'APAC' AND YEAR(booking_date) = 2021;
SELECT COUNT(*) FROM Employees WHERE Gender = 'Female';
SELECT id, country, num_workers FROM Suppliers WHERE country = 'India' ORDER BY num_workers DESC LIMIT 1;
SELECT region, AVG(return) as avg_return FROM stocks WHERE region = 'Asia' GROUP BY region ORDER BY avg_return DESC;
DELETE FROM habitats WHERE location = 'Antarctica';
SELECT MAX(score) FROM inspection_scores WHERE location = 'California';
SELECT MAX(production_quantity) FROM production WHERE year = 2020 AND element = 'Europium';
SELECT AVG(Weight) FROM Site_G WHERE Material = 'Wood';
SELECT UnionID, COUNT(DISTINCT WorkplaceID) as NumWorkplaces FROM Workplace GROUP BY UnionID;
SELECT s.country, b.brand, SUM(s.quantity) AS total_quantity FROM Sales s JOIN Brands b ON s.brand_id = b.id GROUP BY s.country, b.brand;
SELECT state, AVG(CO2_emission) FROM Buildings GROUP BY state;
SELECT gender, COUNT(*) as total_workers FROM workforce GROUP BY gender;
SELECT AVG(speed) FROM vessels WHERE name = 'VesselF' AND timestamp BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) AND CURRENT_DATE;
SELECT heritage_sites.name, heritage_sites.location FROM heritage_sites INNER JOIN preservation_status ON heritage_sites.preservation_program = preservation_status.status WHERE preservation_status.status = 'Active';
SELECT MAX(temperature) FROM temperature_data WHERE field_id = 'Field002' AND timestamp BETWEEN DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 7 DAY) AND CURRENT_TIMESTAMP;
SELECT Program, COUNT(*) FROM Volunteers WHERE LastContactDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH) GROUP BY Program;
SELECT COUNT(*) FROM Airports WHERE Location = 'Pacific' AND NumberOfRunways > 5;
INSERT INTO veteran_employment (id, company, location, job_title, num_veterans) VALUES (1, 'Lockheed Martin', 'Arlington, VA', 'Software Engineer', 50), (2, 'Raytheon Technologies', 'Cambridge, MA', 'Hardware Engineer', 35);
UPDATE green_buildings SET carbon_offset_value = 250.5 WHERE id = 1;
SELECT AVG(points_per_game) FROM players WHERE country = 'USA';
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM canadian_accommodations) as percentage FROM canadian_accommodations WHERE eco_friendly = true;
SELECT Year, Project_Type, COUNT(*) FROM Infrastructure_Projects WHERE State LIKE '%Western%' AND Year >= 2015 GROUP BY Year, Project_Type;
SELECT s.station_name, COUNT(t.station_id) as num_entries FROM trips t JOIN stations s ON t.station_id = s.station_id WHERE s.line = 'Red Line' AND t.entry_time::date = '2022-07-04' GROUP BY s.station_name ORDER BY num_entries ASC LIMIT 1;
SELECT malware_type, COUNT(*) as detection_count FROM malware_detections WHERE timestamp >= NOW() - INTERVAL 1 YEAR GROUP BY malware_type ORDER BY detection_count DESC LIMIT 3;
SELECT MAX(Points) FROM Players;
SELECT Platform, COUNT(DISTINCT GameGenre) AS Unique_Genres, COUNT(*) AS Total_Games FROM Games WHERE VR_Game = FALSE GROUP BY Platform;
UPDATE facilitators SET cases_facilitated = 50, organization_id = 8002 WHERE facilitator_id = 7003;
SELECT Programs.ProgramName, AVG(Donations.Amount) AS AvgDonation, COUNT(Donations.DonationID) AS TotalDonations FROM Programs JOIN Donations ON Programs.ProgramID = Donations.ProgramID GROUP BY Programs.ProgramName;
SELECT MAX(volume) FROM wells WHERE location = 'Caspian Sea' AND YEAR(date) = 2021;
UPDATE OnlineEngagement SET AvgDuration = 60.0 WHERE EventName = 'Webinar';
SELECT COUNT(*) FROM spacecraft WHERE country = 'China';
SELECT country, SUM(species_count) FROM marine_species_by_country GROUP BY country;
SELECT MIN(production) FROM BalticSea.wells;
SELECT defendants_by_race.race, COUNT(*) as num_defendants FROM defendants_by_race WHERE defendants_by_race.incarcerated = true AND defendants_by_race.incarceration_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY defendants_by_race.race;
DELETE FROM products WHERE id = 7;
SELECT MAX(attendance) FROM events WHERE category = 'performing arts';
SELECT MIN(production_quantity) FROM wells WHERE location = 'North Sea';
SELECT building_name FROM green_buildings WHERE square_footage > 450000;
SELECT name, usage_volume FROM feed_additives WHERE usage_volume = (SELECT MAX(usage_volume) FROM feed_additives);
SELECT c.name, op.production as total_production FROM countries c JOIN oil_production op ON c.id = op.country_id WHERE op.year = 2021 GROUP BY c.name ORDER BY total_production DESC LIMIT 5;
SELECT SUM(investment.amount) FROM investment INNER JOIN organization ON investment.organization_id = organization.id WHERE organization.country = 'India' AND investment.esg_score > 0;
SELECT s.name AS store_name, p.id AS product_id, p.category AS category, SUM(s.quantity) AS total_quantity FROM sales s JOIN products p ON s.product_id = p.id WHERE p.is_sustainable = true GROUP BY s.store_id, p.id, p.category ORDER BY total_quantity DESC;
SELECT region, AVG(recycling_rate) FROM Recycling_Rates_All WHERE region = 'West' GROUP BY region;
SELECT item_name FROM menu_engineering WHERE is_86ed = TRUE AND profit_margin >= 0.6;
SELECT MAX(duration) FROM Workouts WHERE locationId IN (SELECT id FROM Locations WHERE region = 'Western');
SELECT species, SUM(biomass) FROM species_production WHERE year = 2022 GROUP BY species;
SELECT AVG(rating) FROM hotels WHERE country = 'USA' AND num_reviews > 100;
SELECT EXTRACT(MONTH FROM DonationDate) as Month, AVG(DonationAmount) as AvgDonation FROM Donations WHERE DonationDate BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 12 MONTH) AND CURRENT_DATE GROUP BY Month ORDER BY Month;
INSERT INTO workplaces (id, name, state, safety_violation) VALUES (1, 'OPQ Company', 'Washington', true);
SELECT MAX(pollution_level) FROM indian_ocean;
SELECT YEAR(measurement_date) AS year, AVG(thickness) AS avg_thickness_change, COUNT(*) AS total_measurements FROM permafrost_data WHERE location LIKE '%Arctic%' GROUP BY year;
 UPDATE smart_cities.buildings SET reduction_percentage = reduction_percentage + 2 FROM smart_cities.buildings_view WHERE city = 'San Francisco' AND reduction_percentage < 15; 
SELECT city, SUM(attendance) as total_attendance, AVG(attendance) as avg_attendance_per_event FROM events GROUP BY city;
SELECT vulnerability_severity, COUNT(*) as vulnerability_count FROM vulnerabilities WHERE vulnerability_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY vulnerability_severity;
SELECT COUNT(*) FROM Members LEFT JOIN SmartwatchOwners ON Members.MemberID = SmartwatchOwners.MemberID WHERE Members.MembershipType = 'Basic' AND SmartwatchOwners.MemberID IS NULL;
SELECT name, certifications FROM Restaurants;
DELETE FROM players WHERE id = 123;
SELECT A.Gender, COUNT(Aworks.ArtworkID) AS TotalArtworks, AVG(Aworks.Price) AS AvgPrice FROM Artists A INNER JOIN Artworks Aworks ON A.ArtistID = Aworks.ArtistID GROUP BY A.Gender;
SELECT * FROM veteran_employment WHERE salary > 75000;
SELECT worker_id, years_experience FROM (SELECT worker_id, years_experience, ROW_NUMBER() OVER (ORDER BY years_experience DESC) as rn FROM years_of_experience) x WHERE rn <= 5;
SELECT cuisine, SUM(revenue) as total_revenue FROM Restaurants WHERE revenue >= 50000 GROUP BY cuisine;
SELECT SUM(co2_emissions) FROM emissions WHERE country = 'US' AND year = 2020;
SELECT MAX(construction_cost) FROM pipelines WHERE location = 'Alberta';
SELECT MAX(ClaimAmount) FROM Claim JOIN Policy ON Claim.PolicyNumber = Policy.PolicyNumber WHERE Policy.State = 'California';
SELECT DonorName, Amount FROM Donations d JOIN Donors don ON d.DonorID = don.DonorID WHERE Amount > 700;
SELECT AVG(severity) FROM web_app_vulnerabilities;
SELECT p.country, p.tons FROM production p WHERE p.element = 'Neodymium' AND p.year = 2021 GROUP BY p.country, p.tons;
SELECT a.attorney_name FROM attorneys a LEFT JOIN cases c ON a.attorney_id = c.attorney_id WHERE c.case_outcome IS NULL;
SELECT genre, SUM(revenue) FROM songs WHERE release_year >= 2016 GROUP BY genre;
SELECT COUNT(*) FROM PlayerPlatforms WHERE Platform = 'PlayStation';
INSERT INTO aircraft_manufacturing (id, manufacturer, model, city, country, manufacturing_year) VALUES (1, 'Airbus', 'A320', 'Toulouse', 'France', 2018);
SELECT EXTRACT(QUARTER FROM sale_date) AS quarter, (SUM(CASE WHEN vehicle_type = 'electric' THEN quantity ELSE 0 END)::DECIMAL / SUM(quantity)) * 100 AS market_share FROM schema.vehicle_sales GROUP BY quarter;
SELECT AVG(COUNT(CASE WHEN Approval THEN 1 END)) FROM LegalAid WHERE Community = 'Indigenous' GROUP BY EXTRACT(MONTH FROM SubmissionDate);
SELECT region, SUM(tons) as total_tons FROM gold_mines WHERE YEAR(date) = 2021 AND QUARTER(date) = 3 GROUP BY region;
SELECT COUNT(*) FROM news_articles WHERE country = 'France' AND publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 30 DAY);
SELECT SUM(annual_catch) FROM Fisheries WHERE location = 'Arctic';
SELECT AVG(m.data_usage) FROM mobile_customers m JOIN regions r ON m.region = r.region WHERE m.plan_type = 'postpaid' AND r.region = 'Chicago';
SELECT COUNT(*) FROM Videos WHERE category = 'Sports' AND duration > 30 AND production_country IN ('South Africa', 'Nigeria', 'Egypt') AND production_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);
SELECT SUM(budget) FROM r_and_d_budget WHERE technology = 'Military Technology' AND year = 2021;
SELECT name FROM green_buildings WHERE sustainability_rating = (SELECT MIN(sustainability_rating) FROM green_buildings);
SELECT 100.0 * COUNT(*) FILTER (WHERE attendance > 2000) OVER (PARTITION BY NULL) / COUNT(*) OVER (PARTITION BY NULL) AS percentage;
SELECT MAX(budget) FROM initiatives WHERE name LIKE '%Digital Divide%';
SELECT policy_id, policy_name FROM Policies WHERE policy_category = 'password complexity' AND policy_date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) AND CURRENT_DATE;
DROP TABLE claims;
SELECT Province, TBCases FROM Provinces;
SELECT SUM(amount) FROM InvestmentsCountry WHERE country = 'Asia' AND sector = 'SocialImpact';
SELECT DISTINCT eai_techniques.name FROM eai_techniques JOIN ai_applications ON eai_techniques.technique_id = ai_applications.technique_id WHERE ai_applications.country = 'USA';
SELECT s.name FROM Strains s JOIN (SELECT strain_id, COUNT(*) as sales_count FROM Sales WHERE sale_date < '2020-06-01' GROUP BY strain_id HAVING sales_count >= 5) sub ON s.id = sub.strain_id;
SELECT AVG(Attendees) FROM Events WHERE Country = 'Canada' AND EventDate BETWEEN '2021-01-01' AND '2021-12-31';
SELECT COUNT(*) FROM sites WHERE country = 'Japan' AND region = 'Hokkaido';
SELECT department, COUNT(*) as num_female_employees FROM Employees WHERE gender = 'Female' GROUP BY department;
SELECT game_genre, COUNT(*) as count FROM players WHERE age < 30 GROUP BY game_genre ORDER BY count DESC LIMIT 1;
SELECT SUM(Calories) FROM Meals WHERE MealPlan = 'Vegetarian';
SELECT AVG(budget) FROM RuralInfrastructure WHERE country = 'Colombia';
SELECT departments.department, AVG(carbon_emissions) FROM mining_operations INNER JOIN carbon_emissions ON mining_operations.employee_id = carbon_emissions.employee_id INNER JOIN departments ON mining_operations.employee_id = departments.employee_id GROUP BY departments.department;
SELECT SUM(revenue) as total_revenue FROM RetailSales WHERE sustainable = TRUE AND year = 2021;
DELETE FROM academic_publications WHERE title LIKE '%Deep Learning%';
SELECT MAX(response_time) FROM medical_emergencies WHERE incident_time >= '2022-01-01' AND incident_time < '2022-02-01' AND city = 'Miami';
SELECT artist_name, AVG(donation_value), SUM(piece_count) FROM ArtDonations GROUP BY artist_name;
SELECT AVG(streams/2) FROM SongStreams WHERE song = 'Brown Skin Girl';
SELECT COUNT(*) FROM community_dev_init WHERE region = 'Middle East' AND budget > 750000;
SELECT COUNT(DISTINCT name) FROM professor WHERE gender = 'Female' AND department_id IN (SELECT id FROM department WHERE name = 'Engineering') AND grant_amount IS NOT NULL;
SELECT product_id, product_name, rating FROM Moisturizers ORDER BY rating DESC LIMIT 3;
SELECT metric_name, MAX(value) as max_value FROM agricultural_innovation_metrics WHERE measurement_date >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH) GROUP BY metric_name;
SELECT manufacturer, SUM(sustainable_material_quantity) FROM manufacturer GROUP BY manufacturer;
SELECT name FROM suppliers WHERE food_safety_violations > 0 AND corrective_actions = 0 AND date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);
SELECT COUNT(*) FROM Employees WHERE department = 'MiningOperations' AND date_hired <= '2022-06-01';
SELECT SUM(mobile_revenue.revenue + broadband_revenue.revenue) FROM mobile_revenue INNER JOIN broadband_revenue ON mobile_revenue.subscriber_id = broadband_revenue.subscriber_id WHERE mobile_revenue.year = 2021 AND broadband_revenue.year = 2021 AND mobile_revenue.country = 'Canada' AND broadband_revenue.country = 'Canada';
SELECT Genre.Name, SUM(GenreTime.Revenue) as TotalRevenue FROM GenreTime INNER JOIN Genre ON GenreTime.GenreID = Genre.GenreID WHERE GenreTime.TimeID = (SELECT TimeID FROM Time WHERE Year=2019) GROUP BY Genre.Name;
SELECT Initiative, MAX(CarbonOffset) AS MaxCarbonOffset FROM MaxCarbonOffset;
SELECT Country, AVG(Expenditure/Population) OVER (PARTITION BY Country ORDER BY Year ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS AvgMilitaryExpenditurePerCapita, RANK() OVER (ORDER BY AVG(Expenditure/Population) DESC) AS Rank FROM MilitaryExpenditure GROUP BY Country ORDER BY Rank;
SELECT SUM(energy_consumed) FROM residential_energy WHERE country IN ('Canada', 'Australia') AND year = 2020;
SELECT department, (num_veterans/total_employees)*100 AS veteran_rate FROM veteran_employment WHERE year = 2020 ORDER BY veteran_rate DESC LIMIT 1;
SELECT name FROM organizations WHERE budget = (SELECT MAX(budget) FROM organizations);
SELECT aquafarm_id, AVG(temp_diff) AS avg_temp_change, EXTRACT(HOUR FROM timestamp) AS hour FROM (SELECT aquafarm_id, temperature, LAG(temperature) OVER (PARTITION BY aquafarm_id ORDER BY timestamp) AS prev_temperature, (temperature - COALESCE(prev_temperature, temperature)) AS temp_diff FROM temperature_data) temperature_changes JOIN aquafarms ON temperature_changes.aquafarm_id = aquafarms.id WHERE location LIKE 'Arctic%' GROUP BY aquafarm_id, hour;
SELECT AVG(temperature) FROM WeatherData WHERE crop_type = 'Corn';
SELECT AVG(Duration) FROM GameDurations WHERE Game = 'Fantasy Football' GROUP BY PlayerID HAVING COUNT(Session) > 5;
SELECT COUNT(*) FROM post JOIN user ON post.user_id = user.id WHERE user.region = 'americas' AND post.posted_at > '2021-06-01';
SELECT industry, SUM(funding) as total_funding FROM investments WHERE year BETWEEN 2016 AND 2021 GROUP BY industry ORDER BY total_funding DESC LIMIT 3;
SELECT COUNT(*) FROM patients WHERE gender = 'Male' AND therapy = 'Therapy' AND country = 'India';
SELECT r.UserID, r.RegistrationDate, r.Game FROM Registrations r LEFT JOIN Transactions t ON r.UserID = t.UserID AND r.Game = t.Game WHERE t.TransactionID IS NULL AND r.Game = 'Strategy';
SELECT SUM(funding_received) FROM programs WHERE category = 'Education';
SELECT target_country, COUNT(*) as num_incidents FROM incidents WHERE incident_date >= DATEADD(year, -1, GETDATE()) GROUP BY target_country ORDER BY num_incidents DESC LIMIT 3;
SELECT p.program_type, SUM(r.amount) FROM art_programs p INNER JOIN funding_received r ON p.id = r.program_id WHERE p.start_date <= '2022-12-31' AND p.end_date >= '2022-01-01' GROUP BY p.program_type;
SELECT SUM(participants) FROM community_engagement WHERE region = 'North America';
SELECT COUNT(*) FROM deep_sea_species dss INNER JOIN ocean_acidification oa ON dss.habitat = oa.location WHERE oa.level < 7.5;
SELECT age, AVG(score) AS avg_score, STD(score) AS std_score FROM media_literacy WHERE region = 'Asia' GROUP BY age;
SELECT SUM(Revenue) FROM Attorneys WHERE Practice = 'Civil';
SELECT country, COUNT(*), SUM(budget) FROM projects WHERE country IN ('Argentina', 'Brazil', 'Chile', 'Colombia', 'Peru') GROUP BY country;
SELECT lp.PrecedentName, a.AttorneyName, AVG(ap.BillingAmount) AS AvgBillingAmount FROM LegalPrecedents lp JOIN AttorneyPrecedents ap ON lp.PrecedentID = ap.PrecedentID JOIN Attorneys a ON ap.AttorneyID = a.AttorneyID GROUP BY lp.PrecedentName, a.AttorneyName;
SELECT MIN(depth) FROM marine_protected_areas WHERE country = 'Atlantic Ocean';
SELECT * FROM vulnerabilities WHERE status = 'open' AND first_reported BETWEEN '2021-04-01' AND '2021-06-30';
SELECT SUM(biomass) FROM marine_species JOIN marine_protected_areas ON marine_species.mpa_id = marine_protected_areas.mpa_id WHERE marine_protected_areas.avg_depth > 200;
SELECT F.factory_name, SUM(P.units_produced) as total_units FROM Production P JOIN Factories F ON P.factory_id = F.factory_id WHERE P.garment_type = 'T-shirt' AND P.production_date BETWEEN '2022-04-01' AND '2022-04-30' GROUP BY F.factory_name;
SELECT AthleteID FROM AthleteWellbeing WHERE AthleteID NOT IN (SELECT AthleteID FROM AthleteIllnesses WHERE IllnessDate >= DATEADD(YEAR, -1, GETDATE()));
SELECT SUM(count) FROM (SELECT ocean, COUNT(*) as count FROM deep_sea_expeditions GROUP BY ocean) as subquery;
SELECT individual_name, COUNT(num_donations) + COUNT(num_investments) as total_contributions FROM individuals GROUP BY individual_name ORDER BY total_contributions DESC;
SELECT name, type, year, country FROM ArtHeritage WHERE year <= (EXTRACT(YEAR FROM CURRENT_DATE) - 50);
SELECT mine_id, SUM(co2_emissions) FROM environmental_impact GROUP BY mine_id;
SELECT AVG(co2_emissions_reduction) FROM co2_emissions WHERE region = 'Europe' AND initiative_name IN ('Climate Adaptation Fund', 'Green Cities', 'Resilient Infrastructure');
SELECT COUNT(*) FROM eco_accommodations WHERE country IN ('Europe');
SELECT SUM(Amount) FROM Budget WHERE Year = 2020 AND Category = 'Infrastructure';
DELETE FROM MusicSales WHERE SaleID = 3;
SELECT team FROM sales_2 WHERE quantity < (SELECT MIN(quantity) FROM sales_2);
SELECT AVG(gas_limit) as avg_gas_limit FROM transactions WHERE timestamp >= DATE_SUB(NOW(), INTERVAL 30 DAY);
SELECT assessment_date, risk_level FROM geopolitical_risk_assessments WHERE risk_level = 'High';
DELETE FROM donations WHERE donor_id NOT IN (SELECT donor_id FROM (SELECT donor_id, MAX(donation_amount) AS max_donation FROM donations GROUP BY donor_id) t WHERE max_donation > 10000);
SELECT AVG(amount) FROM rd_expenditures WHERE year = 2019 GROUP BY year;
SELECT u.username, COUNT(p.user_id) as post_count FROM users u JOIN posts p ON u.id = p.user_id WHERE p.category = 'music' AND p.timestamp >= '2021-06-01' GROUP BY u.username ORDER BY post_count DESC LIMIT 3;
SELECT AVG(cost) FROM Projects WHERE category = 'Waste Management' AND year IN (2019, 2020);
SELECT (COUNT(*) FILTER (WHERE State = 'California') * 100.0 / COUNT(*)) AS Percentage FROM Sales INNER JOIN ElectricVehicles ON Sales.VehicleId = ElectricVehicles.Id WHERE Type = 'Electric' AND EXTRACT(YEAR FROM SaleDate) = 2021;
SELECT COUNT(*) FROM marine_species_research WHERE location = 'Atlantic Ocean' AND population > 10000;
SELECT MIN(WorkoutDuration) FROM WorkoutData INNER JOIN UserData ON WorkoutData.UserID = UserData.UserID WHERE Country = 'United States' AND WorkoutDate >= '2022-05-01' AND WorkoutDate <= '2022-05-31';
SELECT farmer_id, SUM(quantity) as total_quantity FROM Crops WHERE harvest_date >= '2022-01-01' AND harvest_date < '2023-01-01' GROUP BY farmer_id ORDER BY total_quantity DESC;
SELECT MAX(c.AccountBalance) FROM Customers c INNER JOIN Investments i ON c.CustomerID = i.CustomerID WHERE i.Sector = 'Technology';
SELECT Cities.City, COUNT(Students.StudentID) as NumberOfStudents FROM Cities INNER JOIN Students ON Cities.CityID = Students.CityID INNER JOIN Accommodations ON Students.StudentID = Accommodations.StudentID WHERE Accommodations.Date BETWEEN DATEADD(year, -1, GETDATE()) AND GETDATE() GROUP BY Cities.City;
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cases WHERE year = 2021)) as Percentage FROM cases WHERE resolution_type = 'Restorative Justice' AND year = 2021;
SELECT CASE WHEN Customers.Age < 30 THEN 'Under 30' WHEN Customers.Age BETWEEN 30 AND 50 THEN '30-50' ELSE 'Over 50' END as AgeRange, COUNT(Orders.OrderID) as NumberOfOrders FROM Customers JOIN Orders ON Customers.CustomerID = Orders.CustomerID GROUP BY AgeRange;
SELECT d.name  FROM dispensaries d  JOIN licenses l ON d.id = l.dispensary_id  LEFT JOIN sales s ON d.id = s.dispensary_id WHERE d.state = 'California' AND s.id IS NULL;
SELECT gender, AVG(obese::INT) as obesity_rate FROM health_survey_3 WHERE state = 'Texas' AND year = 2019 GROUP BY gender;
SELECT packages.id, packages.weight, package_types.name FROM packages JOIN package_types ON packages.id = package_types.id WHERE packages.weight IN (SELECT weight FROM (SELECT packages.weight FROM packages JOIN warehouse_routes ON packages.id = warehouse_routes.package_id JOIN warehouses ON warehouse_routes.warehouse_id = warehouses.id JOIN countries ON warehouses.country = countries.name WHERE countries.name = 'United States' AND packages.weight IS NOT NULL GROUP BY packages.weight ORDER BY SUM(packages.weight) DESC LIMIT 5) AS subquery) ORDER BY packages.weight DESC;
SELECT r.name, SUM(t.area) + SUM(h.area) FROM timber t JOIN habitat h ON t.region_id = h.region_id JOIN region r ON t.region_id = r.id GROUP BY r.name;
SELECT Vendor, SUM(Calories) as TotalCalories FROM Meals GROUP BY Vendor;
SELECT name FROM Players WHERE three_pointers = (SELECT MAX(three_pointers) FROM Players);
SELECT director, COUNT(*) as total_movies FROM movies GROUP BY director HAVING total_movies > 5;
SELECT SUM(budget) FROM (SELECT budget FROM InfrastructureB WHERE city = 'Montreal' UNION ALL SELECT budget FROM InfrastructureB WHERE city = 'Ottawa') AS Total;
SELECT city, SUM(violation_count) as total_violations FROM parity_violations GROUP BY city;
SELECT COUNT(*) FROM cases INNER JOIN attorneys ON cases.attorney_id = attorneys.attorney_id WHERE attorneys.gender = 'Female' AND attorneys.firm = 'Anderson';
SELECT SUM(quantity * price) FROM sales WHERE product_id = 1 AND EXTRACT(MONTH FROM purchase_date) = 2;
SELECT COUNT(*) FROM carbon_offset_initiatives WHERE city = 'Paris' AND launch_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR);
SELECT director, AVG(production_budget) AS avg_budget, COUNT(*) AS num_movies FROM movie GROUP BY director ORDER BY avg_budget DESC LIMIT 1;
SELECT crop, COUNT(*) FROM UrbanAgriCrop WHERE region = 'South America' GROUP BY crop;
SELECT SUM(funding_rounds.size) FROM companies INNER JOIN funding_rounds ON companies.id = funding_rounds.company_id WHERE companies.founder_identity = 'LGBTQ+' AND companies.city = 'New York' AND companies.state = 'NY';
SELECT SUM(score) FROM financial_wellbeing_2 WHERE country = 'United States';
SELECT SUM(sale_value) FROM Military_Equipment_Sales WHERE country = 'India';
SELECT AVG(spectators) FROM world_cup WHERE home_team = ANY (SELECT team FROM (VALUES ('Russia'), ('Egypt'), ('Morocco'), ('Portugal')) AS t(team));
SELECT city, AVG(ticket_price) FROM CulturalEvents GROUP BY city;
SELECT month, num_tours FROM egypt_virtual_tours;
CREATE TABLE public.precipitation (    id SERIAL PRIMARY KEY,    location VARCHAR(255),    date DATE,    inches FLOAT);
SELECT h.hotel_name, MIN(hp.price) FROM budget_hotels h JOIN hotel_prices hp ON h.id = hp.hotel_id GROUP BY h.hotel_name;
SELECT state, MAX(production_value) FROM agroecology.organic_farms GROUP BY state;
SELECT SUM(num_projects) FROM renewable_energy WHERE country = 'Brazil' AND year BETWEEN 2016 AND 2018;
SELECT quantity FROM inventory WHERE item = 'Organic Spinach';
SELECT * FROM rural_infrastructure WHERE status = 'completed';
SELECT (SUM(sale_revenue) / (SELECT SUM(sale_revenue) FROM SalesData WHERE sale_date >= DATEADD(month, -1, GETDATE()))) * 100 as revenue_percentage FROM SalesData WHERE product_id IN (SELECT product_id FROM Products WHERE price > 50) AND sale_date >= DATEADD(month, -1, GETDATE());
SELECT MIN(DonationAmount) FROM Donations WHERE Country = 'India' AND YEAR(DonationDate) = 2022;
UPDATE Policyholders SET RiskCategory = 'High Risk' WHERE ID IN (SELECT PolicyholderID FROM Claims WHERE ClaimAmount > (SELECT AVG(ClaimAmount) FROM Claims));
SELECT item_name, price FROM Menu WHERE category = 'Entrees' ORDER BY price DESC LIMIT 1;
SELECT ethnicity, type, COUNT(*) as case_count, ROW_NUMBER() OVER(PARTITION BY ethnicity ORDER BY COUNT(*) DESC) as sequence FROM defendants JOIN courts ON defendants.case_id = courts.id GROUP BY ethnicity, type;
SELECT policy_id, sum_insured, name FROM policy_info INNER JOIN (SELECT policy_id, CONCAT(first_name, ' ', last_name) AS name FROM policyholder) AS policyholder ON policy_info.policy_id = policyholder.policy_id WHERE region = 'Asia';
SELECT DISTINCT vessels_extended.vessel_name FROM incident_reports INNER JOIN vessels_extended ON vessels_extended.id = (incident_reports.id + 1 OR incident_reports.id - 1) WHERE incident_type = 'accident' AND latitude BETWEEN 1.5 AND 22.5 AND longitude BETWEEN 99.5 AND 122.5 AND YEAR(timestamp) = 2018;
SELECT name, claim_amount FROM (SELECT name, claim_amount, ROW_NUMBER() OVER (PARTITION BY group ORDER BY claim_amount ASC) rn FROM underwriting WHERE group = 'Low Risk') sub WHERE rn = 1;
INSERT INTO ticket_sales (sale_id, fan_id, team, event_date, tickets_sold, revenue) VALUES (3, 4, 'Bouncing Bears', '2022-07-27', 3, 225.00);
SELECT EXTRACT(MONTH FROM program_date) as month, COUNT(*) as num_programs FROM education_programs WHERE EXTRACT(YEAR FROM program_date) = 2020 GROUP BY month;
SELECT MAX(quantity) FROM Deliveries
SELECT products.name, SUM(raw_materials.amount) AS total_spent FROM raw_materials JOIN products ON raw_materials.product_id = products.product_id WHERE raw_materials.material_id > (SELECT MAX(material_id) - 3 FROM raw_materials) GROUP BY products.name;
WITH new_research AS (VALUES (1, 'Black Holes and Singularities', 'Study of black hole properties and formation of singularities', 'Dr. Rajesh Patel', 'Cambridge University'), (2, 'Dark Matter and Dark Energy', 'Investigating the nature of dark matter and dark energy', 'Dr. Sophia Rodriguez', 'Princeton University')) INSERT INTO Astrophysics_Research (ARid, Title, Description, Researcher_Name, University) SELECT * FROM new_research;
DELETE FROM DefenseContracts WHERE Amount > 500000.00;
SELECT MAX(passengers) FROM Aircraft;
DELETE FROM crime_statistics WHERE crime_type = 'robbery' AND location = 'Miami';
SELECT Ports.PortName FROM Ports INNER JOIN Vessels ON Ports.PortID = Vessels.PortID WHERE Vessels.VesselName = 'Kota Pertama';
SELECT initiative_type, funding_source, COUNT(*) as total_initiatives FROM criminal_justice_reform GROUP BY initiative_type, funding_source;
SELECT MAX(WasteGeneration) FROM MiningOperations WHERE Location LIKE 'South%';
CREATE VIEW JobTitlesDepartments AS SELECT JobTitle, Department FROM TalentAcquisition;
SELECT country, AVG(transparency_score) AS avg_score FROM products GROUP BY country ORDER BY avg_score DESC LIMIT 1;
SELECT MAX(ticket_price) FROM Exhibitions WHERE city = 'Tokyo' AND year = 2021;
SELECT COUNT(*) FROM tourists INNER JOIN stays ON tourists.tourist_id = stays.tourist_id INNER JOIN hotels ON stays.hotel_id = hotels.hotel_id WHERE hotels.star_rating = 5 AND tourists.country_visited = 'New Zealand' AND stays.check_out <= '2020-12-31';
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM africa_tourists WHERE visited_africa = TRUE)) AS percentage FROM africa_tourists WHERE visited_africa = TRUE AND took_safari = TRUE;
SELECT region, COUNT(*) AS num_shipments, SUM(revenue) AS total_revenue FROM logistics.shipments WHERE QUARTER(shipment_date) = 1 GROUP BY region;
SELECT name FROM Menu WHERE sustainable = FALSE;
SELECT SUM(um.member_status = 'active'::INTEGER) FROM union_members um JOIN workplaces w ON um.workplace_id = w.id WHERE w.sector = 'education';
SELECT c.id, c.name, COUNT(t.id) as total_investment_transactions, SUM(t.transaction_amount) as total_investment_amount FROM transactions t JOIN customers c ON t.account_id = c.id WHERE c.state = 'UK' AND t.transaction_type = 'investment' GROUP BY c.id, c.name;
SELECT ROUND(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM DiversionPrograms WHERE State = 'Georgia' AND YEAR(StartDate) = 2021), 2) as SuccessPercentage FROM DiversionPrograms WHERE State = 'Georgia' AND YEAR(StartDate) = 2021 AND Outcome = 'Successful';
SELECT AVG(funding_amount) FROM funding INNER JOIN company_founding ON funding.company_name = company_founding.company_name WHERE company_founding.founder_gender = 'Female';
SELECT SUM(total_revenue) FROM brands WHERE is_b_corp_certified = TRUE;
SELECT view_time, SUM(views) FROM TV_Show_Views WHERE show_title = 'Stranger Things' GROUP BY view_time;
SELECT SUM(player_games.playtime) FROM player_games JOIN players_vr ON player_games.player_id = players_vr.player_id JOIN games ON player_games.game_id = games.game_id WHERE players_vr.vr_headset IS NOT NULL AND games.genre = 'Action';
SELECT c.name, COUNT(*) FROM initiative i JOIN country c ON i.country = c.name WHERE i.launch_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 5 YEAR) GROUP BY c.name;
SELECT COUNT(*) * 1.0 / SUM(CASE WHEN Gender = 'Female' THEN 1 ELSE 0 END) FROM Employees WHERE Department = 'Engineering';
SELECT AVG(attendance) FROM events WHERE location = 'New York';
SELECT COUNT(*) FROM LanthanumShipments WHERE year = 2019 AND lost = TRUE;
SELECT tech_name, cost FROM smart_city_tech WHERE city = 'New York';
SELECT AVG(production_rate) FROM (SELECT well_id, production_rate FROM well_production WHERE well_type = 'Offshore' AND location = 'Norwegian Continental Shelf' ORDER BY production_rate DESC) WHERE row_number() OVER (ORDER BY production_rate DESC) <= 10;
SELECT AVG(streams) FROM Streams WHERE artist = 'Dua Lipa' AND country = 'Canada'
SELECT AVG(prevalence) FROM diseases WHERE region = 'South Asia' AND year = 2020;
UPDATE Vessels SET MaxSpeed = 27.5 WHERE Name = 'VesselA';
SELECT DISTINCT type FROM traditional_arts WHERE region = 'Asia';
SELECT Project.name, Mitigation.type, Mitigation.reduction_tonnes FROM Project INNER JOIN Mitigation ON Project.id = Mitigation.project_id WHERE Mitigation.reduction_tonnes > 2000;
SELECT MAX(total_funding) FROM startups WHERE industry = 'Finance' AND founder = 'Woman';
SELECT SUM(GasProduction) AS TotalGasProduction  FROM GasProduction WHERE FieldName IN ('FieldA', 'FieldB', 'FieldC');
SELECT 100.0 * SUM(CASE WHEN recycled_material THEN revenue ELSE 0 END) / SUM(revenue) FROM Sales;
SELECT product_category, AVG(production_output) as avg_monthly_output FROM production p JOIN products pr ON p.product_id = pr.product_id GROUP BY product_category, EXTRACT(MONTH FROM production_date), EXTRACT(YEAR FROM production_date);
UPDATE union_representatives SET name = 'Mike Lee' WHERE id = 3;
SELECT name, construction_date FROM bridges WHERE location = 'Washington';
SELECT city, AVG(cost) as avg_cost FROM properties WHERE coowners = 1 GROUP BY city;
DELETE FROM Donors WHERE ID = 4;
SELECT SUM(sales_volume) FROM sales JOIN products ON sales.product_id = products.product_id WHERE is_cruelty_free = TRUE AND product_type = 'makeup' AND country = 'US';
SELECT State, AVG(CASE WHEN EXTRACT(MONTH FROM ResolutionDate) IN (1,2,3,4,5,6) THEN 1 ELSE 0 END) as ResolutionPercentage FROM MentalHealthParityViolations WHERE ResolutionDate >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) AND ViolationDate < '2021-01-01' GROUP BY State;
DELETE FROM volunteers WHERE volunteer_id = 2;
SELECT MAX(CasesHandled) FROM Lawyers;
SELECT EXTRACT(MONTH FROM servicing_date) as month, COUNT(*) as num_vehicles FROM vehicle_servicing GROUP BY month;
SELECT t.team_name, sale_quarter, SUM(quantity) as total_tickets_sold FROM ticket_sales ts JOIN teams t ON ts.team_id = t.team_id GROUP BY t.team_name, sale_quarter;
SELECT Country, AVG(VisitorCount) as AvgArrivalRate FROM CountryVisitors GROUP BY Country ORDER BY AvgArrivalRate DESC;
SELECT District_Name, COUNT(*) OVER (PARTITION BY District_Name) AS Complaints_Count FROM Complaints WHERE Complaint_Date >= DATEADD(month, -1, GETDATE());
SELECT COUNT(*) FROM Indian_TV WHERE year BETWEEN 2016 AND 2021;
SELECT StoreID, (SUM(CASE WHEN Category = 'Tops' THEN QuantitySold ELSE 0 END) * 100.0 / SUM(QuantitySold)) AS PercentageOfTopsSold FROM Sales JOIN ProductCategories ON Sales.ProductID = ProductCategories.ProductID GROUP BY StoreID;
SELECT SUM(duration) FROM workout_stats.workout_duration_summary WHERE workout_name = 'Yoga' AND workout_date >= '2022-06-01' AND workout_date <= '2022-06-30';
CREATE TABLE stations (station_id INT, name VARCHAR(255), latitude DECIMAL(9,6), longitude DECIMAL(9,6));
SELECT SUM(HoursPlayed) FROM PlayerActivity WHERE Game = 'League of Legends';
CREATE TABLE wellbeing_programs (program_id INT, athlete_id INT, program_name VARCHAR(255), start_date DATE, end_date DATE);
SELECT SUM(quantity) FROM LanthanumShipments INNER JOIN LanthanumMines ON LanthanumShipments.mine_id = LanthanumMines.id WHERE LanthanumShipments.country = 'Brazil' AND LanthanumMines.production_capacity < 200 AND LanthanumShipments.import_year BETWEEN (YEAR(CURRENT_DATE) - 2) AND YEAR(CURRENT_DATE);
INSERT INTO production (year, element, country, quantity) VALUES (2023, 'Samarium', 'Nigeria', 700);
SELECT algorithm, timestamp, AVG(explainability) OVER (PARTITION BY algorithm ORDER BY timestamp RANGE BETWEEN INTERVAL '1 day' PRECEDING AND CURRENT ROW) FROM explainable_ai;
SELECT EXTRACT(MONTH FROM date) AS month, AVG(temperature) AS avg_temperature FROM water_temperatures WHERE YEAR(date) = 2021 GROUP BY month;
SELECT start_station FROM route_segments JOIN passenger_counts ON start_station = station WHERE passenger_count > 1500 AND fare > 2;
SELECT SUM(weight) FROM shipment_details sd JOIN transportation t ON sd.shipment_id = t.shipment_id WHERE t.transportation_type = 'air';
SELECT technology, capacity FROM energy_storage_technology ORDER BY capacity DESC;
SELECT MAX(score) FROM environmental_impact WHERE year = 2000 AND mining_operation LIKE '%Mining%';
SELECT employees.name AS manager_name, employees.salary AS salary FROM employees INNER JOIN departments ON employees.department = departments.name WHERE departments.name = 'Human Resources' AND employees.position = 'Manager' AND employees.salary = (SELECT MAX(employees.salary) FROM employees WHERE employees.department = departments.name AND employees.position = 'Manager');
SELECT AVG(rd_expenditure) FROM company WHERE country = 'UK';
UPDATE MarineLife SET ConservationStatus = 'Vulnerable' WHERE Species = 'Dugong';
SELECT SUM(amount) FROM climate_finance WHERE region = 'India' AND sector = 'renewable energy' AND year < 2010;
SELECT ProcessName, SUM(CO2Emission) as TotalCO2Emission FROM ManufacturingProcesses mp JOIN CO2Emissions ce ON mp.ProcessID = ce.ProcessID GROUP BY ProcessName;
SELECT ci.state, (COUNT(ci.init_date) * 100.0 / sp.population) AS percentage FROM conservation_initiatives AS ci JOIN state_population AS sp ON ci.state = sp.state WHERE ci.state IN ('Florida', 'Georgia', 'South Carolina', 'North Carolina', 'Virginia', 'West Virginia', 'Maryland', 'Delaware', 'District of Columbia') AND YEAR(ci.init_date) = 2019 GROUP BY ci.state;
SELECT Region, MAX(Capacity) AS MaxCapacity FROM RegionLandfillData GROUP BY Region;
SELECT worker_name FROM community_health_workers WHERE rural_area = 'yes' AND certification_date IS NULL;
SELECT COUNT(*) FROM brute_force_attacks WHERE ip = '8.8.8.8' AND timestamp BETWEEN '2021-01-01 00:00:00' AND '2021-01-31 23:59:59';
SELECT MIN(risk_score) FROM companies WHERE region = 'Latin America';
SELECT SUM(amount) as total_amount FROM (SELECT ROW_NUMBER() OVER (PARTITION BY users.user_id ORDER BY SUM(transactions.amount) DESC) as row, users.user_id, SUM(transactions.amount) as amount FROM transactions INNER JOIN users ON transactions.user_id = users.user_id WHERE users.app = 'algorithmic_fairness' GROUP BY users.user_id) t WHERE t.row <= 10;
DELETE FROM activities WHERE type = 'hiking';
SELECT MAX(funding.amount) FROM funding INNER JOIN company ON funding.company_id = company.id WHERE company.industry = 'Clean Energy' AND company.founding_year > 2010;
DELETE FROM investments WHERE id = 2;
INSERT INTO military_tech (id, name, country, status) VALUES (4, 'T-14 Armata', 'Russia', 'active');
SELECT state, MAX(funding) as max_funding, MIN(funding) as min_funding FROM funding_stats.startups GROUP BY state;
SELECT AVG(g.amount) FROM grant g JOIN department d ON g.department_id = d.id WHERE d.name = 'College of Science';
SELECT COUNT(*) FROM soil_moisture_sensors WHERE field_id = 'Field007' AND temperature < 15;
SELECT 100.0 * COUNT(*) / (SELECT COUNT(*) FROM cases WHERE attorney_id = 1) AS win_rate FROM cases WHERE attorney_id = 1 AND outcome = 'Win';
INSERT INTO weather (city, wind_speed, date) VALUES ('Mexico City', 20, '2022-10-31');
SELECT AVG(salary) FROM nhl_players;
SELECT Country, COUNT(*) FROM Users WHERE UsedEthicalAI = true GROUP BY Country;
SELECT * FROM Papers WHERE year IN (2021, 2022) AND title LIKE '%ethics%';
SELECT DATE_FORMAT(deployment_date, '%Y-%m') as month, framework, COUNT(contract_id) as count FROM contract_deployments GROUP BY month, framework;
SELECT MIN(funding) FROM startups WHERE founder_gender = 'black female';
SELECT Chemical_Composition, Safety_Protocol FROM Chemical_Composition, Plant_Safety_Protocols WHERE Chemical_Composition.Plant_Name = Plant_Safety_Protocols.Plant_Name;
SELECT * FROM (SELECT name, field, num_papers, ROW_NUMBER() OVER (PARTITION BY field ORDER BY num_papers DESC) AS rank FROM faculty_publications) AS ranked_publications WHERE field = 'Statistics' AND rank <= 5;
SELECT AVG(energy_efficiency_rating) AS avg_rating, COUNT(building_id) AS total_buildings FROM residential_buildings WHERE city = 'Toronto';
SELECT COUNT(*) FROM grants WHERE department_id = (SELECT id FROM departments WHERE name = 'Engineering') AND year = 2019;
SELECT species.name, COUNT(sightings.id) AS num_sightings FROM species LEFT JOIN sightings ON species.id = sightings.species_id GROUP BY species.name;
UPDATE vulnerabilities SET expiration_date = '2025-01-01' WHERE vulnerability_name = 'example_vulnerability';
SELECT MAX(s.publications) FROM students s WHERE s.program = 'Physics';
UPDATE users SET name = 'John_Smith' WHERE name = 'JohnSmith';
SELECT year, SUM(investment) FROM CommunityDevelopment WHERE region = 'Oceania' GROUP BY year;
SELECT R.Name, R.TotalRevenue + SUM(SS.SustainabilityScore) as TotalRevenueAndSustainabilityScore FROM Restaurants R INNER JOIN SustainableSourcing SS ON R.RestaurantID = SS.RestaurantID GROUP BY R.Name;
SELECT b.brand_name, AVG(p.rating) as avg_rating FROM brands b INNER JOIN products p ON b.brand_id = p.brand_id WHERE p.is_vegan = TRUE GROUP BY b.brand_name ORDER BY avg_rating DESC;
SELECT region, MAX(cost) FROM RuralInfrastructure WHERE year = 2019 GROUP BY region;
SELECT name, status, last_maintenance_date FROM machines WHERE status = 'Down' AND last_maintenance_date < DATE_SUB(CURDATE(), INTERVAL 3 DAY);
SELECT SUM(revenue) FROM tourism_revenue WHERE country IN ('Germany', 'France') AND year = 2021;
SELECT AVG(occupancy_rate) FROM virtual_experiences WHERE country = 'New Zealand';
SELECT year, SUM(quantity) OVER (ORDER BY year) FROM mines WHERE country = 'India' AND mineral = 'Rare Earth Elements';
CREATE TABLE equipment_maintenance_schedule (id INT PRIMARY KEY, equipment_id INT, schedule_date DATE, schedule_type VARCHAR(50));
SELECT State, COUNT(*) as TotalAccommodations FROM Accommodations GROUP BY State;
INSERT INTO mining_operations (operation_id, operation_name, location) VALUES (4, 'Operation D', 'USA'); INSERT INTO co2_emissions (operation_id, co2_emissions_tonnes) VALUES (4, 800);
DELETE FROM building_permits WHERE project_type = 'Residential' AND issued_date < '2022-01-01';
SELECT u.city, COUNT(c.id) AS num_complaints FROM complaints c JOIN users u ON c.user_id = u.id GROUP BY u.city ORDER BY num_complaints DESC LIMIT 3;
SELECT * FROM MakeupProducts WHERE country = 'Canada' AND harmfulIngredient = TRUE;
SELECT zone_id, AVG(avg_dissolved_oxygen) as avg_oxygen FROM aquaculture_zones WHERE year = 2021 GROUP BY zone_id ORDER BY AVG(avg_dissolved_oxygen) DESC;
SELECT Production FROM OilWells WHERE WellID = 'W001';
SELECT SUM(area) FROM marine_protected_areas WHERE depth > 3000;
SELECT COUNT(*) FROM (SELECT DonorID FROM Donors WHERE Country = 'Europe' GROUP BY DonorID HAVING COUNT(*) > 1);
SELECT department, AVG(salary) FROM hr.employee_salaries GROUP BY department;
SELECT location, COUNT(*) as num_initiatives FROM locations WHERE initiative_type = 'Open Pedagogy' GROUP BY location;
SELECT AVG(rating) FROM eco_hotels WHERE country = 'Japan';
UPDATE events SET revenue = 50000 WHERE name = 'Virtual Tourism Toronto' AND country = 'Canada';
SELECT SUM(revenue) FROM Sales WHERE garmentID IN (SELECT garmentID FROM GarmentProduction WHERE material LIKE '%Recycled%');
SELECT MAX(account_balance) FROM western_region WHERE account_type = 'Financial Wellbeing';
SELECT policy_name FROM state_vaccination_policies;
SELECT region, COUNT(*) FROM circular_economy_initiatives WHERE start_date <= '2021-07-01' AND end_date >= '2021-09-30' GROUP BY region;
SELECT MAX(beds) FROM hospitals_india;
SELECT COUNT(*) FROM workplaces WHERE state = 'Texas';
SELECT manufacturer, MIN(launch_date) as earliest_launch_date FROM spacecraft_manufacturing GROUP BY manufacturer;
SELECT (SUM(number_of_tourists) - LAG(SUM(number_of_tourists)) OVER (PARTITION BY visitor_country ORDER BY date)) / LAG(SUM(number_of_tourists)) OVER (PARTITION BY visitor_country ORDER BY date) * 100.0 as percentage_change FROM tourism WHERE host_country = 'Australia' AND visitor_country = 'United States';
SELECT customer_id, name FROM customers WHERE country = 'USA' INTERSECT SELECT customer_id, name FROM customers WHERE country = 'Canada';
INSERT INTO train_routes (route_id, start_station, end_station, distance, fare) VALUES (1, (SELECT station_id FROM stations WHERE station_name = 'New York'), (SELECT station_id FROM stations WHERE station_name = 'Boston'), 400, 150);
SELECT COUNT(DISTINCT user_id) FROM (SELECT user_id, post_date FROM posts WHERE post_date >= DATEADD(day, -7, CURRENT_TIMESTAMP) GROUP BY user_id, post_date HAVING COUNT(*) = 1) AS subquery;
SELECT crop_type, MAX(production) FROM crop_yield GROUP BY crop_type;
SELECT COUNT(DISTINCT Material) FROM Museum_X;
SELECT COUNT(*) as articles_with_investigative FROM news_articles WHERE title ILIKE '%investigative%';
UPDATE energy_efficiency_ratings SET rating = 'A' WHERE country = 'Canada';
SELECT stp.practice, stp.country, stp.start_date, stp.end_date FROM sustainable_tourism_practices_ext stp WHERE stp.continent = 'Africa';
SELECT discipline, COUNT(*) as num_grants FROM research_grants WHERE YEAR(grant_date) = 2020 GROUP BY discipline;
SELECT EXTRACT(MONTH FROM volunteer_date) AS month, COUNT(*) AS total_volunteers FROM volunteer_management WHERE YEAR(volunteer_date) = 2022 GROUP BY month;
SELECT MIN(num_workshops) as min_workshops FROM summer_2023_pd;
SELECT MIN(age) FROM professionals WHERE country = 'Colombia';
SELECT construction_year, AVG(energy_efficiency_rating) FROM buildings GROUP BY construction_year;
SELECT r.region, r.landfill_capacity as capacity FROM regions r;
SELECT SUM(Spacecraft.mass) FROM SpacecraftVisits INNER JOIN Spacecraft ON SpacecraftVisits.spacecraft_id = Spacecraft.id WHERE SpacecraftVisits.planet IN ('Jupiter', 'Saturn', 'Uranus', 'Neptune');
SELECT Occupation, Gender, AvgIncome, AvgIncome * 100.0 / (SELECT OverallAvgIncome FROM OverallData) AS Percentage FROM OccupationGenderData;
SELECT r.menu_category, AVG(r.food_safety_score) as avg_food_safety_score FROM Restaurant r GROUP BY r.menu_category;
SELECT name, avg_depth FROM oceans WHERE name IN ('Atlantic', 'Pacific') GROUP BY name;
SELECT AVG(preference_score) FROM Menu WHERE is_vegan = false AND is_vegetarian = false;
SELECT continent, AVG(donation_amount) as avg_donation FROM Donations WHERE donation_amount > 1000 GROUP BY continent;
SELECT program_id, DATE_TRUNC('month', volunteer_date) AS month, COUNT(*) OVER (PARTITION BY program_id, month) AS volunteers_per_month FROM volunteer_hours;
SELECT AVG(Age) FROM LanguageSpeakers WHERE Country = 'Canada';
SELECT MIN(mental_health_score), MAX(mental_health_score) FROM student_mental_health WHERE semester = 'Summer 2022';
SELECT crypto_assets.asset_name, blockchains.blockchain_name FROM crypto_assets INNER JOIN blockchains ON crypto_assets.blockchain_id = blockchains.blockchain_id;
SELECT SiteID, SUM(CASE WHEN Material = 'Rock' THEN Weight ELSE 0 END) / SUM(Weight) OVER (PARTITION BY SiteID) as Percentage_Reused FROM WasteMaterial WHERE Date >= DATEADD(YEAR, -1, GETDATE()) GROUP BY SiteID, Material, Date;
SELECT users.location, COUNT(users.id) FROM users GROUP BY users.location;
SELECT donor_id, SUM(donation_amount) as total_donation FROM global_health GROUP BY donor_id ORDER BY total_donation DESC LIMIT 5;
SELECT AVG(IngredientCost) FROM Products WHERE Halal = TRUE;
SELECT AVG(Score) FROM Player WHERE Country IN ('China', 'India', 'Japan', 'South Korea', 'Indonesia');
SELECT event_name FROM esports_events WHERE location IN ('Sweden', 'Germany', 'Poland');
SELECT cultural_competency_level, MIN(worker_id) as first_worker FROM community_health_workers WHERE service_area = 'Rural' GROUP BY cultural_competency_level;
SELECT player_name, MAX(points_scored) FROM players WHERE team_name = 'Celtics' AND season_start_year = 2020 AND season_end_year = 2021 GROUP BY player_name;
SELECT subject_area, SUM(completed) as num_teachers FROM teacher_training WHERE teaching_experience > 5 GROUP BY subject_area;
SELECT COUNT(*) FROM workplaces WHERE sector = 'government' AND has_cba = true;
SELECT hotel_name, AVG(engagement_time) as avg_engagement_time FROM hotel_virtual_tours GROUP BY hotel_name;
SELECT AVG(athletes.well_being_score) FROM athletes WHERE athletes.community_representation = 'Underrepresented';
SELECT SUM(quantity * price) as revenue, SUM((quantity * price) - (quantity * (SELECT cost FROM ingredients WHERE dish_id = sales.dish_id LIMIT 1))) as profit FROM sales WHERE order_date BETWEEN '2022-01-01' AND '2022-01-31';
SELECT SUM(funding) FROM startups WHERE sector = 'bioprocess engineering' AND name != 'BioVentures';
SELECT Country, SUM(Attendees) AS TotalAttendees FROM Concerts GROUP BY Country ORDER BY TotalAttendees DESC LIMIT 3;
SELECT country, (COUNT(*) / (SELECT COUNT(*) FROM mobile_subscribers)) * 100 AS percentage FROM mobile_subscribers GROUP BY country;
UPDATE community_health_workers SET supervision_hours = 15 WHERE state = 'CA';
SELECT material_type, SUM(quantity) FROM waste_generation WHERE location = 'New York City' GROUP BY material_type;
SELECT SupportProgram, SUM(VisualImpairment) as TotalVI FROM Students GROUP BY SupportProgram;
SELECT MAX(budget) FROM rural_infrastructure WHERE department = 'Antioquia'
SELECT COUNT(*) FROM patients_anxiety WHERE country = 'South Korea' AND condition = 'Anxiety Disorder' AND medication = TRUE;
SELECT Name, SUM(Budget) FROM Programs WHERE QUARTER(Date) = 4 AND YEAR(Date) = 2021 GROUP BY Name;
SELECT Species, FarmID, (FinalWeight - InitialWeight)/InitialWeight AS GrowthRate, TimePeriod FROM FarmStocks JOIN Species ON FarmStocks.Species = Species.SpeciesID ORDER BY GrowthRate DESC, TimePeriod DESC;
DELETE FROM cultural_competency WHERE state = 'NY';
SELECT year, MIN(avg_temp_change) FROM temperature_changes GROUP BY year;
SELECT COUNT(*) FROM water_consumption WHERE city = 'Phoenix' AND year = 2021 AND consumption > (SELECT AVG(consumption) FROM water_consumption WHERE city = 'Phoenix' AND year = 2021);
SELECT company, launch_status, COUNT(*) FROM RocketLaunches WHERE company = 'United Launch Alliance' AND launch_date >= DATEADD(year, -2, GETDATE()) GROUP BY company, launch_status;
SELECT regions.region_name, SUM(volunteers.volunteer_count) as total_volunteers FROM regions JOIN volunteers ON regions.id = volunteers.region_id GROUP BY regions.region_name ORDER BY total_volunteers DESC;
SELECT Programs.ProgramName, AVG(Donations.Amount) as AverageDonation FROM Programs INNER JOIN Donations ON Programs.ProgramID = Donations.ProgramID GROUP BY Programs.ProgramID ORDER BY AverageDonation DESC LIMIT 1;
SELECT SUM(donation) FROM (SELECT donation FROM donors ORDER BY donation DESC LIMIT 3) subquery;
SELECT SUM(budget) FROM accessible_tech_projects WHERE continent = 'Africa';
SELECT country, SUM(mass) as total_mass FROM space_debris GROUP BY country;
SELECT SUM(funding.amount) FROM companies INNER JOIN (funding INNER JOIN founders ON funding.company_id = founders.company_id) ON companies.id = funding.company_id WHERE founders.is_immigrant = true;
SELECT region, SUM(sale_amount) as total_revenue FROM sales WHERE sale_date >= '2023-01-01' AND sale_date < '2023-05-01' GROUP BY region;
SELECT language FROM HeritageSites H INNER JOIN (SELECT country, COUNT(*) as num_sites FROM HeritageSites GROUP BY country ORDER BY num_sites DESC LIMIT 3) T ON H.country = T.country;
SELECT COUNT(*) FROM shipments WHERE destination_country = 'Mexico';
SELECT AVG(price) FROM price_data WHERE element = 'Dysprosium' AND year IN (2017, 2019);
SELECT AVG(post_per_user) FROM (SELECT COUNT(p.id) AS post_per_user FROM posts p JOIN users u ON p.user_id = u.id GROUP BY u.id) AS subquery;
SELECT c.name, t.investment_type, SUM(t.amount) as total_amount FROM customers c JOIN transactions t ON c.id = t.customer_id WHERE t.transaction_type = 'Investment' GROUP BY c.name, t.investment_type;
SELECT COUNT(*) FROM service_locations WHERE city = 'Houston';
CREATE VIEW top_ethics_training AS WITH cte AS (SELECT * FROM workforce_training WHERE training_topic = 'ethics') SELECT * FROM cte WHERE training_hours > 5;
SELECT property_tax FROM (SELECT property_tax, ROW_NUMBER() OVER (ORDER BY property_tax DESC) as rn FROM property_tax WHERE state = 'California' AND housing_type = 'affordable') t WHERE rn = 2;
SELECT COUNT(*) FROM india_projects WHERE location = 'rural' AND completion_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR);
SELECT Region, COUNT(*) FROM Building_Permits WHERE Project_Type = 'Sustainable Project' AND Region = 'Northeast' AND Issue_Date >= DATEADD(year, -3, GETDATE());
SELECT AVG(quantity) FROM sustainable_fabric WHERE country IN ('Egypt', 'South Africa', 'Tunisia');
SELECT SUM(StreamCount) FROM Streams WHERE SongID = 3 AND PlatformID = 1;
SELECT AVG(price) FROM textile_sourcing WHERE material = 'cotton' AND country = 'India';
SELECT AVG(water_temperature) as avg_temp FROM farm_data WHERE species = 'Sturgeon';
SELECT SUM(sales_volume) FROM sales JOIN products ON sales.product_id = products.product_id WHERE is_organic = TRUE AND product_type = 'skincare' AND country = 'Germany';
INSERT INTO exit_strategies (id, company_name, exit_type, acquisition_price, exit_date) VALUES (7, 'India Inc.', 'Acquisition', 50000000, '2021-10-01');
SELECT COUNT(DISTINCT d.asset_name) as unique_assets FROM polygon_digital_assets d JOIN polygon_contract_transactions t ON d.asset_id = t.asset_id WHERE d.network = 'Polygon' AND t.value > 50000;
SELECT MAX(salary) FROM builders WHERE is_union_member = true;
SELECT COUNT(*) FROM whale_sightings WHERE location = 'Arctic' AND sighting_date >= '2020-01-01' AND sighting_date <= '2020-12-31';
SELECT R.Region, SUM(M.Sales + AC.ChargeAmt) as TotalRevenue FROM Restaurants R INNER JOIN MenuItems M ON R.RestaurantID = M.RestaurantID INNER JOIN AdditionalCharges AC ON R.RestaurantID = AC.RestaurantID GROUP BY R.Region;
SELECT MAX(co2_offset) FROM green_buildings_max_offset WHERE certification IS NOT NULL;
UPDATE artists SET genre = 'K-Pop' WHERE name = 'BTS';
SELECT position, MIN(salary) AS Min_Salary, MAX(salary) AS Max_Salary FROM Employees WHERE department = 'Mining' GROUP BY position;
SELECT SUM(contract_value) FROM military_contracts WHERE state = 'TX' ORDER BY contract_value DESC;
SELECT exploratory_method, MIN(discovery_date) as first_discovery_date FROM exploration_data GROUP BY exploratory_method
SELECT YEAR(CaseOpenDate), MONTH(CaseOpenDate), COUNT(*) FROM Cases WHERE MONTH(CaseOpenDate) = 1 GROUP BY YEAR(CaseOpenDate);
SELECT SUM(quantity) FROM GoldMine WHERE date < '2021-04-01' AND date >= '2021-01-01';
SELECT AVG(astronauts.age) FROM astronauts INNER JOIN missions ON astronauts.id = missions.astronaut_id WHERE astronauts.spacecraft_experience = 'Dragon' AND missions.mission_destination = 'ISS';
SELECT MAX(salary) FROM salaries WHERE department IN ('manufacturing', 'engineering');
SELECT Country, COUNT(*) AS OperationsParticipated  FROM CountryPeacekeeping  GROUP BY Country  ORDER BY OperationsParticipated DESC;
SELECT continent, COUNT(DISTINCT user_id) as unique_users FROM users WHERE timestamp BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY continent;
SELECT country, COUNT(*) as num_sites FROM Cultural_Sites_2 GROUP BY country ORDER BY num_sites DESC LIMIT 3;
SELECT AVG(goals) FROM games WHERE sport = 'Soccer' AND id IN (SELECT game_id FROM last_10_games);
SELECT MAX(production_bopd) FROM Barnett_Shale WHERE well_id IS NOT NULL;
SELECT AVG(recycling_rate) FROM RecyclingRates WHERE population > 1000000;
SELECT SUM(CargoWeight) FROM Cargo INNER JOIN Vessels ON Cargo.VesselID = Vessels.VesselID INNER JOIN Ports ON Cargo.PortID = Ports.PortID WHERE FuelType = 'LNG' AND Country = 'India';
SELECT * FROM machines WHERE type = 'CNC';
SELECT size, AVG(price) FROM products GROUP BY size;
SELECT MIN(release_date) FROM albums;
SELECT AVG(Horsepower) FROM SportsCars WHERE Year BETWEEN 2015 AND 2020 AND Name LIKE '%Sports%';
UPDATE Oil_Production SET quantity = 180.0 WHERE well = 'W003' AND production_date = '2021-01-04';
SELECT AVG(AvgFare) FROM RouteAvgFares INNER JOIN RouteFrequency ON RouteAvgFares.RouteID = RouteFrequency.RouteID WHERE RouteFrequency.Frequency > 60;
SELECT org_id, total_donations FROM donation_summary ORDER BY total_donations DESC LIMIT 5;
SELECT COUNT(*) FROM peacekeeping_missions WHERE location = 'Asia';
SELECT SUM(contract_value) FROM defense_contracts WHERE vendor_state = 'CA' AND contract_date >= '2020-01-01' AND contract_date < '2020-04-01';
SELECT COUNT(*) FROM maritime_safety WHERE region LIKE '%%Atlantic%%';
SELECT AVG(YEAR(CURRENT_DATE) - year_of_birth) FROM artists a JOIN artworks aw ON a.id = aw.artist_id WHERE category = 'Abstract';
SELECT MAX(savings) FROM savings WHERE state = 'Texas';
SELECT min_temperature FROM chemical_properties WHERE name = 'chemical Y';
SELECT SUM(biomass) FROM marine_farms WHERE region = 'Arctic' AND water_depth > 30;
SELECT RenewableProjects.ProjectType, AVG(RenewableProjects.CarbonOffsets) FROM RenewableProjects GROUP BY RenewableProjects.ProjectType;
SELECT SUM(fe.num_attendees), AVG(fe.avg_ticket_price) FROM fl_events fe WHERE fe.state = 'FL';
SELECT Employees.FirstName, Employees.LastName, Chemicals.ChemicalName, Machinery.MachineName FROM Employees RIGHT JOIN (Chemicals RIGHT JOIN Machinery ON Chemicals.Department = Machinery.Department) ON Employees.Department = Chemicals.Department WHERE Chemicals.ChemicalName = 'Sodium Hydroxide';
SELECT vehicle_type, AVG(fare) FROM singapore_transport GROUP BY vehicle_type;
SELECT founder_continent, founding_year, SUM(funding) FROM startups GROUP BY founder_continent, founding_year;
SELECT mission_name, launch_date FROM SpaceMissions WHERE EXTRACT(YEAR FROM launch_date) < 2020 AND accident = TRUE;
SELECT crypto_assets.asset_name, crypto_assets.daily_transactions FROM crypto_assets INNER JOIN blockchains ON crypto_assets.blockchain_id = blockchains.blockchain_id WHERE blockchains.blockchain_name = 'Solana';
SELECT players.gender, AVG(players.age) FROM players INNER JOIN vr_adopters ON players.id = vr_adopters.player_id WHERE vr_adopters.adoption_date >= DATEADD(year, -1, GETDATE()) AND players.country IN ('Saudi Arabia', 'UAE', 'Qatar');
SELECT SUM(production_oil) as total_oil_production, SUM(production_gas) as total_gas_production FROM oil_well_A WHERE date BETWEEN '2022-01-01' AND '2022-03-31' AND date >= (SELECT MAX(date) - INTERVAL '3 month' FROM oil_well_A);
SELECT project_type, AVG(carbon_offset) FROM CleanEnergy.ProjectTypes GROUP BY project_type;
SELECT COUNT(*) FROM Players WHERE Age >= 25;
SELECT COUNT(*) FROM farms WHERE country = 'Canada' AND organic = TRUE;
SELECT AVG(price) FROM HolmiumMarketPrices WHERE year IN (2020, 2021, 2022) AND quarter = 'Q1';
SELECT Location, Species, Year, SUM(OrganicCarbon) OVER (PARTITION BY Location, Species, Year) AS TotalOrganicCarbon FROM FishStock ORDER BY Location, Species, Year;
SELECT COUNT(*) as improved_students FROM winter_2023_smh WHERE student_id IN (SELECT student_id FROM fall_2022_smh WHERE mental_health_score < (SELECT mental_health_score FROM winter_2023_smh WHERE winter_2023_smh.student_id = fall_2022_smh.student_id));
SELECT SUM(attendee_count) FROM Events WHERE region = 'Midwest' AND attendee_count > 500
UPDATE sensor_readings SET temperature = 26 WHERE sensor_id = 001 AND farm_id = 501;
SELECT (SUM(CASE WHEN year = 2021 AND quarter <= 2 THEN diversification_value END) - SUM(CASE WHEN year = 2020 AND quarter <= 2 THEN diversification_value END)) / SUM(CASE WHEN year = 2020 AND quarter <= 2 THEN diversification_value END) * 100 AS change FROM economic_diversification WHERE year IN (2020, 2021) AND quarter IN (1, 2);
DELETE FROM Exhibitions WHERE curator = 'Mavis B. Fillmore';
SELECT SUM(revenue) FROM orders JOIN products ON orders.product_id = products.product_id WHERE is_recycled = TRUE AND products.country IN ('Germany', 'France', 'Italy', 'Spain', 'Poland');
SELECT ocean FROM OceanPollution WHERE pollution_level = (SELECT MIN(pollution_level) FROM OceanPollution);
SELECT AVG(size_sqft) FROM co_ownership WHERE city = 'Portland' AND state = 'OR' AND property_id IN (SELECT property_id FROM co_ownership WHERE city = 'Portland' AND state = 'OR' GROUP BY property_id HAVING COUNT(*) > 1);
SELECT AVG(price) as avg_price, category FROM art_market am INNER JOIN art_categories ac ON am.category_id = ac.id WHERE ac.category IN ('Sculpture', 'Painting') GROUP BY category;
INSERT INTO production_data (year, country, element_type, production_quantity) VALUES (2023, 'France', 'Europium', 150);
INSERT INTO WasteGenerationAfrica (country, region, generation_rate) VALUES ('Kenya', 'Africa', 1.8);
SELECT SUM(Playtime_minutes/60.0) FROM Players WHERE Game = 'Interstellar Invasion' AND Country LIKE 'Europe%';
SELECT * FROM support_programs ORDER BY name;
SELECT org_name, COUNT(DISTINCT attendee_id) AS unique_attendees, SUM(amount) AS total_spent FROM Visits v JOIN CulturalOrgs o ON v.org_id = o.org_id GROUP BY org_name;
SELECT country_id, RANK() OVER (ORDER BY pct_sustainable_travel DESC) as rank FROM CountrySustainableTravel WHERE year = 2019;
SELECT crop_type, AVG(temperature) as avg_temperature FROM agroecology GROUP BY crop_type;
SELECT COUNT(ProjectID) as CompletedProjects FROM Projects WHERE ProjectType = 'Community Development' AND EndDate >= DATE_SUB(CURRENT_DATE, INTERVAL 12 MONTH) AND EndDate IS NOT NULL;
SELECT COUNT(DISTINCT donors.donor_id) FROM donations JOIN donors ON donations.donor_id = donors.donor_id WHERE cause = 'environmental sustainability' AND donors.donor_country LIKE 'Africa%' AND donation_date BETWEEN DATE_SUB(NOW(), INTERVAL 4 YEAR) AND NOW();
DELETE FROM authors WHERE author_id = 18;
SELECT avg_cost FROM labor_stats WHERE state = 'California' AND year = 2022;
SELECT AVG(quantity) FROM sourcing WHERE fabric_type = 'sustainable fabric' AND country = 'India' AND sourcing_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);
SELECT b.brand_name, AVG(r.product_rating) as avg_rating FROM brands b JOIN ratings r ON b.brand_id = r.brand_id GROUP BY b.brand_name ORDER BY avg_rating DESC;
SELECT departments.name AS department, ROUND(100.0 * SUM(CASE WHEN disability_awareness_training THEN 1 ELSE 0 END) / COUNT(*), 2) AS percentage_trained FROM departments LEFT JOIN faculty ON departments.id = faculty.department_id GROUP BY departments.name;
SELECT year, SUM(cost) FROM Expeditions GROUP BY year;
SELECT subject, AVG(passed) * 100.0 AS pass_percentage FROM student GROUP BY subject;
SELECT title FROM movies WHERE rating >= 8;
SELECT COUNT(*) FROM Donations WHERE region = 'Texas' AND donation_year = 2020;
CREATE TABLE Country_Arts (id INT, country TEXT, art_name TEXT);
SELECT SUM(salary) FROM employees WHERE department = 'manufacturing';
SELECT location, running_time FROM marathons WHERE country = 'Germany' ORDER BY running_time ASC LIMIT 3;
SELECT MAX(word_count) FROM articles WHERE section='sports';
SELECT AVG(oil_production_q2_2021) as avg_oil_production FROM platform;
SELECT type, planting_date FROM urban_agriculture.urban_crops;
SELECT MAX(total_funding) FROM startups WHERE sector = 'Bioprocess' AND location LIKE 'Asia%';
SELECT SUM(budget) FROM space.mars_exploration WHERE year = 2020;
SELECT countries.name FROM countries INNER JOIN fishing_vessels ON countries.region = fishing_vessels.country_region WHERE countries.region = 'Pacific';
SELECT position, AVG(age) FROM players JOIN nba_teams ON players.id = nba_teams.players_id GROUP BY position;
SELECT user_account, SUM(failed_attempts) as total_failed_attempts FROM (SELECT user_account, success, CASE WHEN success = false THEN 1 ELSE 0 END as failed_attempts FROM login_attempts) as subquery GROUP BY user_account;
SELECT subscription_type, region, AVG(data_usage) as avg_data_usage FROM subscribers WHERE subscription_type = 'postpaid' AND usage_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) GROUP BY subscription_type, region ORDER BY subscription_type, avg_data_usage DESC LIMIT 5;
SELECT COUNT(*) FROM farmers WHERE location = 'Urban';
SELECT COUNT(*) FROM CommunityHealthWorkers WHERE MentalHealthParity = FALSE;
SELECT AVG(weight) FROM packages JOIN warehouses ON packages.warehouse_id = warehouses.id WHERE region IN ('Americas', 'APAC');
SELECT AVG(waste_generated) FROM waste_generation WHERE sector = 'industrial' AND year = 2019;
SELECT COUNT(DISTINCT destination) FROM tourism_stats WHERE country = 'Russia' AND destination LIKE 'Europe%' AND year = 2020;
SELECT SUM(Vessels.Tonnage) FROM Visits INNER JOIN Vessels ON Visits.VesselID = Vessels.ID WHERE VisitDate >= DATEADD(month, -6, GETDATE()) AND Vessels.Region = 'Caribbean';
SELECT country, COUNT(*) FROM DroneFlight WHERE date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) AND (country = 'Canada' OR country = 'Mexico') AND malfunction = TRUE GROUP BY country;
SELECT weight_class, SUM(fleet_size) as total_fleet_size FROM satellite_fleet GROUP BY 1;
SELECT size, COUNT(*) FROM customer_size GROUP BY size ORDER BY COUNT(*) DESC LIMIT 1;
SELECT SUM(amount) FROM climate_finance WHERE country IN ('Indonesia', 'Malaysia', 'Philippines', 'Thailand', 'Vietnam') AND year = 2021 AND sector = 'Energy Efficiency';
SELECT Country, COUNT(*) AS PlayerCount FROM Players GROUP BY Country HAVING PlayerCount >= 2;
SELECT SUM(Spacecrafts.cost) FROM Spacecrafts INNER JOIN Missions ON Spacecrafts.id = Missions.spacecraft_id WHERE Spacecrafts.manufacturer = 'SpaceCorp' AND Missions.destination = 'Mars';
SELECT AVG(occupancy_rate) FROM hotel_occupancy WHERE country = 'New Zealand' AND is_sustainable = true;
SELECT MIN(professionals) FROM healthcare_data.professionals;
(SELECT SatelliteName FROM USLaunchedSatellites WHERE Country = 'United States' EXCEPT SELECT SatelliteName FROM RussiaLaunchedSatellites WHERE Country = 'United States') UNION (SELECT SatelliteName FROM RussiaLaunchedSatellites WHERE Country = 'Russia' EXCEPT SELECT SatelliteName FROM USLaunchedSatellites WHERE Country = 'Russia');
SELECT program_name FROM programs WHERE budget > (SELECT AVG(budget) FROM programs);
SELECT region, month, SUM(revenue) FROM sales_region GROUP BY region, month;
SELECT ip, SUM(attempts) as total_attempts FROM ip_failures WHERE timestamp >= DATEADD(month, -1, CURRENT_TIMESTAMP) GROUP BY ip ORDER BY total_attempts DESC LIMIT 5;
SELECT user_id, AVG(avg_heart_rate) as avg_heart_rate FROM (SELECT user_id, date, SUM(calories) as calories, AVG(avg_heart_rate) as avg_heart_rate FROM user_calories WHERE date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 WEEK) GROUP BY user_id, date ORDER BY calories DESC LIMIT 3) as temp;
SELECT MAX(revenue) FROM streams WHERE genre = 'Hip Hop' AND country = 'France' AND timestamp >= '2021-01-01' AND timestamp < '2022-01-01';
INSERT INTO players (id, name, age, country) VALUES (5, 'Sophia Garcia', 32, 'Mexico'), (6, 'Hiroshi Tanaka', 29, 'Japan');
SELECT a.name, AVG(aa.word_count) as avg_word_count FROM authors a JOIN articles_authors aa ON a.id = aa.author_id GROUP BY a.name ORDER BY avg_word_count DESC LIMIT 5;
SELECT COUNT(*) FROM Attorneys WHERE Gender = 'Female';
UPDATE military_spending SET amount = 55.3 WHERE country = 'India';
SELECT Country, SUM(DonationAmount) as TotalDonated FROM Donation JOIN Donor ON Donation.DonorID = Donor.DonorID GROUP BY Country;
SELECT COUNT(*) FROM Hiring WHERE YEAR(HireDate) > 2020 AND Community = 'LGBTQ+';
CREATE TABLE patient_outcomes (id INT PRIMARY KEY, patient_id INT, mental_health_condition_id INT, treatment_approach_id INT, outcome_date DATE, outcome_description TEXT);
INSERT INTO waste_generation(region, year, waste_gram) VALUES('Mountain', 2024, 55000);
SELECT AVG(DATEDIFF(MONTH, practice_date, LAG(practice_date) OVER (PARTITION BY contractor_name ORDER BY practice_date))) FROM sustainable_practices WHERE contractor_name = 'Green Builders Inc.';
DELETE FROM teacher_pd WHERE teacher_id = 345 AND course_type = 'Workshop';
SELECT COUNT(*) AS num_companies FROM company WHERE founder_identity = 'LGBTQ+';
SELECT SUM(budget) FROM budget_2022 WHERE service NOT IN ('Education', 'Healthcare');
SELECT MIN(budget) FROM CybersecurityBudget WHERE region = 'Africa';
SELECT COUNT(*) FROM building_permits WHERE YEAR(issue_date) = 2021 AND state = 'New Mexico';
SELECT COUNT(*) FROM workers INNER JOIN departments ON workers.department_id = departments.id WHERE departments.name = 'electronics' AND salary < (SELECT AVG(salary) FROM workers INNER JOIN departments ON workers.department_id = departments.id WHERE departments.name = 'electronics');
SELECT Country, Year, AVG(Dissolved_Oxygen_Level) OVER (PARTITION BY Country) AS Avg_Dissolved_Oxygen_Level FROM Country_DO;
SELECT institution_name FROM shariah_compliant_finance WHERE country IN ('South America') AND shariah_compliant = TRUE;
SELECT COUNT(*) FROM Shipments WHERE DeliveryTime > ExpectedDeliveryTime + 2 AND WarehouseID IN (SELECT WarehouseID FROM Warehouses WHERE Country = 'Germany');
SELECT YEAR(storage_date) as storage_year, QUARTER(storage_date) as storage_quarter, SUM(pallets) as total_pallets FROM warehouses GROUP BY YEAR(storage_date), QUARTER(storage_date);
SELECT ride_date, COUNT(DISTINCT user_id) AS unique_users FROM ride JOIN user ON ride.user_id = user.user_id GROUP BY ride_date;
SELECT Company.name, COUNT(DISTINCT Employee.id) FROM Company INNER JOIN Employee ON Company.id = Employee.company_id GROUP BY Company.name;
SELECT COUNT(*) FROM machines WHERE category IN ('machine_1', 'machine_2');
SELECT exhibition_id, COUNT(DISTINCT visitor_id) AS unique_visitors FROM Exhibition_Visitors JOIN Exhibitions ON Exhibition_Visitors.exhibition_id = Exhibitions.id WHERE city = 'New York' GROUP BY exhibition_id ORDER BY unique_visitors DESC LIMIT 3;
SELECT name, capacity FROM solar_plants ORDER BY capacity DESC LIMIT 3;
SELECT COUNT(DISTINCT element) FROM production_rare_earth_elements WHERE year = 2019;
SELECT SUM(price) FROM sales WHERE release_year = 2021;
SELECT sea_turtles.region, COUNT(DISTINCT nesting_sites.site_name) FROM sea_turtles INNER JOIN nesting_sites ON sea_turtles.id = nesting_sites.species_id WHERE sea_turtles.region IN ('Atlantic', 'Arctic') GROUP BY sea_turtles.region;
SELECT MAX(Income) FROM Income WHERE HealthInsurance = TRUE AND State = 'New York';
SELECT COUNT(*) FROM workshop INNER JOIN area ON workshop.area_id = area.area_id WHERE area.area_type = 'urban';
SELECT AVG(Speed) FROM EV_Data WHERE Month = 'January' AND City IN (SELECT City FROM EV_Data WHERE Type = 'Electric');
UPDATE mental_health_parity SET violations = 18 WHERE state = 'TX';
SELECT name, donation FROM language_donors WHERE location = 'Asia' ORDER BY donation DESC LIMIT 3;
SELECT SUM(num_employees) FROM workplaces WHERE country = 'Spain' AND has_lrv = true;
SELECT AVG(price) FROM tours WHERE city = 'Paris' AND name LIKE '%eco-friendly%';
SELECT c.name as county_name, l.name as library_name, COUNT(*) as library_count, SUM(l.total_books) as total_books FROM counties c JOIN libraries l ON c.id = l.county_id WHERE c.state = 'California' GROUP BY c.name, l.name;
SELECT region, COUNT(*) FILTER (WHERE virtual_tour = true) * 100.0 / COUNT(*) AS percentage FROM hotels GROUP BY region;
SELECT AVG(horsepower) FROM Luxury_Sedans WHERE country = 'Japan' AND release_year >= 2000;
SELECT * FROM projects WHERE state = 'CA' AND actual_cost > planned_cost * 1.3;
SELECT activity, AVG(heart_rate) AS avg_heart_rate FROM wearable_data WHERE MONTH(record_date) = 7 GROUP BY activity ORDER BY avg_heart_rate DESC LIMIT 3;
SELECT case_id, MAX(age) - MIN(age) as age_diff FROM defendant_info GROUP BY case_id;
SELECT COUNT(*) FROM community_development WHERE region = 'Patagonia' AND start_date <= '2017-12-31' AND end_date >= '2015-01-01';
INSERT INTO food_safety_inspections (restaurant_id, inspection_date, violation_count) VALUES (FLOOR(RAND()*(SELECT MAX(restaurant_id) FROM food_safety_inspections))+1, '2023-01-17', 3);
SELECT SUM(BudgetAmount) FROM Budget WHERE BudgetYear = 2022;
SELECT s.service_name, COUNT(c.complaint_id) AS complaint_count FROM services s INNER JOIN complaints c ON s.service_id = c.service_id WHERE c.complaint_date >= DATEADD(year, -1, GETDATE()) GROUP BY s.service_name;
SELECT materials.name, inventory.quantity FROM materials JOIN inventory ON materials.material_id = inventory.material_id WHERE materials.is_sustainable = true AND inventory.quantity < 1000;
SELECT mi.name FROM menu_items mi LEFT JOIN menus m ON mi.menu_id = m.id WHERE m.id IS NULL;
SELECT * FROM ev_sales;
SELECT artist_name, MAX(streams) as max_streams FROM StreamingData WHERE MONTH(stream_date) = 6 GROUP BY artist_name;
SELECT country, SUM(amount) as total_expenditure FROM rd_expenditures WHERE year = 2021 GROUP BY country ORDER BY total_expenditure DESC LIMIT 3;
SELECT R.RestaurantName, COUNT(MI.MenuID) as OrganicMenuItemCount, (COUNT(MI.MenuID) * 100.0 / (SELECT COUNT(*) FROM MenuItems WHERE RestaurantID = R.RestaurantID)) as OrganicPercentage FROM Restaurants R INNER JOIN MenuItems MI ON R.RestaurantID = MI.RestaurantID WHERE MI.IsOrganic = 1 GROUP BY R.RestaurantID;
DELETE FROM satellites WHERE name = 'Sputnik 1';
SELECT AVG(age) FROM Visitors v INNER JOIN Events e ON v.event_name = e.event_name WHERE city = 'New York' AND year = 2021;
INSERT INTO emissions (id, mine_type, country, year, co2_emission) VALUES (1, 'coal', 'India', 2021, 1000);
SELECT AVG(transaction_value) FROM transactions JOIN customers ON transactions.customer_id = customers.customer_id WHERE customers.region = 'North America';
SELECT Vessels.Name, SUM(Cargo.Weight) AS TotalCargoWeight FROM Vessels JOIN Cargo ON Vessels.Id = Cargo.VesselId WHERE Cargo.DeliveryDate >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY Vessels.Id ORDER BY TotalCargoWeight DESC LIMIT 1;
SELECT iwc.industry, SUM(iwc.consumption) as total_consumption FROM industry_water_consumption iwc WHERE iwc.year BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY iwc.industry;
SELECT dt.DonorType, SUM(d.DonationAmount) AS TotalDonationAmount FROM DonorType dt JOIN Donations d ON dt.DonorTypeID = d.DonorTypeID GROUP BY dt.DonorType;
SELECT genre, total_revenue FROM genre_sales_mobile;
SELECT AVG(Amount) FROM ResearchGrants WHERE Department = 'Chemistry' AND Year BETWEEN (SELECT MAX(Year) FROM ResearchGrants) - 4 AND (SELECT MAX(Year) FROM ResearchGrants);
SELECT AVG(portfolio_value) as avg_portfolio_value, FLOOR((age-1)/10)*10 as age_group FROM customers GROUP BY age_group;
SELECT AVG(Price) FROM Artworks INNER JOIN Artists ON Artworks.ArtistID = Artists.ArtistID WHERE Artists.Nationality = 'Japan' AND YearOfBirth > 1900 AND CreationDate >= '2000-01-01';
SELECT player, MAX(hat_tricks) AS max_hat_tricks FROM premier_league;
SELECT MAX(serving_size) FROM entrees WHERE type = 'Vegetarian';
SELECT region, art_category, SUM(revenue) FROM RegionalArtSales GROUP BY region, art_category;
SELECT mi.element, COUNT(DISTINCT mi.mine_id) as num_mines FROM mine_info mi GROUP BY mi.element;
SELECT COUNT(*) FROM agricultural_innovation_projects WHERE country = 'Nigeria' AND start_year >= 2010 AND end_year <= 2014 AND started = 1;
INSERT INTO healthcare_centers (name, country, created_at) VALUES ('Hospital del Niño Dios', 'Mexico', '2019-01-01 00:00:00');
SELECT COUNT(*) FROM Events WHERE city = 'Tokyo' AND country = 'Japan' AND date >= DATEADD(month, -1, GETDATE());
SELECT unnest(regexp_split_to_array(string_agg(word_list, ' '), 's+')) as word, COUNT(*) as word_count FROM news_articles GROUP BY word ORDER BY word_count DESC LIMIT 3;
DELETE FROM cosmetics_sales WHERE units_sold < 10;
SELECT smelter FROM smelters WHERE smelting_volume > (SELECT AVG(processing_volume) FROM processors) AND smelter NOT IN (SELECT name FROM processors);
SELECT chemical_code, AVG(quantity) AS avg_quantity FROM chemical_production GROUP BY chemical_code ORDER BY avg_quantity DESC LIMIT 1;
SELECT size, SUM(quantity) FROM inventory GROUP BY size;
SELECT AVG(confidence) FROM image_classifier WHERE label = 'image_classifier';
SELECT name, ph_level FROM indian_ocean_fish;
SELECT year, SUM(num_violations) FROM violations WHERE year >= 2015 GROUP BY year;
SELECT * FROM grants WHERE organization = 'Legal Code Foundation';
SELECT v.vessel_id, SUM(travel_time) as total_travel_time FROM Vessels v JOIN VesselTravel vt ON v.vessel_id = vt.vessel_id JOIN Routes r ON vt.route = r.route_id WHERE r.arrival_port = 'Dar es Salaam' AND vt.departure_date >= DATEADD(month, -6, GETDATE()) GROUP BY v.vessel_id ORDER BY total_travel_time DESC;
SELECT country, SUM(ghg_emissions) AS total_emissions FROM emissions_asia WHERE year = 2019 GROUP BY country;
SELECT SUM(Amount) FROM FundingSources WHERE YEAR(Date) = 2021;
DELETE FROM Arts WHERE ArtName = 'Batik';
SELECT SUM(quantity) FROM fabric_stock WHERE fabric IN ('eco-friendly', 'organic_cotton', 'hemp', 'Tencel');
DELETE FROM retailers WHERE last_audit_date < (CURRENT_DATE - INTERVAL '3 years');
SELECT hotel_name, num_ai_technologies FROM ai_adoption INNER JOIN hotels ON ai_adoption.hotel_id = hotels.hotel_id WHERE country IN ('UAE', 'Saudi Arabia', 'Qatar', 'Oman', 'Bahrain') ORDER BY num_ai_technologies DESC;
SELECT p.player_name, AVG(p.goals) as avg_goals FROM players p JOIN matches m ON (p.team_id = m.home_team_id OR p.team_id = m.away_team_id) WHERE m.match_date >= DATEADD(day, -10, GETDATE()) GROUP BY p.player_name;
SELECT d.country, SUM(d.amount) AS total_donation_amount, COUNT(DISTINCT v.id) AS num_volunteers FROM donations d INNER JOIN volunteers v ON d.donor_id = v.id GROUP BY d.country;
SELECT satellite_id, country, orbital_altitude FROM satellites WHERE country = 'USA' AND launch_year < 2015;
SELECT AVG(price) FROM ArtSales WHERE painting_style = 'Cubism' AND sale_date >= '2010-01-01';
SELECT COUNT(b.booking_id) AS num_bookings, SUM(b.booking_revenue) AS total_revenue FROM hotels h INNER JOIN bookings b ON h.hotel_id = b.hotel_id INNER JOIN users u ON u.user_id = b.user_id WHERE h.category = 'Boutique' AND u.user_country = 'Canada' AND YEAR(b.booking_date) = 2022;
SELECT MAX(likes) FROM posts WHERE DATE_FORMAT(post_date, '%W') = 'Monday';
SELECT DonorID, MAX(DonationAmount) as 'Highest Donation' FROM Donations WHERE DonationDate BETWEEN '2022-04-01' AND '2022-04-30' GROUP BY DonorID ORDER BY 'Highest Donation' DESC LIMIT 1;
SELECT SUM(revenue) FROM transactions JOIN users ON transactions.user_id = users.id WHERE users.country = 'Japan' AND QUARTER(transactions.id) = 3 AND YEAR(transactions.id) = 2022;
SELECT EXTRACT(MONTH FROM date) AS month, AVG(production_figures) AS avg_production FROM wells WHERE location = 'Gulf of Mexico' GROUP BY month;
SELECT species, population FROM animals WHERE population > 200;
SELECT genre, MIN(rating) FROM tv_shows WHERE release_year >= YEAR(CURDATE()) - 5 GROUP BY genre;
SELECT continent, year, COUNT(*) as num_projects FROM ClimateAdaptationProjects WHERE continent = 'South America' GROUP BY continent, year;
SELECT MAX(temperature) FROM greenhouse_sensors WHERE sensor_type = 'temperature';
SELECT marine_species.species_name, species_conservation.conservation_status FROM marine_species INNER JOIN species_conservation ON marine_species.species_id = species_conservation.species_id INNER JOIN marine_protected_areas ON species_conservation.mpa_id = marine_protected_areas.mpa_id WHERE marine_protected_areas.location = 'Indian Ocean';
SELECT aircraft.model, manufacturers.name FROM aircraft INNER JOIN manufacturers ON aircraft.id = manufacturers.id ORDER BY manufacturers.name;
SELECT SUM(area_ha) FROM wildlife_habitats;
SELECT publication_year, COUNT(*) FROM research_papers WHERE autonomous_driving = true GROUP BY publication_year;
SELECT SUM(installed_capacity) FROM Wind_Energy_Projects WHERE state = 'Texas' AND completion_year <= 2020;
SELECT dept_name, SUM(budget) FROM city_departments WHERE city = 'Chicago' AND year = 2020 GROUP BY dept_name;
DELETE FROM museum_visitors WHERE museum_id = 1 AND visitor_id IN (SELECT v.visitor_id FROM museum_visitors v JOIN group_tours gt ON v.museum_id = gt.museum_id WHERE gt.group_size > 15);
SELECT drug, MAX(expenditure) FROM rd_expenditure WHERE year = 2021 GROUP BY drug;
SELECT AVG(age * attendees / SUM(attendees)) as weighted_avg_age FROM audience JOIN events ON audience.event_id = events.event_id WHERE events.event_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR) AND events.event_location = 'California';
SELECT AVG(rating) FROM books JOIN children_books ON books.title = children_books.title JOIN authors_from_asia ON books.author = authors_from_asia.author WHERE category = 'children';
SELECT location, SUM(length) FROM underwater_cables GROUP BY location;
SELECT SUM(QuantitySold) FROM DispensaryStrainSales WHERE StrainName = 'Gelato' AND DispensaryName IN (SELECT DispensaryName FROM CaliforniaDispensaries);
SELECT AVG(price) FROM Menu WHERE item_type = 'entrée' AND region = 'New York' AND item_name LIKE '%vegan%';
SELECT AVG(amount) FROM donations d JOIN events e ON d.event_id = e.id WHERE e.name = 'Fall Fundraiser';
SELECT Team, AVG(RiskAssessment) FROM UnderwritingData WHERE State = 'Texas' GROUP BY Team;
SELECT AVG(numberOfIngredients) FROM SkincareProducts WHERE country = 'France' AND isOrganic = TRUE;
SELECT SUM(quantity) FROM seafood_exports WHERE exporter_country = 'Thailand' AND importer_country = 'USA' AND year = 2020 AND unit = 'tonnes';
SELECT s.site_name, COUNT(a.activity_id) as total_activities FROM mining_sites s INNER JOIN mining_activities a ON s.site_id = a.site_id GROUP BY s.site_name ORDER BY total_activities DESC;
SELECT AVG(rating) FROM FactoryRatings WHERE fair_labor = 'yes';
SELECT AVG(Age) FROM Employees WHERE HireYear = 2020 AND Degree = 'Master''s';
UPDATE vessels SET type = 'Bulk Carrier' WHERE id = 1;
SELECT MIN(price) FROM Menu JOIN Restaurants ON Menu.restaurant_id = Restaurants.id WHERE Restaurants.city = 'London' AND category = 'Vegetarian';
SELECT name, location, project_status, completion_date FROM infrastructure GROUP BY name, location, project_status, completion_date;
SELECT v.state, v.gender, u.rate FROM veteran_population v INNER JOIN unemployment u ON v.state = u.state AND v.gender = u.gender;
SELECT MAX(development_cost) FROM biosensors.development_costs WHERE country = 'Germany';
SELECT name FROM energies WHERE type = 'renewable';
SELECT DISTINCT country FROM clinical_trials WHERE trial_id = 'ClinicalTrial123';
SELECT AVG(price) FROM menus WHERE menu_name LIKE '%vegetarian%' AND city = 'New York';
SELECT Sponsors.Name FROM Sponsors WHERE Sponsors.ProgramID = 2 ORDER BY Sponsors.SponsorshipAmount DESC LIMIT 1;
SELECT SUM(rainfall) FROM Rainfall_K WHERE field = 'Field K' AND date BETWEEN '2022-01-01' AND CURRENT_DATE;
SELECT COUNT(*) FROM whale_sightings WHERE year = 2021 AND location = 'Arctic Ocean';
SELECT education_programs.name FROM education_programs LEFT JOIN volunteers ON education_programs.id = volunteers.program_id WHERE volunteers.program_id IS NULL;
SELECT MAX(streams) FROM songs WHERE year BETWEEN 1990 AND 1999;
SELECT location, water_usage/population as avg_water_usage FROM water_usage_metrics WHERE location = 'Washington';
SELECT crop_type, SUM(amount) as total_amount FROM crop_fertilizer WHERE date >= DATEADD(month, -1, GETDATE()) GROUP BY crop_type;
SELECT type, MAX(capacity) FROM projects GROUP BY type
SELECT species, AVG(volume) as avg_volume FROM forests GROUP BY species;
SELECT Destinations.destination_name FROM Destinations INNER JOIN Tourists_Destinations ON Destinations.id = Tourists_Destinations.destination_id WHERE Tourists_Destinations.tourist_id IN (SELECT id FROM Tourists WHERE nationality = 'Australia') AND Destinations.safety_score >= 80;
SELECT MAX(v.AverageSpeed) FROM Vessels v INNER JOIN DockingHistory dh ON v.Id = dh.VesselId WHERE dh.Port = 'Tokyo' AND YEAR(dh.DockingDateTime) = 2021 AND MONTH(dh.DockingDateTime) = 7;
SELECT c.name FROM Countries c INNER JOIN Sustainable_Practices sp ON c.id = sp.country_id WHERE c.continent = 'North America' AND sp.certification_date < '2020-01-01';
SELECT species.name, MAX(carbon_sequestration.sequestration) FROM carbon_sequestration JOIN species ON carbon_sequestration.species_id = species.id JOIN forests ON carbon_sequestration.forest_id = forests.id WHERE forests.region = 'Northeastern' AND carbon_sequestration.year = 2021 GROUP BY species.name;
SELECT SUM(sales) FROM ev_sales_eu WHERE (country = 'Germany' OR country = 'UK') AND year >= 2020;
SELECT destination, continent, arrivals, RANK() OVER (PARTITION BY continent ORDER BY arrivals ASC) as least_visited_rank FROM international_visitor_stats;
SELECT menu_category, AVG(price) FROM menu_items GROUP BY menu_category;
SELECT regions.name, COUNT(accessible_tech_programs.id) as program_count FROM regions INNER JOIN accessible_tech_programs ON regions.id = accessible_tech_programs.region_id GROUP BY regions.name ORDER BY program_count DESC LIMIT 3;
SELECT AVG(Players.Age), SUM(Players.GamePurchaseCount) FROM Players INNER JOIN VR_Games ON Players.PlayerID = VR_Games.PlayerID WHERE VR_Games.VRGamePlayed = FALSE;
SELECT SUM(vulnerabilities) FROM systems WHERE software_version = 'outdated';
SELECT AVG(DeliveryTime) FROM Orders WHERE SupplierID IN (SELECT SupplierID FROM Suppliers WHERE SupplierLocation = 'Local');
SELECT MIN(ESG_rating) FROM company_ESG_ratings WHERE sector = 'healthcare';
DELETE FROM cargo WHERE cargo = 'chemicals' AND delivery_date < '2020-01-01';
DELETE FROM fines WHERE type = 'Traffic Violation';
SELECT species, population FROM animal_populations;
SELECT state, SUM(num_beds) FROM hospital_beds WHERE state IN (SELECT state FROM hospital_beds WHERE num_beds > 500 GROUP BY state) GROUP BY state;
SELECT carrier_name, warehouse_id, COUNT(*) as count FROM shipment WHERE shipped_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY carrier_name, warehouse_id;
SELECT Artifact, MAX(AnalysisDate) FROM ArtifactAnalysis WHERE ArtifactAge = (SELECT MAX(ArtifactAge) FROM ArtifactAnalysis);
SELECT SUM(weight) FROM Shipments WHERE source = 'China' AND destination = 'USA' AND ship_date BETWEEN '2021-07-01' AND '2021-09-30';
SELECT EXTRACT(MONTH FROM CreationDate) as Month, COUNT(*) as ContractsPerMonth FROM SmartContracts WHERE CreationDate BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY Month;
SELECT mine_id, AVG(usage) as avg_energy_consumption FROM energy_usage GROUP BY mine_id;
SELECT AVG(steals) FROM game_stats JOIN players ON game_stats.player_id = players.player_id WHERE players.country = 'South America' GROUP BY players.country HAVING (steals/field_goals_attempted)*100 > 3;
SELECT MAX(financial_wellbeing_score) FROM clients WHERE region = 'North';
SELECT SUM(emission) FROM co2_emissions WHERE year = 2020 AND country IN ('Norway', 'Canada', 'Greenland', 'Russia', 'Iceland', 'Finland', 'Sweden');
SELECT COUNT(DISTINCT Hotels.hotel_id) FROM Hotels INNER JOIN Bookings ON Hotels.hotel_id = Bookings.hotel_id WHERE category = 'Boutique';
SELECT plan_type, data_limit FROM network_plans WHERE network_type = '4G';
SELECT COUNT(DISTINCT supplier) FROM lanthanum_supply WHERE year = 2015;
SELECT COUNT(*) FROM farmers WHERE scale = 'Small' AND country = 'Kenya';
SELECT SUM(player_games.playtime) FROM player_games JOIN players ON player_games.player_id = players.player_id JOIN games ON player_games.game_id = games.game_id WHERE players.country = 'USA' AND games.genre = 'Racing';
SELECT name, success_count FROM threat_actors WHERE target_sector = 'Finance' ORDER BY success_count DESC LIMIT 3;
SELECT Name FROM HealthCenters WHERE State = 'California' AND PatientCount = (SELECT MAX(PatientCount) FROM HealthCenters WHERE State = 'California');
SELECT v.make, v.model, AVG(s.score) as avg_safety_score FROM Vehicles v INNER JOIN Safety_Testing s ON v.id = s.vehicle_id WHERE v.type = 'Sedan' AND v.year > 2019 AND s.test_type = 'Crash Test' GROUP BY v.make, v.model;
SELECT AVG(Movies.IMDbRating) AS Avg_Movie_Rating, AVG(TVShows.IMDbRating) AS Avg_TVShow_Rating, SUM(Movies.ProductionBudget) AS Total_Movie_Budget, SUM(TVShows.ProductionBudget) AS Total_TVShow_Budget FROM Movies INNER JOIN TVShows ON 1=1 WHERE Movies.Country = 'Japan' AND TVShows.Country = 'Japan';
SELECT AVG(amount) AS median_trans FROM (SELECT trans_date, amount, ROW_NUMBER() OVER (PARTITION BY trans_date ORDER BY amount) rn, COUNT(*) OVER (PARTITION BY trans_date) cnt FROM transactions WHERE trans_date >= DATEADD(day, -7, CURRENT_DATE)) x WHERE rn IN ((cnt+1)/2, (cnt+2)/2);
SELECT technology, COUNT(project_id) FROM RenewableEnergyProjects WHERE country = 'Australia' GROUP BY technology;
SELECT SUM(hours_worked) FROM labor_hours WHERE state = 'California' AND year = 2019;
SELECT AVG(budget) as avg_budget FROM infrastructure_projects WHERE category = 'Green Infrastructure' AND location = 'United States';
SELECT PreferredCategory, PreferredProduct, PreferredIngredients, COUNT(*) OVER (PARTITION BY PreferredCategory) as 'CategoryPopularity' FROM ProductPreferences WHERE PreferredIngredients LIKE '%Natural%';
SELECT a.name, COUNT(m.id) as appearances FROM actors a JOIN movies m ON a.id = m.actor_id WHERE m.country = 'France' GROUP BY a.name ORDER BY appearances DESC LIMIT 3;
SELECT incident_date, COUNT(*) as num_incidents FROM security_incidents WHERE incident_date >= DATEADD(day, -7, CURRENT_DATE) GROUP BY incident_date ORDER BY incident_date;
SELECT SUM(biomass) FROM fish_biomass WHERE location = 'Bay of Bengal';
INSERT INTO property (id, inclusive_housing, price) VALUES (456, TRUE, 300000.00);
SELECT contributor FROM waste_contributors WHERE recycling_rate IN (SELECT MAX(recycling_rate) FROM waste_contributors) LIMIT 2;
SELECT cp.name FROM CommunityPrograms cp JOIN Events e ON cp.id = e.community_program_id JOIN Attendance a ON e.id = a.event_id WHERE cp.country = 'Nigeria' GROUP BY cp.name HAVING COUNT(DISTINCT e.id) > 2 AND AVG(a.attendees) > 30 AND e.year = 2022;
UPDATE students SET start_year = 2023 WHERE id = 3;
SELECT SubstanceName, ProductionVolume FROM ChemicalSubstances WHERE Region = 'Asia' ORDER BY ProductionVolume DESC LIMIT 3;
SELECT 100.0 * COUNT(*) FILTER (WHERE has_telemedicine = true) / COUNT(*) FROM healthcare_facilities WHERE county = 'Pineville';
SELECT COUNT(DISTINCT users.id) FROM users INNER JOIN posts ON users.id = posts.user_id INNER JOIN post_tags ON posts.id = post_tags.post_id WHERE post_tags.tag = 'LGBTQ+ rights' AND users.joined_date <= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);
SELECT continent, name, COUNT(*) as count FROM biosensor_types.sensors GROUP BY continent, name ORDER BY continent, count DESC;
SELECT product_name, manufactured_country, safety_rating FROM product_safety WHERE manufactured_country = 'India' AND safety_rating < 70;
CREATE VIEW high_traffic_stations AS SELECT s.station_id, s.name FROM stations s JOIN entries e ON s.station_id = e.station_id GROUP BY s.station_id, s.name HAVING COUNT(e.entry_time) > 1000;
SELECT COUNT(*) FROM disability_support_programs WHERE YEAR(created_date) = 2020;
SELECT COUNT(DISTINCT donor_id), SUM(amount) FROM donations GROUP BY donor_id HAVING COUNT(*) > 1;
SELECT dept_name, SUM(CASE WHEN diversity_inclusion_training THEN 1 ELSE 0 END) AS num_trained FROM employees JOIN departments ON employees.dept_id = departments.dept_id GROUP BY dept_name;
SELECT SUM(total_actions) FROM (SELECT post_id, COUNT(*) AS total_actions FROM user_actions WHERE action IN ('like', 'comment') GROUP BY post_id) AS post_actions JOIN posts ON post_actions.post_id = posts.id WHERE posts.category = 'tech' AND post_date BETWEEN '2022-02-01' AND LAST_DAY('2022-02-01');
SELECT COUNT(*) FROM public_parks WHERE city = 'Toronto';
SELECT JobRole, AVG(Salary) as 'AvgSalary', COUNT(*) as 'EmployeeCount' FROM JobRoles GROUP BY JobRole;
SELECT name FROM faculty WHERE department = 'Mathematics';
SELECT AVG(investment) FROM circular_investments WHERE region = 'Latin America';
SELECT job, AVG(hourly_wage) FROM labor_stats GROUP BY job;
SELECT COUNT(*) as total_incidents FROM incident_reports WHERE department = 'Marketing' AND reported_date >= NOW() - INTERVAL '3 months';
UPDATE Artifacts SET Description = 'An extraordinary artifact' WHERE ArtifactID = 1;
SELECT COUNT(dispensary) FROM dispensary_sales WHERE state = 'CA' AND sales > 50000 AND sale_date BETWEEN '2022-03-01' AND '2022-03-31';
INSERT INTO irrigation_system (irrigation_id, system_type, status) VALUES (1, 'drip', 'active');
SELECT p.name, SUM(p.spending) FROM project p JOIN continent c ON p.location = c.name WHERE c.name = 'Africa' GROUP BY p.name;
SELECT incident_type, SUM(affected_assets) as total_occurrences FROM sector_incidents WHERE sector = 'Technology' AND incident_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY incident_type ORDER BY total_occurrences DESC;
SELECT e.gender, COUNT(e.id) as total_hired FROM employees e WHERE e.hire_date >= '2022-01-01' AND e.hire_date < '2023-01-01' AND e.country IN (SELECT region FROM regions WHERE region_name = 'South Asia') GROUP BY e.gender;
SELECT SUM(CASE WHEN operation_type IN ('Gold', 'Copper') AND location IN ('Peru', 'Mexico') THEN monthly_co2_emission ELSE 0 END) as total_emission FROM mining_operations;
SELECT MIN(transaction_value) FROM Smart_Contracts WHERE blockchain = 'Ethereum';
SELECT mining_operations.operation_name FROM mining_operations LEFT JOIN co2_emissions ON mining_operations.operation_id = co2_emissions.operation_id WHERE co2_emissions.operation_id IS NULL;
SELECT AVG(donation_amount) as avg_donation_amount FROM donations WHERE donor_country IN ('USA', 'Canada');
SELECT AVG(age) FROM readers WHERE preference = 'politics'
SELECT * FROM students WHERE department = 'Electrical Engineering' ORDER BY gre_score DESC LIMIT 5;
SELECT AVG(num_employees) FROM MuseumData WHERE state = 'California';
SELECT MIN(temperature) FROM rural_area_1 WHERE date LIKE '2022-01-%';
SELECT name FROM research_projects WHERE participants < 5;
SELECT AVG(age) FROM Astronauts WHERE country = 'Brazil';
SELECT Z.Zip, SUM(B.SquareFootage) as TotalSqFt FROM Buildings B JOIN ZipCodes Z ON B.ZipCodeID = Z.ZipCodeID WHERE B.GreenCertified = TRUE GROUP BY Z.Zip;
SELECT SUM(biomass) as total_biomass FROM fish_stock_atlantic JOIN species_temp_range ON fish_stock_atlantic.species = species_temp_range.species WHERE region = 'Atlantic' AND max_temp > 20.0;
SELECT AVG(launch_date) FROM SpaceMissions WHERE mission_name = 'Mars Pathfinder' OR mission_name = 'Mars Global Surveyor' OR mission_name = 'Mars Odyssey';
SELECT SUM(revenue) FROM virtual_tours WHERE country = 'Japan' AND DATE_TRUNC('month', timestamp) = DATE_TRUNC('month', NOW() - INTERVAL '1 month');
SELECT SUM(budget_amount) FROM education_budget WHERE budget_year = 2022 AND budget_state = 'New York';
SELECT property_type, AVG(property_tax) as avg_property_tax FROM properties GROUP BY property_type; SELECT (t1.avg_property_tax - t2.avg_property_tax) as tax_difference FROM (SELECT AVG(property_tax) as avg_property_tax FROM properties WHERE property_type = 'single-family') t1, (SELECT AVG(property_tax) as avg_property_tax FROM properties WHERE property_type = 'apartment') t2;
SELECT founding_city, COUNT(*) AS company_count FROM company_info WHERE industry = 'Tech' GROUP BY founding_city ORDER BY company_count DESC LIMIT 3;
SELECT AVG(post_cnt) FROM (SELECT COUNT(p.id) post_cnt FROM posts p JOIN users u ON p.user_id = u.id WHERE u.country = 'United States' GROUP BY p.user_id HAVING SUM(u.followers) > 10000) t;
SELECT COUNT(DISTINCT user_id) AS users_clicked_ads, region FROM user_activity INNER JOIN users ON user_activity.user_id = users.id WHERE activity_type = 'clicked_ad' AND activity_date >= DATE(NOW()) - INTERVAL 7 DAY AND region LIKE 'Asia%' GROUP BY region;
SELECT s.Country, COUNT(so.SatelliteID) AS TotalSatellitesInLEO FROM SatelliteOrbits so JOIN SpaceLaunches s ON so.SatelliteID = s.SatelliteID WHERE OrbitType = 'LEO' GROUP BY s.Country ORDER BY TotalSatellitesInLEO DESC;
SELECT farm_type, AVG(stocking_density) FROM farm WHERE water_type = 'Freshwater' GROUP BY farm_type;
SELECT SUM(CASE WHEN project_type = 'Bridge' THEN 1 ELSE 0 END) AS bridges, SUM(CASE WHEN project_type = 'Tunnel' THEN 1 ELSE 0 END) AS tunnels, COUNT(*) - SUM(CASE WHEN project_type IN ('Bridge', 'Tunnel') THEN 1 ELSE 0 END) AS other FROM Transportation;
SELECT name FROM community_leaders WHERE region = 'Africa';
INSERT INTO food_safety_inspections (record_id, inspection_date, cuisine, violation_count) VALUES (3, '2022-03-01', 'French', 1);
SELECT SUM(quantity) FROM africa_sourcing WHERE material = 'recycled polyester';
SELECT SUM(Frequency) FROM Programs WHERE Program = 'Climate Change' AND Location = 'Asia';
SELECT team, AVG(age) as avg_age FROM players WHERE position = 'Basketball Player' GROUP BY team ORDER BY avg_age DESC LIMIT 1;
SELECT SUM(program_budget.budget) FROM program_budget INNER JOIN program_info ON program_budget.program_id = program_info.program_id WHERE program_info.department = 'wildlife_protection';
SELECT MAX(capacity) FROM certifications WHERE city = 'New York City';
SELECT carrier_name FROM freight_forwarding ORDER BY carrier_id DESC LIMIT 2;
SELECT name, feeding_habit, habitat FROM aquatic_species;
SELECT g.building_type, AVG(g.carbon_offset + c.carbon_offset) as avg_carbon_offset FROM green_buildings g INNER JOIN carbon_offset_initiatives c ON g.location = c.location GROUP BY g.building_type;
SELECT AVG(yield) FROM rural_dev WHERE crop = 'corn';
UPDATE labor_statistics SET hourly_wage = hourly_wage * 1.07 WHERE job_category = 'Masonry';
SELECT AVG(passengers) FROM trains t JOIN train_passengers p ON t.train_id = p.train_id WHERE t.line_id = 2 AND time_of_day = 'rush hour';
SELECT MIN(price) FROM ticket_sales WHERE section = 'Section E';
SELECT COUNT(*) FROM defense_projects WHERE region = 'Asia-Pacific' AND delayed = TRUE AND start_date <= '2023-09-30' AND end_date >= '2023-07-01';
SELECT COUNT(*) FROM financial_wellbeing_initiatives WHERE launch_date BETWEEN '2021-01-01' AND '2021-03-31';
SELECT conditions.condition_name, COUNT(*) as num_patients FROM conditions JOIN treatments ON conditions.condition_id = treatments.condition_id WHERE state = 'Texas' GROUP BY conditions.condition_name ORDER BY num_patients DESC LIMIT 5;
SELECT supplier, mode, SUM(amount) as total_spent FROM purchases JOIN suppliers ON purchases.supplier = suppliers.id WHERE date >= DATEADD(year, -1, GETDATE()) GROUP BY supplier, mode;
SELECT cuisine, SUM(revenue) as total_revenue FROM restaurant_revenue WHERE date >= '2022-03-01' AND date <= '2022-03-31' AND cuisine = 'Chinese' GROUP BY cuisine;
SELECT genre, SUM(units_sold * price) AS total_revenue FROM sales.games GROUP BY genre;
SELECT country FROM customers WHERE total_spend = (SELECT MAX(total_spend) FROM customers WHERE country IN ('Nigeria', 'Egypt', 'South Africa'));
SELECT COUNT(*) FROM PeacekeepingOperations WHERE Year = 2017;
SELECT COUNT(*) as count FROM security_incidents WHERE date_reported >= '2022-01-01' AND date_reported < '2022-04-01';
SELECT trial_name FROM clinical_trials WHERE country IN ('Kenya', 'Nigeria');
SELECT Region, COUNT(*) FROM Healthcare WHERE Specialty != 'Dentist' GROUP BY Region;
SELECT AVG(CASE WHEN Department = 'IT' THEN Salary ELSE NULL END) AS Avg_IT_Salary, AVG(CASE WHEN Department = 'Finance' THEN Salary ELSE NULL END) AS Avg_Finance_Salary FROM Employees;
SELECT SUM(funding.amount) FROM companies INNER JOIN funding ON companies.id = funding.company_id WHERE companies.founder_gender = 'Female' AND companies.industry = 'Technology';
SELECT COUNT(*) FROM Schools WHERE SchoolType = 'Public' AND State = 'New York';
SELECT type, SUM(co2_reduction_tons) FROM renewable_projects WHERE country IN ('USA', 'Canada') GROUP BY type;
SELECT r.region, AVG(c.days_to_resolve) AS avg_days_to_resolve FROM cases c JOIN regions r ON c.region_id = r.region_id GROUP BY r.region;
SELECT AVG(population) FROM arctic_caribou WHERE year BETWEEN (SELECT MAX(year) FROM arctic_caribou) - 2 AND (SELECT MAX(year) FROM arctic_caribou);
SELECT SUM(Amount) FROM Budget WHERE Service IN ('Infrastructure', 'Transportation') AND Quarter = 'Q3' AND Year = 2022;
SELECT SUM(DonationAmount) FROM Donations JOIN Donors ON Donations.DonorID = Donors.DonorID WHERE Donors.Country = 'USA' GROUP BY DonorID;
SELECT SUM(total_cargo) FROM ports WHERE region = 'North America';
SELECT MAX(weight) FROM polar_bears WHERE sanctuary = 'Arctic Tundra' AND age >= 18;
SELECT msy_value FROM msy WHERE species = 'Tilapia' AND year = 2022 AND region = 'Mediterranean';
SELECT destination FROM tourism_stats WHERE tourists > 500 AND visitor_country = 'Australia';
SELECT AVG(Speed) FROM Vessels WHERE DockedAt >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) AND Ports.Name = 'Oakland';
SELECT AVG(recycling_rate) FROM recycling_rates_canada WHERE location = 'Rural' AND date BETWEEN '2022-01-01' AND '2022-01-31';
SELECT AVG(price) as avg_price FROM Artworks WHERE period = 'Post-Impressionist' AND artwork_type = 'sculpture';
SELECT ContinentName, SUM(InitiativeCount) as TotalInitiativeCount FROM ContinentSocialGood GROUP BY ContinentName;
SELECT MAX(num_personnel) FROM peacekeeping_ops;
SELECT continent, AVG(life_expectancy) FROM life_expectancy GROUP BY continent;
SELECT COUNT(DISTINCT donor_id) FROM donor WHERE donation_type = 'Disaster Relief';
SELECT s.team, s.name, SUM(t.quantity) as total_quantity FROM salesperson s JOIN tickets t ON s.id = t.salesperson_id GROUP BY s.team, s.name;
SELECT MIN(IssueDate) FROM PoliciesBroker WHERE Broker = 'BrokerSmith';
SELECT SUM(sales.revenue) FROM sales INNER JOIN products ON sales.product_id = products.product_id WHERE products.is_ethically_sourced = true;
SELECT COUNT(*) FROM vr_games INNER JOIN (SELECT player_id FROM players INNER JOIN esports_participants ON players.player_id = esports_participants.player_id WHERE players.age < 25) AS younger_players ON vr_games.game_id = younger_players.player_id WHERE vr_games.vr = TRUE;
SELECT name, location, height FROM dams WHERE location = 'South Africa' AND year < 1980;
SELECT course_name, course_duration FROM courses;
SELECT AVG(patients.age) FROM patients INNER JOIN support_groups ON patients.id = support_groups.patient_id WHERE support_groups.group LIKE '%Support Group%' AND patients.country = 'UK';
SELECT country, (SUM(consumption) FILTER (WHERE year BETWEEN 2020 AND 2022) OVER (PARTITION BY country)::DECIMAL / SUM(consumption) OVER (PARTITION BY country)) * 100 AS pct_non_renewable FROM SA_Energy_Consumption;
SELECT MIN(capacity) FROM landfill_capacity WHERE region = 'Africa';
SELECT COUNT(*) FROM FrenchMunicipalities WHERE recycling_rate < 30;
SELECT State, COUNT(*) FROM PatientDemographics WHERE TreatmentDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY State;
SELECT MAX(BillingAmount) FROM Cases INNER JOIN (SELECT RegionID, AVG(BillingAmount) AS AvgBillingAmount FROM Cases GROUP BY RegionID ORDER BY AvgBillingAmount DESC LIMIT 1) AS Subquery ON Cases.RegionID = Subquery.RegionID;
SELECT COUNT(*) FROM (SELECT category, ROW_NUMBER() OVER (PARTITION BY category ORDER BY updated_at) AS row_number FROM news) AS subquery WHERE category = 'Aquatic Farming' AND row_number = 1;
SELECT species_name FROM animal_species WHERE species_id NOT IN (SELECT animal_id FROM rehabilitation_center);
SELECT client_id, AVG(investment) OVER (PARTITION BY client_id ORDER BY client_id) as avg_daily_investment FROM daily_investments;
SELECT COUNT(*) FROM companies WHERE department = 'manufacturing';
SELECT name, visitors FROM museums WHERE country IN ('Italy', 'France') ORDER BY visitors DESC LIMIT 2;
SELECT SUM(Personnel) as TotalPersonnel, COUNT(*) as BaseCount FROM MilitaryBases WHERE Country IN ('USA', 'Canada');
SELECT AVG(AvgStockLevel) FROM FarmLocation WHERE Owner = 'AquaCorp';
SELECT pollution_type, COUNT(*) FROM Pollution_Data WHERE location = 'Mediterranean Sea' GROUP BY pollution_type;
SELECT DISTINCT user_id FROM workout_data WHERE workout_type = 'Zumba';
SELECT SUM(LaborCost) FROM Projects WHERE Region = 'Urban';
SELECT SUM(revenue) FROM Sales WHERE dish_type = (SELECT id FROM Restaurants WHERE cuisine_type = 'Cuisine Type A');
SELECT MAX(Patients) FROM PatientsPerCenter WHERE State = 'Florida';
SELECT CountryName, SUM(CapacityValue) as TotalCapacity FROM CapacityBuilding WHERE DonationDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY CountryName;
SELECT grand_slams FROM tennis_players WHERE player_name = 'Serena Williams';
SELECT SUM(cost) FROM pollution_control_initiatives;
SELECT AVG(depth) FROM ocean_floor_mapping WHERE location LIKE '%Arctic Ocean%';
SELECT SUM(installed_capacity) FROM solar_projects WHERE state = 'California' AND construction_year > 2015;
SELECT COUNT(visitor_id) FROM visitors WHERE visited_date >= DATEADD(day, -30, GETDATE());
SELECT MIN(price) FROM RealEstateCoOwnership.Properties INNER JOIN RealEstateCoOwnership.CoOwnership ON Properties.id = CoOwnership.property_id;
SELECT MAX(duration) FROM SpaceMissions WHERE agency = 'Roscosmos';
SELECT MissionType, AVG(Cost) as AvgCost FROM SpaceExploration GROUP BY MissionType;
SELECT c.courier, AVG(d.delivery_time) as avg_delivery_time FROM deliveries d JOIN couriers c ON d.courier_id = c.courier_id GROUP BY c.courier;
SELECT Program, Success_Rate FROM Restorative_Justice_Outcomes;
SELECT SUM(quantity) FROM orders WHERE product_id = (SELECT id FROM products WHERE name = 'Rice');
SELECT CHW_ID, MAX(Score) FROM Trainings WHERE Training_Name = 'Mental Health Parity' GROUP BY CHW_ID;
SELECT n.name, COUNT(c.id) FROM neighborhoods n JOIN crimes c ON n.id = c.neighborhood_id WHERE c.date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY n.id;
SELECT director FROM Director_Awards ORDER BY awards DESC LIMIT 2;
SELECT SUM(gold_production) FROM south_africa_gold_mines WHERE location LIKE '%South Africa%';
SELECT energy_source, SUM(consumption) FROM energy_consumption WHERE year IN (2017, 2018, 2019, 2020) GROUP BY energy_source;
CREATE TABLE mental_health_treatment_approaches (id INT PRIMARY KEY, name VARCHAR(255), description TEXT);
SELECT l.gender, c.court_location, COUNT(c.id) as case_count FROM public.lawyers l JOIN public.cases c ON l.id = c.lawyer_id WHERE l.gender = 'Female' GROUP BY l.gender, c.court_location;
SELECT Museums.name FROM Museums JOIN ArtPieces ON Museums.id = ArtPieces.museumId WHERE ArtPieces.artType = 'Modern' GROUP BY Museums.name ORDER BY COUNT(*) DESC;
SELECT t.team_name, ROUND(100.0 * SUM(CASE WHEN fd.gender = 'Female' THEN 1 ELSE 0 END) / COUNT(DISTINCT f.fan_id)) as pct_female_fans FROM teams t JOIN fans f ON t.team_id = f.team_id JOIN fan_demographics fd ON f.fan_id = fd.fan_id GROUP BY t.team_name;
SELECT Name, Ethnicity, JobTitle FROM EmployeeData WHERE Department = 'Engineering' AND TrainingComplete = 0;
SELECT COUNT(*) FROM Volunteers WHERE YEAR(SignUpDate) = 2022;
SELECT AVG(value * (SELECT rate FROM ExchangeRates WHERE currency = 'BTC' AND timestamp = tx.timestamp)) as avg_value_usd FROM BitcoinTransactions tx WHERE timestamp >= UNIX_TIMESTAMP(DATE_SUB(CURRENT_DATE, INTERVAL 1 WEEK)) * 1000;
SELECT region, country, COUNT(*) as species_count FROM deep_sea_species GROUP BY region, country ORDER BY region, species_count DESC;
SELECT Ethnicity, COUNT(*) as CHWCount FROM CommunityHealthWorker WHERE State = 'Texas' GROUP BY Ethnicity;
INSERT INTO recycling_rates (id, location, rate) VALUES (1, 'Seattle', 63.1);
SELECT Name FROM Fishermen WHERE FishermanID IN (SELECT FishermanID FROM Seafood WHERE Weight > 1000 AND CatchDate >= DATEADD(month, -1, GETDATE()) GROUP BY FishermanID HAVING COUNT(*) > 1);
DELETE A FROM Artworks A INNER JOIN Artists B ON A.artist_id = B.id WHERE B.gender = 'Male' AND B.ethnicity = 'Hispanic'; DELETE FROM Artists WHERE gender = 'Male' AND ethnicity = 'Hispanic';
SELECT site_name, (virtual_visitors - LAG(virtual_visitors) OVER (PARTITION BY country ORDER BY year)) as growth FROM cultural_sites WHERE country = 'Japan' AND growth > 0;
SELECT name, material FROM Permits WHERE issue_date > (CURRENT_DATE - INTERVAL '3 months')
DELETE FROM Suppliers WHERE Suppliers.sustainable = false AND Suppliers.rating < 3;
SELECT data_usage FROM customers WHERE city = 'Seattle' AND id IN (SELECT id FROM (SELECT id FROM customers WHERE city = 'Seattle' ORDER BY data_usage DESC LIMIT 5) subquery) ORDER BY data_usage DESC;
SELECT company_name, worker_count FROM renewable_energy_companies WHERE country = 'Europe' ORDER BY worker_count DESC LIMIT 3;
SELECT fishing_method, SUM(biomass) FROM sustainable_seafood_trends_3 GROUP BY fishing_method;
SELECT habitat_type, AVG(wildlife_density) FROM wildlife_habitat GROUP BY habitat_type;
SELECT COUNT(booking_id) FROM bookings WHERE tour_type = 'Virtual' AND booking_date >= DATEADD(month, -1, GETDATE());
UPDATE Funding SET Funding = 750000.00 WHERE Year = 2022 AND Region = 'Asia' AND Initiative = 'Climate Mitigation';
SELECT COUNT(*) FROM artists WHERE country = 'Spain';
SELECT organization, COUNT(operation_name) FROM peacekeeping_operations_lead GROUP BY organization;
SELECT SUM(sales_amount) FROM sales WHERE drug_name = 'DrugA' AND region = 'North' AND YEAR(sale_date) = 2020;
SELECT SUM(quantity) FROM sales JOIN suppliers ON sales.supplier_id = suppliers.supplier_id WHERE suppliers.labor_practice = 'Ethical';
SELECT organization, MIN(volunteer_hours) as min_hours FROM volunteer_hours GROUP BY organization ORDER BY min_hours DESC LIMIT 5;
SELECT AVG(score) FROM drought_impact WHERE region = 'Texas' AND year BETWEEN (YEAR(CURRENT_DATE)-3) AND YEAR(CURRENT_DATE);
DELETE FROM equipment_maintenance WHERE last_maintenance_date < DATE_SUB(CURDATE(), INTERVAL 15 YEAR);
SELECT sale_id, SUM(revenue) FROM sales GROUP BY sale_id;
SELECT AVG(age) FROM patients WHERE condition = 'anxiety';
SELECT donation_category, SUM(donation_amount) as total_donation_amount_per_category_in_2022 FROM Donations WHERE donation_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY donation_category;
SELECT cm.name, SUM(e.amount) FROM chemical_manufacturers cm JOIN emissions e ON cm.manufacturer_id = e.manufacturer_id WHERE cm.country = 'USA' AND e.gas_type = 'CO2' GROUP BY cm.name;
SELECT f.name, AVG(h.yield) AS avg_yield FROM cultivation_facilities f JOIN harvests h ON f.facility_id = h.facility_id WHERE f.state = 'Washington' GROUP BY f.name;
SELECT COUNT(id), SUM(population) FROM endangered_species;
SELECT AVG(transaction_value) FROM Smart_Contracts WHERE contract_name = 'Contract A';
CREATE TABLE artist_demographics (artist_id INT, name VARCHAR(255), age INT, genre VARCHAR(255));
SELECT AVG(cost) FROM monthly_cost WHERE chemical = 'Eco-friendly Polymer';
SELECT AVG(confidence_score) FROM explainable_ai WHERE country IN ('Nigeria', 'Egypt', 'South Africa');
SELECT a.name FROM athletes a INNER JOIN medals m1 ON a.id = m1.athlete INNER JOIN medals m2 ON a.id = m2.athlete WHERE m1.event = 'Olympics' AND m2.event = 'Commonwealth Games' AND m1.medal = 'gold' AND m2.medal = 'gold';
SELECT AVG(waste_quantity / population) FROM waste_generation WHERE year = 2018 AND region = 'North America';
SELECT i.name FROM ingredient i JOIN product_ingredient pi ON i.id = pi.ingredient_id GROUP BY i.id HAVING COUNT(pi.product_id) > 5;
SELECT genre, AVG(rating) as avg_rating FROM movies WHERE country = 'United States' AND release_year BETWEEN 2010 AND 2020 GROUP BY genre;
SELECT COUNT(PermitID) FROM ConstructionPermits WHERE City = 'Seattle';
SELECT ingredient, SUM(ingredient_quantity) as total_quantity FROM products_ingredients_extended WHERE brand IN ('BrandA', 'BrandB', 'BrandC') AND ingredient NOT IN ('Water', 'Alcohol') GROUP BY ingredient ORDER BY total_quantity DESC LIMIT 3;
DELETE FROM tv_shows WHERE rating < 7;
SELECT COUNT(*) FROM Artworks WHERE country IN ('India', 'Pakistan', 'Bangladesh', 'Sri Lanka', 'Nepal') AND is_textile = true AND year BETWEEN 1950 AND 1999;
SELECT country, COUNT(DISTINCT initiative_id) FROM circular_economy_initiatives WHERE year BETWEEN 2018 AND 2022 GROUP BY country;
SELECT AVG(average_depth) FROM pacific_plate WHERE trench_name = 'Mariana Trench' OR trench_name = 'Tonga Trench';
SELECT COUNT(*) FROM CDF WHERE event_type = 'Financial Capability Training' AND YEAR(event_date) = 2019;
UPDATE initiatives i SET i.initiative_value = 1250 WHERE i.initiative_name = 'Sustainable Irrigation' AND i.region_id = (SELECT r.region_id FROM regions r WHERE r.region_name = 'Maghreb');
SELECT CustomerName, SUM(OrderValue) as TotalSpending FROM Orders o JOIN Customers c ON o.CustomerID = c.CustomerID JOIN EthicalProducts ep ON o.OrderID = ep.OrderID WHERE ProductType IN ('Fair Trade', 'Sustainable') GROUP BY CustomerName ORDER BY TotalSpending DESC LIMIT 3;
SELECT (COUNT(*))/(SELECT COUNT(*) FROM order_details) * 100.00 AS percentage FROM order_details WHERE circular_economy = true;
DELETE FROM public_services WHERE category = 'Transportation';
DROP TABLE workout_equipment;
SELECT network, AVG(transactions_value) FROM solana_transactions WHERE network = 'Solana' GROUP BY network;
DELETE FROM comments WHERE user_id IN (SELECT user_id FROM comments WHERE country = 'France') AND created_date < '2022-08-01'
SELECT country, MAX(energy_storage_capacity) OVER (PARTITION BY country) FROM energy_storage;
SELECT AVG(occupancy) FROM occupancy WHERE city = 'Sydney' AND year = 2022;
SELECT category, AVG(price) as avg_price FROM menus JOIN menu_categories ON menus.category = menu_categories.category WHERE menus.category IN ('vegan appetizers', 'vegan entrees', 'vegan desserts') GROUP BY category;
SELECT SUM(population) FROM habitat_preservation WHERE endangered_status != 'Endangered';
SELECT COUNT(*) FROM disasters WHERE country = 'Haiti' AND year BETWEEN 2010 AND 2020;
SELECT AVG(rating) FROM europe.hotels;
SELECT platform, incident_type, COUNT(*) AS count FROM disinformation WHERE incident_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY platform, incident_type;
SELECT COUNT(Players.PlayerID) FROM Players JOIN PlayerGameLibrary ON Players.PlayerID = PlayerGameLibrary.PlayerID JOIN GameLibrary ON PlayerGameLibrary.GameID = GameLibrary.GameID WHERE Players.Country = 'India' AND GameLibrary.Category = 'Action';
SELECT Country, SUM(NumberOfPractitioners) FROM ArtsPractitioners WHERE Country = 'Asia' GROUP BY Country ORDER BY Country ASC;
SELECT (species_count - (SELECT species_count FROM marine_species_count WHERE ocean = 'Indian Ocean')) AS difference FROM marine_species_count WHERE ocean = 'Atlantic Ocean';
SELECT COUNT(*) FROM energy_storage_projects esp WHERE esp.state = 'Texas' AND esp.year BETWEEN 2018 AND 2020;
SELECT AVG(avg_depth) FROM ocean_depths;
SELECT SUM(weight) as total_weight FROM artifacts a JOIN excavation_sites s ON a.site_id = s.site_id WHERE s.country = 'Peru' AND a.category_id = 2;
SELECT initiative_name FROM community_dev WHERE start_date LIKE '2019-%';
SELECT country, AVG(revenue) as avg_revenue FROM hotels WHERE country IN ('Indonesia', 'Malaysia', 'Thailand', 'Singapore') GROUP BY country;
SELECT AVG(tx_value) FROM Transactions WHERE contract_name = 'SmartContractC';
UPDATE Players SET Age = 26 WHERE Player_ID = 1;
SELECT * FROM ticket_sales WHERE team = 'los_angeles_lakers';
SELECT 100.0 * SUM(CASE WHEN vegan THEN price ELSE 0 END) / SUM(price) AS percentage FROM cosmetics_sales_southkorea WHERE country = 'South Korea';
SELECT s.strategy, SUM(es.score) as total_score FROM strategies s INNER JOIN esg_scores es ON s.id = es.strategy_id GROUP BY s.strategy;
SELECT winner FROM cricket_world_cup WHERE (SELECT COUNT(*) FROM cricket_world_cup WHERE winner = (SELECT winner FROM cricket_world_cup WHERE year = 1975)) > (SELECT COUNT(*) FROM cricket_world_cup WHERE winner = (SELECT winner FROM cricket_world_cup WHERE year = 1992));
SELECT AVG(safety_score) FROM creative_ai_apps WHERE region = 'Asia-Pacific';
SELECT State, SUM(SafetyIncidents) AS TotalSafetyIncidents FROM ManufacturingPlants GROUP BY State;
SELECT state, COUNT(*) FROM programs WHERE type = 'Criminal Justice Reform' GROUP BY state;
SELECT COUNT(DISTINCT PlayerID) as TotalPlayers FROM GameEvents WHERE EventType = 'GameStart' AND EventTimestamp BETWEEN DATEADD(month, -3, CURRENT_DATE) AND CURRENT_DATE AND (SELECT COUNT(*) FROM GameEvents as GE2 WHERE GE2.PlayerID = GameEvents.PlayerID AND GE2.EventType IN ('GameStart', 'GameEnd') AND GE2.EventTimestamp BETWEEN GameEvents.EventTimestamp AND DATEADD(month, 3, GameEvents.EventTimestamp)) > (SELECT COUNT(*) * 0.75 FROM GameEvents as GE3 WHERE GE3.PlayerID = GameEvents.PlayerID AND GE3.EventType = 'GameStart' AND GE3.EventTimestamp BETWEEN DATEADD(month, -3, CURRENT_DATE) AND GameEvents.EventTimestamp);
SELECT DATE_PART('month', donation_date) as month, AVG(donation_amount) as avg_donation FROM donations WHERE donation_date >= '2020-01-01' AND donation_date < '2021-01-01' GROUP BY month;
SELECT AVG(s.mental_health_score) FROM student_mental_health s;
SELECT currencies.name, SUM(donations.amount * currencies.exchange_rate) FROM donations JOIN currencies ON donations.currency_id = currencies.id WHERE donations.donation_date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) AND CURRENT_DATE GROUP BY donations.currency_id;
SELECT artist_name FROM music_streaming WHERE total_streams > 10000000 AND artist_id NOT IN (SELECT artist_id FROM concert_ticket_sales);
SELECT species_name, ocean_basin, COUNT(*) FROM marine_species GROUP BY ocean_basin;
SELECT suppliers.name, MAX(environmental_impact.impact) AS max_impact FROM suppliers INNER JOIN chemical_inventory ON suppliers.id = chemical_inventory.supplier_id INNER JOIN environmental_impact ON chemical_inventory.chemical_name = environmental_impact.chemical_name WHERE environmental_impact.date >= DATEADD(year, -1, GETDATE()) GROUP BY suppliers.id;
SELECT EXTRACT(MONTH FROM PurchaseDate) AS Month, COUNT(DISTINCT CustomerID) FROM Purchases WHERE Organic = TRUE GROUP BY Month;
SELECT SUM(cnt) FROM (SELECT COUNT(*) cnt FROM pollution_control_initiatives WHERE region = 'Arctic' UNION ALL SELECT COUNT(*) FROM marine_life_research_stations WHERE region = 'Arctic') x;
SELECT C.Location, C.Initiative FROM CircularEconomyInitiatives C WHERE C.Location IN ('Mumbai', 'Paris') AND C.StartDate BETWEEN '2018-01-01' AND '2020-12-31' GROUP BY C.Location, C.Initiative;
SELECT project_id, MAX(efficiency) FROM efficiency_stats GROUP BY project_id;
SELECT SUM(salary) FROM salaries_ext_ext WHERE sector = 'non-renewable energy';
SELECT case_id, case_outcome FROM cases WHERE case_state = 'New York' UNION SELECT case_id, case_outcome FROM cases WHERE case_state = 'Illinois';
SELECT * FROM top_sustainable_suppliers;
SELECT * FROM hotels WHERE country IN ('Japan', 'South Korea') AND sustainable = TRUE ORDER BY popularity DESC LIMIT 3;
SELECT AVG(budget) as avg_budget, COUNT(*) as num_hospitals FROM hospitals WHERE state = 'Washington' AND beds > 50;
SELECT country1, country2, exercise FROM military_exercises WHERE (country1 IN ('Egypt', 'Algeria', 'Nigeria', 'South Africa', 'Morocco') AND country2 IN ('India', 'China', 'Japan', 'South Korea', 'Singapore')) OR (country1 IN ('India', 'China', 'Japan', 'South Korea', 'Singapore') AND country2 IN ('Egypt', 'Algeria', 'Nigeria', 'South Africa', 'Morocco')) AND year BETWEEN 2019 AND 2021;
SELECT subscriber_id FROM mobile_subscribers WHERE region = 'Europe' AND last_call_date IS NULL OR last_call_date < DATE_SUB(CURDATE(), INTERVAL 30 DAY);
SELECT revenue_by_restaurant.restaurant_id, MAX(revenue_by_restaurant.revenue) FROM revenue_by_restaurant WHERE revenue_by_restaurant.area = 'rural';
SELECT COUNT(*) FROM workplace_safety WHERE safety_rating > 85;
SELECT SUM(member_count) FROM union_details_2 WHERE union_name LIKE '%Bricklayers%';
SELECT e.country, e.year, e.quantity, m.trend, m.value, CORR(e.quantity, m.value) AS correlation FROM europium_production e INNER JOIN europium_market_trends m ON e.country = m.country AND e.year = m.year GROUP BY e.country, e.year;
SELECT color, COUNT(*) as count FROM garment_colors gc JOIN sales s ON gc.garment_id = s.garment_id WHERE size = 12 GROUP BY color ORDER BY count DESC LIMIT 1;
SELECT COUNT(*) FROM Players WHERE Country IN ('Egypt', 'Nigeria', 'South Africa', 'Morocco', 'Kenya');
SELECT * FROM intelligence_ops WHERE location LIKE 'Africa%' AND timestamp > DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 3 MONTH);
SELECT COUNT(*) FROM ethical_ai_projects_2 WHERE completion_year BETWEEN 2018 AND 2020;
SELECT project_id, project_name, DATEDIFF('day', start_date, end_date) AS project_duration FROM Defense_Project_Timelines WHERE DATEDIFF('day', start_date, end_date) > PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY DATEDIFF('day', start_date, end_date));
SELECT month, AVG(cases_per_month) FROM infectious_disease_tracking_2 WHERE location = 'rural' GROUP BY month;
SELECT SUM(BillingAmount) FROM Precedents JOIN Cases ON Precedents.CaseID = Cases.CaseID WHERE PrecedentYear >= YEAR(CURRENT_DATE) - 5;
SELECT AVG(Troops) FROM TroopDeployments WHERE Region = 'Middle East' AND Year(Date) = 2021 GROUP BY Month;
INSERT INTO transactions (hash, value, timestamp) VALUES ('abc123', 5000, '2022-03-02 10:00:00');
SELECT i.sector, SUM(w.consumption) as total_consumption FROM industrial_sectors i JOIN water_consumption w ON i.id = w.sector_id WHERE w.year = 2020 GROUP BY i.sector;
SELECT O.org_name, COUNT(DISTINCT D.donor_id) as total_donors FROM Organizations O LEFT JOIN Donors D ON O.org_id = D.org_id GROUP BY O.org_name ORDER BY total_donors DESC;
SELECT w1.country, SUM(w1.installed_capacity) as total_capacity FROM wind_energy w1 WHERE w1.country IN ('Germany', 'France') GROUP BY w1.country;
CREATE VIEW Spacecraft_Missions AS SELECT name, COUNT(*) as missions FROM Spacecraft_Manufacturing JOIN Missions ON Spacecraft_Manufacturing.name = Missions.spacecraft;SELECT country, SUM(missions) FROM Spacecraft_Missions GROUP BY country;
SELECT year, gender, COUNT(*) as num_hires FROM faculty_hires GROUP BY year, gender;
SELECT SUM(events) FROM public_participation_events WHERE region = 'Africa' AND year = 2019;
SELECT site, AVG(visitors) as avg_visitors FROM cultural_sites WHERE country = 'Australia' GROUP BY site;
SELECT COUNT(*) FROM CulturalHeritage WHERE country = 'Japan' AND has_virtual_tour = true;
SELECT player_name, home_runs FROM mlb_players WHERE country = 'Japan' ORDER BY home_runs DESC LIMIT 1;
SELECT type, COUNT(*) as count FROM vulnerabilities GROUP BY type ORDER BY count DESC LIMIT 5;
UPDATE disability_services_office dso SET phone = '555-123-4567', email = 'ds@campus.edu' WHERE campus_id = (SELECT id FROM campus WHERE name = 'Campus Name');
SELECT service_name, COUNT(*) AS count FROM legal_aid_services GROUP BY service_name ORDER BY count DESC LIMIT 1;
SELECT AVG(age) FROM patients WHERE treatment LIKE '%CBT%' AND treatment LIKE '%Medication%' AND treatment_year = 2022;
SELECT MI.Item_Name, L.Location_Name, AVG(Revenue) as Avg_Revenue FROM Revenue_By_Item RBI JOIN Menu_Items MI ON RBI.Item_ID = MI.Item_ID JOIN Locations L ON RBI.Location_ID = L.Location_ID GROUP BY MI.Item_Name, L.Location_Name;
SELECT vehicle_type, SUM(accessible) as number_of_accessible_vehicles, SUM(NOT accessible) as number_of_non_accessible_vehicles FROM vehicle_accessibility GROUP BY vehicle_type;
SELECT customer_id, transaction_amount FROM transactions WHERE country = 'France' AND transaction_amount > 100;
SELECT MIN(launch_date) FROM Missions WHERE company = 'GalacticExplorers';
SELECT a.species FROM animals a JOIN habitats h ON a.id = h.animal_id GROUP BY a.species HAVING COUNT(DISTINCT h.name) = SUM(CASE WHEN a.population > 1000 THEN 1 ELSE 0 END);
SELECT Habitat, SUM(Efforts) FROM HabitatPreservation WHERE Year >= 2017 GROUP BY Habitat ORDER BY SUM(Efforts) DESC;
INSERT INTO esports_tournaments (id, name, game_name, location, start_date, end_date) VALUES (1, 'Tournament A', 'Game X', 'USA', '2023-01-01', '2023-01-03');
SELECT AVG(price) FROM Events WHERE city = 'Paris' AND country = 'France';
SELECT journalist, COUNT(*) FROM ethics WHERE country = 'Australia' GROUP BY journalist HAVING COUNT(*) > 10;
DELETE FROM districts WHERE id NOT IN (SELECT district_id FROM schools);
DELETE FROM sales_data WHERE total_cost > 50000000;
ALTER TABLE teams DROP COLUMN league;
SELECT COUNT(*) FROM marine_species WHERE discovery_date >= '2017-01-01' AND discovery_date < '2022-01-01' AND location = 'Arctic Circle';
SELECT MIN(YEAR(GETDATE()) - YEAR(birth_date)) FROM patients WHERE patients.country = 'Japan' AND patients.condition LIKE '%Eating Disorder%';
SELECT SUM(population) FROM polar_bear_population WHERE country IN ('Canada', 'Russia');
SELECT MIN(budget) FROM projects WHERE focus = 'digital divide';
SELECT v.state, v.rate, m.spending FROM veteran_unemployment v INNER JOIN military_spending m ON v.state = m.state WHERE v.quarter = 4 AND v.year = 2021;
SELECT AVG(engagement) FROM virtual_tours_europe vt JOIN locations_europe l ON vt.location = l.location WHERE l.region = 'Europe' AND vt.month = 'July';
SELECT MIN(balance) FROM customers WHERE region = 'East';
SELECT DISTINCT supplier_products.supplier_id FROM supplier_products WHERE supplier_products.organic = true AND supplier_products.supplier_id NOT IN (SELECT supplier_id FROM supplier_products WHERE supplier_products.organic = false);
SELECT SUM(total_cost) FROM nasa_mars_program WHERE name = 'Mars Exploration Program';
SELECT s.state_name, h.hospital_name, h.satisfaction_score, AVG(h.satisfaction_score) OVER (PARTITION BY h.state_id) AS avg_score FROM hospitals h JOIN states s ON h.state_id = s.state_id;
SELECT booking_channel, SUM(revenue) FROM bookings GROUP BY booking_channel;
SELECT COUNT(*) FROM investments WHERE sector = 'Renewable Energy' AND date >= '2015-01-01';
SELECT SUM(allocationAmount) FROM BudgetAllocations WHERE fiscalYear = 2022 AND allocationType = 'Disability Services';
SELECT MAX(meals.price) FROM meals WHERE meals.vegan = true AND meals.restaurant_type = 'fine dining';
SELECT manufacturer, SUM(quantity) as total_quantity FROM africa_sales WHERE location = 'Africa' AND sale_date BETWEEN '2022-07-01' AND '2022-09-30' GROUP BY manufacturer ORDER BY total_quantity DESC LIMIT 1;
SELECT c.customer_name, SUM(t.transaction_amount) as total_transaction_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE transaction_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY c.customer_name ORDER BY total_transaction_amount DESC;
SELECT vendor FROM farming_equipment_vendors WHERE region = 'Europe' AND product_count > 15;
SELECT COUNT(*) FROM vendors WHERE vendors.partnership = TRUE AND vendors.country LIKE '%Latin America%';
SELECT element, MIN(transparency) AS min_transparency FROM supply_chain_transparency GROUP BY element;
SELECT union_id, COUNT(member_id) FROM Union_Members WHERE safety_rating > 8.5 GROUP BY union_id;
SELECT o.org_name, AVG(i.sentence_length) FROM inmates i INNER JOIN legal_organizations o ON i.org_id = o.org_id GROUP BY o.org_name;
SELECT site_name, visitors FROM sites WHERE country = 'Italy' AND year = 2021 AND visitors > 30000;
SELECT COUNT(clinical_trials.id) FROM clinical_trials JOIN companies ON clinical_trials.company_id = companies.id;
SELECT product_name FROM sustainable_fashion_prices WHERE is_sustainable = true ORDER BY price DESC LIMIT 1;
SELECT year, COUNT(*) FROM innovation_patents WHERE country IN ('Nigeria', 'Kenya', 'Ghana', 'South Africa', 'Tanzania') GROUP BY year;
SELECT shade, COUNT(*) AS preference_count FROM consumer_preferences WHERE product_id = 1 AND country = 'USA' GROUP BY shade ORDER BY preference_count DESC LIMIT 1;
SELECT region, initiatives FROM access_by_region;
UPDATE education SET end_date = '2023-12-31' WHERE id = 2;
SELECT AVG(players.age) FROM players INNER JOIN vr_adopters ON players.id = vr_adopters.player_id WHERE vr_adopters.date >= DATEADD(month, -6, GETDATE()) AND players.country IN ('South Africa', 'Nigeria', 'Egypt');
SELECT route_id, SUM(revenue) as total_revenue FROM route_revenue WHERE EXTRACT(MONTH FROM order_date) BETWEEN 4 AND 6 GROUP BY route_id ORDER BY total_revenue ASC LIMIT 5;
SELECT p.PIName, AVG(g.GrantAmount) as AvgGrantAmount FROM PIs p JOIN Grants g ON p.PIID = g.PIID GROUP BY p.PIName;
SELECT AVG(temperature) FROM temperature_data WHERE region = 'Antarctic' AND year = 2020;
SELECT COUNT(*) FROM startups s JOIN exits e ON s.id = e.startup_id WHERE s.founder_immigrant = true;
SELECT region, laborers FROM construction_labor_statistics WHERE year = 2020 GROUP BY region;
SELECT AVG(weight) FROM cosmetics_sales WHERE packaging_material = 'plastic' AND sale_country = 'USA';
SELECT state, COUNT(DISTINCT disease) FROM infectious_diseases GROUP BY state;
SELECT COUNT(*) FROM renewable_projects_2 WHERE country = 'Australia';
SELECT AVG(duration) FROM teletherapy_sessions WHERE condition = 'Anxiety' AND state = 'Illinois' AND quarter = 2 AND year = 2022;
SELECT COUNT(*) FROM africa.customer_support WHERE used_ai_chatbot = TRUE;
SELECT * FROM freight_forwarding WHERE customer_name = 'ABC Corp';
SELECT SUM(budget) FROM Education_Programs;
SELECT SUM(donation_amount) FROM museum_donations WHERE EXTRACT(MONTH FROM donation_date) = 6;
SELECT country, MAX(size) - MIN(size) as size_range FROM properties WHERE is_co_owned = true GROUP BY country;
SELECT SUM(expenditure) FROM rd_expenses WHERE company IN ('PharmaCorp', 'BioTech Ltd') AND year = 2021;
INSERT INTO community_health_workers (state, race_ethnicity, workers) VALUES ('Texas', 'Hispanic', 2);
INSERT INTO dispensaries (dispensary_id, name, address) VALUES (501, 'Buds & Beyond', '123 Main St');
SELECT SUM(budget) FROM innovation_projects WHERE country = 'Rwanda' AND YEAR(start_date) = 2022;
SELECT SUM(quantity) FROM military_equipment_sales WHERE supplier = 'Lockheed Martin' AND purchaser = 'India' AND sale_year = 2020;
SELECT STDDEV(Age) FROM Players WHERE GameType = 'Action';
SELECT EXTRACT(QUARTER FROM report_date) AS quarter, COUNT(*) FROM threat_intelligence WHERE YEAR(report_date) = 2019 GROUP BY quarter;
SELECT project_name FROM rural_projects WHERE budget <= 50000;
SELECT country, COUNT(*) as total_incidents FROM CybersecurityIncidents WHERE YEAR(incident_date) = 2020 AND country IN ('Germany', 'France', 'UK') GROUP BY country;
SELECT supplier_name, compliance_score, RANK() OVER (ORDER BY compliance_score DESC) as rank FROM suppliers;
SELECT COUNT(*) FROM pollution_control_initiatives WHERE region = 'Mediterranean Sea';
SELECT champion, killer_champion, COUNT(*) as num_deaths, RANK() OVER (PARTITION BY champion ORDER BY COUNT(*) DESC) as rank FROM lolgames GROUP BY champion, killer_champion
SELECT MIN(price) FROM price_data WHERE element = 'Samarium';
UPDATE organizations SET primary_focus = 'Climate Change' WHERE name = 'Greenpeace';
SELECT Factories.name FROM Factories INNER JOIN (SELECT factory_id, COUNT(*) as product_count FROM Factory_Products WHERE is_fair_trade_certified = true GROUP BY factory_id) AS Subquery ON Factories.id = Subquery.factory_id ORDER BY Subquery.product_count DESC LIMIT 1;
SELECT species_name, SUM(biomass) as total_biomass FROM biomass_measurements JOIN marine_species ON biomass_measurements.species_id = marine_species.species_id GROUP BY species_name;
SELECT COUNT(*) FROM CSGOPlayers WHERE (Wins / (Wins + Losses)) > 0.7 AND Game = 'CS:GO';
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Employees)) FROM Employees WHERE Disability = 'Yes' AND Training = 'Accessibility';
SELECT (COUNT(*) FILTER (WHERE RecurringDonor = true)) * 100.0 / COUNT(*) as RecurringDonorPercentage FROM DonorInfo WHERE DonationYear = 2023;
SELECT m.name, m.conservation_status FROM marine_species m INNER JOIN marine_pollution mp ON m.region = mp.region WHERE mp.pollution_level > 70;
SELECT system_name, cvss_score FROM (SELECT system_name, cvss_score, ROW_NUMBER() OVER (ORDER BY cvss_score DESC) as rank FROM systems WHERE last_updated >= DATEADD(month, -1, CURRENT_TIMESTAMP)) subquery WHERE rank <= 5;
SELECT region FROM attorney_precedents WHERE attorney_id = 123 GROUP BY region;
SELECT name, SUM(appointments) as total_appointments FROM community_health_workers WHERE state = 'California' GROUP BY name ORDER BY total_appointments DESC LIMIT 5;
SELECT COUNT(*) FROM healthcare_workers h INNER JOIN rural_hospitals r ON h.hospital_id = r.id WHERE r.state = 'California';
SELECT COUNT(DISTINCT vessels.id) FROM vessels JOIN vessel_locations ON vessels.id = vessel_locations.vessel_id WHERE vessels.country = 'Canada' AND location LIKE '%US Gulf%' AND timestamp > DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH)
SELECT f.country, AVG(f.sustainability_score) AS avg_sustainability_score, m.manufacturing_cost FROM fabrics f CROSS JOIN (SELECT '2022-01-01' AS date, SUM(cost) AS manufacturing_cost FROM manufacturing WHERE fabric_id = f.id) m GROUP BY f.country HAVING AVG(f.sustainability_score) = (SELECT MIN(avg_sustainability_score) FROM (SELECT AVG(sustainability_score) AS avg_sustainability_score FROM fabrics GROUP BY country) t);
INSERT INTO SustainableFish (date, temperature) VALUES ('2022-04-01', 20.0);
SELECT material FROM (SELECT material, ROW_NUMBER() OVER (ORDER BY usage) AS rank FROM Materials) AS ranked_materials WHERE rank = 1;
SELECT name, inspection_date, score FROM Inspections i JOIN Restaurants r ON i.restaurant_id = r.id WHERE score = (SELECT MIN(score) FROM Inspections);
SELECT country, COUNT(*) as article_count FROM News GROUP BY country ORDER BY article_count DESC LIMIT 3;
SELECT COUNT(c.id) FROM Companies c JOIN Underrepresented_Minorities m ON c.founders LIKE CONCAT('%', m.minority, '%') WHERE c.industry = 'Food';
SELECT SUM(m.cases) FROM malaria_cases m JOIN countries c ON m.country = c.name WHERE c.region = 'Africa' AND m.year = 2021;
SELECT AVG(Audience.Age) FROM Audience INNER JOIN Events ON Audience.EventID = Events.EventID INNER JOIN Artists ON Events.ArtistID = Artists.ArtistID WHERE Artists.ArtistName = 'Picasso';
SELECT LAG(investment, 1, 0) OVER (PARTITION BY country ORDER BY year) as prev_investment, investment, investment - LAG(investment, 1, 0) OVER (PARTITION BY country ORDER BY year) as change FROM shariah_compliant_finance WHERE year = 2021 AND country IN ('Malaysia', 'Indonesia');
SELECT Species.name FROM Species INNER JOIN Biodiversity ON Species.id = Biodiversity.species_id GROUP BY Species.name HAVING COUNT(DISTINCT Biodiversity.station_id) > 1;
SELECT DISTINCT method FROM org_comms WHERE org_size IN ('medium', 'extra_large');
SELECT factory_location, SUM(product_quantity) as total_quantity FROM manufacturing JOIN factories ON manufacturing.factory_id = factories.factory_id WHERE manufacture_date >= '2022-01-01' AND manufacture_date < '2022-02-01' GROUP BY factory_location;
SELECT region, COUNT(fish_count) FROM FishRegion WHERE survival_rate > 90 GROUP BY region;
INSERT INTO subscribers(id, technology, type) VALUES (4, 'LTE', 'mobile'), (5, 'LTE', 'mobile');
SELECT SUM(Budget) FROM Departments WHERE Budget > (SELECT AVG(Budget) FROM Departments);
SELECT AVG(capacity) FROM wind_farms WHERE country = 'Germany';
UPDATE Exhibitions SET end_date = '2024-12-31' WHERE exhibition_name = 'Art of the Indigenous';
SELECT year, SUM(quantity * sale_price) FROM military_equipment_sales GROUP BY year;
SELECT * FROM CityOfSustainability.RainwaterHarvestingBuildings;
SELECT AVG(horsepower) FROM Vehicles WHERE country = 'Japan';
SELECT project, budget FROM (SELECT project, budget, RANK() OVER (PARTITION BY region ORDER BY budget DESC) AS rank FROM tech_social_good WHERE region = 'APAC') WHERE rank <= 2;
SELECT state, COUNT(*) FROM mental_health_facilities WHERE state = 'Colorado' GROUP BY state;
SELECT Genre, COUNT(*) AS Popularity FROM Players INNER JOIN Players_Games ON Players.PlayerID = Players_Games.PlayerID INNER JOIN Games ON Players_Games.GameID = Games.GameID WHERE Players.Country = 'Japan' GROUP BY Genre ORDER BY Popularity DESC LIMIT 1;
SELECT MIN(EXTRACT(EPOCH FROM call_time - LAG(call_time) OVER (PARTITION BY location ORDER BY call_time)) / 60) FROM emergency_calls WHERE location = 'central' AND EXTRACT(MONTH FROM call_time) = 8;
SELECT Programs.ProgramName, Programs.Budget FROM Programs;
SELECT * FROM schema1.vulnerabilities ORDER BY date_discovered DESC LIMIT 5;
SELECT package_id, region, distribution_date, LEAD(distribution_date) OVER (PARTITION BY region ORDER BY distribution_date) as next_distribution_date FROM aid_distributions;
SELECT state, COUNT(*) as count, MIN(financial_capability_score) as min_score, AVG(financial_capability_score) as avg_score, MAX(financial_capability_score) as max_score FROM customers WHERE state = 'New York' GROUP BY state;
SELECT COUNT(*) FROM CourtCases WHERE Year BETWEEN 2019 AND 2021 AND Reason = 'Lack of Evidence';
SELECT sale_date, AVG(units_sold) OVER (ORDER BY sale_date ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as moving_average FROM sales_data;
SELECT ROUND(100.0 * COUNT(*) / (SELECT COUNT(*) FROM broadband_subscribers), 2) AS percentage FROM broadband_subscribers INNER JOIN broadband_plans ON broadband_subscribers.plan_id = broadband_plans.plan_id WHERE speed < (SELECT speed FROM recommended_speeds WHERE activity = 'Streaming');
SELECT player, SUM(points) as total_points FROM nba_games GROUP BY player ORDER BY total_points DESC;
SELECT program_category FROM program_categories WHERE program_category NOT IN (SELECT program_category FROM program_donations_time WHERE donation_date IS NOT NULL AND donation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH));
INSERT INTO social_enterprises (id, category, ESG_rating, risk_score) VALUES (7, 'Housing', 9.0, 1.8);
SELECT SUM(funding.amount) FROM founder JOIN funding ON founder.id = funding.startup_id WHERE (founder.gender = 'Female' AND founder.ethnicity = 'Latinx') OR (founder.gender = 'Male' AND founder.LGBTQ_status = 'Yes') OR (founder.gender = 'Female' AND founder.ethnicity = 'Black') AND funding.round <> 'Seed' AND founder.id IN (SELECT s.id FROM startup s WHERE s.industry = 'EdTech');
SELECT MIN(price) FROM terbium_prices WHERE region = 'China' OR region = 'Japan' OR region = 'India';
SELECT region, AVG(response_time) FROM security_incidents WHERE organization LIKE '%Government%' AND incident_date >= '2022-07-01' AND incident_date < '2022-10-01' GROUP BY region;
SELECT SUM(Change) FROM Policy WHERE Year IN (2020, 2021);
SELECT country, AVG(num_beds) FROM rural_hospitals GROUP BY country;
SELECT MIN(area) FROM green_buildings;
SELECT AVG(HouseholdIncome) FROM Households H WHERE H.HouseholdMembers = 4 AND H.HouseholdState = 'New York';
SELECT COUNT(*) FROM clients WHERE financial_wellbeing_score > 70;
SELECT p.region, p.year, p.population, LAG(p.population) OVER (PARTITION BY p.region ORDER BY p.year) as prev_year_population FROM population p;
SELECT COUNT(DISTINCT um.union_id) FROM union_members um INNER JOIN unions u ON um.union_id = u.union_id WHERE u.involved_in_cb = true;
SELECT recycling_rate FROM recycling_rates WHERE city = 'London' AND year = 2021;
SELECT f.festival_id, f.location, f.attendance, v.platform FROM CulturalFestivals f JOIN VirtualExperiences v ON f.festival_id = v.festival_id WHERE f.attendance > 7500;
SELECT organizations.name, organizations.type, organizations.location FROM organizations WHERE organizations.location = 'India' AND organizations.type = 'Non-profit';
UPDATE worker_safety_scores SET score = 8.7, audit_year = 2022 WHERE brand = 'BrandA'; UPDATE worker_safety_scores SET score = 9.3, audit_year = 2022 WHERE brand = 'BrandB'; UPDATE worker_safety_scores SET score = 9.1, audit_year = 2022 WHERE brand = 'BrandC';
SELECT SUM(orders.quantity * products.price) FROM orders JOIN products ON orders.product_id = products.id WHERE products.natural = TRUE;
SELECT Team, AVG(Kills) AS AvgKillsPerGame FROM GameStats GROUP BY Team;
SELECT name, position FROM healthcare_staff WHERE gender = 'Female';
SELECT A.type, SUM(TT.trips) as Total_Trips FROM Transportation_Trips TT JOIN Areas A ON TT.area_id = A.id WHERE TT.year = 2020 GROUP BY A.type;
INSERT INTO sites (site_id, state, num_workers, acres) VALUES (101, 'TX', 50, 120.5), (102, 'TX', 75, 150.3);
SELECT * FROM Esports_Events WHERE PrizePool > (SELECT MAX(PrizePool) FROM Esports_Events_NA);
SELECT SUM(revenue) FROM ai_hotel_revenue_europe WHERE region = 'Europe' AND year = 2022 AND has_ai = true;
UPDATE threats SET severity = 'medium' WHERE threat_id = 1;
SELECT m.Metric, MAX(mhs.MentalHealthScore) as Max_Score FROM MentalHealthScores mhs JOIN HealthEquityMetrics m ON mhs.MetricID = m.MetricID GROUP BY m.Metric;
SELECT volunteer_id, SUM(hours) as total_hours FROM Volunteers WHERE volunteer_date BETWEEN '2022-01-01' AND '2022-06-30' GROUP BY volunteer_id;
SELECT brand FROM brands WHERE id NOT IN (SELECT brand FROM brand_products WHERE has_natural_ingredients = true);
INSERT INTO StudentDiversity (ethnicity, gender, total_students) VALUES ('Asian', 'Female', 1200), ('Asian', 'Male', 1500), ('Black', 'Female', 800), ('Black', 'Male', 1000), ('Hispanic', 'Female', 900), ('Hispanic', 'Male', 1100), ('White', 'Female', 2000), ('White', 'Male', 2500);
SELECT AVG(price) FROM erbium_transactions WHERE country IN ('China', 'Japan') AND element = 'Erbium';
SELECT ownership, SUM(num_beds) as total_beds FROM australian_hospitals GROUP BY ownership;
SELECT COUNT(*) FROM SustainableBuildings WHERE state = 'Oregon' AND year = 2020;
SELECT MAX(songs), name FROM albums WHERE genre = 'Jazz';
UPDATE Policy SET policyholder_state = 'NY' WHERE policy_id IN (101, 102, 103);
SELECT AVG(rating) FROM attractions WHERE city = 'Tokyo';
SELECT Region, AVG(Salary) as AvgSalary FROM ConstructionSalaries WHERE Industry = 'Construction' GROUP BY Region;
SELECT Industry, ViolationCount FROM Violations WHERE Industry = 'Textile' AND ViolationDate >= DATE('2022-01-01') AND ViolationDate < DATE('2022-04-01') ORDER BY ViolationCount;
DELETE FROM artifacts WHERE artifact_id = 654;
SELECT SUM(sale_value) FROM military_sales WHERE region = 'India' AND sale_date BETWEEN '2021-01-01' AND '2021-06-30';
SELECT AVG(billable_hours) as avg_billable_hours FROM time_tracking JOIN attorneys ON time_tracking.attorney = attorneys.name WHERE attorneys.region = 'nyc';
SELECT ad_id, MAX(impressions) FROM ad_impressions GROUP BY ad_id;
SELECT SUM(quantity * price) FROM sales WHERE is_cruelty_free = true AND (sale_date BETWEEN '2022-01-01' AND '2022-12-31') AND (country IN ('US', 'Canada'));
SELECT SUM(amount) FROM Donations WHERE region = 'Great Lakes' AND donation_year = 2020;
SELECT AVG(floors) FROM building_info WHERE building_type = 'Residential' AND state = 'California';
INSERT INTO accessibility_audits (university, score, audit_date) VALUES ('University of California, Berkeley', 90, '2022-01-01');
SELECT SUM(budget) FROM programs WHERE category = 'Environment';
SELECT AVG(review_score) FROM hotels WHERE city = 'Paris' AND country = 'France';
SELECT AVG(attendance) FILTER (WHERE budget > 100000) AS avg_attendance_over_100k, AVG(attendance) AS overall_avg_attendance FROM events
SELECT borough, COUNT(*) as violation_count, SUM(fine_amount) as total_fine FROM nyc_inspections WHERE violation_date >= '2020-01-01' AND violation_date < '2021-01-01' GROUP BY borough;
SELECT recycling_rate FROM recycling_rates WHERE material = 'metal' AND (year = 2018 OR year = 2019);
SELECT MAX(cases) FROM infectious_disease_tracking;
SELECT * FROM irrigation_systems WHERE manufacturer != 'Hunter';
SELECT SUM(watch_time) FROM video_views WHERE video_type = 'news' AND view_date >= DATEADD(month, -1, GETDATE()) AND country = 'Asia' AND disinformation_score < 4;
SELECT materials.material_name, SUM(materials.quantity) as total_quantity FROM road_materials JOIN materials ON road_materials.material_id = materials.material_id JOIN roads ON road_materials.road_id = roads.road_id WHERE roads.state = 'Texas' GROUP BY materials.material_name ORDER BY total_quantity DESC LIMIT 3;
SELECT COUNT(*), category FROM national_security_incidents WHERE region = 'Europe' AND incident_date >= DATE_SUB(CURDATE(), INTERVAL 3 YEAR) GROUP BY category;
SELECT COUNT(*) FROM articles WHERE newspaper = 'The Hindu' AND category = 'Politics' AND YEAR(publication_date) = 2021;
ALTER TABLE donors ADD COLUMN gender VARCHAR(1);
SELECT product_category, SUM(sales) / (SELECT SUM(sales) FROM sales WHERE sale_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 WEEK)) FROM sales WHERE sale_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 WEEK) GROUP BY product_category;
INSERT INTO menu_items (item_name, price) VALUES ('Tofu Stir Fry', 11.99);
SELECT AVG(Age) FROM Archeologists;
WITH cte AS (DELETE FROM Workers WHERE Salary > 90000 AND Industry = 'oil' RETURNING *) UPDATE Workers SET Salary = Salary * 1.05 WHERE Industry = 'oil';
SELECT Department, AVG(Salary) FROM Employees WHERE CompletedDiversityTraining = TRUE GROUP BY Department;
DELETE FROM patient_visits WHERE patient_id IN (SELECT patient_id FROM patient_visits p JOIN (SELECT patient_id, MAX(last_visit_date) AS max_date FROM patient_visits WHERE clinic_id IN (SELECT clinic_id FROM rural_clinics WHERE state = 'Arizona') GROUP BY patient_id) t ON p.patient_id = t.patient_id AND p.last_visit_date < t.max_date - INTERVAL '6 month');
SELECT d.name, rg.pi_gender, SUM(rg.amount) FROM research_grants rg JOIN departments d ON rg.department_id = d.id WHERE rg.year BETWEEN 2017 AND 2021 GROUP BY d.name, rg.pi_gender;
SELECT COUNT(*) FROM vessels WHERE capacity > 7000 AND company_id = (SELECT id FROM companies WHERE name = 'PQR Marine');
SELECT name FROM dapps WHERE category = 'Exchange' AND country = 'Country3';
SELECT gg.Genre, SUM(gs.Revenue) as TotalRevenue FROM GameSales gs INNER JOIN GameGenres gg ON gs.Genre = gg.Genre GROUP BY gg.Genre;
SELECT network_type, COUNT(*) FROM subscriber_details WHERE network_type IN ('4G', '5G') GROUP BY network_type;
SELECT a.type, e.standard, AVG(a.rating) as avg_rating FROM appliances a INNER JOIN energy_efficiency_standards e ON a.standard = e.standard WHERE e.year BETWEEN 2015 AND 2020 GROUP BY a.type, e.standard;
SELECT max_speed FROM Vessels WHERE name = 'Vessel B';
UPDATE Artifact SET Weight = 18.5 WHERE ArtifactID = '1' AND SiteID = 'I';
SELECT CuisineType, SUM(Revenue) FROM Restaurants WHERE CuisineType = 'Indian' GROUP BY CuisineType;
SELECT AVG(age) FROM tree_age WHERE forest_type = 'Tropical Dry Forest - Africa';
SELECT state, AVG(attendance_rate) as avg_attendance_rate FROM education_attendance WHERE event_date >= (CURRENT_DATE - INTERVAL '2 years') GROUP BY state;
SELECT SUM(revenue) FROM OnlineStore WHERE date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 365 DAY) AND CURRENT_DATE;
SELECT threat_type, AVG(DATEDIFF(day, incident_date, resolution_date)) as avg_days_to_resolve FROM security_incidents GROUP BY threat_type;
SELECT context.country, context.mineral, SUM(context.score) as total_score FROM context WHERE context.year = 2020 GROUP BY context.country, context.mineral;
SELECT location, AVG(cost) FROM AgriculturalInnovations WHERE status = 'Completed' GROUP BY location;
SELECT mineral, AVG(productivity) FROM worker_productivity GROUP BY mineral;
SELECT name, (successful_experiments * 100 / total_experiments) AS success_rate FROM ResearchProjects;
SELECT block_height, MAX(tx_gas_limit) as max_tx_gas_limit FROM block_transactions GROUP BY block_height;
SELECT mp.branch, COUNT(*) as total_personnel FROM military_personnel AS mp GROUP BY mp.branch;
SELECT constellation, AVG(distance_to_nearest_star) as Average_Distance FROM Astrophysics_Research GROUP BY constellation ORDER BY Average_Distance ASC;
SELECT AVG(size_ha) FROM community_development_initiatives WHERE country = 'Brazil';
SELECT D.dish_name, SUM(I.quantity) as total_quantity FROM Dishes D JOIN Ingredients I ON D.dish_id = I.dish_id GROUP BY D.dish_name;
SELECT supplier, SUM(quantity) as total_quantity FROM military_sales WHERE region = 'Asia-Pacific' AND quarter = 'Q3' AND year = 2022 GROUP BY supplier ORDER BY total_quantity DESC LIMIT 2;
SELECT COUNT(*) FROM Animals WHERE species = 'Walrus' AND location = 'Arctic Ocean';
SELECT MIN(quantity) FROM shipping_routes WHERE departure_country = 'Japan' AND arrival_country = 'South Korea' AND departure_region = 'Sea of Japan' AND arrival_region = 'Sea of Japan' AND transportation_method = 'Ship';
SELECT SUM(Inventory.quantity) FROM Inventory JOIN Orders ON Inventory.item_id = Orders.item_id WHERE (Orders.customer_country = 'USA' OR Orders.customer_country = 'Canada') AND Inventory.item_size = 16;
SELECT COUNT(*) FROM players WHERE game_id = 1 AND hours_played > 100;
SELECT country, COUNT(program) AS num_programs FROM carbon_offsets GROUP BY country;
SELECT SUM(inventory) FROM Chemicals WHERE origin_country = 'USA';
SELECT Victims.Name, Victims.Age FROM Victims INNER JOIN RestorativePrograms ON Victims.Id = RestorativePrograms.VictimId WHERE Victims.Age > 30;
SELECT residential.month, residential.usage - industrial.usage AS difference FROM water_usage_residential AS residential INNER JOIN water_usage_industrial AS industrial ON residential.month = industrial.month;
SELECT f.name, p.crop FROM Farmers f INNER JOIN Plots p ON f.id = p.farmer_id INNER JOIN ClimateTypes c ON f.location = c.country WHERE c.climate_type = 'Desert';
SELECT researcher_name, research_topic FROM ai_research WHERE researcher_location LIKE 'Africa%' AND research_topic LIKE 'Creative AI%';
UPDATE SkincarePrices SET price = 35.00 WHERE product_id = 1;
SELECT AVG(CulturalCompetencyScore) FROM CulturalCompetency;
SELECT operation_name, SUM(years_participated) as total_years_participated FROM peacekeeping_operations WHERE country = 'United States' GROUP BY operation_name ORDER BY total_years_participated DESC LIMIT 1;
SELECT SUM(type = 'Electric') + SUM(type = 'Autonomous') FROM autonomous_vehicles;
SELECT continent, COUNT(DISTINCT factory_id) FROM ethical_fashion.factories WHERE produces_sustainable = TRUE GROUP BY continent;
SELECT AVG(data_usage_gb) FROM customers WHERE state = 'New York';
SELECT director_gender, SUM(awards_won) as total_awards_won FROM awards WHERE release_year BETWEEN 2000 AND 2020 GROUP BY director_gender;
SELECT MAX(mass) FROM satellites WHERE country = 'India';
SELECT AVG(speed) FROM journeys;
SELECT * FROM patents WHERE country = 'United Kingdom';
SELECT SUM(capacity) FROM wind_farms WHERE country IN ('Germany', 'France') AND year = 2020;
SELECT s.species_name FROM animal_species s JOIN habitat_preservation h ON s.species_region = h.preservation_region WHERE h.preservation_year = 2022;
SELECT MAX(assistance_amount) FROM humanitarian_assistance.un_assistance;
SELECT alternative_therapy, COUNT(*) AS count FROM patients WHERE patients.gender = 'Male' AND patients.state = 'Texas' GROUP BY alternative_therapy ORDER BY count DESC LIMIT 1;
SELECT SUM(TicketsSold) FROM Concerts JOIN Artists ON Concerts.ArtistID = Artists.ArtistID WHERE Artists.Country = 'South Korea';
SELECT AVG(age) FROM RuralHealthFacility9 WHERE diagnosis = 'Arthritis';
SELECT SUM(severity) FROM vulnerabilities WHERE region = 'North America';
SELECT MIN(fare) FROM cable_cars WHERE region = 'Rio de Janeiro';
SELECT AVG(servicing_year) FROM legal_aid_servings WHERE serviced_state = 'Texas';
INSERT INTO ArtPieces (title, galleryId, year, value, artistId, artist) VALUES ('Untitled', NULL, 1939, 8000, 6, 'Frida Kahlo');
SELECT TAF.name FROM TraditionalArtForms TAF LEFT JOIN ArtPieces AP ON TAF.id = AP.art_form_id LEFT JOIN HeritageSites HS ON AP.site_id = HS.id WHERE HS.id IS NULL;
SELECT MAX(population) FROM health_facilities;
SELECT regions.region_name, SUM(violations.violation_count) FROM regions INNER JOIN violations ON regions.region_id = violations.region_id GROUP BY regions.region_name;
SELECT (COUNT(*) / (SELECT COUNT(*) FROM SecurityIncidents WHERE date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR))) * 100.0 AS percentage FROM SecurityIncidents WHERE type = 'Phishing' AND date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);
SELECT country, COUNT(*) as num_patents FROM patents WHERE year = 2019 AND patent_type = 'Military Innovation' GROUP BY country;
SELECT year, economic_impact FROM tourism_impact WHERE country = 'Costa Rica' ORDER BY year;
SELECT COUNT(*) FROM police_reports UNION ALL SELECT COUNT(*) FROM ninety_one_calls;
SELECT d.name, COUNT(p.id) as total_policies FROM departments d JOIN policies p ON d.id = p.department_id WHERE d.budget > 10000000 AND p.evidence_based = true GROUP BY d.name;
SELECT t.team_name, SUM(sts.sales) as total_sales FROM teams t JOIN season_ticket_sales sts ON t.team_id = sts.team_id WHERE t.conference = 'Western' GROUP BY t.team_name;
SELECT customers.name FROM customers JOIN loans ON customers.id = loans.customer_id WHERE loans.socially_responsible = TRUE;
SELECT COUNT(DISTINCT species) FROM tree_inventory WHERE diameter BETWEEN 30 AND 50;
SELECT COUNT(*) FROM exoplanets WHERE exoplanets.discovery_method = 'Transit';
INSERT INTO marine_conservation_initiatives (name, location, start_date, end_date) VALUES ('Coral Restoration Project', 'Great Barrier Reef', '2025-01-01', '2030-12-31');
SELECT SUM(billing_amount) FROM cases WHERE attorney_id IN (SELECT attorney_id FROM attorneys WHERE name = 'John Smith')
SELECT al.state_abbr, COUNT(p.provider_id) as dentist_count FROM providers p JOIN area_lookup al ON p.area_id = al.area_id WHERE p.provider_type = 'Dentist' AND al.area_type = 'Rural' GROUP BY al.state_abbr;
SELECT AVG(height) FROM Buildings WHERE city = 'Mumbai' AND height > 150
SELECT DISTINCT network_tech FROM network_investments;
SELECT State, MAX(COUNT(*)) FROM Workers WHERE IsSustainable=TRUE GROUP BY State;
SELECT material_type, SUM(amount) FROM waste_generation_syndey WHERE city = 'Sydney' GROUP BY material_type;
SELECT segment, price FROM (SELECT segment, price, ROW_NUMBER() OVER (PARTITION BY segment ORDER BY price DESC) AS rn FROM products) t WHERE t.segment = 'Natural' AND rn = 2;
SELECT Report, Rating FROM ThreatIntel WHERE Date BETWEEN '2022-01-01' AND '2022-01-31' GROUP BY Report ORDER BY Rating DESC LIMIT 2;
SELECT organization, SUM(amount) FROM donations GROUP BY organization;
SELECT w.ProgramName, p.Date, COUNT(*) as Total_Participants FROM Participants p JOIN WellbeingPrograms w ON p.ProgramID = w.ProgramID GROUP BY w.ProgramName, p.Date;
SELECT SUM(revenue) FROM concerts JOIN artists ON concerts.artist_id = artists.artist_id WHERE artists.country = 'Australia';
DELETE FROM tourist_sites WHERE country = 'Brazil' AND visitor_count < 5000;
SELECT ClaimAdjusters.Name FROM ClaimAdjusters INNER JOIN Claims ON ClaimAdjusters.AdjusterID = Claims.AdjusterID WHERE Claims.State = 'CA';
SELECT AVG(Users.Age) AS AvgAge, AVG(Users.RestingHeartRate) AS AvgRestingHeartRate FROM Users JOIN (SELECT UserID FROM Workouts WHERE Date >= DATEADD(day, -30, GETDATE()) GROUP BY UserID) AS RecentWorkouts ON Users.ID = RecentWorkouts.UserID WHERE Users.LastLogin IS NOT NULL AND Users.ID NOT IN (SELECT UserID FROM RecentWorkouts);
SELECT gender, COUNT(*) AS total  FROM Employees  GROUP BY gender;
SELECT passengers_served FROM passengers_by_station_and_line WHERE line_name = 'Green Line' AND station_name = 'Central';
INSERT INTO production_sites (site_name, safety_score, last_inspection_date) VALUES ('Site C', 88, '2022-01-10');
SELECT COUNT(*), AVG(duration) FROM financial_wellbeing_programs;
SELECT MAX(size) FROM habitats;
SELECT menu_category, SUM(sales) as total_sales FROM restaurant_sales WHERE date BETWEEN '2020-01-01' AND '2020-01-31' GROUP BY menu_category;
SELECT capacity_cubic_meters FROM landfills WHERE district_name = 'District C' AND year = 2021;
SELECT SUM(satellite_id) FROM satellites WHERE country IN ('Indonesia', 'Malaysia', 'Philippines', 'Singapore', 'Thailand', 'Brunei', 'Cambodia', 'Laos', 'Myanmar', 'Vietnam') AND type = 'Military';
SELECT district_name, SUM(num_students) as total_students FROM school_district GROUP BY district_name;
INSERT INTO smart_contracts (name, network) VALUES ('Contract4', 'Solana');
SELECT policy, SUM(violations) FROM policy_violations WHERE year = YEAR(CURRENT_DATE) - 1 GROUP BY policy ORDER BY SUM(violations) DESC;
SELECT AVG(M.Price) as AveragePriceOfSustainableMenuItems FROM Menu M INNER JOIN Restaurants R ON M.RestaurantID = R.RestaurantID INNER JOIN (SELECT RestaurantID, MAX(InspectionDate) as LastInspectionDate FROM Inspections GROUP BY RestaurantID) I ON R.RestaurantID = I.RestaurantID WHERE M.IsSustainable = 1 AND R.LastInspectionDate = I.LastInspectionDate AND I.ViolationCount = 0;
SELECT SUM(containers) FROM trips WHERE month BETWEEN 1 AND 4 AND year = 2021;
SELECT c.name, COUNT(f.id) FROM Farm f JOIN Continent c ON f.continent_id = c.id GROUP BY c.name ORDER BY COUNT(f.id) DESC;
SELECT team_name FROM nfl_teams WHERE mascot LIKE '%eagle%';
SELECT vehicle_type, SUM(maintenance_needed) as number_of_vehicles_in_need_of_maintenance FROM maintenance_stats GROUP BY vehicle_type;
SELECT COUNT(*), SUM(sustainable_projects.area) FROM properties, sustainable_projects JOIN cities ON properties.city_id = cities.city_id AND sustainable_projects.city_id = cities.city_id WHERE cities.city_name = 'Chicago';
SELECT name, (workers - living_wage_workers) AS non_living_wage_workers FROM factories;
SELECT SUM(cost) FROM raw_materials JOIN chemical_products ON raw_materials.date_purchased >= DATE_SUB(chemical_products.production_date, INTERVAL 1 MONTH);
SELECT d.department_name FROM Departments d LEFT JOIN Employees e ON d.department_id = e.department_id WHERE e.employee_id IS NULL;
SELECT Name, Age FROM GovernmentEmployees INNER JOIN EmployeePromotion ON GovernmentEmployees.EmployeeID = EmployeePromotion.EmployeeID WHERE YearsOfService > 20;
SELECT department, SUM(allocation) FROM budget_allocation WHERE year = 2023 GROUP BY department;
CREATE TABLE suppliers( supplier_id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), sustainability_score DECIMAL(3,2));
SELECT COUNT(*) FROM news WHERE YEAR(date) = 2021;
SELECT COUNT(*) FROM SpaceMissions WHERE leader_id IN (SELECT id FROM Astronauts WHERE nationality = 'Japan');
SELECT COUNT(*) FROM green_buildings.green_building_agency;
SELECT s.name FROM species s WHERE s.region IN ('Arctic', 'Antarctic') GROUP BY s.name HAVING COUNT(DISTINCT s.region) = 2;
SELECT SUM(cost) FROM space_missions WHERE launch_status != 'Success';
SELECT PolicyType, AVG(ClaimAmount) as AvgClaimAmount FROM Policyholder WHERE State = 'QC' AND PolicyType IN ('Home', 'Life') GROUP BY PolicyType ORDER BY AvgClaimAmount ASC;
SELECT COUNT(*), SUM(budget) FROM marine_research_projects WHERE location = 'Indian Ocean';
SELECT m.name, m.mineral, SUM(e.co2_emissions + e.water_consumption) as total_environmental_impact, COUNT(g.id) as total_surveys FROM mines m LEFT JOIN environmental_impact e ON m.id = e.mine_id LEFT JOIN geological_survey g ON m.id = g.mine_id WHERE m.mineral = 'Gold' GROUP BY m.name, m.mineral;
DELETE FROM autonomous_driving_research WHERE date < '2018-01-01';
SELECT COUNT(*) FROM wells WHERE company = 'ExxonMobil' AND region = 'North Sea';
SELECT Age, COUNT(*) FROM Astronauts GROUP BY Age;
SELECT COUNT(*) FROM factories;
UPDATE game_reviews SET rating = 5 WHERE game_name = 'Game1' AND region = 'Europe';
SELECT NumberOfCases FROM Diseases WHERE Disease = 'COVID-19' AND Country = 'India';
SELECT COUNT(*) FROM Volunteers WHERE program_name = 'program_x' AND (QUARTER(volunteer_date) = 2 OR QUARTER(volunteer_date) = 3);
SELECT project_name FROM smart_city_projects WHERE YEAR(end_date) = 2020;
SELECT SUM(revenue) FROM restaurants WHERE cuisine LIKE '%Vegan';
SELECT building_name, number_of_stories FROM buildings WHERE height > 300;
SELECT MIN(transaction_value) FROM social_impact_investments WHERE category = 'Gender Equality' AND region = 'Europe';
SELECT SUM(Streams) FROM Streaming WHERE Genre = 'K-pop' AND Country = 'South Korea' AND Quarter = 3 AND Year = 2021;
SELECT chemical_products.name, safety_protocols.protocol, plants.name AS plant_location FROM chemical_products JOIN safety_protocols ON chemical_products.id = safety_protocols.product_id JOIN plants ON safety_protocols.plant_id = plants.id;
SELECT COUNT(*) FROM Cases INNER JOIN Attorneys ON Cases.AttorneyID = Attorneys.AttorneyID WHERE Attorneys.YearsOfExperience > 10;
SELECT state, COUNT(*) FROM patients WHERE condition = 'Depression' AND medication = 'No' GROUP BY state;
SELECT SUM(capacity_mw) AS total_capacity, COUNT(*) FILTER (WHERE capacity_mw > 100) AS num_projects_over_100 FROM us_solar_projects;
SELECT AVG(donation_amount) FROM donors WHERE cause = 'Environment' AND donation_date BETWEEN '2022-01-01' AND '2022-03-31';
SELECT RegionName, SPLIT_STRING(IndustryRegulations, ',') as Regulations FROM Regions;
SELECT AVG(price) FROM Exhibitions WHERE exhibition_type = 'temporary';
SELECT AVG(account_balance) FROM customers WHERE age BETWEEN 18 AND 35;
SELECT AVG(length) FROM news_articles WHERE section = 'Diversity & Inclusion' AND publication_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);
UPDATE petitions SET title = UPPER(title) WHERE department_id IN (SELECT id FROM departments WHERE name = 'Education');
SELECT AVG(data_usage) FROM usage JOIN subscribers ON usage.subscriber_id = subscribers.subscriber_id WHERE YEAR(join_date) = 2021 AND QUARTER(join_date) = 1;
SELECT COUNT(DISTINCT user_id) FROM Users WHERE app_used = 'App C';
SELECT MIN(um.salary) FROM union_members um INNER JOIN unions u ON um.union_id = u.union_id WHERE u.focus = 'technology';
SELECT image_id FROM satellite_images WHERE farm_id = 'farm123' AND date >= DATEADD(day, -30, GETDATE());
SELECT Size, COUNT(*) FROM Customers WHERE Country = 'Africa' GROUP BY Size;
SELECT city, COUNT(*) as hotel_count FROM eco_friendly_hotels WHERE city IN (SELECT city FROM countries WHERE name = 'Spain') GROUP BY city;
UPDATE artifacts SET type = 'ceramic' WHERE id = 123;
SELECT city, installed_capacity, certification_level FROM renewable_energy_projects;
SELECT AVG(duration) FROM FilmLength WHERE genre IN ('Drama', 'Action');
SELECT MIN(balance) FROM customers WHERE city = 'Sydney';
SELECT description FROM public_health_policies WHERE policy_type = 'Vaccination' AND state = 'Florida';
SELECT city, SUM(amount) FROM network_investments WHERE investment_date BETWEEN '2021-01-01' AND '2021-03-31' GROUP BY city ORDER BY SUM(amount) DESC LIMIT 5;
SELECT initiative_name, city, reduction_amount, RANK() OVER (PARTITION BY city ORDER BY reduction_amount ASC) AS rank FROM carbon_offset_initiatives WHERE rank <= 3;
UPDATE patients SET treatment = 'DBT' WHERE name = 'Alice';
SELECT COUNT(DISTINCT c.customer_id) FROM transactions t JOIN customers c ON t.customer_id = c.customer_id WHERE t.amount > 1000.00;
UPDATE autonomous_driving_research SET autonomy_level = 3 WHERE make = 'Audi' AND model = 'A8';
SELECT AVG(accommodation_cost) FROM (SELECT accommodation_cost FROM disability_services WHERE student_disability = 'visual impairment' ORDER BY accommodation_cost) WHERE ROW_NUMBER() OVER (ORDER BY accommodation_cost) % 2 = 1;
SELECT MAX(wins) FROM wins WHERE game = 'Dragon Masters' AND win_date >= DATE_SUB(NOW(), INTERVAL 1 MONTH);
SELECT Category FROM Programs WHERE Budget > 15000.00;
SELECT COUNT(*) as total_employees FROM ethical_ai_employees WHERE ethical_ai = true;
SELECT AVG(water) FROM WaterConsumption WHERE product = 'Silk' AND material = 'Brazil';
SELECT brand FROM brand_material_ratings WHERE rating >= 4 GROUP BY brand HAVING COUNT(DISTINCT material) >= 1;
UPDATE sites SET acres = acres * 1.2 WHERE state = 'MT';
SELECT AthleteID, SocialMedia, Followers FROM (SELECT AthleteID, SocialMedia, Followers, ROW_NUMBER() OVER (ORDER BY Followers DESC) AS RN, COUNT(*) OVER () AS Total FROM AthleteSocialMedia) T WHERE RN = 1 OR RN = Total;
SELECT area_name, max_depth FROM marine_protected_areas ORDER BY max_depth DESC LIMIT 5;
CREATE VIEW top_5_goal_scorers AS SELECT athlete_id, games_played, goals_scored, assists, RANK() OVER (ORDER BY goals_scored DESC) as rank FROM athlete_stats;
SELECT MIN(co2_emissions), MAX(co2_emissions) FROM buildings;
SELECT COUNT(DISTINCT posts.user_id) FROM posts WHERE posts.timestamp >= DATE_SUB(CURRENT_DATE, INTERVAL 1 WEEK) HAVING COUNT(posts.id) > 5;
SELECT DISTINCT name, SUM(capacity) FROM energy_sources WHERE country = 'France' GROUP BY name;
SELECT r.state, AVG(r.age) FROM rural_patients r JOIN states s ON r.state = s.state_abbr WHERE r.diagnosis = 'diabetes' GROUP BY r.state;
SELECT COUNT(*) FROM (SELECT f.id FROM faculty f JOIN publications p ON f.id = p.faculty_id JOIN conferences c ON p.conference_id = c.id WHERE f.gender = 'Female' AND f.department = 'Computer Science' AND f.last_publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) AND c.tier = 'Top-tier') subquery;
UPDATE transactions SET value = 7000 WHERE hash = 'abc123';
SELECT state, SUM(co2_emissions) as total_emissions FROM co2_emissions WHERE sector = 'Energy' GROUP BY state ORDER BY total_emissions DESC LIMIT 3;
SELECT DISTINCT SizeOptions FROM ClothingItems WHERE ItemType = 'Women';
SELECT eq.element, SUM(eq.quantity) as total_quantity FROM element_quantity eq WHERE eq.year = 2017 GROUP BY eq.element;
SELECT SUM(quantity_containers) FROM vessels JOIN port ON vessels.port_id = port.port_id WHERE (port.port_name = 'Oakland' OR port.port_name = 'Seattle') AND vessels.year = 2020 AND vessels.quantity_containers >= 500;
SELECT region, AVG(price) AS avg_price FROM energy_prices WHERE date BETWEEN '2022-02-15' AND '2022-02-21' AND region = 'West' GROUP BY region;
SELECT name, AVG(daily_tx_volume) as avg_daily_tx_volume FROM (SELECT name, daily_tx_volume, RANK() OVER (ORDER BY daily_tx_volume DESC) as rank FROM digital_wallets WHERE region = 'Africa') x WHERE rank <= 10 GROUP BY name;
INSERT INTO MiningSites (SiteName, Location, EnvironmentalImpactScore) VALUES ('New Site 1', 'British Columbia', 60), ('New Site 2', 'British Columbia', 75);
SELECT vessel FROM Vessel_Movements VM JOIN (SELECT vessel, SUM(quantity) AS total_quantity FROM Vessel_Movements WHERE port = 'Japan' AND YEAR(time) = 2020 GROUP BY vessel) V ON VM.vessel = V.vessel WHERE V.total_quantity > 100;
SELECT COUNT(*) FROM mining_operations WHERE department = 'production';
SELECT s.state_abbreviation, COUNT(*) AS num_schools, 100.0 * SUM(CASE WHEN fl.has_free_lunch THEN 1 ELSE 0 END) / COUNT(*) AS pct_free_lunch FROM schools s JOIN free_lunch fl ON s.school_name = fl.school_name GROUP BY s.state_abbreviation;
SELECT COUNT(DISTINCT subscribers.id) FROM subscribers LEFT JOIN investments ON subscribers.id = investments.subscriber_id WHERE subscribers.service IN ('Mobile', 'Broadband') AND (investments.investment_date IS NULL OR investments.investment_date < DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH));
SELECT Country, COUNT(*) FROM FitnessCenters GROUP BY Country ORDER BY COUNT(*) DESC;
SELECT MAX(prize_pool) FROM esports_event WHERE region = 'Asia';
CREATE VIEW visitor_statistics_by_month AS SELECT country, year, month, SUM(visitors) AS total_visitors FROM visitor_statistics GROUP BY country, year, month;
UPDATE Spacecrafts SET Mass = 5500.5 WHERE Name = 'Stellar Voyager';
SELECT MAX(hours_worked + overtime_hours) FROM fair_labor_practices;
DELETE FROM processing_plants WHERE Europium_production < '2015-01-01';
SELECT MIN(Age) FROM Players WHERE VRGamePlayer = true;
SELECT MAX(HeartRate) FROM MemberWorkouts WHERE MemberID IN (SELECT MemberID FROM Members WHERE Gender = 'Female');
SELECT farm_id FROM (SELECT farm_id, production, LAG(production, 2) OVER (PARTITION BY farm_id ORDER BY year) AS lag_2, LAG(production, 1) OVER (PARTITION BY farm_id ORDER BY year) AS lag_1 FROM farm_production) AS subquery WHERE subquery.production < subquery.lag_1 AND subquery.lag_1 < subquery.lag_2;
DELETE FROM programs WHERE state = 'Florida' AND budget < 1000000;
SELECT Country, MAX(Year) AS RecentYear, SUM(Documents) AS TotalDocuments FROM PolicyDocuments GROUP BY Country ORDER BY RecentYear DESC;
SELECT dept_name, AVG(num_publications) AS avg_publications FROM faculties f JOIN departments d ON f.dept_id = d.dept_id GROUP BY dept_name ORDER BY avg_publications DESC;
SELECT COUNT(*) FROM products WHERE product_type = 'skincare' AND halal_certified = true AND product_name LIKE 'organic%';
SELECT EXTRACT(MONTH FROM DonationDate) as Month, COUNT(DISTINCT DonorID) as NewDonors FROM Donations d JOIN Donors don ON d.DonorID = don.DonorID WHERE DonationDate BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY Month;
SELECT AVG(DonationAmount) as AvgDonationPerDay FROM Donations WHERE DonationDate >= CURRENT_DATE - INTERVAL '30 days';
SELECT algorithm_name FROM fairness_algorithms;
SELECT city, MIN(cost) FROM city_roads GROUP BY city;
SELECT COUNT(*) FROM travel_advisories WHERE issued_date >= DATE_SUB(CURRENT_DATE, INTERVAL 12 MONTH);
SELECT * FROM accommodations WHERE state <> 'California';
SELECT name, budget FROM language_preservation GROUP BY name, budget ORDER BY budget DESC FETCH FIRST 10 ROWS ONLY;
SELECT species, max_depth FROM deep_sea_fish WHERE ocean = 'Indian Ocean'
SELECT SUM(biomass) FROM marine_life_research;
SELECT EXTRACT(MONTH FROM added_date) AS month, COUNT(*) AS count FROM algorithms WHERE added_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY month;
DELETE FROM funding_sources WHERE region = 'Europe' AND funding_type = 'equity';
SELECT region, MAX(recycling_rate) FROM Recycling_Rates WHERE region = 'East' GROUP BY region;
SELECT COUNT(*) FROM SafetyIncidents WHERE Region = 'Southwest' AND Timestamp BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH) AND CURRENT_DATE();
DELETE FROM vessel_movements WHERE movement_date = '2022-02-14';
SELECT (COUNT(*) FILTER (WHERE gender = 'Female' AND department = 'IT')) * 100.0 / (SELECT COUNT(*) FROM employees) AS percentage;
